public class com.android.internal.widget.multiwaveview.MultiWaveView extends android.view.View
{
    private static final int CHEVRON_ANIMATION_DURATION;
    private static final int CHEVRON_INCREMENTAL_DELAY;
    private static final boolean DEBUG;
    private static final int HIDE_ANIMATION_DELAY;
    private static final int HIDE_ANIMATION_DURATION;
    private static final int INITIAL_SHOW_HANDLE_DURATION;
    private static final int RETURN_TO_HOME_DELAY;
    private static final int RETURN_TO_HOME_DURATION;
    private static final float RING_SCALE_COLLAPSED;
    private static final float RING_SCALE_EXPANDED;
    private static final int SHOW_ANIMATION_DELAY;
    private static final int SHOW_ANIMATION_DURATION;
    private static final float SNAP_MARGIN_DEFAULT;
    private static final int STATE_FINISH;
    private static final int STATE_FIRST_TOUCH;
    private static final int STATE_IDLE;
    private static final int STATE_SNAP;
    private static final int STATE_START;
    private static final int STATE_TRACKING;
    private static final java.lang.String TAG;
    private static final float TAP_RADIUS_SCALE_ACCESSIBILITY_ENABLED;
    private static final float TARGET_SCALE_COLLAPSED;
    private static final float TARGET_SCALE_EXPANDED;
    private int mActiveTarget;
    private boolean mAlwaysTrackFinger;
    private boolean mAnimatingTargets;
    private com.android.internal.widget.multiwaveview.Tweener mBackgroundAnimator;
    private android.animation.TimeInterpolator mChevronAnimationInterpolator;
    private com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations;
    private java.util.ArrayList mChevronDrawables;
    private java.util.ArrayList mDirectionDescriptions;
    private int mDirectionDescriptionsResourceId;
    private boolean mDragging;
    private int mFeedbackCount;
    private int mGrabbedState;
    private int mGravity;
    private com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations;
    private com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable;
    private int mHorizontalInset;
    private boolean mInitialLayout;
    private int mMaxTargetHeight;
    private int mMaxTargetWidth;
    private int mNewTargetResources;
    private com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener;
    private float mOuterRadius;
    private com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing;
    private android.animation.Animator$AnimatorListener mResetListener;
    private android.animation.Animator$AnimatorListener mResetListenerWithPing;
    private float mSnapMargin;
    private float mTapRadius;
    private com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations;
    private java.util.ArrayList mTargetDescriptions;
    private int mTargetDescriptionsResourceId;
    private java.util.ArrayList mTargetDrawables;
    private int mTargetResourceId;
    private android.animation.Animator$AnimatorListener mTargetUpdateListener;
    private android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener;
    private int mVerticalInset;
    private int mVibrationDuration;
    private android.os.Vibrator mVibrator;
    private float mWaveCenterX;
    private float mWaveCenterY;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.Resources r3;
        android.content.res.TypedArray r4, r6;
        android.util.TypedValue r5, $r22, $r26, $r28;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.util.ArrayList r7, r9, $r11, $r14, $r27, $r29;
        com.android.internal.widget.multiwaveview.TargetDrawable r8, r10, $r23, $r24, $r25, $r34;
        android.animation.TimeInterpolator $r12;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle $r13, $r15, $r16;
        com.android.internal.widget.multiwaveview.MultiWaveView$2 $r17;
        com.android.internal.widget.multiwaveview.MultiWaveView$1 $r18;
        com.android.internal.widget.multiwaveview.MultiWaveView$4 $r19;
        com.android.internal.widget.multiwaveview.MultiWaveView$3 $r20;
        int[] $r21, $r31;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.IllegalStateException $r30, $r32, $r33;
        java.lang.Object $r35;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r12 = <com.android.internal.widget.multiwaveview.Ease$Quad: android.animation.TimeInterpolator easeOut>;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.TimeInterpolator mChevronAnimationInterpolator> = $r12;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables> = $r11;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mChevronDrawables> = $r14;

        $r13 = new com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle;

        specialinvoke $r13.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void <init>(com.android.internal.widget.multiwaveview.MultiWaveView,com.android.internal.widget.multiwaveview.MultiWaveView$1)>(r0, null);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations> = $r13;

        $r16 = new com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle;

        specialinvoke $r16.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void <init>(com.android.internal.widget.multiwaveview.MultiWaveView,com.android.internal.widget.multiwaveview.MultiWaveView$1)>(r0, null);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations> = $r16;

        $r15 = new com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle;

        specialinvoke $r15.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void <init>(com.android.internal.widget.multiwaveview.MultiWaveView,com.android.internal.widget.multiwaveview.MultiWaveView$1)>(r0, null);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations> = $r15;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount> = 3;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVibrationDuration> = 0;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mActiveTarget> = -1;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius> = 0.0F;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mSnapMargin> = 0.0F;

        $r18 = new com.android.internal.widget.multiwaveview.MultiWaveView$1;

        specialinvoke $r18.<com.android.internal.widget.multiwaveview.MultiWaveView$1: void <init>(com.android.internal.widget.multiwaveview.MultiWaveView)>(r0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.Animator$AnimatorListener mResetListener> = $r18;

        $r17 = new com.android.internal.widget.multiwaveview.MultiWaveView$2;

        specialinvoke $r17.<com.android.internal.widget.multiwaveview.MultiWaveView$2: void <init>(com.android.internal.widget.multiwaveview.MultiWaveView)>(r0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.Animator$AnimatorListener mResetListenerWithPing> = $r17;

        $r20 = new com.android.internal.widget.multiwaveview.MultiWaveView$3;

        specialinvoke $r20.<com.android.internal.widget.multiwaveview.MultiWaveView$3: void <init>(com.android.internal.widget.multiwaveview.MultiWaveView)>(r0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = $r20;

        $r19 = new com.android.internal.widget.multiwaveview.MultiWaveView$4;

        specialinvoke $r19.<com.android.internal.widget.multiwaveview.MultiWaveView$4: void <init>(com.android.internal.widget.multiwaveview.MultiWaveView)>(r0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.Animator$AnimatorListener mTargetUpdateListener> = $r19;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mGravity> = 48;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mInitialLayout> = 1;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r21 = <com.android.internal.R$styleable: int[] MultiWaveView>;

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r21);

        $f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $f2 = virtualinvoke r4.<android.content.res.TypedArray: float getDimension(int,float)>(6, $f0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius> = $f2;

        $f1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mSnapMargin>;

        $f3 = virtualinvoke r4.<android.content.res.TypedArray: float getDimension(int,float)>(8, $f1);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mSnapMargin> = $f3;

        $i6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVibrationDuration>;

        $i4 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(7, $i6);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVibrationDuration> = $i4;

        $i5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount>;

        $i8 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(9, $i5);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount> = $i8;

        $r23 = new com.android.internal.widget.multiwaveview.TargetDrawable;

        $r22 = virtualinvoke r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(3);

        $i7 = $r22.<android.util.TypedValue: int resourceId>;

        specialinvoke $r23.<com.android.internal.widget.multiwaveview.TargetDrawable: void <init>(android.content.res.Resources,int)>(r3, $i7);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable> = $r23;

        $r24 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        $i10 = virtualinvoke $r24.<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>();

        $i9 = $i10 / 2;

        $f4 = (float) $i9;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mTapRadius> = $f4;

        $r25 = new com.android.internal.widget.multiwaveview.TargetDrawable;

        $r26 = virtualinvoke r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(5);

        $i11 = $r26.<android.util.TypedValue: int resourceId>;

        specialinvoke $r25.<com.android.internal.widget.multiwaveview.TargetDrawable: void <init>(android.content.res.Resources,int)>(r3, $i11);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing> = $r25;

        $z1 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mAlwaysTrackFinger> = $z1;

        $r28 = new android.util.TypedValue;

        specialinvoke $r28.<android.util.TypedValue: void <init>()>();

        r5 = $r28;

        $z3 = virtualinvoke r4.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(4, r5);

        if $z3 == 0 goto label06;

        $i17 = r5.<android.util.TypedValue: int resourceId>;

        r7 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList loadDrawableArray(int)>($i17);

        i2 = 0;

     label01:
        $i18 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i2 >= $i18 goto label06;

        $r35 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r8 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r35;

        i3 = 0;

     label02:
        $i16 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount>;

        if i3 >= $i16 goto label05;

        r9 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mChevronDrawables>;

        if r8 != null goto label04;

        r10 = null;

     label03:
        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

        i3 = i3 + 1;

        goto label02;

     label04:
        $r34 = new com.android.internal.widget.multiwaveview.TargetDrawable;

        specialinvoke $r34.<com.android.internal.widget.multiwaveview.TargetDrawable: void <init>(com.android.internal.widget.multiwaveview.TargetDrawable)>(r8);

        r10 = $r34;

        goto label03;

     label05:
        i2 = i2 + 1;

        goto label01;

     label06:
        $z2 = virtualinvoke r4.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(2, r5);

        if $z2 == 0 goto label07;

        $i14 = r5.<android.util.TypedValue: int resourceId>;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void internalSetTargetResources(int)>($i14);

     label07:
        $r27 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        if $r27 == null goto label08;

        $r29 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $i12 = virtualinvoke $r29.<java.util.ArrayList: int size()>();

        if $i12 != 0 goto label09;

     label08:
        $r30 = new java.lang.IllegalStateException;

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must specify at least one target drawable");

        throw $r30;

     label09:
        $z4 = virtualinvoke r4.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(0, r5);

        if $z4 == 0 goto label11;

        i1 = r5.<android.util.TypedValue: int resourceId>;

        if i1 != 0 goto label10;

        $r32 = new java.lang.IllegalStateException;

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must specify target descriptions");

        throw $r32;

     label10:
        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void setTargetDescriptionsResourceId(int)>(i1);

     label11:
        $z5 = virtualinvoke r4.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>(1, r5);

        if $z5 == 0 goto label13;

        i0 = r5.<android.util.TypedValue: int resourceId>;

        if i0 != 0 goto label12;

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must specify direction descriptions");

        throw $r33;

     label12:
        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void setDirectionDescriptionsResourceId(int)>(i0);

     label13:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r31 = <android.R$styleable: int[] LinearLayout>;

        r6 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r31);

        $i13 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(0, 48);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mGravity> = $i13;

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        $i15 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVibrationDuration>;

        if $i15 <= 0 goto label15;

        z0 = 1;

     label14:
        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void setVibrateEnabled(boolean)>(z0);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void assignDefaultsIfNeeded()>();

        return;

     label15:
        z0 = 0;

        goto label14;
    }

    static float access$100(com.android.internal.widget.multiwaveview.MultiWaveView)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float $f0;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        $f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterX>;

        return $f0;
    }

    static float access$200(com.android.internal.widget.multiwaveview.MultiWaveView)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float $f0;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        $f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterY>;

        return $f0;
    }

    static void access$300(com.android.internal.widget.multiwaveview.MultiWaveView, int, float, float)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;
        float f0, f1;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void switchToState(int,float,float)>(i0, f0, f1);

        return;
    }

    static void access$400(com.android.internal.widget.multiwaveview.MultiWaveView)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void dispatchOnFinishFinalAnimation()>();

        return;
    }

    static com.android.internal.widget.multiwaveview.TargetDrawable access$500(com.android.internal.widget.multiwaveview.MultiWaveView)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        com.android.internal.widget.multiwaveview.TargetDrawable $r1;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        return $r1;
    }

    static int access$600(com.android.internal.widget.multiwaveview.MultiWaveView)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int $i0;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        $i0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mNewTargetResources>;

        return $i0;
    }

    static int access$602(com.android.internal.widget.multiwaveview.MultiWaveView, int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter1: int;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mNewTargetResources> = i0;

        return i0;
    }

    static void access$700(com.android.internal.widget.multiwaveview.MultiWaveView, int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void internalSetTargetResources(int)>(i0);

        return;
    }

    static void access$800(com.android.internal.widget.multiwaveview.MultiWaveView, boolean, boolean)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        boolean z0, z1;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void hideTargets(boolean,boolean)>(z0, z1);

        return;
    }

    static boolean access$902(com.android.internal.widget.multiwaveview.MultiWaveView, boolean)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mAnimatingTargets> = z0;

        return z0;
    }

    private void activateHandle(int, int, float, android.animation.Animator$AnimatorListener)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1;
        float f0;
        android.animation.Animator$AnimatorListener r1;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle r2, $r5, $r11;
        com.android.internal.widget.multiwaveview.TargetDrawable r3;
        long l2;
        java.lang.Object[] r4;
        android.animation.TimeInterpolator $r6;
        java.lang.Integer $r7;
        java.lang.Float $r8;
        com.android.internal.widget.multiwaveview.Tweener $r9;
        android.animation.ValueAnimator$AnimatorUpdateListener $r10;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        r1 := @parameter3: android.animation.Animator$AnimatorListener;

        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        virtualinvoke $r5.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void cancel()>();

        r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        l2 = (long) i0;

        r4 = newarray (java.lang.Object)[10];

        r4[0] = "ease";

        $r6 = <com.android.internal.widget.multiwaveview.Ease$Cubic: android.animation.TimeInterpolator easeIn>;

        r4[1] = $r6;

        r4[2] = "delay";

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r4[3] = $r7;

        r4[4] = "alpha";

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r4[5] = $r8;

        r4[6] = "onUpdate";

        $r10 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        r4[7] = $r10;

        r4[8] = "onComplete";

        r4[9] = r1;

        $r9 = staticinvoke <com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener 'to'(java.lang.Object,long,java.lang.Object[])>(r3, l2, r4);

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: boolean add(java.lang.Object)>($r9);

        $r11 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        virtualinvoke $r11.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void start()>();

        return;
    }

    private void announceTargets()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        java.lang.StringBuilder r1, $r4;
        int i0, i1, $i2;
        java.lang.String r2, r3, $r6, $r9;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object[] $r7;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.lang.String getTargetDescription(int)>(i1);

        r3 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.lang.String getDirectionDescription(int)>(i1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r2;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r3, $r7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label2:
        $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label3;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void announceText(java.lang.String)>($r6);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void announceText(java.lang.String)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void setContentDescription(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void sendAccessibilityEvent(int)>(8);

        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void setContentDescription(java.lang.CharSequence)>(null);

        return;
    }

    private void assignDefaultsIfNeeded()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float $f0, $f1, $f2, $f3, $f4;
        byte $b0, $b1;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        com.android.internal.widget.multiwaveview.TargetDrawable $r4, $r5;
        int $i2, $i3, $i4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        $i2 = virtualinvoke $r4.<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>();

        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        $i3 = virtualinvoke $r5.<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        $f4 = (float) $i4;

        $f3 = $f4 / 2.0F;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius> = $f3;

     label1:
        $f1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mSnapMargin>;

        $b1 = $f1 cmpl 0.0F;

        if $b1 != 0 goto label2;

        $r1 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f2 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 20.0F, $r3);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mSnapMargin> = $f2;

     label2:
        return;
    }

    private void computeInsets(int, int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int getLayoutDirection()>();

        $i4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mGravity>;

        i3 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i4, i2);

        $i5 = i3 & 7;

        tableswitch($i5)
        {
            case 3: goto label4;
            case 4: goto label1;
            case 5: goto label5;
            default: goto label1;
        };

     label1:
        $i6 = i0 / 2;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mHorizontalInset> = $i6;

     label2:
        $i7 = i3 & 112;

        lookupswitch($i7)
        {
            case 48: goto label6;
            case 80: goto label7;
            default: goto label3;
        };

     label3:
        $i8 = i1 / 2;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVerticalInset> = $i8;

        return;

     label4:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mHorizontalInset> = 0;

        goto label2;

     label5:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mHorizontalInset> = i0;

        goto label2;

     label6:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVerticalInset> = 0;

        return;

     label7:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVerticalInset> = i1;

        return;
    }

    private void deactivateHandle(int, int, float, android.animation.Animator$AnimatorListener)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1;
        float f0;
        android.animation.Animator$AnimatorListener r1;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle r2, $r5, $r13;
        com.android.internal.widget.multiwaveview.TargetDrawable r3;
        long l2;
        java.lang.Object[] r4;
        android.animation.TimeInterpolator $r6;
        java.lang.Integer $r7, $r9, $r10;
        java.lang.Float $r8;
        com.android.internal.widget.multiwaveview.Tweener $r11;
        android.animation.ValueAnimator$AnimatorUpdateListener $r12;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        r1 := @parameter3: android.animation.Animator$AnimatorListener;

        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        virtualinvoke $r5.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void cancel()>();

        r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        l2 = (long) i0;

        r4 = newarray (java.lang.Object)[14];

        r4[0] = "ease";

        $r6 = <com.android.internal.widget.multiwaveview.Ease$Quart: android.animation.TimeInterpolator easeOut>;

        r4[1] = $r6;

        r4[2] = "delay";

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r4[3] = $r7;

        r4[4] = "alpha";

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r4[5] = $r8;

        r4[6] = "x";

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r4[7] = $r9;

        r4[8] = "y";

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r4[9] = $r10;

        r4[10] = "onUpdate";

        $r12 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        r4[11] = $r12;

        r4[12] = "onComplete";

        r4[13] = r1;

        $r11 = staticinvoke <com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener 'to'(java.lang.Object,long,java.lang.Object[])>(r3, l2, r4);

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: boolean add(java.lang.Object)>($r11);

        $r13 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        virtualinvoke $r13.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void start()>();

        return;
    }

    private void deactivateTargets()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        int[] $r4;
        com.android.internal.widget.multiwaveview.TargetDrawable $r5;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r3;

        $r4 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_INACTIVE>;

        virtualinvoke $r5.<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mActiveTarget> = -1;

        return;
    }

    private void dispatchOnFinishFinalAnimation()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener $r1, $r2;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener>;

        interfaceinvoke $r2.<com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener: void onFinishFinalAnimation()>();

     label1:
        return;
    }

    private void dispatchTriggerEvent(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;
        com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener $r1, $r2;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void vibrate()>();

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener>;

        interfaceinvoke $r2.<com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener: void onTrigger(android.view.View,int)>(r0, i0);

     label1:
        return;
    }

    private float dist2(float, float)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float f0, f1, $f2, $f3, $f4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f3 = f0 * f0;

        $f2 = f1 * f1;

        $f4 = $f3 + $f2;

        return $f4;
    }

    private void doFinish()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;
        boolean z0, $z1;
        android.animation.Animator$AnimatorListener $r1, $r2;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle $r3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mActiveTarget>;

        if i0 == -1 goto label3;

        z0 = 1;

     label1:
        if z0 == 0 goto label4;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void highlightSelected(int)>(i0);

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.Animator$AnimatorListener mResetListener>;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void deactivateHandle(int,int,float,android.animation.Animator$AnimatorListener)>(200, 1200, 0.0F, $r2);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void dispatchTriggerEvent(int)>(i0);

        $z1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mAlwaysTrackFinger>;

        if $z1 != 0 goto label2;

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r3.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void stop()>();

     label2:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void setGrabbedState(int)>(0);

        return;

     label3:
        z0 = 0;

        goto label1;

     label4:
        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.Animator$AnimatorListener mResetListenerWithPing>;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void deactivateHandle(int,int,float,android.animation.Animator$AnimatorListener)>(200, 200, 1.0F, $r1);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void hideTargets(boolean,boolean)>(1, 0);

        goto label2;
    }

    private void dump()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r26, $r27;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.String $r4, $r8, $r12, $r15, $r19, $r25, $r28;
        int $i2, $i4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Outer Radius = ");

        $f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MultiWaveView", $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SnapMargin = ");

        $f1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mSnapMargin>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MultiWaveView", $r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FeedbackCount = ");

        $i2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MultiWaveView", $r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VibrationDuration = ");

        $i4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVibrationDuration>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MultiWaveView", $r15);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TapRadius = ");

        $f2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mTapRadius>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MultiWaveView", $r19);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WaveCenterX = ");

        $f3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterX>;

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MultiWaveView", $r25);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WaveCenterY = ");

        $f4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterY>;

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MultiWaveView", $r28);

        return;
    }

    private java.lang.String getDirectionDescription(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5, $r8;
        java.lang.Object $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mDirectionDescriptions>;

        if $r1 == null goto label1;

        $r8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mDirectionDescriptions>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $i1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mDirectionDescriptionsResourceId>;

        $r2 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList loadDescriptions(int)>($i1);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mDirectionDescriptions> = $r2;

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mDirectionDescriptions>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 == $i3 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiWaveView", "The number of target drawables must be euqal to the number of direction descriptions.");

        return null;

     label2:
        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mDirectionDescriptions>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    private float getScaledTapRadiusSquared()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float f0, $f1, $f2;
        android.content.Context $r1;
        android.view.accessibility.AccessibilityManager $r2;
        boolean $z0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r1);

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $f2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mTapRadius>;

        f0 = 1.3F * $f2;

     label1:
        $f1 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float square(float)>(f0);

        return $f1;

     label2:
        f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mTapRadius>;

        goto label1;
    }

    private java.lang.String getTargetDescription(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5, $r8;
        java.lang.Object $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDescriptions>;

        if $r1 == null goto label1;

        $r8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDescriptions>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $i1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mTargetDescriptionsResourceId>;

        $r2 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList loadDescriptions(int)>($i1);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDescriptions> = $r2;

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDescriptions>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 == $i3 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiWaveView", "The number of target drawables must be euqal to the number of target descriptions.");

        return null;

     label2:
        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDescriptions>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (java.lang.String) $r6;

        return $r7;
    }

    private void handleCancel(android.view.MotionEvent)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.view.MotionEvent r1;
        float $f0, $f1;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void switchToState(int,float,float)>(5, $f0, $f1);

        return;
    }

    private void handleDown(android.view.MotionEvent)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.view.MotionEvent r1;
        float f0, f1;
        boolean $z0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.view.MotionEvent;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void switchToState(int,float,float)>(1, f0, f1);

        $z0 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean trySwitchToFirstTouchState(float,float)>(f0, f1);

        if $z0 != 0 goto label1;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mDragging> = 0;

        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void ping()>();

     label1:
        return;
    }

    private void handleMove(android.view.MotionEvent)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        java.util.ArrayList r2;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        com.android.internal.widget.multiwaveview.TargetDrawable r3, r4, r5, $r6;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int[] $r7, $r13, $r14, $r15;
        java.lang.Object $r8, $r12, $r16;
        java.lang.String $r9;
        android.content.Context $r10;
        android.view.accessibility.AccessibilityManager $r11;
        byte $b9, $b10, $b11, $b12, $b13, $b14;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = -1;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getHistorySize()>();

        r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        f0 = 0.0F;

        f1 = 0.0F;

        i3 = 0;

     label01:
        $i6 = i1 + 1;

        if i3 >= $i6 goto label16;

        if i3 >= i1 goto label11;

        f2 = virtualinvoke r1.<android.view.MotionEvent: float getHistoricalX(int)>(i3);

     label02:
        if i3 >= i1 goto label12;

        f3 = virtualinvoke r1.<android.view.MotionEvent: float getHistoricalY(int)>(i3);

     label03:
        $f14 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterX>;

        f4 = f2 - $f14;

        $f13 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterY>;

        f5 = f3 - $f13;

        $f12 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float dist2(float,float)>(f4, f5);

        $d3 = (double) $f12;

        $d4 = staticinvoke <java.lang.Math: double sqrt(double)>($d3);

        f6 = (float) $d4;

        $f16 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $b9 = f6 cmpl $f16;

        if $b9 <= 0 goto label13;

        $f20 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        f8 = $f20 / f6;

     label04:
        f7 = f4 * f8;

        f9 = f5 * f8;

        $f15 = neg f5;

        $d5 = (double) $f15;

        $d6 = (double) f4;

        d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d5, $d6);

        $z5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mDragging>;

        if $z5 != 0 goto label05;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean trySwitchToFirstTouchState(float,float)>(f2, f3);

     label05:
        $z6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mDragging>;

        if $z6 == 0 goto label15;

        $f18 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $f17 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mSnapMargin>;

        f10 = $f18 - $f17;

        f11 = f10 * f10;

        i4 = 0;

     label06:
        if i4 >= i2 goto label15;

        $r16 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r16;

        $d7 = (double) i4;

        $d8 = $d7 - 0.5;

        $d9 = 2.0 * $d8;

        $d13 = 3.141592653589793 * $d9;

        $d10 = (double) i2;

        d1 = $d13 / $d10;

        $d14 = (double) i4;

        $d15 = 0.5 + $d14;

        $d16 = 2.0 * $d15;

        $d12 = 3.141592653589793 * $d16;

        $d11 = (double) i2;

        d2 = $d12 / $d11;

        $z7 = virtualinvoke r5.<com.android.internal.widget.multiwaveview.TargetDrawable: boolean isEnabled()>();

        if $z7 == 0 goto label10;

        $b10 = d0 cmpl d1;

        if $b10 <= 0 goto label07;

        $b12 = d0 cmpg d2;

        if $b12 <= 0 goto label08;

     label07:
        $d18 = 6.283185307179586 + d0;

        $b13 = $d18 cmpl d1;

        if $b13 <= 0 goto label14;

        $d17 = 6.283185307179586 + d0;

        $b11 = $d17 cmpg d2;

        if $b11 > 0 goto label14;

     label08:
        z0 = 1;

     label09:
        if z0 == 0 goto label10;

        $f19 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float dist2(float,float)>(f4, f5);

        $b14 = $f19 cmpl f11;

        if $b14 <= 0 goto label10;

        i0 = i4;

     label10:
        i4 = i4 + 1;

        goto label06;

     label11:
        f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        goto label02;

     label12:
        f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        goto label03;

     label13:
        f8 = 1.0F;

        goto label04;

     label14:
        z0 = 0;

        goto label09;

     label15:
        f0 = f7;

        f1 = f9;

        i3 = i3 + 1;

        goto label01;

     label16:
        $z1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mDragging>;

        if $z1 != 0 goto label17;

        return;

     label17:
        if i0 == -1 goto label23;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void switchToState(int,float,float)>(4, f0, f1);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void moveHandleTo(float,float,boolean)>(f0, f1, 0);

     label18:
        $r6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void invalidateGlobalRegion(com.android.internal.widget.multiwaveview.TargetDrawable)>($r6);

        $i5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mActiveTarget>;

        if $i5 == i0 goto label22;

        $i7 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mActiveTarget>;

        if $i7 == -1 goto label19;

        $i8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mActiveTarget>;

        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        r4 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r12;

        $r13 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_FOCUSED>;

        $z4 = virtualinvoke r4.<com.android.internal.widget.multiwaveview.TargetDrawable: boolean hasState(int[])>($r13);

        if $z4 == 0 goto label19;

        $r15 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_INACTIVE>;

        virtualinvoke r4.<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>($r15);

     label19:
        if i0 == -1 goto label24;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r8;

        $r7 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_FOCUSED>;

        $z2 = virtualinvoke r3.<com.android.internal.widget.multiwaveview.TargetDrawable: boolean hasState(int[])>($r7);

        if $z2 == 0 goto label20;

        $r14 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_FOCUSED>;

        virtualinvoke r3.<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>($r14);

     label20:
        $r10 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context mContext>;

        $r11 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r10);

        $z3 = virtualinvoke $r11.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z3 == 0 goto label21;

        $r9 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.lang.String getTargetDescription(int)>(i0);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void announceText(java.lang.String)>($r9);

     label21:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void activateHandle(int,int,float,android.animation.Animator$AnimatorListener)>(0, 0, 0.0F, null);

     label22:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mActiveTarget> = i0;

        return;

     label23:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void switchToState(int,float,float)>(3, f0, f1);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void moveHandleTo(float,float,boolean)>(f0, f1, 0);

        goto label18;

     label24:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void activateHandle(int,int,float,android.animation.Animator$AnimatorListener)>(0, 0, 1.0F, null);

        goto label22;
    }

    private void handleUp(android.view.MotionEvent)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.view.MotionEvent r1;
        float $f0, $f1;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void switchToState(int,float,float)>(5, $f0, $f1);

        return;
    }

    private void hideChevrons()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        java.util.ArrayList r1;
        int i0, i1;
        com.android.internal.widget.multiwaveview.TargetDrawable r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mChevronDrawables>;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r3;

        if r2 == null goto label2;

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setAlpha(float)>(0.0F);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void hideTargets(boolean, boolean)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        boolean z0, z1;
        short s0, s1;
        float f0, f1;
        int i2, i3;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle r1, r5, $r8, $r19;
        com.android.internal.widget.multiwaveview.TargetDrawable r2, r4;
        long l4, l5;
        java.lang.Object[] r3, r6;
        java.util.ArrayList $r7, $r20;
        android.animation.TimeInterpolator $r9, $r22;
        java.lang.Float $r10, $r11, $r12, $r21, $r23, $r24;
        java.lang.Integer $r13, $r27;
        com.android.internal.widget.multiwaveview.Tweener $r14, $r25;
        android.animation.ValueAnimator$AnimatorUpdateListener $r15, $r26;
        android.animation.Animator$AnimatorListener $r16;
        java.lang.Object $r17;
        int[] $r18;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r8.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void cancel()>();

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mAnimatingTargets> = z0;

        if z0 == 0 goto label05;

        s0 = 200;

     label01:
        if z0 == 0 goto label06;

        s1 = 200;

     label02:
        if z1 == 0 goto label07;

        f0 = 1.0F;

     label03:
        $r7 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i3 = 0;

     label04:
        if i3 >= i2 goto label08;

        $r20 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r17 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r17;

        $r18 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_INACTIVE>;

        virtualinvoke r4.<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>($r18);

        r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        l5 = (long) s0;

        r6 = newarray (java.lang.Object)[12];

        r6[0] = "ease";

        $r22 = <com.android.internal.widget.multiwaveview.Ease$Cubic: android.animation.TimeInterpolator easeOut>;

        r6[1] = $r22;

        r6[2] = "alpha";

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        r6[3] = $r21;

        r6[4] = "scaleX";

        $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r6[5] = $r24;

        r6[6] = "scaleY";

        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r6[7] = $r23;

        r6[8] = "delay";

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(s1);

        r6[9] = $r27;

        r6[10] = "onUpdate";

        $r26 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        r6[11] = $r26;

        $r25 = staticinvoke <com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener 'to'(java.lang.Object,long,java.lang.Object[])>(r4, l5, r6);

        virtualinvoke r5.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: boolean add(java.lang.Object)>($r25);

        i3 = i3 + 1;

        goto label04;

     label05:
        s0 = 0;

        goto label01;

     label06:
        s1 = 0;

        goto label02;

     label07:
        f0 = 0.8F;

        goto label03;

     label08:
        if z1 == 0 goto label10;

        f1 = 1.0F;

     label09:
        r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        l4 = (long) s0;

        r3 = newarray (java.lang.Object)[14];

        r3[0] = "ease";

        $r9 = <com.android.internal.widget.multiwaveview.Ease$Cubic: android.animation.TimeInterpolator easeOut>;

        r3[1] = $r9;

        r3[2] = "alpha";

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        r3[3] = $r10;

        r3[4] = "scaleX";

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        r3[5] = $r11;

        r3[6] = "scaleY";

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        r3[7] = $r12;

        r3[8] = "delay";

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(s1);

        r3[9] = $r13;

        r3[10] = "onUpdate";

        $r15 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        r3[11] = $r15;

        r3[12] = "onComplete";

        $r16 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.Animator$AnimatorListener mTargetUpdateListener>;

        r3[13] = $r16;

        $r14 = staticinvoke <com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener 'to'(java.lang.Object,long,java.lang.Object[])>(r2, l4, r3);

        virtualinvoke r1.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: boolean add(java.lang.Object)>($r14);

        $r19 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r19.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void start()>();

        return;

     label10:
        f1 = 0.5F;

        goto label09;
    }

    private void hideUnselected(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, $i2;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.internal.widget.multiwaveview.TargetDrawable $r4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label3;

        if i1 == i0 goto label2;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r3;

        virtualinvoke $r4.<com.android.internal.widget.multiwaveview.TargetDrawable: void setAlpha(float)>(0.0F);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void highlightSelected(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        int[] $r3;
        com.android.internal.widget.multiwaveview.TargetDrawable $r4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r2;

        $r3 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_ACTIVE>;

        virtualinvoke $r4.<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>($r3);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void hideUnselected(int)>(i0);

        return;
    }

    private void internalSetTargetResources(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        com.android.internal.widget.multiwaveview.TargetDrawable r1, $r4, $r5;
        java.util.ArrayList $r2, $r3, $r7;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $r2 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList loadDrawableArray(int)>(i0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables> = $r2;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mTargetResourceId> = i0;

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        i2 = virtualinvoke $r4.<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>();

        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        i3 = virtualinvoke $r5.<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        $r7 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r6 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r1 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r6;

        $i7 = virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>();

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i7);

        $i8 = virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>();

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i8);

        i4 = i4 + 1;

        goto label1;

     label2:
        $i5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mMaxTargetWidth>;

        if $i5 != i2 goto label3;

        $i6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mMaxTargetHeight>;

        if $i6 == i3 goto label4;

     label3:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mMaxTargetWidth> = i2;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mMaxTargetHeight> = i3;

        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void requestLayout()>();

        return;

     label4:
        $f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterX>;

        $f1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterY>;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void updateTargetPositions(float,float)>($f0, $f1);

        $f2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterX>;

        $f3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterY>;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void updateChevronPositions(float,float)>($f2, $f3);

        return;
    }

    private java.util.ArrayList loadDescriptions(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, i2;
        android.content.res.TypedArray r1;
        java.util.ArrayList r2, $r5;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        java.lang.String $r6;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(i0);

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i1);

        r2 = $r5;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r6 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i2);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return r2;
    }

    private java.util.ArrayList loadDrawableArray(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, i2, i3;
        android.content.res.Resources r1;
        android.content.res.TypedArray r2;
        java.util.ArrayList r3, $r6;
        android.util.TypedValue r4;
        android.content.Context $r5;
        com.android.internal.widget.multiwaveview.TargetDrawable $r7;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $r5 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context getContext()>();

        r1 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(i0);

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int length()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i1);

        r3 = $r6;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r4 = virtualinvoke r2.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i2);

        if r4 == null goto label3;

        i3 = r4.<android.util.TypedValue: int resourceId>;

     label2:
        $r7 = new com.android.internal.widget.multiwaveview.TargetDrawable;

        specialinvoke $r7.<com.android.internal.widget.multiwaveview.TargetDrawable: void <init>(android.content.res.Resources,int)>(r1, i3);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label1;

     label3:
        i3 = 0;

        goto label2;

     label4:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return r3;
    }

    private void moveHandleTo(float, float, boolean)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float f0, f1;
        boolean z0;
        com.android.internal.widget.multiwaveview.TargetDrawable $r1, $r2;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        virtualinvoke $r1.<com.android.internal.widget.multiwaveview.TargetDrawable: void setX(float)>(f0);

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        virtualinvoke $r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setY(float)>(f1);

        return;
    }

    private boolean replaceTargetDrawables(android.content.res.Resources, int, int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.content.res.Resources r1;
        int i0, i1, i2, i3, $i4;
        boolean z0;
        java.util.ArrayList r2;
        com.android.internal.widget.multiwaveview.TargetDrawable r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 == 0 goto label1;

        if i1 != 0 goto label3;

     label1:
        z0 = 0;

     label2:
        return z0;

     label3:
        z0 = 0;

        r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label4:
        if i3 >= i2 goto label6;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r4;

        if r3 == null goto label5;

        $i4 = virtualinvoke r3.<com.android.internal.widget.multiwaveview.TargetDrawable: int getResourceId()>();

        if $i4 != i0 goto label5;

        virtualinvoke r3.<com.android.internal.widget.multiwaveview.TargetDrawable: void setDrawable(android.content.res.Resources,int)>(r1, i1);

        z0 = 1;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        if z0 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void requestLayout()>();

        return z0;
    }

    private int resolveMeasured(int, int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        lookupswitch($i3)
        {
            case -2147483648: goto label3;
            case 0: goto label2;
            default: goto label1;
        };

     label1:
        return i2;

     label2:
        return i1;

     label3:
        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i1);

        return $i4;
    }

    private void setGrabbedState(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, $i1;
        com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mGrabbedState>;

        if i0 == $i1 goto label3;

        if i0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void vibrate()>();

     label1:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mGrabbedState> = i0;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener>;

        if $r1 == null goto label3;

        if i0 != 0 goto label4;

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener>;

        interfaceinvoke $r4.<com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener: void onReleased(android.view.View,int)>(r0, 1);

     label2:
        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener>;

        interfaceinvoke $r3.<com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>(r0, i0);

     label3:
        return;

     label4:
        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener>;

        interfaceinvoke $r2.<com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener: void onGrabbed(android.view.View,int)>(r0, 1);

        goto label2;
    }

    private void showTargets(boolean)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        boolean z0;
        byte b0;
        short s1;
        int i2, i3;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle r1, r5, $r6, $r19;
        com.android.internal.widget.multiwaveview.TargetDrawable r2, r4;
        long l4, l5;
        java.lang.Object[] r3, r7;
        java.util.ArrayList $r8, $r17;
        android.animation.TimeInterpolator $r9, $r22;
        java.lang.Float $r10, $r11, $r12, $r20, $r23, $r24;
        android.animation.ValueAnimator$AnimatorUpdateListener $r13, $r25;
        java.lang.Integer $r14, $r27;
        com.android.internal.widget.multiwaveview.Tweener $r15, $r26;
        android.animation.Animator$AnimatorListener $r16;
        java.lang.Object $r18;
        int[] $r21;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        z0 := @parameter0: boolean;

        $r6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r6.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void stop()>();

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mAnimatingTargets> = z0;

        if z0 == 0 goto label4;

        b0 = 50;

     label1:
        if z0 == 0 goto label5;

        s1 = 200;

     label2:
        $r8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label6;

        $r17 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r18;

        $r21 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_INACTIVE>;

        virtualinvoke r4.<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>($r21);

        r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        l5 = (long) s1;

        r7 = newarray (java.lang.Object)[12];

        r7[0] = "ease";

        $r22 = <com.android.internal.widget.multiwaveview.Ease$Cubic: android.animation.TimeInterpolator easeOut>;

        r7[1] = $r22;

        r7[2] = "alpha";

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r7[3] = $r20;

        r7[4] = "scaleX";

        $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r7[5] = $r24;

        r7[6] = "scaleY";

        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r7[7] = $r23;

        r7[8] = "delay";

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b0);

        r7[9] = $r27;

        r7[10] = "onUpdate";

        $r25 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        r7[11] = $r25;

        $r26 = staticinvoke <com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener 'to'(java.lang.Object,long,java.lang.Object[])>(r4, l5, r7);

        virtualinvoke r5.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: boolean add(java.lang.Object)>($r26);

        i3 = i3 + 1;

        goto label3;

     label4:
        b0 = 0;

        goto label1;

     label5:
        s1 = 0;

        goto label2;

     label6:
        r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        l4 = (long) s1;

        r3 = newarray (java.lang.Object)[14];

        r3[0] = "ease";

        $r9 = <com.android.internal.widget.multiwaveview.Ease$Cubic: android.animation.TimeInterpolator easeOut>;

        r3[1] = $r9;

        r3[2] = "alpha";

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r3[3] = $r10;

        r3[4] = "scaleX";

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r3[5] = $r11;

        r3[6] = "scaleY";

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r3[7] = $r12;

        r3[8] = "delay";

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b0);

        r3[9] = $r14;

        r3[10] = "onUpdate";

        $r13 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        r3[11] = $r13;

        r3[12] = "onComplete";

        $r16 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.Animator$AnimatorListener mTargetUpdateListener>;

        r3[13] = $r16;

        $r15 = staticinvoke <com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener 'to'(java.lang.Object,long,java.lang.Object[])>(r2, l4, r3);

        virtualinvoke r1.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: boolean add(java.lang.Object)>($r15);

        $r19 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r19.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void start()>();

        return;
    }

    private float square(float)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float f0, $f1;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        f0 := @parameter0: float;

        $f1 = f0 * f0;

        return $f1;
    }

    private void startBackgroundAnimation(int, float)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, $i2;
        float f0, $f1;
        android.graphics.drawable.Drawable r1;
        long l1;
        java.lang.Object[] r2;
        int[] r3;
        boolean $z0;
        com.android.internal.widget.multiwaveview.Tweener $r4, $r7, $r8, $r9;
        android.animation.TimeInterpolator $r5;
        java.lang.Integer $r6;
        android.animation.ObjectAnimator $r10, $r11;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        r1 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.graphics.drawable.Drawable getBackground()>();

        $z0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mAlwaysTrackFinger>;

        if $z0 == 0 goto label2;

        if r1 == null goto label2;

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.Tweener mBackgroundAnimator>;

        if $r4 == null goto label1;

        $r9 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.Tweener mBackgroundAnimator>;

        $r11 = $r9.<com.android.internal.widget.multiwaveview.Tweener: android.animation.ObjectAnimator animator>;

        virtualinvoke $r11.<android.animation.ObjectAnimator: void end()>();

     label1:
        l1 = (long) i0;

        r2 = newarray (java.lang.Object)[6];

        r2[0] = "ease";

        $r5 = <com.android.internal.widget.multiwaveview.Ease$Cubic: android.animation.TimeInterpolator easeIn>;

        r2[1] = $r5;

        r2[2] = "alpha";

        r3 = newarray (int)[2];

        r3[0] = 0;

        $f1 = 255.0F * f0;

        $i2 = (int) $f1;

        r3[1] = $i2;

        r2[3] = r3;

        r2[4] = "delay";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);

        r2[5] = $r6;

        $r8 = staticinvoke <com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener 'to'(java.lang.Object,long,java.lang.Object[])>(r1, l1, r2);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.Tweener mBackgroundAnimator> = $r8;

        $r7 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.Tweener mBackgroundAnimator>;

        $r10 = $r7.<com.android.internal.widget.multiwaveview.Tweener: android.animation.ObjectAnimator animator>;

        virtualinvoke $r10.<android.animation.ObjectAnimator: void start()>();

     label2:
        return;
    }

    private void startChevronAnimation()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        double d0, $d1, $d2, $d3, $d4, $d5;
        float[] r1, r2, $r12, $r13, $r15;
        com.android.internal.widget.multiwaveview.TargetDrawable r3, $r6;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle r4, $r7, $r8;
        java.lang.Object[] r5;
        android.animation.TimeInterpolator $r9;
        java.util.ArrayList $r10, $r16;
        java.lang.Object $r11;
        java.lang.Integer $r14;
        com.android.internal.widget.multiwaveview.Tweener $r17;
        android.animation.ValueAnimator$AnimatorUpdateListener $r18;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        $i4 = virtualinvoke $r6.<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>();

        $f4 = (float) $i4;

        f0 = 0.8F * $f4;

        $f6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $f5 = 0.9F * $f6;

        f1 = $f5 / 2.0F;

        $i5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount>;

        if $i5 <= 0 goto label5;

        $r16 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mChevronDrawables>;

        $i11 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        $i10 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount>;

        i0 = $i11 / $i10;

     label1:
        $r7 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations>;

        virtualinvoke $r7.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void stop()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label8;

        $d1 = (double) i1;

        $d2 = 6.283185307179586 * $d1;

        $d3 = (double) i0;

        d0 = $d2 / $d3;

        $d4 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        f2 = (float) $d4;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        $f7 = (float) $d5;

        f3 = 0.0F - $f7;

        r1 = newarray (float)[2];

        $f10 = f2 * f0;

        r1[0] = $f10;

        $f11 = f2 * f1;

        r1[1] = $f11;

        r2 = newarray (float)[2];

        $f8 = f3 * f0;

        r2[0] = $f8;

        $f9 = f3 * f1;

        r2[1] = $f9;

        i2 = 0;

     label3:
        $i8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount>;

        if i2 >= $i8 goto label7;

        i3 = i2 * 160;

        $r10 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mChevronDrawables>;

        $i9 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mFeedbackCount>;

        $i6 = i1 * $i9;

        $i7 = i2 + $i6;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i7);

        r3 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r11;

        if r3 != null goto label6;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        i0 = 0;

        goto label1;

     label6:
        r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations>;

        r5 = newarray (java.lang.Object)[16];

        r5[0] = "ease";

        $r9 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.TimeInterpolator mChevronAnimationInterpolator>;

        r5[1] = $r9;

        r5[2] = "delay";

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        r5[3] = $r14;

        r5[4] = "x";

        r5[5] = r1;

        r5[6] = "y";

        r5[7] = r2;

        r5[8] = "alpha";

        $r15 = newarray (float)[2];

        $r15[0] = 1.0F;

        $r15[1] = 0.0F;

        r5[9] = $r15;

        r5[10] = "scaleX";

        $r12 = newarray (float)[2];

        $r12[0] = 0.5F;

        $r12[1] = 2.0F;

        r5[11] = $r12;

        r5[12] = "scaleY";

        $r13 = newarray (float)[2];

        $r13[0] = 0.5F;

        $r13[1] = 2.0F;

        r5[13] = $r13;

        r5[14] = "onUpdate";

        $r18 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        r5[15] = $r18;

        $r17 = staticinvoke <com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener 'to'(java.lang.Object,long,java.lang.Object[])>(r3, 850L, r5);

        virtualinvoke r4.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: boolean add(java.lang.Object)>($r17);

        goto label4;

     label7:
        i1 = i1 + 1;

        goto label2;

     label8:
        $r8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations>;

        virtualinvoke $r8.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void start()>();

        return;
    }

    private void switchToState(int, float, float)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;
        float f0, f1;
        int[] $r1, $r5;
        com.android.internal.widget.multiwaveview.TargetDrawable $r2, $r6;
        android.content.Context $r3;
        android.view.accessibility.AccessibilityManager $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label5;
            default: goto label1;
        };

     label1:
        return;

     label2:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void deactivateTargets()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void hideTargets(boolean,boolean)>(1, 0);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void startBackgroundAnimation(int,float)>(0, 0.0F);

        $r6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        $r5 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_INACTIVE>;

        virtualinvoke $r6.<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>($r5);

        return;

     label3:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void deactivateHandle(int,int,float,android.animation.Animator$AnimatorListener)>(0, 0, 1.0F, null);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void startBackgroundAnimation(int,float)>(0, 0.0F);

        return;

     label4:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void deactivateTargets()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void showTargets(boolean)>(1);

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        $r1 = <com.android.internal.widget.multiwaveview.TargetDrawable: int[] STATE_ACTIVE>;

        virtualinvoke $r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>($r1);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void startBackgroundAnimation(int,float)>(200, 1.0F);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void setGrabbedState(int)>(1);

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r3);

        $z0 = virtualinvoke $r4.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void announceTargets()>();

        return;

     label5:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void doFinish()>();

        return;
    }

    private boolean trySwitchToFirstTouchState(float, float)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        boolean z0, $z1;
        byte b0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterX>;

        f2 = f0 - $f4;

        $f5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterY>;

        f3 = f1 - $f5;

        $z1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mAlwaysTrackFinger>;

        if $z1 != 0 goto label1;

        $f6 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float dist2(float,float)>(f2, f3);

        $f7 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float getScaledTapRadiusSquared()>();

        b0 = $f6 cmpg $f7;

        z0 = 0;

        if b0 > 0 goto label2;

     label1:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void switchToState(int,float,float)>(2, f0, f1);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void moveHandleTo(float,float,boolean)>(f2, f3, 0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mDragging> = 1;

        z0 = 1;

     label2:
        return z0;
    }

    private void updateChevronPositions(float, float)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float f0, f1;
        java.util.ArrayList r1;
        int i0, i1;
        com.android.internal.widget.multiwaveview.TargetDrawable r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mChevronDrawables>;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r3;

        if r2 == null goto label2;

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionX(float)>(f0);

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionY(float)>(f1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void updateTargetPositions(float, float)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        java.util.ArrayList r1;
        int i0, i1;
        com.android.internal.widget.multiwaveview.TargetDrawable r2;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $d0 = (double) i0;

        $d1 = -6.283185307179586 / $d0;

        f2 = (float) $d1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r3;

        $f4 = (float) i1;

        f3 = f2 * $f4;

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionX(float)>(f0);

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionY(float)>(f1);

        $f5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $d2 = (double) f3;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $f6 = (float) $d3;

        $f7 = $f5 * $f6;

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setX(float)>($f7);

        $f8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $d4 = (double) f3;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>($d4);

        $f10 = (float) $d5;

        $f9 = $f8 * $f10;

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void setY(float)>($f9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void vibrate()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        byte b0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i1, $i2;
        android.os.Vibrator $r3, $r4;
        long $l3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        b0 = 1;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r2, "haptic_feedback_enabled", b0, -2);

        if $i1 == 0 goto label3;

     label1:
        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.os.Vibrator mVibrator>;

        if $r3 == null goto label2;

        if b0 == 0 goto label2;

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.os.Vibrator mVibrator>;

        $i2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVibrationDuration>;

        $l3 = (long) $i2;

        virtualinvoke $r4.<android.os.Vibrator: void vibrate(long)>($l3);

     label2:
        return;

     label3:
        b0 = 0;

        goto label1;
    }

    public int getDirectionDescriptionsResourceId()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int $i0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $i0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mDirectionDescriptionsResourceId>;

        return $i0;
    }

    public int getResourceIdForTarget(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, $i1;
        com.android.internal.widget.multiwaveview.TargetDrawable r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r3;

        if r1 != null goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getResourceId()>();

        return $i1;
    }

    protected int getSuggestedMinimumHeight()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        com.android.internal.widget.multiwaveview.TargetDrawable $r1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>();

        $f2 = (float) $i0;

        $f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $f1 = 2.0F * $f0;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>($f2, $f1);

        $i1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mMaxTargetHeight>;

        $f4 = (float) $i1;

        $f5 = $f3 + $f4;

        $i2 = (int) $f5;

        return $i2;
    }

    protected int getSuggestedMinimumWidth()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        com.android.internal.widget.multiwaveview.TargetDrawable $r1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        $i0 = virtualinvoke $r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>();

        $f2 = (float) $i0;

        $f0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $f1 = 2.0F * $f0;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>($f2, $f1);

        $i1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mMaxTargetWidth>;

        $f4 = (float) $i1;

        $f5 = $f3 + $f4;

        $i2 = (int) $f5;

        return $i2;
    }

    public int getTargetDescriptionsResourceId()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int $i0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $i0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mTargetDescriptionsResourceId>;

        return $i0;
    }

    public int getTargetPosition(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.internal.widget.multiwaveview.TargetDrawable $r4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label3;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r3;

        $i3 = virtualinvoke $r4.<com.android.internal.widget.multiwaveview.TargetDrawable: int getResourceId()>();

        if $i3 != i0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int getTargetResourceId()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int $i0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $i0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mTargetResourceId>;

        return $i0;
    }

    void invalidateGlobalRegion(com.android.internal.widget.multiwaveview.TargetDrawable)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        com.android.internal.widget.multiwaveview.TargetDrawable r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.RectF r2, $r4;
        android.view.View r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.view.ViewParent $r5, $r6, $r8;
        boolean $z0;
        android.graphics.Matrix $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: com.android.internal.widget.multiwaveview.TargetDrawable;

        i0 = virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>();

        i1 = virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>();

        $r4 = new android.graphics.RectF;

        $f1 = (float) i0;

        $f0 = (float) i1;

        specialinvoke $r4.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        r2 = $r4;

        $f2 = virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: float getX()>();

        $i2 = i0 / 2;

        $f3 = (float) $i2;

        $f4 = $f2 - $f3;

        $f5 = virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: float getY()>();

        $i3 = i1 / 2;

        $f6 = (float) $i3;

        $f7 = $f5 - $f6;

        virtualinvoke r2.<android.graphics.RectF: void offset(float,float)>($f4, $f7);

        r3 = r0;

     label1:
        $r5 = virtualinvoke r3.<android.view.View: android.view.ViewParent getParent()>();

        if $r5 == null goto label2;

        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r6 instanceof android.view.View;

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r3.<android.view.View: android.view.ViewParent getParent()>();

        r3 = (android.view.View) $r8;

        $r7 = virtualinvoke r3.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r7.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r2);

        $f8 = r2.<android.graphics.RectF: float left>;

        $d1 = (double) $f8;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d1);

        $i4 = (int) $d0;

        $f9 = r2.<android.graphics.RectF: float top>;

        $d2 = (double) $f9;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $i5 = (int) $d3;

        $f10 = r2.<android.graphics.RectF: float right>;

        $d5 = (double) $f10;

        $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d5);

        $i6 = (int) $d4;

        $f11 = r2.<android.graphics.RectF: float bottom>;

        $d7 = (double) $f11;

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d7);

        $i7 = (int) $d6;

        virtualinvoke r3.<android.view.View: void invalidate(int,int,int,int)>($i4, $i5, $i6, $i7);

        goto label1;

     label2:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3;
        com.android.internal.widget.multiwaveview.TargetDrawable r2, r3, $r4, $r7;
        java.util.ArrayList $r5, $r6, $r8, $r11;
        java.lang.Object $r9, $r10;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        virtualinvoke $r4.<com.android.internal.widget.multiwaveview.TargetDrawable: void draw(android.graphics.Canvas)>(r1);

        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r11 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r10;

        if r3 == null goto label2;

        virtualinvoke r3.<com.android.internal.widget.multiwaveview.TargetDrawable: void draw(android.graphics.Canvas)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mChevronDrawables>;

        i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i3 = 0;

     label4:
        if i3 >= i2 goto label6;

        $r8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mChevronDrawables>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r9;

        if r2 == null goto label5;

        virtualinvoke r2.<com.android.internal.widget.multiwaveview.TargetDrawable: void draw(android.graphics.Canvas)>(r1);

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        $r7 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        virtualinvoke $r7.<com.android.internal.widget.multiwaveview.TargetDrawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.view.MotionEvent r1;
        int i0;
        android.content.Context $r2;
        android.view.accessibility.AccessibilityManager $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context mContext>;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch(i0)
        {
            case 7: goto label4;
            case 8: goto label1;
            case 9: goto label3;
            case 10: goto label5;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(i0);

     label2:
        $z1 = specialinvoke r0.<android.view.View: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        return $z1;

     label3:
        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(0);

        goto label1;

     label4:
        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(2);

        goto label1;

     label5:
        virtualinvoke r1.<android.view.MotionEvent: void setAction(int)>(1);

        goto label1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        com.android.internal.widget.multiwaveview.TargetDrawable $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.view.View: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        i4 = i2 - i0;

        i5 = i3 - i1;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        $i6 = virtualinvoke $r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>();

        $f6 = (float) $i6;

        $f4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $f5 = 2.0F * $f4;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>($f6, $f5);

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        $i7 = virtualinvoke $r2.<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>();

        $f9 = (float) $i7;

        $f8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mOuterRadius>;

        $f7 = 2.0F * $f8;

        f1 = staticinvoke <java.lang.Math: float max(float,float)>($f9, $f7);

        $i9 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mHorizontalInset>;

        $f12 = (float) $i9;

        $f13 = (float) i4;

        $i8 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mMaxTargetWidth>;

        $f11 = (float) $i8;

        $f10 = f0 + $f11;

        $f15 = staticinvoke <java.lang.Math: float max(float,float)>($f13, $f10);

        $f14 = $f15 / 2.0F;

        f2 = $f12 + $f14;

        $i10 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mVerticalInset>;

        $f21 = (float) $i10;

        $f20 = (float) i5;

        $i11 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mMaxTargetHeight>;

        $f16 = (float) $i11;

        $f17 = f1 + $f16;

        $f18 = staticinvoke <java.lang.Math: float max(float,float)>($f20, $f17);

        $f19 = $f18 / 2.0F;

        f3 = $f21 + $f19;

        $z1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mInitialLayout>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void hideChevrons()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void hideTargets(boolean,boolean)>(0, 0);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void moveHandleTo(float,float,boolean)>(0.0F, 0.0F, 0);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mInitialLayout> = 0;

     label1:
        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        virtualinvoke $r5.<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionX(float)>(f2);

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mOuterRing>;

        virtualinvoke $r3.<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionY(float)>(f3);

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        virtualinvoke $r4.<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionX(float)>(f2);

        $r6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.TargetDrawable mHandleDrawable>;

        virtualinvoke $r6.<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionY(float)>(f3);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void updateTargetPositions(float,float)>(f2, f3);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void updateChevronPositions(float,float)>(f2, f3);

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterX> = f2;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: float mWaveCenterY> = f3;

        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int getSuggestedMinimumWidth()>();

        i3 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int getSuggestedMinimumHeight()>();

        i4 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int resolveMeasured(int,int)>(i0, i2);

        i5 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int resolveMeasured(int,int)>(i1, i3);

        $i7 = i4 - i2;

        $i6 = i5 - i3;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void computeInsets(int,int)>($i7, $i6);

        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void setMeasuredDimension(int,int)>(i4, i5);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        z0 = 0;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void invalidate()>();

        if z0 == 0 goto label6;

        return 1;

     label2:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void handleDown(android.view.MotionEvent)>(r1);

        z0 = 1;

        goto label1;

     label3:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void handleMove(android.view.MotionEvent)>(r1);

        z0 = 1;

        goto label1;

     label4:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void handleMove(android.view.MotionEvent)>(r1);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void handleUp(android.view.MotionEvent)>(r1);

        z0 = 1;

        goto label1;

     label5:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void handleMove(android.view.MotionEvent)>(r1);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void handleCancel(android.view.MotionEvent)>(r1);

        z0 = 1;

        goto label1;

     label6:
        $z1 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public void ping()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void startChevronAnimation()>();

        return;
    }

    public boolean replaceTargetDrawablesIfPresent(android.content.ComponentName, java.lang.String, int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        android.content.ComponentName r1;
        java.lang.String r2, $r14, $r15, $r19, $r22;
        int i0, i1;
        android.content.res.Resources$NotFoundException r3, $r17;
        android.content.pm.PackageManager$NameNotFoundException r4, $r11;
        android.content.pm.PackageManager r5;
        android.os.Bundle r6;
        boolean z0;
        android.content.Context $r7;
        android.content.pm.ActivityInfo $r8;
        android.content.res.Resources $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r16, $r18, $r20, $r21;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r7 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context mContext>;

        r5 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke r5.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r1, 128);

        r6 = $r8.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

     label3:
        if r6 == null goto label1;

     label4:
        i1 = virtualinvoke r6.<android.os.Bundle: int getInt(java.lang.String)>(r2);

     label5:
        if i1 == 0 goto label1;

     label6:
        $r9 = virtualinvoke r5.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>(r1);

        z0 = specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean replaceTargetDrawables(android.content.res.Resources,int,int)>($r9, i0, i1);

     label7:
        return z0;

     label8:
        $r11 := @caughtexception;

        r4 = $r11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to swap drawable; ");

        $r14 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiWaveView", $r15, r4);

        return 0;

     label9:
        $r17 := @caughtexception;

        r3 = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to swap drawable from ");

        $r19 = virtualinvoke r1.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiWaveView", $r22, r3);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label8;
        catch android.content.res.Resources$NotFoundException from label2 to label3 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label8;
        catch android.content.res.Resources$NotFoundException from label4 to label5 with label9;
        catch android.content.pm.PackageManager$NameNotFoundException from label6 to label7 with label8;
        catch android.content.res.Resources$NotFoundException from label6 to label7 with label9;
    }

    public void reset(boolean)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        boolean z0;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle $r1, $r2, $r3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations>;

        virtualinvoke $r1.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void stop()>();

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        virtualinvoke $r2.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void stop()>();

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r3.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void stop()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void startBackgroundAnimation(int,float)>(0, 0.0F);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void hideChevrons()>();

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void hideTargets(boolean,boolean)>(z0, 0);

        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void deactivateHandle(int,int,float,android.animation.Animator$AnimatorListener)>(0, 0, 1.0F, null);

        staticinvoke <com.android.internal.widget.multiwaveview.Tweener: void reset()>();

        return;
    }

    public void resumeAnimations()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations>;

        virtualinvoke $r1.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void setSuspended(boolean)>(0);

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r2.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void setSuspended(boolean)>(0);

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        virtualinvoke $r3.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void setSuspended(boolean)>(0);

        $r4 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations>;

        virtualinvoke $r4.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void start()>();

        $r5 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r5.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void start()>();

        $r6 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        virtualinvoke $r6.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void start()>();

        return;
    }

    public void setDirectionDescriptionsResourceId(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mDirectionDescriptionsResourceId> = i0;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mDirectionDescriptions>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mDirectionDescriptions>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label1:
        return;
    }

    public void setEnableTarget(int, boolean)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        com.android.internal.widget.multiwaveview.TargetDrawable r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label2;

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDrawables>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.internal.widget.multiwaveview.TargetDrawable) $r4;

        $i3 = virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: int getResourceId()>();

        if $i3 != i0 goto label3;

        virtualinvoke r1.<com.android.internal.widget.multiwaveview.TargetDrawable: void setEnabled(boolean)>(z0);

     label2:
        return;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    public void setOnTriggerListener(com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener r1;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        r1 := @parameter0: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$OnTriggerListener mOnTriggerListener> = r1;

        return;
    }

    public void setTargetDescriptionsResourceId(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mTargetDescriptionsResourceId> = i0;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDescriptions>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: java.util.ArrayList mTargetDescriptions>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label1:
        return;
    }

    public void setTargetResources(int)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: boolean mAnimatingTargets>;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: int mNewTargetResources> = i0;

        return;

     label1:
        specialinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: void internalSetTargetResources(int)>(i0);

        return;
    }

    public void setVibrateEnabled(boolean)
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        boolean z0;
        android.os.Vibrator $r1, $r4;
        android.content.Context $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.os.Vibrator mVibrator>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r4 = (android.os.Vibrator) $r3;

        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.os.Vibrator mVibrator> = $r4;

        return;

     label1:
        r0.<com.android.internal.widget.multiwaveview.MultiWaveView: android.os.Vibrator mVibrator> = null;

        return;
    }

    public void suspendAnimations()
    {
        com.android.internal.widget.multiwaveview.MultiWaveView r0;
        com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle $r1, $r2, $r3;

        r0 := @this: com.android.internal.widget.multiwaveview.MultiWaveView;

        $r1 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mChevronAnimations>;

        virtualinvoke $r1.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void setSuspended(boolean)>(1);

        $r2 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mTargetAnimations>;

        virtualinvoke $r2.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void setSuspended(boolean)>(1);

        $r3 = r0.<com.android.internal.widget.multiwaveview.MultiWaveView: com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle mHandleAnimations>;

        virtualinvoke $r3.<com.android.internal.widget.multiwaveview.MultiWaveView$AnimationBundle: void setSuspended(boolean)>(1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.multiwaveview.MultiWaveView: float TARGET_SCALE_EXPANDED> = 1.0F;

        <com.android.internal.widget.multiwaveview.MultiWaveView: float TARGET_SCALE_COLLAPSED> = 0.8F;

        <com.android.internal.widget.multiwaveview.MultiWaveView: float TAP_RADIUS_SCALE_ACCESSIBILITY_ENABLED> = 1.3F;

        <com.android.internal.widget.multiwaveview.MultiWaveView: java.lang.String TAG> = "MultiWaveView";

        <com.android.internal.widget.multiwaveview.MultiWaveView: int STATE_TRACKING> = 3;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int STATE_START> = 1;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int STATE_SNAP> = 4;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int STATE_IDLE> = 0;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int STATE_FIRST_TOUCH> = 2;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int STATE_FINISH> = 5;

        <com.android.internal.widget.multiwaveview.MultiWaveView: float SNAP_MARGIN_DEFAULT> = 20.0F;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int SHOW_ANIMATION_DURATION> = 200;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int SHOW_ANIMATION_DELAY> = 50;

        <com.android.internal.widget.multiwaveview.MultiWaveView: float RING_SCALE_EXPANDED> = 1.0F;

        <com.android.internal.widget.multiwaveview.MultiWaveView: float RING_SCALE_COLLAPSED> = 0.5F;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int RETURN_TO_HOME_DURATION> = 200;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int RETURN_TO_HOME_DELAY> = 1200;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int INITIAL_SHOW_HANDLE_DURATION> = 200;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int HIDE_ANIMATION_DURATION> = 200;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int HIDE_ANIMATION_DELAY> = 200;

        <com.android.internal.widget.multiwaveview.MultiWaveView: boolean DEBUG> = 0;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int CHEVRON_INCREMENTAL_DELAY> = 160;

        <com.android.internal.widget.multiwaveview.MultiWaveView: int CHEVRON_ANIMATION_DURATION> = 850;

        return;
    }
}
