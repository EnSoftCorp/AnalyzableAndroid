public class android.view.View extends java.lang.Object implements android.graphics.drawable.Drawable$Callback, android.view.KeyEvent$Callback, android.view.accessibility.AccessibilityEventSource
{
    public static final int ACCESSIBILITY_CURSOR_POSITION_UNDEFINED;
    public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE;
    static final int ACCESSIBILITY_LIVE_REGION_DEFAULT;
    public static final int ACCESSIBILITY_LIVE_REGION_NONE;
    public static final int ACCESSIBILITY_LIVE_REGION_POLITE;
    static final int ALL_RTL_PROPERTIES_RESOLVED;
    public static final android.util.Property ALPHA;
    static final int CLICKABLE;
    private static final boolean DBG;
    public static final java.lang.String DEBUG_LAYOUT_PROPERTY;
    static final int DISABLED;
    public static final int DRAG_FLAG_GLOBAL;
    static final int DRAG_MASK;
    static final int DRAWING_CACHE_ENABLED;
    public static final int DRAWING_CACHE_QUALITY_AUTO;
    private static final int[] DRAWING_CACHE_QUALITY_FLAGS;
    public static final int DRAWING_CACHE_QUALITY_HIGH;
    public static final int DRAWING_CACHE_QUALITY_LOW;
    static final int DRAWING_CACHE_QUALITY_MASK;
    static final int DRAW_MASK;
    static final int DUPLICATE_PARENT_STATE;
    protected static final int[] EMPTY_STATE_SET;
    static final int ENABLED;
    protected static final int[] ENABLED_FOCUSED_SELECTED_STATE_SET;
    protected static final int[] ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] ENABLED_FOCUSED_STATE_SET;
    protected static final int[] ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET;
    static final int ENABLED_MASK;
    protected static final int[] ENABLED_SELECTED_STATE_SET;
    protected static final int[] ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] ENABLED_STATE_SET;
    protected static final int[] ENABLED_WINDOW_FOCUSED_STATE_SET;
    static final int FADING_EDGE_HORIZONTAL;
    static final int FADING_EDGE_MASK;
    static final int FADING_EDGE_NONE;
    static final int FADING_EDGE_VERTICAL;
    static final int FILTER_TOUCHES_WHEN_OBSCURED;
    public static final int FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS;
    public static final int FIND_VIEWS_WITH_CONTENT_DESCRIPTION;
    public static final int FIND_VIEWS_WITH_TEXT;
    private static final int FITS_SYSTEM_WINDOWS;
    private static final int FOCUSABLE;
    public static final int FOCUSABLES_ALL;
    public static final int FOCUSABLES_TOUCH_MODE;
    static final int FOCUSABLE_IN_TOUCH_MODE;
    private static final int FOCUSABLE_MASK;
    protected static final int[] FOCUSED_SELECTED_STATE_SET;
    protected static final int[] FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] FOCUSED_STATE_SET;
    protected static final int[] FOCUSED_WINDOW_FOCUSED_STATE_SET;
    public static final int FOCUS_BACKWARD;
    public static final int FOCUS_DOWN;
    public static final int FOCUS_FORWARD;
    public static final int FOCUS_LEFT;
    public static final int FOCUS_RIGHT;
    public static final int FOCUS_UP;
    public static final int GONE;
    public static final int HAPTIC_FEEDBACK_ENABLED;
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO;
    static final int IMPORTANT_FOR_ACCESSIBILITY_DEFAULT;
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO;
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS;
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES;
    public static final int INVISIBLE;
    public static final int KEEP_SCREEN_ON;
    public static final int LAYER_TYPE_HARDWARE;
    public static final int LAYER_TYPE_NONE;
    public static final int LAYER_TYPE_SOFTWARE;
    private static final int LAYOUT_DIRECTION_DEFAULT;
    private static final int[] LAYOUT_DIRECTION_FLAGS;
    public static final int LAYOUT_DIRECTION_INHERIT;
    public static final int LAYOUT_DIRECTION_LOCALE;
    public static final int LAYOUT_DIRECTION_LTR;
    static final int LAYOUT_DIRECTION_RESOLVED_DEFAULT;
    public static final int LAYOUT_DIRECTION_RTL;
    static final int LONG_CLICKABLE;
    public static final int MEASURED_HEIGHT_STATE_SHIFT;
    public static final int MEASURED_SIZE_MASK;
    public static final int MEASURED_STATE_MASK;
    public static final int MEASURED_STATE_TOO_SMALL;
    public static final int NAVIGATION_BAR_TRANSIENT;
    public static final int NAVIGATION_BAR_TRANSLUCENT;
    public static final int NAVIGATION_BAR_UNHIDE;
    private static final float NONZERO_EPSILON;
    private static final int NOT_FOCUSABLE;
    public static final int NO_ID;
    static final int OPTIONAL_FITS_SYSTEM_WINDOWS;
    public static final int OVER_SCROLL_ALWAYS;
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS;
    public static final int OVER_SCROLL_NEVER;
    static final int PARENT_SAVE_DISABLED;
    static final int PARENT_SAVE_DISABLED_MASK;
    static final int PFLAG2_ACCESSIBILITY_FOCUSED;
    static final int PFLAG2_ACCESSIBILITY_LIVE_REGION_MASK;
    static final int PFLAG2_ACCESSIBILITY_LIVE_REGION_SHIFT;
    static final int PFLAG2_DRAG_CAN_ACCEPT;
    static final int PFLAG2_DRAG_HOVERED;
    static final int PFLAG2_DRAWABLE_RESOLVED;
    static final int PFLAG2_HAS_TRANSIENT_STATE;
    static final int PFLAG2_IMPORTANT_FOR_ACCESSIBILITY_MASK;
    static final int PFLAG2_IMPORTANT_FOR_ACCESSIBILITY_SHIFT;
    static final int PFLAG2_LAYOUT_DIRECTION_MASK;
    static final int PFLAG2_LAYOUT_DIRECTION_MASK_SHIFT;
    static final int PFLAG2_LAYOUT_DIRECTION_RESOLVED;
    static final int PFLAG2_LAYOUT_DIRECTION_RESOLVED_MASK;
    static final int PFLAG2_LAYOUT_DIRECTION_RESOLVED_RTL;
    static final int PFLAG2_PADDING_RESOLVED;
    static final int PFLAG2_SUBTREE_ACCESSIBILITY_STATE_CHANGED;
    private static final int[] PFLAG2_TEXT_ALIGNMENT_FLAGS;
    static final int PFLAG2_TEXT_ALIGNMENT_MASK;
    static final int PFLAG2_TEXT_ALIGNMENT_MASK_SHIFT;
    static final int PFLAG2_TEXT_ALIGNMENT_RESOLVED;
    private static final int PFLAG2_TEXT_ALIGNMENT_RESOLVED_DEFAULT;
    static final int PFLAG2_TEXT_ALIGNMENT_RESOLVED_MASK;
    static final int PFLAG2_TEXT_ALIGNMENT_RESOLVED_MASK_SHIFT;
    private static final int[] PFLAG2_TEXT_DIRECTION_FLAGS;
    static final int PFLAG2_TEXT_DIRECTION_MASK;
    static final int PFLAG2_TEXT_DIRECTION_MASK_SHIFT;
    static final int PFLAG2_TEXT_DIRECTION_RESOLVED;
    static final int PFLAG2_TEXT_DIRECTION_RESOLVED_DEFAULT;
    static final int PFLAG2_TEXT_DIRECTION_RESOLVED_MASK;
    static final int PFLAG2_TEXT_DIRECTION_RESOLVED_MASK_SHIFT;
    static final int PFLAG2_VIEW_QUICK_REJECTED;
    static final int PFLAG3_CALLED_SUPER;
    static final int PFLAG3_IS_LAID_OUT;
    static final int PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;
    static final int PFLAG3_VIEW_IS_ANIMATING_ALPHA;
    static final int PFLAG3_VIEW_IS_ANIMATING_TRANSFORM;
    static final int PFLAG_ACTIVATED;
    static final int PFLAG_ALPHA_SET;
    static final int PFLAG_ANIMATION_STARTED;
    private static final int PFLAG_AWAKEN_SCROLL_BARS_ON_ATTACH;
    static final int PFLAG_CANCEL_NEXT_UP_EVENT;
    static final int PFLAG_DIRTY;
    static final int PFLAG_DIRTY_MASK;
    static final int PFLAG_DIRTY_OPAQUE;
    static final int PFLAG_DRAWABLE_STATE_DIRTY;
    static final int PFLAG_DRAWING_CACHE_VALID;
    static final int PFLAG_DRAWN;
    static final int PFLAG_DRAW_ANIMATION;
    static final int PFLAG_FOCUSED;
    static final int PFLAG_FORCE_LAYOUT;
    static final int PFLAG_HAS_BOUNDS;
    private static final int PFLAG_HOVERED;
    static final int PFLAG_INVALIDATED;
    static final int PFLAG_IS_ROOT_NAMESPACE;
    static final int PFLAG_LAYOUT_REQUIRED;
    static final int PFLAG_MEASURED_DIMENSION_SET;
    static final int PFLAG_ONLY_DRAWS_BACKGROUND;
    static final int PFLAG_OPAQUE_BACKGROUND;
    static final int PFLAG_OPAQUE_MASK;
    static final int PFLAG_OPAQUE_SCROLLBARS;
    private static final int PFLAG_PIVOT_EXPLICITLY_SET;
    private static final int PFLAG_PREPRESSED;
    private static final int PFLAG_PRESSED;
    static final int PFLAG_REQUEST_TRANSPARENT_REGIONS;
    private static final int PFLAG_SAVE_STATE_CALLED;
    static final int PFLAG_SCROLL_CONTAINER;
    static final int PFLAG_SCROLL_CONTAINER_ADDED;
    static final int PFLAG_SELECTED;
    static final int PFLAG_SKIP_DRAW;
    static final int PFLAG_WANTS_FOCUS;
    private static final int POPULATING_ACCESSIBILITY_EVENT_TYPES;
    protected static final int[] PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET;
    protected static final int[] PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_ENABLED_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_ENABLED_SELECTED_STATE_SET;
    protected static final int[] PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_ENABLED_STATE_SET;
    protected static final int[] PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_FOCUSED_SELECTED_STATE_SET;
    protected static final int[] PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_SELECTED_STATE_SET;
    protected static final int[] PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET;
    protected static final int[] PRESSED_STATE_SET;
    protected static final int[] PRESSED_WINDOW_FOCUSED_STATE_SET;
    public static final int PUBLIC_STATUS_BAR_VISIBILITY_MASK;
    public static final android.util.Property ROTATION;
    public static final android.util.Property ROTATION_X;
    public static final android.util.Property ROTATION_Y;
    static final int SAVE_DISABLED;
    static final int SAVE_DISABLED_MASK;
    public static final android.util.Property SCALE_X;
    public static final android.util.Property SCALE_Y;
    public static final int SCREEN_STATE_OFF;
    public static final int SCREEN_STATE_ON;
    static final int SCROLLBARS_HORIZONTAL;
    static final int SCROLLBARS_INSET_MASK;
    public static final int SCROLLBARS_INSIDE_INSET;
    public static final int SCROLLBARS_INSIDE_OVERLAY;
    static final int SCROLLBARS_MASK;
    static final int SCROLLBARS_NONE;
    public static final int SCROLLBARS_OUTSIDE_INSET;
    static final int SCROLLBARS_OUTSIDE_MASK;
    public static final int SCROLLBARS_OUTSIDE_OVERLAY;
    static final int SCROLLBARS_STYLE_MASK;
    static final int SCROLLBARS_VERTICAL;
    public static final int SCROLLBAR_POSITION_DEFAULT;
    public static final int SCROLLBAR_POSITION_LEFT;
    public static final int SCROLLBAR_POSITION_RIGHT;
    protected static final int[] SELECTED_STATE_SET;
    protected static final int[] SELECTED_WINDOW_FOCUSED_STATE_SET;
    public static final int SOUND_EFFECTS_ENABLED;
    public static final int STATUS_BAR_DISABLE_BACK;
    public static final int STATUS_BAR_DISABLE_CLOCK;
    public static final int STATUS_BAR_DISABLE_EXPAND;
    public static final int STATUS_BAR_DISABLE_HOME;
    public static final int STATUS_BAR_DISABLE_NOTIFICATION_ALERTS;
    public static final int STATUS_BAR_DISABLE_NOTIFICATION_ICONS;
    public static final int STATUS_BAR_DISABLE_NOTIFICATION_TICKER;
    public static final int STATUS_BAR_DISABLE_RECENT;
    public static final int STATUS_BAR_DISABLE_SEARCH;
    public static final int STATUS_BAR_DISABLE_SYSTEM_INFO;
    public static final int STATUS_BAR_HIDDEN;
    public static final int STATUS_BAR_TRANSIENT;
    public static final int STATUS_BAR_TRANSLUCENT;
    public static final int STATUS_BAR_UNHIDE;
    public static final int STATUS_BAR_VISIBLE;
    public static final int SYSTEM_UI_CLEARABLE_FLAGS;
    public static final int SYSTEM_UI_FLAG_FULLSCREEN;
    public static final int SYSTEM_UI_FLAG_HIDE_NAVIGATION;
    public static final int SYSTEM_UI_FLAG_IMMERSIVE;
    public static final int SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
    public static final int SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN;
    public static final int SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION;
    public static final int SYSTEM_UI_FLAG_LAYOUT_STABLE;
    public static final int SYSTEM_UI_FLAG_LOW_PROFILE;
    public static final int SYSTEM_UI_FLAG_VISIBLE;
    public static final int SYSTEM_UI_LAYOUT_FLAGS;
    public static final int TEXT_ALIGNMENT_CENTER;
    private static final int TEXT_ALIGNMENT_DEFAULT;
    public static final int TEXT_ALIGNMENT_GRAVITY;
    public static final int TEXT_ALIGNMENT_INHERIT;
    static final int TEXT_ALIGNMENT_RESOLVED_DEFAULT;
    public static final int TEXT_ALIGNMENT_TEXT_END;
    public static final int TEXT_ALIGNMENT_TEXT_START;
    public static final int TEXT_ALIGNMENT_VIEW_END;
    public static final int TEXT_ALIGNMENT_VIEW_START;
    public static final int TEXT_DIRECTION_ANY_RTL;
    private static final int TEXT_DIRECTION_DEFAULT;
    public static final int TEXT_DIRECTION_FIRST_STRONG;
    public static final int TEXT_DIRECTION_INHERIT;
    public static final int TEXT_DIRECTION_LOCALE;
    public static final int TEXT_DIRECTION_LTR;
    static final int TEXT_DIRECTION_RESOLVED_DEFAULT;
    public static final int TEXT_DIRECTION_RTL;
    public static final android.util.Property TRANSLATION_X;
    public static final android.util.Property TRANSLATION_Y;
    private static final int UNDEFINED_PADDING;
    protected static final java.lang.String VIEW_LOG_TAG;
    static final int VIEW_STATE_ACCELERATED;
    static final int VIEW_STATE_ACTIVATED;
    static final int VIEW_STATE_DRAG_CAN_ACCEPT;
    static final int VIEW_STATE_DRAG_HOVERED;
    static final int VIEW_STATE_ENABLED;
    static final int VIEW_STATE_FOCUSED;
    static final int VIEW_STATE_HOVERED;
    static final int[] VIEW_STATE_IDS;
    static final int VIEW_STATE_PRESSED;
    static final int VIEW_STATE_SELECTED;
    private static final int[][] VIEW_STATE_SETS;
    static final int VIEW_STATE_WINDOW_FOCUSED;
    private static final int[] VISIBILITY_FLAGS;
    static final int VISIBILITY_MASK;
    public static final int VISIBLE;
    static final int WILL_NOT_CACHE_DRAWING;
    static final int WILL_NOT_DRAW;
    protected static final int[] WINDOW_FOCUSED_STATE_SET;
    public static final android.util.Property X;
    public static final android.util.Property Y;
    private static boolean sCompatibilityDone;
    private static boolean sIgnoreMeasureCache;
    private static int sNextAccessibilityViewId;
    private static final java.util.concurrent.atomic.AtomicInteger sNextGeneratedId;
    static final java.lang.ThreadLocal sThreadLocal;
    private static boolean sUseBrokenMakeMeasureSpec;
    private int mAccessibilityCursorPosition;
    android.view.View$AccessibilityDelegate mAccessibilityDelegate;
    int mAccessibilityViewId;
    private android.view.ViewPropertyAnimator mAnimator;
    android.view.View$AttachInfo mAttachInfo;
    private android.graphics.drawable.Drawable mBackground;
    private int mBackgroundResource;
    private boolean mBackgroundSizeChanged;
    protected int mBottom;
    public boolean mCachingFailed;
    private android.graphics.Rect mClipBounds;
    private java.lang.CharSequence mContentDescription;
    protected android.content.Context mContext;
    protected android.view.animation.Animation mCurrentAnimation;
    android.view.DisplayList mDisplayList;
    private int[] mDrawableState;
    private android.graphics.Bitmap mDrawingCache;
    private int mDrawingCacheBackgroundColor;
    private android.view.ViewTreeObserver mFloatingTreeObserver;
    private android.view.HardwareLayer mHardwareLayer;
    private boolean mHasPerformedLongPress;
    int mID;
    protected final android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier;
    private android.util.SparseArray mKeyedTags;
    private int mLabelForId;
    private boolean mLastIsOpaque;
    android.graphics.Paint mLayerPaint;
    int mLayerType;
    private android.graphics.Insets mLayoutInsets;
    protected android.view.ViewGroup$LayoutParams mLayoutParams;
    protected int mLeft;
    private boolean mLeftPaddingDefined;
    android.view.View$ListenerInfo mListenerInfo;
    android.graphics.Rect mLocalDirtyRect;
    private android.view.View$MatchIdPredicate mMatchIdPredicate;
    private android.view.View$MatchLabelForPredicate mMatchLabelForPredicate;
    private android.util.LongSparseLongArray mMeasureCache;
    int mMeasuredHeight;
    int mMeasuredWidth;
    private int mMinHeight;
    private int mMinWidth;
    private int mNextFocusDownId;
    int mNextFocusForwardId;
    private int mNextFocusLeftId;
    private int mNextFocusRightId;
    private int mNextFocusUpId;
    int mOldHeightMeasureSpec;
    int mOldWidthMeasureSpec;
    private int mOverScrollMode;
    android.view.ViewOverlay mOverlay;
    protected int mPaddingBottom;
    protected int mPaddingLeft;
    protected int mPaddingRight;
    protected int mPaddingTop;
    protected android.view.ViewParent mParent;
    private android.view.View$CheckForLongPress mPendingCheckForLongPress;
    private android.view.View$CheckForTap mPendingCheckForTap;
    private android.view.View$PerformClick mPerformClick;
    int mPrivateFlags;
    int mPrivateFlags2;
    int mPrivateFlags3;
    boolean mRecreateDisplayList;
    private final android.content.res.Resources mResources;
    protected int mRight;
    private boolean mRightPaddingDefined;
    private android.view.View$ScrollabilityCache mScrollCache;
    protected int mScrollX;
    protected int mScrollY;
    private android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent;
    android.view.View$SendViewStateChangedAccessibilityEvent mSendViewStateChangedAccessibilityEvent;
    private boolean mSendingHoverAccessibilityEvents;
    int mSystemUiVisibility;
    protected java.lang.Object mTag;
    protected int mTop;
    private android.view.TouchDelegate mTouchDelegate;
    private int mTouchSlop;
    android.view.View$TransformationInfo mTransformationInfo;
    int mTransientStateCount;
    private android.graphics.Bitmap mUnscaledDrawingCache;
    private android.view.View$UnsetPressedState mUnsetPressedState;
    protected int mUserPaddingBottom;
    int mUserPaddingEnd;
    protected int mUserPaddingLeft;
    int mUserPaddingLeftInitial;
    protected int mUserPaddingRight;
    int mUserPaddingRightInitial;
    int mUserPaddingStart;
    private float mVerticalScrollFactor;
    private int mVerticalScrollbarPosition;
    int mViewFlags;
    int mWindowAttachCount;

    static void <clinit>()
    {
        int[] r0, r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r14, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r64, $r66, $r68, $r70, $r72, $r74, $r75, $r76, $r78, $r92, $r93, $r94, $r96;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        int[][] $r10, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r65, $r67, $r69, $r71, $r77, $r79, $r88;
        java.lang.ThreadLocal $r73;
        android.view.View$8 $r80;
        android.view.View$9 $r81;
        android.view.View$6 $r82;
        android.view.View$7 $r83;
        android.view.View$4 $r84;
        android.view.View$5 $r85;
        java.util.concurrent.atomic.AtomicInteger $r86;
        android.view.View$3 $r87;
        android.view.View$12 $r89;
        android.view.View$10 $r90;
        android.view.View$11 $r91;
        java.lang.IllegalStateException $r95;

        <android.view.View: int WILL_NOT_DRAW> = 128;

        <android.view.View: int WILL_NOT_CACHE_DRAWING> = 131072;

        <android.view.View: int VISIBLE> = 0;

        <android.view.View: int VISIBILITY_MASK> = 12;

        <android.view.View: int VIEW_STATE_WINDOW_FOCUSED> = 1;

        <android.view.View: int VIEW_STATE_SELECTED> = 2;

        <android.view.View: int VIEW_STATE_PRESSED> = 16;

        <android.view.View: int VIEW_STATE_HOVERED> = 128;

        <android.view.View: int VIEW_STATE_FOCUSED> = 4;

        <android.view.View: int VIEW_STATE_ENABLED> = 8;

        <android.view.View: int VIEW_STATE_DRAG_HOVERED> = 512;

        <android.view.View: int VIEW_STATE_DRAG_CAN_ACCEPT> = 256;

        <android.view.View: int VIEW_STATE_ACTIVATED> = 32;

        <android.view.View: int VIEW_STATE_ACCELERATED> = 64;

        <android.view.View: java.lang.String VIEW_LOG_TAG> = "View";

        <android.view.View: int UNDEFINED_PADDING> = -2147483648;

        <android.view.View: int TEXT_DIRECTION_RTL> = 4;

        <android.view.View: int TEXT_DIRECTION_RESOLVED_DEFAULT> = 1;

        <android.view.View: int TEXT_DIRECTION_LTR> = 3;

        <android.view.View: int TEXT_DIRECTION_LOCALE> = 5;

        <android.view.View: int TEXT_DIRECTION_INHERIT> = 0;

        <android.view.View: int TEXT_DIRECTION_FIRST_STRONG> = 1;

        <android.view.View: int TEXT_DIRECTION_DEFAULT> = 0;

        <android.view.View: int TEXT_DIRECTION_ANY_RTL> = 2;

        <android.view.View: int TEXT_ALIGNMENT_VIEW_START> = 5;

        <android.view.View: int TEXT_ALIGNMENT_VIEW_END> = 6;

        <android.view.View: int TEXT_ALIGNMENT_TEXT_START> = 2;

        <android.view.View: int TEXT_ALIGNMENT_TEXT_END> = 3;

        <android.view.View: int TEXT_ALIGNMENT_RESOLVED_DEFAULT> = 1;

        <android.view.View: int TEXT_ALIGNMENT_INHERIT> = 0;

        <android.view.View: int TEXT_ALIGNMENT_GRAVITY> = 1;

        <android.view.View: int TEXT_ALIGNMENT_DEFAULT> = 1;

        <android.view.View: int TEXT_ALIGNMENT_CENTER> = 4;

        <android.view.View: int SYSTEM_UI_LAYOUT_FLAGS> = 1536;

        <android.view.View: int SYSTEM_UI_FLAG_VISIBLE> = 0;

        <android.view.View: int SYSTEM_UI_FLAG_LOW_PROFILE> = 1;

        <android.view.View: int SYSTEM_UI_FLAG_LAYOUT_STABLE> = 256;

        <android.view.View: int SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION> = 512;

        <android.view.View: int SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN> = 1024;

        <android.view.View: int SYSTEM_UI_FLAG_IMMERSIVE_STICKY> = 4096;

        <android.view.View: int SYSTEM_UI_FLAG_IMMERSIVE> = 2048;

        <android.view.View: int SYSTEM_UI_FLAG_HIDE_NAVIGATION> = 2;

        <android.view.View: int SYSTEM_UI_FLAG_FULLSCREEN> = 4;

        <android.view.View: int SYSTEM_UI_CLEARABLE_FLAGS> = 7;

        <android.view.View: int STATUS_BAR_VISIBLE> = 0;

        <android.view.View: int STATUS_BAR_UNHIDE> = 268435456;

        <android.view.View: int STATUS_BAR_TRANSLUCENT> = 1073741824;

        <android.view.View: int STATUS_BAR_TRANSIENT> = 67108864;

        <android.view.View: int STATUS_BAR_HIDDEN> = 1;

        <android.view.View: int STATUS_BAR_DISABLE_SYSTEM_INFO> = 1048576;

        <android.view.View: int STATUS_BAR_DISABLE_SEARCH> = 33554432;

        <android.view.View: int STATUS_BAR_DISABLE_RECENT> = 16777216;

        <android.view.View: int STATUS_BAR_DISABLE_NOTIFICATION_TICKER> = 524288;

        <android.view.View: int STATUS_BAR_DISABLE_NOTIFICATION_ICONS> = 131072;

        <android.view.View: int STATUS_BAR_DISABLE_NOTIFICATION_ALERTS> = 262144;

        <android.view.View: int STATUS_BAR_DISABLE_HOME> = 2097152;

        <android.view.View: int STATUS_BAR_DISABLE_EXPAND> = 65536;

        <android.view.View: int STATUS_BAR_DISABLE_CLOCK> = 8388608;

        <android.view.View: int STATUS_BAR_DISABLE_BACK> = 4194304;

        <android.view.View: int SOUND_EFFECTS_ENABLED> = 134217728;

        <android.view.View: int SCROLLBAR_POSITION_RIGHT> = 2;

        <android.view.View: int SCROLLBAR_POSITION_LEFT> = 1;

        <android.view.View: int SCROLLBAR_POSITION_DEFAULT> = 0;

        <android.view.View: int SCROLLBARS_VERTICAL> = 512;

        <android.view.View: int SCROLLBARS_STYLE_MASK> = 50331648;

        <android.view.View: int SCROLLBARS_OUTSIDE_OVERLAY> = 33554432;

        <android.view.View: int SCROLLBARS_OUTSIDE_MASK> = 33554432;

        <android.view.View: int SCROLLBARS_OUTSIDE_INSET> = 50331648;

        <android.view.View: int SCROLLBARS_NONE> = 0;

        <android.view.View: int SCROLLBARS_MASK> = 768;

        <android.view.View: int SCROLLBARS_INSIDE_OVERLAY> = 0;

        <android.view.View: int SCROLLBARS_INSIDE_INSET> = 16777216;

        <android.view.View: int SCROLLBARS_INSET_MASK> = 16777216;

        <android.view.View: int SCROLLBARS_HORIZONTAL> = 256;

        <android.view.View: int SCREEN_STATE_ON> = 1;

        <android.view.View: int SCREEN_STATE_OFF> = 0;

        <android.view.View: int SAVE_DISABLED_MASK> = 65536;

        <android.view.View: int SAVE_DISABLED> = 65536;

        <android.view.View: int PUBLIC_STATUS_BAR_VISIBILITY_MASK> = 65535;

        <android.view.View: int POPULATING_ACCESSIBILITY_EVENT_TYPES> = 172479;

        <android.view.View: int PFLAG_WANTS_FOCUS> = 1;

        <android.view.View: int PFLAG_SKIP_DRAW> = 128;

        <android.view.View: int PFLAG_SELECTED> = 4;

        <android.view.View: int PFLAG_SCROLL_CONTAINER_ADDED> = 1048576;

        <android.view.View: int PFLAG_SCROLL_CONTAINER> = 524288;

        <android.view.View: int PFLAG_SAVE_STATE_CALLED> = 131072;

        <android.view.View: int PFLAG_REQUEST_TRANSPARENT_REGIONS> = 512;

        <android.view.View: int PFLAG_PRESSED> = 16384;

        <android.view.View: int PFLAG_PREPRESSED> = 33554432;

        <android.view.View: int PFLAG_PIVOT_EXPLICITLY_SET> = 536870912;

        <android.view.View: int PFLAG_OPAQUE_SCROLLBARS> = 16777216;

        <android.view.View: int PFLAG_OPAQUE_MASK> = 25165824;

        <android.view.View: int PFLAG_OPAQUE_BACKGROUND> = 8388608;

        <android.view.View: int PFLAG_ONLY_DRAWS_BACKGROUND> = 256;

        <android.view.View: int PFLAG_MEASURED_DIMENSION_SET> = 2048;

        <android.view.View: int PFLAG_LAYOUT_REQUIRED> = 8192;

        <android.view.View: int PFLAG_IS_ROOT_NAMESPACE> = 8;

        <android.view.View: int PFLAG_INVALIDATED> = -2147483648;

        <android.view.View: int PFLAG_HOVERED> = 268435456;

        <android.view.View: int PFLAG_HAS_BOUNDS> = 16;

        <android.view.View: int PFLAG_FORCE_LAYOUT> = 4096;

        <android.view.View: int PFLAG_FOCUSED> = 2;

        <android.view.View: int PFLAG_DRAW_ANIMATION> = 64;

        <android.view.View: int PFLAG_DRAWN> = 32;

        <android.view.View: int PFLAG_DRAWING_CACHE_VALID> = 32768;

        <android.view.View: int PFLAG_DRAWABLE_STATE_DIRTY> = 1024;

        <android.view.View: int PFLAG_DIRTY_OPAQUE> = 4194304;

        <android.view.View: int PFLAG_DIRTY_MASK> = 6291456;

        <android.view.View: int PFLAG_DIRTY> = 2097152;

        <android.view.View: int PFLAG_CANCEL_NEXT_UP_EVENT> = 67108864;

        <android.view.View: int PFLAG_AWAKEN_SCROLL_BARS_ON_ATTACH> = 134217728;

        <android.view.View: int PFLAG_ANIMATION_STARTED> = 65536;

        <android.view.View: int PFLAG_ALPHA_SET> = 262144;

        <android.view.View: int PFLAG_ACTIVATED> = 1073741824;

        <android.view.View: int PFLAG3_VIEW_IS_ANIMATING_TRANSFORM> = 1;

        <android.view.View: int PFLAG3_VIEW_IS_ANIMATING_ALPHA> = 2;

        <android.view.View: int PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT> = 8;

        <android.view.View: int PFLAG3_IS_LAID_OUT> = 4;

        <android.view.View: int PFLAG3_CALLED_SUPER> = 16;

        <android.view.View: int PFLAG2_VIEW_QUICK_REJECTED> = 268435456;

        <android.view.View: int PFLAG2_TEXT_DIRECTION_RESOLVED_MASK_SHIFT> = 10;

        <android.view.View: int PFLAG2_TEXT_DIRECTION_RESOLVED_MASK> = 7168;

        <android.view.View: int PFLAG2_TEXT_DIRECTION_RESOLVED_DEFAULT> = 1024;

        <android.view.View: int PFLAG2_TEXT_DIRECTION_RESOLVED> = 512;

        <android.view.View: int PFLAG2_TEXT_DIRECTION_MASK_SHIFT> = 6;

        <android.view.View: int PFLAG2_TEXT_DIRECTION_MASK> = 448;

        <android.view.View: int PFLAG2_TEXT_ALIGNMENT_RESOLVED_MASK_SHIFT> = 17;

        <android.view.View: int PFLAG2_TEXT_ALIGNMENT_RESOLVED_MASK> = 917504;

        <android.view.View: int PFLAG2_TEXT_ALIGNMENT_RESOLVED_DEFAULT> = 131072;

        <android.view.View: int PFLAG2_TEXT_ALIGNMENT_RESOLVED> = 65536;

        <android.view.View: int PFLAG2_TEXT_ALIGNMENT_MASK_SHIFT> = 13;

        <android.view.View: int PFLAG2_TEXT_ALIGNMENT_MASK> = 57344;

        <android.view.View: int PFLAG2_SUBTREE_ACCESSIBILITY_STATE_CHANGED> = 134217728;

        <android.view.View: int PFLAG2_PADDING_RESOLVED> = 536870912;

        <android.view.View: int PFLAG2_LAYOUT_DIRECTION_RESOLVED_RTL> = 16;

        <android.view.View: int PFLAG2_LAYOUT_DIRECTION_RESOLVED_MASK> = 48;

        <android.view.View: int PFLAG2_LAYOUT_DIRECTION_RESOLVED> = 32;

        <android.view.View: int PFLAG2_LAYOUT_DIRECTION_MASK_SHIFT> = 2;

        <android.view.View: int PFLAG2_LAYOUT_DIRECTION_MASK> = 12;

        <android.view.View: int PFLAG2_IMPORTANT_FOR_ACCESSIBILITY_SHIFT> = 20;

        <android.view.View: int PFLAG2_IMPORTANT_FOR_ACCESSIBILITY_MASK> = 7340032;

        <android.view.View: int PFLAG2_HAS_TRANSIENT_STATE> = -2147483648;

        <android.view.View: int PFLAG2_DRAWABLE_RESOLVED> = 1073741824;

        <android.view.View: int PFLAG2_DRAG_HOVERED> = 2;

        <android.view.View: int PFLAG2_DRAG_CAN_ACCEPT> = 1;

        <android.view.View: int PFLAG2_ACCESSIBILITY_LIVE_REGION_SHIFT> = 23;

        <android.view.View: int PFLAG2_ACCESSIBILITY_LIVE_REGION_MASK> = 25165824;

        <android.view.View: int PFLAG2_ACCESSIBILITY_FOCUSED> = 67108864;

        <android.view.View: int PARENT_SAVE_DISABLED_MASK> = 536870912;

        <android.view.View: int PARENT_SAVE_DISABLED> = 536870912;

        <android.view.View: int OVER_SCROLL_NEVER> = 2;

        <android.view.View: int OVER_SCROLL_IF_CONTENT_SCROLLS> = 1;

        <android.view.View: int OVER_SCROLL_ALWAYS> = 0;

        <android.view.View: int OPTIONAL_FITS_SYSTEM_WINDOWS> = 2048;

        <android.view.View: int NO_ID> = -1;

        <android.view.View: int NOT_FOCUSABLE> = 0;

        <android.view.View: float NONZERO_EPSILON> = 0.001F;

        <android.view.View: int NAVIGATION_BAR_UNHIDE> = 536870912;

        <android.view.View: int NAVIGATION_BAR_TRANSLUCENT> = -2147483648;

        <android.view.View: int NAVIGATION_BAR_TRANSIENT> = 134217728;

        <android.view.View: int MEASURED_STATE_TOO_SMALL> = 16777216;

        <android.view.View: int MEASURED_STATE_MASK> = -16777216;

        <android.view.View: int MEASURED_SIZE_MASK> = 16777215;

        <android.view.View: int MEASURED_HEIGHT_STATE_SHIFT> = 16;

        <android.view.View: int LONG_CLICKABLE> = 2097152;

        <android.view.View: int LAYOUT_DIRECTION_RTL> = 1;

        <android.view.View: int LAYOUT_DIRECTION_RESOLVED_DEFAULT> = 0;

        <android.view.View: int LAYOUT_DIRECTION_LTR> = 0;

        <android.view.View: int LAYOUT_DIRECTION_LOCALE> = 3;

        <android.view.View: int LAYOUT_DIRECTION_INHERIT> = 2;

        <android.view.View: int LAYOUT_DIRECTION_DEFAULT> = 2;

        <android.view.View: int LAYER_TYPE_SOFTWARE> = 1;

        <android.view.View: int LAYER_TYPE_NONE> = 0;

        <android.view.View: int LAYER_TYPE_HARDWARE> = 2;

        <android.view.View: int KEEP_SCREEN_ON> = 67108864;

        <android.view.View: int INVISIBLE> = 4;

        <android.view.View: int IMPORTANT_FOR_ACCESSIBILITY_YES> = 1;

        <android.view.View: int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS> = 4;

        <android.view.View: int IMPORTANT_FOR_ACCESSIBILITY_NO> = 2;

        <android.view.View: int IMPORTANT_FOR_ACCESSIBILITY_DEFAULT> = 0;

        <android.view.View: int IMPORTANT_FOR_ACCESSIBILITY_AUTO> = 0;

        <android.view.View: int HAPTIC_FEEDBACK_ENABLED> = 268435456;

        <android.view.View: int GONE> = 8;

        <android.view.View: int FOCUS_UP> = 33;

        <android.view.View: int FOCUS_RIGHT> = 66;

        <android.view.View: int FOCUS_LEFT> = 17;

        <android.view.View: int FOCUS_FORWARD> = 2;

        <android.view.View: int FOCUS_DOWN> = 130;

        <android.view.View: int FOCUS_BACKWARD> = 1;

        <android.view.View: int FOCUSABLE_MASK> = 1;

        <android.view.View: int FOCUSABLE_IN_TOUCH_MODE> = 262144;

        <android.view.View: int FOCUSABLES_TOUCH_MODE> = 1;

        <android.view.View: int FOCUSABLES_ALL> = 0;

        <android.view.View: int FOCUSABLE> = 1;

        <android.view.View: int FITS_SYSTEM_WINDOWS> = 2;

        <android.view.View: int FIND_VIEWS_WITH_TEXT> = 1;

        <android.view.View: int FIND_VIEWS_WITH_CONTENT_DESCRIPTION> = 2;

        <android.view.View: int FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS> = 4;

        <android.view.View: int FILTER_TOUCHES_WHEN_OBSCURED> = 1024;

        <android.view.View: int FADING_EDGE_VERTICAL> = 8192;

        <android.view.View: int FADING_EDGE_NONE> = 0;

        <android.view.View: int FADING_EDGE_MASK> = 12288;

        <android.view.View: int FADING_EDGE_HORIZONTAL> = 4096;

        <android.view.View: int ENABLED_MASK> = 32;

        <android.view.View: int ENABLED> = 0;

        <android.view.View: int DUPLICATE_PARENT_STATE> = 4194304;

        <android.view.View: int DRAW_MASK> = 128;

        <android.view.View: int DRAWING_CACHE_QUALITY_MASK> = 1572864;

        <android.view.View: int DRAWING_CACHE_QUALITY_LOW> = 524288;

        <android.view.View: int DRAWING_CACHE_QUALITY_HIGH> = 1048576;

        <android.view.View: int DRAWING_CACHE_QUALITY_AUTO> = 0;

        <android.view.View: int DRAWING_CACHE_ENABLED> = 32768;

        <android.view.View: int DRAG_MASK> = 3;

        <android.view.View: int DRAG_FLAG_GLOBAL> = 1;

        <android.view.View: int DISABLED> = 32;

        <android.view.View: java.lang.String DEBUG_LAYOUT_PROPERTY> = "debug.layout";

        <android.view.View: boolean DBG> = 0;

        <android.view.View: int CLICKABLE> = 16384;

        <android.view.View: int ALL_RTL_PROPERTIES_RESOLVED> = 1610678816;

        <android.view.View: int ACCESSIBILITY_LIVE_REGION_POLITE> = 1;

        <android.view.View: int ACCESSIBILITY_LIVE_REGION_NONE> = 0;

        <android.view.View: int ACCESSIBILITY_LIVE_REGION_DEFAULT> = 0;

        <android.view.View: int ACCESSIBILITY_LIVE_REGION_ASSERTIVE> = 2;

        <android.view.View: int ACCESSIBILITY_CURSOR_POSITION_UNDEFINED> = -1;

        <android.view.View: boolean sCompatibilityDone> = 0;

        <android.view.View: boolean sUseBrokenMakeMeasureSpec> = 0;

        <android.view.View: boolean sIgnoreMeasureCache> = 0;

        $r2 = newarray (int)[3];

        $r2[0] = 0;

        $r2[1] = 4;

        $r2[2] = 8;

        <android.view.View: int[] VISIBILITY_FLAGS> = $r2;

        $r3 = newarray (int)[3];

        $r3[0] = 0;

        $r3[1] = 524288;

        $r3[2] = 1048576;

        <android.view.View: int[] DRAWING_CACHE_QUALITY_FLAGS> = $r3;

        $r4 = newarray (int)[20];

        $r4[0] = 16842909;

        $r4[1] = 1;

        $r4[2] = 16842913;

        $r4[3] = 2;

        $r4[4] = 16842908;

        $r4[5] = 4;

        $r4[6] = 16842910;

        $r4[7] = 8;

        $r4[8] = 16842919;

        $r4[9] = 16;

        $r4[10] = 16843518;

        $r4[11] = 32;

        $r4[12] = 16843547;

        $r4[13] = 64;

        $r4[14] = 16843623;

        $r4[15] = 128;

        $r4[16] = 16843624;

        $r4[17] = 256;

        $r4[18] = 16843625;

        $r4[19] = 512;

        <android.view.View: int[] VIEW_STATE_IDS> = $r4;

        $r5 = <android.view.View: int[] VIEW_STATE_IDS>;

        $i7 = lengthof $r5;

        $i9 = $i7 / 2;

        $r6 = <com.android.internal.R$styleable: int[] ViewDrawableStates>;

        $i8 = lengthof $r6;

        if $i9 == $i8 goto label01;

        $r95 = new java.lang.IllegalStateException;

        specialinvoke $r95.<java.lang.IllegalStateException: void <init>(java.lang.String)>("VIEW_STATE_IDs array length does not match ViewDrawableStates style array");

        throw $r95;

     label01:
        $r7 = <android.view.View: int[] VIEW_STATE_IDS>;

        $i10 = lengthof $r7;

        r0 = newarray (int)[$i10];

        i0 = 0;

     label02:
        $r8 = <com.android.internal.R$styleable: int[] ViewDrawableStates>;

        $i11 = lengthof $r8;

        if i0 >= $i11 goto label06;

        $r94 = <com.android.internal.R$styleable: int[] ViewDrawableStates>;

        i5 = $r94[i0];

        i6 = 0;

     label03:
        $r93 = <android.view.View: int[] VIEW_STATE_IDS>;

        $i22 = lengthof $r93;

        if i6 >= $i22 goto label05;

        $r92 = <android.view.View: int[] VIEW_STATE_IDS>;

        $i21 = $r92[i6];

        if $i21 != i5 goto label04;

        $i20 = i0 * 2;

        r0[$i20] = i5;

        $i28 = i0 * 2;

        $i25 = 1 + $i28;

        $r96 = <android.view.View: int[] VIEW_STATE_IDS>;

        $i27 = i6 + 1;

        $i26 = $r96[$i27];

        r0[$i25] = $i26;

     label04:
        i6 = i6 + 2;

        goto label03;

     label05:
        i0 = i0 + 1;

        goto label02;

     label06:
        $r9 = <android.view.View: int[] VIEW_STATE_IDS>;

        $i13 = lengthof $r9;

        $i12 = $i13 / 2;

        $i14 = 1 << $i12;

        $r10 = newarray (int[])[$i14];

        <android.view.View: int[][] VIEW_STATE_SETS> = $r10;

        i1 = 0;

     label07:
        $r11 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $i15 = lengthof $r11;

        if i1 >= $i15 goto label11;

        $i19 = staticinvoke <java.lang.Integer: int bitCount(int)>(i1);

        r1 = newarray (int)[$i19];

        i2 = 0;

        i3 = 0;

     label08:
        $i18 = lengthof r0;

        if i3 >= $i18 goto label10;

        $i16 = i3 + 1;

        $i17 = r0[$i16];

        $i24 = i1 & $i17;

        if $i24 == 0 goto label09;

        i4 = i2 + 1;

        $i23 = r0[i3];

        r1[i2] = $i23;

        i2 = i4;

     label09:
        i3 = i3 + 2;

        goto label08;

     label10:
        $r88 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r88[i1] = r1;

        i1 = i1 + 1;

        goto label07;

     label11:
        $r13 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r12 = $r13[0];

        <android.view.View: int[] EMPTY_STATE_SET> = $r12;

        $r15 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r14 = $r15[1];

        <android.view.View: int[] WINDOW_FOCUSED_STATE_SET> = $r14;

        $r18 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r19 = $r18[2];

        <android.view.View: int[] SELECTED_STATE_SET> = $r19;

        $r16 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r17 = $r16[3];

        <android.view.View: int[] SELECTED_WINDOW_FOCUSED_STATE_SET> = $r17;

        $r22 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r23 = $r22[4];

        <android.view.View: int[] FOCUSED_STATE_SET> = $r23;

        $r20 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r21 = $r20[5];

        <android.view.View: int[] FOCUSED_WINDOW_FOCUSED_STATE_SET> = $r21;

        $r26 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r27 = $r26[6];

        <android.view.View: int[] FOCUSED_SELECTED_STATE_SET> = $r27;

        $r24 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r25 = $r24[7];

        <android.view.View: int[] FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = $r25;

        $r30 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r31 = $r30[8];

        <android.view.View: int[] ENABLED_STATE_SET> = $r31;

        $r28 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r29 = $r28[9];

        <android.view.View: int[] ENABLED_WINDOW_FOCUSED_STATE_SET> = $r29;

        $r35 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r34 = $r35[10];

        <android.view.View: int[] ENABLED_SELECTED_STATE_SET> = $r34;

        $r33 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r32 = $r33[11];

        <android.view.View: int[] ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET> = $r32;

        $r39 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r38 = $r39[12];

        <android.view.View: int[] ENABLED_FOCUSED_STATE_SET> = $r38;

        $r37 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r36 = $r37[13];

        <android.view.View: int[] ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET> = $r36;

        $r43 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r42 = $r43[14];

        <android.view.View: int[] ENABLED_FOCUSED_SELECTED_STATE_SET> = $r42;

        $r41 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r40 = $r41[15];

        <android.view.View: int[] ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = $r40;

        $r47 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r46 = $r47[16];

        <android.view.View: int[] PRESSED_STATE_SET> = $r46;

        $r45 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r44 = $r45[17];

        <android.view.View: int[] PRESSED_WINDOW_FOCUSED_STATE_SET> = $r44;

        $r52 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r53 = $r52[18];

        <android.view.View: int[] PRESSED_SELECTED_STATE_SET> = $r53;

        $r54 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r55 = $r54[19];

        <android.view.View: int[] PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = $r55;

        $r48 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r49 = $r48[20];

        <android.view.View: int[] PRESSED_FOCUSED_STATE_SET> = $r49;

        $r50 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r51 = $r50[21];

        <android.view.View: int[] PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET> = $r51;

        $r60 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r61 = $r60[22];

        <android.view.View: int[] PRESSED_FOCUSED_SELECTED_STATE_SET> = $r61;

        $r62 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r63 = $r62[23];

        <android.view.View: int[] PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = $r63;

        $r56 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r57 = $r56[24];

        <android.view.View: int[] PRESSED_ENABLED_STATE_SET> = $r57;

        $r58 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r59 = $r58[25];

        <android.view.View: int[] PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET> = $r59;

        $r69 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r68 = $r69[26];

        <android.view.View: int[] PRESSED_ENABLED_SELECTED_STATE_SET> = $r68;

        $r71 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r70 = $r71[27];

        <android.view.View: int[] PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET> = $r70;

        $r65 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r64 = $r65[28];

        <android.view.View: int[] PRESSED_ENABLED_FOCUSED_STATE_SET> = $r64;

        $r67 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r66 = $r67[29];

        <android.view.View: int[] PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET> = $r66;

        $r77 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r76 = $r77[30];

        <android.view.View: int[] PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET> = $r76;

        $r79 = <android.view.View: int[][] VIEW_STATE_SETS>;

        $r78 = $r79[31];

        <android.view.View: int[] PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET> = $r78;

        $r73 = new java.lang.ThreadLocal;

        specialinvoke $r73.<java.lang.ThreadLocal: void <init>()>();

        <android.view.View: java.lang.ThreadLocal sThreadLocal> = $r73;

        $r72 = newarray (int)[4];

        $r72[0] = 0;

        $r72[1] = 1;

        $r72[2] = 2;

        $r72[3] = 3;

        <android.view.View: int[] LAYOUT_DIRECTION_FLAGS> = $r72;

        $r75 = newarray (int)[6];

        $r75[0] = 0;

        $r75[1] = 64;

        $r75[2] = 128;

        $r75[3] = 192;

        $r75[4] = 256;

        $r75[5] = 320;

        <android.view.View: int[] PFLAG2_TEXT_DIRECTION_FLAGS> = $r75;

        $r74 = newarray (int)[7];

        $r74[0] = 0;

        $r74[1] = 8192;

        $r74[2] = 16384;

        $r74[3] = 24576;

        $r74[4] = 32768;

        $r74[5] = 40960;

        $r74[6] = 49152;

        <android.view.View: int[] PFLAG2_TEXT_ALIGNMENT_FLAGS> = $r74;

        $r86 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r86.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        <android.view.View: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId> = $r86;

        $r87 = new android.view.View$3;

        specialinvoke $r87.<android.view.View$3: void <init>(java.lang.String)>("alpha");

        <android.view.View: android.util.Property ALPHA> = $r87;

        $r84 = new android.view.View$4;

        specialinvoke $r84.<android.view.View$4: void <init>(java.lang.String)>("translationX");

        <android.view.View: android.util.Property TRANSLATION_X> = $r84;

        $r85 = new android.view.View$5;

        specialinvoke $r85.<android.view.View$5: void <init>(java.lang.String)>("translationY");

        <android.view.View: android.util.Property TRANSLATION_Y> = $r85;

        $r82 = new android.view.View$6;

        specialinvoke $r82.<android.view.View$6: void <init>(java.lang.String)>("x");

        <android.view.View: android.util.Property X> = $r82;

        $r83 = new android.view.View$7;

        specialinvoke $r83.<android.view.View$7: void <init>(java.lang.String)>("y");

        <android.view.View: android.util.Property Y> = $r83;

        $r80 = new android.view.View$8;

        specialinvoke $r80.<android.view.View$8: void <init>(java.lang.String)>("rotation");

        <android.view.View: android.util.Property ROTATION> = $r80;

        $r81 = new android.view.View$9;

        specialinvoke $r81.<android.view.View$9: void <init>(java.lang.String)>("rotationX");

        <android.view.View: android.util.Property ROTATION_X> = $r81;

        $r90 = new android.view.View$10;

        specialinvoke $r90.<android.view.View$10: void <init>(java.lang.String)>("rotationY");

        <android.view.View: android.util.Property ROTATION_Y> = $r90;

        $r91 = new android.view.View$11;

        specialinvoke $r91.<android.view.View$11: void <init>(java.lang.String)>("scaleX");

        <android.view.View: android.util.Property SCALE_X> = $r91;

        $r89 = new android.view.View$12;

        specialinvoke $r89.<android.view.View$12: void <init>(java.lang.String)>("scaleY");

        <android.view.View: android.util.Property SCALE_Y> = $r89;

        return;
    }

    void <init>()
    {
        android.view.View r0;
        android.view.InputEventConsistencyVerifier r1, $r2;
        boolean $z0;

        r0 := @this: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.View: android.view.animation.Animation mCurrentAnimation> = null;

        r0.<android.view.View: boolean mRecreateDisplayList> = 0;

        r0.<android.view.View: int mID> = -1;

        r0.<android.view.View: int mAccessibilityViewId> = -1;

        r0.<android.view.View: int mAccessibilityCursorPosition> = -1;

        r0.<android.view.View: int mTransientStateCount> = 0;

        r0.<android.view.View: android.graphics.Rect mClipBounds> = null;

        r0.<android.view.View: int mPaddingLeft> = 0;

        r0.<android.view.View: int mPaddingRight> = 0;

        r0.<android.view.View: int mLabelForId> = -1;

        r0.<android.view.View: boolean mLeftPaddingDefined> = 0;

        r0.<android.view.View: boolean mRightPaddingDefined> = 0;

        r0.<android.view.View: int mOldWidthMeasureSpec> = -2147483648;

        r0.<android.view.View: int mOldHeightMeasureSpec> = -2147483648;

        r0.<android.view.View: int[] mDrawableState> = null;

        r0.<android.view.View: int mNextFocusLeftId> = -1;

        r0.<android.view.View: int mNextFocusRightId> = -1;

        r0.<android.view.View: int mNextFocusUpId> = -1;

        r0.<android.view.View: int mNextFocusDownId> = -1;

        r0.<android.view.View: int mNextFocusForwardId> = -1;

        r0.<android.view.View: android.view.View$CheckForTap mPendingCheckForTap> = null;

        r0.<android.view.View: android.view.TouchDelegate mTouchDelegate> = null;

        r0.<android.view.View: int mDrawingCacheBackgroundColor> = 0;

        r0.<android.view.View: android.view.ViewPropertyAnimator mAnimator> = null;

        r0.<android.view.View: int mLayerType> = 0;

        $z0 = staticinvoke <android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>();

        if $z0 == 0 goto label2;

        $r2 = new android.view.InputEventConsistencyVerifier;

        specialinvoke $r2.<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int)>(r0, 0);

        r1 = $r2;

     label1:
        r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier> = r1;

        r0.<android.view.View: android.content.res.Resources mResources> = null;

        return;

     label2:
        r1 = null;

        goto label1;
    }

    public void <init>(android.content.Context)
    {
        android.view.View r0;
        android.content.Context r1;
        android.view.InputEventConsistencyVerifier r2, $r6;
        android.content.res.Resources r3;
        int i0, $i1;
        boolean z0, z1, $z2, $z3;
        android.view.ViewConfiguration $r4;
        android.content.pm.ApplicationInfo $r5;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.View: android.view.animation.Animation mCurrentAnimation> = null;

        r0.<android.view.View: boolean mRecreateDisplayList> = 0;

        r0.<android.view.View: int mID> = -1;

        r0.<android.view.View: int mAccessibilityViewId> = -1;

        r0.<android.view.View: int mAccessibilityCursorPosition> = -1;

        r0.<android.view.View: int mTransientStateCount> = 0;

        r0.<android.view.View: android.graphics.Rect mClipBounds> = null;

        r0.<android.view.View: int mPaddingLeft> = 0;

        r0.<android.view.View: int mPaddingRight> = 0;

        r0.<android.view.View: int mLabelForId> = -1;

        r0.<android.view.View: boolean mLeftPaddingDefined> = 0;

        r0.<android.view.View: boolean mRightPaddingDefined> = 0;

        r0.<android.view.View: int mOldWidthMeasureSpec> = -2147483648;

        r0.<android.view.View: int mOldHeightMeasureSpec> = -2147483648;

        r0.<android.view.View: int[] mDrawableState> = null;

        r0.<android.view.View: int mNextFocusLeftId> = -1;

        r0.<android.view.View: int mNextFocusRightId> = -1;

        r0.<android.view.View: int mNextFocusUpId> = -1;

        r0.<android.view.View: int mNextFocusDownId> = -1;

        r0.<android.view.View: int mNextFocusForwardId> = -1;

        r0.<android.view.View: android.view.View$CheckForTap mPendingCheckForTap> = null;

        r0.<android.view.View: android.view.TouchDelegate mTouchDelegate> = null;

        r0.<android.view.View: int mDrawingCacheBackgroundColor> = 0;

        r0.<android.view.View: android.view.ViewPropertyAnimator mAnimator> = null;

        r0.<android.view.View: int mLayerType> = 0;

        $z2 = staticinvoke <android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>();

        if $z2 == 0 goto label6;

        $r6 = new android.view.InputEventConsistencyVerifier;

        specialinvoke $r6.<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int)>(r0, 0);

        r2 = $r6;

     label1:
        r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier> = r2;

        r0.<android.view.View: android.content.Context mContext> = r1;

        r3 = null;

        if r1 == null goto label2;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

     label2:
        r0.<android.view.View: android.content.res.Resources mResources> = r3;

        r0.<android.view.View: int mViewFlags> = 402653184;

        r0.<android.view.View: int mPrivateFlags2> = 140296;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i1 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.view.View: int mTouchSlop> = $i1;

        virtualinvoke r0.<android.view.View: void setOverScrollMode(int)>(1);

        r0.<android.view.View: int mUserPaddingStart> = -2147483648;

        r0.<android.view.View: int mUserPaddingEnd> = -2147483648;

        $z3 = <android.view.View: boolean sCompatibilityDone>;

        if $z3 != 0 goto label5;

        if r1 == null goto label5;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r5.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if i0 > 17 goto label7;

        z0 = 1;

     label3:
        <android.view.View: boolean sUseBrokenMakeMeasureSpec> = z0;

        z1 = 0;

        if i0 >= 19 goto label4;

        z1 = 1;

     label4:
        <android.view.View: boolean sIgnoreMeasureCache> = z1;

        <android.view.View: boolean sCompatibilityDone> = 1;

     label5:
        return;

     label6:
        r2 = null;

        goto label1;

     label7:
        z0 = 0;

        goto label3;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.View r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.view.View r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        android.content.res.TypedArray r3;
        android.graphics.drawable.Drawable r4;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9;
        java.lang.String r5, $r14;
        android.view.View$1 r6, $r12;
        android.content.pm.ApplicationInfo $r7;
        int[] $r8, $r9, $r10, $r11, $r15, $r16;
        java.lang.IllegalStateException $r13;
        java.lang.CharSequence $r17;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        $r8 = <com.android.internal.R$styleable: int[] View>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r8, i0, 0);

        r4 = null;

        i1 = -1;

        i2 = -1;

        i3 = -1;

        i4 = -1;

        i5 = -2147483648;

        i6 = -2147483648;

        i7 = -1;

        i8 = 0;

        i9 = 0;

        z0 = 0;

        i11 = 0;

        i10 = 0;

        f1 = 0.0F;

        f0 = 0.0F;

        f3 = 0.0F;

        f2 = 0.0F;

        f5 = 0.0F;

        f4 = 1.0F;

        f6 = 1.0F;

        z1 = 0;

        i13 = 0;

        i12 = r0.<android.view.View: int mOverScrollMode>;

        z3 = 0;

        z2 = 0;

        z5 = 0;

        z4 = 0;

        z6 = 0;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i16 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        i14 = virtualinvoke r3.<android.content.res.TypedArray: int getIndexCount()>();

        i15 = 0;

     label01:
        if i15 >= i14 goto label68;

        i23 = virtualinvoke r3.<android.content.res.TypedArray: int getIndex(int)>(i15);

        tableswitch(i23)
        {
            case 7: goto label48;
            case 8: goto label27;
            case 9: goto label28;
            case 10: goto label15;
            case 11: goto label16;
            case 12: goto label03;
            case 13: goto label04;
            case 14: goto label05;
            case 15: goto label06;
            case 16: goto label07;
            case 17: goto label08;
            case 18: goto label30;
            case 19: goto label31;
            case 20: goto label36;
            case 21: goto label29;
            case 22: goto label45;
            case 23: goto label46;
            case 24: goto label02;
            case 25: goto label52;
            case 26: goto label53;
            case 27: goto label54;
            case 28: goto label55;
            case 29: goto label32;
            case 30: goto label33;
            case 31: goto label34;
            case 32: goto label40;
            case 33: goto label35;
            case 34: goto label57;
            case 35: goto label58;
            case 36: goto label43;
            case 37: goto label50;
            case 38: goto label49;
            case 39: goto label44;
            case 40: goto label59;
            case 41: goto label41;
            case 42: goto label02;
            case 43: goto label02;
            case 44: goto label02;
            case 45: goto label61;
            case 46: goto label51;
            case 47: goto label17;
            case 48: goto label18;
            case 49: goto label19;
            case 50: goto label20;
            case 51: goto label21;
            case 52: goto label25;
            case 53: goto label26;
            case 54: goto label22;
            case 55: goto label23;
            case 56: goto label24;
            case 57: goto label62;
            case 58: goto label56;
            case 59: goto label63;
            case 60: goto label47;
            case 61: goto label66;
            case 62: goto label64;
            case 63: goto label65;
            case 64: goto label37;
            case 65: goto label09;
            case 66: goto label12;
            case 67: goto label42;
            case 68: goto label67;
            default: goto label02;
        };

     label02:
        i15 = i15 + 1;

        goto label01;

     label03:
        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i23);

        goto label02;

     label04:
        i7 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, -1);

        r0.<android.view.View: int mUserPaddingLeftInitial> = i7;

        r0.<android.view.View: int mUserPaddingRightInitial> = i7;

        z4 = 1;

        z6 = 1;

        goto label02;

     label05:
        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, -1);

        r0.<android.view.View: int mUserPaddingLeftInitial> = i1;

        z4 = 1;

        goto label02;

     label06:
        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, -1);

        goto label02;

     label07:
        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, -1);

        r0.<android.view.View: int mUserPaddingRightInitial> = i3;

        z6 = 1;

        goto label02;

     label08:
        i4 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, -1);

        goto label02;

     label09:
        i5 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, -2147483648);

        if i5 == -2147483648 goto label11;

        z2 = 1;

     label10:
        goto label02;

     label11:
        z2 = 0;

        goto label10;

     label12:
        i6 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, -2147483648);

        if i6 == -2147483648 goto label14;

        z5 = 1;

     label13:
        goto label02;

     label14:
        z5 = 0;

        goto label13;

     label15:
        i11 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i23, 0);

        goto label02;

     label16:
        i10 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i23, 0);

        goto label02;

     label17:
        $f9 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i23, 1.0F);

        virtualinvoke r0.<android.view.View: void setAlpha(float)>($f9);

        goto label02;

     label18:
        $i52 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i23, 0);

        $f7 = (float) $i52;

        virtualinvoke r0.<android.view.View: void setPivotX(float)>($f7);

        goto label02;

     label19:
        $i53 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i23, 0);

        $f8 = (float) $i53;

        virtualinvoke r0.<android.view.View: void setPivotY(float)>($f8);

        goto label02;

     label20:
        $i55 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i23, 0);

        f1 = (float) $i55;

        z1 = 1;

        goto label02;

     label21:
        $i54 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(i23, 0);

        f0 = (float) $i54;

        z1 = 1;

        goto label02;

     label22:
        f3 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i23, 0.0F);

        z1 = 1;

        goto label02;

     label23:
        f2 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i23, 0.0F);

        z1 = 1;

        goto label02;

     label24:
        f5 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i23, 0.0F);

        z1 = 1;

        goto label02;

     label25:
        f4 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i23, 1.0F);

        z1 = 1;

        goto label02;

     label26:
        f6 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(i23, 1.0F);

        z1 = 1;

        goto label02;

     label27:
        $i64 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i23, -1);

        r0.<android.view.View: int mID> = $i64;

        goto label02;

     label28:
        $r17 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i23);

        r0.<android.view.View: java.lang.Object mTag> = $r17;

        goto label02;

     label29:
        $z23 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z23 == 0 goto label02;

        i8 = i8 | 2;

        i9 = i9 | 2;

        goto label02;

     label30:
        $z24 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z24 == 0 goto label02;

        i8 = i8 | 1;

        i9 = i9 | 1;

        goto label02;

     label31:
        $z25 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z25 == 0 goto label02;

        i8 = i8 | 262145;

        i9 = i9 | 262145;

        goto label02;

     label32:
        $z20 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z20 == 0 goto label02;

        i8 = 16384 | i8;

        i9 = 16384 | i9;

        goto label02;

     label33:
        $z21 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z21 == 0 goto label02;

        i8 = i8 | 2097152;

        i9 = i9 | 2097152;

        goto label02;

     label34:
        $z22 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 1);

        if $z22 != 0 goto label02;

        i8 = i8 | 65536;

        i9 = i9 | 65536;

        goto label02;

     label35:
        $z15 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z15 == 0 goto label02;

        i8 = i8 | 4194304;

        i9 = i9 | 4194304;

        goto label02;

     label36:
        i26 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        if i26 == 0 goto label02;

        $r16 = <android.view.View: int[] VISIBILITY_FLAGS>;

        $i63 = $r16[i26];

        i8 = i8 | $i63;

        i9 = i9 | 12;

        goto label02;

     label37:
        $i36 = r0.<android.view.View: int mPrivateFlags2>;

        $i32 = -61 & $i36;

        r0.<android.view.View: int mPrivateFlags2> = $i32;

        i28 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, -1);

        if i28 == -1 goto label39;

        $r10 = <android.view.View: int[] LAYOUT_DIRECTION_FLAGS>;

        i27 = $r10[i28];

     label38:
        $i34 = r0.<android.view.View: int mPrivateFlags2>;

        $i33 = i27 << 2;

        $i39 = $i34 | $i33;

        r0.<android.view.View: int mPrivateFlags2> = $i39;

        goto label02;

     label39:
        i27 = 2;

        goto label38;

     label40:
        i29 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        if i29 == 0 goto label02;

        $r15 = <android.view.View: int[] DRAWING_CACHE_QUALITY_FLAGS>;

        $i61 = $r15[i29];

        i8 = i8 | $i61;

        i9 = i9 | 1572864;

        goto label02;

     label41:
        $r14 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(i23);

        virtualinvoke r0.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r14);

        goto label02;

     label42:
        $i35 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i23, -1);

        virtualinvoke r0.<android.view.View: void setLabelFor(int)>($i35);

        goto label02;

     label43:
        $z16 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 1);

        if $z16 != 0 goto label02;

        i8 = i8 & -134217729;

        i9 = i9 | 134217728;

        goto label02;

     label44:
        $z19 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 1);

        if $z19 != 0 goto label02;

        i8 = i8 & -268435457;

        i9 = i9 | 268435456;

        goto label02;

     label45:
        i25 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        if i25 == 0 goto label02;

        i8 = i8 | i25;

        i9 = 768 | i9;

        z3 = 1;

        goto label02;

     label46:
        if i16 >= 14 goto label02;

     label47:
        i24 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        if i24 == 0 goto label02;

        i8 = i8 | i24;

        i9 = 12288 | i9;

        virtualinvoke r0.<android.view.View: void initializeFadingEdge(android.content.res.TypedArray)>(r3);

        goto label02;

     label48:
        i13 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        if i13 == 0 goto label02;

        $i65 = 50331648 & i13;

        i8 = i8 | $i65;

        i9 = i9 | 50331648;

        goto label02;

     label49:
        z0 = 1;

        $z18 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z18 == 0 goto label02;

        virtualinvoke r0.<android.view.View: void setScrollContainer(boolean)>(1);

        goto label02;

     label50:
        $z17 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z17 == 0 goto label02;

        i8 = i8 | 67108864;

        i9 = i9 | 67108864;

        goto label02;

     label51:
        $z14 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i23, 0);

        if $z14 == 0 goto label02;

        i8 = 1024 | i8;

        i9 = 1024 | i9;

        goto label02;

     label52:
        $i62 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i23, -1);

        r0.<android.view.View: int mNextFocusLeftId> = $i62;

        goto label02;

     label53:
        $i58 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i23, -1);

        r0.<android.view.View: int mNextFocusRightId> = $i58;

        goto label02;

     label54:
        $i59 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i23, -1);

        r0.<android.view.View: int mNextFocusUpId> = $i59;

        goto label02;

     label55:
        $i60 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i23, -1);

        r0.<android.view.View: int mNextFocusDownId> = $i60;

        goto label02;

     label56:
        $i50 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(i23, -1);

        r0.<android.view.View: int mNextFocusForwardId> = $i50;

        goto label02;

     label57:
        $i56 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, 0);

        r0.<android.view.View: int mMinWidth> = $i56;

        goto label02;

     label58:
        $i57 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i23, 0);

        r0.<android.view.View: int mMinHeight> = $i57;

        goto label02;

     label59:
        $z13 = virtualinvoke r1.<android.content.Context: boolean isRestricted()>();

        if $z13 == 0 goto label60;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The android:onClick attribute cannot be used within a restricted context");

        throw $r13;

     label60:
        r5 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(i23);

        if r5 == null goto label02;

        $r12 = new android.view.View$1;

        specialinvoke $r12.<android.view.View$1: void <init>(android.view.View,java.lang.String)>(r0, r5);

        r6 = $r12;

        virtualinvoke r0.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r6);

        goto label02;

     label61:
        i12 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 1);

        goto label02;

     label62:
        $i48 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        r0.<android.view.View: int mVerticalScrollbarPosition> = $i48;

        goto label02;

     label63:
        $i51 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        virtualinvoke r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>($i51, null);

        goto label02;

     label64:
        $i45 = r0.<android.view.View: int mPrivateFlags2>;

        $i47 = -449 & $i45;

        r0.<android.view.View: int mPrivateFlags2> = $i47;

        i21 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, -1);

        if i21 == -1 goto label02;

        $i44 = r0.<android.view.View: int mPrivateFlags2>;

        $r11 = <android.view.View: int[] PFLAG2_TEXT_DIRECTION_FLAGS>;

        $i42 = $r11[i21];

        $i43 = $i44 | $i42;

        r0.<android.view.View: int mPrivateFlags2> = $i43;

        goto label02;

     label65:
        $i40 = r0.<android.view.View: int mPrivateFlags2>;

        $i41 = -57345 & $i40;

        r0.<android.view.View: int mPrivateFlags2> = $i41;

        i20 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 1);

        $i38 = r0.<android.view.View: int mPrivateFlags2>;

        $r9 = <android.view.View: int[] PFLAG2_TEXT_ALIGNMENT_FLAGS>;

        $i37 = $r9[i20];

        $i46 = $i38 | $i37;

        r0.<android.view.View: int mPrivateFlags2> = $i46;

        goto label02;

     label66:
        $i49 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        virtualinvoke r0.<android.view.View: void setImportantForAccessibility(int)>($i49);

        goto label02;

     label67:
        $i31 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(i23, 0);

        virtualinvoke r0.<android.view.View: void setAccessibilityLiveRegion(int)>($i31);

        goto label02;

     label68:
        virtualinvoke r0.<android.view.View: void setOverScrollMode(int)>(i12);

        r0.<android.view.View: int mUserPaddingStart> = i5;

        r0.<android.view.View: int mUserPaddingEnd> = i6;

        if r4 == null goto label69;

        virtualinvoke r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>(r4);

     label69:
        r0.<android.view.View: boolean mLeftPaddingDefined> = z4;

        r0.<android.view.View: boolean mRightPaddingDefined> = z6;

        if i7 < 0 goto label70;

        i1 = i7;

        i2 = i7;

        i3 = i7;

        i4 = i7;

        r0.<android.view.View: int mUserPaddingLeftInitial> = i7;

        r0.<android.view.View: int mUserPaddingRightInitial> = i7;

     label70:
        $z10 = specialinvoke r0.<android.view.View: boolean isRtlCompatibilityMode()>();

        if $z10 == 0 goto label87;

        $z12 = r0.<android.view.View: boolean mLeftPaddingDefined>;

        if $z12 != 0 goto label71;

        if z2 == 0 goto label71;

        i1 = i5;

     label71:
        if i1 < 0 goto label85;

        i18 = i1;

     label72:
        r0.<android.view.View: int mUserPaddingLeftInitial> = i18;

        $z11 = r0.<android.view.View: boolean mRightPaddingDefined>;

        if $z11 != 0 goto label73;

        if z5 == 0 goto label73;

        i3 = i6;

     label73:
        if i3 < 0 goto label86;

        i22 = i3;

     label74:
        r0.<android.view.View: int mUserPaddingRightInitial> = i22;

     label75:
        i19 = r0.<android.view.View: int mUserPaddingLeftInitial>;

        if i2 < 0 goto label92;

     label76:
        i17 = r0.<android.view.View: int mUserPaddingRightInitial>;

        if i4 < 0 goto label93;

     label77:
        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>(i19, i2, i17, i4);

        if i9 == 0 goto label78;

        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i8, i9);

     label78:
        if z3 == 0 goto label79;

        virtualinvoke r0.<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>(r3);

     label79:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        if i13 == 0 goto label80;

        virtualinvoke r0.<android.view.View: void recomputePadding()>();

     label80:
        if i11 != 0 goto label81;

        if i10 == 0 goto label82;

     label81:
        virtualinvoke r0.<android.view.View: void scrollTo(int,int)>(i11, i10);

     label82:
        if z1 == 0 goto label83;

        virtualinvoke r0.<android.view.View: void setTranslationX(float)>(f1);

        virtualinvoke r0.<android.view.View: void setTranslationY(float)>(f0);

        virtualinvoke r0.<android.view.View: void setRotation(float)>(f3);

        virtualinvoke r0.<android.view.View: void setRotationX(float)>(f2);

        virtualinvoke r0.<android.view.View: void setRotationY(float)>(f5);

        virtualinvoke r0.<android.view.View: void setScaleX(float)>(f4);

        virtualinvoke r0.<android.view.View: void setScaleY(float)>(f6);

     label83:
        if z0 != 0 goto label84;

        $i30 = 512 & i8;

        if $i30 == 0 goto label84;

        virtualinvoke r0.<android.view.View: void setScrollContainer(boolean)>(1);

     label84:
        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        return;

     label85:
        i18 = r0.<android.view.View: int mUserPaddingLeftInitial>;

        goto label72;

     label86:
        i22 = r0.<android.view.View: int mUserPaddingRightInitial>;

        goto label74;

     label87:
        if z2 != 0 goto label88;

        if z5 == 0 goto label91;

     label88:
        z7 = 1;

     label89:
        $z9 = r0.<android.view.View: boolean mLeftPaddingDefined>;

        if $z9 == 0 goto label90;

        if z7 != 0 goto label90;

        r0.<android.view.View: int mUserPaddingLeftInitial> = i1;

     label90:
        $z8 = r0.<android.view.View: boolean mRightPaddingDefined>;

        if $z8 == 0 goto label75;

        if z7 != 0 goto label75;

        r0.<android.view.View: int mUserPaddingRightInitial> = i3;

        goto label75;

     label91:
        z7 = 0;

        goto label89;

     label92:
        i2 = r0.<android.view.View: int mPaddingTop>;

        goto label76;

     label93:
        i4 = r0.<android.view.View: int mPaddingBottom>;

        goto label77;
    }

    static boolean access$2400()
    {
        boolean $z0;

        $z0 = <android.view.View: boolean sUseBrokenMakeMeasureSpec>;

        return $z0;
    }

    static boolean access$2502(android.view.View, boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r0.<android.view.View: boolean mHasPerformedLongPress> = z0;

        return z0;
    }

    static void access$2600(android.view.View, int)
    {
        android.view.View r0;
        int i0;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.View: void checkForLongClick(int)>(i0);

        return;
    }

    static int access$2700(android.view.View)
    {
        android.view.View r0;
        int $i0;

        r0 := @parameter0: android.view.View;

        $i0 = r0.<android.view.View: int mLabelForId>;

        return $i0;
    }

    static boolean access$2800(android.view.View)
    {
        android.view.View r0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $z0 = specialinvoke r0.<android.view.View: boolean inLiveRegion()>();

        return $z0;
    }

    private void checkForLongClick(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3, $i4;
        android.view.View$CheckForLongPress $r1, $r2, $r3, $r4;
        long $l5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.View: int mViewFlags>;

        $i2 = 2097152 & $i1;

        if $i2 != 2097152 goto label2;

        r0.<android.view.View: boolean mHasPerformedLongPress> = 0;

        $r1 = r0.<android.view.View: android.view.View$CheckForLongPress mPendingCheckForLongPress>;

        if $r1 != null goto label1;

        $r4 = new android.view.View$CheckForLongPress;

        specialinvoke $r4.<android.view.View$CheckForLongPress: void <init>(android.view.View)>(r0);

        r0.<android.view.View: android.view.View$CheckForLongPress mPendingCheckForLongPress> = $r4;

     label1:
        $r2 = r0.<android.view.View: android.view.View$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke $r2.<android.view.View$CheckForLongPress: void rememberWindowAttachCount()>();

        $r3 = r0.<android.view.View: android.view.View$CheckForLongPress mPendingCheckForLongPress>;

        $i3 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $i4 = $i3 - i0;

        $l5 = (long) $i4;

        virtualinvoke r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r3, $l5);

     label2:
        return;
    }

    private void cleanupDraw()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r3, $r6;
        android.view.DisplayList $r2, $r5, $r7;
        android.view.ViewRootImpl $r4, $r8;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label2;

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label1;

        $r5 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r5.<android.view.DisplayList: void markDirty()>();

        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r8 = $r6.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        $r7 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r8.<android.view.ViewRootImpl: void enqueueDisplayList(android.view.DisplayList)>($r7);

     label1:
        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r4.<android.view.ViewRootImpl: void cancelInvalidate(android.view.View)>(r0);

        return;

     label2:
        specialinvoke r0.<android.view.View: void resetDisplayList()>();

        return;
    }

    private void clearDisplayList()
    {
        android.view.View r0;
        android.view.DisplayList $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r2.<android.view.DisplayList: void clear()>();

     label1:
        return;
    }

    public static int combineMeasuredStates(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 | i1;

        return $i2;
    }

    protected static java.lang.String debugIndent(int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder r0, $r1, $r3;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        $i2 = i0 * 2;

        $i3 = 3 + $i2;

        $i4 = 2 * $i3;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i4);

        r0 = $r1;

        i1 = 0;

     label1:
        $i5 = i0 * 2;

        $i6 = 3 + $i5;

        if i1 >= $i6 goto label2;

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private boolean dispatchGenericMotionEventInternal(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        android.view.View$ListenerInfo r2;
        boolean $z0, $z1;
        android.view.InputEventConsistencyVerifier $r3, $r4;
        android.view.View$OnGenericMotionListener $r5, $r6;
        int $i0, $i1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label2;

        $r5 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnGenericMotionListener access$400(android.view.View$ListenerInfo)>(r2);

        if $r5 == null goto label2;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 32 & $i0;

        if $i1 != 0 goto label2;

        $r6 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnGenericMotionListener access$400(android.view.View$ListenerInfo)>(r2);

        $z1 = interfaceinvoke $r6.<android.view.View$OnGenericMotionListener: boolean onGenericMotion(android.view.View,android.view.MotionEvent)>(r0, r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $z0 = virtualinvoke r0.<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if $r3 == null goto label3;

        $r4 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        virtualinvoke $r4.<android.view.InputEventConsistencyVerifier: void onUnhandledEvent(android.view.InputEvent,int)>(r1, 0);

     label3:
        return 0;
    }

    private boolean drawAnimation(android.view.ViewGroup, long, android.view.animation.Animation, boolean)
    {
        android.view.View r0;
        android.view.ViewGroup r1;
        long l0;
        android.view.animation.Animation r2;
        boolean z0, z1, $z2, $z3;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44;
        android.view.animation.Transformation r3, r4, $r9, $r10;
        android.graphics.RectF r5, $r6, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        byte $b29;
        android.view.View$AttachInfo $r8, $r11, $r12;
        android.os.Handler $r13;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.ViewGroup;

        l0 := @parameter1: long;

        r2 := @parameter2: android.view.animation.Animation;

        z0 := @parameter3: boolean;

        i1 = r1.<android.view.ViewGroup: int mGroupFlags>;

        $z2 = virtualinvoke r2.<android.view.animation.Animation: boolean isInitialized()>();

        if $z2 != 0 goto label2;

        $i35 = r0.<android.view.View: int mRight>;

        $i31 = r0.<android.view.View: int mLeft>;

        $i32 = $i35 - $i31;

        $i33 = r0.<android.view.View: int mBottom>;

        $i34 = r0.<android.view.View: int mTop>;

        $i40 = $i33 - $i34;

        $i41 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        $i42 = virtualinvoke r1.<android.view.ViewGroup: int getHeight()>();

        virtualinvoke r2.<android.view.animation.Animation: void initialize(int,int,int,int)>($i32, $i40, $i41, $i42);

        $i36 = r0.<android.view.View: int mRight>;

        $i43 = r0.<android.view.View: int mLeft>;

        $i44 = $i36 - $i43;

        $i38 = r0.<android.view.View: int mBottom>;

        $i37 = r0.<android.view.View: int mTop>;

        $i39 = $i38 - $i37;

        virtualinvoke r2.<android.view.animation.Animation: void initializeInvalidateRegion(int,int,int,int)>(0, 0, $i44, $i39);

        $r11 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r11 == null goto label1;

        $r12 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r13 = $r12.<android.view.View$AttachInfo: android.os.Handler mHandler>;

        virtualinvoke r2.<android.view.animation.Animation: void setListenerHandler(android.os.Handler)>($r13);

     label1:
        virtualinvoke r0.<android.view.View: void onAnimationStart()>();

     label2:
        r3 = virtualinvoke r1.<android.view.ViewGroup: android.view.animation.Transformation getChildTransformation()>();

        z1 = virtualinvoke r2.<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>(l0, r3, 1.0F);

        if z0 == 0 goto label6;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $f6 = $r8.<android.view.View$AttachInfo: float mApplicationScale>;

        $b29 = $f6 cmpl 1.0F;

        if $b29 == 0 goto label6;

        $r10 = r1.<android.view.ViewGroup: android.view.animation.Transformation mInvalidationTransformation>;

        if $r10 != null goto label3;

        $r9 = new android.view.animation.Transformation;

        specialinvoke $r9.<android.view.animation.Transformation: void <init>()>();

        r1.<android.view.ViewGroup: android.view.animation.Transformation mInvalidationTransformation> = $r9;

     label3:
        r4 = r1.<android.view.ViewGroup: android.view.animation.Transformation mInvalidationTransformation>;

        virtualinvoke r2.<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>(l0, r4, 1.0F);

     label4:
        if z1 == 0 goto label5;

        $z3 = virtualinvoke r2.<android.view.animation.Animation: boolean willChangeBounds()>();

        if $z3 != 0 goto label8;

        $i18 = i1 & 144;

        if $i18 != 128 goto label7;

        $i25 = r1.<android.view.ViewGroup: int mGroupFlags>;

        $i30 = 4 | $i25;

        r1.<android.view.ViewGroup: int mGroupFlags> = $i30;

     label5:
        return z1;

     label6:
        r4 = r3;

        goto label4;

     label7:
        $i23 = i1 & 4;

        if $i23 != 0 goto label5;

        $i24 = r1.<android.view.ViewGroup: int mPrivateFlags>;

        $i21 = 64 | $i24;

        r1.<android.view.ViewGroup: int mPrivateFlags> = $i21;

        $i26 = r0.<android.view.View: int mLeft>;

        $i27 = r0.<android.view.View: int mTop>;

        $i28 = r0.<android.view.View: int mRight>;

        $i22 = r0.<android.view.View: int mBottom>;

        virtualinvoke r1.<android.view.ViewGroup: void invalidate(int,int,int,int)>($i26, $i27, $i28, $i22);

        return z1;

     label8:
        $r6 = r1.<android.view.ViewGroup: android.graphics.RectF mInvalidateRegion>;

        if $r6 != null goto label9;

        $r7 = new android.graphics.RectF;

        specialinvoke $r7.<android.graphics.RectF: void <init>()>();

        r1.<android.view.ViewGroup: android.graphics.RectF mInvalidateRegion> = $r7;

     label9:
        r5 = r1.<android.view.ViewGroup: android.graphics.RectF mInvalidateRegion>;

        $i4 = r0.<android.view.View: int mRight>;

        $i5 = r0.<android.view.View: int mLeft>;

        $i8 = $i4 - $i5;

        $i6 = r0.<android.view.View: int mBottom>;

        $i7 = r0.<android.view.View: int mTop>;

        $i9 = $i6 - $i7;

        virtualinvoke r2.<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)>(0, 0, $i8, $i9, r5, r4);

        $i11 = r1.<android.view.ViewGroup: int mPrivateFlags>;

        $i10 = 64 | $i11;

        r1.<android.view.ViewGroup: int mPrivateFlags> = $i10;

        $i13 = r0.<android.view.View: int mLeft>;

        $f0 = r5.<android.graphics.RectF: float left>;

        $i12 = (int) $f0;

        i2 = $i13 + $i12;

        $i14 = r0.<android.view.View: int mTop>;

        $f1 = r5.<android.graphics.RectF: float top>;

        $i15 = (int) $f1;

        i3 = $i14 + $i15;

        $f3 = virtualinvoke r5.<android.graphics.RectF: float width()>();

        $f2 = 0.5F + $f3;

        $i16 = (int) $f2;

        $i17 = i2 + $i16;

        $f4 = virtualinvoke r5.<android.graphics.RectF: float height()>();

        $f5 = 0.5F + $f4;

        $i19 = (int) $f5;

        $i20 = i3 + $i19;

        virtualinvoke r1.<android.view.ViewGroup: void invalidate(int,int,int,int)>(i2, i3, $i17, $i20);

        return z1;
    }

    private static void dumpFlag(java.util.HashMap, java.lang.String, int)
    {
        java.util.HashMap r0;
        java.lang.String r1, r3, r5, $r6, $r7, $r11, $r18;
        int i0, i1;
        java.lang.Object[] r2;
        java.lang.StringBuilder r4, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>(i0);

        r2[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%32s", r2);

        r3 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(char,char)>(48, 32);

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(95);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r4 = $r8;

        if i1 <= 0 goto label2;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label1:
        $r9 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r18);

        return;

     label2:
        r5 = r1;

        goto label1;
    }

    private static void dumpFlags()
    {
        java.util.HashMap r0;
        java.lang.IllegalAccessException r1, $r27;
        java.lang.reflect.Field[] r2;
        int i0, i1, i2, i3, i4, $i6, $i7;
        java.lang.reflect.Field r3;
        int[] r4, $r19;
        java.util.ArrayList r5;
        java.util.Iterator r6;
        java.lang.Class $r7, $r13, $r14, $r16;
        java.util.Set $r8;
        boolean $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r9, $r11, $r18, $r24, $r25;
        java.lang.Object $r10, $r12, $r15;
        java.lang.StringBuilder $r17, $r20, $r21, $r22, $r23;
        java.lang.RuntimeException $r26;

        r0 = staticinvoke <com.google.android.collect.Maps: java.util.HashMap newHashMap()>();

     label01:
        $r7 = class "android/view/View";

        r2 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = lengthof r2;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label11;

     label04:
        r3 = r2[i1];

        i2 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i2);

        if $z3 == 0 goto label14;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(i2);

        if $z2 == 0 goto label14;

        $r14 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        $z5 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z5 == 0 goto label06;

        i4 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        $r24 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        staticinvoke <android.view.View: void dumpFlag(java.util.HashMap,java.lang.String,int)>(r0, $r24, i4);

     label05:
        goto label14;

     label06:
        $r16 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z4 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>(class "[I");

        if $z4 == 0 goto label14;

        $r15 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r19 = (int[]) $r15;

        r4 = (int[]) $r19;

     label07:
        i3 = 0;

     label08:
        $i6 = lengthof r4;

        if i3 >= $i6 goto label14;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $i7 = r4[i3];

        staticinvoke <android.view.View: void dumpFlag(java.util.HashMap,java.lang.String,int)>(r0, $r25, $i7);

     label09:
        i3 = i3 + 1;

        goto label08;

     label10:
        $r27 := @caughtexception;

        r1 = $r27;

        $r26 = new java.lang.RuntimeException;

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r26;

     label11:
        r5 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r8 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();

        virtualinvoke r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r8);

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r5);

        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.String) $r10;

        $r12 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.String) $r12;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r11);

        goto label12;

     label13:
        return;

     label14:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label04 to label05 with label10;
        catch java.lang.IllegalAccessException from label06 to label07 with label10;
        catch java.lang.IllegalAccessException from label08 to label09 with label10;
    }

    private android.view.View findLabelForView(android.view.View, int)
    {
        android.view.View r0, r1, $r5;
        int i0;
        android.view.View$MatchLabelForPredicate $r2, $r3, $r4, $r6;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<android.view.View: android.view.View$MatchLabelForPredicate mMatchLabelForPredicate>;

        if $r2 != null goto label1;

        $r6 = new android.view.View$MatchLabelForPredicate;

        specialinvoke $r6.<android.view.View$MatchLabelForPredicate: void <init>(android.view.View,android.view.View$1)>(r0, null);

        r0.<android.view.View: android.view.View$MatchLabelForPredicate mMatchLabelForPredicate> = $r6;

     label1:
        $r3 = r0.<android.view.View: android.view.View$MatchLabelForPredicate mMatchLabelForPredicate>;

        staticinvoke <android.view.View$MatchLabelForPredicate: int access$802(android.view.View$MatchLabelForPredicate,int)>($r3, i0);

        $r4 = r0.<android.view.View: android.view.View$MatchLabelForPredicate mMatchLabelForPredicate>;

        $r5 = virtualinvoke r0.<android.view.View: android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate)>(r1, $r4);

        return $r5;
    }

    private android.view.View findViewInsideOutShouldExist(android.view.View, int)
    {
        android.view.View r0, r1, r2;
        int i0;
        android.view.View$MatchIdPredicate $r3, $r4, $r5, $r10;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r3 = r0.<android.view.View: android.view.View$MatchIdPredicate mMatchIdPredicate>;

        if $r3 != null goto label1;

        $r10 = new android.view.View$MatchIdPredicate;

        specialinvoke $r10.<android.view.View$MatchIdPredicate: void <init>(android.view.View,android.view.View$1)>(r0, null);

        r0.<android.view.View: android.view.View$MatchIdPredicate mMatchIdPredicate> = $r10;

     label1:
        $r4 = r0.<android.view.View: android.view.View$MatchIdPredicate mMatchIdPredicate>;

        $r4.<android.view.View$MatchIdPredicate: int mId> = i0;

        $r5 = r0.<android.view.View: android.view.View$MatchIdPredicate mMatchIdPredicate>;

        r2 = virtualinvoke r1.<android.view.View: android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate)>(r0, $r5);

        if r2 != null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("couldn\'t find view with id ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("View", $r9);

     label2:
        return r2;
    }

    public static int generateViewId()
    {
        int i0, i1;
        java.util.concurrent.atomic.AtomicInteger $r0, $r1;
        boolean $z0;

     label1:
        $r0 = <android.view.View: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId>;

        i0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        i1 = i0 + 1;

        if i1 <= 16777215 goto label2;

        i1 = 1;

     label2:
        $r1 = <android.view.View: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        return i0;
    }

    public static int getDefaultSize(int, int)
    {
        int i0, i1, i2, i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        lookupswitch(i2)
        {
            case -2147483648: goto label3;
            case 0: goto label2;
            case 1073741824: goto label3;
            default: goto label1;
        };

     label1:
        return i0;

     label2:
        return i0;

     label3:
        return i3;
    }

    private android.view.DisplayList getDisplayList(android.view.DisplayList, boolean)
    {
        android.view.View r0;
        android.view.DisplayList r1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        android.view.HardwareCanvas r2;
        java.lang.Throwable r3, $r17;
        android.view.ViewOverlay r4, $r7, $r8;
        android.graphics.Bitmap r5;
        android.view.HardwareLayer r6;
        float $f0, $f1, $f2, $f3;
        android.view.ViewGroup $r9;
        android.graphics.Paint $r10, $r11, $r15;
        java.lang.Class $r12;
        android.view.HardwareRenderer $r13;
        android.view.View$AttachInfo $r14;
        java.lang.String $r16;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.DisplayList;

        z0 := @parameter1: boolean;

        $z3 = virtualinvoke r0.<android.view.View: boolean canHaveDisplayList()>();

        if $z3 != 0 goto label01;

        return null;

     label01:
        $i3 = r0.<android.view.View: int mPrivateFlags>;

        $i4 = 32768 & $i3;

        if $i4 == 0 goto label02;

        if r1 == null goto label02;

        $z8 = virtualinvoke r1.<android.view.DisplayList: boolean isValid()>();

        if $z8 == 0 goto label02;

        if z0 != 0 goto label33;

        $z7 = r0.<android.view.View: boolean mRecreateDisplayList>;

        if $z7 == 0 goto label33;

     label02:
        if r1 == null goto label03;

        $z6 = virtualinvoke r1.<android.view.DisplayList: boolean isValid()>();

        if $z6 == 0 goto label03;

        if z0 != 0 goto label03;

        $z5 = r0.<android.view.View: boolean mRecreateDisplayList>;

        if $z5 != 0 goto label03;

        $i29 = r0.<android.view.View: int mPrivateFlags>;

        $i28 = 32800 | $i29;

        r0.<android.view.View: int mPrivateFlags> = $i28;

        $i27 = r0.<android.view.View: int mPrivateFlags>;

        $i26 = -6291457 & $i27;

        r0.<android.view.View: int mPrivateFlags> = $i26;

        virtualinvoke r0.<android.view.View: void dispatchGetDisplayList()>();

        return r1;

     label03:
        if z0 != 0 goto label04;

        r0.<android.view.View: boolean mRecreateDisplayList> = 1;

     label04:
        if r1 != null goto label05;

        $r14 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r13 = $r14.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        r1 = virtualinvoke $r13.<android.view.HardwareRenderer: android.view.DisplayList createDisplayList(java.lang.String)>($r16);

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

     label05:
        $i5 = r0.<android.view.View: int mRight>;

        $i6 = r0.<android.view.View: int mLeft>;

        i0 = $i5 - $i6;

        $i7 = r0.<android.view.View: int mBottom>;

        $i8 = r0.<android.view.View: int mTop>;

        i1 = $i7 - $i8;

        i2 = virtualinvoke r0.<android.view.View: int getLayerType()>();

        r2 = virtualinvoke r1.<android.view.DisplayList: android.view.HardwareCanvas start(int,int)>(i0, i1);

        if z0 != 0 goto label20;

        if i2 == 0 goto label20;

        if i2 != 2 goto label16;

     label06:
        r6 = virtualinvoke r0.<android.view.View: android.view.HardwareLayer getHardwareLayer()>();

     label07:
        if r6 == null goto label12;

     label08:
        $z4 = virtualinvoke r6.<android.view.HardwareLayer: boolean isValid()>();

        if $z4 == 0 goto label12;

        $r15 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        virtualinvoke r2.<android.view.HardwareCanvas: void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint)>(r6, 0.0F, 0.0F, $r15);

     label09:
        z1 = 1;

     label10:
        virtualinvoke r1.<android.view.DisplayList: void end()>();

        virtualinvoke r1.<android.view.DisplayList: void setCaching(boolean)>(z1);

        if z0 == 0 goto label31;

        virtualinvoke r1.<android.view.DisplayList: void setLeftTopRightBottom(int,int,int,int)>(0, 0, i0, i1);

     label11:
        return r1;

     label12:
        $i19 = r0.<android.view.View: int mRight>;

        $i21 = r0.<android.view.View: int mLeft>;

        $i20 = $i19 - $i21;

        $f2 = (float) $i20;

        $i24 = r0.<android.view.View: int mBottom>;

        $i23 = r0.<android.view.View: int mTop>;

        $i22 = $i24 - $i23;

        $f3 = (float) $i22;

        $r11 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        virtualinvoke r2.<android.view.HardwareCanvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>(0.0F, 0.0F, $f2, $f3, $r11, 20);

     label13:
        goto label09;

     label14:
        $r17 := @caughtexception;

        r3 = $r17;

        virtualinvoke r1.<android.view.DisplayList: void end()>();

        virtualinvoke r1.<android.view.DisplayList: void setCaching(boolean)>(0);

        if z0 == 0 goto label32;

        virtualinvoke r1.<android.view.DisplayList: void setLeftTopRightBottom(int,int,int,int)>(0, 0, i0, i1);

     label15:
        throw r3;

     label16:
        virtualinvoke r0.<android.view.View: void buildDrawingCache(boolean)>(1);

        r5 = virtualinvoke r0.<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>(1);

     label17:
        z1 = 0;

        if r5 == null goto label10;

     label18:
        $r10 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        virtualinvoke r2.<android.view.HardwareCanvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r5, 0.0F, 0.0F, $r10);

     label19:
        z1 = 1;

        goto label10;

     label20:
        virtualinvoke r0.<android.view.View: void computeScroll()>();

        $i10 = r0.<android.view.View: int mScrollX>;

        $i9 = neg $i10;

        $f0 = (float) $i9;

        $i12 = r0.<android.view.View: int mScrollY>;

        $i11 = neg $i12;

        $f1 = (float) $i11;

        virtualinvoke r2.<android.view.HardwareCanvas: void translate(float,float)>($f0, $f1);

     label21:
        if z0 != 0 goto label23;

     label22:
        $i15 = r0.<android.view.View: int mPrivateFlags>;

        $i16 = 32800 | $i15;

        r0.<android.view.View: int mPrivateFlags> = $i16;

        $i17 = r0.<android.view.View: int mPrivateFlags>;

        $i18 = -6291457 & $i17;

        r0.<android.view.View: int mPrivateFlags> = $i18;

     label23:
        $i14 = r0.<android.view.View: int mPrivateFlags>;

        $i13 = 128 & $i14;

        if $i13 != 128 goto label29;

        virtualinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>(r2);

        r4 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

     label24:
        z1 = 0;

        if r4 == null goto label10;

     label25:
        $r7 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        z2 = virtualinvoke $r7.<android.view.ViewOverlay: boolean isEmpty()>();

     label26:
        z1 = 0;

        if z2 != 0 goto label10;

     label27:
        $r8 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r9 = virtualinvoke $r8.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r9.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r2);

     label28:
        z1 = 0;

        goto label10;

     label29:
        virtualinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r2);

     label30:
        z1 = 0;

        goto label10;

     label31:
        virtualinvoke r0.<android.view.View: void setDisplayListProperties(android.view.DisplayList)>(r1);

        goto label11;

     label32:
        virtualinvoke r0.<android.view.View: void setDisplayListProperties(android.view.DisplayList)>(r1);

        goto label15;

     label33:
        if z0 != 0 goto label11;

        $i31 = r0.<android.view.View: int mPrivateFlags>;

        $i32 = 32800 | $i31;

        r0.<android.view.View: int mPrivateFlags> = $i32;

        $i33 = r0.<android.view.View: int mPrivateFlags>;

        $i30 = -6291457 & $i33;

        r0.<android.view.View: int mPrivateFlags> = $i30;

        goto label11;

        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch java.lang.Throwable from label18 to label19 with label14;
        catch java.lang.Throwable from label20 to label21 with label14;
        catch java.lang.Throwable from label22 to label23 with label14;
        catch java.lang.Throwable from label23 to label24 with label14;
        catch java.lang.Throwable from label25 to label26 with label14;
        catch java.lang.Throwable from label27 to label28 with label14;
        catch java.lang.Throwable from label29 to label30 with label14;
    }

    private float getFinalAlpha()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2, $r3;
        float $f0, $f1, $f2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = $r2.<android.view.View$TransformationInfo: float mAlpha>;

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r3.<android.view.View$TransformationInfo: float mTransitionAlpha>;

        $f2 = $f1 * $f0;

        return $f2;

     label1:
        return 1.0F;
    }

    private android.view.DisplayList getHardwareLayerDisplayList(android.view.HardwareLayer)
    {
        android.view.View r0;
        android.view.HardwareLayer r1;
        android.view.DisplayList r2, $r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.HardwareLayer;

        $r3 = virtualinvoke r1.<android.view.HardwareLayer: android.view.DisplayList getDisplayList()>();

        r2 = specialinvoke r0.<android.view.View: android.view.DisplayList getDisplayList(android.view.DisplayList,boolean)>($r3, 1);

        virtualinvoke r1.<android.view.HardwareLayer: void setDisplayList(android.view.DisplayList)>(r2);

        return r2;
    }

    private android.view.View$ScrollabilityCache getScrollCache()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache $r1;

        r0 := @this: android.view.View;

        specialinvoke r0.<android.view.View: void initScrollCache()>();

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        return $r1;
    }

    private boolean hasAncestorThatBlocksDescendantFocus()
    {
        android.view.View r0;
        android.view.ViewParent r1;
        android.view.ViewGroup r2;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.ViewParent mParent>;

     label1:
        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        $i0 = virtualinvoke r2.<android.view.ViewGroup: int getDescendantFocusability()>();

        if $i0 != 393216 goto label2;

        return 1;

     label2:
        r1 = virtualinvoke r2.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        goto label1;

     label3:
        return 0;
    }

    private boolean hasListenersForAccessibility()
    {
        android.view.View r0;
        android.view.View$ListenerInfo r1;
        android.view.TouchDelegate $r2;
        android.view.View$OnKeyListener $r3;
        android.view.View$OnTouchListener $r4;
        android.view.View$OnGenericMotionListener $r5;
        android.view.View$OnHoverListener $r6;
        android.view.View$OnDragListener $r7;

        r0 := @this: android.view.View;

        r1 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        $r2 = r0.<android.view.View: android.view.TouchDelegate mTouchDelegate>;

        if $r2 != null goto label1;

        $r3 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnKeyListener access$200(android.view.View$ListenerInfo)>(r1);

        if $r3 != null goto label1;

        $r4 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnTouchListener access$300(android.view.View$ListenerInfo)>(r1);

        if $r4 != null goto label1;

        $r5 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnGenericMotionListener access$400(android.view.View$ListenerInfo)>(r1);

        if $r5 != null goto label1;

        $r6 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnHoverListener access$500(android.view.View$ListenerInfo)>(r1);

        if $r6 != null goto label1;

        $r7 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnDragListener access$600(android.view.View$ListenerInfo)>(r1);

        if $r7 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean hasRtlSupport()
    {
        android.view.View r0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $z0 = virtualinvoke $r2.<android.content.pm.ApplicationInfo: boolean hasRtlSupport()>();

        return $z0;
    }

    private boolean inLiveRegion()
    {
        android.view.View r0, $r2;
        android.view.ViewParent r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getAccessibilityLiveRegion()>();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        r1 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

     label2:
        $z0 = r1 instanceof android.view.View;

        if $z0 == 0 goto label4;

        $r2 = (android.view.View) r1;

        $i1 = virtualinvoke $r2.<android.view.View: int getAccessibilityLiveRegion()>();

        if $i1 == 0 goto label3;

        return 1;

     label3:
        r1 = interfaceinvoke r1.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;

     label4:
        return 0;
    }

    public static android.view.View inflate(android.content.Context, int, android.view.ViewGroup)
    {
        android.content.Context r0;
        int i0;
        android.view.ViewGroup r1;
        android.view.LayoutInflater $r2;
        android.view.View $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: android.view.ViewGroup;

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r0);

        $r3 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i0, r1);

        return $r3;
    }

    private void initScrollCache()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache $r1, $r2;
        android.content.Context $r3;
        android.view.ViewConfiguration $r4;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if $r1 != null goto label1;

        $r2 = new android.view.View$ScrollabilityCache;

        $r3 = r0.<android.view.View: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r3);

        specialinvoke $r2.<android.view.View$ScrollabilityCache: void <init>(android.view.ViewConfiguration,android.view.View)>($r4, r0);

        r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache> = $r2;

     label1:
        return;
    }

    private boolean initialAwakenScrollBars()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $i0 = $r2.<android.view.View$ScrollabilityCache: int scrollBarDefaultDelayBeforeFade>;

        $i1 = 4 * $i0;

        $z0 = virtualinvoke r0.<android.view.View: boolean awakenScrollBars(int,boolean)>($i1, 1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isDrawablesResolved()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 1073741824 & $i0;

        if $i1 != 1073741824 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isHoverable()
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = i0 & 32;

        if $i1 != 32 goto label2;

     label1:
        return 0;

     label2:
        $i2 = i0 & 16384;

        if $i2 == 16384 goto label3;

        $i3 = i0 & 2097152;

        if $i3 != 2097152 goto label1;

     label3:
        return 1;
    }

    public static boolean isLayoutModeOptical(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1;
        android.view.ViewGroup $r1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label1;

        $r1 = (android.view.ViewGroup) r0;

        $z1 = virtualinvoke $r1.<android.view.ViewGroup: boolean isLayoutModeOptical()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isRtlCompatibilityMode()
    {
        android.view.View r0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 < 17 goto label1;

        $z0 = specialinvoke r0.<android.view.View: boolean hasRtlSupport()>();

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected static int[] mergeDrawableStates(int[], int[])
    {
        int[] r0, r1;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        $i1 = lengthof r0;

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $i4 = r0[i0];

        if $i4 != 0 goto label2;

        i0 = i0 + -1;

        goto label1;

     label2:
        $i3 = i0 + 1;

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, $i3, $i2);

        return r0;
    }

    private boolean needRtlPropertiesResolution()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 1610678816 & $i0;

        if $i1 == 1610678816 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean nonzero(float)
    {
        float f0;
        byte $b0, $b1;

        f0 := @parameter0: float;

        $b0 = f0 cmpg -0.001F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpl 0.001F;

        if $b1 <= 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void postSendViewScrolledAccessibilityEventCallback()
    {
        android.view.View r0;
        android.view.View$SendViewScrolledAccessibilityEvent $r1, $r2, $r3, $r4, $r5;
        boolean $z0;
        long $l0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent>;

        if $r1 != null goto label1;

        $r5 = new android.view.View$SendViewScrolledAccessibilityEvent;

        specialinvoke $r5.<android.view.View$SendViewScrolledAccessibilityEvent: void <init>(android.view.View,android.view.View$1)>(r0, null);

        r0.<android.view.View: android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent> = $r5;

     label1:
        $r2 = r0.<android.view.View: android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent>;

        $z0 = $r2.<android.view.View$SendViewScrolledAccessibilityEvent: boolean mIsPending>;

        if $z0 != 0 goto label2;

        $r3 = r0.<android.view.View: android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent>;

        $r3.<android.view.View$SendViewScrolledAccessibilityEvent: boolean mIsPending> = 1;

        $r4 = r0.<android.view.View: android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent>;

        $l0 = staticinvoke <android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()>();

        virtualinvoke r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r4, $l0);

     label2:
        return;
    }

    private static java.lang.String printFlags(int)
    {
        int i0, i1, i2, $i3;
        java.lang.String r0, $r4, $r12;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17;

        i0 := @parameter0: int;

        r0 = "";

        i1 = i0 & 1;

        i2 = 0;

        if i1 != 1 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TAKES_FOCUS");

        r0 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = 0 + 1;

     label1:
        $i3 = i0 & 12;

        lookupswitch($i3)
        {
            case 4: goto label3;
            case 8: goto label5;
            default: goto label2;
        };

     label2:
        return r0;

     label3:
        if i2 <= 0 goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INVISIBLE");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label5:
        if i2 <= 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GONE");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String printPrivateFlags(int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;

        i0 := @parameter0: int;

        r0 = "";

        i1 = i0 & 1;

        i2 = 0;

        if i1 != 1 goto label01;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WANTS_FOCUS");

        r0 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = 0 + 1;

     label01:
        $i3 = i0 & 2;

        if $i3 != 2 goto label03;

        if i2 <= 0 goto label02;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r0 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FOCUSED");

        r0 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

     label03:
        $i4 = i0 & 4;

        if $i4 != 4 goto label05;

        if i2 <= 0 goto label04;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r0 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECTED");

        r0 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

     label05:
        $i5 = i0 & 8;

        if $i5 != 8 goto label07;

        if i2 <= 0 goto label06;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r0 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IS_ROOT_NAMESPACE");

        r0 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

     label07:
        $i6 = i0 & 16;

        if $i6 != 16 goto label09;

        if i2 <= 0 goto label08;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r0 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HAS_BOUNDS");

        r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

     label09:
        $i7 = i0 & 32;

        if $i7 != 32 goto label11;

        if i2 <= 0 goto label10;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRAWN");

        r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        return r0;
    }

    private void removeLongPressCallback()
    {
        android.view.View r0;
        android.view.View$CheckForLongPress $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$CheckForLongPress mPendingCheckForLongPress>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void removePerformClickCallback()
    {
        android.view.View r0;
        android.view.View$PerformClick $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$PerformClick mPerformClick>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$PerformClick mPerformClick>;

        virtualinvoke r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void removeSendViewScrolledAccessibilityEventCallback()
    {
        android.view.View r0;
        android.view.View$SendViewScrolledAccessibilityEvent $r1, $r2, $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent>;

        virtualinvoke r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $r3 = r0.<android.view.View: android.view.View$SendViewScrolledAccessibilityEvent mSendViewScrolledAccessibilityEvent>;

        $r3.<android.view.View$SendViewScrolledAccessibilityEvent: boolean mIsPending> = 0;

     label1:
        return;
    }

    private void removeTapCallback()
    {
        android.view.View r0;
        android.view.View$CheckForTap $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$CheckForTap mPendingCheckForTap>;

        if $r1 == null goto label1;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = -33554433 & $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        $r2 = r0.<android.view.View: android.view.View$CheckForTap mPendingCheckForTap>;

        virtualinvoke r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void removeUnsetPressCallback()
    {
        android.view.View r0;
        int $i0, $i1;
        android.view.View$UnsetPressedState $r1, $r2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 16384 & $i0;

        if $i1 == 0 goto label1;

        $r1 = r0.<android.view.View: android.view.View$UnsetPressedState mUnsetPressedState>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(0);

        $r2 = r0.<android.view.View: android.view.View$UnsetPressedState mUnsetPressedState>;

        virtualinvoke r0.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private boolean requestFocusNoSearch(int, android.graphics.Rect)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect r1;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $i1 = r0.<android.view.View: int mViewFlags>;

        $i2 = 1 & $i1;

        if $i2 != 1 goto label1;

        $i3 = r0.<android.view.View: int mViewFlags>;

        $i4 = 12 & $i3;

        if $i4 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke r0.<android.view.View: boolean isInTouchMode()>();

        if $z0 == 0 goto label3;

        $i5 = r0.<android.view.View: int mViewFlags>;

        $i6 = 262144 & $i5;

        if 262144 != $i6 goto label1;

     label3:
        $z1 = specialinvoke r0.<android.view.View: boolean hasAncestorThatBlocksDescendantFocus()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void handleFocusGainInternal(int,android.graphics.Rect)>(i0, r1);

        return 1;
    }

    private void resetDisplayList()
    {
        android.view.View r0;
        android.view.DisplayList $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r2.<android.view.DisplayList: void reset()>();

     label1:
        return;
    }

    private void resetPressedState()
    {
        android.view.View r0;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 32 & $i0;

        if $i1 != 32 goto label2;

     label1:
        return;

     label2:
        $z0 = virtualinvoke r0.<android.view.View: boolean isPressed()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(0);

        $z1 = r0.<android.view.View: boolean mHasPerformedLongPress>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.view.View: void removeLongPressCallback()>();

        return;
    }

    public static int resolveSize(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(i0, i1, 0);

        $i3 = 16777215 & $i2;

        return $i3;
    }

    public static int resolveSizeAndState(int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = i0;

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        lookupswitch(i4)
        {
            case -2147483648: goto label3;
            case 0: goto label2;
            case 1073741824: goto label5;
            default: goto label1;
        };

     label1:
        $i6 = -16777216 & i2;

        $i7 = i3 | $i6;

        return $i7;

     label2:
        i3 = i0;

        goto label1;

     label3:
        if i5 >= i0 goto label4;

        i3 = i5 | 16777216;

        goto label1;

     label4:
        i3 = i0;

        goto label1;

     label5:
        i3 = i5;

        goto label1;
    }

    private void sendAccessibilityHoverEvent(int)
    {
        android.view.View r0, r1;
        int i0;
        android.view.ViewParent r2;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 = r0;

     label1:
        $z0 = virtualinvoke r1.<android.view.View: boolean includeForAccessibility()>();

        if $z0 == 0 goto label3;

        virtualinvoke r1.<android.view.View: void sendAccessibilityEvent(int)>(i0);

     label2:
        return;

     label3:
        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $z1 = r2 instanceof android.view.View;

        if $z1 == 0 goto label2;

        r1 = (android.view.View) r2;

        goto label1;
    }

    private void sendViewTextTraversedAtGranularityEvent(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.ViewParent $r2, $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 != null goto label1;

        return;

     label1:
        r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(131072);

        virtualinvoke r0.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        virtualinvoke r0.<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>(i2);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>(i3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setAction(int)>(i0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)>(i1);

        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r3.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r0, r1);

        return;
    }

    private void setKeyedTag(int, java.lang.Object)
    {
        android.view.View r0;
        int i0;
        java.lang.Object r1;
        android.util.SparseArray $r2, $r3, $r4;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<android.view.View: android.util.SparseArray mKeyedTags>;

        if $r2 != null goto label1;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>(int)>(2);

        r0.<android.view.View: android.util.SparseArray mKeyedTags> = $r4;

     label1:
        $r3 = r0.<android.view.View: android.util.SparseArray mKeyedTags>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        return;
    }

    private boolean setOpticalFrame(int, int, int, int)
    {
        android.view.View r0, $r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.graphics.Insets r1, r2;
        android.view.ViewParent $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = $r3 instanceof android.view.View;

        if $z0 == 0 goto label2;

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r5 = (android.view.View) $r4;

        r1 = virtualinvoke $r5.<android.view.View: android.graphics.Insets getOpticalInsets()>();

     label1:
        r2 = virtualinvoke r0.<android.view.View: android.graphics.Insets getOpticalInsets()>();

        $i4 = r1.<android.graphics.Insets: int left>;

        $i6 = i0 + $i4;

        $i5 = r2.<android.graphics.Insets: int left>;

        $i18 = $i6 - $i5;

        $i7 = r1.<android.graphics.Insets: int top>;

        $i9 = i1 + $i7;

        $i8 = r2.<android.graphics.Insets: int top>;

        $i19 = $i9 - $i8;

        $i11 = r1.<android.graphics.Insets: int left>;

        $i13 = i2 + $i11;

        $i10 = r2.<android.graphics.Insets: int right>;

        $i16 = $i13 + $i10;

        $i12 = r1.<android.graphics.Insets: int top>;

        $i14 = i3 + $i12;

        $i15 = r2.<android.graphics.Insets: int bottom>;

        $i17 = $i14 + $i15;

        $z1 = virtualinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>($i18, $i19, $i16, $i17);

        return $z1;

     label2:
        r1 = <android.graphics.Insets: android.graphics.Insets NONE>;

        goto label1;
    }

    private void sizeChange(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3;
        android.view.ViewOverlay $r1, $r2, $r4;
        android.view.ViewGroup $r3, $r5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r3 = virtualinvoke $r2.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r3.<android.view.ViewGroup: void setRight(int)>(i0);

        $r4 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r5 = virtualinvoke $r4.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r5.<android.view.ViewGroup: void setBottom(int)>(i1);

     label1:
        return;
    }

    private boolean skipInvalidate()
    {
        android.view.View r0;
        int $i0, $i1;
        android.view.animation.Animation $r1;
        android.view.ViewParent $r2, $r3;
        boolean $z0, $z1;
        android.view.ViewGroup $r4;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 12 & $i0;

        if $i1 == 0 goto label2;

        $r1 = r0.<android.view.View: android.view.animation.Animation mCurrentAnimation>;

        if $r1 != null goto label2;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r4 = (android.view.ViewGroup) $r3;

        $z1 = virtualinvoke $r4.<android.view.ViewGroup: boolean isViewTransitioning(android.view.View)>(r0);

        if $z1 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void transformMotionEventToGlobal(android.view.MotionEvent)
    {
        android.view.View r0, r3;
        android.view.MotionEvent r1;
        android.view.ViewParent r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, $f2, $f3, $f4;
        android.view.ViewRootImpl $r4;
        android.graphics.Matrix $r5;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<android.view.View: boolean hasIdentityMatrix()>();

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r0.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke r1.<android.view.MotionEvent: void transform(android.graphics.Matrix)>($r5);

     label1:
        $i0 = r0.<android.view.View: int mLeft>;

        $f1 = (float) $i0;

        $i1 = r0.<android.view.View: int mTop>;

        $f0 = (float) $i1;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f1, $f0);

        r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z1 = r2 instanceof android.view.View;

        if $z1 == 0 goto label3;

        r3 = (android.view.View) r2;

        $i4 = r3.<android.view.View: int mScrollX>;

        $i6 = neg $i4;

        $f4 = (float) $i6;

        $i5 = r3.<android.view.View: int mScrollY>;

        $i7 = neg $i5;

        $f3 = (float) $i7;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f4, $f3);

        specialinvoke r3.<android.view.View: void transformMotionEventToGlobal(android.view.MotionEvent)>(r1);

     label2:
        return;

     label3:
        $z2 = r2 instanceof android.view.ViewRootImpl;

        if $z2 == 0 goto label2;

        $r4 = (android.view.ViewRootImpl) r2;

        $i2 = $r4.<android.view.ViewRootImpl: int mCurScrollY>;

        $i3 = neg $i2;

        $f2 = (float) $i3;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f2);

        return;
    }

    private void transformMotionEventToLocal(android.view.MotionEvent)
    {
        android.view.View r0, r3;
        android.view.MotionEvent r1;
        android.view.ViewParent r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Matrix $r4;
        android.view.ViewRootImpl $r5;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = r2 instanceof android.view.View;

        if $z0 == 0 goto label3;

        r3 = (android.view.View) r2;

        specialinvoke r3.<android.view.View: void transformMotionEventToLocal(android.view.MotionEvent)>(r1);

        $i5 = r3.<android.view.View: int mScrollX>;

        $f4 = (float) $i5;

        $i6 = r3.<android.view.View: int mScrollY>;

        $f3 = (float) $i6;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f4, $f3);

     label1:
        $i0 = r0.<android.view.View: int mLeft>;

        $i1 = neg $i0;

        $f1 = (float) $i1;

        $i2 = r0.<android.view.View: int mTop>;

        $i3 = neg $i2;

        $f0 = (float) $i3;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f1, $f0);

        $z2 = virtualinvoke r0.<android.view.View: boolean hasIdentityMatrix()>();

        if $z2 != 0 goto label2;

        $r4 = virtualinvoke r0.<android.view.View: android.graphics.Matrix getInverseMatrix()>();

        virtualinvoke r1.<android.view.MotionEvent: void transform(android.graphics.Matrix)>($r4);

     label2:
        return;

     label3:
        $z1 = r2 instanceof android.view.ViewRootImpl;

        if $z1 == 0 goto label1;

        $r5 = (android.view.ViewRootImpl) r2;

        $i4 = $r5.<android.view.ViewRootImpl: int mCurScrollY>;

        $f2 = (float) $i4;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f2);

        goto label1;
    }

    private boolean traverseAtGranularity(int, boolean, boolean)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, i5, $i7;
        boolean z0, z1, $z2;
        java.lang.CharSequence r1;
        android.view.AccessibilityIterators$TextSegmentIterator r2;
        int[] r3;
        short s6;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r1 == null goto label01;

        $i7 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i7 != 0 goto label02;

     label01:
        return 0;

     label02:
        r2 = virtualinvoke r0.<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>(i0);

        if r2 != null goto label03;

        return 0;

     label03:
        i1 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionEnd()>();

        if i1 != -1 goto label04;

        if z0 == 0 goto label06;

        i1 = 0;

     label04:
        if z0 == 0 goto label07;

        r3 = interfaceinvoke r2.<android.view.AccessibilityIterators$TextSegmentIterator: int[] following(int)>(i1);

     label05:
        if r3 != null goto label08;

        return 0;

     label06:
        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        goto label04;

     label07:
        r3 = interfaceinvoke r2.<android.view.AccessibilityIterators$TextSegmentIterator: int[] preceding(int)>(i1);

        goto label05;

     label08:
        i2 = r3[0];

        i3 = r3[1];

        if z1 == 0 goto label14;

        $z2 = virtualinvoke r0.<android.view.View: boolean isAccessibilitySelectionExtendable()>();

        if $z2 == 0 goto label14;

        i5 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionStart()>();

        if i5 != -1 goto label09;

        if z0 == 0 goto label12;

        i5 = i2;

     label09:
        if z0 == 0 goto label13;

        i4 = i3;

     label10:
        virtualinvoke r0.<android.view.View: void setAccessibilitySelection(int,int)>(i5, i4);

        if z0 == 0 goto label17;

        s6 = 256;

     label11:
        specialinvoke r0.<android.view.View: void sendViewTextTraversedAtGranularityEvent(int,int,int,int)>(s6, i0, i2, i3);

        return 1;

     label12:
        i5 = i3;

        goto label09;

     label13:
        i4 = i2;

        goto label10;

     label14:
        if z0 == 0 goto label16;

        i4 = i3;

     label15:
        i5 = i4;

        goto label10;

     label16:
        i4 = i2;

        goto label15;

     label17:
        s6 = 512;

        goto label11;
    }

    private void updateMatrix()
    {
        android.view.View r0;
        android.view.View$TransformationInfo r1;
        boolean $z0, $z1, $z6, $z9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.graphics.Matrix $r2, $r5, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r18, $r20, $r21;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32;
        android.graphics.Camera $r3, $r4, $r6, $r7, $r13, $r17;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $z0 = r1.<android.view.View$TransformationInfo: boolean mMatrixDirty>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 536870912 & $i0;

        if $i1 != 0 goto label4;

        $i7 = r0.<android.view.View: int mRight>;

        $i6 = r0.<android.view.View: int mLeft>;

        $i8 = $i7 - $i6;

        $i2 = staticinvoke <android.view.View$TransformationInfo: int access$1700(android.view.View$TransformationInfo)>(r1);

        if $i8 != $i2 goto label3;

        $i16 = r0.<android.view.View: int mBottom>;

        $i19 = r0.<android.view.View: int mTop>;

        $i15 = $i16 - $i19;

        $i17 = staticinvoke <android.view.View$TransformationInfo: int access$1800(android.view.View$TransformationInfo)>(r1);

        if $i15 == $i17 goto label4;

     label3:
        $i4 = r0.<android.view.View: int mRight>;

        $i3 = r0.<android.view.View: int mLeft>;

        $i5 = $i4 - $i3;

        staticinvoke <android.view.View$TransformationInfo: int access$1702(android.view.View$TransformationInfo,int)>(r1, $i5);

        $i13 = r0.<android.view.View: int mBottom>;

        $i12 = r0.<android.view.View: int mTop>;

        $i14 = $i13 - $i12;

        staticinvoke <android.view.View$TransformationInfo: int access$1802(android.view.View$TransformationInfo,int)>(r1, $i14);

        $i10 = staticinvoke <android.view.View$TransformationInfo: int access$1700(android.view.View$TransformationInfo)>(r1);

        $f29 = (float) $i10;

        $f30 = $f29 / 2.0F;

        r1.<android.view.View$TransformationInfo: float mPivotX> = $f30;

        $i18 = staticinvoke <android.view.View$TransformationInfo: int access$1800(android.view.View$TransformationInfo)>(r1);

        $f31 = (float) $i18;

        $f32 = $f31 / 2.0F;

        r1.<android.view.View$TransformationInfo: float mPivotY> = $f32;

     label4:
        $r2 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r1);

        virtualinvoke $r2.<android.graphics.Matrix: void reset()>();

        $f0 = r1.<android.view.View$TransformationInfo: float mRotationX>;

        $z1 = staticinvoke <android.view.View: boolean nonzero(float)>($f0);

        if $z1 != 0 goto label6;

        $f19 = r1.<android.view.View$TransformationInfo: float mRotationY>;

        $z9 = staticinvoke <android.view.View: boolean nonzero(float)>($f19);

        if $z9 != 0 goto label6;

        $r18 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r1);

        $f21 = r1.<android.view.View$TransformationInfo: float mTranslationX>;

        $f22 = r1.<android.view.View$TransformationInfo: float mTranslationY>;

        virtualinvoke $r18.<android.graphics.Matrix: void setTranslate(float,float)>($f21, $f22);

        $r20 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r1);

        $f23 = r1.<android.view.View$TransformationInfo: float mRotation>;

        $f24 = r1.<android.view.View$TransformationInfo: float mPivotX>;

        $f20 = r1.<android.view.View$TransformationInfo: float mPivotY>;

        virtualinvoke $r20.<android.graphics.Matrix: boolean preRotate(float,float,float)>($f23, $f24, $f20);

        $r21 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r1);

        $f25 = r1.<android.view.View$TransformationInfo: float mScaleX>;

        $f26 = r1.<android.view.View$TransformationInfo: float mScaleY>;

        $f27 = r1.<android.view.View$TransformationInfo: float mPivotX>;

        $f28 = r1.<android.view.View$TransformationInfo: float mPivotY>;

        virtualinvoke $r21.<android.graphics.Matrix: boolean preScale(float,float,float,float)>($f25, $f26, $f27, $f28);

     label5:
        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 0;

        $r14 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r1);

        $z6 = virtualinvoke $r14.<android.graphics.Matrix: boolean isIdentity()>();

        staticinvoke <android.view.View$TransformationInfo: boolean access$1602(android.view.View$TransformationInfo,boolean)>(r1, $z6);

        staticinvoke <android.view.View$TransformationInfo: boolean access$2102(android.view.View$TransformationInfo,boolean)>(r1, 1);

        return;

     label6:
        $r3 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        if $r3 != null goto label7;

        $r17 = new android.graphics.Camera;

        specialinvoke $r17.<android.graphics.Camera: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1902(android.view.View$TransformationInfo,android.graphics.Camera)>(r1, $r17);

        $r16 = new android.graphics.Matrix;

        specialinvoke $r16.<android.graphics.Matrix: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2002(android.view.View$TransformationInfo,android.graphics.Matrix)>(r1, $r16);

     label7:
        $r4 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        virtualinvoke $r4.<android.graphics.Camera: void save()>();

        $r5 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r1);

        $f4 = r1.<android.view.View$TransformationInfo: float mScaleX>;

        $f3 = r1.<android.view.View$TransformationInfo: float mScaleY>;

        $f2 = r1.<android.view.View$TransformationInfo: float mPivotX>;

        $f1 = r1.<android.view.View$TransformationInfo: float mPivotY>;

        virtualinvoke $r5.<android.graphics.Matrix: boolean preScale(float,float,float,float)>($f4, $f3, $f2, $f1);

        $r6 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        $f8 = r1.<android.view.View$TransformationInfo: float mRotationX>;

        $f6 = r1.<android.view.View$TransformationInfo: float mRotationY>;

        $f5 = r1.<android.view.View$TransformationInfo: float mRotation>;

        $f7 = neg $f5;

        virtualinvoke $r6.<android.graphics.Camera: void rotate(float,float,float)>($f8, $f6, $f7);

        $r7 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        $r9 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2000(android.view.View$TransformationInfo)>(r1);

        virtualinvoke $r7.<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>($r9);

        $r8 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2000(android.view.View$TransformationInfo)>(r1);

        $f10 = r1.<android.view.View$TransformationInfo: float mPivotX>;

        $f11 = neg $f10;

        $f9 = r1.<android.view.View$TransformationInfo: float mPivotY>;

        $f12 = neg $f9;

        virtualinvoke $r8.<android.graphics.Matrix: boolean preTranslate(float,float)>($f11, $f12);

        $r10 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2000(android.view.View$TransformationInfo)>(r1);

        $f13 = r1.<android.view.View$TransformationInfo: float mPivotX>;

        $f14 = r1.<android.view.View$TransformationInfo: float mTranslationX>;

        $f16 = $f13 + $f14;

        $f18 = r1.<android.view.View$TransformationInfo: float mPivotY>;

        $f17 = r1.<android.view.View$TransformationInfo: float mTranslationY>;

        $f15 = $f18 + $f17;

        virtualinvoke $r10.<android.graphics.Matrix: boolean postTranslate(float,float)>($f16, $f15);

        $r12 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r1);

        $r11 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2000(android.view.View$TransformationInfo)>(r1);

        virtualinvoke $r12.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r11);

        $r13 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        virtualinvoke $r13.<android.graphics.Camera: void restore()>();

        goto label5;
    }

    public void addChildrenForAccessibility(java.util.ArrayList)
    {
        android.view.View r0;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.util.ArrayList;

        $z0 = virtualinvoke r0.<android.view.View: boolean includeForAccessibility()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public void addFocusables(java.util.ArrayList, int)
    {
        android.view.View r0;
        java.util.ArrayList r1;
        int i0;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r1, i0, 1);

        return;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        android.view.View r0;
        java.util.ArrayList r1;
        int i0, i1, $i2;
        boolean $z0, $z2, $z3;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $z0 = virtualinvoke r0.<android.view.View: boolean isFocusable()>();

        if $z0 == 0 goto label1;

        $i2 = i1 & 1;

        if $i2 != 1 goto label3;

        $z2 = virtualinvoke r0.<android.view.View: boolean isInTouchMode()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r0.<android.view.View: boolean isFocusableInTouchMode()>();

        if $z3 == 0 goto label1;

     label3:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;
    }

    public void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)
    {
        android.view.View r0;
        android.view.View$OnAttachStateChangeListener r1;
        android.view.View$ListenerInfo r2;
        java.util.concurrent.CopyOnWriteArrayList $r3, $r4, $r5;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnAttachStateChangeListener;

        r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        $r3 = staticinvoke <android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$100(android.view.View$ListenerInfo)>(r2);

        if $r3 != null goto label1;

        $r5 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        staticinvoke <android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$102(android.view.View$ListenerInfo,java.util.concurrent.CopyOnWriteArrayList)>(r2, $r5);

     label1:
        $r4 = staticinvoke <android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$100(android.view.View$ListenerInfo)>(r2);

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)
    {
        android.view.View r0;
        android.view.View$OnLayoutChangeListener r1;
        android.view.View$ListenerInfo r2;
        java.util.ArrayList $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnLayoutChangeListener;

        r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        $r3 = staticinvoke <android.view.View$ListenerInfo: java.util.ArrayList access$000(android.view.View$ListenerInfo)>(r2);

        if $r3 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        staticinvoke <android.view.View$ListenerInfo: java.util.ArrayList access$002(android.view.View$ListenerInfo,java.util.ArrayList)>(r2, $r6);

     label1:
        $r4 = staticinvoke <android.view.View$ListenerInfo: java.util.ArrayList access$000(android.view.View$ListenerInfo)>(r2);

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r5 = staticinvoke <android.view.View$ListenerInfo: java.util.ArrayList access$000(android.view.View$ListenerInfo)>(r2);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void addTouchables(java.util.ArrayList)
    {
        android.view.View r0;
        java.util.ArrayList r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.util.ArrayList;

        i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = i0 & 16384;

        if $i1 == 16384 goto label1;

        $i3 = i0 & 2097152;

        if $i3 != 2097152 goto label2;

     label1:
        $i2 = i0 & 32;

        if $i2 != 0 goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label2:
        return;
    }

    public android.view.ViewPropertyAnimator animate()
    {
        android.view.View r0;
        android.view.ViewPropertyAnimator $r1, $r2, $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.ViewPropertyAnimator mAnimator>;

        if $r1 != null goto label1;

        $r3 = new android.view.ViewPropertyAnimator;

        specialinvoke $r3.<android.view.ViewPropertyAnimator: void <init>(android.view.View)>(r0);

        r0.<android.view.View: android.view.ViewPropertyAnimator mAnimator> = $r3;

     label1:
        $r2 = r0.<android.view.View: android.view.ViewPropertyAnimator mAnimator>;

        return $r2;
    }

    public void announceForAccessibility(java.lang.CharSequence)
    {
        android.view.View r0;
        java.lang.CharSequence r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.content.Context $r3;
        android.view.accessibility.AccessibilityManager $r4;
        boolean $z0;
        android.view.ViewParent $r5, $r7;
        java.util.List $r6;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<android.view.View: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r3);

        $z0 = virtualinvoke $r4.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r5 == null goto label1;

        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(16384);

        virtualinvoke r0.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r2);

        $r6 = virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>(null);

        $r7 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r7.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r0, r2);

     label1:
        return;
    }

    public void applyDrawableToTransparentRegion(android.graphics.drawable.Drawable, android.graphics.Region)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.Region r2, r3;
        android.graphics.Rect r4;
        android.view.View$AttachInfo r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        int[] r6;
        android.graphics.Region$Op $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.Region;

        r3 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        r4 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r3 == null goto label5;

        if r5 == null goto label5;

        $i2 = virtualinvoke r0.<android.view.View: int getRight()>();

        $i3 = virtualinvoke r0.<android.view.View: int getLeft()>();

        i0 = $i2 - $i3;

        $i5 = virtualinvoke r0.<android.view.View: int getBottom()>();

        $i4 = virtualinvoke r0.<android.view.View: int getTop()>();

        i1 = $i5 - $i4;

        $i7 = r4.<android.graphics.Rect: int left>;

        if $i7 <= 0 goto label1;

        $i15 = r4.<android.graphics.Rect: int left>;

        $r11 = <android.graphics.Region$Op: android.graphics.Region$Op UNION>;

        virtualinvoke r3.<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>(0, 0, $i15, i1, $r11);

     label1:
        $i6 = r4.<android.graphics.Rect: int right>;

        if $i6 >= i0 goto label2;

        $i14 = r4.<android.graphics.Rect: int right>;

        $r12 = <android.graphics.Region$Op: android.graphics.Region$Op UNION>;

        virtualinvoke r3.<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>($i14, 0, i0, i1, $r12);

     label2:
        $i9 = r4.<android.graphics.Rect: int top>;

        if $i9 <= 0 goto label3;

        $i13 = r4.<android.graphics.Rect: int top>;

        $r10 = <android.graphics.Region$Op: android.graphics.Region$Op UNION>;

        virtualinvoke r3.<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>(0, 0, i0, $i13, $r10);

     label3:
        $i8 = r4.<android.graphics.Rect: int bottom>;

        if $i8 >= i1 goto label4;

        $i12 = r4.<android.graphics.Rect: int bottom>;

        $r9 = <android.graphics.Region$Op: android.graphics.Region$Op UNION>;

        virtualinvoke r3.<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>(0, $i12, i0, i1, $r9);

     label4:
        r6 = r5.<android.view.View$AttachInfo: int[] mTransparentLocation>;

        virtualinvoke r0.<android.view.View: void getLocationInWindow(int[])>(r6);

        $i10 = r6[0];

        $i11 = r6[1];

        virtualinvoke r3.<android.graphics.Region: void translate(int,int)>($i10, $i11);

        $r8 = <android.graphics.Region$Op: android.graphics.Region$Op INTERSECT>;

        virtualinvoke r2.<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region$Op)>(r3, $r8);

        return;

     label5:
        $r7 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke r2.<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region$Op)>(r4, $r7);

        return;
    }

    void assignParent(android.view.ViewParent)
    {
        android.view.View r0;
        android.view.ViewParent r1, $r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.ViewParent;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 != null goto label1;

        r0.<android.view.View: android.view.ViewParent mParent> = r1;

        return;

     label1:
        if r1 != null goto label2;

        r0.<android.view.View: android.view.ViewParent mParent> = null;

        return;

     label2:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("view ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" being added, but");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" it already has a parent");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r3;
    }

    protected boolean awakenScrollBars()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $i0 = $r2.<android.view.View$ScrollabilityCache: int scrollBarDefaultDelayBeforeFade>;

        $z0 = virtualinvoke r0.<android.view.View: boolean awakenScrollBars(int,boolean)>($i0, 1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean awakenScrollBars(int)
    {
        android.view.View r0;
        int i0;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.view.View: boolean awakenScrollBars(int,boolean)>(i0, 1);

        return $z0;
    }

    protected boolean awakenScrollBars(int, boolean)
    {
        android.view.View r0;
        int i0, $i2;
        boolean z0, $z1, $z2, $z4;
        android.view.View$ScrollabilityCache r1;
        long l1, $l3, $l4;
        android.widget.ScrollBarDrawable $r2, $r8;
        android.view.View$AttachInfo $r3, $r4, $r6;
        android.os.Handler $r5, $r7;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if r1 == null goto label1;

        $z1 = r1.<android.view.View$ScrollabilityCache: boolean fadeScrollBars>;

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = r1.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        if $r2 != null goto label3;

        $r8 = new android.widget.ScrollBarDrawable;

        specialinvoke $r8.<android.widget.ScrollBarDrawable: void <init>()>();

        r1.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar> = $r8;

     label3:
        $z2 = virtualinvoke r0.<android.view.View: boolean isHorizontalScrollBarEnabled()>();

        if $z2 != 0 goto label4;

        $z4 = virtualinvoke r0.<android.view.View: boolean isVerticalScrollBarEnabled()>();

        if $z4 == 0 goto label1;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<android.view.View: void postInvalidateOnAnimation()>();

     label5:
        $i2 = r1.<android.view.View$ScrollabilityCache: int state>;

        if $i2 != 0 goto label6;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(750, i0);

     label6:
        $l3 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l4 = (long) i0;

        l1 = $l3 + $l4;

        r1.<android.view.View$ScrollabilityCache: long fadeStartTime> = l1;

        r1.<android.view.View$ScrollabilityCache: int state> = 1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label7;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r5 = $r4.<android.view.View$AttachInfo: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r1);

        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r7 = $r6.<android.view.View$AttachInfo: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>(r1, l1);

     label7:
        return 1;
    }

    public void bringToFront()
    {
        android.view.View r0;
        android.view.ViewParent $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r2.<android.view.ViewParent: void bringChildToFront(android.view.View)>(r0);

     label1:
        return;
    }

    public void buildDrawingCache()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void buildDrawingCache(boolean)>(0);

        return;
    }

    public void buildDrawingCache(boolean)
    {
        android.view.View r0;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9;
        int i0, i1, i2, i3, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34;
        android.view.View$AttachInfo r1, $r20, $r23;
        byte b4, $b16;
        long l5, l6;
        android.graphics.Bitmap r2, $r28, $r29;
        android.graphics.Bitmap$Config r4;
        android.graphics.Canvas r5, $r19, $r26;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.view.ViewConfiguration $r6;
        android.content.Context $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13;
        android.content.res.Resources $r14, $r16;
        java.lang.String $r15;
        android.util.DisplayMetrics $r17, $r18;
        android.view.ViewOverlay $r21, $r24, $r25;
        android.view.ViewGroup $r22;
        java.lang.OutOfMemoryError $r27;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $i8 = r0.<android.view.View: int mPrivateFlags>;

        $i10 = 32768 & $i8;

        if $i10 == 0 goto label01;

        if z0 == 0 goto label11;

        $r28 = r0.<android.view.View: android.graphics.Bitmap mDrawingCache>;

        if $r28 != null goto label10;

     label01:
        r0.<android.view.View: boolean mCachingFailed> = 0;

        $i12 = r0.<android.view.View: int mRight>;

        $i9 = r0.<android.view.View: int mLeft>;

        i0 = $i12 - $i9;

        $i14 = r0.<android.view.View: int mBottom>;

        $i11 = r0.<android.view.View: int mTop>;

        i1 = $i14 - $i11;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label12;

        $z9 = r1.<android.view.View$AttachInfo: boolean mScalingRequired>;

        if $z9 == 0 goto label12;

        z1 = 1;

     label02:
        if z0 == 0 goto label03;

        if z1 == 0 goto label03;

        $f9 = (float) i0;

        $f7 = r1.<android.view.View$AttachInfo: float mApplicationScale>;

        $f8 = $f9 * $f7;

        $f4 = 0.5F + $f8;

        i0 = (int) $f4;

        $f6 = (float) i1;

        $f3 = r1.<android.view.View$AttachInfo: float mApplicationScale>;

        $f5 = $f6 * $f3;

        $f10 = 0.5F + $f5;

        i1 = (int) $f10;

     label03:
        i2 = r0.<android.view.View: int mDrawingCacheBackgroundColor>;

        if i2 != 0 goto label04;

        $z8 = virtualinvoke r0.<android.view.View: boolean isOpaque()>();

        if $z8 == 0 goto label13;

     label04:
        z2 = 1;

     label05:
        if r1 == null goto label14;

        $z6 = r1.<android.view.View$AttachInfo: boolean mUse32BitDrawingCache>;

        if $z6 == 0 goto label14;

        z3 = 1;

     label06:
        i3 = i0 * i1;

        if z2 == 0 goto label15;

        if z3 != 0 goto label15;

        b4 = 2;

     label07:
        $i13 = b4 * i3;

        l5 = (long) $i13;

        $r7 = r0.<android.view.View: android.content.Context mContext>;

        $r6 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r7);

        $i15 = virtualinvoke $r6.<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>();

        l6 = (long) $i15;

        if i0 <= 0 goto label08;

        if i1 <= 0 goto label08;

        $b16 = l5 cmp l6;

        if $b16 <= 0 goto label16;

     label08:
        if i0 <= 0 goto label09;

        if i1 <= 0 goto label09;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View too large to fit into drawing cache, needs ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, only ");

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("View", $r15);

     label09:
        virtualinvoke r0.<android.view.View: void destroyDrawingCache()>();

        r0.<android.view.View: boolean mCachingFailed> = 1;

     label10:
        return;

     label11:
        $r29 = r0.<android.view.View: android.graphics.Bitmap mUnscaledDrawingCache>;

        if $r29 != null goto label10;

        goto label01;

     label12:
        z1 = 0;

        goto label02;

     label13:
        z2 = 0;

        goto label05;

     label14:
        z3 = 0;

        goto label06;

     label15:
        b4 = 4;

        goto label07;

     label16:
        z4 = 1;

        if z0 == 0 goto label34;

        r2 = r0.<android.view.View: android.graphics.Bitmap mDrawingCache>;

     label17:
        if r2 == null goto label18;

        $i32 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();

        if $i32 != i0 goto label18;

        $i33 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();

        if $i33 == i1 goto label26;

     label18:
        if z2 != 0 goto label35;

        r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label19:
        if r2 == null goto label20;

        virtualinvoke r2.<android.graphics.Bitmap: void recycle()>();

     label20:
        $r14 = r0.<android.view.View: android.content.res.Resources mResources>;

        $r18 = virtualinvoke $r14.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config)>($r18, i0, i1, r4);

        $r16 = virtualinvoke r0.<android.view.View: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i19 = $r17.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke r2.<android.graphics.Bitmap: void setDensity(int)>($i19);

     label21:
        if z0 == 0 goto label38;

     label22:
        r0.<android.view.View: android.graphics.Bitmap mDrawingCache> = r2;

     label23:
        if z2 == 0 goto label25;

        if z3 == 0 goto label25;

     label24:
        virtualinvoke r2.<android.graphics.Bitmap: void setHasAlpha(boolean)>(0);

     label25:
        if i2 == 0 goto label43;

        z4 = 1;

     label26:
        if r1 == null goto label44;

        r5 = r1.<android.view.View$AttachInfo: android.graphics.Canvas mCanvas>;

        if r5 != null goto label27;

        $r26 = new android.graphics.Canvas;

        specialinvoke $r26.<android.graphics.Canvas: void <init>()>();

        r5 = $r26;

     label27:
        virtualinvoke r5.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(r2);

        r1.<android.view.View$AttachInfo: android.graphics.Canvas mCanvas> = null;

     label28:
        if z4 == 0 goto label29;

        virtualinvoke r2.<android.graphics.Bitmap: void eraseColor(int)>(i2);

     label29:
        virtualinvoke r0.<android.view.View: void computeScroll()>();

        i7 = virtualinvoke r5.<android.graphics.Canvas: int save()>();

        if z0 == 0 goto label30;

        if z1 == 0 goto label30;

        f0 = r1.<android.view.View$AttachInfo: float mApplicationScale>;

        virtualinvoke r5.<android.graphics.Canvas: void scale(float,float)>(f0, f0);

     label30:
        $i18 = r0.<android.view.View: int mScrollX>;

        $i22 = neg $i18;

        $f2 = (float) $i22;

        $i21 = r0.<android.view.View: int mScrollY>;

        $i20 = neg $i21;

        $f1 = (float) $i20;

        virtualinvoke r5.<android.graphics.Canvas: void translate(float,float)>($f2, $f1);

        $i24 = r0.<android.view.View: int mPrivateFlags>;

        $i23 = 32 | $i24;

        r0.<android.view.View: int mPrivateFlags> = $i23;

        $r20 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r20 == null goto label31;

        $r23 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z7 = $r23.<android.view.View$AttachInfo: boolean mHardwareAccelerated>;

        if $z7 == 0 goto label31;

        $i34 = r0.<android.view.View: int mLayerType>;

        if $i34 == 0 goto label32;

     label31:
        $i28 = r0.<android.view.View: int mPrivateFlags>;

        $i27 = 32768 | $i28;

        r0.<android.view.View: int mPrivateFlags> = $i27;

     label32:
        $i26 = r0.<android.view.View: int mPrivateFlags>;

        $i25 = 128 & $i26;

        if $i25 != 128 goto label45;

        $i29 = r0.<android.view.View: int mPrivateFlags>;

        $i30 = -6291457 & $i29;

        r0.<android.view.View: int mPrivateFlags> = $i30;

        virtualinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>(r5);

        $r24 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        if $r24 == null goto label33;

        $r25 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $z5 = virtualinvoke $r25.<android.view.ViewOverlay: boolean isEmpty()>();

        if $z5 != 0 goto label33;

        $r21 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r22 = virtualinvoke $r21.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r22.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r5);

     label33:
        virtualinvoke r5.<android.graphics.Canvas: void restoreToCount(int)>(i7);

        virtualinvoke r5.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        if r1 == null goto label10;

        r1.<android.view.View$AttachInfo: android.graphics.Canvas mCanvas> = r5;

        return;

     label34:
        r2 = r0.<android.view.View: android.graphics.Bitmap mUnscaledDrawingCache>;

        goto label17;

     label35:
        if z3 == 0 goto label37;

        r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label36:
        goto label19;

     label37:
        r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        goto label36;

     label38:
        r0.<android.view.View: android.graphics.Bitmap mUnscaledDrawingCache> = r2;

     label39:
        goto label23;

     label40:
        $r27 := @caughtexception;

        if z0 == 0 goto label42;

        r0.<android.view.View: android.graphics.Bitmap mDrawingCache> = null;

     label41:
        r0.<android.view.View: boolean mCachingFailed> = 1;

        return;

     label42:
        r0.<android.view.View: android.graphics.Bitmap mUnscaledDrawingCache> = null;

        goto label41;

     label43:
        z4 = 0;

        goto label26;

     label44:
        $r19 = new android.graphics.Canvas;

        specialinvoke $r19.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r2);

        r5 = $r19;

        goto label28;

     label45:
        virtualinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r5);

        goto label33;

        catch java.lang.OutOfMemoryError from label20 to label21 with label40;
        catch java.lang.OutOfMemoryError from label22 to label23 with label40;
        catch java.lang.OutOfMemoryError from label24 to label25 with label40;
        catch java.lang.OutOfMemoryError from label38 to label39 with label40;
    }

    public void buildLayer()
    {
        android.view.View r0;
        android.view.View$AttachInfo r1;
        int $i0, $i1;
        android.view.HardwareRenderer $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        android.view.ViewTreeObserver $r6;
        android.view.ViewRootImpl $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mLayerType>;

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 != null goto label3;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This view must be attached to a window first");

        throw $r8;

     label3:
        $i1 = r0.<android.view.View: int mLayerType>;

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label6;
            default: goto label4;
        };

     label4:
        return;

     label5:
        virtualinvoke r0.<android.view.View: void buildDrawingCache(boolean)>(1);

        return;

     label6:
        $r2 = r1.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        if $r2 == null goto label1;

        $r3 = r1.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z0 = virtualinvoke $r3.<android.view.HardwareRenderer: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = r1.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z1 = virtualinvoke $r4.<android.view.HardwareRenderer: boolean validate()>();

        if $z1 == 0 goto label1;

        virtualinvoke r0.<android.view.View: android.view.HardwareLayer getHardwareLayer()>();

        $r6 = r1.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        $z2 = virtualinvoke $r6.<android.view.ViewTreeObserver: boolean hasOnPreDrawListeners()>();

        if $z2 != 0 goto label1;

        $r7 = r1.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r7.<android.view.ViewRootImpl: void dispatchFlushHardwareLayerUpdates()>();

        return;
    }

    public boolean callOnClick()
    {
        android.view.View r0;
        android.view.View$ListenerInfo r1;
        android.view.View$OnClickListener $r2, $r3;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r1 == null goto label1;

        $r2 = r1.<android.view.View$ListenerInfo: android.view.View$OnClickListener mOnClickListener>;

        if $r2 == null goto label1;

        $r3 = r1.<android.view.View$ListenerInfo: android.view.View$OnClickListener mOnClickListener>;

        interfaceinvoke $r3.<android.view.View$OnClickListener: void onClick(android.view.View)>(r0);

        return 1;

     label1:
        return 0;
    }

    boolean canAcceptDrag()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean canHaveDisplayList()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        android.view.HardwareRenderer $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        if $r3 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean canResolveLayoutDirection()
    {
        android.view.View r0;
        java.lang.AbstractMethodError r1, $r4;
        boolean z0;
        int $i0;
        android.view.ViewParent $r2, $r3, $r6;
        java.lang.StringBuilder $r5, $r9, $r10;
        java.lang.Class $r7;
        java.lang.String $r8, $r11;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getRawLayoutDirection()>();

        tableswitch($i0)
        {
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label6;

     label3:
        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        z0 = interfaceinvoke $r3.<android.view.ViewParent: boolean canResolveLayoutDirection()>();

     label4:
        return z0;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r11, r1);

     label6:
        return 0;

        catch java.lang.AbstractMethodError from label3 to label4 with label5;
    }

    public boolean canResolveTextAlignment()
    {
        android.view.View r0;
        java.lang.AbstractMethodError r1, $r4;
        boolean z0;
        int $i0;
        android.view.ViewParent $r2, $r3, $r6;
        java.lang.StringBuilder $r5, $r9, $r10;
        java.lang.Class $r7;
        java.lang.String $r8, $r11;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getRawTextAlignment()>();

        tableswitch($i0)
        {
            case 0: goto label2;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label6;

     label3:
        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        z0 = interfaceinvoke $r3.<android.view.ViewParent: boolean canResolveTextAlignment()>();

     label4:
        return z0;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r11, r1);

     label6:
        return 0;

        catch java.lang.AbstractMethodError from label3 to label4 with label5;
    }

    public boolean canResolveTextDirection()
    {
        android.view.View r0;
        java.lang.AbstractMethodError r1, $r4;
        boolean z0;
        int $i0;
        android.view.ViewParent $r2, $r3, $r6;
        java.lang.StringBuilder $r5, $r9, $r10;
        java.lang.Class $r7;
        java.lang.String $r8, $r11;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getRawTextDirection()>();

        tableswitch($i0)
        {
            case 0: goto label2;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label6;

     label3:
        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        z0 = interfaceinvoke $r3.<android.view.ViewParent: boolean canResolveTextDirection()>();

     label4:
        return z0;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r11, r1);

     label6:
        return 0;

        catch java.lang.AbstractMethodError from label3 to label4 with label5;
    }

    public boolean canScrollHorizontally(int)
    {
        android.view.View r0;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        z0 = 1;

        i1 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollOffset()>();

        $i3 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollRange()>();

        $i4 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollExtent()>();

        i2 = $i3 - $i4;

        if i2 != 0 goto label2;

        z0 = 0;

     label1:
        return z0;

     label2:
        if i0 >= 0 goto label3;

        if i1 > 0 goto label1;

        return 0;

     label3:
        $i5 = i2 - 1;

        if i1 < $i5 goto label1;

        return 0;
    }

    public boolean canScrollVertically(int)
    {
        android.view.View r0;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        z0 = 1;

        i1 = virtualinvoke r0.<android.view.View: int computeVerticalScrollOffset()>();

        $i3 = virtualinvoke r0.<android.view.View: int computeVerticalScrollRange()>();

        $i4 = virtualinvoke r0.<android.view.View: int computeVerticalScrollExtent()>();

        i2 = $i3 - $i4;

        if i2 != 0 goto label2;

        z0 = 0;

     label1:
        return z0;

     label2:
        if i0 >= 0 goto label3;

        if i1 > 0 goto label1;

        return 0;

     label3:
        $i5 = i2 - 1;

        if i1 < $i5 goto label1;

        return 0;
    }

    public void cancelLongPress()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        specialinvoke r0.<android.view.View: void removeLongPressCallback()>();

        specialinvoke r0.<android.view.View: void removeTapCallback()>();

        return;
    }

    public final void cancelPendingInputEvents()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void dispatchCancelPendingInputEvents()>();

        return;
    }

    public boolean checkInputConnectionProxy(android.view.View)
    {
        android.view.View r0, r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        return 0;
    }

    public void clearAccessibilityFocus()
    {
        android.view.View r0, r2;
        android.view.ViewRootImpl r1;
        boolean $z0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void clearAccessibilityFocusNoCallbacks()>();

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()>();

        if r2 == null goto label1;

        $z0 = staticinvoke <android.view.ViewRootImpl: boolean isViewDescendantOf(android.view.View,android.view.View)>(r2, r0);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void setAccessibilityFocus(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>(null, null);

     label1:
        return;
    }

    void clearAccessibilityFocusNoCallbacks()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 67108864 & $i0;

        if $i1 == 0 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = -67108865 & $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        virtualinvoke r0.<android.view.View: void invalidate()>();

        virtualinvoke r0.<android.view.View: void sendAccessibilityEvent(int)>(65536);

     label1:
        return;
    }

    public void clearAnimation()
    {
        android.view.View r0;
        android.view.animation.Animation $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.animation.Animation mCurrentAnimation>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.animation.Animation mCurrentAnimation>;

        virtualinvoke $r2.<android.view.animation.Animation: void detach()>();

     label1:
        r0.<android.view.View: android.view.animation.Animation mCurrentAnimation> = null;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

        return;
    }

    public void clearFocus()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void clearFocusInternal(boolean,boolean)>(1, 1);

        return;
    }

    void clearFocusInternal(boolean, boolean)
    {
        android.view.View r0;
        boolean z0, z1, $z2;
        int $i0, $i1, $i2, $i3;
        android.view.ViewParent $r1, $r2;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 2 & $i0;

        if $i1 == 0 goto label3;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -3 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        if z0 == 0 goto label1;

        $r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r2.<android.view.ViewParent: void clearChildFocus(android.view.View)>(r0);

     label1:
        virtualinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(0, 0, null);

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

        if z0 == 0 goto label3;

        if z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<android.view.View: boolean rootViewRequestFocus()>();

        if $z2 != 0 goto label3;

     label2:
        virtualinvoke r0.<android.view.View: void notifyGlobalFocusCleared(android.view.View)>(r0);

     label3:
        return;
    }

    protected boolean computeFitSystemWindows(android.graphics.Rect, android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.view.View$AttachInfo $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 2048 & $i0;

        if $i1 == 0 goto label1;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r4 == null goto label1;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i2 = $r5.<android.view.View$AttachInfo: int mSystemUiVisibility>;

        $i3 = 1536 & $i2;

        if $i3 != 0 goto label2;

        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z0 = $r7.<android.view.View$AttachInfo: boolean mOverscanRequested>;

        if $z0 != 0 goto label2;

     label1:
        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return 1;

     label2:
        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r3 = $r6.<android.view.View$AttachInfo: android.graphics.Rect mOverscanInsets>;

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r3);

        $i5 = r1.<android.graphics.Rect: int left>;

        $i4 = r3.<android.graphics.Rect: int left>;

        $i6 = $i5 - $i4;

        r1.<android.graphics.Rect: int left> = $i6;

        $i8 = r1.<android.graphics.Rect: int top>;

        $i7 = r3.<android.graphics.Rect: int top>;

        $i10 = $i8 - $i7;

        r1.<android.graphics.Rect: int top> = $i10;

        $i12 = r1.<android.graphics.Rect: int right>;

        $i9 = r3.<android.graphics.Rect: int right>;

        $i11 = $i12 - $i9;

        r1.<android.graphics.Rect: int right> = $i11;

        $i13 = r1.<android.graphics.Rect: int bottom>;

        $i14 = r3.<android.graphics.Rect: int bottom>;

        $i15 = $i13 - $i14;

        r1.<android.graphics.Rect: int bottom> = $i15;

        return 0;
    }

    protected int computeHorizontalScrollExtent()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getWidth()>();

        return $i0;
    }

    protected int computeHorizontalScrollOffset()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mScrollX>;

        return $i0;
    }

    protected int computeHorizontalScrollRange()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getWidth()>();

        return $i0;
    }

    protected void computeOpaqueFlags()
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r1 == null goto label4;

        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        $i11 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i11 != -1 goto label4;

        $i12 = r0.<android.view.View: int mPrivateFlags>;

        $i13 = 8388608 | $i12;

        r0.<android.view.View: int mPrivateFlags> = $i13;

     label1:
        i0 = r0.<android.view.View: int mViewFlags>;

        $i3 = i0 & 512;

        if $i3 != 0 goto label2;

        $i10 = i0 & 256;

        if $i10 == 0 goto label3;

     label2:
        $i4 = i0 & 50331648;

        if $i4 == 0 goto label3;

        $i7 = i0 & 50331648;

        if $i7 != 33554432 goto label5;

     label3:
        $i5 = r0.<android.view.View: int mPrivateFlags>;

        $i6 = 16777216 | $i5;

        r0.<android.view.View: int mPrivateFlags> = $i6;

        return;

     label4:
        $i1 = r0.<android.view.View: int mPrivateFlags>;

        $i2 = -8388609 & $i1;

        r0.<android.view.View: int mPrivateFlags> = $i2;

        goto label1;

     label5:
        $i8 = r0.<android.view.View: int mPrivateFlags>;

        $i9 = -16777217 & $i8;

        r0.<android.view.View: int mPrivateFlags> = $i9;

        return;
    }

    android.graphics.Insets computeOpticalInsets()
    {
        android.view.View r0;
        android.graphics.drawable.Drawable $r1, $r2;
        android.graphics.Insets $r3, $r4;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r1 != null goto label1;

        $r4 = <android.graphics.Insets: android.graphics.Insets NONE>;

        return $r4;

     label1:
        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        $r3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>();

        return $r3;
    }

    public void computeScroll()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getHeight()>();

        return $i0;
    }

    protected int computeVerticalScrollOffset()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mScrollY>;

        return $i0;
    }

    protected int computeVerticalScrollRange()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getHeight()>();

        return $i0;
    }

    public android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()
    {
        android.view.View r0;
        android.view.View$AccessibilityDelegate $r1, $r3;
        android.view.accessibility.AccessibilityNodeInfo $r2, $r4;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r1 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        $r4 = virtualinvoke $r3.<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(android.view.View)>(r0);

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoInternal()>();

        return $r2;
    }

    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfoInternal()
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityNodeProvider r1;
        android.view.accessibility.AccessibilityNodeInfo r2, $r3;

        r0 := @this: android.view.View;

        r1 = virtualinvoke r0.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>(-1);

        return $r3;

     label1:
        r2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)>(r0);

        virtualinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r2);

        return r2;
    }

    public void createContextMenu(android.view.ContextMenu)
    {
        android.view.View r0;
        android.view.ContextMenu r1;
        android.view.ContextMenu$ContextMenuInfo r2;
        android.view.View$ListenerInfo r3;
        com.android.internal.view.menu.MenuBuilder $r4, $r5;
        android.view.ViewParent $r6, $r7;
        android.view.View$OnCreateContextMenuListener $r8, $r9;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.ContextMenu;

        r2 = virtualinvoke r0.<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>();

        $r4 = (com.android.internal.view.menu.MenuBuilder) r1;

        virtualinvoke $r4.<com.android.internal.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)>(r2);

        virtualinvoke r0.<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>(r1);

        r3 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r3 == null goto label1;

        $r8 = r3.<android.view.View$ListenerInfo: android.view.View$OnCreateContextMenuListener mOnCreateContextMenuListener>;

        if $r8 == null goto label1;

        $r9 = r3.<android.view.View$ListenerInfo: android.view.View$OnCreateContextMenuListener mOnCreateContextMenuListener>;

        interfaceinvoke $r9.<android.view.View$OnCreateContextMenuListener: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(r1, r0, r2);

     label1:
        $r5 = (com.android.internal.view.menu.MenuBuilder) r1;

        virtualinvoke $r5.<com.android.internal.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)>(null);

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r6 == null goto label2;

        $r7 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r7.<android.view.ViewParent: void createContextMenu(android.view.ContextMenu)>(r1);

     label2:
        return;
    }

    android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config, int, boolean)
    {
        android.view.View r0;
        android.graphics.Bitmap$Config r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        boolean z0, $z1;
        android.view.View$AttachInfo r2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.util.DisplayMetrics r3, $r14;
        android.graphics.Bitmap r4;
        android.content.res.Resources r5, $r7;
        android.graphics.Canvas r6, $r8, $r15;
        android.view.ViewOverlay $r9, $r10, $r12;
        android.view.ViewGroup $r11;
        java.lang.OutOfMemoryError $r13;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Bitmap$Config;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i7 = r0.<android.view.View: int mRight>;

        $i8 = r0.<android.view.View: int mLeft>;

        i1 = $i7 - $i8;

        $i9 = r0.<android.view.View: int mBottom>;

        $i10 = r0.<android.view.View: int mTop>;

        i2 = $i9 - $i10;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label04;

        f0 = r2.<android.view.View$AttachInfo: float mApplicationScale>;

     label01:
        $f2 = (float) i1;

        $f1 = f0 * $f2;

        $f4 = 0.5F + $f1;

        i3 = (int) $f4;

        $f3 = (float) i2;

        $f6 = f0 * $f3;

        $f5 = 0.5F + $f6;

        i4 = (int) $f5;

        $r7 = r0.<android.view.View: android.content.res.Resources mResources>;

        r3 = virtualinvoke $r7.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        if i3 <= 0 goto label05;

     label02:
        if i4 <= 0 goto label06;

     label03:
        r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config)>(r3, i3, i4, r1);

        if r4 != null goto label07;

        $r13 = new java.lang.OutOfMemoryError;

        specialinvoke $r13.<java.lang.OutOfMemoryError: void <init>()>();

        throw $r13;

     label04:
        f0 = 1.0F;

        goto label01;

     label05:
        i3 = 1;

        goto label02;

     label06:
        i4 = 1;

        goto label03;

     label07:
        r5 = virtualinvoke r0.<android.view.View: android.content.res.Resources getResources()>();

        if r5 == null goto label08;

        $r14 = virtualinvoke r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i20 = $r14.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke r4.<android.graphics.Bitmap: void setDensity(int)>($i20);

     label08:
        if r2 == null goto label14;

        r6 = r2.<android.view.View$AttachInfo: android.graphics.Canvas mCanvas>;

        if r6 != null goto label09;

        $r15 = new android.graphics.Canvas;

        specialinvoke $r15.<android.graphics.Canvas: void <init>()>();

        r6 = $r15;

     label09:
        virtualinvoke r6.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(r4);

        r2.<android.view.View$AttachInfo: android.graphics.Canvas mCanvas> = null;

     label10:
        $i11 = -16777216 & i0;

        if $i11 == 0 goto label11;

        virtualinvoke r4.<android.graphics.Bitmap: void eraseColor(int)>(i0);

     label11:
        virtualinvoke r0.<android.view.View: void computeScroll()>();

        i5 = virtualinvoke r6.<android.graphics.Canvas: int save()>();

        virtualinvoke r6.<android.graphics.Canvas: void scale(float,float)>(f0, f0);

        $i14 = r0.<android.view.View: int mScrollX>;

        $i12 = neg $i14;

        $f7 = (float) $i12;

        $i13 = r0.<android.view.View: int mScrollY>;

        $i16 = neg $i13;

        $f8 = (float) $i16;

        virtualinvoke r6.<android.graphics.Canvas: void translate(float,float)>($f7, $f8);

        i6 = r0.<android.view.View: int mPrivateFlags>;

        $i15 = r0.<android.view.View: int mPrivateFlags>;

        $i18 = -6291457 & $i15;

        r0.<android.view.View: int mPrivateFlags> = $i18;

        $i19 = r0.<android.view.View: int mPrivateFlags>;

        $i17 = 128 & $i19;

        if $i17 != 128 goto label15;

        virtualinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>(r6);

        $r9 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        if $r9 == null goto label12;

        $r12 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $z1 = virtualinvoke $r12.<android.view.ViewOverlay: boolean isEmpty()>();

        if $z1 != 0 goto label12;

        $r10 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r11 = virtualinvoke $r10.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r11.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r6);

     label12:
        r0.<android.view.View: int mPrivateFlags> = i6;

        virtualinvoke r6.<android.graphics.Canvas: void restoreToCount(int)>(i5);

        virtualinvoke r6.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        if r2 == null goto label13;

        r2.<android.view.View$AttachInfo: android.graphics.Canvas mCanvas> = r6;

     label13:
        return r4;

     label14:
        $r8 = new android.graphics.Canvas;

        specialinvoke $r8.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r4);

        r6 = $r8;

        goto label10;

     label15:
        virtualinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r6);

        goto label12;
    }

    public void debug()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void debug(int)>(0);

        return;
    }

    protected void debug(int)
    {
        android.view.View r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i23, $i25, $i26, $i27, $i29;
        java.lang.String r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, $r32, $r44, $r55, $r65, $r70, $r74, $r78, $r79, $r81;
        java.lang.Object r3;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r54, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r69, $r71, $r72, $r73, $r75, $r76, $r77, $r80, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95;
        android.view.ViewGroup$LayoutParams $r52, $r53;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i2 = i0 - 1;

        r1 = staticinvoke <android.view.View: java.lang.String debugIndent(int)>($i2);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+ ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = virtualinvoke r0.<android.view.View: int getId()>();

        if i1 == -1 goto label1;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (id=");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r2 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r3 = virtualinvoke r0.<android.view.View: java.lang.Object getTag()>();

        if r3 == null goto label2;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (tag=");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r2 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", r2);

        $i5 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 2 & $i5;

        if $i3 == 0 goto label3;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r78 = staticinvoke <android.view.View: java.lang.String debugIndent(int)>(i0);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FOCUSED");

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r79);

     label3:
        r4 = staticinvoke <android.view.View: java.lang.String debugIndent(int)>(i0);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("frame={");

        $i7 = r0.<android.view.View: int mLeft>;

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i6 = r0.<android.view.View: int mTop>;

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i8 = r0.<android.view.View: int mRight>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i9 = r0.<android.view.View: int mBottom>;

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} scroll={");

        $i11 = r0.<android.view.View: int mScrollX>;

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i10 = r0.<android.view.View: int mScrollY>;

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r32);

        $i13 = r0.<android.view.View: int mPaddingLeft>;

        if $i13 != 0 goto label4;

        $i29 = r0.<android.view.View: int mPaddingTop>;

        if $i29 != 0 goto label4;

        $i27 = r0.<android.view.View: int mPaddingRight>;

        if $i27 != 0 goto label4;

        $i26 = r0.<android.view.View: int mPaddingBottom>;

        if $i26 == 0 goto label5;

     label4:
        r5 = staticinvoke <android.view.View: java.lang.String debugIndent(int)>(i0);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("padding={");

        $i15 = r0.<android.view.View: int mPaddingLeft>;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r36 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i14 = r0.<android.view.View: int mPaddingTop>;

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i17 = r0.<android.view.View: int mPaddingRight>;

        $r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i18 = r0.<android.view.View: int mPaddingBottom>;

        $r42 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r44);

     label5:
        r6 = staticinvoke <android.view.View: java.lang.String debugIndent(int)>(i0);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r47 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mMeasureWidth=");

        $i19 = r0.<android.view.View: int mMeasuredWidth>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMeasureHeight=");

        $i20 = r0.<android.view.View: int mMeasuredHeight>;

        $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r55);

        r7 = staticinvoke <android.view.View: java.lang.String debugIndent(int)>(i0);

        $r52 = r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        if $r52 != null goto label7;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BAD! no layout params");

        r8 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", r8);

        r10 = staticinvoke <android.view.View: java.lang.String debugIndent(int)>(i0);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flags={");

        r9 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $i23 = r0.<android.view.View: int mViewFlags>;

        $r65 = staticinvoke <android.view.View: java.lang.String printFlags(int)>($i23);

        $r64 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        r11 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r70 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r70);

        r13 = staticinvoke <android.view.View: java.lang.String debugIndent(int)>(i0);

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("privateFlags={");

        r12 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $i25 = r0.<android.view.View: int mPrivateFlags>;

        $r74 = staticinvoke <android.view.View: java.lang.String printPrivateFlags(int)>($i25);

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        r14 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r82 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r81);

        return;

     label7:
        $r53 = r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        r8 = virtualinvoke $r53.<android.view.ViewGroup$LayoutParams: java.lang.String debug(java.lang.String)>(r7);

        goto label6;
    }

    public void destroyDrawingCache()
    {
        android.view.View r0;
        android.graphics.Bitmap $r1, $r2, $r3, $r4;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.Bitmap mDrawingCache>;

        if $r1 == null goto label1;

        $r4 = r0.<android.view.View: android.graphics.Bitmap mDrawingCache>;

        virtualinvoke $r4.<android.graphics.Bitmap: void recycle()>();

        r0.<android.view.View: android.graphics.Bitmap mDrawingCache> = null;

     label1:
        $r2 = r0.<android.view.View: android.graphics.Bitmap mUnscaledDrawingCache>;

        if $r2 == null goto label2;

        $r3 = r0.<android.view.View: android.graphics.Bitmap mUnscaledDrawingCache>;

        virtualinvoke $r3.<android.graphics.Bitmap: void recycle()>();

        r0.<android.view.View: android.graphics.Bitmap mUnscaledDrawingCache> = null;

     label2:
        return;
    }

    protected void destroyHardwareResources()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        specialinvoke r0.<android.view.View: void resetDisplayList()>();

        virtualinvoke r0.<android.view.View: boolean destroyLayer(boolean)>(1);

        return;
    }

    boolean destroyLayer(boolean)
    {
        android.view.View r0;
        boolean z0, $z1, $z2;
        android.view.View$AttachInfo r1;
        android.view.HardwareLayer $r2, $r5, $r7;
        android.view.HardwareRenderer $r3, $r4, $r6, $r8;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        if $r2 == null goto label3;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label2;

        $r3 = r1.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        if $r3 == null goto label2;

        $r4 = r1.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z1 = virtualinvoke $r4.<android.view.HardwareRenderer: boolean isEnabled()>();

        if $z1 == 0 goto label2;

        if z0 != 0 goto label1;

        $r8 = r1.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z2 = virtualinvoke $r8.<android.view.HardwareRenderer: boolean validate()>();

        if $z2 == 0 goto label2;

     label1:
        $r6 = r1.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $r5 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        virtualinvoke $r6.<android.view.HardwareRenderer: void cancelLayerUpdate(android.view.HardwareLayer)>($r5);

        $r7 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        virtualinvoke $r7.<android.view.HardwareLayer: void destroy()>();

        r0.<android.view.View: android.view.HardwareLayer mHardwareLayer> = null;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

     label2:
        return 1;

     label3:
        return 0;
    }

    void dispatchAttachedToWindow(android.view.View$AttachInfo, int)
    {
        android.view.View r0;
        android.view.View$AttachInfo r1, $r7, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.view.View$ListenerInfo r2;
        java.util.concurrent.CopyOnWriteArrayList r3;
        java.util.Iterator r4;
        android.view.ViewOverlay $r5, $r13;
        android.view.ViewTreeObserver $r6, $r12, $r14;
        java.lang.Object $r8;
        boolean $z0;
        android.view.View$OnAttachStateChangeListener $r9;
        java.util.ArrayList $r10;
        android.view.ViewGroup $r15;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$AttachInfo;

        i0 := @parameter1: int;

        r0.<android.view.View: android.view.View$AttachInfo mAttachInfo> = r1;

        $r5 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        if $r5 == null goto label1;

        $r13 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r15 = virtualinvoke $r13.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r15.<android.view.ViewGroup: void dispatchAttachedToWindow(android.view.View$AttachInfo,int)>(r1, i0);

     label1:
        $i2 = r0.<android.view.View: int mWindowAttachCount>;

        $i3 = 1 + $i2;

        r0.<android.view.View: int mWindowAttachCount> = $i3;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 1024 | $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        $r6 = r0.<android.view.View: android.view.ViewTreeObserver mFloatingTreeObserver>;

        if $r6 == null goto label2;

        $r14 = r1.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        $r12 = r0.<android.view.View: android.view.ViewTreeObserver mFloatingTreeObserver>;

        virtualinvoke $r14.<android.view.ViewTreeObserver: void merge(android.view.ViewTreeObserver)>($r12);

        r0.<android.view.View: android.view.ViewTreeObserver mFloatingTreeObserver> = null;

     label2:
        $i6 = r0.<android.view.View: int mPrivateFlags>;

        $i7 = 524288 & $i6;

        if $i7 == 0 goto label3;

        $r11 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r11.<android.view.View$AttachInfo: java.util.ArrayList mScrollContainers>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $i11 = r0.<android.view.View: int mPrivateFlags>;

        $i12 = 1048576 | $i11;

        r0.<android.view.View: int mPrivateFlags> = $i12;

     label3:
        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        virtualinvoke r0.<android.view.View: void performCollectViewAttributes(android.view.View$AttachInfo,int)>($r7, i0);

        virtualinvoke r0.<android.view.View: void onAttachedToWindow()>();

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        r3 = null;

        if r2 == null goto label4;

        r3 = staticinvoke <android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$100(android.view.View$ListenerInfo)>(r2);

     label4:
        if r3 == null goto label6;

        $i10 = virtualinvoke r3.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

        if $i10 <= 0 goto label6;

        r4 = virtualinvoke r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.view.View$OnAttachStateChangeListener) $r8;

        interfaceinvoke $r9.<android.view.View$OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)>(r0);

        goto label5;

     label6:
        i1 = r1.<android.view.View$AttachInfo: int mWindowVisibility>;

        if i1 == 8 goto label7;

        virtualinvoke r0.<android.view.View: void onWindowVisibilityChanged(int)>(i1);

     label7:
        $i9 = r0.<android.view.View: int mPrivateFlags>;

        $i8 = 1024 & $i9;

        if $i8 == 0 goto label8;

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

     label8:
        virtualinvoke r0.<android.view.View: void needGlobalAttributesUpdate(boolean)>(0);

        return;
    }

    void dispatchCancelPendingInputEvents()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3;
        android.util.SuperNotCalledException $r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags3>;

        $i1 = -17 & $i0;

        r0.<android.view.View: int mPrivateFlags3> = $i1;

        virtualinvoke r0.<android.view.View: void onCancelPendingInputEvents()>();

        $i2 = r0.<android.view.View: int mPrivateFlags3>;

        $i3 = 16 & $i2;

        if $i3 == 16 goto label1;

        $r1 = new android.util.SuperNotCalledException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onCancelPendingInputEvents()");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.util.SuperNotCalledException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label1:
        return;
    }

    void dispatchCollectViewAttributes(android.view.View$AttachInfo, int)
    {
        android.view.View r0;
        android.view.View$AttachInfo r1;
        int i0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$AttachInfo;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.View: void performCollectViewAttributes(android.view.View$AttachInfo,int)>(r1, i0);

        return;
    }

    public void dispatchConfigurationChanged(android.content.res.Configuration)
    {
        android.view.View r0;
        android.content.res.Configuration r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.content.res.Configuration;

        virtualinvoke r0.<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    void dispatchDetachedFromWindow()
    {
        android.view.View r0;
        android.view.View$AttachInfo r1, $r8;
        android.view.View$ListenerInfo r2;
        java.util.concurrent.CopyOnWriteArrayList r3;
        java.util.Iterator r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewOverlay $r5, $r6;
        android.view.ViewGroup $r7;
        java.util.ArrayList $r9;
        java.lang.Object $r10;
        boolean $z1;
        android.view.View$OnAttachStateChangeListener $r11;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label1;

        $i5 = r1.<android.view.View$AttachInfo: int mWindowVisibility>;

        if $i5 == 8 goto label1;

        virtualinvoke r0.<android.view.View: void onWindowVisibilityChanged(int)>(8);

     label1:
        virtualinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label4;

        r3 = staticinvoke <android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$100(android.view.View$ListenerInfo)>(r2);

     label2:
        if r3 == null goto label5;

        $i4 = virtualinvoke r3.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

        if $i4 <= 0 goto label5;

        r4 = virtualinvoke r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (android.view.View$OnAttachStateChangeListener) $r10;

        interfaceinvoke $r11.<android.view.View$OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)>(r0);

        goto label3;

     label4:
        r3 = null;

        goto label2;

     label5:
        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 1048576 & $i0;

        if $i1 == 0 goto label6;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r9 = $r8.<android.view.View$AttachInfo: java.util.ArrayList mScrollContainers>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -1048577 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

     label6:
        r0.<android.view.View: android.view.View$AttachInfo mAttachInfo> = null;

        $r5 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        if $r5 == null goto label7;

        $r6 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r7 = virtualinvoke $r6.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r7.<android.view.ViewGroup: void dispatchDetachedFromWindow()>();

     label7:
        return;
    }

    public void dispatchDisplayHint(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.View: void onDisplayHint(int)>(i0);

        return;
    }

    public boolean dispatchDragEvent(android.view.DragEvent)
    {
        android.view.View r0;
        android.view.DragEvent r1;
        android.view.View$ListenerInfo r2;
        boolean $z0, $z1;
        android.view.View$OnDragListener $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.DragEvent;

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label1;

        $r3 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnDragListener access$600(android.view.View$ListenerInfo)>(r2);

        if $r3 == null goto label1;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 32 & $i0;

        if $i1 != 0 goto label1;

        $r4 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnDragListener access$600(android.view.View$ListenerInfo)>(r2);

        $z1 = interfaceinvoke $r4.<android.view.View$OnDragListener: boolean onDrag(android.view.View,android.view.DragEvent)>(r0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean onDragEvent(android.view.DragEvent)>(r1);

        return $z0;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.view.View r0;
        android.graphics.Canvas r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Canvas;

        return;
    }

    public void dispatchFinishTemporaryDetach()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void onFinishTemporaryDetach()>();

        return;
    }

    protected boolean dispatchGenericFocusedEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2;
        android.view.InputEventConsistencyVerifier $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if $r2 == null goto label1;

        $r5 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        virtualinvoke $r5.<android.view.InputEventConsistencyVerifier: void onGenericMotionEvent(android.view.MotionEvent,int)>(r1, 0);

     label1:
        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i2 = 2 & $i1;

        if $i2 == 0 goto label7;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if i0 == 9 goto label2;

        if i0 == 7 goto label2;

        if i0 != 10 goto label4;

     label2:
        $z2 = virtualinvoke r0.<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>(r1);

        if $z2 == 0 goto label5;

     label3:
        return 1;

     label4:
        $z3 = virtualinvoke r0.<android.view.View: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>(r1);

        if $z3 != 0 goto label3;

     label5:
        $z1 = specialinvoke r0.<android.view.View: boolean dispatchGenericMotionEventInternal(android.view.MotionEvent)>(r1);

        if $z1 != 0 goto label3;

        $r3 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if $r3 == null goto label6;

        $r4 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        virtualinvoke $r4.<android.view.InputEventConsistencyVerifier: void onUnhandledEvent(android.view.InputEvent,int)>(r1, 0);

     label6:
        return 0;

     label7:
        $z0 = virtualinvoke r0.<android.view.View: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label5;

        return 1;
    }

    protected boolean dispatchGenericPointerEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    protected void dispatchGetDisplayList()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return;
    }

    protected boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        android.view.View$ListenerInfo r2;
        boolean $z0, $z1;
        android.view.View$OnHoverListener $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label1;

        $r3 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnHoverListener access$500(android.view.View$ListenerInfo)>(r2);

        if $r3 == null goto label1;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 32 & $i0;

        if $i1 != 0 goto label1;

        $r4 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnHoverListener access$500(android.view.View$ListenerInfo)>(r2);

        $z1 = interfaceinvoke $r4.<android.view.View$OnHoverListener: boolean onHover(android.view.View,android.view.MotionEvent)>(r0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.view.View r0;
        android.view.KeyEvent r1;
        android.view.View$ListenerInfo r2;
        android.view.KeyEvent$DispatcherState r3;
        android.view.InputEventConsistencyVerifier $r4, $r6, $r7, $r11;
        android.view.View$AttachInfo $r5, $r8;
        boolean $z0, $z1;
        android.view.View$OnKeyListener $r9, $r10;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.KeyEvent;

        $r4 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if $r4 == null goto label1;

        $r11 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        virtualinvoke $r11.<android.view.InputEventConsistencyVerifier: void onKeyEvent(android.view.KeyEvent,int)>(r1, 0);

     label1:
        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label2;

        $r9 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnKeyListener access$200(android.view.View$ListenerInfo)>(r2);

        if $r9 == null goto label2;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 32 & $i0;

        if $i1 != 0 goto label2;

        $r10 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnKeyListener access$200(android.view.View$ListenerInfo)>(r2);

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z1 = interfaceinvoke $r10.<android.view.View$OnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>(r0, $i2, r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r5 == null goto label4;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r3 = $r8.<android.view.View$AttachInfo: android.view.KeyEvent$DispatcherState mKeyDispatchState>;

     label3:
        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>(r0, r3, r0);

        if $z0 == 0 goto label5;

        return 1;

     label4:
        r3 = null;

        goto label3;

     label5:
        $r6 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if $r6 == null goto label6;

        $r7 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        virtualinvoke $r7.<android.view.InputEventConsistencyVerifier: void onUnhandledEvent(android.view.InputEvent,int)>(r1, 0);

     label6:
        return 0;
    }

    public boolean dispatchKeyEventPreIme(android.view.KeyEvent)
    {
        android.view.View r0;
        android.view.KeyEvent r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = virtualinvoke r0.<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>($i0, r1);

        return $z0;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        android.view.View r0;
        android.view.KeyEvent r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z0 = virtualinvoke r0.<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>($i0, r1);

        return $z0;
    }

    public final boolean dispatchPointerEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isTouchEvent()>();

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label1:
        $z1 = virtualinvoke r0.<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.View$AccessibilityDelegate $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        $z1 = virtualinvoke $r3.<android.view.View$AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r0, r1);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z0;
    }

    boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 0;
    }

    protected void dispatchRestoreInstanceState(android.util.SparseArray)
    {
        android.view.View r0;
        android.util.SparseArray r1;
        android.os.Parcelable r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.util.SparseArray;

        $i0 = r0.<android.view.View: int mID>;

        if $i0 == -1 goto label1;

        $i1 = r0.<android.view.View: int mID>;

        $r3 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r2 = (android.os.Parcelable) $r3;

        if r2 == null goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -131073 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        virtualinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>(r2);

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 131072 & $i4;

        if $i5 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Derived class did not call super.onRestoreInstanceState()");

        throw $r4;

     label1:
        return;
    }

    protected void dispatchSaveInstanceState(android.util.SparseArray)
    {
        android.view.View r0;
        android.util.SparseArray r1;
        android.os.Parcelable r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.util.SparseArray;

        $i0 = r0.<android.view.View: int mID>;

        if $i0 == -1 goto label2;

        $i1 = r0.<android.view.View: int mViewFlags>;

        $i2 = 65536 & $i1;

        if $i2 != 0 goto label2;

        $i3 = r0.<android.view.View: int mPrivateFlags>;

        $i4 = -131073 & $i3;

        r0.<android.view.View: int mPrivateFlags> = $i4;

        r2 = virtualinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        $i5 = r0.<android.view.View: int mPrivateFlags>;

        $i6 = 131072 & $i5;

        if $i6 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Derived class did not call super.onSaveInstanceState()");

        throw $r3;

     label1:
        if r2 == null goto label2;

        $i7 = r0.<android.view.View: int mID>;

        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>($i7, r2);

     label2:
        return;
    }

    void dispatchScreenStateChanged(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.View: void onScreenStateChanged(int)>(i0);

        return;
    }

    protected void dispatchSetActivated(boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        return;
    }

    protected void dispatchSetPressed(boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        return;
    }

    protected void dispatchSetSelected(boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        return;
    }

    public void dispatchStartTemporaryDetach()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        specialinvoke r0.<android.view.View: void clearDisplayList()>();

        virtualinvoke r0.<android.view.View: void onStartTemporaryDetach()>();

        return;
    }

    public void dispatchSystemUiVisibilityChanged(int)
    {
        android.view.View r0;
        int i0, $i1;
        android.view.View$ListenerInfo r1;
        android.view.View$OnSystemUiVisibilityChangeListener $r2, $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r1 == null goto label1;

        $r2 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnSystemUiVisibilityChangeListener access$1100(android.view.View$ListenerInfo)>(r1);

        if $r2 == null goto label1;

        $r3 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnSystemUiVisibilityChangeListener access$1100(android.view.View$ListenerInfo)>(r1);

        $i1 = 65535 & i0;

        interfaceinvoke $r3.<android.view.View$OnSystemUiVisibilityChangeListener: void onSystemUiVisibilityChange(int)>($i1);

     label1:
        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        android.view.View$ListenerInfo r2;
        android.view.InputEventConsistencyVerifier $r3, $r4, $r5, $r8;
        boolean $z0, $z1, $z2;
        android.view.View$OnTouchListener $r6, $r7;
        int $i0, $i1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if $r3 == null goto label1;

        $r8 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        virtualinvoke $r8.<android.view.InputEventConsistencyVerifier: void onTouchEvent(android.view.MotionEvent,int)>(r1, 0);

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean onFilterTouchEventForSecurity(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label4;

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label3;

        $r6 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnTouchListener access$300(android.view.View$ListenerInfo)>(r2);

        if $r6 == null goto label3;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 32 & $i0;

        if $i1 != 0 goto label3;

        $r7 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnTouchListener access$300(android.view.View$ListenerInfo)>(r2);

        $z2 = interfaceinvoke $r7.<android.view.View$OnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>(r0, r1);

        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        $z1 = virtualinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if $z1 != 0 goto label2;

     label4:
        $r4 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if $r4 == null goto label5;

        $r5 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        virtualinvoke $r5.<android.view.InputEventConsistencyVerifier: void onUnhandledEvent(android.view.InputEvent,int)>(r1, 0);

     label5:
        return 0;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        android.view.InputEventConsistencyVerifier $r2, $r3;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.InputEventConsistencyVerifier mInputEventConsistencyVerifier>;

        virtualinvoke $r3.<android.view.InputEventConsistencyVerifier: void onTrackballEvent(android.view.MotionEvent,int)>(r1, 0);

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchUnhandledMove(android.view.View, int)
    {
        android.view.View r0, r1;
        int i0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return 0;
    }

    protected void dispatchVisibilityChanged(android.view.View, int)
    {
        android.view.View r0, r1;
        int i0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.View: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        return;
    }

    public void dispatchWindowFocusChanged(boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.view.View: void onWindowFocusChanged(boolean)>(z0);

        return;
    }

    public void dispatchWindowSystemUiVisiblityChanged(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.View: void onWindowSystemUiVisibilityChanged(int)>(i0);

        return;
    }

    public void dispatchWindowVisibilityChanged(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.View: void onWindowVisibilityChanged(int)>(i0);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.view.View r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i35, $i37, $i42, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, $z9, $z16, $z17, $z19;
        android.view.View$ScrollabilityCache r2;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64;
        android.graphics.Matrix r3;
        android.graphics.Paint r4;
        android.graphics.Shader r5;
        android.graphics.Rect $r6, $r17;
        android.graphics.drawable.Drawable r7;
        android.view.ViewOverlay $r8, $r9, $r10, $r12, $r13, $r14;
        android.view.ViewGroup $r11, $r15;
        byte $b39, $b41, $b43, $b44;
        android.view.View$AttachInfo $r16, $r18;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Canvas;

        $r6 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        if $r6 == null goto label01;

        $r17 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>($r17);

     label01:
        i0 = r0.<android.view.View: int mPrivateFlags>;

        $i14 = 6291456 & i0;

        if $i14 != 4194304 goto label10;

        $r16 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r16 == null goto label02;

        $r18 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z19 = $r18.<android.view.View$AttachInfo: boolean mIgnoreDirtyState>;

        if $z19 != 0 goto label10;

     label02:
        z0 = 1;

     label03:
        $i15 = -6291457 & i0;

        $i12 = 32 | $i15;

        r0.<android.view.View: int mPrivateFlags> = $i12;

        if z0 != 0 goto label05;

        r7 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if r7 == null goto label05;

        i11 = r0.<android.view.View: int mScrollX>;

        i10 = r0.<android.view.View: int mScrollY>;

        $z17 = r0.<android.view.View: boolean mBackgroundSizeChanged>;

        if $z17 == 0 goto label04;

        $i59 = r0.<android.view.View: int mRight>;

        $i61 = r0.<android.view.View: int mLeft>;

        $i54 = $i59 - $i61;

        $i55 = r0.<android.view.View: int mBottom>;

        $i60 = r0.<android.view.View: int mTop>;

        $i56 = $i55 - $i60;

        virtualinvoke r7.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i54, $i56);

        r0.<android.view.View: boolean mBackgroundSizeChanged> = 0;

     label04:
        $i45 = i11 | i10;

        if $i45 != 0 goto label11;

        virtualinvoke r7.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label05:
        i1 = r0.<android.view.View: int mViewFlags>;

        $i13 = i1 & 4096;

        if $i13 == 0 goto label12;

        z1 = 1;

     label06:
        $i18 = i1 & 8192;

        if $i18 == 0 goto label13;

        z2 = 1;

     label07:
        if z2 != 0 goto label14;

        if z1 != 0 goto label14;

        if z0 != 0 goto label08;

        virtualinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

     label08:
        virtualinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>(r1);

        virtualinvoke r0.<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>(r1);

        $r14 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        if $r14 == null goto label09;

        $r13 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $z16 = virtualinvoke $r13.<android.view.ViewOverlay: boolean isEmpty()>();

        if $z16 != 0 goto label09;

        $r12 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r15 = virtualinvoke $r12.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r15.<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>(r1);

     label09:
        return;

     label10:
        z0 = 0;

        goto label03;

     label11:
        $f63 = (float) i11;

        $f61 = (float) i10;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f63, $f61);

        virtualinvoke r7.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        $i58 = neg i11;

        $f64 = (float) $i58;

        $i57 = neg i10;

        $f62 = (float) $i57;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f64, $f62);

        goto label05;

     label12:
        z1 = 0;

        goto label06;

     label13:
        z2 = 0;

        goto label07;

     label14:
        i2 = r0.<android.view.View: int mPaddingLeft>;

        z3 = virtualinvoke r0.<android.view.View: boolean isPaddingOffsetRequired()>();

        if z3 == 0 goto label15;

        $i50 = virtualinvoke r0.<android.view.View: int getLeftPaddingOffset()>();

        i2 = i2 + $i50;

     label15:
        $i17 = r0.<android.view.View: int mScrollX>;

        i3 = i2 + $i17;

        $i16 = r0.<android.view.View: int mRight>;

        $i21 = i3 + $i16;

        $i22 = r0.<android.view.View: int mLeft>;

        $i19 = $i21 - $i22;

        $i20 = r0.<android.view.View: int mPaddingRight>;

        $i26 = $i19 - $i20;

        i4 = $i26 - i2;

        $i25 = r0.<android.view.View: int mScrollY>;

        $i24 = virtualinvoke r0.<android.view.View: int getFadeTop(boolean)>(z3);

        i5 = $i25 + $i24;

        $i23 = virtualinvoke r0.<android.view.View: int getFadeHeight(boolean)>(z3);

        i6 = i5 + $i23;

        if z3 == 0 goto label16;

        $i52 = virtualinvoke r0.<android.view.View: int getRightPaddingOffset()>();

        i4 = i4 + $i52;

        $i51 = virtualinvoke r0.<android.view.View: int getBottomPaddingOffset()>();

        i6 = i6 + $i51;

     label16:
        r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $i27 = r2.<android.view.View$ScrollabilityCache: int fadingEdgeLength>;

        f0 = (float) $i27;

        i7 = (int) f0;

        if z2 == 0 goto label17;

        $i46 = i5 + i7;

        $i47 = i6 - i7;

        if $i46 <= $i47 goto label17;

        $i53 = i6 - i5;

        i7 = $i53 / 2;

     label17:
        if z1 == 0 goto label18;

        $i49 = i3 + i7;

        $i42 = i4 - i7;

        if $i49 <= $i42 goto label18;

        $i48 = i4 - i3;

        i7 = $i48 / 2;

     label18:
        f1 = 0.0F;

        z4 = 0;

        z5 = 0;

        f2 = 0.0F;

        if z2 == 0 goto label20;

        $f58 = virtualinvoke r0.<android.view.View: float getTopFadingEdgeStrength()>();

        $f59 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f58);

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f59);

        $f60 = f2 * f0;

        $b44 = $f60 cmpl 1.0F;

        if $b44 <= 0 goto label32;

        z5 = 1;

     label19:
        $f55 = virtualinvoke r0.<android.view.View: float getBottomFadingEdgeStrength()>();

        $f56 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f55);

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f56);

        $f57 = f1 * f0;

        $b41 = $f57 cmpl 1.0F;

        if $b41 <= 0 goto label33;

        z4 = 1;

     label20:
        z7 = 0;

        z6 = 0;

        f4 = 0.0F;

        f3 = 0.0F;

        if z1 == 0 goto label22;

        $f53 = virtualinvoke r0.<android.view.View: float getLeftFadingEdgeStrength()>();

        $f54 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f53);

        f4 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f54);

        $f47 = f4 * f0;

        $b39 = $f47 cmpl 1.0F;

        if $b39 <= 0 goto label34;

        z7 = 1;

     label21:
        $f49 = virtualinvoke r0.<android.view.View: float getRightFadingEdgeStrength()>();

        $f48 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f49);

        f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f48);

        $f50 = f3 * f0;

        $b43 = $f50 cmpl 1.0F;

        if $b43 <= 0 goto label35;

        z6 = 1;

     label22:
        i9 = virtualinvoke r1.<android.graphics.Canvas: int getSaveCount()>();

        i8 = virtualinvoke r0.<android.view.View: int getSolidColor()>();

        if i8 != 0 goto label36;

        if z5 == 0 goto label23;

        $f51 = (float) i3;

        $f52 = (float) i5;

        $f41 = (float) i4;

        $i37 = i5 + i7;

        $f42 = (float) $i37;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f51, $f52, $f41, $f42, null, 4);

     label23:
        if z4 == 0 goto label24;

        $f43 = (float) i3;

        $i33 = i6 - i7;

        $f44 = (float) $i33;

        $f45 = (float) i4;

        $f46 = (float) i6;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f43, $f44, $f45, $f46, null, 4);

     label24:
        if z7 == 0 goto label25;

        $f37 = (float) i3;

        $f38 = (float) i5;

        $i35 = i3 + i7;

        $f39 = (float) $i35;

        $f40 = (float) i6;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f37, $f38, $f39, $f40, null, 4);

     label25:
        if z6 == 0 goto label26;

        $i32 = i4 - i7;

        $f31 = (float) $i32;

        $f30 = (float) i5;

        $f33 = (float) i4;

        $f32 = (float) i6;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f31, $f30, $f33, $f32, null, 4);

     label26:
        if z0 != 0 goto label27;

        virtualinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

     label27:
        virtualinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>(r1);

        r4 = r2.<android.view.View$ScrollabilityCache: android.graphics.Paint paint>;

        r3 = r2.<android.view.View$ScrollabilityCache: android.graphics.Matrix matrix>;

        r5 = r2.<android.view.View$ScrollabilityCache: android.graphics.Shader shader>;

        if z5 == 0 goto label28;

        $f26 = f0 * f2;

        virtualinvoke r3.<android.graphics.Matrix: void setScale(float,float)>(1.0F, $f26);

        $f25 = (float) i3;

        $f27 = (float) i5;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f25, $f27);

        virtualinvoke r5.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>(r3);

        $f34 = (float) i3;

        $f36 = (float) i5;

        $f35 = (float) i4;

        $i31 = i5 + i7;

        $f24 = (float) $i31;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f34, $f36, $f35, $f24, r4);

     label28:
        if z4 == 0 goto label29;

        $f21 = f0 * f1;

        virtualinvoke r3.<android.graphics.Matrix: void setScale(float,float)>(1.0F, $f21);

        virtualinvoke r3.<android.graphics.Matrix: boolean postRotate(float)>(180.0F);

        $f22 = (float) i3;

        $f23 = (float) i6;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f22, $f23);

        virtualinvoke r5.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>(r3);

        $f29 = (float) i3;

        $i30 = i6 - i7;

        $f28 = (float) $i30;

        $f19 = (float) i4;

        $f20 = (float) i6;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f29, $f28, $f19, $f20, r4);

     label29:
        if z7 == 0 goto label30;

        $f10 = f0 * f4;

        virtualinvoke r3.<android.graphics.Matrix: void setScale(float,float)>(1.0F, $f10);

        virtualinvoke r3.<android.graphics.Matrix: boolean postRotate(float)>(-90.0F);

        $f17 = (float) i3;

        $f18 = (float) i5;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f17, $f18);

        virtualinvoke r5.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>(r3);

        $f15 = (float) i3;

        $f16 = (float) i5;

        $i29 = i3 + i7;

        $f13 = (float) $i29;

        $f14 = (float) i6;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f15, $f16, $f13, $f14, r4);

     label30:
        if z6 == 0 goto label31;

        $f5 = f0 * f3;

        virtualinvoke r3.<android.graphics.Matrix: void setScale(float,float)>(1.0F, $f5);

        virtualinvoke r3.<android.graphics.Matrix: boolean postRotate(float)>(90.0F);

        $f7 = (float) i4;

        $f6 = (float) i5;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f7, $f6);

        virtualinvoke r5.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>(r3);

        $i28 = i4 - i7;

        $f9 = (float) $i28;

        $f8 = (float) i5;

        $f12 = (float) i4;

        $f11 = (float) i6;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f9, $f8, $f12, $f11, r4);

     label31:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i9);

        virtualinvoke r0.<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>(r1);

        $r8 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        if $r8 == null goto label09;

        $r9 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $z9 = virtualinvoke $r9.<android.view.ViewOverlay: boolean isEmpty()>();

        if $z9 != 0 goto label09;

        $r10 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        $r11 = virtualinvoke $r10.<android.view.ViewOverlay: android.view.ViewGroup getOverlayView()>();

        virtualinvoke $r11.<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>(r1);

        return;

     label32:
        z5 = 0;

        goto label19;

     label33:
        z4 = 0;

        goto label20;

     label34:
        z7 = 0;

        goto label21;

     label35:
        z6 = 0;

        goto label22;

     label36:
        virtualinvoke r2.<android.view.View$ScrollabilityCache: void setFadeColor(int)>(i8);

        goto label26;
    }

    boolean draw(android.graphics.Canvas, android.view.ViewGroup, long)
    {
        android.view.View r0;
        android.graphics.Canvas r1;
        android.view.ViewGroup r2;
        long l0;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, $z16, $z18, $z19, $z22, $z23, $z26, $z27, $z28, $z29;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, $i21, $i22, $i23, $i24, $i25, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135;
        android.view.View$AttachInfo r3, $r12, $r21, $r25, $r26;
        android.view.animation.Animation r4;
        android.view.animation.Transformation r5, r6, $r27;
        android.graphics.Bitmap r7;
        android.view.DisplayList r8, $r23, $r24;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37;
        android.graphics.Paint r9, $r14, $r15, $r16, $r18;
        android.view.HardwareLayer r10;
        android.graphics.Matrix r11, $r19, $r20;
        byte $b26, $b27, $b38, $b95, $b105;
        android.view.HardwareCanvas $r13, $r17;
        android.graphics.Canvas$EdgeType $r22;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.ViewGroup;

        l0 := @parameter2: long;

        $r12 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r12 == null goto label08;

        $r26 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z29 = $r26.<android.view.View$AttachInfo: boolean mHardwareAccelerated>;

        if $z29 == 0 goto label08;

        z0 = 1;

     label01:
        z1 = virtualinvoke r0.<android.view.View: boolean hasIdentityMatrix()>();

        i1 = r2.<android.view.ViewGroup: int mGroupFlags>;

        $i24 = i1 & 256;

        if $i24 != 256 goto label02;

        $r27 = virtualinvoke r2.<android.view.ViewGroup: android.view.animation.Transformation getChildTransformation()>();

        virtualinvoke $r27.<android.view.animation.Transformation: void clear()>();

        $i135 = r2.<android.view.ViewGroup: int mGroupFlags>;

        $i134 = -257 & $i135;

        r2.<android.view.ViewGroup: int mGroupFlags> = $i134;

     label02:
        i2 = virtualinvoke r0.<android.view.View: int getLayerType()>();

        z2 = virtualinvoke r1.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        $i25 = 32768 & i1;

        if $i25 != 0 goto label03;

        $i131 = i1 & 16384;

        if $i131 == 0 goto label09;

     label03:
        z3 = 1;

        r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        z4 = 0;

        if r3 == null goto label04;

        $r25 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        z4 = $r25.<android.view.View$AttachInfo: boolean mScalingRequired>;

     label04:
        r4 = virtualinvoke r0.<android.view.View: android.view.animation.Animation getAnimation()>();

        if r4 == null goto label13;

        z6 = specialinvoke r0.<android.view.View: boolean drawAnimation(android.view.ViewGroup,long,android.view.animation.Animation,boolean)>(r2, l0, r4, z4);

        z5 = virtualinvoke r4.<android.view.animation.Animation: boolean willChangeTransformationMatrix()>();

        if z5 == 0 goto label05;

        $i132 = r0.<android.view.View: int mPrivateFlags3>;

        $i133 = 1 | $i132;

        r0.<android.view.View: int mPrivateFlags3> = $i133;

     label05:
        r5 = virtualinvoke r2.<android.view.ViewGroup: android.view.animation.Transformation getChildTransformation()>();

     label06:
        if z1 != 0 goto label19;

        z8 = 1;

     label07:
        z9 = z5 | z8;

        $i23 = r0.<android.view.View: int mPrivateFlags>;

        $i28 = 32 | $i23;

        r0.<android.view.View: int mPrivateFlags> = $i28;

        if z9 != 0 goto label20;

        $i119 = i1 & 2049;

        if $i119 != 1 goto label20;

        $i118 = r0.<android.view.View: int mLeft>;

        $f34 = (float) $i118;

        $i117 = r0.<android.view.View: int mTop>;

        $f35 = (float) $i117;

        $i116 = r0.<android.view.View: int mRight>;

        $f36 = (float) $i116;

        $i115 = r0.<android.view.View: int mBottom>;

        $f37 = (float) $i115;

        $r22 = <android.graphics.Canvas$EdgeType: android.graphics.Canvas$EdgeType BW>;

        $z28 = virtualinvoke r1.<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType)>($f34, $f35, $f36, $f37, $r22);

        if $z28 == 0 goto label20;

        $i130 = r0.<android.view.View: int mPrivateFlags>;

        $i128 = 64 & $i130;

        if $i128 != 0 goto label20;

        $i129 = r0.<android.view.View: int mPrivateFlags2>;

        $i127 = 268435456 | $i129;

        r0.<android.view.View: int mPrivateFlags2> = $i127;

        return z6;

     label08:
        z0 = 0;

        goto label01;

     label09:
        if i2 != 0 goto label10;

        if z2 == 0 goto label12;

     label10:
        z3 = 1;

     label11:
        z4 = 0;

        goto label04;

     label12:
        z3 = 0;

        goto label11;

     label13:
        $i21 = r0.<android.view.View: int mPrivateFlags3>;

        $i22 = 1 & $i21;

        if $i22 != 1 goto label14;

        $r24 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r24 == null goto label14;

        $r23 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r23.<android.view.DisplayList: void setAnimationMatrix(android.graphics.Matrix)>(null);

        $i125 = r0.<android.view.View: int mPrivateFlags3>;

        $i124 = -2 & $i125;

        r0.<android.view.View: int mPrivateFlags3> = $i124;

     label14:
        z5 = 0;

        z6 = 0;

        r5 = null;

        if z0 != 0 goto label06;

        i3 = i1 & 2048;

        z5 = 0;

        z6 = 0;

        r5 = null;

        if i3 == 0 goto label06;

        r6 = virtualinvoke r2.<android.view.ViewGroup: android.view.animation.Transformation getChildTransformation()>();

        z7 = virtualinvoke r2.<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>(r0, r6);

        z5 = 0;

        z6 = 0;

        r5 = null;

        if z7 == 0 goto label06;

        i4 = virtualinvoke r6.<android.view.animation.Transformation: int getTransformationType()>();

        if i4 == 0 goto label17;

        r5 = r6;

     label15:
        $i126 = i4 & 2;

        if $i126 == 0 goto label18;

        z5 = 1;

     label16:
        z6 = 0;

        goto label06;

     label17:
        r5 = null;

        goto label15;

     label18:
        z5 = 0;

        goto label16;

     label19:
        z8 = 0;

        goto label07;

     label20:
        $i29 = r0.<android.view.View: int mPrivateFlags2>;

        $i30 = -268435457 & $i29;

        r0.<android.view.View: int mPrivateFlags2> = $i30;

        if z2 == 0 goto label22;

        $i123 = r0.<android.view.View: int mPrivateFlags>;

        $i122 = -2147483648 & $i123;

        if $i122 != -2147483648 goto label54;

        z15 = 1;

     label21:
        r0.<android.view.View: boolean mRecreateDisplayList> = z15;

        $i121 = r0.<android.view.View: int mPrivateFlags>;

        $i120 = 2147483647 & $i121;

        r0.<android.view.View: int mPrivateFlags> = $i120;

     label22:
        r7 = null;

        z11 = 0;

        if z3 == 0 goto label24;

        if z2 != 0 goto label55;

        if i2 == 0 goto label23;

        i2 = 1;

        virtualinvoke r0.<android.view.View: void buildDrawingCache(boolean)>(1);

     label23:
        r7 = virtualinvoke r0.<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>(1);

     label24:
        z10 = z0 & z11;

        r8 = null;

        if z10 == 0 goto label25;

        r8 = virtualinvoke r0.<android.view.View: android.view.DisplayList getDisplayList()>();

        $z27 = virtualinvoke r8.<android.view.DisplayList: boolean isValid()>();

        if $z27 != 0 goto label25;

        r8 = null;

        z11 = 0;

        z10 = 0;

     label25:
        i5 = 0;

        i6 = 0;

        if z11 != 0 goto label26;

        virtualinvoke r0.<android.view.View: void computeScroll()>();

        i5 = r0.<android.view.View: int mScrollX>;

        i6 = r0.<android.view.View: int mScrollY>;

     label26:
        if r7 == null goto label27;

        if z11 == 0 goto label61;

     label27:
        z12 = 1;

     label28:
        if r7 != null goto label62;

        if z11 != 0 goto label62;

        if i2 == 2 goto label62;

        z13 = 1;

     label29:
        i7 = -1;

        if z10 == 0 goto label30;

        if r5 == null goto label31;

     label30:
        i7 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

     label31:
        if z13 == 0 goto label63;

        $i110 = r0.<android.view.View: int mLeft>;

        $i111 = $i110 - i5;

        $f31 = (float) $i111;

        $i112 = r0.<android.view.View: int mTop>;

        $i109 = $i112 - i6;

        $f30 = (float) $i109;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f31, $f30);

     label32:
        if z10 == 0 goto label66;

        f1 = 1.0F;

     label33:
        if r5 != null goto label34;

        $b105 = f1 cmpg 1.0F;

        if $b105 < 0 goto label34;

        $z26 = virtualinvoke r0.<android.view.View: boolean hasIdentityMatrix()>();

        if $z26 == 0 goto label34;

        $i106 = r0.<android.view.View: int mPrivateFlags3>;

        $i103 = 2 & $i106;

        if $i103 != 2 goto label75;

     label34:
        if r5 != null goto label35;

        if z1 != 0 goto label40;

     label35:
        i8 = 0;

        i9 = 0;

        if z13 == 0 goto label36;

        i8 = neg i5;

        i9 = neg i6;

     label36:
        if r5 == null goto label39;

        if z9 == 0 goto label38;

        if z10 == 0 goto label67;

        r11 = virtualinvoke r5.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r8.<android.view.DisplayList: void setAnimationMatrix(android.graphics.Matrix)>(r11);

     label37:
        $i108 = r2.<android.view.ViewGroup: int mGroupFlags>;

        $i107 = 256 | $i108;

        r2.<android.view.ViewGroup: int mGroupFlags> = $i107;

     label38:
        f2 = virtualinvoke r5.<android.view.animation.Transformation: float getAlpha()>();

        $b95 = f2 cmpg 1.0F;

        if $b95 >= 0 goto label39;

        f1 = f1 * f2;

        $i96 = r2.<android.view.ViewGroup: int mGroupFlags>;

        $i93 = 256 | $i96;

        r2.<android.view.ViewGroup: int mGroupFlags> = $i93;

     label39:
        if z1 != 0 goto label40;

        if z10 != 0 goto label40;

        $i98 = neg i8;

        $f24 = (float) $i98;

        $i99 = neg i9;

        $f23 = (float) $i99;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f24, $f23);

        $r20 = virtualinvoke r0.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r20);

        $f25 = (float) i8;

        $f26 = (float) i9;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f25, $f26);

     label40:
        $b26 = f1 cmpg 1.0F;

        if $b26 < 0 goto label41;

        $i86 = r0.<android.view.View: int mPrivateFlags3>;

        $i85 = 2 & $i86;

        if $i85 != 2 goto label45;

     label41:
        $b27 = f1 cmpg 1.0F;

        if $b27 >= 0 goto label68;

        $i88 = r0.<android.view.View: int mPrivateFlags3>;

        $i87 = 2 | $i88;

        r0.<android.view.View: int mPrivateFlags3> = $i87;

     label42:
        $i37 = r2.<android.view.ViewGroup: int mGroupFlags>;

        $i36 = 256 | $i37;

        r2.<android.view.ViewGroup: int mGroupFlags> = $i36;

        if z12 == 0 goto label45;

        $f13 = 255.0F * f1;

        i20 = (int) $f13;

        $z23 = virtualinvoke r0.<android.view.View: boolean onSetAlpha(int)>(i20);

        if $z23 != 0 goto label74;

        i19 = 4;

        $i73 = i1 & 1;

        if $i73 != 0 goto label43;

        if i2 == 0 goto label44;

     label43:
        i19 = i19 | 16;

     label44:
        if z10 == 0 goto label69;

        $f16 = virtualinvoke r0.<android.view.View: float getAlpha()>();

        $f15 = f1 * $f16;

        $f14 = virtualinvoke r0.<android.view.View: float getTransitionAlpha()>();

        f3 = $f15 * $f14;

        virtualinvoke r8.<android.view.DisplayList: void setAlpha(float)>(f3);

     label45:
        $i31 = i1 & 1;

        if $i31 != 1 goto label46;

        if z10 != 0 goto label46;

        if r7 != null goto label46;

        if z13 == 0 goto label76;

        $i79 = r0.<android.view.View: int mRight>;

        $i78 = r0.<android.view.View: int mLeft>;

        $i80 = $i79 - $i78;

        i16 = i5 + $i80;

        $i82 = r0.<android.view.View: int mBottom>;

        $i81 = r0.<android.view.View: int mTop>;

        $i83 = $i82 - $i81;

        i15 = i6 + $i83;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(i5, i6, i16, i15);

     label46:
        if z10 != 0 goto label47;

        if z11 == 0 goto label47;

        r8 = virtualinvoke r0.<android.view.View: android.view.DisplayList getDisplayList()>();

        $z22 = virtualinvoke r8.<android.view.DisplayList: boolean isValid()>();

        if $z22 != 0 goto label47;

        r8 = null;

        z11 = 0;

     label47:
        if z12 == 0 goto label86;

        i12 = i2;

        z14 = 0;

        if i12 != 2 goto label48;

        z14 = 0;

        if z10 != 0 goto label48;

        r10 = virtualinvoke r0.<android.view.View: android.view.HardwareLayer getHardwareLayer()>();

        if r10 == null goto label79;

        $z19 = virtualinvoke r10.<android.view.HardwareLayer: boolean isValid()>();

        if $z19 == 0 goto label79;

        $r16 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        $f9 = 255.0F * f1;

        $i61 = (int) $f9;

        virtualinvoke $r16.<android.graphics.Paint: void setAlpha(int)>($i61);

        $r17 = (android.view.HardwareCanvas) r1;

        $r18 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        virtualinvoke $r17.<android.view.HardwareCanvas: void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint)>(r10, 0.0F, 0.0F, $r18);

        z14 = 1;

     label48:
        if z14 != 0 goto label49;

        if z11 != 0 goto label85;

        $i54 = r0.<android.view.View: int mPrivateFlags>;

        $i51 = 128 & $i54;

        if $i51 != 128 goto label84;

        $i52 = r0.<android.view.View: int mPrivateFlags>;

        $i50 = -6291457 & $i52;

        r0.<android.view.View: int mPrivateFlags> = $i50;

        virtualinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>(r1);

     label49:
        if i7 < 0 goto label50;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i7);

     label50:
        if r4 == null goto label52;

        if z6 != 0 goto label52;

        if z2 != 0 goto label51;

        $z18 = virtualinvoke r4.<android.view.animation.Animation: boolean getFillAfter()>();

        if $z18 != 0 goto label51;

        virtualinvoke r0.<android.view.View: boolean onSetAlpha(int)>(255);

     label51:
        virtualinvoke r2.<android.view.ViewGroup: void finishAnimatingView(android.view.View,android.view.animation.Animation)>(r0, r4);

     label52:
        if z6 == 0 goto label53;

        if z2 == 0 goto label53;

        $z16 = virtualinvoke r4.<android.view.animation.Animation: boolean hasAlpha()>();

        if $z16 == 0 goto label53;

        $i33 = r0.<android.view.View: int mPrivateFlags>;

        $i32 = 262144 & $i33;

        if $i32 != 262144 goto label53;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label53:
        r0.<android.view.View: boolean mRecreateDisplayList> = 0;

        return z6;

     label54:
        z15 = 0;

        goto label21;

     label55:
        tableswitch(i2)
        {
            case 0: goto label57;
            case 1: goto label58;
            case 2: goto label60;
            default: goto label56;
        };

     label56:
        r7 = null;

        z11 = 0;

        goto label24;

     label57:
        z11 = virtualinvoke r0.<android.view.View: boolean canHaveDisplayList()>();

        r7 = null;

        goto label24;

     label58:
        if z0 == 0 goto label59;

        z11 = virtualinvoke r0.<android.view.View: boolean canHaveDisplayList()>();

        r7 = null;

        goto label24;

     label59:
        virtualinvoke r0.<android.view.View: void buildDrawingCache(boolean)>(1);

        r7 = virtualinvoke r0.<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>(1);

        z11 = 0;

        goto label24;

     label60:
        r7 = null;

        z11 = 0;

        if z0 == 0 goto label24;

        z11 = virtualinvoke r0.<android.view.View: boolean canHaveDisplayList()>();

        r7 = null;

        goto label24;

     label61:
        z12 = 0;

        goto label28;

     label62:
        z13 = 0;

        goto label29;

     label63:
        if z10 != 0 goto label64;

        $i113 = r0.<android.view.View: int mLeft>;

        $f32 = (float) $i113;

        $i114 = r0.<android.view.View: int mTop>;

        $f33 = (float) $i114;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f32, $f33);

     label64:
        if z4 == 0 goto label32;

        if z10 == 0 goto label65;

        i7 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

     label65:
        $r21 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $f27 = $r21.<android.view.View$AttachInfo: float mApplicationScale>;

        f0 = 1.0F / $f27;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>(f0, f0);

        goto label32;

     label66:
        $f4 = virtualinvoke r0.<android.view.View: float getAlpha()>();

        $f5 = virtualinvoke r0.<android.view.View: float getTransitionAlpha()>();

        f1 = $f4 * $f5;

        goto label33;

     label67:
        $i94 = neg i8;

        $f21 = (float) $i94;

        $i97 = neg i9;

        $f22 = (float) $i97;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f21, $f22);

        $r19 = virtualinvoke r5.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r19);

        $f28 = (float) i8;

        $f29 = (float) i9;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f28, $f29);

        goto label37;

     label68:
        $i35 = r0.<android.view.View: int mPrivateFlags3>;

        $i34 = -3 & $i35;

        r0.<android.view.View: int mPrivateFlags3> = $i34;

        goto label42;

     label69:
        if i2 != 0 goto label45;

        if z11 == 0 goto label72;

        i18 = 0;

     label70:
        if z11 == 0 goto label73;

        i17 = 0;

     label71:
        $f17 = (float) i18;

        $f18 = (float) i17;

        $i74 = r0.<android.view.View: int mRight>;

        $i76 = i18 + $i74;

        $i75 = r0.<android.view.View: int mLeft>;

        $i77 = $i76 - $i75;

        $f19 = (float) $i77;

        $i92 = r0.<android.view.View: int mBottom>;

        $i90 = i17 + $i92;

        $i91 = r0.<android.view.View: int mTop>;

        $i89 = $i90 - $i91;

        $f20 = (float) $i89;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>($f17, $f18, $f19, $f20, i20, i19);

        goto label45;

     label72:
        i18 = i5;

        goto label70;

     label73:
        i17 = i6;

        goto label71;

     label74:
        $i71 = r0.<android.view.View: int mPrivateFlags>;

        $i72 = 262144 | $i71;

        r0.<android.view.View: int mPrivateFlags> = $i72;

        goto label45;

     label75:
        $i102 = r0.<android.view.View: int mPrivateFlags>;

        $i104 = 262144 & $i102;

        if $i104 != 262144 goto label45;

        virtualinvoke r0.<android.view.View: boolean onSetAlpha(int)>(255);

        $i101 = r0.<android.view.View: int mPrivateFlags>;

        $i100 = -262145 & $i101;

        r0.<android.view.View: int mPrivateFlags> = $i100;

        goto label45;

     label76:
        if z4 == 0 goto label77;

        if r7 != null goto label78;

     label77:
        $i67 = r0.<android.view.View: int mRight>;

        $i68 = r0.<android.view.View: int mLeft>;

        $i63 = $i67 - $i68;

        $i69 = r0.<android.view.View: int mBottom>;

        $i70 = r0.<android.view.View: int mTop>;

        $i64 = $i69 - $i70;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(0, 0, $i63, $i64);

        goto label46;

     label78:
        $i65 = virtualinvoke r7.<android.graphics.Bitmap: int getWidth()>();

        $i66 = virtualinvoke r7.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(0, 0, $i65, $i66);

        goto label46;

     label79:
        if z11 == 0 goto label82;

        i13 = 0;

     label80:
        if z11 == 0 goto label83;

        i14 = 0;

     label81:
        $f10 = (float) i13;

        $f11 = (float) i14;

        $i48 = r0.<android.view.View: int mRight>;

        $i60 = i13 + $i48;

        $i49 = r0.<android.view.View: int mLeft>;

        $i59 = $i60 - $i49;

        $f12 = (float) $i59;

        $i58 = r0.<android.view.View: int mBottom>;

        $i56 = i14 + $i58;

        $i57 = r0.<android.view.View: int mTop>;

        $i55 = $i56 - $i57;

        $f8 = (float) $i55;

        $r15 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f10, $f11, $f12, $f8, $r15, 20);

        z14 = 0;

        goto label48;

     label82:
        i13 = i5;

        goto label80;

     label83:
        i14 = i6;

        goto label81;

     label84:
        virtualinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r1);

        goto label49;

     label85:
        $i44 = r0.<android.view.View: int mPrivateFlags>;

        $i43 = -6291457 & $i44;

        r0.<android.view.View: int mPrivateFlags> = $i43;

        $r13 = (android.view.HardwareCanvas) r1;

        virtualinvoke $r13.<android.view.HardwareCanvas: int drawDisplayList(android.view.DisplayList,android.graphics.Rect,int)>(r8, null, i1);

        goto label49;

     label86:
        if r7 == null goto label49;

        $i42 = r0.<android.view.View: int mPrivateFlags>;

        $i41 = -6291457 & $i42;

        r0.<android.view.View: int mPrivateFlags> = $i41;

        if i2 != 0 goto label90;

        r9 = r2.<android.view.ViewGroup: android.graphics.Paint mCachePaint>;

        if r9 != null goto label87;

        $r14 = new android.graphics.Paint;

        specialinvoke $r14.<android.graphics.Paint: void <init>()>();

        r9 = $r14;

        virtualinvoke r9.<android.graphics.Paint: void setDither(boolean)>(0);

        r2.<android.view.ViewGroup: android.graphics.Paint mCachePaint> = r9;

     label87:
        $b38 = f1 cmpg 1.0F;

        if $b38 >= 0 goto label89;

        $f7 = 255.0F * f1;

        i10 = (int) $f7;

        virtualinvoke r9.<android.graphics.Paint: void setAlpha(int)>(i10);

        $i45 = r2.<android.view.ViewGroup: int mGroupFlags>;

        $i46 = 4096 | $i45;

        r2.<android.view.ViewGroup: int mGroupFlags> = $i46;

     label88:
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r7, 0.0F, 0.0F, r9);

        goto label49;

     label89:
        $i40 = i1 & 4096;

        if $i40 == 0 goto label88;

        virtualinvoke r9.<android.graphics.Paint: void setAlpha(int)>(255);

        $i39 = r2.<android.view.ViewGroup: int mGroupFlags>;

        $i47 = -4097 & $i39;

        r2.<android.view.ViewGroup: int mGroupFlags> = $i47;

        goto label88;

     label90:
        r9 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        $f6 = 255.0F * f1;

        i11 = (int) $f6;

        virtualinvoke r9.<android.graphics.Paint: void setAlpha(int)>(i11);

        goto label88;
    }

    protected void drawableStateChanged()
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        int[] $r2;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label1:
        return;
    }

    void ensureTransformationInfo()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 != null goto label1;

        $r2 = new android.view.View$TransformationInfo;

        specialinvoke $r2.<android.view.View$TransformationInfo: void <init>()>();

        r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo> = $r2;

     label1:
        return;
    }

    public boolean executeHardwareAction(java.lang.Runnable)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        android.view.View$AttachInfo $r2, $r3, $r5;
        android.view.HardwareRenderer $r4, $r6;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        if $r4 == null goto label1;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r6 = $r5.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z0 = virtualinvoke $r6.<android.view.HardwareRenderer: boolean safelyRun(java.lang.Runnable)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public android.view.View findFocus()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 2 & $i0;

        if $i1 == 0 goto label1;

        return r0;

     label1:
        return null;
    }

    android.view.View findUserSetNextFocus(android.view.View, int)
    {
        android.view.View r0, r1, $r2, $r3, $r4, $r5, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.view.View$2 $r7;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 17: goto label2;
            case 33: goto label4;
            case 66: goto label3;
            case 130: goto label5;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        $i7 = r0.<android.view.View: int mNextFocusLeftId>;

        if $i7 == -1 goto label1;

        $i8 = r0.<android.view.View: int mNextFocusLeftId>;

        $r5 = specialinvoke r0.<android.view.View: android.view.View findViewInsideOutShouldExist(android.view.View,int)>(r1, $i8);

        return $r5;

     label3:
        $i3 = r0.<android.view.View: int mNextFocusRightId>;

        if $i3 == -1 goto label1;

        $i4 = r0.<android.view.View: int mNextFocusRightId>;

        $r3 = specialinvoke r0.<android.view.View: android.view.View findViewInsideOutShouldExist(android.view.View,int)>(r1, $i4);

        return $r3;

     label4:
        $i5 = r0.<android.view.View: int mNextFocusUpId>;

        if $i5 == -1 goto label1;

        $i6 = r0.<android.view.View: int mNextFocusUpId>;

        $r4 = specialinvoke r0.<android.view.View: android.view.View findViewInsideOutShouldExist(android.view.View,int)>(r1, $i6);

        return $r4;

     label5:
        $i1 = r0.<android.view.View: int mNextFocusDownId>;

        if $i1 == -1 goto label1;

        $i2 = r0.<android.view.View: int mNextFocusDownId>;

        $r2 = specialinvoke r0.<android.view.View: android.view.View findViewInsideOutShouldExist(android.view.View,int)>(r1, $i2);

        return $r2;

     label6:
        $i9 = r0.<android.view.View: int mNextFocusForwardId>;

        if $i9 == -1 goto label1;

        $i10 = r0.<android.view.View: int mNextFocusForwardId>;

        $r6 = specialinvoke r0.<android.view.View: android.view.View findViewInsideOutShouldExist(android.view.View,int)>(r1, $i10);

        return $r6;

     label7:
        $i11 = r0.<android.view.View: int mID>;

        if $i11 == -1 goto label1;

        $r7 = new android.view.View$2;

        $i12 = r0.<android.view.View: int mID>;

        specialinvoke $r7.<android.view.View$2: void <init>(android.view.View,int)>(r0, $i12);

        $r8 = virtualinvoke r1.<android.view.View: android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate)>(r0, $r7);

        return $r8;
    }

    final android.view.View findViewByAccessibilityId(int)
    {
        android.view.View r0, $r1;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.view.View: android.view.View findViewByAccessibilityIdTraversal(int)>(i0);

        return $r1;
    }

    public android.view.View findViewByAccessibilityIdTraversal(int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.view.View: int getAccessibilityViewId()>();

        if $i1 != i0 goto label1;

        return r0;

     label1:
        return null;
    }

    public final android.view.View findViewById(int)
    {
        android.view.View r0, $r1;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.view.View: android.view.View findViewTraversal(int)>(i0);

        return $r1;
    }

    public final android.view.View findViewByPredicate(com.android.internal.util.Predicate)
    {
        android.view.View r0, $r2;
        com.android.internal.util.Predicate r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: com.android.internal.util.Predicate;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>(r1, null);

        return $r2;
    }

    public final android.view.View findViewByPredicateInsideOut(android.view.View, com.android.internal.util.Predicate)
    {
        android.view.View r0, r1, r3, r4;
        com.android.internal.util.Predicate r2;
        android.view.ViewParent r5;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: com.android.internal.util.Predicate;

        r3 = null;

     label1:
        r4 = virtualinvoke r1.<android.view.View: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>(r2, r3);

        if r4 != null goto label2;

        if r1 != r0 goto label3;

     label2:
        return r4;

     label3:
        r5 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if r5 == null goto label4;

        $z0 = r5 instanceof android.view.View;

        if $z0 != 0 goto label5;

     label4:
        return null;

     label5:
        r3 = r1;

        r1 = (android.view.View) r5;

        goto label1;
    }

    protected android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate, android.view.View)
    {
        android.view.View r0, r2;
        com.android.internal.util.Predicate r1;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: com.android.internal.util.Predicate;

        r2 := @parameter1: android.view.View;

        $z0 = interfaceinvoke r1.<com.android.internal.util.Predicate: boolean apply(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        return null;
    }

    protected android.view.View findViewTraversal(int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.View: int mID>;

        if i0 != $i1 goto label1;

        return r0;

     label1:
        return null;
    }

    public final android.view.View findViewWithTag(java.lang.Object)
    {
        android.view.View r0, $r2;
        java.lang.Object r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<android.view.View: android.view.View findViewWithTagTraversal(java.lang.Object)>(r1);

        return $r2;
    }

    protected android.view.View findViewWithTagTraversal(java.lang.Object)
    {
        android.view.View r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = r0.<android.view.View: java.lang.Object mTag>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        return null;
    }

    public void findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)
    {
        android.view.View r0;
        java.util.ArrayList r1;
        java.lang.CharSequence r2, $r5, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r3, $r7, $r9, $r10;
        android.view.accessibility.AccessibilityNodeProvider $r4;
        boolean $z1;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        $r4 = virtualinvoke r0.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if $r4 == null goto label2;

        $i4 = i0 & 4;

        if $i4 == 0 goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label1:
        return;

     label2:
        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        if r2 == null goto label1;

        $i2 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label1;

        $r5 = r0.<android.view.View: java.lang.CharSequence mContentDescription>;

        if $r5 == null goto label1;

        $r6 = r0.<android.view.View: java.lang.CharSequence mContentDescription>;

        $i3 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i3 <= 0 goto label1;

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r3 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $r8 = r0.<android.view.View: java.lang.CharSequence mContentDescription>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        return;
    }

    protected boolean fitSystemWindows(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1, r2, $r5;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.ThreadLocal $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 2 & $i0;

        if $i1 != 2 goto label2;

        r0.<android.view.View: int mUserPaddingStart> = -2147483648;

        r0.<android.view.View: int mUserPaddingEnd> = -2147483648;

        $r3 = <android.view.View: java.lang.ThreadLocal sThreadLocal>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (android.graphics.Rect) $r4;

        if r2 != null goto label1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r2 = $r5;

        $r6 = <android.view.View: java.lang.ThreadLocal sThreadLocal>;

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

     label1:
        z0 = virtualinvoke r0.<android.view.View: boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect)>(r1, r2);

        $i2 = r2.<android.graphics.Rect: int left>;

        r0.<android.view.View: int mUserPaddingLeftInitial> = $i2;

        $i3 = r2.<android.graphics.Rect: int right>;

        r0.<android.view.View: int mUserPaddingRightInitial> = $i3;

        $i7 = r2.<android.graphics.Rect: int left>;

        $i6 = r2.<android.graphics.Rect: int top>;

        $i5 = r2.<android.graphics.Rect: int right>;

        $i4 = r2.<android.graphics.Rect: int bottom>;

        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>($i7, $i6, $i5, $i4);

        return z0;

     label2:
        return 0;
    }

    public boolean fitsSystemWindows()
    {
        android.view.View r0;
        boolean $z0;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean getFitsSystemWindows()>();

        return $z0;
    }

    public android.view.View focusSearch(int)
    {
        android.view.View r0, $r3;
        int i0;
        android.view.ViewParent $r1, $r2;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r3 = interfaceinvoke $r2.<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>(r0, i0);

        return $r3;

     label1:
        return null;
    }

    public void forceLayout()
    {
        android.view.View r0;
        android.util.LongSparseLongArray $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache>;

        virtualinvoke $r2.<android.util.LongSparseLongArray: void clear()>();

     label1:
        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 4096 | $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -2147483648 | $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        return;
    }

    public boolean gatherTransparentRegion(android.graphics.Region)
    {
        android.view.View r0;
        android.graphics.Region r1;
        android.view.View$AttachInfo r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] r3;
        android.graphics.drawable.Drawable $r4, $r5;
        android.graphics.Region$Op $r6;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Region;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label1;

        if r2 == null goto label1;

        i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = i0 & 128;

        if $i1 != 0 goto label2;

        r3 = r2.<android.view.View$AttachInfo: int[] mTransparentLocation>;

        virtualinvoke r0.<android.view.View: void getLocationInWindow(int[])>(r3);

        $i13 = r3[0];

        $i14 = r3[1];

        $i4 = r3[0];

        $i3 = r0.<android.view.View: int mRight>;

        $i6 = $i4 + $i3;

        $i5 = r0.<android.view.View: int mLeft>;

        $i11 = $i6 - $i5;

        $i8 = r3[1];

        $i7 = r0.<android.view.View: int mBottom>;

        $i10 = $i8 + $i7;

        $i9 = r0.<android.view.View: int mTop>;

        $i12 = $i10 - $i9;

        $r6 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke r1.<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>($i13, $i14, $i11, $i12, $r6);

     label1:
        return 1;

     label2:
        $i2 = i0 & 256;

        if $i2 == 0 goto label1;

        $r4 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r4 == null goto label1;

        $r5 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        virtualinvoke r0.<android.view.View: void applyDrawableToTransparentRegion(android.graphics.drawable.Drawable,android.graphics.Region)>($r5, r1);

        return 1;
    }

    public android.view.View$AccessibilityDelegate getAccessibilityDelegate()
    {
        android.view.View r0;
        android.view.View$AccessibilityDelegate $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        return $r1;
    }

    public int getAccessibilityLiveRegion()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 25165824 & $i0;

        $i2 = $i1 >> 23;

        return $i2;
    }

    public android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
    {
        android.view.View r0;
        android.view.View$AccessibilityDelegate $r1, $r2;
        android.view.accessibility.AccessibilityNodeProvider $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        $r3 = virtualinvoke $r2.<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>(r0);

        return $r3;

     label1:
        return null;
    }

    public int getAccessibilitySelectionEnd()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionStart()>();

        return $i0;
    }

    public int getAccessibilitySelectionStart()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mAccessibilityCursorPosition>;

        return $i0;
    }

    public int getAccessibilityViewId()
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $i1 = r0.<android.view.View: int mAccessibilityViewId>;

        if $i1 != -1 goto label1;

        i0 = <android.view.View: int sNextAccessibilityViewId>;

        $i3 = i0 + 1;

        <android.view.View: int sNextAccessibilityViewId> = $i3;

        r0.<android.view.View: int mAccessibilityViewId> = i0;

     label1:
        $i2 = r0.<android.view.View: int mAccessibilityViewId>;

        return $i2;
    }

    public int getAccessibilityWindowId()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        int $i0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r2.<android.view.View$AttachInfo: int mAccessibilityWindowId>;

        return $i0;

     label1:
        return -1;
    }

    public float getAlpha()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mAlpha>;

        return $f0;

     label1:
        return 1.0F;
    }

    public android.view.animation.Animation getAnimation()
    {
        android.view.View r0;
        android.view.animation.Animation $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.animation.Animation mCurrentAnimation>;

        return $r1;
    }

    public android.os.IBinder getApplicationWindowToken()
    {
        android.view.View r0;
        android.view.View$AttachInfo r1;
        android.os.IBinder r2;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label2;

        r2 = r1.<android.view.View$AttachInfo: android.os.IBinder mPanelParentWindowToken>;

        if r2 != null goto label1;

        r2 = r1.<android.view.View$AttachInfo: android.os.IBinder mWindowToken>;

     label1:
        return r2;

     label2:
        return null;
    }

    public android.graphics.drawable.Drawable getBackground()
    {
        android.view.View r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        return $r1;
    }

    public int getBaseline()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return -1;
    }

    public final int getBottom()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mBottom>;

        return $i0;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int computeVerticalScrollOffset()>();

        $i1 = virtualinvoke r0.<android.view.View: int computeVerticalScrollExtent()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<android.view.View: int computeVerticalScrollRange()>();

        if $i2 >= $i3 goto label1;

        return 1.0F;

     label1:
        return 0.0F;
    }

    protected int getBottomPaddingOffset()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    void getBoundsOnScreen(android.graphics.Rect)
    {
        android.view.View r0, r4;
        android.graphics.Rect r1;
        android.graphics.RectF r2;
        android.view.ViewParent r3;
        android.view.View$AttachInfo $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        boolean $z0, $z1, $z2, $z3;
        android.view.ViewRootImpl $r9;
        android.graphics.Matrix $r10, $r11;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r5 != null goto label1;

        return;

     label1:
        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = $r6.<android.view.View$AttachInfo: android.graphics.RectF mTmpTransformRect>;

        $i1 = r0.<android.view.View: int mRight>;

        $i0 = r0.<android.view.View: int mLeft>;

        $i2 = $i1 - $i0;

        $f1 = (float) $i2;

        $i4 = r0.<android.view.View: int mBottom>;

        $i3 = r0.<android.view.View: int mTop>;

        $i5 = $i4 - $i3;

        $f0 = (float) $i5;

        virtualinvoke r2.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        $z0 = virtualinvoke r0.<android.view.View: boolean hasIdentityMatrix()>();

        if $z0 != 0 goto label2;

        $r11 = virtualinvoke r0.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r11.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r2);

     label2:
        $i7 = r0.<android.view.View: int mLeft>;

        $f2 = (float) $i7;

        $i6 = r0.<android.view.View: int mTop>;

        $f3 = (float) $i6;

        virtualinvoke r2.<android.graphics.RectF: void offset(float,float)>($f2, $f3);

        r3 = r0.<android.view.View: android.view.ViewParent mParent>;

     label3:
        $z2 = r3 instanceof android.view.View;

        if $z2 == 0 goto label5;

        r4 = (android.view.View) r3;

        $i18 = r4.<android.view.View: int mScrollX>;

        $i19 = neg $i18;

        $f15 = (float) $i19;

        $i16 = r4.<android.view.View: int mScrollY>;

        $i17 = neg $i16;

        $f16 = (float) $i17;

        virtualinvoke r2.<android.graphics.RectF: void offset(float,float)>($f15, $f16);

        $z3 = virtualinvoke r4.<android.view.View: boolean hasIdentityMatrix()>();

        if $z3 != 0 goto label4;

        $r10 = virtualinvoke r4.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r10.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r2);

     label4:
        $i20 = r4.<android.view.View: int mLeft>;

        $f17 = (float) $i20;

        $i21 = r4.<android.view.View: int mTop>;

        $f18 = (float) $i21;

        virtualinvoke r2.<android.graphics.RectF: void offset(float,float)>($f17, $f18);

        r3 = r4.<android.view.View: android.view.ViewParent mParent>;

        goto label3;

     label5:
        $z1 = r3 instanceof android.view.ViewRootImpl;

        if $z1 == 0 goto label6;

        $r9 = (android.view.ViewRootImpl) r3;

        $i15 = $r9.<android.view.ViewRootImpl: int mCurScrollY>;

        $i14 = neg $i15;

        $f14 = (float) $i14;

        virtualinvoke r2.<android.graphics.RectF: void offset(float,float)>(0.0F, $f14);

     label6:
        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i8 = $r7.<android.view.View$AttachInfo: int mWindowLeft>;

        $f4 = (float) $i8;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i9 = $r8.<android.view.View$AttachInfo: int mWindowTop>;

        $f5 = (float) $i9;

        virtualinvoke r2.<android.graphics.RectF: void offset(float,float)>($f4, $f5);

        $f7 = r2.<android.graphics.RectF: float left>;

        $f6 = 0.5F + $f7;

        $i11 = (int) $f6;

        $f9 = r2.<android.graphics.RectF: float top>;

        $f8 = 0.5F + $f9;

        $i10 = (int) $f8;

        $f12 = r2.<android.graphics.RectF: float right>;

        $f13 = 0.5F + $f12;

        $i13 = (int) $f13;

        $f10 = r2.<android.graphics.RectF: float bottom>;

        $f11 = 0.5F + $f10;

        $i12 = (int) $f11;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i11, $i10, $i13, $i12);

        return;
    }

    public float getCameraDistance()
    {
        android.view.View r0;
        float f0, $f1, $f2, $f3;
        android.view.View$TransformationInfo r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        int $i0;
        android.graphics.Camera $r4, $r5, $r6;
        android.graphics.Matrix $r8;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        $r2 = r0.<android.view.View: android.content.res.Resources mResources>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r3.<android.util.DisplayMetrics: int densityDpi>;

        f0 = (float) $i0;

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r4 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        if $r4 != null goto label1;

        $r6 = new android.graphics.Camera;

        specialinvoke $r6.<android.graphics.Camera: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1902(android.view.View$TransformationInfo,android.graphics.Camera)>(r1, $r6);

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2002(android.view.View$TransformationInfo,android.graphics.Matrix)>(r1, $r8);

     label1:
        $r5 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        $f1 = virtualinvoke $r5.<android.graphics.Camera: float getLocationZ()>();

        $f2 = f0 * $f1;

        $f3 = neg $f2;

        return $f3;
    }

    public android.graphics.Rect getClipBounds()
    {
        android.view.View r0;
        android.graphics.Rect $r1, $r2, $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        if $r1 == null goto label1;

        $r2 = new android.graphics.Rect;

        $r3 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        specialinvoke $r2.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r3);

        return $r2;

     label1:
        return null;
    }

    public java.lang.CharSequence getContentDescription()
    {
        android.view.View r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: java.lang.CharSequence mContentDescription>;

        return $r1;
    }

    public final android.content.Context getContext()
    {
        android.view.View r0;
        android.content.Context $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.content.Context mContext>;

        return $r1;
    }

    protected android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return null;
    }

    public android.view.Display getDisplay()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        android.view.Display $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.view.Display mDisplay>;

        return $r3;

     label1:
        return null;
    }

    public android.view.DisplayList getDisplayList()
    {
        android.view.View r0;
        android.view.DisplayList $r1, $r2, $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $r2 = specialinvoke r0.<android.view.View: android.view.DisplayList getDisplayList(android.view.DisplayList,boolean)>($r1, 0);

        r0.<android.view.View: android.view.DisplayList mDisplayList> = $r2;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        return $r3;
    }

    public final int[] getDrawableState()
    {
        android.view.View r0;
        int[] $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: int[] mDrawableState>;

        if $r1 == null goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 1024 & $i2;

        if $i3 != 0 goto label1;

        $r4 = r0.<android.view.View: int[] mDrawableState>;

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>(0);

        r0.<android.view.View: int[] mDrawableState> = $r2;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = -1025 & $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        $r3 = r0.<android.view.View: int[] mDrawableState>;

        return $r3;
    }

    public android.graphics.Bitmap getDrawingCache()
    {
        android.view.View r0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>(0);

        return $r1;
    }

    public android.graphics.Bitmap getDrawingCache(boolean)
    {
        android.view.View r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Bitmap $r1, $r2;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 131072 & $i0;

        if $i1 != 131072 goto label1;

        return null;

     label1:
        $i2 = r0.<android.view.View: int mViewFlags>;

        $i3 = 32768 & $i2;

        if $i3 != 32768 goto label2;

        virtualinvoke r0.<android.view.View: void buildDrawingCache(boolean)>(z0);

     label2:
        if z0 == 0 goto label3;

        $r2 = r0.<android.view.View: android.graphics.Bitmap mDrawingCache>;

        return $r2;

     label3:
        $r1 = r0.<android.view.View: android.graphics.Bitmap mUnscaledDrawingCache>;

        return $r1;
    }

    public int getDrawingCacheBackgroundColor()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mDrawingCacheBackgroundColor>;

        return $i0;
    }

    public int getDrawingCacheQuality()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 1572864 & $i0;

        return $i1;
    }

    public void getDrawingRect(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $i0 = r0.<android.view.View: int mScrollX>;

        r1.<android.graphics.Rect: int left> = $i0;

        $i1 = r0.<android.view.View: int mScrollY>;

        r1.<android.graphics.Rect: int top> = $i1;

        $i5 = r0.<android.view.View: int mScrollX>;

        $i3 = r0.<android.view.View: int mRight>;

        $i2 = r0.<android.view.View: int mLeft>;

        $i4 = $i3 - $i2;

        $i6 = $i5 + $i4;

        r1.<android.graphics.Rect: int right> = $i6;

        $i10 = r0.<android.view.View: int mScrollY>;

        $i8 = r0.<android.view.View: int mBottom>;

        $i7 = r0.<android.view.View: int mTop>;

        $i9 = $i8 - $i7;

        $i11 = $i10 + $i9;

        r1.<android.graphics.Rect: int bottom> = $i11;

        return;
    }

    public long getDrawingTime()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        long $l0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $l0 = $r2.<android.view.View$AttachInfo: long mDrawingTime>;

        return $l0;

     label1:
        return 0L;
    }

    protected int getFadeHeight(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        i0 = r0.<android.view.View: int mPaddingTop>;

        if z0 == 0 goto label1;

        $i7 = virtualinvoke r0.<android.view.View: int getTopPaddingOffset()>();

        i0 = i0 + $i7;

     label1:
        $i2 = r0.<android.view.View: int mBottom>;

        $i1 = r0.<android.view.View: int mTop>;

        $i4 = $i2 - $i1;

        $i3 = r0.<android.view.View: int mPaddingBottom>;

        $i5 = $i4 - $i3;

        $i6 = $i5 - i0;

        return $i6;
    }

    protected int getFadeTop(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0, $i1;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        i0 = r0.<android.view.View: int mPaddingTop>;

        if z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<android.view.View: int getTopPaddingOffset()>();

        i0 = i0 + $i1;

     label1:
        return i0;
    }

    public boolean getFilterTouchesWhenObscured()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 1024 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean getFitsSystemWindows()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 2 & $i0;

        if $i1 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.ArrayList getFocusables(int)
    {
        android.view.View r0;
        int i0;
        java.util.ArrayList r1, $r2;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(24);

        r1 = $r2;

        virtualinvoke r0.<android.view.View: void addFocusables(java.util.ArrayList,int)>(r1, i0);

        return r1;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.view.View: void getDrawingRect(android.graphics.Rect)>(r1);

        return;
    }

    public final boolean getGlobalVisibleRect(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = virtualinvoke r0.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>(r1, null);

        return $z0;
    }

    public boolean getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)
    {
        android.view.View r0;
        android.graphics.Rect r1;
        android.graphics.Point r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, z1;
        android.view.ViewParent $r3, $r4;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Point;

        $i3 = r0.<android.view.View: int mRight>;

        $i2 = r0.<android.view.View: int mLeft>;

        i0 = $i3 - $i2;

        $i5 = r0.<android.view.View: int mBottom>;

        $i4 = r0.<android.view.View: int mTop>;

        i1 = $i5 - $i4;

        z0 = 0;

        if i0 <= 0 goto label3;

        z0 = 0;

        if i1 <= 0 goto label3;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i0, i1);

        if r2 == null goto label1;

        $i6 = r0.<android.view.View: int mScrollX>;

        $i8 = neg $i6;

        $i7 = r0.<android.view.View: int mScrollY>;

        $i9 = neg $i7;

        virtualinvoke r2.<android.graphics.Point: void set(int,int)>($i8, $i9);

     label1:
        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r3 == null goto label2;

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        z1 = interfaceinvoke $r4.<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>(r0, r1, r2);

        z0 = 0;

        if z1 == 0 goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public android.os.Handler getHandler()
    {
        android.view.View r0;
        android.view.View$AttachInfo r1;
        android.os.Handler $r2;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label1;

        $r2 = r1.<android.view.View$AttachInfo: android.os.Handler mHandler>;

        return $r2;

     label1:
        return null;
    }

    android.view.HardwareLayer getHardwareLayer()
    {
        android.view.View r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.view.ViewRootImpl r1;
        android.view.View$AttachInfo $r2, $r3, $r5, $r7, $r26;
        android.view.HardwareRenderer $r4, $r6, $r8, $r31;
        android.view.HardwareLayer $r9, $r10, $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r21, $r23, $r25, $r28, $r30, $r32;
        android.graphics.Paint $r15;
        android.view.DisplayList $r16;
        android.graphics.Rect $r17, $r22, $r24, $r27, $r29;

        r0 := @this: android.view.View;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        if $r4 == null goto label1;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r6 = $r5.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z1 = virtualinvoke $r6.<android.view.HardwareRenderer: boolean isEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r8 = $r7.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z2 = virtualinvoke $r8.<android.view.HardwareRenderer: boolean validate()>();

        if $z2 == 0 goto label1;

        $i3 = r0.<android.view.View: int mRight>;

        $i2 = r0.<android.view.View: int mLeft>;

        i0 = $i3 - $i2;

        $i4 = r0.<android.view.View: int mBottom>;

        $i5 = r0.<android.view.View: int mTop>;

        i1 = $i4 - $i5;

        if i0 == 0 goto label1;

        if i1 == 0 goto label1;

        $i7 = r0.<android.view.View: int mPrivateFlags>;

        $i6 = 32768 & $i7;

        if $i6 == 0 goto label3;

        $r32 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        if $r32 != null goto label6;

     label3:
        $r10 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        if $r10 != null goto label7;

        $r26 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r31 = $r26.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z7 = virtualinvoke r0.<android.view.View: boolean isOpaque()>();

        $r30 = virtualinvoke $r31.<android.view.HardwareRenderer: android.view.HardwareLayer createHardwareLayer(int,int,boolean)>(i0, i1, $z7);

        r0.<android.view.View: android.view.HardwareLayer mHardwareLayer> = $r30;

        $r29 = r0.<android.view.View: android.graphics.Rect mLocalDirtyRect>;

        virtualinvoke $r29.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i0, i1);

     label4:
        $r13 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $z5 = virtualinvoke $r13.<android.view.HardwareLayer: boolean isValid()>();

        if $z5 == 0 goto label1;

        $r14 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $r15 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        virtualinvoke $r14.<android.view.HardwareLayer: void setLayerPaint(android.graphics.Paint)>($r15);

        $r19 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $r18 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $r16 = specialinvoke r0.<android.view.View: android.view.DisplayList getHardwareLayerDisplayList(android.view.HardwareLayer)>($r18);

        $r17 = r0.<android.view.View: android.graphics.Rect mLocalDirtyRect>;

        virtualinvoke $r19.<android.view.HardwareLayer: void redrawLater(android.view.DisplayList,android.graphics.Rect)>($r16, $r17);

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label5;

        $r21 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        virtualinvoke r1.<android.view.ViewRootImpl: void pushHardwareLayerUpdate(android.view.HardwareLayer)>($r21);

     label5:
        $r22 = r0.<android.view.View: android.graphics.Rect mLocalDirtyRect>;

        virtualinvoke $r22.<android.graphics.Rect: void setEmpty()>();

     label6:
        $r20 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        return $r20;

     label7:
        $r9 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $i8 = virtualinvoke $r9.<android.view.HardwareLayer: int getWidth()>();

        if $i8 != i0 goto label8;

        $r28 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $i9 = virtualinvoke $r28.<android.view.HardwareLayer: int getHeight()>();

        if $i9 == i1 goto label9;

     label8:
        $r11 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $z3 = virtualinvoke $r11.<android.view.HardwareLayer: boolean resize(int,int)>(i0, i1);

        if $z3 == 0 goto label9;

        $r27 = r0.<android.view.View: android.graphics.Rect mLocalDirtyRect>;

        virtualinvoke $r27.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i0, i1);

     label9:
        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        z0 = virtualinvoke r0.<android.view.View: boolean isOpaque()>();

        $r12 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $z4 = virtualinvoke $r12.<android.view.HardwareLayer: boolean isValid()>();

        if $z4 == 0 goto label4;

        $r25 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        $z6 = virtualinvoke $r25.<android.view.HardwareLayer: boolean isOpaque()>();

        if $z6 == z0 goto label4;

        $r23 = r0.<android.view.View: android.view.HardwareLayer mHardwareLayer>;

        virtualinvoke $r23.<android.view.HardwareLayer: void setOpaque(boolean)>(z0);

        $r24 = r0.<android.view.View: android.graphics.Rect mLocalDirtyRect>;

        virtualinvoke $r24.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i0, i1);

        goto label4;
    }

    public android.view.HardwareRenderer getHardwareRenderer()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        android.view.HardwareRenderer $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        return $r3;

     label1:
        return null;
    }

    public final int getHeight()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i1 = r0.<android.view.View: int mBottom>;

        $i0 = r0.<android.view.View: int mTop>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public void getHitRect(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1;
        android.view.View$TransformationInfo r2;
        android.graphics.RectF r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0;
        android.view.View$AttachInfo $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.Matrix $r6;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if r2 == null goto label1;

        $z0 = staticinvoke <android.view.View$TransformationInfo: boolean access$1600(android.view.View$TransformationInfo)>(r2);

        if $z0 != 0 goto label1;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r4 != null goto label2;

     label1:
        $i3 = r0.<android.view.View: int mLeft>;

        $i2 = r0.<android.view.View: int mTop>;

        $i1 = r0.<android.view.View: int mRight>;

        $i0 = r0.<android.view.View: int mBottom>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;

     label2:
        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r3 = $r5.<android.view.View$AttachInfo: android.graphics.RectF mTmpTransformRect>;

        $i4 = virtualinvoke r0.<android.view.View: int getWidth()>();

        $f0 = (float) $i4;

        $i5 = virtualinvoke r0.<android.view.View: int getHeight()>();

        $f1 = (float) $i5;

        virtualinvoke r3.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        $r6 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r2);

        virtualinvoke $r6.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $f2 = r3.<android.graphics.RectF: float left>;

        $i6 = (int) $f2;

        $i7 = r0.<android.view.View: int mLeft>;

        $i15 = $i6 + $i7;

        $f3 = r3.<android.graphics.RectF: float top>;

        $i9 = (int) $f3;

        $i8 = r0.<android.view.View: int mTop>;

        $i17 = $i9 + $i8;

        $f4 = r3.<android.graphics.RectF: float right>;

        $i10 = (int) $f4;

        $i11 = r0.<android.view.View: int mLeft>;

        $i16 = $i10 + $i11;

        $f5 = r3.<android.graphics.RectF: float bottom>;

        $i14 = (int) $f5;

        $i12 = r0.<android.view.View: int mTop>;

        $i13 = $i14 + $i12;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i15, $i17, $i16, $i13);

        return;
    }

    public int getHorizontalFadingEdgeLength()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache r1;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isHorizontalFadingEdgeEnabled()>();

        if $z0 == 0 goto label1;

        r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if r1 == null goto label1;

        $i0 = r1.<android.view.View$ScrollabilityCache: int fadingEdgeLength>;

        return $i0;

     label1:
        return 0;
    }

    protected float getHorizontalScrollFactor()
    {
        android.view.View r0;
        float $f0;

        r0 := @this: android.view.View;

        $f0 = virtualinvoke r0.<android.view.View: float getVerticalScrollFactor()>();

        return $f0;
    }

    protected int getHorizontalScrollbarHeight()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache r1;
        int i0;
        android.widget.ScrollBarDrawable r2;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        i0 = 0;

        if r1 == null goto label1;

        r2 = r1.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        i0 = 0;

        if r2 == null goto label1;

        i0 = virtualinvoke r2.<android.widget.ScrollBarDrawable: int getSize(boolean)>(0);

        if i0 > 0 goto label1;

        i0 = r1.<android.view.View$ScrollabilityCache: int scrollBarSize>;

     label1:
        return i0;
    }

    public int getId()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mID>;

        return $i0;
    }

    public int getImportantForAccessibility()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 7340032 & $i0;

        $i2 = $i1 >> 20;

        return $i2;
    }

    final android.graphics.Matrix getInverseMatrix()
    {
        android.view.View r0;
        android.view.View$TransformationInfo r1;
        android.graphics.Matrix $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if r1 == null goto label3;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $z0 = staticinvoke <android.view.View$TransformationInfo: boolean access$2100(android.view.View$TransformationInfo)>(r1);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2200(android.view.View$TransformationInfo)>(r1);

        if $r4 != null goto label1;

        $r7 = new android.graphics.Matrix;

        specialinvoke $r7.<android.graphics.Matrix: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2202(android.view.View$TransformationInfo,android.graphics.Matrix)>(r1, $r7);

     label1:
        $r5 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>(r1);

        $r6 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2200(android.view.View$TransformationInfo)>(r1);

        virtualinvoke $r5.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>($r6);

        staticinvoke <android.view.View$TransformationInfo: boolean access$2102(android.view.View$TransformationInfo,boolean)>(r1, 0);

     label2:
        $r3 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2200(android.view.View$TransformationInfo)>(r1);

        return $r3;

     label3:
        $r2 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

        return $r2;
    }

    public java.lang.CharSequence getIterableTextForAccessibility()
    {
        android.view.View r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getContentDescription()>();

        return $r1;
    }

    public android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3;
        java.lang.CharSequence r1, r3, r5;
        android.view.AccessibilityIterators$ParagraphTextSegmentIterator r2;
        android.view.AccessibilityIterators$WordTextSegmentIterator r4;
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r6;
        java.lang.String $r7, $r12, $r17;
        android.content.Context $r8, $r14;
        android.content.res.Resources $r9, $r13;
        java.util.Locale $r10, $r15;
        android.content.res.Configuration $r11, $r16;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 8: goto label4;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        r5 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r5 == null goto label1;

        $i3 = interfaceinvoke r5.<java.lang.CharSequence: int length()>();

        if $i3 <= 0 goto label1;

        $r14 = r0.<android.view.View: android.content.Context mContext>;

        $r13 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $r16 = virtualinvoke $r13.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r15 = $r16.<android.content.res.Configuration: java.util.Locale locale>;

        r6 = staticinvoke <android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator getInstance(java.util.Locale)>($r15);

        $r17 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r6.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void initialize(java.lang.String)>($r17);

        return r6;

     label3:
        r3 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r3 == null goto label1;

        $i2 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label1;

        $r8 = r0.<android.view.View: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r10 = $r11.<android.content.res.Configuration: java.util.Locale locale>;

        r4 = staticinvoke <android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator getInstance(java.util.Locale)>($r10);

        $r12 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r4.<android.view.AccessibilityIterators$WordTextSegmentIterator: void initialize(java.lang.String)>($r12);

        return r4;

     label4:
        r1 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r1 == null goto label1;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        r2 = staticinvoke <android.view.AccessibilityIterators$ParagraphTextSegmentIterator: android.view.AccessibilityIterators$ParagraphTextSegmentIterator getInstance()>();

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: void initialize(java.lang.String)>($r7);

        return r2;
    }

    public boolean getKeepScreenOn()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 67108864 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.view.KeyEvent$DispatcherState getKeyDispatcherState()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        android.view.KeyEvent$DispatcherState $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.view.KeyEvent$DispatcherState mKeyDispatchState>;

        return $r3;

     label1:
        return null;
    }

    public int getLabelFor()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mLabelForId>;

        return $i0;
    }

    public int getLayerType()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mLayerType>;

        return $i0;
    }

    public int getLayoutDirection()
    {
        android.view.View r0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 17 goto label2;

        $i3 = r0.<android.view.View: int mPrivateFlags2>;

        $i4 = 32 | $i3;

        r0.<android.view.View: int mPrivateFlags2> = $i4;

     label1:
        return 0;

     label2:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 16 & $i1;

        if $i2 != 16 goto label1;

        return 1;
    }

    public android.view.ViewGroup$LayoutParams getLayoutParams()
    {
        android.view.View r0;
        android.view.ViewGroup$LayoutParams $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        return $r1;
    }

    public final int getLeft()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mLeft>;

        return $i0;
    }

    protected float getLeftFadingEdgeStrength()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollOffset()>();

        if $i0 <= 0 goto label1;

        return 1.0F;

     label1:
        return 0.0F;
    }

    protected int getLeftPaddingOffset()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    android.view.View$ListenerInfo getListenerInfo()
    {
        android.view.View r0;
        android.view.View$ListenerInfo $r1, $r2, $r3, $r4;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if $r1 == null goto label1;

        $r4 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        return $r4;

     label1:
        $r2 = new android.view.View$ListenerInfo;

        specialinvoke $r2.<android.view.View$ListenerInfo: void <init>()>();

        r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo> = $r2;

        $r3 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        return $r3;
    }

    public final boolean getLocalVisibleRect(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1;
        android.graphics.Point r2, $r4;
        android.view.View$AttachInfo $r3, $r5;
        boolean $z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label2;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = $r5.<android.view.View$AttachInfo: android.graphics.Point mPoint>;

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>(r1, r2);

        if $z0 == 0 goto label3;

        $i0 = r2.<android.graphics.Point: int x>;

        $i3 = neg $i0;

        $i1 = r2.<android.graphics.Point: int y>;

        $i2 = neg $i1;

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>($i3, $i2);

        return 1;

     label2:
        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        r2 = $r4;

        goto label1;

     label3:
        return 0;
    }

    public void getLocationInWindow(int[])
    {
        android.view.View r0, r5;
        int[] r1;
        float[] r2;
        android.view.ViewParent r3;
        android.view.ViewRootImpl r4;
        java.lang.IllegalArgumentException $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View$AttachInfo $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24;
        android.graphics.Matrix $r9, $r10;

        r0 := @this: android.view.View;

        r1 := @parameter0: int[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 >= 2 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("location must be an array of two integers");

        throw $r6;

     label2:
        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r7 != null goto label3;

        r1[1] = 0;

        r1[0] = 0;

        return;

     label3:
        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = $r8.<android.view.View$AttachInfo: float[] mTmpTransformLocation>;

        r2[1] = 0.0F;

        r2[0] = 0.0F;

        $z0 = virtualinvoke r0.<android.view.View: boolean hasIdentityMatrix()>();

        if $z0 != 0 goto label4;

        $r9 = virtualinvoke r0.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r9.<android.graphics.Matrix: void mapPoints(float[])>(r2);

     label4:
        $f1 = r2[0];

        $i1 = r0.<android.view.View: int mLeft>;

        $f0 = (float) $i1;

        $f2 = $f1 + $f0;

        r2[0] = $f2;

        $f3 = r2[1];

        $i2 = r0.<android.view.View: int mTop>;

        $f4 = (float) $i2;

        $f5 = $f3 + $f4;

        r2[1] = $f5;

        r3 = r0.<android.view.View: android.view.ViewParent mParent>;

     label5:
        $z1 = r3 instanceof android.view.View;

        if $z1 == 0 goto label7;

        r5 = (android.view.View) r3;

        $f15 = r2[0];

        $i6 = r5.<android.view.View: int mScrollX>;

        $f14 = (float) $i6;

        $f13 = $f15 - $f14;

        r2[0] = $f13;

        $f18 = r2[1];

        $i7 = r5.<android.view.View: int mScrollY>;

        $f17 = (float) $i7;

        $f16 = $f18 - $f17;

        r2[1] = $f16;

        $z3 = virtualinvoke r5.<android.view.View: boolean hasIdentityMatrix()>();

        if $z3 != 0 goto label6;

        $r10 = virtualinvoke r5.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r10.<android.graphics.Matrix: void mapPoints(float[])>(r2);

     label6:
        $f19 = r2[0];

        $i8 = r5.<android.view.View: int mLeft>;

        $f21 = (float) $i8;

        $f20 = $f19 + $f21;

        r2[0] = $f20;

        $f22 = r2[1];

        $i9 = r5.<android.view.View: int mTop>;

        $f24 = (float) $i9;

        $f23 = $f22 + $f24;

        r2[1] = $f23;

        r3 = r5.<android.view.View: android.view.ViewParent mParent>;

        goto label5;

     label7:
        $z2 = r3 instanceof android.view.ViewRootImpl;

        if $z2 == 0 goto label8;

        r4 = (android.view.ViewRootImpl) r3;

        $f10 = r2[1];

        $i4 = r4.<android.view.ViewRootImpl: int mCurScrollY>;

        $f11 = (float) $i4;

        $f12 = $f10 - $f11;

        r2[1] = $f12;

     label8:
        $f6 = r2[0];

        $f7 = 0.5F + $f6;

        $i3 = (int) $f7;

        r1[0] = $i3;

        $f9 = r2[1];

        $f8 = 0.5F + $f9;

        $i5 = (int) $f8;

        r1[1] = $i5;

        return;
    }

    public void getLocationOnScreen(int[])
    {
        android.view.View r0;
        int[] r1;
        android.view.View$AttachInfo r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.View;

        r1 := @parameter0: int[];

        virtualinvoke r0.<android.view.View: void getLocationInWindow(int[])>(r1);

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label1;

        $i1 = r1[0];

        $i0 = r2.<android.view.View$AttachInfo: int mWindowLeft>;

        $i2 = $i1 + $i0;

        r1[0] = $i2;

        $i4 = r1[1];

        $i3 = r2.<android.view.View$AttachInfo: int mWindowTop>;

        $i5 = $i4 + $i3;

        r1[1] = $i5;

     label1:
        return;
    }

    public android.graphics.Matrix getMatrix()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r3;
        android.graphics.Matrix $r2, $r4;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r4 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$1500(android.view.View$TransformationInfo)>($r3);

        return $r4;

     label1:
        $r2 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

        return $r2;
    }

    public final int getMeasuredHeight()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mMeasuredHeight>;

        $i1 = 16777215 & $i0;

        return $i1;
    }

    public final int getMeasuredHeightAndState()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mMeasuredHeight>;

        return $i0;
    }

    public final int getMeasuredState()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mMeasuredWidth>;

        $i4 = -16777216 & $i0;

        $i1 = r0.<android.view.View: int mMeasuredHeight>;

        $i2 = $i1 >> 16;

        $i3 = -256 & $i2;

        $i5 = $i4 | $i3;

        return $i5;
    }

    public final int getMeasuredWidth()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mMeasuredWidth>;

        $i1 = 16777215 & $i0;

        return $i1;
    }

    public final int getMeasuredWidthAndState()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mMeasuredWidth>;

        return $i0;
    }

    public int getMinimumHeight()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mMinHeight>;

        return $i0;
    }

    public int getMinimumWidth()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mMinWidth>;

        return $i0;
    }

    public int getNextFocusDownId()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mNextFocusDownId>;

        return $i0;
    }

    public int getNextFocusForwardId()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mNextFocusForwardId>;

        return $i0;
    }

    public int getNextFocusLeftId()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mNextFocusLeftId>;

        return $i0;
    }

    public int getNextFocusRightId()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mNextFocusRightId>;

        return $i0;
    }

    public int getNextFocusUpId()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mNextFocusUpId>;

        return $i0;
    }

    public android.view.View$OnFocusChangeListener getOnFocusChangeListener()
    {
        android.view.View r0;
        android.view.View$ListenerInfo r1;
        android.view.View$OnFocusChangeListener $r2;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r1 == null goto label1;

        $r2 = r1.<android.view.View$ListenerInfo: android.view.View$OnFocusChangeListener mOnFocusChangeListener>;

        return $r2;

     label1:
        return null;
    }

    public android.graphics.Insets getOpticalInsets()
    {
        android.view.View r0;
        android.graphics.Insets $r1, $r2, $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.Insets mLayoutInsets>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.view.View: android.graphics.Insets computeOpticalInsets()>();

        r0.<android.view.View: android.graphics.Insets mLayoutInsets> = $r3;

     label1:
        $r2 = r0.<android.view.View: android.graphics.Insets mLayoutInsets>;

        return $r2;
    }

    public int getOverScrollMode()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mOverScrollMode>;

        return $i0;
    }

    public android.view.ViewOverlay getOverlay()
    {
        android.view.View r0;
        android.view.ViewOverlay $r1, $r2, $r3;
        android.content.Context $r4;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        if $r1 != null goto label1;

        $r3 = new android.view.ViewOverlay;

        $r4 = r0.<android.view.View: android.content.Context mContext>;

        specialinvoke $r3.<android.view.ViewOverlay: void <init>(android.content.Context,android.view.View)>($r4, r0);

        r0.<android.view.View: android.view.ViewOverlay mOverlay> = $r3;

     label1:
        $r2 = r0.<android.view.View: android.view.ViewOverlay mOverlay>;

        return $r2;
    }

    public int getPaddingBottom()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPaddingBottom>;

        return $i0;
    }

    public int getPaddingEnd()
    {
        android.view.View r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isPaddingResolved()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label1:
        $i0 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        if $i0 != 1 goto label2;

        $i2 = r0.<android.view.View: int mPaddingLeft>;

        return $i2;

     label2:
        $i1 = r0.<android.view.View: int mPaddingRight>;

        return $i1;
    }

    public int getPaddingLeft()
    {
        android.view.View r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isPaddingResolved()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label1:
        $i0 = r0.<android.view.View: int mPaddingLeft>;

        return $i0;
    }

    public int getPaddingRight()
    {
        android.view.View r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isPaddingResolved()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label1:
        $i0 = r0.<android.view.View: int mPaddingRight>;

        return $i0;
    }

    public int getPaddingStart()
    {
        android.view.View r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isPaddingResolved()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label1:
        $i0 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        if $i0 != 1 goto label2;

        $i2 = r0.<android.view.View: int mPaddingRight>;

        return $i2;

     label2:
        $i1 = r0.<android.view.View: int mPaddingLeft>;

        return $i1;
    }

    public int getPaddingTop()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPaddingTop>;

        return $i0;
    }

    public final android.view.ViewParent getParent()
    {
        android.view.View r0;
        android.view.ViewParent $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        return $r1;
    }

    public android.view.ViewParent getParentForAccessibility()
    {
        android.view.View r0, $r3;
        android.view.ViewParent $r1, $r2, $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = $r1 instanceof android.view.View;

        if $z0 == 0 goto label2;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r3 = (android.view.View) $r2;

        $z1 = virtualinvoke $r3.<android.view.View: boolean includeForAccessibility()>();

        if $z1 == 0 goto label1;

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        return $r6;

     label1:
        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r5 = interfaceinvoke $r4.<android.view.ViewParent: android.view.ViewParent getParentForAccessibility()>();

        return $r5;

     label2:
        return null;
    }

    public float getPivotX()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mPivotX>;

        return $f0;

     label1:
        return 0.0F;
    }

    public float getPivotY()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mPivotY>;

        return $f0;

     label1:
        return 0.0F;
    }

    public int getRawLayoutDirection()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 12 & $i0;

        $i2 = $i1 >> 2;

        return $i2;
    }

    public int getRawTextAlignment()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 57344 & $i0;

        $i2 = $i1 >> 13;

        return $i2;
    }

    public int getRawTextDirection()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 448 & $i0;

        $i2 = $i1 >> 6;

        return $i2;
    }

    public android.content.res.Resources getResources()
    {
        android.view.View r0;
        android.content.res.Resources $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.content.res.Resources mResources>;

        return $r1;
    }

    public final int getRight()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mRight>;

        return $i0;
    }

    protected float getRightFadingEdgeStrength()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollOffset()>();

        $i1 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollExtent()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollRange()>();

        if $i2 >= $i3 goto label1;

        return 1.0F;

     label1:
        return 0.0F;
    }

    protected int getRightPaddingOffset()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    public android.view.View getRootView()
    {
        android.view.View r0, r1, r2;
        android.view.View$AttachInfo $r3, $r7;
        android.view.ViewParent $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.view.View;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label1;

        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = $r7.<android.view.View$AttachInfo: android.view.View mRootView>;

        if r2 == null goto label1;

        return r2;

     label1:
        r1 = r0;

     label2:
        $r4 = r1.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label3;

        $r5 = r1.<android.view.View: android.view.ViewParent mParent>;

        $z0 = $r5 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $r6 = r1.<android.view.View: android.view.ViewParent mParent>;

        r1 = (android.view.View) $r6;

        goto label2;

     label3:
        return r1;
    }

    public float getRotation()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mRotation>;

        return $f0;

     label1:
        return 0.0F;
    }

    public float getRotationX()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mRotationX>;

        return $f0;

     label1:
        return 0.0F;
    }

    public float getRotationY()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mRotationY>;

        return $f0;

     label1:
        return 0.0F;
    }

    public float getScaleX()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mScaleX>;

        return $f0;

     label1:
        return 1.0F;
    }

    public float getScaleY()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mScaleY>;

        return $f0;

     label1:
        return 1.0F;
    }

    public int getScrollBarDefaultDelayBeforeFade()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if $r1 != null goto label1;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getScrollDefaultDelay()>();

        return $i1;

     label1:
        $r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $i0 = $r2.<android.view.View$ScrollabilityCache: int scrollBarDefaultDelayBeforeFade>;

        return $i0;
    }

    public int getScrollBarFadeDuration()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if $r1 != null goto label1;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getScrollBarFadeDuration()>();

        return $i1;

     label1:
        $r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $i0 = $r2.<android.view.View$ScrollabilityCache: int scrollBarFadeDuration>;

        return $i0;
    }

    public int getScrollBarSize()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache $r1, $r2;
        int $i0, $i1;
        android.content.Context $r3;
        android.view.ViewConfiguration $r4;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if $r1 != null goto label1;

        $r3 = r0.<android.view.View: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r3);

        $i1 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledScrollBarSize()>();

        return $i1;

     label1:
        $r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $i0 = $r2.<android.view.View$ScrollabilityCache: int scrollBarSize>;

        return $i0;
    }

    public int getScrollBarStyle()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 50331648 & $i0;

        return $i1;
    }

    public final int getScrollX()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mScrollX>;

        return $i0;
    }

    public final int getScrollY()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mScrollY>;

        return $i0;
    }

    public int getSolidColor()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    protected int getSuggestedMinimumHeight()
    {
        android.view.View r0;
        android.graphics.drawable.Drawable $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r1 != null goto label1;

        $i3 = r0.<android.view.View: int mMinHeight>;

        return $i3;

     label1:
        $i0 = r0.<android.view.View: int mMinHeight>;

        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    protected int getSuggestedMinimumWidth()
    {
        android.view.View r0;
        android.graphics.drawable.Drawable $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r1 != null goto label1;

        $i3 = r0.<android.view.View: int mMinWidth>;

        return $i3;

     label1:
        $i0 = r0.<android.view.View: int mMinWidth>;

        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        $i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i2;
    }

    public int getSystemUiVisibility()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mSystemUiVisibility>;

        return $i0;
    }

    public java.lang.Object getTag()
    {
        android.view.View r0;
        java.lang.Object $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: java.lang.Object mTag>;

        return $r1;
    }

    public java.lang.Object getTag(int)
    {
        android.view.View r0;
        int i0;
        android.util.SparseArray $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.View: android.util.SparseArray mKeyedTags>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.util.SparseArray mKeyedTags>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        return $r3;

     label1:
        return null;
    }

    public int getTextAlignment()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 917504 & $i0;

        $i2 = $i1 >> 17;

        return $i2;
    }

    public int getTextDirection()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 7168 & $i0;

        $i2 = $i1 >> 10;

        return $i2;
    }

    public final int getTop()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mTop>;

        return $i0;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int computeVerticalScrollOffset()>();

        if $i0 <= 0 goto label1;

        return 1.0F;

     label1:
        return 0.0F;
    }

    protected int getTopPaddingOffset()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    public android.view.TouchDelegate getTouchDelegate()
    {
        android.view.View r0;
        android.view.TouchDelegate $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.TouchDelegate mTouchDelegate>;

        return $r1;
    }

    public java.util.ArrayList getTouchables()
    {
        android.view.View r0;
        java.util.ArrayList r1, $r2;

        r0 := @this: android.view.View;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<android.view.View: void addTouchables(java.util.ArrayList)>(r1);

        return r1;
    }

    public float getTransitionAlpha()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mTransitionAlpha>;

        return $f0;

     label1:
        return 1.0F;
    }

    public float getTranslationX()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mTranslationX>;

        return $f0;

     label1:
        return 0.0F;
    }

    public float getTranslationY()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        float $f0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f0 = $r2.<android.view.View$TransformationInfo: float mTranslationY>;

        return $f0;

     label1:
        return 0.0F;
    }

    public int getVerticalFadingEdgeLength()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache r1;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isVerticalFadingEdgeEnabled()>();

        if $z0 == 0 goto label1;

        r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if r1 == null goto label1;

        $i0 = r1.<android.view.View$ScrollabilityCache: int fadingEdgeLength>;

        return $i0;

     label1:
        return 0;
    }

    protected float getVerticalScrollFactor()
    {
        android.view.View r0;
        android.util.TypedValue r1, $r2;
        float $f0, $f1, $f2;
        byte $b0;
        android.content.Context $r3, $r5;
        android.content.res.Resources$Theme $r4;
        boolean $z0;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: android.view.View;

        $f0 = r0.<android.view.View: float mVerticalScrollFactor>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r1 = $r2;

        $r3 = r0.<android.view.View: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r4.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, r1, 1);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected theme to define listPreferredItemHeight.");

        throw $r8;

     label1:
        $r5 = r0.<android.view.View: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f2 = virtualinvoke r1.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r7);

        r0.<android.view.View: float mVerticalScrollFactor> = $f2;

     label2:
        $f1 = r0.<android.view.View: float mVerticalScrollFactor>;

        return $f1;
    }

    public int getVerticalScrollbarPosition()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mVerticalScrollbarPosition>;

        return $i0;
    }

    public int getVerticalScrollbarWidth()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache r1;
        int i0;
        android.widget.ScrollBarDrawable r2;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        i0 = 0;

        if r1 == null goto label1;

        r2 = r1.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        i0 = 0;

        if r2 == null goto label1;

        i0 = virtualinvoke r2.<android.widget.ScrollBarDrawable: int getSize(boolean)>(1);

        if i0 > 0 goto label1;

        i0 = r1.<android.view.View$ScrollabilityCache: int scrollBarSize>;

     label1:
        return i0;
    }

    public android.view.ViewRootImpl getViewRootImpl()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        android.view.ViewRootImpl $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        return $r3;

     label1:
        return null;
    }

    public android.view.ViewTreeObserver getViewTreeObserver()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r5;
        android.view.ViewTreeObserver $r2, $r3, $r4, $r6;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r6 = $r5.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        return $r6;

     label1:
        $r2 = r0.<android.view.View: android.view.ViewTreeObserver mFloatingTreeObserver>;

        if $r2 != null goto label2;

        $r4 = new android.view.ViewTreeObserver;

        specialinvoke $r4.<android.view.ViewTreeObserver: void <init>()>();

        r0.<android.view.View: android.view.ViewTreeObserver mFloatingTreeObserver> = $r4;

     label2:
        $r3 = r0.<android.view.View: android.view.ViewTreeObserver mFloatingTreeObserver>;

        return $r3;
    }

    public int getVisibility()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 12 & $i0;

        return $i1;
    }

    public final int getWidth()
    {
        android.view.View r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.View;

        $i1 = r0.<android.view.View: int mRight>;

        $i0 = r0.<android.view.View: int mLeft>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    protected int getWindowAttachCount()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mWindowAttachCount>;

        return $i0;
    }

    public android.view.WindowId getWindowId()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r2, $r3, $r5, $r7, $r8, $r11, $r14, $r17;
        android.view.WindowId $r4, $r6, $r13;
        android.os.IBinder $r9;
        android.view.IWindowSession $r10;
        android.view.IWindowId $r12, $r15;
        android.os.RemoteException $r16;

        r0 := @this: android.view.View;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.WindowId mWindowId>;

        if $r4 != null goto label3;

     label2:
        $r11 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r7.<android.view.View$AttachInfo: android.view.IWindowSession mSession>;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r9 = $r8.<android.view.View$AttachInfo: android.os.IBinder mWindowToken>;

        $r12 = interfaceinvoke $r10.<android.view.IWindowSession: android.view.IWindowId getWindowId(android.os.IBinder)>($r9);

        $r11.<android.view.View$AttachInfo: android.view.IWindowId mIWindowId> = $r12;

        $r17 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r13 = new android.view.WindowId;

        $r14 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r15 = $r14.<android.view.View$AttachInfo: android.view.IWindowId mIWindowId>;

        specialinvoke $r13.<android.view.WindowId: void <init>(android.view.IWindowId)>($r15);

        $r17.<android.view.View$AttachInfo: android.view.WindowId mWindowId> = $r13;

     label3:
        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r6 = $r5.<android.view.View$AttachInfo: android.view.WindowId mWindowId>;

        return $r6;

     label4:
        $r16 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    android.view.IWindowSession getWindowSession()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        android.view.IWindowSession $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.view.IWindowSession mSession>;

        return $r3;

     label1:
        return null;
    }

    public int getWindowSystemUiVisibility()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        int $i0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r2.<android.view.View$AttachInfo: int mSystemUiVisibility>;

        return $i0;

     label1:
        return 0;
    }

    public android.os.IBinder getWindowToken()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        android.os.IBinder $r3;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.os.IBinder mWindowToken>;

        return $r3;

     label1:
        return null;
    }

    public int getWindowVisibility()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        int $i0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r2.<android.view.View$AttachInfo: int mWindowVisibility>;

        return $i0;

     label1:
        return 8;
    }

    public void getWindowVisibleDisplayFrame(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1, r3;
        android.view.View$AttachInfo $r4, $r7, $r8, $r11;
        android.hardware.display.DisplayManagerGlobal $r5;
        android.view.Display $r6;
        android.view.IWindow $r9;
        android.view.IWindowSession $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.os.RemoteException $r12;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r4 == null goto label4;

     label1:
        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r10 = $r7.<android.view.View$AttachInfo: android.view.IWindowSession mSession>;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r9 = $r8.<android.view.View$AttachInfo: android.view.IWindow mWindow>;

        interfaceinvoke $r10.<android.view.IWindowSession: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>($r9, r1);

     label2:
        $r11 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r3 = $r11.<android.view.View$AttachInfo: android.graphics.Rect mVisibleInsets>;

        $i1 = r1.<android.graphics.Rect: int left>;

        $i0 = r3.<android.graphics.Rect: int left>;

        $i2 = $i1 + $i0;

        r1.<android.graphics.Rect: int left> = $i2;

        $i5 = r1.<android.graphics.Rect: int top>;

        $i3 = r3.<android.graphics.Rect: int top>;

        $i4 = $i5 + $i3;

        r1.<android.graphics.Rect: int top> = $i4;

        $i6 = r1.<android.graphics.Rect: int right>;

        $i7 = r3.<android.graphics.Rect: int right>;

        $i9 = $i6 - $i7;

        r1.<android.graphics.Rect: int right> = $i9;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $i8 = r3.<android.graphics.Rect: int bottom>;

        $i10 = $i11 - $i8;

        r1.<android.graphics.Rect: int bottom> = $i10;

        return;

     label3:
        $r12 := @caughtexception;

        return;

     label4:
        $r5 = staticinvoke <android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>();

        $r6 = virtualinvoke $r5.<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)>(0);

        virtualinvoke $r6.<android.view.Display: void getRectSize(android.graphics.Rect)>(r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public float getX()
    {
        android.view.View r0;
        float f0, f1, $f2;
        int $i0;
        android.view.View$TransformationInfo $r1, $r2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mLeft>;

        f0 = (float) $i0;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label2;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        f1 = $r2.<android.view.View$TransformationInfo: float mTranslationX>;

     label1:
        $f2 = f1 + f0;

        return $f2;

     label2:
        f1 = 0.0F;

        goto label1;
    }

    public float getY()
    {
        android.view.View r0;
        float f0, f1, $f2;
        int $i0;
        android.view.View$TransformationInfo $r1, $r2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mTop>;

        f0 = (float) $i0;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label2;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        f1 = $r2.<android.view.View$TransformationInfo: float mTranslationY>;

     label1:
        $f2 = f1 + f0;

        return $f2;

     label2:
        f1 = 0.0F;

        goto label1;
    }

    public void hackTurnOffWindowResizeAnim(boolean)
    {
        android.view.View r0;
        boolean z0;
        android.view.View$AttachInfo $r1;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r1.<android.view.View$AttachInfo: boolean mTurnOffWindowResizeAnim> = z0;

        return;
    }

    void handleFocusGainInternal(int, android.graphics.Rect)
    {
        android.view.View r0, r2, $r9;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect r1;
        android.view.View$AttachInfo $r3, $r5, $r6;
        android.view.ViewParent $r4, $r8;
        android.view.ViewTreeObserver $r7;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $i1 = r0.<android.view.View: int mPrivateFlags>;

        $i2 = 2 & $i1;

        if $i2 != 0 goto label4;

        $i3 = r0.<android.view.View: int mPrivateFlags>;

        $i4 = 2 | $i3;

        r0.<android.view.View: int mPrivateFlags> = $i4;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label5;

        $r9 = virtualinvoke r0.<android.view.View: android.view.View getRootView()>();

        r2 = virtualinvoke $r9.<android.view.View: android.view.View findFocus()>();

     label1:
        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label2;

        $r8 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r8.<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>(r0, r0);

     label2:
        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r5 == null goto label3;

        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r7 = $r6.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r7.<android.view.ViewTreeObserver: void dispatchOnGlobalFocusChange(android.view.View,android.view.View)>(r2, r0);

     label3:
        virtualinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(1, i0, r1);

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

     label4:
        return;

     label5:
        r2 = null;

        goto label1;
    }

    public boolean hasFocus()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 2 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasFocusable()
    {
        android.view.View r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 12 & $i0;

        if $i1 != 0 goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isFocusable()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean hasHoveredChild()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    final boolean hasIdentityMatrix()
    {
        android.view.View r0;
        android.view.View$TransformationInfo $r1, $r2;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $z0 = staticinvoke <android.view.View$TransformationInfo: boolean access$1600(android.view.View$TransformationInfo)>($r2);

        return $z0;

     label1:
        return 1;
    }

    public boolean hasOnClickListeners()
    {
        android.view.View r0;
        android.view.View$ListenerInfo r1;
        android.view.View$OnClickListener $r2;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r1 == null goto label1;

        $r2 = r1.<android.view.View$ListenerInfo: android.view.View$OnClickListener mOnClickListener>;

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean hasOpaqueScrollbars()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 16777216 & $i0;

        if $i1 != 16777216 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasOverlappingRendering()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 1;
    }

    boolean hasStaticLayer()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 1;
    }

    public boolean hasTransientState()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = -2147483648 & $i0;

        if $i1 != -2147483648 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasWindowFocus()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z0 = $r2.<android.view.View$AttachInfo: boolean mHasWindowFocus>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean includeForAccessibility()
    {
        android.view.View r0;
        android.view.View$AttachInfo r1, $r2;
        boolean z0, z1;
        int $i0, $i1;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        z0 = 0;

        if r1 == null goto label2;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r2.<android.view.View$AttachInfo: int mAccessibilityFetchFlags>;

        $i1 = 8 & $i0;

        if $i1 != 0 goto label1;

        z1 = virtualinvoke r0.<android.view.View: boolean isImportantForAccessibility()>();

        z0 = 0;

        if z1 == 0 goto label2;

     label1:
        z0 = 1;

     label2:
        return z0;
    }

    protected void initializeFadingEdge(android.content.res.TypedArray)
    {
        android.view.View r0;
        android.content.res.TypedArray r1;
        android.content.Context $r2;
        android.view.View$ScrollabilityCache $r3;
        android.view.ViewConfiguration $r4;
        int $i0, $i1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.content.res.TypedArray;

        specialinvoke r0.<android.view.View: void initScrollCache()>();

        $r3 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $r2 = r0.<android.view.View: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>();

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(24, $i0);

        $r3.<android.view.View$ScrollabilityCache: int fadingEdgeLength> = $i1;

        return;
    }

    protected void initializeScrollbars(android.content.res.TypedArray)
    {
        android.view.View r0;
        android.content.res.TypedArray r1;
        android.view.View$ScrollabilityCache r2;
        boolean z0, $z1, $z2;
        android.graphics.drawable.Drawable r3, r4, r5, r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.ScrollBarDrawable $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        android.content.Context $r8;
        android.view.ViewConfiguration $r9;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.content.res.TypedArray;

        specialinvoke r0.<android.view.View: void initScrollCache()>();

        r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $r7 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        if $r7 != null goto label1;

        $r14 = new android.widget.ScrollBarDrawable;

        specialinvoke $r14.<android.widget.ScrollBarDrawable: void <init>()>();

        r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar> = $r14;

     label1:
        z0 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(44, 1);

        if z0 != 0 goto label2;

        r2.<android.view.View$ScrollabilityCache: int state> = 1;

     label2:
        r2.<android.view.View$ScrollabilityCache: boolean fadeScrollBars> = z0;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getScrollBarFadeDuration()>();

        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(42, $i1);

        r2.<android.view.View$ScrollabilityCache: int scrollBarFadeDuration> = $i2;

        $i3 = staticinvoke <android.view.ViewConfiguration: int getScrollDefaultDelay()>();

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(43, $i3);

        r2.<android.view.View$ScrollabilityCache: int scrollBarDefaultDelayBeforeFade> = $i4;

        $r8 = r0.<android.view.View: android.content.Context mContext>;

        $r9 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r8);

        $i6 = virtualinvoke $r9.<android.view.ViewConfiguration: int getScaledScrollBarSize()>();

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i6);

        r2.<android.view.View$ScrollabilityCache: int scrollBarSize> = $i5;

        r3 = virtualinvoke r1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(3);

        $r10 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        virtualinvoke $r10.<android.widget.ScrollBarDrawable: void setHorizontalTrackDrawable(android.graphics.drawable.Drawable)>(r3);

        r4 = virtualinvoke r1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        if r4 == null goto label3;

        $r13 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        virtualinvoke $r13.<android.widget.ScrollBarDrawable: void setHorizontalThumbDrawable(android.graphics.drawable.Drawable)>(r4);

     label3:
        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        if $z1 == 0 goto label4;

        $r16 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        virtualinvoke $r16.<android.widget.ScrollBarDrawable: void setAlwaysDrawHorizontalTrack(boolean)>(1);

     label4:
        r5 = virtualinvoke r1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(4);

        $r11 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        virtualinvoke $r11.<android.widget.ScrollBarDrawable: void setVerticalTrackDrawable(android.graphics.drawable.Drawable)>(r5);

        r6 = virtualinvoke r1.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        if r6 == null goto label5;

        $r15 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        virtualinvoke $r15.<android.widget.ScrollBarDrawable: void setVerticalThumbDrawable(android.graphics.drawable.Drawable)>(r6);

     label5:
        $z2 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 0);

        if $z2 == 0 goto label6;

        $r12 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        virtualinvoke $r12.<android.widget.ScrollBarDrawable: void setAlwaysDrawVerticalTrack(boolean)>(1);

     label6:
        i0 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        if r5 == null goto label7;

        virtualinvoke r5.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>(i0);

     label7:
        if r6 == null goto label8;

        virtualinvoke r6.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>(i0);

     label8:
        virtualinvoke r0.<android.view.View: void resolvePadding()>();

        return;
    }

    protected void internalSetPadding(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0, $z1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<android.view.View: int mUserPaddingLeft> = i0;

        r0.<android.view.View: int mUserPaddingRight> = i2;

        r0.<android.view.View: int mUserPaddingBottom> = i3;

        i4 = r0.<android.view.View: int mViewFlags>;

        $i9 = i4 & 768;

        if $i9 == 0 goto label04;

        $i13 = i4 & 512;

        if $i13 == 0 goto label02;

        $i15 = i4 & 16777216;

        if $i15 != 0 goto label10;

        i8 = 0;

     label01:
        $i16 = r0.<android.view.View: int mVerticalScrollbarPosition>;

        tableswitch($i16)
        {
            case 0: goto label11;
            case 1: goto label14;
            case 2: goto label13;
            default: goto label02;
        };

     label02:
        $i14 = i4 & 256;

        if $i14 == 0 goto label04;

        i6 = i4 & 16777216;

        i7 = 0;

        if i6 != 0 goto label15;

     label03:
        i3 = i3 + i7;

     label04:
        i5 = r0.<android.view.View: int mPaddingLeft>;

        z0 = 0;

        if i5 == i0 goto label05;

        z0 = 1;

        r0.<android.view.View: int mPaddingLeft> = i0;

     label05:
        $i10 = r0.<android.view.View: int mPaddingTop>;

        if $i10 == i1 goto label06;

        z0 = 1;

        r0.<android.view.View: int mPaddingTop> = i1;

     label06:
        $i11 = r0.<android.view.View: int mPaddingRight>;

        if $i11 == i2 goto label07;

        z0 = 1;

        r0.<android.view.View: int mPaddingRight> = i2;

     label07:
        $i12 = r0.<android.view.View: int mPaddingBottom>;

        if $i12 == i3 goto label08;

        z0 = 1;

        r0.<android.view.View: int mPaddingBottom> = i3;

     label08:
        if z0 == 0 goto label09;

        virtualinvoke r0.<android.view.View: void requestLayout()>();

     label09:
        return;

     label10:
        i8 = virtualinvoke r0.<android.view.View: int getVerticalScrollbarWidth()>();

        goto label01;

     label11:
        $z1 = virtualinvoke r0.<android.view.View: boolean isLayoutRtl()>();

        if $z1 == 0 goto label12;

        i0 = i0 + i8;

        goto label02;

     label12:
        i2 = i2 + i8;

        goto label02;

     label13:
        i2 = i2 + i8;

        goto label02;

     label14:
        i0 = i0 + i8;

        goto label02;

     label15:
        i7 = virtualinvoke r0.<android.view.View: int getHorizontalScrollbarHeight()>();

        goto label03;
    }

    public void invalidate()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        return;
    }

    public void invalidate(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.view.ViewParent r1;
        android.view.View$AttachInfo r2;
        android.graphics.Rect r3;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $z0 = specialinvoke r0.<android.view.View: boolean skipInvalidate()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $i6 = r0.<android.view.View: int mPrivateFlags>;

        $i7 = 48 & $i6;

        if $i7 == 48 goto label3;

        $i17 = r0.<android.view.View: int mPrivateFlags>;

        $i20 = 32768 & $i17;

        if $i20 == 32768 goto label3;

        $i19 = r0.<android.view.View: int mPrivateFlags>;

        $i21 = -2147483648 & $i19;

        if $i21 == -2147483648 goto label1;

     label3:
        $i8 = r0.<android.view.View: int mPrivateFlags>;

        $i9 = -32769 & $i8;

        r0.<android.view.View: int mPrivateFlags> = $i9;

        $i10 = r0.<android.view.View: int mPrivateFlags>;

        $i12 = -2147483648 | $i10;

        r0.<android.view.View: int mPrivateFlags> = $i12;

        $i11 = r0.<android.view.View: int mPrivateFlags>;

        $i14 = 2097152 | $i11;

        r0.<android.view.View: int mPrivateFlags> = $i14;

        r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label1;

        if r2 == null goto label1;

        if i0 >= i2 goto label1;

        if i1 >= i3 goto label1;

        i4 = r0.<android.view.View: int mScrollX>;

        i5 = r0.<android.view.View: int mScrollY>;

        r3 = r2.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect>;

        $i18 = i0 - i4;

        $i15 = i1 - i5;

        $i16 = i2 - i4;

        $i13 = i3 - i5;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>($i18, $i15, $i16, $i13);

        interfaceinvoke r1.<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>(r0, r3);

        return;
    }

    public void invalidate(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1, r4;
        android.view.ViewParent r2, $r5;
        android.view.View$AttachInfo r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = specialinvoke r0.<android.view.View: boolean skipInvalidate()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 48 & $i2;

        if $i3 == 48 goto label3;

        $i18 = r0.<android.view.View: int mPrivateFlags>;

        $i20 = 32768 & $i18;

        if $i20 == 32768 goto label3;

        $i19 = r0.<android.view.View: int mPrivateFlags>;

        $i21 = -2147483648 & $i19;

        if $i21 == -2147483648 goto label1;

     label3:
        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = -32769 & $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        $i6 = r0.<android.view.View: int mPrivateFlags>;

        $i7 = -2147483648 | $i6;

        r0.<android.view.View: int mPrivateFlags> = $i7;

        $i8 = r0.<android.view.View: int mPrivateFlags>;

        $i9 = 2097152 | $i8;

        r0.<android.view.View: int mPrivateFlags> = $i9;

        r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label1;

        if r3 == null goto label1;

        i0 = r0.<android.view.View: int mScrollX>;

        i1 = r0.<android.view.View: int mScrollY>;

        r4 = r3.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect>;

        $i11 = r1.<android.graphics.Rect: int left>;

        $i16 = $i11 - i0;

        $i10 = r1.<android.graphics.Rect: int top>;

        $i17 = $i10 - i1;

        $i13 = r1.<android.graphics.Rect: int right>;

        $i14 = $i13 - i0;

        $i12 = r1.<android.graphics.Rect: int bottom>;

        $i15 = $i12 - i1;

        virtualinvoke r4.<android.graphics.Rect: void set(int,int,int,int)>($i16, $i17, $i14, $i15);

        $r5 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r5.<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>(r0, r4);

        return;
    }

    void invalidate(boolean)
    {
        android.view.View r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.view.View$AttachInfo r1;
        android.view.ViewParent r2;
        android.graphics.Rect r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<android.view.View: boolean skipInvalidate()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 48 & $i0;

        if $i1 == 48 goto label4;

        if z0 == 0 goto label3;

        $i18 = r0.<android.view.View: int mPrivateFlags>;

        $i19 = 32768 & $i18;

        if $i19 == 32768 goto label4;

     label3:
        $i15 = r0.<android.view.View: int mPrivateFlags>;

        $i17 = -2147483648 & $i15;

        if $i17 != -2147483648 goto label4;

        $z3 = virtualinvoke r0.<android.view.View: boolean isOpaque()>();

        $z4 = r0.<android.view.View: boolean mLastIsOpaque>;

        if $z3 == $z4 goto label1;

     label4:
        $z2 = virtualinvoke r0.<android.view.View: boolean isOpaque()>();

        r0.<android.view.View: boolean mLastIsOpaque> = $z2;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -33 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 2097152 | $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        if z0 == 0 goto label5;

        $i11 = r0.<android.view.View: int mPrivateFlags>;

        $i14 = -2147483648 | $i11;

        r0.<android.view.View: int mPrivateFlags> = $i14;

        $i13 = r0.<android.view.View: int mPrivateFlags>;

        $i16 = -32769 & $i13;

        r0.<android.view.View: int mPrivateFlags> = $i16;

     label5:
        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        if r2 == null goto label1;

        if r1 == null goto label1;

        r3 = r1.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect>;

        $i7 = r0.<android.view.View: int mRight>;

        $i6 = r0.<android.view.View: int mLeft>;

        $i12 = $i7 - $i6;

        $i10 = r0.<android.view.View: int mBottom>;

        $i8 = r0.<android.view.View: int mTop>;

        $i9 = $i10 - $i8;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i12, $i9);

        interfaceinvoke r2.<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>(r0, r3);

        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.Rect r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = virtualinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        i0 = r0.<android.view.View: int mScrollX>;

        i1 = r0.<android.view.View: int mScrollY>;

        $i2 = r2.<android.graphics.Rect: int left>;

        $i9 = i0 + $i2;

        $i3 = r2.<android.graphics.Rect: int top>;

        $i8 = i1 + $i3;

        $i4 = r2.<android.graphics.Rect: int right>;

        $i7 = i0 + $i4;

        $i5 = r2.<android.graphics.Rect: int bottom>;

        $i6 = i1 + $i5;

        virtualinvoke r0.<android.view.View: void invalidate(int,int,int,int)>($i9, $i8, $i7, $i6);

     label1:
        return;
    }

    void invalidateInheritedLayoutMode(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        return;
    }

    protected void invalidateParentCaches()
    {
        android.view.View r0, r1;
        android.view.ViewParent $r2, $r3;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = $r2 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        r1 = (android.view.View) $r3;

        $i0 = r1.<android.view.View: int mPrivateFlags>;

        $i1 = -2147483648 | $i0;

        r1.<android.view.View: int mPrivateFlags> = $i1;

     label1:
        return;
    }

    protected void invalidateParentIfNeeded()
    {
        android.view.View r0, $r3;
        boolean $z0, $z1;
        android.view.ViewParent $r1, $r2;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z1 = $r1 instanceof android.view.View;

        if $z1 == 0 goto label1;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r3 = (android.view.View) $r2;

        virtualinvoke $r3.<android.view.View: void invalidate(boolean)>(1);

     label1:
        return;
    }

    void invalidateViewProperty(boolean, boolean)
    {
        android.view.View r0;
        boolean z0, z1, $z2;
        android.view.View$AttachInfo r1;
        android.graphics.Rect r2;
        android.view.DisplayList $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.ViewParent $r4, $r5, $r6, $r8;
        android.view.ViewGroup $r7;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r3 == null goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 64 & $i2;

        if $i3 != 64 goto label5;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

     label2:
        if z1 == 0 goto label3;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 32 | $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

     label3:
        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(0);

     label4:
        return;

     label5:
        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label4;

        if r1 == null goto label4;

        r2 = r1.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect>;

        $i5 = r0.<android.view.View: int mRight>;

        $i4 = r0.<android.view.View: int mLeft>;

        $i9 = $i5 - $i4;

        $i7 = r0.<android.view.View: int mBottom>;

        $i6 = r0.<android.view.View: int mTop>;

        $i8 = $i7 - $i6;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i9, $i8);

        $r5 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z2 = $r5 instanceof android.view.ViewGroup;

        if $z2 == 0 goto label6;

        $r8 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r7 = (android.view.ViewGroup) $r8;

        virtualinvoke $r7.<android.view.ViewGroup: void invalidateChildFast(android.view.View,android.graphics.Rect)>(r0, r2);

        return;

     label6:
        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r6.<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>(r0, r2);

        return;
    }

    public boolean isAccessibilityFocused()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 67108864 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isAccessibilitySelectionExtendable()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    public boolean isActionableForAccessibility()
    {
        android.view.View r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isClickable()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.view.View: boolean isLongClickable()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<android.view.View: boolean isFocusable()>();

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isActivated()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 1073741824 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isAttachedToWindow()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isClickable()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 16384 & $i0;

        if $i1 != 16384 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDirty()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 6291456 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDrawingCacheEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 32768 & $i0;

        if $i1 != 32768 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDuplicateParentStateEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 4194304 & $i0;

        if $i1 != 4194304 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 32 & $i0;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isFocusable()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 1 & $i0;

        if 1 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isFocusableInTouchMode()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 262144 & $i0;

        if 262144 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isFocused()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 2 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isHapticFeedbackEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 268435456 & $i0;

        if 268435456 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isHardwareAccelerated()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z0 = $r2.<android.view.View$AttachInfo: boolean mHardwareAccelerated>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isHorizontalFadingEdgeEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 4096 & $i0;

        if $i1 != 4096 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isHorizontalScrollBarEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 256 & $i0;

        if $i1 != 256 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isHovered()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 268435456 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isImportantForAccessibility()
    {
        android.view.View r0, $r3;
        int i0, $i1, $i2, $i3, $i4;
        android.view.ViewParent r1;
        boolean z0, $z1, $z2, $z3;
        android.view.accessibility.AccessibilityNodeProvider $r2;

        r0 := @this: android.view.View;

        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 7340032 & $i1;

        i0 = $i2 >> 20;

        if i0 == 2 goto label1;

        if i0 != 4 goto label2;

     label1:
        return 0;

     label2:
        r1 = r0.<android.view.View: android.view.ViewParent mParent>;

     label3:
        $z1 = r1 instanceof android.view.View;

        if $z1 == 0 goto label4;

        $r3 = (android.view.View) r1;

        $i4 = virtualinvoke $r3.<android.view.View: int getImportantForAccessibility()>();

        if $i4 == 4 goto label1;

        r1 = interfaceinvoke r1.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label3;

     label4:
        if i0 == 1 goto label5;

        $z2 = virtualinvoke r0.<android.view.View: boolean isActionableForAccessibility()>();

        if $z2 != 0 goto label5;

        $z3 = specialinvoke r0.<android.view.View: boolean hasListenersForAccessibility()>();

        if $z3 != 0 goto label5;

        $r2 = virtualinvoke r0.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if $r2 != null goto label5;

        $i3 = virtualinvoke r0.<android.view.View: int getAccessibilityLiveRegion()>();

        if $i3 == 0 goto label7;

     label5:
        z0 = 1;

     label6:
        return z0;

     label7:
        z0 = 0;

        goto label6;
    }

    public boolean isInEditMode()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    public boolean isInLayout()
    {
        android.view.View r0;
        android.view.ViewRootImpl r1;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.ViewRootImpl: boolean isInLayout()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isInScrollingContainer()
    {
        android.view.View r0;
        android.view.ViewParent r1;
        boolean $z0, $z1;
        android.view.ViewGroup $r2;

        r0 := @this: android.view.View;

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        if r1 == null goto label3;

        $z0 = r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        $r2 = (android.view.ViewGroup) r1;

        $z1 = virtualinvoke $r2.<android.view.ViewGroup: boolean shouldDelayChildPressedState()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r1 = interfaceinvoke r1.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label1;

     label3:
        return 0;
    }

    public boolean isInTouchMode()
    {
        android.view.View r0;
        android.view.View$AttachInfo $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z1 = $r2.<android.view.View$AttachInfo: boolean mInTouchMode>;

        return $z1;

     label1:
        $z0 = staticinvoke <android.view.ViewRootImpl: boolean isInTouchMode()>();

        return $z0;
    }

    public boolean isLaidOut()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags3>;

        $i1 = 4 & $i0;

        if $i1 != 4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isLayoutDirectionInherited()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getRawLayoutDirection()>();

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isLayoutDirectionResolved()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 32 & $i0;

        if $i1 != 32 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isLayoutRequested()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 4096 & $i0;

        if $i1 != 4096 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isLayoutRtl()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isLongClickable()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 2097152 & $i0;

        if $i1 != 2097152 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOpaque()
    {
        android.view.View r0;
        int $i0, $i1;
        float $f0;
        byte $b2;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 25165824 & $i0;

        if $i1 != 25165824 goto label1;

        $f0 = specialinvoke r0.<android.view.View: float getFinalAlpha()>();

        $b2 = $f0 cmpl 1.0F;

        if $b2 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isPaddingOffsetRequired()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    public boolean isPaddingRelative()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mUserPaddingStart>;

        if $i0 != -2147483648 goto label1;

        $i1 = r0.<android.view.View: int mUserPaddingEnd>;

        if $i1 == -2147483648 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isPaddingResolved()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 536870912 & $i0;

        if $i1 != 536870912 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isPressed()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 16384 & $i0;

        if $i1 != 16384 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRootNamespace()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 8 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSaveEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 65536 & $i0;

        if $i1 == 65536 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSaveFromParentEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 536870912 & $i0;

        if $i1 == 536870912 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isScrollContainer()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 1048576 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isScrollbarFadingEnabled()
    {
        android.view.View r0;
        android.view.View$ScrollabilityCache $r1, $r2;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $z0 = $r2.<android.view.View$ScrollabilityCache: boolean fadeScrollBars>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSelected()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 4 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isShown()
    {
        android.view.View r0, r1;
        android.view.ViewParent r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 = r0;

     label1:
        $i0 = r1.<android.view.View: int mViewFlags>;

        $i1 = 12 & $i0;

        if $i1 == 0 goto label3;

     label2:
        return 0;

     label3:
        r2 = r1.<android.view.View: android.view.ViewParent mParent>;

        if r2 == null goto label2;

        $z0 = r2 instanceof android.view.View;

        if $z0 != 0 goto label4;

        return 1;

     label4:
        r1 = (android.view.View) r2;

        if r1 != null goto label1;

        return 0;
    }

    public boolean isSoundEffectsEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 134217728 & $i0;

        if 134217728 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTextAlignmentInherited()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getRawTextAlignment()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTextAlignmentResolved()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 65536 & $i0;

        if $i1 != 65536 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTextDirectionInherited()
    {
        android.view.View r0;
        int $i0;

        r0 := @this: android.view.View;

        $i0 = virtualinvoke r0.<android.view.View: int getRawTextDirection()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTextDirectionResolved()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 512 & $i0;

        if $i1 != 512 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isVerticalFadingEdgeEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 8192 & $i0;

        if $i1 != 8192 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isVerticalScrollBarEnabled()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 512 & $i0;

        if $i1 != 512 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isVerticalScrollBarHidden()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    protected boolean isVisibleToUser()
    {
        android.view.View r0;
        boolean $z0;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isVisibleToUser(android.graphics.Rect)>(null);

        return $z0;
    }

    protected boolean isVisibleToUser(android.graphics.Rect)
    {
        android.view.View r0, r5;
        android.graphics.Rect r1, r3;
        java.lang.Object r2;
        android.graphics.Point r4;
        android.view.View$AttachInfo $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i7;
        boolean $z0, $z1, $z2;
        byte $b5, $b6;
        float $f0, $f1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r6 == null goto label1;

        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r7.<android.view.View$AttachInfo: int mWindowVisibility>;

        if $i0 == 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = r0;

     label3:
        $z0 = r2 instanceof android.view.View;

        if $z0 == 0 goto label4;

        r5 = (android.view.View) r2;

        $f0 = virtualinvoke r5.<android.view.View: float getAlpha()>();

        $b5 = $f0 cmpg 0.0F;

        if $b5 <= 0 goto label1;

        $f1 = virtualinvoke r5.<android.view.View: float getTransitionAlpha()>();

        $b6 = $f1 cmpg 0.0F;

        if $b6 <= 0 goto label1;

        $i7 = virtualinvoke r5.<android.view.View: int getVisibility()>();

        if $i7 != 0 goto label1;

        r2 = r5.<android.view.View: android.view.ViewParent mParent>;

        goto label3;

     label4:
        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r3 = $r8.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect>;

        $r9 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r4 = $r9.<android.view.View$AttachInfo: android.graphics.Point mPoint>;

        $z1 = virtualinvoke r0.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>(r3, r4);

        if $z1 == 0 goto label1;

        if r1 == null goto label5;

        $i1 = r4.<android.graphics.Point: int x>;

        $i4 = neg $i1;

        $i2 = r4.<android.graphics.Point: int y>;

        $i3 = neg $i2;

        virtualinvoke r3.<android.graphics.Rect: void offset(int,int)>($i4, $i3);

        $z2 = virtualinvoke r1.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r3);

        return $z2;

     label5:
        return 1;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.view.View r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    public void layout(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        boolean z0, $z1;
        android.view.View$ListenerInfo r1;
        java.util.ArrayList r2, $r4, $r6;
        android.view.ViewParent $r3;
        java.lang.Object $r5, $r7;
        android.view.View$OnLayoutChangeListener $r8;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i10 = r0.<android.view.View: int mPrivateFlags3>;

        $i11 = 8 & $i10;

        if $i11 == 0 goto label1;

        $i20 = r0.<android.view.View: int mOldWidthMeasureSpec>;

        $i19 = r0.<android.view.View: int mOldHeightMeasureSpec>;

        virtualinvoke r0.<android.view.View: void onMeasure(int,int)>($i20, $i19);

        $i22 = r0.<android.view.View: int mPrivateFlags3>;

        $i23 = -9 & $i22;

        r0.<android.view.View: int mPrivateFlags3> = $i23;

     label1:
        i4 = r0.<android.view.View: int mLeft>;

        i5 = r0.<android.view.View: int mTop>;

        i6 = r0.<android.view.View: int mBottom>;

        i7 = r0.<android.view.View: int mRight>;

        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z1 = staticinvoke <android.view.View: boolean isLayoutModeOptical(java.lang.Object)>($r3);

        if $z1 == 0 goto label5;

        z0 = specialinvoke r0.<android.view.View: boolean setOpticalFrame(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        if z0 != 0 goto label3;

        $i18 = r0.<android.view.View: int mPrivateFlags>;

        $i21 = 8192 & $i18;

        if $i21 != 8192 goto label6;

     label3:
        virtualinvoke r0.<android.view.View: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $i12 = r0.<android.view.View: int mPrivateFlags>;

        $i14 = -8193 & $i12;

        r0.<android.view.View: int mPrivateFlags> = $i14;

        r1 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r1 == null goto label6;

        $r4 = staticinvoke <android.view.View$ListenerInfo: java.util.ArrayList access$000(android.view.View$ListenerInfo)>(r1);

        if $r4 == null goto label6;

        $r6 = staticinvoke <android.view.View$ListenerInfo: java.util.ArrayList access$000(android.view.View$ListenerInfo)>(r1);

        $r5 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object clone()>();

        r2 = (java.util.ArrayList) $r5;

        i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i9 = 0;

     label4:
        if i9 >= i8 goto label6;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r8 = (android.view.View$OnLayoutChangeListener) $r7;

        interfaceinvoke $r8.<android.view.View$OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>(r0, i0, i1, i2, i3, i4, i5, i7, i6);

        i9 = i9 + 1;

        goto label4;

     label5:
        z0 = virtualinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        goto label2;

     label6:
        $i13 = r0.<android.view.View: int mPrivateFlags>;

        $i16 = -4097 & $i13;

        r0.<android.view.View: int mPrivateFlags> = $i16;

        $i15 = r0.<android.view.View: int mPrivateFlags3>;

        $i17 = 4 | $i15;

        r0.<android.view.View: int mPrivateFlags3> = $i17;

        return;
    }

    public void makeOptionalFitsSystemWindows()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(2048, 2048);

        return;
    }

    public final void measure(int, int)
    {
        android.view.View r0;
        int i0, i1, i3, i5, i6, i7, i8, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i29, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        boolean z0, $z1, $z3;
        long l2, l4, $l9, $l10, $l11, $l12, $l24, $l27, $l28, $l30, $l31, $l33;
        android.graphics.Insets r1;
        android.view.ViewParent $r2;
        android.util.LongSparseLongArray $r3, $r4, $r6, $r7, $r8;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = staticinvoke <android.view.View: boolean isLayoutModeOptical(java.lang.Object)>(r0);

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z1 = staticinvoke <android.view.View: boolean isLayoutModeOptical(java.lang.Object)>($r2);

        if z0 == $z1 goto label03;

        r1 = virtualinvoke r0.<android.view.View: android.graphics.Insets getOpticalInsets()>();

        $i38 = r1.<android.graphics.Insets: int left>;

        $i39 = r1.<android.graphics.Insets: int right>;

        i7 = $i38 + $i39;

        $i40 = r1.<android.graphics.Insets: int top>;

        $i37 = r1.<android.graphics.Insets: int bottom>;

        i8 = $i40 + $i37;

        if z0 == 0 goto label01;

        i7 = neg i7;

     label01:
        i0 = staticinvoke <android.view.View$MeasureSpec: int adjust(int,int)>(i0, i7);

        if z0 == 0 goto label02;

        i8 = neg i8;

     label02:
        i1 = staticinvoke <android.view.View$MeasureSpec: int adjust(int,int)>(i1, i8);

     label03:
        $l10 = (long) i0;

        $l11 = $l10 << 32;

        $l9 = (long) i1;

        $l12 = 4294967295L & $l9;

        l2 = $l11 | $l12;

        $r3 = r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache>;

        if $r3 != null goto label04;

        $r8 = new android.util.LongSparseLongArray;

        specialinvoke $r8.<android.util.LongSparseLongArray: void <init>(int)>(2);

        r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache> = $r8;

     label04:
        $i13 = r0.<android.view.View: int mPrivateFlags>;

        $i15 = 4096 & $i13;

        if $i15 == 4096 goto label05;

        i5 = r0.<android.view.View: int mOldWidthMeasureSpec>;

        if i0 != i5 goto label05;

        i6 = r0.<android.view.View: int mOldHeightMeasureSpec>;

        if i1 == i6 goto label12;

     label05:
        $i14 = r0.<android.view.View: int mPrivateFlags>;

        $i16 = -2049 & $i14;

        r0.<android.view.View: int mPrivateFlags> = $i16;

        virtualinvoke r0.<android.view.View: boolean resolveRtlPropertiesIfNeeded()>();

        $i18 = r0.<android.view.View: int mPrivateFlags>;

        $i17 = 4096 & $i18;

        if $i17 != 4096 goto label09;

        i3 = -1;

     label06:
        if i3 < 0 goto label07;

        $z3 = <android.view.View: boolean sIgnoreMeasureCache>;

        if $z3 == 0 goto label10;

     label07:
        virtualinvoke r0.<android.view.View: void onMeasure(int,int)>(i0, i1);

        $i21 = r0.<android.view.View: int mPrivateFlags3>;

        $i22 = -9 & $i21;

        r0.<android.view.View: int mPrivateFlags3> = $i22;

     label08:
        $i19 = r0.<android.view.View: int mPrivateFlags>;

        $i20 = 2048 & $i19;

        if $i20 == 2048 goto label11;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onMeasure() did not set the measured dimension by calling setMeasuredDimension()");

        throw $r5;

     label09:
        $r4 = r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache>;

        i3 = virtualinvoke $r4.<android.util.LongSparseLongArray: int indexOfKey(long)>(l2);

        goto label06;

     label10:
        $r7 = r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache>;

        l4 = virtualinvoke $r7.<android.util.LongSparseLongArray: long valueAt(int)>(i3);

        $l33 = l4 >> 32;

        $i36 = (int) $l33;

        $i32 = (int) l4;

        virtualinvoke r0.<android.view.View: void setMeasuredDimension(int,int)>($i36, $i32);

        $i35 = r0.<android.view.View: int mPrivateFlags3>;

        $i34 = 8 | $i35;

        r0.<android.view.View: int mPrivateFlags3> = $i34;

        goto label08;

     label11:
        $i25 = r0.<android.view.View: int mPrivateFlags>;

        $i26 = 8192 | $i25;

        r0.<android.view.View: int mPrivateFlags> = $i26;

     label12:
        r0.<android.view.View: int mOldWidthMeasureSpec> = i0;

        r0.<android.view.View: int mOldHeightMeasureSpec> = i1;

        $r6 = r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache>;

        $i23 = r0.<android.view.View: int mMeasuredWidth>;

        $l24 = (long) $i23;

        $l28 = $l24 << 32;

        $i29 = r0.<android.view.View: int mMeasuredHeight>;

        $l30 = (long) $i29;

        $l27 = 4294967295L & $l30;

        $l31 = $l28 | $l27;

        virtualinvoke $r6.<android.util.LongSparseLongArray: void put(long,long)>(l2, $l31);

        return;
    }

    void needGlobalAttributesUpdate(boolean)
    {
        android.view.View r0;
        boolean z0, $z1, $z2, $z3;
        android.view.View$AttachInfo r1;
        int $i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label2;

        $z1 = r1.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes>;

        if $z1 != 0 goto label2;

        if z0 != 0 goto label1;

        $z2 = r1.<android.view.View$AttachInfo: boolean mKeepScreenOn>;

        if $z2 != 0 goto label1;

        $i0 = r1.<android.view.View$AttachInfo: int mSystemUiVisibility>;

        if $i0 != 0 goto label1;

        $z3 = r1.<android.view.View$AttachInfo: boolean mHasSystemUiListeners>;

        if $z3 == 0 goto label2;

     label1:
        r1.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes> = 1;

     label2:
        return;
    }

    void notifyGlobalFocusCleared(android.view.View)
    {
        android.view.View r0, r1;
        android.view.View$AttachInfo $r2, $r3;
        android.view.ViewTreeObserver $r4;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        if r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.ViewTreeObserver mTreeObserver>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void dispatchOnGlobalFocusChange(android.view.View,android.view.View)>(r1, null);

     label1:
        return;
    }

    public void notifySubtreeAccessibilityStateChangedIfNeeded()
    {
        android.view.View r0;
        java.lang.AbstractMethodError r1, $r6;
        android.content.Context $r2;
        android.view.accessibility.AccessibilityManager $r3;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.view.ViewParent $r4, $r5, $r8;
        java.lang.StringBuilder $r7, $r10, $r13;
        java.lang.Class $r9;
        java.lang.String $r11, $r12;

        r0 := @this: android.view.View;

        $r2 = r0.<android.view.View: android.content.Context mContext>;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = 134217728 & $i0;

        if $i1 != 0 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = 134217728 | $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label1;

     label3:
        $r5 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r5.<android.view.ViewParent: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>(r0, r0, 1);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r12, r1);

        return;

        catch java.lang.AbstractMethodError from label3 to label4 with label5;
    }

    public void notifyViewAccessibilityStateChangedIfNeeded(int)
    {
        android.view.View r0;
        int i0;
        android.content.Context $r1;
        android.view.accessibility.AccessibilityManager $r2;
        boolean $z0;
        android.view.View$SendViewStateChangedAccessibilityEvent $r3, $r4, $r5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.View: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r1);

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<android.view.View: android.view.View$SendViewStateChangedAccessibilityEvent mSendViewStateChangedAccessibilityEvent>;

        if $r3 != null goto label2;

        $r5 = new android.view.View$SendViewStateChangedAccessibilityEvent;

        specialinvoke $r5.<android.view.View$SendViewStateChangedAccessibilityEvent: void <init>(android.view.View,android.view.View$1)>(r0, null);

        r0.<android.view.View: android.view.View$SendViewStateChangedAccessibilityEvent mSendViewStateChangedAccessibilityEvent> = $r5;

     label2:
        $r4 = r0.<android.view.View: android.view.View$SendViewStateChangedAccessibilityEvent mSendViewStateChangedAccessibilityEvent>;

        virtualinvoke $r4.<android.view.View$SendViewStateChangedAccessibilityEvent: void runOrPost(int)>(i0);

        return;
    }

    public void offsetLeftAndRight(int)
    {
        android.view.View r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1;
        android.view.ViewParent r1;
        android.graphics.Rect r2;
        android.view.View$TransformationInfo $r3, $r9;
        android.view.DisplayList $r4, $r5, $r6;
        float $f0;
        android.view.View$AttachInfo $r7, $r8;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        if i0 == 0 goto label04;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r3 == null goto label01;

        $r9 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $z1 = staticinvoke <android.view.View$TransformationInfo: boolean access$1600(android.view.View$TransformationInfo)>($r9);

        if $z1 == 0 goto label05;

     label01:
        z0 = 1;

     label02:
        if z0 == 0 goto label09;

        $r6 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r6 == null goto label06;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 0);

     label03:
        $i3 = r0.<android.view.View: int mLeft>;

        $i4 = i0 + $i3;

        r0.<android.view.View: int mLeft> = $i4;

        $i5 = r0.<android.view.View: int mRight>;

        $i6 = i0 + $i5;

        r0.<android.view.View: int mRight> = $i6;

        $r4 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r4 == null goto label10;

        $r5 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $f0 = (float) i0;

        virtualinvoke $r5.<android.view.DisplayList: void offsetLeftAndRight(float)>($f0);

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 0);

     label04:
        return;

     label05:
        z0 = 0;

        goto label02;

     label06:
        r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        if r1 == null goto label03;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r8 == null goto label03;

        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = $r7.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect>;

        if i0 >= 0 goto label08;

        $i11 = r0.<android.view.View: int mLeft>;

        i1 = i0 + $i11;

        i2 = r0.<android.view.View: int mRight>;

     label07:
        $i12 = i2 - i1;

        $i10 = r0.<android.view.View: int mBottom>;

        $i7 = r0.<android.view.View: int mTop>;

        $i9 = $i10 - $i7;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i12, $i9);

        interfaceinvoke r1.<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>(r0, r2);

        goto label03;

     label08:
        i1 = r0.<android.view.View: int mLeft>;

        $i8 = r0.<android.view.View: int mRight>;

        i2 = i0 + $i8;

        goto label07;

     label09:
        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 0);

        goto label03;

     label10:
        if z0 != 0 goto label11;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

     label11:
        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

        return;
    }

    public void offsetTopAndBottom(int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0, $z1;
        android.view.ViewParent r1;
        android.graphics.Rect r2;
        android.view.View$TransformationInfo $r3, $r9;
        android.view.DisplayList $r4, $r5, $r7;
        float $f0;
        android.view.View$AttachInfo $r6, $r8;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        if i0 == 0 goto label04;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r3 == null goto label01;

        $r9 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $z1 = staticinvoke <android.view.View$TransformationInfo: boolean access$1600(android.view.View$TransformationInfo)>($r9);

        if $z1 == 0 goto label05;

     label01:
        z0 = 1;

     label02:
        if z0 == 0 goto label09;

        $r7 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r7 == null goto label06;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 0);

     label03:
        $i4 = r0.<android.view.View: int mTop>;

        $i5 = i0 + $i4;

        r0.<android.view.View: int mTop> = $i5;

        $i6 = r0.<android.view.View: int mBottom>;

        $i7 = i0 + $i6;

        r0.<android.view.View: int mBottom> = $i7;

        $r4 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r4 == null goto label10;

        $r5 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $f0 = (float) i0;

        virtualinvoke $r5.<android.view.DisplayList: void offsetTopAndBottom(float)>($f0);

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 0);

     label04:
        return;

     label05:
        z0 = 0;

        goto label02;

     label06:
        r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        if r1 == null goto label03;

        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r6 == null goto label03;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = $r8.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect>;

        if i0 >= 0 goto label08;

        $i13 = r0.<android.view.View: int mTop>;

        i1 = i0 + $i13;

        i2 = r0.<android.view.View: int mBottom>;

        i3 = i0;

     label07:
        $i9 = r0.<android.view.View: int mRight>;

        $i10 = r0.<android.view.View: int mLeft>;

        $i11 = $i9 - $i10;

        $i12 = i2 - i1;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, i3, $i11, $i12);

        interfaceinvoke r1.<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>(r0, r2);

        goto label03;

     label08:
        i1 = r0.<android.view.View: int mTop>;

        $i8 = r0.<android.view.View: int mBottom>;

        i2 = i0 + $i8;

        i3 = 0;

        goto label07;

     label09:
        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 0);

        goto label03;

     label10:
        if z0 != 0 goto label11;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

     label11:
        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

        return;
    }

    protected void onAnimationEnd()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = -65537 & $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        return;
    }

    protected void onAnimationStart()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 65536 | $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        return;
    }

    protected void onAttachedToWindow()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        android.view.DisplayList $r1, $r2;
        android.view.inputmethod.InputMethodManager $r3;
        android.view.ViewParent $r4;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 512 & $i0;

        if $i1 == 0 goto label1;

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r4.<android.view.ViewParent: void requestTransparentRegion(android.view.View)>(r0);

     label1:
        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 134217728 & $i2;

        if $i3 == 0 goto label2;

        specialinvoke r0.<android.view.View: boolean initialAwakenScrollBars()>();

        $i6 = r0.<android.view.View: int mPrivateFlags>;

        $i7 = -134217729 & $i6;

        r0.<android.view.View: int mPrivateFlags> = $i7;

     label2:
        $i4 = r0.<android.view.View: int mPrivateFlags3>;

        $i5 = -5 & $i4;

        r0.<android.view.View: int mPrivateFlags3> = $i5;

        virtualinvoke r0.<android.view.View: void jumpDrawablesToCurrentState()>();

        virtualinvoke r0.<android.view.View: void resetSubtreeAccessibilityStateChanged()>();

        $z0 = virtualinvoke r0.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void focusIn(android.view.View)>(r0);

     label3:
        $r1 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r1 == null goto label4;

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r2.<android.view.DisplayList: void clearDirty()>();

     label4:
        return;
    }

    public void onCancelPendingInputEvents()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        specialinvoke r0.<android.view.View: void removePerformClickCallback()>();

        virtualinvoke r0.<android.view.View: void cancelLongPress()>();

        $i0 = r0.<android.view.View: int mPrivateFlags3>;

        $i1 = 16 | $i0;

        r0.<android.view.View: int mPrivateFlags3> = $i1;

        return;
    }

    public boolean onCheckIsTextEditor()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return 0;
    }

    public void onCloseSystemDialogs(java.lang.String)
    {
        android.view.View r0;
        java.lang.String r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.String;

        return;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.view.View r0;
        android.content.res.Configuration r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.content.res.Configuration;

        return;
    }

    protected void onCreateContextMenu(android.view.ContextMenu)
    {
        android.view.View r0;
        android.view.ContextMenu r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.ContextMenu;

        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.view.View r0, $r8;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        short s3;
        int[] r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.view.View$AttachInfo $r3, $r5;
        int[][] $r4;
        android.view.ViewParent $r6, $r7;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i5 = r0.<android.view.View: int mViewFlags>;

        $i6 = 4194304 & $i5;

        if $i6 != 4194304 goto label02;

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z4 = $r6 instanceof android.view.View;

        if $z4 == 0 goto label02;

        $r7 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r8 = (android.view.View) $r7;

        r1 = virtualinvoke $r8.<android.view.View: int[] onCreateDrawableState(int)>(i0);

     label01:
        return r1;

     label02:
        i1 = r0.<android.view.View: int mPrivateFlags>;

        i2 = i1 & 16384;

        s3 = 0;

        if i2 == 0 goto label03;

        s3 = 0 | 16;

     label03:
        $i7 = r0.<android.view.View: int mViewFlags>;

        $i8 = 32 & $i7;

        if $i8 != 0 goto label04;

        s3 = s3 | 8;

     label04:
        $z0 = virtualinvoke r0.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label05;

        s3 = s3 | 4;

     label05:
        $i9 = i1 & 4;

        if $i9 == 0 goto label06;

        s3 = s3 | 2;

     label06:
        $z1 = virtualinvoke r0.<android.view.View: boolean hasWindowFocus()>();

        if $z1 == 0 goto label07;

        s3 = s3 | 1;

     label07:
        $i10 = 1073741824 & i1;

        if $i10 == 0 goto label08;

        s3 = s3 | 32;

     label08:
        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label09;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z2 = $r5.<android.view.View$AttachInfo: boolean mHardwareAccelerationRequested>;

        if $z2 == 0 goto label09;

        $z3 = staticinvoke <android.view.HardwareRenderer: boolean isAvailable()>();

        if $z3 == 0 goto label09;

        s3 = s3 | 64;

     label09:
        $i11 = 268435456 & i1;

        if $i11 == 0 goto label10;

        s3 = s3 | 128;

     label10:
        i4 = r0.<android.view.View: int mPrivateFlags2>;

        $i13 = i4 & 1;

        if $i13 == 0 goto label11;

        s3 = s3 | 256;

     label11:
        $i12 = i4 & 2;

        if $i12 == 0 goto label12;

        s3 = s3 | 512;

     label12:
        $r4 = <android.view.View: int[][] VIEW_STATE_SETS>;

        r1 = $r4[s3];

        if i0 == 0 goto label01;

        if r1 == null goto label14;

        $i14 = lengthof r1;

        $i16 = i0 + $i14;

        r2 = newarray (int)[$i16];

        $i15 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, $i15);

     label13:
        return r2;

     label14:
        r2 = newarray (int)[i0];

        goto label13;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.view.View r0;
        android.view.inputmethod.EditorInfo r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        return null;
    }

    protected void onDetachedFromWindow()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = -67108865 & $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        $i2 = r0.<android.view.View: int mPrivateFlags3>;

        $i3 = -5 & $i2;

        r0.<android.view.View: int mPrivateFlags3> = $i3;

        specialinvoke r0.<android.view.View: void removeUnsetPressCallback()>();

        specialinvoke r0.<android.view.View: void removeLongPressCallback()>();

        specialinvoke r0.<android.view.View: void removePerformClickCallback()>();

        specialinvoke r0.<android.view.View: void removeSendViewScrolledAccessibilityEventCallback()>();

        virtualinvoke r0.<android.view.View: void destroyDrawingCache()>();

        virtualinvoke r0.<android.view.View: boolean destroyLayer(boolean)>(0);

        specialinvoke r0.<android.view.View: void cleanupDraw()>();

        r0.<android.view.View: android.view.animation.Animation mCurrentAnimation> = null;

        return;
    }

    protected void onDisplayHint(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        return;
    }

    public boolean onDragEvent(android.view.DragEvent)
    {
        android.view.View r0;
        android.view.DragEvent r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.DragEvent;

        return 0;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.view.View r0;
        android.graphics.Canvas r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Canvas;

        return;
    }

    protected void onDrawHorizontalScrollBar(android.graphics.Canvas, android.graphics.drawable.Drawable, int, int, int, int)
    {
        android.view.View r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2;
        int i0, i1, i2, i3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    protected final void onDrawScrollBars(android.graphics.Canvas)
    {
        android.view.View r0;
        android.graphics.Canvas r1;
        android.view.View$ScrollabilityCache r2;
        int i0, i1, i2, i3, i4, i5, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53;
        boolean z0, z1, z2, $z3, $z4;
        android.widget.ScrollBarDrawable r3, $r4, $r10;
        byte b6;
        float[] r5, $r9, $r11;
        android.graphics.Interpolator $r6;
        android.graphics.Interpolator$Result $r7, $r8;
        float $f0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        if r2 == null goto label01;

        i0 = r2.<android.view.View$ScrollabilityCache: int state>;

        if i0 != 0 goto label02;

     label01:
        return;

     label02:
        if i0 != 2 goto label18;

        $r9 = r2.<android.view.View$ScrollabilityCache: float[] interpolatorValues>;

        if $r9 != null goto label03;

        $r11 = newarray (float)[1];

        r2.<android.view.View$ScrollabilityCache: float[] interpolatorValues> = $r11;

     label03:
        r5 = r2.<android.view.View$ScrollabilityCache: float[] interpolatorValues>;

        $r6 = r2.<android.view.View$ScrollabilityCache: android.graphics.Interpolator scrollBarInterpolator>;

        $r7 = virtualinvoke $r6.<android.graphics.Interpolator: android.graphics.Interpolator$Result timeToValues(float[])>(r5);

        $r8 = <android.graphics.Interpolator$Result: android.graphics.Interpolator$Result FREEZE_END>;

        if $r7 != $r8 goto label17;

        r2.<android.view.View$ScrollabilityCache: int state> = 0;

     label04:
        z0 = 1;

     label05:
        i1 = r0.<android.view.View: int mViewFlags>;

        $i20 = i1 & 256;

        if $i20 != 256 goto label19;

        z1 = 1;

     label06:
        $i19 = i1 & 512;

        if $i19 != 512 goto label20;

        $z4 = virtualinvoke r0.<android.view.View: boolean isVerticalScrollBarHidden()>();

        if $z4 != 0 goto label20;

        z2 = 1;

     label07:
        if z2 != 0 goto label08;

        if z1 == 0 goto label01;

     label08:
        $i21 = r0.<android.view.View: int mRight>;

        $i22 = r0.<android.view.View: int mLeft>;

        i2 = $i21 - $i22;

        $i25 = r0.<android.view.View: int mBottom>;

        $i24 = r0.<android.view.View: int mTop>;

        i3 = $i25 - $i24;

        r3 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        i4 = r0.<android.view.View: int mScrollX>;

        i5 = r0.<android.view.View: int mScrollY>;

        $i23 = 33554432 & i1;

        if $i23 != 0 goto label21;

        b6 = -1;

     label09:
        if z1 == 0 goto label12;

        i14 = virtualinvoke r3.<android.widget.ScrollBarDrawable: int getSize(boolean)>(0);

        if i14 > 0 goto label10;

        i14 = r2.<android.view.View$ScrollabilityCache: int scrollBarSize>;

     label10:
        $i43 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollRange()>();

        $i42 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollOffset()>();

        $i41 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollExtent()>();

        virtualinvoke r3.<android.widget.ScrollBarDrawable: void setParameters(int,int,int,boolean)>($i43, $i42, $i41, 0);

        if z2 == 0 goto label22;

        i13 = virtualinvoke r0.<android.view.View: int getVerticalScrollbarWidth()>();

     label11:
        $i40 = i5 + i3;

        $i45 = $i40 - i14;

        $i47 = r0.<android.view.View: int mUserPaddingBottom>;

        $i46 = b6 & $i47;

        i16 = $i45 - $i46;

        $i44 = r0.<android.view.View: int mPaddingLeft>;

        $i51 = b6 & $i44;

        i15 = i4 + $i51;

        $i48 = i4 + i2;

        $i50 = r0.<android.view.View: int mUserPaddingRight>;

        $i49 = b6 & $i50;

        $i52 = $i48 - $i49;

        i18 = $i52 - i13;

        i17 = i16 + i14;

        virtualinvoke r0.<android.view.View: void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>(r1, r3, i15, i16, i18, i17);

        if z0 == 0 goto label12;

        virtualinvoke r0.<android.view.View: void invalidate(int,int,int,int)>(i15, i16, i18, i17);

     label12:
        if z2 == 0 goto label01;

        i7 = virtualinvoke r3.<android.widget.ScrollBarDrawable: int getSize(boolean)>(1);

        if i7 > 0 goto label13;

        i7 = r2.<android.view.View$ScrollabilityCache: int scrollBarSize>;

     label13:
        $i28 = virtualinvoke r0.<android.view.View: int computeVerticalScrollRange()>();

        $i29 = virtualinvoke r0.<android.view.View: int computeVerticalScrollOffset()>();

        $i26 = virtualinvoke r0.<android.view.View: int computeVerticalScrollExtent()>();

        virtualinvoke r3.<android.widget.ScrollBarDrawable: void setParameters(int,int,int,boolean)>($i28, $i29, $i26, 1);

        i8 = r0.<android.view.View: int mVerticalScrollbarPosition>;

        if i8 != 0 goto label14;

        $z3 = virtualinvoke r0.<android.view.View: boolean isLayoutRtl()>();

        if $z3 == 0 goto label23;

        i8 = 1;

     label14:
        tableswitch(i8)
        {
            case 1: goto label24;
            default: goto label15;
        };

     label15:
        $i27 = i4 + i2;

        $i30 = $i27 - i7;

        $i32 = r0.<android.view.View: int mUserPaddingRight>;

        $i33 = b6 & $i32;

        i10 = $i30 - $i33;

     label16:
        $i31 = r0.<android.view.View: int mPaddingTop>;

        $i36 = b6 & $i31;

        i9 = i5 + $i36;

        i12 = i10 + i7;

        $i35 = i5 + i3;

        $i37 = r0.<android.view.View: int mUserPaddingBottom>;

        $i34 = b6 & $i37;

        i11 = $i35 - $i34;

        virtualinvoke r0.<android.view.View: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>(r1, r3, i10, i9, i12, i11);

        if z0 == 0 goto label01;

        virtualinvoke r0.<android.view.View: void invalidate(int,int,int,int)>(i10, i9, i12, i11);

        return;

     label17:
        $r10 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        $f0 = r5[0];

        $i53 = staticinvoke <java.lang.Math: int round(float)>($f0);

        virtualinvoke $r10.<android.widget.ScrollBarDrawable: void setAlpha(int)>($i53);

        goto label04;

     label18:
        $r4 = r2.<android.view.View$ScrollabilityCache: android.widget.ScrollBarDrawable scrollBar>;

        virtualinvoke $r4.<android.widget.ScrollBarDrawable: void setAlpha(int)>(255);

        z0 = 0;

        goto label05;

     label19:
        z1 = 0;

        goto label06;

     label20:
        z2 = 0;

        goto label07;

     label21:
        b6 = 0;

        goto label09;

     label22:
        i13 = 0;

        goto label11;

     label23:
        i8 = 2;

        goto label14;

     label24:
        $i39 = r0.<android.view.View: int mUserPaddingLeft>;

        $i38 = b6 & $i39;

        i10 = i4 + $i38;

        goto label16;
    }

    protected void onDrawVerticalScrollBar(android.graphics.Canvas, android.graphics.drawable.Drawable, int, int, int, int)
    {
        android.view.View r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2;
        int i0, i1, i2, i3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public boolean onFilterTouchEventForSecurity(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 1024 & $i0;

        if $i1 == 0 goto label1;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getFlags()>();

        $i3 = 1 & $i2;

        if $i3 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    protected void onFinishInflate()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return;
    }

    public void onFinishTemporaryDetach()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.view.View r0;
        boolean z0, $z1, $z2, $z3;
        int i0;
        android.graphics.Rect r1;
        android.view.inputmethod.InputMethodManager r2;
        android.view.View$ListenerInfo r3;
        android.view.View$AttachInfo $r4, $r5, $r9, $r10, $r11, $r12;
        android.view.KeyEvent$DispatcherState $r6;
        android.view.View$OnFocusChangeListener $r7, $r8;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        if z0 == 0 goto label7;

        virtualinvoke r0.<android.view.View: void sendAccessibilityEvent(int)>(8);

     label1:
        r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if z0 != 0 goto label8;

        $z2 = virtualinvoke r0.<android.view.View: boolean isPressed()>();

        if $z2 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(0);

     label2:
        if r2 == null goto label3;

        $r12 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r12 == null goto label3;

        $r11 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z3 = $r11.<android.view.View$AttachInfo: boolean mHasWindowFocus>;

        if $z3 == 0 goto label3;

        virtualinvoke r2.<android.view.inputmethod.InputMethodManager: void focusOut(android.view.View)>(r0);

     label3:
        virtualinvoke r0.<android.view.View: void onFocusLost()>();

     label4:
        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        r3 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r3 == null goto label5;

        $r7 = r3.<android.view.View$ListenerInfo: android.view.View$OnFocusChangeListener mOnFocusChangeListener>;

        if $r7 == null goto label5;

        $r8 = r3.<android.view.View$ListenerInfo: android.view.View$OnFocusChangeListener mOnFocusChangeListener>;

        interfaceinvoke $r8.<android.view.View$OnFocusChangeListener: void onFocusChange(android.view.View,boolean)>(r0, z0);

     label5:
        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r4 == null goto label6;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r6 = $r5.<android.view.View$AttachInfo: android.view.KeyEvent$DispatcherState mKeyDispatchState>;

        virtualinvoke $r6.<android.view.KeyEvent$DispatcherState: void reset(java.lang.Object)>(r0);

     label6:
        return;

     label7:
        virtualinvoke r0.<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        goto label1;

     label8:
        if r2 == null goto label4;

        $r9 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r9 == null goto label4;

        $r10 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z1 = $r10.<android.view.View$AttachInfo: boolean mHasWindowFocus>;

        if $z1 == 0 goto label4;

        virtualinvoke r2.<android.view.inputmethod.InputMethodManager: void focusIn(android.view.View)>(r0);

        goto label4;
    }

    protected void onFocusLost()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        specialinvoke r0.<android.view.View: void resetPressedState()>();

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public void onHoverChanged(boolean)
    {
        android.view.View r0;
        boolean z0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        int i0;
        boolean $z0, $z1, $z3, $z4, $z5, $z6;
        android.view.View$AttachInfo $r2, $r3;
        android.view.ViewRootImpl $r4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $z0 = r0.<android.view.View: boolean mSendingHoverAccessibilityEvents>;

        if $z0 != 0 goto label4;

        if i0 == 9 goto label1;

        if i0 != 7 goto label2;

     label1:
        $z5 = virtualinvoke r0.<android.view.View: boolean hasHoveredChild()>();

        if $z5 != 0 goto label2;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z6 = virtualinvoke r0.<android.view.View: boolean pointInView(float,float)>($f2, $f3);

        if $z6 == 0 goto label2;

        specialinvoke r0.<android.view.View: void sendAccessibilityHoverEvent(int)>(128);

        r0.<android.view.View: boolean mSendingHoverAccessibilityEvents> = 1;

     label2:
        $z1 = specialinvoke r0.<android.view.View: boolean isHoverable()>();

        if $z1 == 0 goto label8;

        tableswitch(i0)
        {
            case 9: goto label6;
            case 10: goto label7;
            default: goto label3;
        };

     label3:
        specialinvoke r0.<android.view.View: boolean dispatchGenericMotionEventInternal(android.view.MotionEvent)>(r1);

        return 1;

     label4:
        if i0 == 10 goto label5;

        if i0 != 2 goto label2;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z4 = virtualinvoke r0.<android.view.View: boolean pointInView(float,float)>($f0, $f1);

        if $z4 != 0 goto label2;

     label5:
        r0.<android.view.View: boolean mSendingHoverAccessibilityEvents> = 0;

        specialinvoke r0.<android.view.View: void sendAccessibilityHoverEvent(int)>(256);

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label2;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z3 = $r3.<android.view.View$AttachInfo: boolean mHasWindowFocus>;

        if $z3 != 0 goto label2;

        $r4 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke $r4.<android.view.ViewRootImpl: void setAccessibilityFocus(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>(null, null);

        goto label2;

     label6:
        virtualinvoke r0.<android.view.View: void setHovered(boolean)>(1);

        goto label3;

     label7:
        virtualinvoke r0.<android.view.View: void setHovered(boolean)>(0);

        goto label3;

     label8:
        return 0;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.View$AccessibilityDelegate $r2, $r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke $r3.<android.view.View$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r0, r1);

        return;

     label1:
        virtualinvoke r0.<android.view.View: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0, $r11;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2, $r8;
        java.util.ArrayList r3, $r9;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;
        android.content.Context $r6;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View$AttachInfo $r10, $r12, $r13;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setSource(android.view.View)>(r0);

        $r4 = class "android/view/View";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r5);

        $r6 = virtualinvoke r0.<android.view.View: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r7);

        $z0 = virtualinvoke r0.<android.view.View: boolean isEnabled()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>($z0);

        $r8 = r0.<android.view.View: java.lang.CharSequence mContentDescription>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r8);

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        lookupswitch($i0)
        {
            case 8: goto label2;
            case 8192: goto label5;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r10 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r10 == null goto label4;

        $r13 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r3 = $r13.<android.view.View$AttachInfo: java.util.ArrayList mTempArrayList>;

     label3:
        $r11 = virtualinvoke r0.<android.view.View: android.view.View getRootView()>();

        virtualinvoke $r11.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r3, 2, 0);

        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i5);

        $i6 = virtualinvoke r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setCurrentItemIndex(int)>($i6);

        $r12 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r12 == null goto label1;

        virtualinvoke r3.<java.util.ArrayList: void clear()>();

        return;

     label4:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        goto label3;

     label5:
        r2 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r2 == null goto label1;

        $i1 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label1;

        $i2 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionStart()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i2);

        $i3 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionEnd()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i3);

        $i4 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i4);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.view.View$AccessibilityDelegate $r2, $r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke $r3.<android.view.View$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>(r0, r1);

        return;

     label1:
        virtualinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        return;
    }

    void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.View r0, r5, r6, r7, r8, $r19;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.graphics.Rect r2;
        android.view.ViewParent r3;
        java.lang.CharSequence r4, $r15;
        android.view.View$AttachInfo $r10, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r11, $r13, $r20;
        android.content.Context $r12;
        java.lang.Class $r14;
        android.content.res.Resources $r17;
        android.content.res.Resources$NotFoundException $r18;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r10 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = $r10.<android.view.View$AttachInfo: android.graphics.Rect mTmpInvalRect>;

        virtualinvoke r0.<android.view.View: void getDrawingRect(android.graphics.Rect)>(r2);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>(r2);

        virtualinvoke r0.<android.view.View: void getBoundsOnScreen(android.graphics.Rect)>(r2);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>(r2);

        r3 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParentForAccessibility()>();

        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label01;

        $r19 = (android.view.View) r3;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>($r19);

     label01:
        $i0 = r0.<android.view.View: int mID>;

        if $i0 == -1 goto label05;

        r7 = virtualinvoke r0.<android.view.View: android.view.View getRootView()>();

        if r7 != null goto label02;

        r7 = r0;

     label02:
        $i8 = r0.<android.view.View: int mID>;

        r8 = specialinvoke r7.<android.view.View: android.view.View findLabelForView(android.view.View,int)>(r0, $i8);

        if r8 == null goto label03;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)>(r8);

     label03:
        $r16 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i7 = $r16.<android.view.View$AttachInfo: int mAccessibilityFetchFlags>;

        $i10 = 16 & $i7;

        if $i10 == 0 goto label05;

        $i9 = r0.<android.view.View: int mID>;

        $z16 = staticinvoke <android.content.res.Resources: boolean resourceHasPackage(int)>($i9);

        if $z16 == 0 goto label05;

     label04:
        $r17 = virtualinvoke r0.<android.view.View: android.content.res.Resources getResources()>();

        $i11 = r0.<android.view.View: int mID>;

        $r20 = virtualinvoke $r17.<android.content.res.Resources: java.lang.String getResourceName(int)>($i11);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setViewIdResourceName(java.lang.String)>($r20);

     label05:
        $i1 = r0.<android.view.View: int mLabelForId>;

        if $i1 == -1 goto label07;

        r5 = virtualinvoke r0.<android.view.View: android.view.View getRootView()>();

        if r5 != null goto label06;

        r5 = r0;

     label06:
        $i6 = r0.<android.view.View: int mLabelForId>;

        r6 = specialinvoke r5.<android.view.View: android.view.View findViewInsideOutShouldExist(android.view.View,int)>(r0, $i6);

        if r6 == null goto label07;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)>(r6);

     label07:
        $z1 = virtualinvoke r0.<android.view.View: boolean isVisibleToUser()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>($z1);

        $r12 = r0.<android.view.View: android.content.Context mContext>;

        $r11 = virtualinvoke $r12.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)>($r11);

        $r14 = class "android/view/View";

        $r13 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r13);

        $r15 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getContentDescription()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>($r15);

        $z2 = virtualinvoke r0.<android.view.View: boolean isEnabled()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>($z2);

        $z4 = virtualinvoke r0.<android.view.View: boolean isClickable()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>($z4);

        $z3 = virtualinvoke r0.<android.view.View: boolean isFocusable()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>($z3);

        $z6 = virtualinvoke r0.<android.view.View: boolean isFocused()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)>($z6);

        $z5 = virtualinvoke r0.<android.view.View: boolean isAccessibilityFocused()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>($z5);

        $z8 = virtualinvoke r0.<android.view.View: boolean isSelected()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>($z8);

        $z7 = virtualinvoke r0.<android.view.View: boolean isLongClickable()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>($z7);

        $i2 = virtualinvoke r0.<android.view.View: int getAccessibilityLiveRegion()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setLiveRegion(int)>($i2);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8);

        $z9 = virtualinvoke r0.<android.view.View: boolean isFocusable()>();

        if $z9 == 0 goto label08;

        $z14 = virtualinvoke r0.<android.view.View: boolean isFocused()>();

        if $z14 == 0 goto label13;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(2);

     label08:
        $z11 = virtualinvoke r0.<android.view.View: boolean isAccessibilityFocused()>();

        if $z11 != 0 goto label14;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(64);

     label09:
        $z10 = virtualinvoke r0.<android.view.View: boolean isClickable()>();

        if $z10 == 0 goto label10;

        $z13 = virtualinvoke r0.<android.view.View: boolean isEnabled()>();

        if $z13 == 0 goto label10;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(16);

     label10:
        $z12 = virtualinvoke r0.<android.view.View: boolean isLongClickable()>();

        if $z12 == 0 goto label11;

        $z15 = virtualinvoke r0.<android.view.View: boolean isEnabled()>();

        if $z15 == 0 goto label11;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(32);

     label11:
        r4 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r4 == null goto label12;

        $i3 = interfaceinvoke r4.<java.lang.CharSequence: int length()>();

        if $i3 <= 0 goto label12;

        $i4 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionStart()>();

        $i5 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionEnd()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setTextSelection(int,int)>($i4, $i5);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(131072);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(256);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(512);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>(11);

     label12:
        return;

     label13:
        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(1);

        goto label08;

     label14:
        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(128);

        goto label09;

     label15:
        $r18 := @caughtexception;

        goto label05;

        catch android.content.res.Resources$NotFoundException from label04 to label05 with label15;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.view.View r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.view.KeyEvent r1;
        boolean z0, z1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        z0 = staticinvoke <android.view.KeyEvent: boolean isConfirmKey(int)>(i0);

        z1 = 0;

        if z0 == 0 goto label1;

        $i3 = r0.<android.view.View: int mViewFlags>;

        $i4 = 32 & $i3;

        if $i4 != 32 goto label2;

        z1 = 1;

     label1:
        return z1;

     label2:
        $i5 = r0.<android.view.View: int mViewFlags>;

        $i6 = 16384 & $i5;

        if $i6 == 16384 goto label3;

        $i7 = r0.<android.view.View: int mViewFlags>;

        i2 = 2097152 & $i7;

        z1 = 0;

        if i2 != 2097152 goto label1;

     label3:
        i1 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        z1 = 0;

        if i1 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(1);

        specialinvoke r0.<android.view.View: void checkForLongClick(int)>(0);

        return 1;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.view.View r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.view.View r0;
        int i0, i1;
        android.view.KeyEvent r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyPreIme(int, android.view.KeyEvent)
    {
        android.view.View r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.view.View r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.view.View r0;
        int i0, i1, $i2, $i3, $i4;
        android.view.KeyEvent r1;
        boolean z0, z1, z2, z3, $z4;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        z0 = staticinvoke <android.view.KeyEvent: boolean isConfirmKey(int)>(i0);

        z1 = 0;

        if z0 == 0 goto label1;

        $i2 = r0.<android.view.View: int mViewFlags>;

        $i3 = 32 & $i2;

        if $i3 != 32 goto label2;

        z1 = 1;

     label1:
        return z1;

     label2:
        $i4 = r0.<android.view.View: int mViewFlags>;

        i1 = 16384 & $i4;

        z1 = 0;

        if i1 != 16384 goto label1;

        z2 = virtualinvoke r0.<android.view.View: boolean isPressed()>();

        z1 = 0;

        if z2 == 0 goto label1;

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(0);

        z3 = r0.<android.view.View: boolean mHasPerformedLongPress>;

        z1 = 0;

        if z3 != 0 goto label1;

        specialinvoke r0.<android.view.View: void removeLongPressCallback()>();

        $z4 = virtualinvoke r0.<android.view.View: boolean performClick()>();

        return $z4;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.view.View r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.view.View r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.view.View: int getSuggestedMinimumWidth()>();

        $i3 = staticinvoke <android.view.View: int getDefaultSize(int,int)>($i2, i0);

        $i4 = virtualinvoke r0.<android.view.View: int getSuggestedMinimumHeight()>();

        $i5 = staticinvoke <android.view.View: int getDefaultSize(int,int)>($i4, i1);

        virtualinvoke r0.<android.view.View: void setMeasuredDimension(int,int)>($i3, $i5);

        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        android.view.View r0;
        int i0, i1;
        boolean z0, z1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        return;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.View$AccessibilityDelegate $r2, $r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke $r3.<android.view.View$AccessibilityDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r0, r1);

        return;

     label1:
        virtualinvoke r0.<android.view.View: void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return;
    }

    public void onResolveDrawables(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.view.View r0;
        android.os.Parcelable r1;
        int $i0, $i1, $i2;
        android.view.AbsSavedState $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r10, $r11, $r13, $r15, $r16;
        java.lang.Class $r6;
        java.lang.String $r7, $r17;
        android.content.Context $r12;
        java.lang.Object $r14;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.os.Parcelable;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 131072 | $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        $r2 = <android.view.View$BaseSavedState: android.view.AbsSavedState EMPTY_STATE>;

        if r1 == $r2 goto label1;

        if r1 == null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong state class, expecting View State but received ");

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead. This usually happens ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("when two views of different type have the same id in the same hierarchy. ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This view\'s id is ");

        $r12 = r0.<android.view.View: android.content.Context mContext>;

        $i2 = virtualinvoke r0.<android.view.View: int getId()>();

        $r14 = staticinvoke <android.view.ViewDebug: java.lang.Object resolveId(android.content.Context,int)>($r12, $i2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Make sure ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("other views do not use the same id.");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r3;

     label1:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.view.View r0;
        int $i0, $i1;
        android.view.AbsSavedState $r1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 131072 | $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        $r1 = <android.view.View$BaseSavedState: android.view.AbsSavedState EMPTY_STATE>;

        return $r1;
    }

    public void onScreenStateChanged(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        return;
    }

    protected void onScrollChanged(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3;
        android.view.View$AttachInfo r1;
        android.content.Context $r2;
        android.view.accessibility.AccessibilityManager $r3;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<android.view.View: android.content.Context mContext>;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.view.View: void postSendViewScrolledAccessibilityEventCallback()>();

     label1:
        r0.<android.view.View: boolean mBackgroundSizeChanged> = 1;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label2;

        r1.<android.view.View$AttachInfo: boolean mViewScrollChanged> = 1;

     label2:
        return;
    }

    protected boolean onSetAlpha(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        return 0;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        return;
    }

    public void onStartTemporaryDetach()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        specialinvoke r0.<android.view.View: void removeUnsetPressCallback()>();

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 67108864 | $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z10, $z12, $z13, $z14;
        android.view.TouchDelegate $r2, $r13;
        float $f0, $f1, $f2, $f3, $f4;
        android.view.View$UnsetPressedState $r3, $r4, $r5, $r6, $r7;
        long $l16, $l19;
        android.view.View$PerformClick $r8, $r9, $r10;
        android.view.View$CheckForTap $r11, $r12, $r14;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = r0.<android.view.View: int mViewFlags>;

        $i5 = i0 & 32;

        if $i5 != 32 goto label04;

        $i21 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i21 != 1 goto label01;

        $i23 = r0.<android.view.View: int mPrivateFlags>;

        $i24 = 16384 & $i23;

        if $i24 == 0 goto label01;

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(0);

     label01:
        $i22 = i0 & 16384;

        if $i22 == 16384 goto label02;

        i4 = i0 & 2097152;

        z5 = 0;

        if i4 != 2097152 goto label03;

     label02:
        z5 = 1;

     label03:
        return z5;

     label04:
        $r2 = r0.<android.view.View: android.view.TouchDelegate mTouchDelegate>;

        if $r2 == null goto label05;

        $r13 = r0.<android.view.View: android.view.TouchDelegate mTouchDelegate>;

        $z14 = virtualinvoke $r13.<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if $z14 == 0 goto label05;

        return 1;

     label05:
        $i7 = i0 & 16384;

        if $i7 == 16384 goto label06;

        i3 = i0 & 2097152;

        z5 = 0;

        if i3 != 2097152 goto label03;

     label06:
        $i6 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i6)
        {
            case 0: goto label19;
            case 1: goto label08;
            case 2: goto label23;
            case 3: goto label22;
            default: goto label07;
        };

     label07:
        return 1;

     label08:
        $i10 = r0.<android.view.View: int mPrivateFlags>;

        $i13 = 33554432 & $i10;

        if $i13 == 0 goto label17;

        z0 = 1;

     label09:
        $i12 = r0.<android.view.View: int mPrivateFlags>;

        $i14 = 16384 & $i12;

        if $i14 != 0 goto label10;

        if z0 == 0 goto label07;

     label10:
        z1 = virtualinvoke r0.<android.view.View: boolean isFocusable()>();

        z2 = 0;

        if z1 == 0 goto label11;

        z3 = virtualinvoke r0.<android.view.View: boolean isFocusableInTouchMode()>();

        z2 = 0;

        if z3 == 0 goto label11;

        z4 = virtualinvoke r0.<android.view.View: boolean isFocused()>();

        z2 = 0;

        if z4 != 0 goto label11;

        z2 = virtualinvoke r0.<android.view.View: boolean requestFocus()>();

     label11:
        if z0 == 0 goto label12;

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(1);

     label12:
        $z7 = r0.<android.view.View: boolean mHasPerformedLongPress>;

        if $z7 != 0 goto label14;

        specialinvoke r0.<android.view.View: void removeLongPressCallback()>();

        if z2 != 0 goto label14;

        $r8 = r0.<android.view.View: android.view.View$PerformClick mPerformClick>;

        if $r8 != null goto label13;

        $r10 = new android.view.View$PerformClick;

        specialinvoke $r10.<android.view.View$PerformClick: void <init>(android.view.View,android.view.View$1)>(r0, null);

        r0.<android.view.View: android.view.View$PerformClick mPerformClick> = $r10;

     label13:
        $r9 = r0.<android.view.View: android.view.View$PerformClick mPerformClick>;

        $z10 = virtualinvoke r0.<android.view.View: boolean post(java.lang.Runnable)>($r9);

        if $z10 != 0 goto label14;

        virtualinvoke r0.<android.view.View: boolean performClick()>();

     label14:
        $r3 = r0.<android.view.View: android.view.View$UnsetPressedState mUnsetPressedState>;

        if $r3 != null goto label15;

        $r7 = new android.view.View$UnsetPressedState;

        specialinvoke $r7.<android.view.View$UnsetPressedState: void <init>(android.view.View,android.view.View$1)>(r0, null);

        r0.<android.view.View: android.view.View$UnsetPressedState mUnsetPressedState> = $r7;

     label15:
        if z0 == 0 goto label18;

        $r5 = r0.<android.view.View: android.view.View$UnsetPressedState mUnsetPressedState>;

        $i15 = staticinvoke <android.view.ViewConfiguration: int getPressedStateDuration()>();

        $l16 = (long) $i15;

        virtualinvoke r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r5, $l16);

     label16:
        specialinvoke r0.<android.view.View: void removeTapCallback()>();

        goto label07;

     label17:
        z0 = 0;

        goto label09;

     label18:
        $r6 = r0.<android.view.View: android.view.View$UnsetPressedState mUnsetPressedState>;

        $z8 = virtualinvoke r0.<android.view.View: boolean post(java.lang.Runnable)>($r6);

        if $z8 != 0 goto label16;

        $r4 = r0.<android.view.View: android.view.View$UnsetPressedState mUnsetPressedState>;

        virtualinvoke $r4.<android.view.View$UnsetPressedState: void run()>();

        goto label16;

     label19:
        r0.<android.view.View: boolean mHasPerformedLongPress> = 0;

        $z13 = virtualinvoke r0.<android.view.View: boolean performButtonActionOnTouchDown(android.view.MotionEvent)>(r1);

        if $z13 != 0 goto label07;

        $z12 = virtualinvoke r0.<android.view.View: boolean isInScrollingContainer()>();

        if $z12 == 0 goto label21;

        $i18 = r0.<android.view.View: int mPrivateFlags>;

        $i17 = 33554432 | $i18;

        r0.<android.view.View: int mPrivateFlags> = $i17;

        $r12 = r0.<android.view.View: android.view.View$CheckForTap mPendingCheckForTap>;

        if $r12 != null goto label20;

        $r14 = new android.view.View$CheckForTap;

        specialinvoke $r14.<android.view.View$CheckForTap: void <init>(android.view.View,android.view.View$1)>(r0, null);

        r0.<android.view.View: android.view.View$CheckForTap mPendingCheckForTap> = $r14;

     label20:
        $r11 = r0.<android.view.View: android.view.View$CheckForTap mPendingCheckForTap>;

        $i20 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l19 = (long) $i20;

        virtualinvoke r0.<android.view.View: boolean postDelayed(java.lang.Runnable,long)>($r11, $l19);

        goto label07;

     label21:
        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(1);

        specialinvoke r0.<android.view.View: void checkForLongClick(int)>(0);

        goto label07;

     label22:
        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(0);

        specialinvoke r0.<android.view.View: void removeTapCallback()>();

        specialinvoke r0.<android.view.View: void removeLongPressCallback()>();

        goto label07;

     label23:
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i1 = (int) $f1;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i2 = (int) $f0;

        $f3 = (float) i1;

        $f4 = (float) i2;

        $i8 = r0.<android.view.View: int mTouchSlop>;

        $f2 = (float) $i8;

        $z6 = virtualinvoke r0.<android.view.View: boolean pointInView(float,float,float)>($f3, $f4, $f2);

        if $z6 != 0 goto label07;

        specialinvoke r0.<android.view.View: void removeTapCallback()>();

        $i9 = r0.<android.view.View: int mPrivateFlags>;

        $i11 = 16384 & $i9;

        if $i11 == 0 goto label07;

        specialinvoke r0.<android.view.View: void removeLongPressCallback()>();

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(0);

        goto label07;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        android.view.View r0, r1;
        int i0, $i1, $i2;
        android.view.View$AttachInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label2;

        specialinvoke r0.<android.view.View: boolean initialAwakenScrollBars()>();

     label1:
        return;

     label2:
        $i1 = r0.<android.view.View: int mPrivateFlags>;

        $i2 = 134217728 | $i1;

        r0.<android.view.View: int mPrivateFlags> = $i2;

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.view.View r0;
        boolean z0, $z1;
        android.view.inputmethod.InputMethodManager r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if z0 != 0 goto label4;

        $z1 = virtualinvoke r0.<android.view.View: boolean isPressed()>();

        if $z1 == 0 goto label1;

        virtualinvoke r0.<android.view.View: void setPressed(boolean)>(0);

     label1:
        if r1 == null goto label2;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 2 & $i2;

        if $i3 == 0 goto label2;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void focusOut(android.view.View)>(r0);

     label2:
        specialinvoke r0.<android.view.View: void removeLongPressCallback()>();

        specialinvoke r0.<android.view.View: void removeTapCallback()>();

        virtualinvoke r0.<android.view.View: void onFocusLost()>();

     label3:
        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

        return;

     label4:
        if r1 == null goto label3;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 2 & $i0;

        if $i1 == 0 goto label3;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void focusIn(android.view.View)>(r0);

        goto label3;
    }

    public void onWindowSystemUiVisibilityChanged(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        specialinvoke r0.<android.view.View: boolean initialAwakenScrollBars()>();

     label1:
        return;
    }

    public void outputDirtyFlags(java.lang.String, boolean, int)
    {
        android.view.View r0, $r17;
        java.lang.String r1, $r16, $r19;
        boolean z0, $z1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13;
        android.view.ViewGroup r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r20, $r21;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("             DIRTY(");

        $i3 = r0.<android.view.View: int mPrivateFlags>;

        $i4 = 6291456 & $i3;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") DRAWN(");

        $i5 = r0.<android.view.View: int mPrivateFlags>;

        $i6 = 32 & $i5;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CACHE_VALID(");

        $i8 = r0.<android.view.View: int mPrivateFlags>;

        $i7 = 32768 & $i8;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") INVALIDATED(");

        $i10 = r0.<android.view.View: int mPrivateFlags>;

        $i9 = -2147483648 & $i10;

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", $r16);

        if z0 == 0 goto label1;

        $i12 = r0.<android.view.View: int mPrivateFlags>;

        $i13 = i0 & $i12;

        r0.<android.view.View: int mPrivateFlags> = $i13;

     label1:
        $z1 = r0 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        r2 = (android.view.ViewGroup) r0;

        i1 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r17 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i2);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<android.view.View: void outputDirtyFlags(java.lang.String,boolean,int)>($r19, z0, i0);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    protected boolean overScrollBy(int, int, int, int, int, int, int, int, boolean)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18;
        boolean z0, z1, z2, z3, z4, z5, z6;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        z0 := @parameter8: boolean;

        i8 = r0.<android.view.View: int mOverScrollMode>;

        $i15 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollRange()>();

        $i17 = virtualinvoke r0.<android.view.View: int computeHorizontalScrollExtent()>();

        if $i15 <= $i17 goto label12;

        z1 = 1;

     label01:
        $i16 = virtualinvoke r0.<android.view.View: int computeVerticalScrollRange()>();

        $i18 = virtualinvoke r0.<android.view.View: int computeVerticalScrollExtent()>();

        if $i16 <= $i18 goto label13;

        z2 = 1;

     label02:
        if i8 == 0 goto label03;

        if i8 != 1 goto label14;

        if z1 == 0 goto label14;

     label03:
        z3 = 1;

     label04:
        if i8 == 0 goto label05;

        if i8 != 1 goto label15;

        if z2 == 0 goto label15;

     label05:
        z4 = 1;

     label06:
        i9 = i2 + i0;

        if z3 != 0 goto label07;

        i6 = 0;

     label07:
        i11 = i3 + i1;

        if z4 != 0 goto label08;

        i7 = 0;

     label08:
        i10 = neg i6;

        i13 = i6 + i4;

        i12 = neg i7;

        i14 = i7 + i5;

        if i9 <= i13 goto label16;

        i9 = i13;

        z5 = 1;

     label09:
        if i11 <= i14 goto label17;

        i11 = i14;

        z6 = 1;

     label10:
        virtualinvoke r0.<android.view.View: void onOverScrolled(int,int,boolean,boolean)>(i9, i11, z5, z6);

        if z5 != 0 goto label11;

        if z6 == 0 goto label18;

     label11:
        return 1;

     label12:
        z1 = 0;

        goto label01;

     label13:
        z2 = 0;

        goto label02;

     label14:
        z3 = 0;

        goto label04;

     label15:
        z4 = 0;

        goto label06;

     label16:
        z5 = 0;

        if i9 >= i10 goto label09;

        i9 = i10;

        z5 = 1;

        goto label09;

     label17:
        z6 = 0;

        if i11 >= i12 goto label10;

        i11 = i12;

        z6 = 1;

        goto label10;

     label18:
        return 0;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.view.View r0;
        int i0;
        android.os.Bundle r1;
        android.view.View$AccessibilityDelegate $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        $z1 = virtualinvoke $r3.<android.view.View$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>(r0, i0, r1);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<android.view.View: boolean performAccessibilityActionInternal(int,android.os.Bundle)>(i0, r1);

        return $z0;
    }

    boolean performAccessibilityActionInternal(int, android.os.Bundle)
    {
        android.view.View r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.os.Bundle r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.lang.CharSequence $r2;
        android.view.ViewRootImpl $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        i1 = -1;

        z0 = 1;

        lookupswitch(i0)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 4: goto label07;
            case 8: goto label08;
            case 16: goto label03;
            case 32: goto label04;
            case 64: goto label09;
            case 128: goto label10;
            case 256: goto label11;
            case 512: goto label12;
            case 131072: goto label13;
            default: goto label01;
        };

     label01:
        z0 = 0;

     label02:
        return z0;

     label03:
        $z9 = virtualinvoke r0.<android.view.View: boolean isClickable()>();

        if $z9 == 0 goto label01;

        virtualinvoke r0.<android.view.View: boolean performClick()>();

        return z0;

     label04:
        $z7 = virtualinvoke r0.<android.view.View: boolean isLongClickable()>();

        if $z7 == 0 goto label01;

        virtualinvoke r0.<android.view.View: boolean performLongClick()>();

        return z0;

     label05:
        $z17 = virtualinvoke r0.<android.view.View: boolean hasFocus()>();

        if $z17 != 0 goto label01;

        $r3 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke $r3.<android.view.ViewRootImpl: boolean ensureTouchMode(boolean)>(0);

        $z19 = virtualinvoke r0.<android.view.View: boolean requestFocus()>();

        return $z19;

     label06:
        $z15 = virtualinvoke r0.<android.view.View: boolean hasFocus()>();

        if $z15 == 0 goto label01;

        virtualinvoke r0.<android.view.View: void clearFocus()>();

        $z18 = virtualinvoke r0.<android.view.View: boolean isFocused()>();

        if $z18 == 0 goto label02;

        return 0;

     label07:
        $z13 = virtualinvoke r0.<android.view.View: boolean isSelected()>();

        if $z13 != 0 goto label01;

        virtualinvoke r0.<android.view.View: void setSelected(boolean)>(z0);

        $z16 = virtualinvoke r0.<android.view.View: boolean isSelected()>();

        return $z16;

     label08:
        $z11 = virtualinvoke r0.<android.view.View: boolean isSelected()>();

        if $z11 == 0 goto label01;

        virtualinvoke r0.<android.view.View: void setSelected(boolean)>(0);

        $z14 = virtualinvoke r0.<android.view.View: boolean isSelected()>();

        if $z14 == 0 goto label02;

        return 0;

     label09:
        $z5 = virtualinvoke r0.<android.view.View: boolean isAccessibilityFocused()>();

        if $z5 != 0 goto label01;

        $z8 = virtualinvoke r0.<android.view.View: boolean requestAccessibilityFocus()>();

        return $z8;

     label10:
        $z6 = virtualinvoke r0.<android.view.View: boolean isAccessibilityFocused()>();

        if $z6 == 0 goto label01;

        virtualinvoke r0.<android.view.View: void clearAccessibilityFocus()>();

        return z0;

     label11:
        if r1 == null goto label01;

        $i6 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT");

        $z4 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN");

        $z3 = specialinvoke r0.<android.view.View: boolean traverseAtGranularity(int,boolean,boolean)>($i6, z0, $z4);

        return $z3;

     label12:
        if r1 == null goto label01;

        $i5 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT");

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN");

        $z2 = specialinvoke r0.<android.view.View: boolean traverseAtGranularity(int,boolean,boolean)>($i5, 0, $z1);

        return $z2;

     label13:
        $r2 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>();

        if $r2 != null goto label14;

        return 0;

     label14:
        if r1 == null goto label18;

        i2 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_START_INT", i1);

     label15:
        if r1 == null goto label16;

        i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_END_INT", i1);

     label16:
        $i3 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionStart()>();

        if $i3 != i2 goto label17;

        $i4 = virtualinvoke r0.<android.view.View: int getAccessibilitySelectionEnd()>();

        if $i4 == i1 goto label01;

     label17:
        if i2 != i1 goto label01;

        virtualinvoke r0.<android.view.View: void setAccessibilitySelection(int,int)>(i2, i1);

        virtualinvoke r0.<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        return z0;

     label18:
        i2 = i1;

        goto label15;
    }

    protected boolean performButtonActionOnTouchDown(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        int $i0, $i1, $i2;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getButtonState()>();

        $i1 = 2 & $i0;

        if $i1 == 0 goto label1;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getMetaState()>();

        $z0 = virtualinvoke r0.<android.view.View: boolean showContextMenu(float,float,int)>($f0, $f1, $i2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean performClick()
    {
        android.view.View r0;
        android.view.View$ListenerInfo r1;
        android.view.View$OnClickListener $r2, $r3;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void sendAccessibilityEvent(int)>(1);

        r1 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r1 == null goto label1;

        $r2 = r1.<android.view.View$ListenerInfo: android.view.View$OnClickListener mOnClickListener>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.view.View: void playSoundEffect(int)>(0);

        $r3 = r1.<android.view.View$ListenerInfo: android.view.View$OnClickListener mOnClickListener>;

        interfaceinvoke $r3.<android.view.View$OnClickListener: void onClick(android.view.View)>(r0);

        return 1;

     label1:
        return 0;
    }

    void performCollectViewAttributes(android.view.View$AttachInfo, int)
    {
        android.view.View r0;
        android.view.View$AttachInfo r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View$ListenerInfo r2;
        android.view.View$OnSystemUiVisibilityChangeListener $r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$AttachInfo;

        i0 := @parameter1: int;

        $i1 = i0 & 12;

        if $i1 != 0 goto label2;

        $i2 = r0.<android.view.View: int mViewFlags>;

        $i3 = 67108864 & $i2;

        if $i3 != 67108864 goto label1;

        r1.<android.view.View$AttachInfo: boolean mKeepScreenOn> = 1;

     label1:
        $i5 = r1.<android.view.View$AttachInfo: int mSystemUiVisibility>;

        $i4 = r0.<android.view.View: int mSystemUiVisibility>;

        $i6 = $i5 | $i4;

        r1.<android.view.View$AttachInfo: int mSystemUiVisibility> = $i6;

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label2;

        $r3 = staticinvoke <android.view.View$ListenerInfo: android.view.View$OnSystemUiVisibilityChangeListener access$1100(android.view.View$ListenerInfo)>(r2);

        if $r3 == null goto label2;

        r1.<android.view.View$AttachInfo: boolean mHasSystemUiListeners> = 1;

     label2:
        return;
    }

    public boolean performHapticFeedback(int)
    {
        android.view.View r0;
        int i0;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.view.View: boolean performHapticFeedback(int,int)>(i0, 0);

        return $z0;
    }

    public boolean performHapticFeedback(int, int)
    {
        android.view.View r0;
        int i0, i1, i2, $i3;
        android.view.View$AttachInfo$Callbacks r1;
        boolean z0, $z1, $z2;
        android.view.View$AttachInfo $r2, $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 != null goto label2;

     label1:
        return 0;

     label2:
        $i3 = i1 & 1;

        if $i3 != 0 goto label3;

        $z2 = virtualinvoke r0.<android.view.View: boolean isHapticFeedbackEnabled()>();

        if $z2 == 0 goto label1;

     label3:
        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r1 = $r3.<android.view.View$AttachInfo: android.view.View$AttachInfo$Callbacks mRootCallbacks>;

        i2 = i1 & 2;

        z0 = 0;

        if i2 == 0 goto label4;

        z0 = 1;

     label4:
        $z1 = interfaceinvoke r1.<android.view.View$AttachInfo$Callbacks: boolean performHapticFeedback(int,boolean)>(i0, z0);

        return $z1;
    }

    public boolean performLongClick()
    {
        android.view.View r0;
        android.view.View$ListenerInfo r1;
        boolean z0;
        android.view.View$OnLongClickListener r2, $r3;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void sendAccessibilityEvent(int)>(2);

        r1 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        z0 = 0;

        if r1 == null goto label1;

        r2 = r1.<android.view.View$ListenerInfo: android.view.View$OnLongClickListener mOnLongClickListener>;

        z0 = 0;

        if r2 == null goto label1;

        $r3 = r1.<android.view.View$ListenerInfo: android.view.View$OnLongClickListener mOnLongClickListener>;

        z0 = interfaceinvoke $r3.<android.view.View$OnLongClickListener: boolean onLongClick(android.view.View)>(r0);

     label1:
        if z0 != 0 goto label2;

        z0 = virtualinvoke r0.<android.view.View: boolean showContextMenu()>();

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<android.view.View: boolean performHapticFeedback(int)>(0);

     label3:
        return z0;
    }

    public void playSoundEffect(int)
    {
        android.view.View r0;
        int i0;
        android.view.View$AttachInfo $r1, $r2, $r4;
        android.view.View$AttachInfo$Callbacks $r3, $r5;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3 = $r2.<android.view.View$AttachInfo: android.view.View$AttachInfo$Callbacks mRootCallbacks>;

        if $r3 == null goto label1;

        $z0 = virtualinvoke r0.<android.view.View: boolean isSoundEffectsEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r5 = $r4.<android.view.View$AttachInfo: android.view.View$AttachInfo$Callbacks mRootCallbacks>;

        interfaceinvoke $r5.<android.view.View$AttachInfo$Callbacks: void playSoundEffect(int)>(i0);

        return;
    }

    final boolean pointInView(float, float)
    {
        android.view.View r0;
        float f0, f1, $f2, $f3;
        byte $b0, $b4, $b5, $b9;
        int $i1, $i2, $i3, $i6, $i7, $i8;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 < 0 goto label1;

        $i2 = r0.<android.view.View: int mRight>;

        $i1 = r0.<android.view.View: int mLeft>;

        $i3 = $i2 - $i1;

        $f2 = (float) $i3;

        $b4 = f0 cmpg $f2;

        if $b4 >= 0 goto label1;

        $b5 = f1 cmpl 0.0F;

        if $b5 < 0 goto label1;

        $i7 = r0.<android.view.View: int mBottom>;

        $i6 = r0.<android.view.View: int mTop>;

        $i8 = $i7 - $i6;

        $f3 = (float) $i8;

        $b9 = f1 cmpg $f3;

        if $b9 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean pointInView(float, float, float)
    {
        android.view.View r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8;
        byte $b0, $b1, $b5, $b9;
        int $i2, $i3, $i4, $i6, $i7, $i8;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = neg f2;

        $b0 = f0 cmpl $f3;

        if $b0 < 0 goto label1;

        $f4 = neg f2;

        $b1 = f1 cmpl $f4;

        if $b1 < 0 goto label1;

        $i3 = r0.<android.view.View: int mRight>;

        $i2 = r0.<android.view.View: int mLeft>;

        $i4 = $i3 - $i2;

        $f5 = (float) $i4;

        $f6 = f2 + $f5;

        $b5 = f0 cmpg $f6;

        if $b5 >= 0 goto label1;

        $i7 = r0.<android.view.View: int mBottom>;

        $i6 = r0.<android.view.View: int mTop>;

        $i8 = $i7 - $i6;

        $f7 = (float) $i8;

        $f8 = f2 + $f7;

        $b9 = f1 cmpg $f8;

        if $b9 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean post(java.lang.Runnable)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        android.view.View$AttachInfo r2;
        android.view.ViewRootImpl$RunQueue $r3;
        android.os.Handler $r4;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Runnable;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label1;

        $r4 = r2.<android.view.View$AttachInfo: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        return $z0;

     label1:
        $r3 = staticinvoke <android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>();

        virtualinvoke $r3.<android.view.ViewRootImpl$RunQueue: void post(java.lang.Runnable)>(r1);

        return 1;
    }

    public boolean postDelayed(java.lang.Runnable, long)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        long l0;
        android.view.View$AttachInfo r2;
        android.view.ViewRootImpl$RunQueue $r3;
        android.os.Handler $r4;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label1;

        $r4 = r2.<android.view.View$AttachInfo: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r1, l0);

        return $z0;

     label1:
        $r3 = staticinvoke <android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>();

        virtualinvoke $r3.<android.view.ViewRootImpl$RunQueue: void postDelayed(java.lang.Runnable,long)>(r1, l0);

        return 1;
    }

    public void postInvalidate()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void postInvalidateDelayed(long)>(0L);

        return;
    }

    public void postInvalidate(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>(0L, i0, i1, i2, i3);

        return;
    }

    public void postInvalidateDelayed(long)
    {
        android.view.View r0;
        long l0;
        android.view.View$AttachInfo r1;
        android.view.ViewRootImpl $r2;

        r0 := @this: android.view.View;

        l0 := @parameter0: long;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label1;

        $r2 = r1.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r2.<android.view.ViewRootImpl: void dispatchInvalidateDelayed(android.view.View,long)>(r0, l0);

     label1:
        return;
    }

    public void postInvalidateDelayed(long, int, int, int, int)
    {
        android.view.View r0;
        long l0;
        int i1, i2, i3, i4;
        android.view.View$AttachInfo r1;
        android.view.View$AttachInfo$InvalidateInfo r2;
        android.view.ViewRootImpl $r3;

        r0 := @this: android.view.View;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label1;

        r2 = staticinvoke <android.view.View$AttachInfo$InvalidateInfo: android.view.View$AttachInfo$InvalidateInfo obtain()>();

        r2.<android.view.View$AttachInfo$InvalidateInfo: android.view.View target> = r0;

        r2.<android.view.View$AttachInfo$InvalidateInfo: int left> = i1;

        r2.<android.view.View$AttachInfo$InvalidateInfo: int top> = i2;

        r2.<android.view.View$AttachInfo$InvalidateInfo: int right> = i3;

        r2.<android.view.View$AttachInfo$InvalidateInfo: int bottom> = i4;

        $r3 = r1.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r3.<android.view.ViewRootImpl: void dispatchInvalidateRectDelayed(android.view.View$AttachInfo$InvalidateInfo,long)>(r2, l0);

     label1:
        return;
    }

    public void postInvalidateOnAnimation()
    {
        android.view.View r0;
        android.view.View$AttachInfo r1;
        android.view.ViewRootImpl $r2;

        r0 := @this: android.view.View;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label1;

        $r2 = r1.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r2.<android.view.ViewRootImpl: void dispatchInvalidateOnAnimation(android.view.View)>(r0);

     label1:
        return;
    }

    public void postInvalidateOnAnimation(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3;
        android.view.View$AttachInfo r1;
        android.view.View$AttachInfo$InvalidateInfo r2;
        android.view.ViewRootImpl $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r1 == null goto label1;

        r2 = staticinvoke <android.view.View$AttachInfo$InvalidateInfo: android.view.View$AttachInfo$InvalidateInfo obtain()>();

        r2.<android.view.View$AttachInfo$InvalidateInfo: android.view.View target> = r0;

        r2.<android.view.View$AttachInfo$InvalidateInfo: int left> = i0;

        r2.<android.view.View$AttachInfo$InvalidateInfo: int top> = i1;

        r2.<android.view.View$AttachInfo$InvalidateInfo: int right> = i2;

        r2.<android.view.View$AttachInfo$InvalidateInfo: int bottom> = i3;

        $r3 = r1.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        virtualinvoke $r3.<android.view.ViewRootImpl: void dispatchInvalidateRectOnAnimation(android.view.View$AttachInfo$InvalidateInfo)>(r2);

     label1:
        return;
    }

    public void postOnAnimation(java.lang.Runnable)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        android.view.View$AttachInfo r2;
        android.view.ViewRootImpl$RunQueue $r3;
        android.view.ViewRootImpl $r4;
        android.view.Choreographer $r5;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Runnable;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label1;

        $r4 = r2.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.Choreographer mChoreographer>;

        virtualinvoke $r5.<android.view.Choreographer: void postCallback(int,java.lang.Runnable,java.lang.Object)>(1, r1, null);

        return;

     label1:
        $r3 = staticinvoke <android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>();

        virtualinvoke $r3.<android.view.ViewRootImpl$RunQueue: void post(java.lang.Runnable)>(r1);

        return;
    }

    public void postOnAnimationDelayed(java.lang.Runnable, long)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        long l0;
        android.view.View$AttachInfo r2;
        android.view.ViewRootImpl$RunQueue $r3;
        android.view.ViewRootImpl $r4;
        android.view.Choreographer $r5;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label1;

        $r4 = r2.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.Choreographer mChoreographer>;

        virtualinvoke $r5.<android.view.Choreographer: void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long)>(1, r1, null, l0);

        return;

     label1:
        $r3 = staticinvoke <android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>();

        virtualinvoke $r3.<android.view.ViewRootImpl$RunQueue: void postDelayed(java.lang.Runnable,long)>(r1, l0);

        return;
    }

    protected void recomputePadding()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $i3 = r0.<android.view.View: int mUserPaddingLeft>;

        $i2 = r0.<android.view.View: int mPaddingTop>;

        $i1 = r0.<android.view.View: int mUserPaddingRight>;

        $i0 = r0.<android.view.View: int mUserPaddingBottom>;

        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void refreshDrawableState()
    {
        android.view.View r0;
        android.view.ViewParent r1;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 1024 | $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        virtualinvoke r0.<android.view.View: void drawableStateChanged()>();

        r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.ViewParent: void childDrawableStateChanged(android.view.View)>(r0);

     label1:
        return;
    }

    public boolean removeCallbacks(java.lang.Runnable)
    {
        android.view.View r0;
        java.lang.Runnable r1;
        android.view.View$AttachInfo r2;
        android.view.ViewRootImpl$RunQueue $r3;
        android.os.Handler $r4;
        android.view.ViewRootImpl $r5;
        android.view.Choreographer $r6;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Runnable;

        if r1 == null goto label1;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label2;

        $r4 = r2.<android.view.View$AttachInfo: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r1);

        $r5 = r2.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        $r6 = $r5.<android.view.ViewRootImpl: android.view.Choreographer mChoreographer>;

        virtualinvoke $r6.<android.view.Choreographer: void removeCallbacks(int,java.lang.Runnable,java.lang.Object)>(1, r1, null);

     label1:
        return 1;

     label2:
        $r3 = staticinvoke <android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>();

        virtualinvoke $r3.<android.view.ViewRootImpl$RunQueue: void removeCallbacks(java.lang.Runnable)>(r1);

        return 1;
    }

    public void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)
    {
        android.view.View r0;
        android.view.View$OnAttachStateChangeListener r1;
        android.view.View$ListenerInfo r2;
        java.util.concurrent.CopyOnWriteArrayList $r3, $r4;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnAttachStateChangeListener;

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label1;

        $r3 = staticinvoke <android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$100(android.view.View$ListenerInfo)>(r2);

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        $r4 = staticinvoke <android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$100(android.view.View$ListenerInfo)>(r2);

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)
    {
        android.view.View r0;
        android.view.View$OnLayoutChangeListener r1;
        android.view.View$ListenerInfo r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnLayoutChangeListener;

        r2 = r0.<android.view.View: android.view.View$ListenerInfo mListenerInfo>;

        if r2 == null goto label1;

        $r3 = staticinvoke <android.view.View$ListenerInfo: java.util.ArrayList access$000(android.view.View$ListenerInfo)>(r2);

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        $r4 = staticinvoke <android.view.View$ListenerInfo: java.util.ArrayList access$000(android.view.View$ListenerInfo)>(r2);

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public boolean requestAccessibilityFocus()
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityManager r1;
        android.view.ViewRootImpl r2;
        android.content.Context $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.View;

        $r3 = r0.<android.view.View: android.content.Context mContext>;

        r1 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r3);

        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 12 & $i0;

        if $i1 != 0 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = 67108864 & $i2;

        if $i3 != 0 goto label1;

        $i4 = r0.<android.view.View: int mPrivateFlags2>;

        $i5 = 67108864 | $i4;

        r0.<android.view.View: int mPrivateFlags2> = $i5;

        r2 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r2 == null goto label3;

        virtualinvoke r2.<android.view.ViewRootImpl: void setAccessibilityFocus(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>(r0, null);

     label3:
        virtualinvoke r0.<android.view.View: void invalidate()>();

        virtualinvoke r0.<android.view.View: void sendAccessibilityEvent(int)>(32768);

        return 1;
    }

    public void requestFitSystemWindows()
    {
        android.view.View r0;
        android.view.ViewParent $r1, $r2;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r2.<android.view.ViewParent: void requestFitSystemWindows()>();

     label1:
        return;
    }

    public final boolean requestFocus()
    {
        android.view.View r0;
        boolean $z0;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean requestFocus(int)>(130);

        return $z0;
    }

    public final boolean requestFocus(int)
    {
        android.view.View r0;
        int i0;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>(i0, null);

        return $z0;
    }

    public boolean requestFocus(int, android.graphics.Rect)
    {
        android.view.View r0;
        int i0;
        android.graphics.Rect r1;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $z0 = specialinvoke r0.<android.view.View: boolean requestFocusNoSearch(int,android.graphics.Rect)>(i0, r1);

        return $z0;
    }

    public final boolean requestFocusFromTouch()
    {
        android.view.View r0;
        android.view.ViewRootImpl r1;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isInTouchMode()>();

        if $z0 == 0 goto label1;

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: boolean ensureTouchMode(boolean)>(0);

     label1:
        $z1 = virtualinvoke r0.<android.view.View: boolean requestFocus(int)>(130);

        return $z1;
    }

    public void requestLayout()
    {
        android.view.View r0, $r7, $r11;
        android.view.ViewRootImpl r1;
        android.util.LongSparseLongArray $r2, $r14;
        android.view.View$AttachInfo $r3, $r5, $r6, $r8, $r12, $r13;
        int $i0, $i1, $i2, $i3;
        android.view.ViewParent $r4, $r9, $r10;
        boolean $z0, $z1, $z2;

        r0 := @this: android.view.View;

        $r2 = r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache>;

        if $r2 == null goto label1;

        $r14 = r0.<android.view.View: android.util.LongSparseLongArray mMeasureCache>;

        virtualinvoke $r14.<android.util.LongSparseLongArray: void clear()>();

     label1:
        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label4;

        $r12 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r11 = $r12.<android.view.View$AttachInfo: android.view.View mViewRequestingLayout>;

        if $r11 != null goto label4;

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label3;

        $z2 = virtualinvoke r1.<android.view.ViewRootImpl: boolean isInLayout()>();

        if $z2 == 0 goto label3;

        $z1 = virtualinvoke r1.<android.view.ViewRootImpl: boolean requestLayoutDuringLayout(android.view.View)>(r0);

        if $z1 != 0 goto label3;

     label2:
        return;

     label3:
        $r13 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r13.<android.view.View$AttachInfo: android.view.View mViewRequestingLayout> = r0;

     label4:
        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 4096 | $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -2147483648 | $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label5;

        $r9 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = interfaceinvoke $r9.<android.view.ViewParent: boolean isLayoutRequested()>();

        if $z0 != 0 goto label5;

        $r10 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r10.<android.view.ViewParent: void requestLayout()>();

     label5:
        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r5 == null goto label2;

        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r7 = $r6.<android.view.View$AttachInfo: android.view.View mViewRequestingLayout>;

        if $r7 != r0 goto label2;

        $r8 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r8.<android.view.View$AttachInfo: android.view.View mViewRequestingLayout> = null;

        return;
    }

    public boolean requestRectangleOnScreen(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = virtualinvoke r0.<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>(r1, 0);

        return $z0;
    }

    public boolean requestRectangleOnScreen(android.graphics.Rect, boolean)
    {
        android.view.View r0, r2, r5;
        android.graphics.Rect r1;
        boolean z0, z1, $z2, $z3, $z4;
        android.graphics.RectF r3, $r8;
        android.view.ViewParent r4, $r6;
        android.view.View$AttachInfo $r7, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Matrix $r10;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r6 != null goto label2;

        z1 = 0;

     label1:
        return z1;

     label2:
        r2 = r0;

        $r7 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r7 == null goto label6;

        $r9 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r3 = $r9.<android.view.View$AttachInfo: android.graphics.RectF mTmpTransformRect>;

     label3:
        virtualinvoke r3.<android.graphics.RectF: void set(android.graphics.Rect)>(r1);

        r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        z1 = 0;

     label4:
        if r4 == null goto label1;

        $f0 = r3.<android.graphics.RectF: float left>;

        $i3 = (int) $f0;

        $f1 = r3.<android.graphics.RectF: float top>;

        $i1 = (int) $f1;

        $f2 = r3.<android.graphics.RectF: float right>;

        $i2 = (int) $f2;

        $f3 = r3.<android.graphics.RectF: float bottom>;

        $i0 = (int) $f3;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i1, $i2, $i0);

        $z2 = interfaceinvoke r4.<android.view.ViewParent: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>(r2, r1, z0);

        z1 = z1 | $z2;

        $z3 = virtualinvoke r2.<android.view.View: boolean hasIdentityMatrix()>();

        if $z3 != 0 goto label5;

        $r10 = virtualinvoke r2.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r10.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

     label5:
        $i4 = r2.<android.view.View: int mLeft>;

        $f5 = (float) $i4;

        $i5 = r2.<android.view.View: int mTop>;

        $f4 = (float) $i5;

        virtualinvoke r3.<android.graphics.RectF: void offset(float,float)>($f5, $f4);

        $z4 = r4 instanceof android.view.View;

        if $z4 == 0 goto label1;

        r5 = (android.view.View) r4;

        $i7 = virtualinvoke r5.<android.view.View: int getScrollX()>();

        $i6 = neg $i7;

        $f6 = (float) $i6;

        $i8 = virtualinvoke r5.<android.view.View: int getScrollY()>();

        $i9 = neg $i8;

        $f7 = (float) $i9;

        virtualinvoke r3.<android.graphics.RectF: void offset(float,float)>($f6, $f7);

        r2 = r5;

        r4 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        goto label4;

     label6:
        $r8 = new android.graphics.RectF;

        specialinvoke $r8.<android.graphics.RectF: void <init>()>();

        r3 = $r8;

        goto label3;
    }

    public void resetPaddingToInitialValues()
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1;

        r0 := @this: android.view.View;

        $z0 = specialinvoke r0.<android.view.View: boolean isRtlCompatibilityMode()>();

        if $z0 == 0 goto label01;

        $i8 = r0.<android.view.View: int mUserPaddingLeftInitial>;

        r0.<android.view.View: int mPaddingLeft> = $i8;

        $i9 = r0.<android.view.View: int mUserPaddingRightInitial>;

        r0.<android.view.View: int mPaddingRight> = $i9;

        return;

     label01:
        $z1 = virtualinvoke r0.<android.view.View: boolean isLayoutRtl()>();

        if $z1 == 0 goto label06;

        $i6 = r0.<android.view.View: int mUserPaddingEnd>;

        if $i6 < 0 goto label04;

        i2 = r0.<android.view.View: int mUserPaddingEnd>;

     label02:
        r0.<android.view.View: int mPaddingLeft> = i2;

        $i7 = r0.<android.view.View: int mUserPaddingStart>;

        if $i7 < 0 goto label05;

        i3 = r0.<android.view.View: int mUserPaddingStart>;

     label03:
        r0.<android.view.View: int mPaddingRight> = i3;

        return;

     label04:
        i2 = r0.<android.view.View: int mUserPaddingLeftInitial>;

        goto label02;

     label05:
        i3 = r0.<android.view.View: int mUserPaddingRightInitial>;

        goto label03;

     label06:
        $i4 = r0.<android.view.View: int mUserPaddingStart>;

        if $i4 < 0 goto label09;

        i0 = r0.<android.view.View: int mUserPaddingStart>;

     label07:
        r0.<android.view.View: int mPaddingLeft> = i0;

        $i5 = r0.<android.view.View: int mUserPaddingEnd>;

        if $i5 < 0 goto label10;

        i1 = r0.<android.view.View: int mUserPaddingEnd>;

     label08:
        r0.<android.view.View: int mPaddingRight> = i1;

        return;

     label09:
        i0 = r0.<android.view.View: int mUserPaddingLeftInitial>;

        goto label07;

     label10:
        i1 = r0.<android.view.View: int mUserPaddingRightInitial>;

        goto label08;
    }

    protected void resetResolvedDrawables()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = -1073741825 & $i0;

        r0.<android.view.View: int mPrivateFlags2> = $i1;

        return;
    }

    public void resetResolvedLayoutDirection()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = -49 & $i0;

        r0.<android.view.View: int mPrivateFlags2> = $i1;

        return;
    }

    public void resetResolvedPadding()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = -536870913 & $i0;

        r0.<android.view.View: int mPrivateFlags2> = $i1;

        return;
    }

    public void resetResolvedTextAlignment()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = -983041 & $i0;

        r0.<android.view.View: int mPrivateFlags2> = $i1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = 131072 | $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        return;
    }

    public void resetResolvedTextDirection()
    {
        android.view.View r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = -7681 & $i0;

        r0.<android.view.View: int mPrivateFlags2> = $i1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = 1024 | $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        return;
    }

    public void resetRtlProperties()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void resetResolvedLayoutDirection()>();

        virtualinvoke r0.<android.view.View: void resetResolvedTextDirection()>();

        virtualinvoke r0.<android.view.View: void resetResolvedTextAlignment()>();

        virtualinvoke r0.<android.view.View: void resetResolvedPadding()>();

        virtualinvoke r0.<android.view.View: void resetResolvedDrawables()>();

        return;
    }

    void resetSubtreeAccessibilityStateChanged()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = -134217729 & $i0;

        r0.<android.view.View: int mPrivateFlags2> = $i1;

        return;
    }

    protected void resolveDrawables()
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.view.View;

        $z0 = virtualinvoke r0.<android.view.View: boolean isLayoutDirectionResolved()>();

        if $z0 != 0 goto label1;

        $i3 = virtualinvoke r0.<android.view.View: int getRawLayoutDirection()>();

        if $i3 != 2 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<android.view.View: boolean isLayoutDirectionResolved()>();

        if $z1 == 0 goto label4;

        i0 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

     label2:
        $r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r1 == null goto label3;

        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>(i0);

     label3:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 1073741824 | $i1;

        r0.<android.view.View: int mPrivateFlags2> = $i2;

        virtualinvoke r0.<android.view.View: void onResolveDrawables(int)>(i0);

        return;

     label4:
        i0 = virtualinvoke r0.<android.view.View: int getRawLayoutDirection()>();

        goto label2;
    }

    public boolean resolveLayoutDirection()
    {
        android.view.View r0;
        boolean z0, z1, z2, $z3;
        java.lang.AbstractMethodError r1, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.Locale $r2;
        android.view.ViewParent $r3, $r4, $r7;
        java.lang.StringBuilder $r5, $r8, $r9;
        java.lang.Class $r10;
        java.lang.String $r11, $r12;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mPrivateFlags2>;

        $i1 = -49 & $i0;

        r0.<android.view.View: int mPrivateFlags2> = $i1;

        $z3 = specialinvoke r0.<android.view.View: boolean hasRtlSupport()>();

        if $z3 == 0 goto label01;

        $i4 = r0.<android.view.View: int mPrivateFlags2>;

        $i5 = 12 & $i4;

        $i6 = $i5 >> 2;

        tableswitch($i6)
        {
            case 1: goto label09;
            case 2: goto label03;
            case 3: goto label10;
            default: goto label01;
        };

     label01:
        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = 32 | $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        z0 = 1;

     label02:
        return z0;

     label03:
        z1 = virtualinvoke r0.<android.view.View: boolean canResolveLayoutDirection()>();

        z0 = 0;

        if z1 == 0 goto label02;

     label04:
        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        z2 = interfaceinvoke $r3.<android.view.ViewParent: boolean isLayoutDirectionResolved()>();

     label05:
        z0 = 0;

        if z2 == 0 goto label02;

     label06:
        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        $i10 = interfaceinvoke $r4.<android.view.ViewParent: int getLayoutDirection()>();

        if $i10 != 1 goto label01;

        $i12 = r0.<android.view.View: int mPrivateFlags2>;

        $i11 = 16 | $i12;

        r0.<android.view.View: int mPrivateFlags2> = $i11;

     label07:
        goto label01;

     label08:
        $r6 := @caughtexception;

        r1 = $r6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r10 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r12, r1);

        goto label01;

     label09:
        $i14 = r0.<android.view.View: int mPrivateFlags2>;

        $i13 = 16 | $i14;

        r0.<android.view.View: int mPrivateFlags2> = $i13;

        goto label01;

     label10:
        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $i8 = staticinvoke <android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>($r2);

        if 1 != $i8 goto label01;

        $i7 = r0.<android.view.View: int mPrivateFlags2>;

        $i9 = 16 | $i7;

        r0.<android.view.View: int mPrivateFlags2> = $i9;

        goto label01;

        catch java.lang.AbstractMethodError from label04 to label05 with label08;
        catch java.lang.AbstractMethodError from label06 to label07 with label08;
    }

    public void resolveLayoutParams()
    {
        android.view.View r0;
        android.view.ViewGroup$LayoutParams $r1, $r2;
        int $i0;

        r0 := @this: android.view.View;

        $r1 = r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i0 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        virtualinvoke $r2.<android.view.ViewGroup$LayoutParams: void resolveLayoutDirection(int)>($i0);

     label1:
        return;
    }

    public void resolvePadding()
    {
        android.view.View r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        android.graphics.Rect r1, $r6;
        boolean $z0, $z1, $z2, $z4, $z5;
        android.graphics.drawable.Drawable $r2, $r4;
        java.lang.ThreadLocal $r3, $r7;
        java.lang.Object $r5;

        r0 := @this: android.view.View;

        i0 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        $z0 = specialinvoke r0.<android.view.View: boolean isRtlCompatibilityMode()>();

        if $z0 != 0 goto label09;

        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r2 == null goto label04;

        $z1 = r0.<android.view.View: boolean mLeftPaddingDefined>;

        if $z1 == 0 goto label01;

        $z5 = r0.<android.view.View: boolean mRightPaddingDefined>;

        if $z5 != 0 goto label04;

     label01:
        $r3 = <android.view.View: java.lang.ThreadLocal sThreadLocal>;

        $r5 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r1 = (android.graphics.Rect) $r5;

        if r1 != null goto label02;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r1 = $r6;

        $r7 = <android.view.View: java.lang.ThreadLocal sThreadLocal>;

        virtualinvoke $r7.<java.lang.ThreadLocal: void set(java.lang.Object)>(r1);

     label02:
        $r4 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        $z2 = r0.<android.view.View: boolean mLeftPaddingDefined>;

        if $z2 != 0 goto label03;

        $i21 = r1.<android.graphics.Rect: int left>;

        r0.<android.view.View: int mUserPaddingLeftInitial> = $i21;

     label03:
        $z4 = r0.<android.view.View: boolean mRightPaddingDefined>;

        if $z4 != 0 goto label04;

        $i22 = r1.<android.graphics.Rect: int right>;

        r0.<android.view.View: int mUserPaddingRightInitial> = $i22;

     label04:
        tableswitch(i0)
        {
            case 1: goto label10;
            default: goto label05;
        };

     label05:
        $i8 = r0.<android.view.View: int mUserPaddingStart>;

        if $i8 == -2147483648 goto label14;

        $i13 = r0.<android.view.View: int mUserPaddingStart>;

        r0.<android.view.View: int mUserPaddingLeft> = $i13;

     label06:
        $i10 = r0.<android.view.View: int mUserPaddingEnd>;

        if $i10 == -2147483648 goto label15;

        $i14 = r0.<android.view.View: int mUserPaddingEnd>;

        r0.<android.view.View: int mUserPaddingRight> = $i14;

     label07:
        $i11 = r0.<android.view.View: int mUserPaddingBottom>;

        if $i11 < 0 goto label16;

        i1 = r0.<android.view.View: int mUserPaddingBottom>;

     label08:
        r0.<android.view.View: int mUserPaddingBottom> = i1;

     label09:
        $i5 = r0.<android.view.View: int mUserPaddingLeft>;

        $i4 = r0.<android.view.View: int mPaddingTop>;

        $i3 = r0.<android.view.View: int mUserPaddingRight>;

        $i2 = r0.<android.view.View: int mUserPaddingBottom>;

        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>($i5, $i4, $i3, $i2);

        virtualinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>(i0);

        $i6 = r0.<android.view.View: int mPrivateFlags2>;

        $i7 = 536870912 | $i6;

        r0.<android.view.View: int mPrivateFlags2> = $i7;

        return;

     label10:
        $i16 = r0.<android.view.View: int mUserPaddingStart>;

        if $i16 == -2147483648 goto label12;

        $i19 = r0.<android.view.View: int mUserPaddingStart>;

        r0.<android.view.View: int mUserPaddingRight> = $i19;

     label11:
        $i18 = r0.<android.view.View: int mUserPaddingEnd>;

        if $i18 == -2147483648 goto label13;

        $i20 = r0.<android.view.View: int mUserPaddingEnd>;

        r0.<android.view.View: int mUserPaddingLeft> = $i20;

        goto label07;

     label12:
        $i15 = r0.<android.view.View: int mUserPaddingRightInitial>;

        r0.<android.view.View: int mUserPaddingRight> = $i15;

        goto label11;

     label13:
        $i17 = r0.<android.view.View: int mUserPaddingLeftInitial>;

        r0.<android.view.View: int mUserPaddingLeft> = $i17;

        goto label07;

     label14:
        $i9 = r0.<android.view.View: int mUserPaddingLeftInitial>;

        r0.<android.view.View: int mUserPaddingLeft> = $i9;

        goto label06;

     label15:
        $i12 = r0.<android.view.View: int mUserPaddingRightInitial>;

        r0.<android.view.View: int mUserPaddingRight> = $i12;

        goto label07;

     label16:
        i1 = r0.<android.view.View: int mPaddingBottom>;

        goto label08;
    }

    public boolean resolveRtlPropertiesIfNeeded()
    {
        android.view.View r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0;

        r0 := @this: android.view.View;

        $z0 = specialinvoke r0.<android.view.View: boolean needRtlPropertiesResolution()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<android.view.View: boolean isLayoutDirectionResolved()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<android.view.View: boolean resolveLayoutDirection()>();

        virtualinvoke r0.<android.view.View: void resolveLayoutParams()>();

     label2:
        $z2 = virtualinvoke r0.<android.view.View: boolean isTextDirectionResolved()>();

        if $z2 != 0 goto label3;

        virtualinvoke r0.<android.view.View: boolean resolveTextDirection()>();

     label3:
        $z3 = virtualinvoke r0.<android.view.View: boolean isTextAlignmentResolved()>();

        if $z3 != 0 goto label4;

        virtualinvoke r0.<android.view.View: boolean resolveTextAlignment()>();

     label4:
        $z4 = specialinvoke r0.<android.view.View: boolean isDrawablesResolved()>();

        if $z4 != 0 goto label5;

        virtualinvoke r0.<android.view.View: void resolveDrawables()>();

     label5:
        $z5 = virtualinvoke r0.<android.view.View: boolean isPaddingResolved()>();

        if $z5 != 0 goto label6;

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label6:
        $i0 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        virtualinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>($i0);

        return 1;
    }

    public boolean resolveTextAlignment()
    {
        android.view.View r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25;
        java.lang.AbstractMethodError r1, r2, $r5, $r13;
        boolean $z0, $z1, $z2;
        android.view.ViewParent $r3, $r4, $r6, $r15;
        java.lang.Class $r7, $r14;
        java.lang.StringBuilder $r8, $r9, $r12, $r16, $r18, $r19;
        java.lang.String $r10, $r11, $r17, $r20;

        r0 := @this: android.view.View;

        $i3 = r0.<android.view.View: int mPrivateFlags2>;

        $i4 = -983041 & $i3;

        r0.<android.view.View: int mPrivateFlags2> = $i4;

        $z0 = specialinvoke r0.<android.view.View: boolean hasRtlSupport()>();

        if $z0 == 0 goto label14;

        i0 = virtualinvoke r0.<android.view.View: int getRawTextAlignment()>();

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label13;
            case 2: goto label13;
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label13;
            default: goto label01;
        };

     label01:
        $i10 = r0.<android.view.View: int mPrivateFlags2>;

        $i9 = 131072 | $i10;

        r0.<android.view.View: int mPrivateFlags2> = $i9;

     label02:
        $i7 = r0.<android.view.View: int mPrivateFlags2>;

        $i8 = 65536 | $i7;

        r0.<android.view.View: int mPrivateFlags2> = $i8;

        return 1;

     label03:
        $z1 = virtualinvoke r0.<android.view.View: boolean canResolveTextAlignment()>();

        if $z1 != 0 goto label04;

        $i22 = r0.<android.view.View: int mPrivateFlags2>;

        $i20 = 131072 | $i22;

        r0.<android.view.View: int mPrivateFlags2> = $i20;

        return 0;

     label04:
        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z2 = interfaceinvoke $r3.<android.view.ViewParent: boolean isTextAlignmentResolved()>();

        if $z2 != 0 goto label07;

        $i18 = r0.<android.view.View: int mPrivateFlags2>;

        $i21 = 131072 | $i18;

        r0.<android.view.View: int mPrivateFlags2> = $i21;

     label05:
        return 0;

     label06:
        $r5 := @caughtexception;

        r1 = $r5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r10, r1);

        $i25 = r0.<android.view.View: int mPrivateFlags2>;

        $i23 = 196608 | $i25;

        r0.<android.view.View: int mPrivateFlags2> = $i23;

        return 1;

     label07:
        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        i2 = interfaceinvoke $r4.<android.view.ViewParent: int getTextAlignment()>();

     label08:
        i1 = i2;

     label09:
        tableswitch(i1)
        {
            case 1: goto label12;
            case 2: goto label12;
            case 3: goto label12;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label12;
            default: goto label10;
        };

     label10:
        $i15 = r0.<android.view.View: int mPrivateFlags2>;

        $i14 = 131072 | $i15;

        r0.<android.view.View: int mPrivateFlags2> = $i14;

        goto label02;

     label11:
        $r13 := @caughtexception;

        r2 = $r13;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r14.<java.lang.Class: java.lang.String getSimpleName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r17, r2);

        i1 = 1;

        goto label09;

     label12:
        $i16 = r0.<android.view.View: int mPrivateFlags2>;

        $i17 = i1 << 17;

        $i19 = $i16 | $i17;

        r0.<android.view.View: int mPrivateFlags2> = $i19;

        goto label02;

     label13:
        $i11 = r0.<android.view.View: int mPrivateFlags2>;

        $i12 = i0 << 17;

        $i13 = $i11 | $i12;

        r0.<android.view.View: int mPrivateFlags2> = $i13;

        goto label02;

     label14:
        $i5 = r0.<android.view.View: int mPrivateFlags2>;

        $i6 = 131072 | $i5;

        r0.<android.view.View: int mPrivateFlags2> = $i6;

        goto label02;

        catch java.lang.AbstractMethodError from label04 to label05 with label06;
        catch java.lang.AbstractMethodError from label07 to label08 with label11;
    }

    public boolean resolveTextDirection()
    {
        android.view.View r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25;
        java.lang.AbstractMethodError r1, r2, $r5, $r13;
        boolean $z0, $z1, $z2;
        android.view.ViewParent $r3, $r4, $r6, $r15;
        java.lang.Class $r7, $r14;
        java.lang.StringBuilder $r8, $r9, $r12, $r16, $r18, $r19;
        java.lang.String $r10, $r11, $r17, $r20;

        r0 := @this: android.view.View;

        $i3 = r0.<android.view.View: int mPrivateFlags2>;

        $i4 = -7681 & $i3;

        r0.<android.view.View: int mPrivateFlags2> = $i4;

        $z0 = specialinvoke r0.<android.view.View: boolean hasRtlSupport()>();

        if $z0 == 0 goto label14;

        i0 = virtualinvoke r0.<android.view.View: int getRawTextDirection()>();

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label13;
            case 2: goto label13;
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label13;
            default: goto label01;
        };

     label01:
        $i10 = r0.<android.view.View: int mPrivateFlags2>;

        $i9 = 1024 | $i10;

        r0.<android.view.View: int mPrivateFlags2> = $i9;

     label02:
        $i7 = r0.<android.view.View: int mPrivateFlags2>;

        $i8 = 512 | $i7;

        r0.<android.view.View: int mPrivateFlags2> = $i8;

        return 1;

     label03:
        $z1 = virtualinvoke r0.<android.view.View: boolean canResolveTextDirection()>();

        if $z1 != 0 goto label04;

        $i22 = r0.<android.view.View: int mPrivateFlags2>;

        $i20 = 1024 | $i22;

        r0.<android.view.View: int mPrivateFlags2> = $i20;

        return 0;

     label04:
        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z2 = interfaceinvoke $r3.<android.view.ViewParent: boolean isTextDirectionResolved()>();

        if $z2 != 0 goto label07;

        $i18 = r0.<android.view.View: int mPrivateFlags2>;

        $i21 = 1024 | $i18;

        r0.<android.view.View: int mPrivateFlags2> = $i21;

     label05:
        return 0;

     label06:
        $r5 := @caughtexception;

        r1 = $r5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r10, r1);

        $i25 = r0.<android.view.View: int mPrivateFlags2>;

        $i23 = 1536 | $i25;

        r0.<android.view.View: int mPrivateFlags2> = $i23;

        return 1;

     label07:
        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        i2 = interfaceinvoke $r4.<android.view.ViewParent: int getTextDirection()>();

     label08:
        i1 = i2;

     label09:
        tableswitch(i1)
        {
            case 1: goto label12;
            case 2: goto label12;
            case 3: goto label12;
            case 4: goto label12;
            case 5: goto label12;
            default: goto label10;
        };

     label10:
        $i15 = r0.<android.view.View: int mPrivateFlags2>;

        $i14 = 1024 | $i15;

        r0.<android.view.View: int mPrivateFlags2> = $i14;

        goto label02;

     label11:
        $r13 := @caughtexception;

        r2 = $r13;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r14.<java.lang.Class: java.lang.String getSimpleName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r17, r2);

        i1 = 3;

        goto label09;

     label12:
        $i16 = r0.<android.view.View: int mPrivateFlags2>;

        $i17 = i1 << 10;

        $i19 = $i16 | $i17;

        r0.<android.view.View: int mPrivateFlags2> = $i19;

        goto label02;

     label13:
        $i11 = r0.<android.view.View: int mPrivateFlags2>;

        $i12 = i0 << 10;

        $i13 = $i11 | $i12;

        r0.<android.view.View: int mPrivateFlags2> = $i13;

        goto label02;

     label14:
        $i5 = r0.<android.view.View: int mPrivateFlags2>;

        $i6 = 1024 | $i5;

        r0.<android.view.View: int mPrivateFlags2> = $i6;

        goto label02;

        catch java.lang.AbstractMethodError from label04 to label05 with label06;
        catch java.lang.AbstractMethodError from label07 to label08 with label11;
    }

    public void restoreHierarchyState(android.util.SparseArray)
    {
        android.view.View r0;
        android.util.SparseArray r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>(r1);

        return;
    }

    boolean rootViewRequestFocus()
    {
        android.view.View r0, r1;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 = virtualinvoke r0.<android.view.View: android.view.View getRootView()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.View: boolean requestFocus()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void saveHierarchyState(android.util.SparseArray)
    {
        android.view.View r0;
        android.util.SparseArray r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.util.SparseArray;

        virtualinvoke r0.<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>(r1);

        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0, l1, $l2, $l3;
        boolean $z0;
        android.view.View$AttachInfo $r3, $r5;
        android.view.ViewRootImpl$RunQueue $r4;
        android.view.ViewRootImpl $r6;
        android.view.Choreographer $r7;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        $z0 = virtualinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label1;

        if r2 == null goto label1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = l0 - $l2;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label2;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r6 = $r5.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        $r7 = $r6.<android.view.ViewRootImpl: android.view.Choreographer mChoreographer>;

        $l3 = staticinvoke <android.view.Choreographer: long subtractFrameDelay(long)>(l1);

        virtualinvoke $r7.<android.view.Choreographer: void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long)>(1, r2, r1, $l3);

     label1:
        return;

     label2:
        $r4 = staticinvoke <android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>();

        virtualinvoke $r4.<android.view.ViewRootImpl$RunQueue: void postDelayed(java.lang.Runnable,long)>(r2, l1);

        return;
    }

    public void scrollBy(int, int)
    {
        android.view.View r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.View: int mScrollX>;

        $i5 = i0 + $i2;

        $i3 = r0.<android.view.View: int mScrollY>;

        $i4 = i1 + $i3;

        virtualinvoke r0.<android.view.View: void scrollTo(int,int)>($i5, $i4);

        return;
    }

    public void scrollTo(int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<android.view.View: int mScrollX>;

        if $i4 != i0 goto label1;

        $i7 = r0.<android.view.View: int mScrollY>;

        if $i7 == i1 goto label2;

     label1:
        i2 = r0.<android.view.View: int mScrollX>;

        i3 = r0.<android.view.View: int mScrollY>;

        r0.<android.view.View: int mScrollX> = i0;

        r0.<android.view.View: int mScrollY> = i1;

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

        $i6 = r0.<android.view.View: int mScrollX>;

        $i5 = r0.<android.view.View: int mScrollY>;

        virtualinvoke r0.<android.view.View: void onScrollChanged(int,int,int,int)>($i6, $i5, i2, i3);

        $z0 = virtualinvoke r0.<android.view.View: boolean awakenScrollBars()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<android.view.View: void postInvalidateOnAnimation()>();

     label2:
        return;
    }

    public void sendAccessibilityEvent(int)
    {
        android.view.View r0;
        int i0;
        boolean $z0;
        android.view.View$AccessibilityDelegate $r1, $r2;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.view.View: boolean includeForAccessibility()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r1 == null goto label2;

        $r2 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke $r2.<android.view.View$AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)>(r0, i0);

        return;

     label2:
        virtualinvoke r0.<android.view.View: void sendAccessibilityEventInternal(int)>(i0);

        return;
    }

    void sendAccessibilityEventInternal(int)
    {
        android.view.View r0;
        int i0;
        android.content.Context $r1;
        android.view.accessibility.AccessibilityManager $r2;
        boolean $z0;
        android.view.accessibility.AccessibilityEvent $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.View: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r1);

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(i0);

        virtualinvoke r0.<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>($r3);

     label1:
        return;
    }

    public void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.View$AccessibilityDelegate $r2, $r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke $r3.<android.view.View$AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>(r0, r1);

        return;

     label1:
        virtualinvoke r0.<android.view.View: void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityEvent r1;
        boolean $z0;
        int $i0, $i1;
        android.view.ViewParent $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<android.view.View: boolean isShown()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        $i1 = 172479 & $i0;

        if $i1 == 0 goto label2;

        virtualinvoke r0.<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

     label2:
        $r2 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        interfaceinvoke $r2.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r0, r1);

        return;
    }

    public void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)
    {
        android.view.View r0;
        android.view.View$AccessibilityDelegate r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$AccessibilityDelegate;

        r0.<android.view.View: android.view.View$AccessibilityDelegate mAccessibilityDelegate> = r1;

        return;
    }

    public void setAccessibilityLiveRegion(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.view.View: int getAccessibilityLiveRegion()>();

        if i0 == $i1 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = -25165825 & $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        $i6 = r0.<android.view.View: int mPrivateFlags2>;

        $i4 = i0 << 23;

        $i5 = 25165824 & $i4;

        $i7 = $i6 | $i5;

        r0.<android.view.View: int mPrivateFlags2> = $i7;

        virtualinvoke r0.<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

     label1:
        return;
    }

    public void setAccessibilitySelection(int, int)
    {
        android.view.View r0;
        int i0, i1, $i2, $i3;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != i1 goto label1;

        $i3 = r0.<android.view.View: int mAccessibilityCursorPosition>;

        if i1 != $i3 goto label1;

        return;

     label1:
        if i0 < 0 goto label3;

        if i0 != i1 goto label3;

        $r1 = virtualinvoke r0.<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>();

        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if i1 > $i2 goto label3;

        r0.<android.view.View: int mAccessibilityCursorPosition> = i0;

     label2:
        virtualinvoke r0.<android.view.View: void sendAccessibilityEvent(int)>(8192);

        return;

     label3:
        r0.<android.view.View: int mAccessibilityCursorPosition> = -1;

        goto label2;
    }

    public void setActivated(boolean)
    {
        android.view.View r0;
        boolean z0, z1;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        i0 = 1073741824;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = i0 & $i2;

        if $i3 == 0 goto label4;

        z1 = 1;

     label1:
        if z1 == z0 goto label3;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        i1 = -1073741825 & $i4;

        if z0 == 0 goto label5;

     label2:
        $i5 = i0 | i1;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

        virtualinvoke r0.<android.view.View: void dispatchSetActivated(boolean)>(z0);

     label3:
        return;

     label4:
        z1 = 0;

        goto label1;

     label5:
        i0 = 0;

        goto label2;
    }

    public void setAlpha(float)
    {
        android.view.View r0;
        float f0, $f1, $f2, $f3;
        android.view.View$TransformationInfo $r1, $r2;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        android.view.DisplayList $r3, $r4;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = $r1.<android.view.View$TransformationInfo: float mAlpha>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r2.<android.view.View$TransformationInfo: float mAlpha> = f0;

        $f2 = 255.0F * f0;

        $i1 = (int) $f2;

        $z0 = virtualinvoke r0.<android.view.View: boolean onSetAlpha(int)>($i1);

        if $z0 == 0 goto label2;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 262144 | $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label1:
        return;

     label2:
        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -262145 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r3 == null goto label1;

        $r4 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $f3 = specialinvoke r0.<android.view.View: float getFinalAlpha()>();

        virtualinvoke $r4.<android.view.DisplayList: void setAlpha(float)>($f3);

        return;
    }

    boolean setAlphaNoInvalidation(float)
    {
        android.view.View r0;
        float f0, $f1, $f2, $f3;
        android.view.View$TransformationInfo $r1, $r2;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        android.view.DisplayList $r3, $r4;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = $r1.<android.view.View$TransformationInfo: float mAlpha>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r2.<android.view.View$TransformationInfo: float mAlpha> = f0;

        $f2 = 255.0F * f0;

        $i1 = (int) $f2;

        $z0 = virtualinvoke r0.<android.view.View: boolean onSetAlpha(int)>($i1);

        if $z0 == 0 goto label1;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 262144 | $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        return 1;

     label1:
        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -262145 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r3 == null goto label2;

        $r4 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $f3 = specialinvoke r0.<android.view.View: float getFinalAlpha()>();

        virtualinvoke $r4.<android.view.DisplayList: void setAlpha(float)>($f3);

     label2:
        return 0;
    }

    public void setAnimation(android.view.animation.Animation)
    {
        android.view.View r0;
        android.view.animation.Animation r1;
        android.view.View$AttachInfo $r2, $r3;
        boolean $z0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.animation.Animation;

        r0.<android.view.View: android.view.animation.Animation mCurrentAnimation> = r1;

        if r1 == null goto label2;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z0 = $r3.<android.view.View$AttachInfo: boolean mScreenOn>;

        if $z0 != 0 goto label1;

        $l0 = virtualinvoke r1.<android.view.animation.Animation: long getStartTime()>();

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l2 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke r1.<android.view.animation.Animation: void setStartTime(long)>($l2);

     label1:
        virtualinvoke r1.<android.view.animation.Animation: void reset()>();

     label2:
        return;
    }

    public void setBackground(android.graphics.drawable.Drawable)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setBackgroundColor(int)
    {
        android.view.View r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        boolean $z0;
        android.graphics.drawable.ColorDrawable $r2, $r5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        $z0 = $r1 instanceof android.graphics.drawable.ColorDrawable;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r5 = (android.graphics.drawable.ColorDrawable) $r4;

        virtualinvoke $r5.<android.graphics.drawable.ColorDrawable: void setColor(int)>(i0);

        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        r0.<android.view.View: int mBackgroundResource> = 0;

        return;

     label1:
        $r2 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r2.<android.graphics.drawable.ColorDrawable: void <init>(int)>(i0);

        virtualinvoke r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1, $r3, $r4, $r7, $r9, $r10, $r11, $r12;
        boolean z0, z1, $z2, $z3;
        android.graphics.Rect r2, $r14;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        java.lang.ThreadLocal $r5, $r13;
        java.lang.Object $r6;
        int[] $r8;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        $r3 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if r1 != $r3 goto label01;

        return;

     label01:
        r0.<android.view.View: int mBackgroundResource> = 0;

        $r4 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r4 == null goto label02;

        $r12 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        virtualinvoke $r12.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r11 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        virtualinvoke r0.<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r11);

     label02:
        if r1 == null goto label15;

        $r5 = <android.view.View: java.lang.ThreadLocal sThreadLocal>;

        $r6 = virtualinvoke $r5.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (android.graphics.Rect) $r6;

        if r2 != null goto label03;

        $r14 = new android.graphics.Rect;

        specialinvoke $r14.<android.graphics.Rect: void <init>()>();

        r2 = $r14;

        $r13 = <android.view.View: java.lang.ThreadLocal sThreadLocal>;

        virtualinvoke $r13.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

     label03:
        virtualinvoke r0.<android.view.View: void resetResolvedDrawables()>();

        $i8 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setLayoutDirection(int)>($i8);

        $z2 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        if $z2 == 0 goto label06;

        virtualinvoke r0.<android.view.View: void resetResolvedPadding()>();

        $i18 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getLayoutDirection()>();

        tableswitch($i18)
        {
            case 1: goto label13;
            default: goto label04;
        };

     label04:
        $i21 = r2.<android.graphics.Rect: int left>;

        r0.<android.view.View: int mUserPaddingLeftInitial> = $i21;

        $i22 = r2.<android.graphics.Rect: int right>;

        r0.<android.view.View: int mUserPaddingRightInitial> = $i22;

        $i26 = r2.<android.graphics.Rect: int left>;

        $i25 = r2.<android.graphics.Rect: int top>;

        $i20 = r2.<android.graphics.Rect: int right>;

        $i19 = r2.<android.graphics.Rect: int bottom>;

        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>($i26, $i25, $i20, $i19);

     label05:
        r0.<android.view.View: boolean mLeftPaddingDefined> = 0;

        r0.<android.view.View: boolean mRightPaddingDefined> = 0;

     label06:
        $r7 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r7 == null goto label07;

        $r9 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        $i16 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        $i17 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        if $i16 != $i17 goto label07;

        $r10 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        i0 = virtualinvoke $r10.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        z0 = 0;

        if i0 == i1 goto label08;

     label07:
        z0 = 1;

     label08:
        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $z3 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z3 == 0 goto label09;

        $r8 = virtualinvoke r0.<android.view.View: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r8);

     label09:
        $i9 = virtualinvoke r0.<android.view.View: int getVisibility()>();

        if $i9 != 0 goto label14;

        z1 = 1;

     label10:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z1, 0);

        r0.<android.view.View: android.graphics.drawable.Drawable mBackground> = r1;

        $i10 = r0.<android.view.View: int mPrivateFlags>;

        $i12 = 128 & $i10;

        if $i12 == 0 goto label11;

        $i11 = r0.<android.view.View: int mPrivateFlags>;

        $i14 = -129 & $i11;

        r0.<android.view.View: int mPrivateFlags> = $i14;

        $i13 = r0.<android.view.View: int mPrivateFlags>;

        $i15 = 256 | $i13;

        r0.<android.view.View: int mPrivateFlags> = $i15;

        z0 = 1;

     label11:
        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        if z0 == 0 goto label12;

        virtualinvoke r0.<android.view.View: void requestLayout()>();

     label12:
        r0.<android.view.View: boolean mBackgroundSizeChanged> = 1;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        return;

     label13:
        $i23 = r2.<android.graphics.Rect: int right>;

        r0.<android.view.View: int mUserPaddingLeftInitial> = $i23;

        $i24 = r2.<android.graphics.Rect: int left>;

        r0.<android.view.View: int mUserPaddingRightInitial> = $i24;

        $i27 = r2.<android.graphics.Rect: int right>;

        $i28 = r2.<android.graphics.Rect: int top>;

        $i29 = r2.<android.graphics.Rect: int left>;

        $i30 = r2.<android.graphics.Rect: int bottom>;

        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>($i27, $i28, $i29, $i30);

        goto label05;

     label14:
        z1 = 0;

        goto label10;

     label15:
        r0.<android.view.View: android.graphics.drawable.Drawable mBackground> = null;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 256 & $i2;

        if $i3 == 0 goto label16;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = -257 & $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        $i6 = r0.<android.view.View: int mPrivateFlags>;

        $i7 = 128 | $i6;

        r0.<android.view.View: int mPrivateFlags> = $i7;

     label16:
        z0 = 1;

        goto label11;
    }

    public void setBackgroundResource(int)
    {
        android.view.View r0;
        int i0, $i1;
        android.graphics.drawable.Drawable r1;
        android.content.res.Resources $r2;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $i1 = r0.<android.view.View: int mBackgroundResource>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r1 = null;

        if i0 == 0 goto label2;

        $r2 = r0.<android.view.View: android.content.res.Resources mResources>;

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

     label2:
        virtualinvoke r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>(r1);

        r0.<android.view.View: int mBackgroundResource> = i0;

        return;
    }

    public final void setBottom(int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        boolean z0, $z1;
        android.view.View$TransformationInfo $r1, $r3, $r6;
        android.view.DisplayList $r2, $r5;
        android.view.View$AttachInfo $r4;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i4 = r0.<android.view.View: int mBottom>;

        if i0 == $i4 goto label08;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label01;

        $r6 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $z1 = staticinvoke <android.view.View$TransformationInfo: boolean access$1600(android.view.View$TransformationInfo)>($r6);

        if $z1 == 0 goto label09;

     label01:
        z0 = 1;

     label02:
        if z0 == 0 goto label11;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r4 == null goto label04;

        $i20 = r0.<android.view.View: int mBottom>;

        if i0 >= $i20 goto label10;

        i3 = r0.<android.view.View: int mBottom>;

     label03:
        $i22 = r0.<android.view.View: int mRight>;

        $i19 = r0.<android.view.View: int mLeft>;

        $i23 = $i22 - $i19;

        $i21 = r0.<android.view.View: int mTop>;

        $i24 = i3 - $i21;

        virtualinvoke r0.<android.view.View: void invalidate(int,int,int,int)>(0, 0, $i23, $i24);

     label04:
        $i6 = r0.<android.view.View: int mRight>;

        $i5 = r0.<android.view.View: int mLeft>;

        i1 = $i6 - $i5;

        $i8 = r0.<android.view.View: int mBottom>;

        $i7 = r0.<android.view.View: int mTop>;

        i2 = $i8 - $i7;

        r0.<android.view.View: int mBottom> = i0;

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label05;

        $r5 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $i18 = r0.<android.view.View: int mBottom>;

        virtualinvoke $r5.<android.view.DisplayList: void setBottom(int)>($i18);

     label05:
        $i10 = r0.<android.view.View: int mBottom>;

        $i9 = r0.<android.view.View: int mTop>;

        $i11 = $i10 - $i9;

        specialinvoke r0.<android.view.View: void sizeChange(int,int,int,int)>(i1, $i11, i1, i2);

        if z0 != 0 goto label07;

        $i15 = r0.<android.view.View: int mPrivateFlags>;

        $i14 = 536870912 & $i15;

        if $i14 != 0 goto label06;

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r3.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

     label06:
        $i17 = r0.<android.view.View: int mPrivateFlags>;

        $i16 = 32 | $i17;

        r0.<android.view.View: int mPrivateFlags> = $i16;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label07:
        r0.<android.view.View: boolean mBackgroundSizeChanged> = 1;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

        $i13 = r0.<android.view.View: int mPrivateFlags2>;

        $i12 = 268435456 & $i13;

        if $i12 != 268435456 goto label08;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label08:
        return;

     label09:
        z0 = 0;

        goto label02;

     label10:
        i3 = i0;

        goto label03;

     label11:
        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        goto label04;
    }

    public void setCameraDistance(float)
    {
        android.view.View r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.view.View$TransformationInfo r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        int $i0, $i1, $i2;
        android.graphics.Camera $r4, $r5, $r8;
        android.view.DisplayList $r6, $r7;
        android.graphics.Matrix $r9;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        $r2 = r0.<android.view.View: android.content.res.Resources mResources>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r3.<android.util.DisplayMetrics: int densityDpi>;

        f1 = (float) $i0;

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r4 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        if $r4 != null goto label1;

        $r8 = new android.graphics.Camera;

        specialinvoke $r8.<android.graphics.Camera: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1902(android.view.View$TransformationInfo,android.graphics.Camera)>(r1, $r8);

        $r9 = new android.graphics.Matrix;

        specialinvoke $r9.<android.graphics.Matrix: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2002(android.view.View$TransformationInfo,android.graphics.Matrix)>(r1, $r9);

     label1:
        $r5 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>(r1);

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f3 = neg $f2;

        $f4 = $f3 / f1;

        virtualinvoke $r5.<android.graphics.Camera: void setLocation(float,float,float)>(0.0F, 0.0F, $f4);

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 0);

        $r6 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r6 == null goto label2;

        $r7 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f5 = neg $f6;

        $f7 = $f5 / f1;

        virtualinvoke $r7.<android.view.DisplayList: void setCameraDistance(float)>($f7);

     label2:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 268435456 & $i1;

        if $i2 != 268435456 goto label3;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label3:
        return;
    }

    public void setClickable(boolean)
    {
        android.view.View r0;
        boolean z0;
        short s0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        s0 = 16384;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(s0, 16384);

        return;

     label2:
        s0 = 0;

        goto label1;
    }

    public void setClipBounds(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        if r1 == null goto label4;

        $r3 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        $z0 = virtualinvoke r1.<android.graphics.Rect: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        if $r4 != null goto label3;

        virtualinvoke r0.<android.view.View: void invalidate()>();

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r1);

        r0.<android.view.View: android.graphics.Rect mClipBounds> = $r9;

        return;

     label3:
        $r5 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        $i1 = $r5.<android.graphics.Rect: int left>;

        $i0 = r1.<android.graphics.Rect: int left>;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        $r6 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        $i4 = $r6.<android.graphics.Rect: int top>;

        $i3 = r1.<android.graphics.Rect: int top>;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

        $r7 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        $i8 = $r7.<android.graphics.Rect: int right>;

        $i6 = r1.<android.graphics.Rect: int right>;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i6);

        $r8 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        $i11 = $r8.<android.graphics.Rect: int bottom>;

        $i9 = r1.<android.graphics.Rect: int bottom>;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i9);

        virtualinvoke r0.<android.view.View: void invalidate(int,int,int,int)>($i2, $i5, $i7, $i10);

        $r10 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        virtualinvoke $r10.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        return;

     label4:
        $r2 = r0.<android.view.View: android.graphics.Rect mClipBounds>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.view.View: void invalidate()>();

        r0.<android.view.View: android.graphics.Rect mClipBounds> = null;

        return;
    }

    public void setContentDescription(java.lang.CharSequence)
    {
        android.view.View r0;
        java.lang.CharSequence r1, $r2, $r3;
        boolean z0, $z1;
        int $i0, $i1;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.view.View: java.lang.CharSequence mContentDescription>;

        if $r2 != null goto label2;

        if r1 != null goto label3;

     label1:
        return;

     label2:
        $r3 = r0.<android.view.View: java.lang.CharSequence mContentDescription>;

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

     label3:
        r0.<android.view.View: java.lang.CharSequence mContentDescription> = r1;

        if r1 == null goto label5;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i1 <= 0 goto label5;

        z0 = 1;

     label4:
        if z0 == 0 goto label6;

        $i0 = virtualinvoke r0.<android.view.View: int getImportantForAccessibility()>();

        if $i0 != 0 goto label6;

        virtualinvoke r0.<android.view.View: void setImportantForAccessibility(int)>(1);

        virtualinvoke r0.<android.view.View: void notifySubtreeAccessibilityStateChangedIfNeeded()>();

        return;

     label5:
        z0 = 0;

        goto label4;

     label6:
        virtualinvoke r0.<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>(4);

        return;
    }

    public void setDisabledSystemUiVisibility(int)
    {
        android.view.View r0;
        int i0, $i1;
        android.view.View$AttachInfo $r1, $r2, $r3;
        android.view.ViewParent $r4, $r5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i1 = $r2.<android.view.View$AttachInfo: int mDisabledSystemUiVisibility>;

        if $i1 == i0 goto label1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r3.<android.view.View$AttachInfo: int mDisabledSystemUiVisibility> = i0;

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label1;

        $r5 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r5.<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>(r0);

     label1:
        return;
    }

    void setDisplayListProperties(android.view.DisplayList)
    {
        android.view.View r0;
        android.view.DisplayList r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        android.view.ViewGroup r2, $r26, $r27;
        android.view.animation.Transformation r3;
        int i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.view.ViewParent $r4, $r5, $r24, $r25, $r29;
        android.view.View$TransformationInfo $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r19, $r21;
        byte $b5, $b6;
        android.graphics.Camera $r14, $r17, $r18;
        android.graphics.Matrix $r22, $r28;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.DisplayList;

        if r1 == null goto label7;

        $i4 = r0.<android.view.View: int mLeft>;

        $i3 = r0.<android.view.View: int mTop>;

        $i2 = r0.<android.view.View: int mRight>;

        $i1 = r0.<android.view.View: int mBottom>;

        virtualinvoke r1.<android.view.DisplayList: void setLeftTopRightBottom(int,int,int,int)>($i4, $i3, $i2, $i1);

        $z1 = virtualinvoke r0.<android.view.View: boolean hasOverlappingRendering()>();

        virtualinvoke r1.<android.view.DisplayList: void setHasOverlappingRendering(boolean)>($z1);

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z2 = $r4 instanceof android.view.ViewGroup;

        if $z2 == 0 goto label2;

        $r29 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r27 = (android.view.ViewGroup) $r29;

        $i13 = $r27.<android.view.ViewGroup: int mGroupFlags>;

        $i14 = 1 & $i13;

        if $i14 == 0 goto label8;

        z0 = 1;

     label1:
        virtualinvoke r1.<android.view.DisplayList: void setClipToBounds(boolean)>(z0);

     label2:
        f0 = 1.0F;

        $r5 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z3 = $r5 instanceof android.view.ViewGroup;

        if $z3 == 0 goto label4;

        $r24 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r26 = (android.view.ViewGroup) $r24;

        $i11 = $r26.<android.view.ViewGroup: int mGroupFlags>;

        $i10 = 2048 & $i11;

        if $i10 == 0 goto label4;

        $r25 = r0.<android.view.View: android.view.ViewParent mParent>;

        r2 = (android.view.ViewGroup) $r25;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.animation.Transformation getChildTransformation()>();

        $z5 = virtualinvoke r2.<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>(r0, r3);

        if $z5 == 0 goto label4;

        i0 = virtualinvoke r3.<android.view.animation.Transformation: int getTransformationType()>();

        if i0 == 0 goto label4;

        $i12 = i0 & 1;

        if $i12 == 0 goto label3;

        f0 = virtualinvoke r3.<android.view.animation.Transformation: float getAlpha()>();

     label3:
        $i15 = i0 & 2;

        if $i15 == 0 goto label4;

        $r28 = virtualinvoke r3.<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>();

        virtualinvoke r1.<android.view.DisplayList: void setMatrix(android.graphics.Matrix)>($r28);

     label4:
        $r6 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r6 == null goto label9;

        $f2 = specialinvoke r0.<android.view.View: float getFinalAlpha()>();

        f1 = f0 * $f2;

        $b6 = f1 cmpg 1.0F;

        if $b6 >= 0 goto label5;

        $f13 = 255.0F * f1;

        $i9 = (int) $f13;

        $z4 = virtualinvoke r0.<android.view.View: boolean onSetAlpha(int)>($i9);

        if $z4 == 0 goto label5;

        f1 = 1.0F;

     label5:
        $r7 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f9 = $r7.<android.view.View$TransformationInfo: float mTranslationX>;

        $r9 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f6 = $r9.<android.view.View$TransformationInfo: float mTranslationY>;

        $r8 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f5 = $r8.<android.view.View$TransformationInfo: float mRotation>;

        $r11 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f8 = $r11.<android.view.View$TransformationInfo: float mRotationX>;

        $r10 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f7 = $r10.<android.view.View$TransformationInfo: float mRotationY>;

        $r13 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f3 = $r13.<android.view.View$TransformationInfo: float mScaleX>;

        $r12 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f4 = $r12.<android.view.View$TransformationInfo: float mScaleY>;

        virtualinvoke r1.<android.view.DisplayList: void setTransformationInfo(float,float,float,float,float,float,float,float)>(f1, $f9, $f6, $f5, $f8, $f7, $f3, $f4);

        $r16 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r14 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>($r16);

        if $r14 != null goto label6;

        $r19 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r18 = new android.graphics.Camera;

        specialinvoke $r18.<android.graphics.Camera: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1902(android.view.View$TransformationInfo,android.graphics.Camera)>($r19, $r18);

        $r21 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r22 = new android.graphics.Matrix;

        specialinvoke $r22.<android.graphics.Matrix: void <init>()>();

        staticinvoke <android.view.View$TransformationInfo: android.graphics.Matrix access$2002(android.view.View$TransformationInfo,android.graphics.Matrix)>($r21, $r22);

     label6:
        $r15 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r17 = staticinvoke <android.view.View$TransformationInfo: android.graphics.Camera access$1900(android.view.View$TransformationInfo)>($r15);

        $f10 = virtualinvoke $r17.<android.graphics.Camera: float getLocationZ()>();

        virtualinvoke r1.<android.view.DisplayList: void setCameraDistance(float)>($f10);

        $i7 = r0.<android.view.View: int mPrivateFlags>;

        $i8 = 536870912 & $i7;

        if $i8 != 536870912 goto label7;

        $f11 = virtualinvoke r0.<android.view.View: float getPivotX()>();

        virtualinvoke r1.<android.view.DisplayList: void setPivotX(float)>($f11);

        $f12 = virtualinvoke r0.<android.view.View: float getPivotY()>();

        virtualinvoke r1.<android.view.DisplayList: void setPivotY(float)>($f12);

     label7:
        return;

     label8:
        z0 = 0;

        goto label1;

     label9:
        $b5 = f0 cmpg 1.0F;

        if $b5 >= 0 goto label7;

        virtualinvoke r1.<android.view.DisplayList: void setAlpha(float)>(f0);

        return;
    }

    public void setDrawingCacheBackgroundColor(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.View: int mDrawingCacheBackgroundColor>;

        if i0 == $i1 goto label1;

        r0.<android.view.View: int mDrawingCacheBackgroundColor> = i0;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -32769 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

     label1:
        return;
    }

    public void setDrawingCacheEnabled(boolean)
    {
        android.view.View r0;
        boolean z0;
        char c0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        r0.<android.view.View: boolean mCachingFailed> = 0;

        c0 = 0;

        if z0 == 0 goto label1;

        c0 = 32768;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(c0, 32768);

        return;
    }

    public void setDrawingCacheQuality(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 1572864);

        return;
    }

    public void setDuplicateParentStateEnabled(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        i0 = 4194304;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 4194304);

        return;

     label2:
        i0 = 0;

        goto label1;
    }

    public void setEnabled(boolean)
    {
        android.view.View r0;
        boolean z0, $z1;
        byte b0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.view.View: boolean isEnabled()>();

        if z0 != $z1 goto label2;

     label1:
        return;

     label2:
        if z0 == 0 goto label4;

        b0 = 0;

     label3:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(b0, 32);

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        if z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void cancelPendingInputEvents()>();

        return;

     label4:
        b0 = 32;

        goto label3;
    }

    public void setFadingEdgeLength(int)
    {
        android.view.View r0;
        int i0;
        android.view.View$ScrollabilityCache $r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void initScrollCache()>();

        $r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        $r1.<android.view.View$ScrollabilityCache: int fadingEdgeLength> = i0;

        return;
    }

    public void setFilterTouchesWhenObscured(boolean)
    {
        android.view.View r0;
        boolean z0;
        short s0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        s0 = 1024;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(s0, 1024);

        return;

     label2:
        s0 = 0;

        goto label1;
    }

    public void setFitsSystemWindows(boolean)
    {
        android.view.View r0;
        boolean z0;
        byte b0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        b0 = 2;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(b0, 2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    void setFlags(int, int)
    {
        android.view.View r0, $r13, $r15, $r23;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.content.Context $r1;
        android.view.accessibility.AccessibilityManager $r2;
        android.view.View$AttachInfo $r3, $r4, $r16, $r17, $r19, $r20;
        android.view.ViewParent $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r18, $r21, $r22, $r24, $r25, $r26;
        android.graphics.drawable.Drawable $r7;
        android.view.ViewGroup $r10;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.view.View: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r1);

        z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if z0 == 0 goto label03;

        $z8 = virtualinvoke r0.<android.view.View: boolean includeForAccessibility()>();

        if $z8 == 0 goto label03;

        z1 = 1;

     label01:
        i2 = r0.<android.view.View: int mViewFlags>;

        $i7 = r0.<android.view.View: int mViewFlags>;

        $i6 = i1 ^ -1;

        $i9 = $i7 & $i6;

        $i8 = i0 & i1;

        $i11 = $i9 | $i8;

        r0.<android.view.View: int mViewFlags> = $i11;

        $i10 = r0.<android.view.View: int mViewFlags>;

        i3 = i2 ^ $i10;

        if i3 != 0 goto label04;

     label02:
        return;

     label03:
        z1 = 0;

        goto label01;

     label04:
        i4 = r0.<android.view.View: int mPrivateFlags>;

        $i13 = i3 & 1;

        if $i13 == 0 goto label05;

        $i59 = i4 & 16;

        if $i59 == 0 goto label05;

        $i58 = i2 & 1;

        if $i58 != 1 goto label24;

        $i60 = i4 & 2;

        if $i60 == 0 goto label24;

        virtualinvoke r0.<android.view.View: void clearFocus()>();

     label05:
        i5 = i0 & 12;

        if i5 != 0 goto label06;

        $i52 = i3 & 12;

        if $i52 == 0 goto label06;

        $i54 = r0.<android.view.View: int mPrivateFlags>;

        $i53 = 32 | $i54;

        r0.<android.view.View: int mPrivateFlags> = $i53;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        virtualinvoke r0.<android.view.View: void needGlobalAttributesUpdate(boolean)>(1);

        $r22 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r22 == null goto label06;

        $i51 = r0.<android.view.View: int mBottom>;

        $i49 = r0.<android.view.View: int mTop>;

        if $i51 <= $i49 goto label06;

        $i57 = r0.<android.view.View: int mRight>;

        $i50 = r0.<android.view.View: int mLeft>;

        if $i57 <= $i50 goto label06;

        $r26 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r26.<android.view.ViewParent: void focusableViewAvailable(android.view.View)>(r0);

     label06:
        $i12 = i3 & 8;

        if $i12 == 0 goto label10;

        virtualinvoke r0.<android.view.View: void needGlobalAttributesUpdate(boolean)>(0);

        virtualinvoke r0.<android.view.View: void requestLayout()>();

        $i43 = r0.<android.view.View: int mViewFlags>;

        $i44 = 12 & $i43;

        if $i44 != 8 goto label09;

        $z7 = virtualinvoke r0.<android.view.View: boolean hasFocus()>();

        if $z7 == 0 goto label07;

        virtualinvoke r0.<android.view.View: void clearFocus()>();

     label07:
        virtualinvoke r0.<android.view.View: void clearAccessibilityFocus()>();

        virtualinvoke r0.<android.view.View: void destroyDrawingCache()>();

        $r21 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z6 = $r21 instanceof android.view.View;

        if $z6 == 0 goto label08;

        $r18 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r23 = (android.view.View) $r18;

        virtualinvoke $r23.<android.view.View: void invalidate(boolean)>(1);

     label08:
        $i47 = r0.<android.view.View: int mPrivateFlags>;

        $i48 = 32 | $i47;

        r0.<android.view.View: int mPrivateFlags> = $i48;

     label09:
        $r19 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r19 == null goto label10;

        $r20 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r20.<android.view.View$AttachInfo: boolean mViewVisibilityChanged> = 1;

     label10:
        $i15 = i3 & 4;

        if $i15 == 0 goto label13;

        virtualinvoke r0.<android.view.View: void needGlobalAttributesUpdate(boolean)>(0);

        $i42 = r0.<android.view.View: int mPrivateFlags>;

        $i41 = 32 | $i42;

        r0.<android.view.View: int mPrivateFlags> = $i41;

        $i45 = r0.<android.view.View: int mViewFlags>;

        $i46 = 12 & $i45;

        if $i46 != 4 goto label12;

        $r15 = virtualinvoke r0.<android.view.View: android.view.View getRootView()>();

        if $r15 == r0 goto label12;

        $z5 = virtualinvoke r0.<android.view.View: boolean hasFocus()>();

        if $z5 == 0 goto label11;

        virtualinvoke r0.<android.view.View: void clearFocus()>();

     label11:
        virtualinvoke r0.<android.view.View: void clearAccessibilityFocus()>();

     label12:
        $r16 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r16 == null goto label13;

        $r17 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r17.<android.view.View$AttachInfo: boolean mViewVisibilityChanged> = 1;

     label13:
        $i14 = i3 & 12;

        if $i14 == 0 goto label16;

        if i5 == 0 goto label14;

        specialinvoke r0.<android.view.View: void cleanupDraw()>();

     label14:
        $r9 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z4 = $r9 instanceof android.view.ViewGroup;

        if $z4 == 0 goto label25;

        $r11 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r10 = (android.view.ViewGroup) $r11;

        $i40 = i3 & 12;

        virtualinvoke $r10.<android.view.ViewGroup: void onChildVisibilityChanged(android.view.View,int,int)>(r0, $i40, i5);

        $r14 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r13 = (android.view.View) $r14;

        virtualinvoke $r13.<android.view.View: void invalidate(boolean)>(1);

     label15:
        virtualinvoke r0.<android.view.View: void dispatchVisibilityChanged(android.view.View,int)>(r0, i5);

     label16:
        $i17 = 131072 & i3;

        if $i17 == 0 goto label17;

        virtualinvoke r0.<android.view.View: void destroyDrawingCache()>();

     label17:
        $i16 = 32768 & i3;

        if $i16 == 0 goto label18;

        virtualinvoke r0.<android.view.View: void destroyDrawingCache()>();

        $i35 = r0.<android.view.View: int mPrivateFlags>;

        $i39 = -32769 & $i35;

        r0.<android.view.View: int mPrivateFlags> = $i39;

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

     label18:
        $i19 = 1572864 & i3;

        if $i19 == 0 goto label19;

        virtualinvoke r0.<android.view.View: void destroyDrawingCache()>();

        $i37 = r0.<android.view.View: int mPrivateFlags>;

        $i36 = -32769 & $i37;

        r0.<android.view.View: int mPrivateFlags> = $i36;

     label19:
        $i18 = i3 & 128;

        if $i18 == 0 goto label21;

        $i26 = r0.<android.view.View: int mViewFlags>;

        $i27 = 128 & $i26;

        if $i27 == 0 goto label27;

        $r7 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r7 == null goto label26;

        $i34 = r0.<android.view.View: int mPrivateFlags>;

        $i31 = -129 & $i34;

        r0.<android.view.View: int mPrivateFlags> = $i31;

        $i32 = r0.<android.view.View: int mPrivateFlags>;

        $i38 = 256 | $i32;

        r0.<android.view.View: int mPrivateFlags> = $i38;

     label20:
        virtualinvoke r0.<android.view.View: void requestLayout()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label21:
        $i21 = 67108864 & i3;

        if $i21 == 0 goto label22;

        $r5 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r5 == null goto label22;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label22;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z3 = $r4.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes>;

        if $z3 != 0 goto label22;

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r6.<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>(r0);

     label22:
        if z0 == 0 goto label02;

        $i20 = i3 & 1;

        if $i20 != 0 goto label23;

        $i22 = i3 & 12;

        if $i22 != 0 goto label23;

        $i24 = i3 & 16384;

        if $i24 != 0 goto label23;

        $i23 = 2097152 & i3;

        if $i23 == 0 goto label29;

     label23:
        $z2 = virtualinvoke r0.<android.view.View: boolean includeForAccessibility()>();

        if z1 == $z2 goto label28;

        virtualinvoke r0.<android.view.View: void notifySubtreeAccessibilityStateChangedIfNeeded()>();

        return;

     label24:
        $i56 = i2 & 1;

        if $i56 != 0 goto label05;

        $i55 = i4 & 2;

        if $i55 != 0 goto label05;

        $r25 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r25 == null goto label05;

        $r24 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r24.<android.view.ViewParent: void focusableViewAvailable(android.view.View)>(r0);

        goto label05;

     label25:
        $r8 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r8 == null goto label15;

        $r12 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r12.<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>(r0, null);

        goto label15;

     label26:
        $i28 = r0.<android.view.View: int mPrivateFlags>;

        $i33 = 128 | $i28;

        r0.<android.view.View: int mPrivateFlags> = $i33;

        goto label20;

     label27:
        $i29 = r0.<android.view.View: int mPrivateFlags>;

        $i30 = -129 & $i29;

        r0.<android.view.View: int mPrivateFlags> = $i30;

        goto label20;

     label28:
        virtualinvoke r0.<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        return;

     label29:
        $i25 = i3 & 32;

        if $i25 == 0 goto label02;

        virtualinvoke r0.<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        return;
    }

    public void setFocusable(boolean)
    {
        android.view.View r0;
        boolean z0;
        byte b0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(0, 262144);

     label1:
        b0 = 0;

        if z0 == 0 goto label2;

        b0 = 1;

     label2:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(b0, 1);

        return;
    }

    public void setFocusableInTouchMode(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        i0 = 262144;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 262144);

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(1, 1);

     label2:
        return;

     label3:
        i0 = 0;

        goto label1;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        boolean z0, z1;
        android.view.DisplayList $r1, $r4;
        android.view.View$TransformationInfo $r2, $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i10 = r0.<android.view.View: int mLeft>;

        if $i10 != i0 goto label1;

        $i31 = r0.<android.view.View: int mRight>;

        if $i31 != i2 goto label1;

        $i30 = r0.<android.view.View: int mTop>;

        if $i30 != i1 goto label1;

        i9 = r0.<android.view.View: int mBottom>;

        z0 = 0;

        if i9 == i3 goto label8;

     label1:
        z0 = 1;

        $i11 = r0.<android.view.View: int mPrivateFlags>;

        i4 = 32 & $i11;

        $i14 = r0.<android.view.View: int mRight>;

        $i12 = r0.<android.view.View: int mLeft>;

        i5 = $i14 - $i12;

        $i15 = r0.<android.view.View: int mBottom>;

        $i13 = r0.<android.view.View: int mTop>;

        i6 = $i15 - $i13;

        i7 = i2 - i0;

        i8 = i3 - i1;

        if i7 != i5 goto label2;

        if i8 == i6 goto label9;

     label2:
        z1 = 1;

     label3:
        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(z1);

        r0.<android.view.View: int mLeft> = i0;

        r0.<android.view.View: int mTop> = i1;

        r0.<android.view.View: int mRight> = i2;

        r0.<android.view.View: int mBottom> = i3;

        $r1 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r1 == null goto label4;

        $r4 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $i27 = r0.<android.view.View: int mLeft>;

        $i26 = r0.<android.view.View: int mTop>;

        $i29 = r0.<android.view.View: int mRight>;

        $i28 = r0.<android.view.View: int mBottom>;

        virtualinvoke $r4.<android.view.DisplayList: void setLeftTopRightBottom(int,int,int,int)>($i27, $i26, $i29, $i28);

     label4:
        $i17 = r0.<android.view.View: int mPrivateFlags>;

        $i16 = 16 | $i17;

        r0.<android.view.View: int mPrivateFlags> = $i16;

        if z1 == 0 goto label6;

        $i25 = r0.<android.view.View: int mPrivateFlags>;

        $i24 = 536870912 & $i25;

        if $i24 != 0 goto label5;

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r3 == null goto label5;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r2.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

     label5:
        specialinvoke r0.<android.view.View: void sizeChange(int,int,int,int)>(i7, i8, i5, i6);

     label6:
        $i19 = r0.<android.view.View: int mViewFlags>;

        $i18 = 12 & $i19;

        if $i18 != 0 goto label7;

        $i23 = r0.<android.view.View: int mPrivateFlags>;

        $i22 = 32 | $i23;

        r0.<android.view.View: int mPrivateFlags> = $i22;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(z1);

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

     label7:
        $i21 = r0.<android.view.View: int mPrivateFlags>;

        $i20 = i4 | $i21;

        r0.<android.view.View: int mPrivateFlags> = $i20;

        r0.<android.view.View: boolean mBackgroundSizeChanged> = 1;

        virtualinvoke r0.<android.view.View: void notifySubtreeAccessibilityStateChangedIfNeeded()>();

     label8:
        return z0;

     label9:
        z1 = 0;

        goto label3;
    }

    public void setHapticFeedbackEnabled(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        i0 = 268435456;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 268435456);

        return;

     label2:
        i0 = 0;

        goto label1;
    }

    public void setHasTransientState(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        java.lang.AbstractMethodError r1, $r5;
        android.view.ViewParent $r2, $r3, $r6;
        java.lang.StringBuilder $r4, $r9, $r10;
        java.lang.String $r7, $r11;
        java.lang.Class $r8;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label03;

        $i10 = r0.<android.view.View: int mTransientStateCount>;

        i0 = 1 + $i10;

     label01:
        r0.<android.view.View: int mTransientStateCount> = i0;

        $i4 = r0.<android.view.View: int mTransientStateCount>;

        if $i4 >= 0 goto label04;

        r0.<android.view.View: int mTransientStateCount> = 0;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("View", "hasTransientState decremented below 0: unmatched pair of setHasTransientState calls");

     label02:
        return;

     label03:
        $i3 = r0.<android.view.View: int mTransientStateCount>;

        i0 = -1 + $i3;

        goto label01;

     label04:
        if z0 == 0 goto label05;

        $i8 = r0.<android.view.View: int mTransientStateCount>;

        if $i8 == 1 goto label06;

     label05:
        if z0 != 0 goto label02;

        $i5 = r0.<android.view.View: int mTransientStateCount>;

        if $i5 != 0 goto label02;

     label06:
        $i6 = r0.<android.view.View: int mPrivateFlags2>;

        i1 = 2147483647 & $i6;

        if z0 == 0 goto label11;

        i2 = -2147483648;

     label07:
        $i7 = i2 | i1;

        r0.<android.view.View: int mPrivateFlags2> = $i7;

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r2 == null goto label02;

     label08:
        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r3.<android.view.ViewParent: void childHasTransientStateChanged(android.view.View,boolean)>(r0, z0);

     label09:
        return;

     label10:
        $r5 := @caughtexception;

        r1 = $r5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r8 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not fully implement ViewParent");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", $r11, r1);

        return;

     label11:
        i2 = 0;

        goto label07;

        catch java.lang.AbstractMethodError from label08 to label09 with label10;
    }

    public void setHorizontalFadingEdgeEnabled(boolean)
    {
        android.view.View r0;
        boolean z0, $z1;
        int $i0, $i1;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.view.View: boolean isHorizontalFadingEdgeEnabled()>();

        if $z1 == z0 goto label2;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.view.View: void initScrollCache()>();

     label1:
        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 4096 ^ $i0;

        r0.<android.view.View: int mViewFlags> = $i1;

     label2:
        return;
    }

    public void setHorizontalScrollBarEnabled(boolean)
    {
        android.view.View r0;
        boolean z0, $z1;
        int $i0, $i1;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.view.View: boolean isHorizontalScrollBarEnabled()>();

        if $z1 == z0 goto label1;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 256 ^ $i0;

        r0.<android.view.View: int mViewFlags> = $i1;

        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label1:
        return;
    }

    public void setHovered(boolean)
    {
        android.view.View r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 268435456 & $i4;

        if $i5 != 0 goto label1;

        $i6 = r0.<android.view.View: int mPrivateFlags>;

        $i7 = 268435456 | $i6;

        r0.<android.view.View: int mPrivateFlags> = $i7;

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

        virtualinvoke r0.<android.view.View: void onHoverChanged(boolean)>(1);

     label1:
        return;

     label2:
        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 268435456 & $i0;

        if $i1 == 0 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -268435457 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

        virtualinvoke r0.<android.view.View: void onHoverChanged(boolean)>(0);

        return;
    }

    public void setId(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mID> = i0;

        $i1 = r0.<android.view.View: int mID>;

        if $i1 != -1 goto label1;

        $i2 = r0.<android.view.View: int mLabelForId>;

        if $i2 == -1 goto label1;

        $i3 = staticinvoke <android.view.View: int generateViewId()>();

        r0.<android.view.View: int mID> = $i3;

     label1:
        return;
    }

    public void setImportantForAccessibility(int)
    {
        android.view.View r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, z1, $z2, $z3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        z0 = 1;

        i1 = virtualinvoke r0.<android.view.View: int getImportantForAccessibility()>();

        if i0 == i1 goto label5;

        if i1 == 0 goto label1;

        if i0 != 0 goto label6;

     label1:
        z1 = z0;

     label2:
        if z1 == 0 goto label7;

        $z3 = virtualinvoke r0.<android.view.View: boolean includeForAccessibility()>();

        if $z3 == 0 goto label7;

     label3:
        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = -7340033 & $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        $i6 = r0.<android.view.View: int mPrivateFlags2>;

        $i4 = i0 << 20;

        $i5 = 7340032 & $i4;

        $i7 = $i6 | $i5;

        r0.<android.view.View: int mPrivateFlags2> = $i7;

        if z1 == 0 goto label4;

        $z2 = virtualinvoke r0.<android.view.View: boolean includeForAccessibility()>();

        if z0 == $z2 goto label8;

     label4:
        virtualinvoke r0.<android.view.View: void notifySubtreeAccessibilityStateChangedIfNeeded()>();

     label5:
        return;

     label6:
        z1 = 0;

        goto label2;

     label7:
        z0 = 0;

        goto label3;

     label8:
        virtualinvoke r0.<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        return;
    }

    public void setIsRootNamespace(boolean)
    {
        android.view.View r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 8 | $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        return;

     label1:
        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = -9 & $i0;

        r0.<android.view.View: int mPrivateFlags> = $i1;

        return;
    }

    public void setKeepScreenOn(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        i0 = 67108864;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 67108864);

        return;

     label2:
        i0 = 0;

        goto label1;
    }

    public void setLabelFor(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mLabelForId> = i0;

        $i1 = r0.<android.view.View: int mLabelForId>;

        if $i1 == -1 goto label1;

        $i2 = r0.<android.view.View: int mID>;

        if $i2 != -1 goto label1;

        $i3 = staticinvoke <android.view.View: int generateViewId()>();

        r0.<android.view.View: int mID> = $i3;

     label1:
        return;
    }

    public void setLayerPaint(android.graphics.Paint)
    {
        android.view.View r0;
        android.graphics.Paint r1, r2, $r4;
        int i0;
        android.view.HardwareLayer r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Paint;

        i0 = virtualinvoke r0.<android.view.View: int getLayerType()>();

        if i0 == 0 goto label3;

        if r1 != null goto label4;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r2 = $r4;

     label1:
        r0.<android.view.View: android.graphics.Paint mLayerPaint> = r2;

        if i0 != 2 goto label5;

        r3 = virtualinvoke r0.<android.view.View: android.view.HardwareLayer getHardwareLayer()>();

        if r3 == null goto label2;

        virtualinvoke r3.<android.view.HardwareLayer: void setLayerPaint(android.graphics.Paint)>(r1);

     label2:
        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 0);

     label3:
        return;

     label4:
        r2 = r1;

        goto label1;

     label5:
        virtualinvoke r0.<android.view.View: void invalidate()>();

        return;
    }

    public void setLayerType(int, android.graphics.Paint)
    {
        android.view.View r0;
        int i0, i1, $i2, $i3;
        android.graphics.Paint r1, $r5, $r6, $r7;
        boolean z0;
        android.graphics.Rect r2, $r4;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Paint;

        if i0 < 0 goto label01;

        if i0 <= 2 goto label02;

     label01:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Layer type can only be one of: LAYER_TYPE_NONE, LAYER_TYPE_SOFTWARE or LAYER_TYPE_HARDWARE");

        throw $r3;

     label02:
        $i2 = r0.<android.view.View: int mLayerType>;

        if i0 != $i2 goto label05;

        if i0 == 0 goto label04;

        $r6 = r0.<android.view.View: android.graphics.Paint mLayerPaint>;

        if r1 == $r6 goto label04;

        if r1 != null goto label03;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>()>();

        r1 = $r7;

     label03:
        r0.<android.view.View: android.graphics.Paint mLayerPaint> = r1;

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label04:
        return;

     label05:
        $i3 = r0.<android.view.View: int mLayerType>;

        tableswitch($i3)
        {
            case 1: goto label11;
            case 2: goto label10;
            default: goto label06;
        };

     label06:
        r0.<android.view.View: int mLayerType> = i0;

        i1 = r0.<android.view.View: int mLayerType>;

        z0 = 0;

        if i1 != 0 goto label07;

        z0 = 1;

     label07:
        if z0 == 0 goto label12;

        r1 = null;

     label08:
        r0.<android.view.View: android.graphics.Paint mLayerPaint> = r1;

        r2 = null;

        if z0 == 0 goto label13;

     label09:
        r0.<android.view.View: android.graphics.Rect mLocalDirtyRect> = r2;

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        return;

     label10:
        virtualinvoke r0.<android.view.View: boolean destroyLayer(boolean)>(0);

     label11:
        virtualinvoke r0.<android.view.View: void destroyDrawingCache()>();

        goto label06;

     label12:
        if r1 != null goto label08;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r1 = $r5;

        goto label08;

     label13:
        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r2 = $r4;

        goto label09;
    }

    public void setLayoutDirection(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.view.View: int getRawLayoutDirection()>();

        if $i1 == i0 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = -13 & $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        virtualinvoke r0.<android.view.View: void resetRtlProperties()>();

        $i6 = r0.<android.view.View: int mPrivateFlags2>;

        $i4 = i0 << 2;

        $i5 = 12 & $i4;

        $i7 = $i6 | $i5;

        r0.<android.view.View: int mPrivateFlags2> = $i7;

        virtualinvoke r0.<android.view.View: boolean resolveRtlPropertiesIfNeeded()>();

        virtualinvoke r0.<android.view.View: void requestLayout()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label1:
        return;
    }

    public void setLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.view.View r0;
        android.view.ViewGroup$LayoutParams r1;
        android.view.ViewParent $r2, $r3;
        boolean $z0;
        android.view.ViewGroup $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Layout parameters cannot be null");

        throw $r5;

     label1:
        r0.<android.view.View: android.view.ViewGroup$LayoutParams mLayoutParams> = r1;

        virtualinvoke r0.<android.view.View: void resolveLayoutParams()>();

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r3 = r0.<android.view.View: android.view.ViewParent mParent>;

        $r4 = (android.view.ViewGroup) $r3;

        virtualinvoke $r4.<android.view.ViewGroup: void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams)>(r0, r1);

     label2:
        virtualinvoke r0.<android.view.View: void requestLayout()>();

        return;
    }

    public final void setLeft(int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        boolean z0, $z1;
        android.view.View$TransformationInfo $r1, $r3, $r6;
        android.view.DisplayList $r2, $r5;
        android.view.View$AttachInfo $r4;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i5 = r0.<android.view.View: int mLeft>;

        if i0 == $i5 goto label08;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label01;

        $r6 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $z1 = staticinvoke <android.view.View$TransformationInfo: boolean access$1600(android.view.View$TransformationInfo)>($r6);

        if $z1 == 0 goto label09;

     label01:
        z0 = 1;

     label02:
        if z0 == 0 goto label11;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r4 == null goto label04;

        $i20 = r0.<android.view.View: int mLeft>;

        if i0 >= $i20 goto label10;

        i3 = i0;

        $i25 = r0.<android.view.View: int mLeft>;

        i4 = i0 - $i25;

     label03:
        $i19 = r0.<android.view.View: int mRight>;

        $i23 = $i19 - i3;

        $i21 = r0.<android.view.View: int mBottom>;

        $i22 = r0.<android.view.View: int mTop>;

        $i24 = $i21 - $i22;

        virtualinvoke r0.<android.view.View: void invalidate(int,int,int,int)>(i4, 0, $i23, $i24);

     label04:
        $i7 = r0.<android.view.View: int mRight>;

        $i6 = r0.<android.view.View: int mLeft>;

        i1 = $i7 - $i6;

        $i9 = r0.<android.view.View: int mBottom>;

        $i8 = r0.<android.view.View: int mTop>;

        i2 = $i9 - $i8;

        r0.<android.view.View: int mLeft> = i0;

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label05;

        $r5 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r5.<android.view.DisplayList: void setLeft(int)>(i0);

     label05:
        $i11 = r0.<android.view.View: int mRight>;

        $i10 = r0.<android.view.View: int mLeft>;

        $i13 = $i11 - $i10;

        specialinvoke r0.<android.view.View: void sizeChange(int,int,int,int)>($i13, i2, i1, i2);

        if z0 != 0 goto label07;

        $i14 = r0.<android.view.View: int mPrivateFlags>;

        $i17 = 536870912 & $i14;

        if $i17 != 0 goto label06;

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r3.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

     label06:
        $i16 = r0.<android.view.View: int mPrivateFlags>;

        $i18 = 32 | $i16;

        r0.<android.view.View: int mPrivateFlags> = $i18;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label07:
        r0.<android.view.View: boolean mBackgroundSizeChanged> = 1;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

        $i12 = r0.<android.view.View: int mPrivateFlags2>;

        $i15 = 268435456 & $i12;

        if $i15 != 268435456 goto label08;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label08:
        return;

     label09:
        z0 = 0;

        goto label02;

     label10:
        i3 = r0.<android.view.View: int mLeft>;

        i4 = 0;

        goto label03;

     label11:
        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        goto label04;
    }

    public void setLongClickable(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        i0 = 2097152;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 2097152);

        return;

     label2:
        i0 = 0;

        goto label1;
    }

    protected final void setMeasuredDimension(int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1;
        android.graphics.Insets r1;
        android.view.ViewParent $r2;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = staticinvoke <android.view.View: boolean isLayoutModeOptical(java.lang.Object)>(r0);

        $r2 = r0.<android.view.View: android.view.ViewParent mParent>;

        $z1 = staticinvoke <android.view.View: boolean isLayoutModeOptical(java.lang.Object)>($r2);

        if z0 == $z1 goto label3;

        r1 = virtualinvoke r0.<android.view.View: android.graphics.Insets getOpticalInsets()>();

        $i7 = r1.<android.graphics.Insets: int left>;

        $i6 = r1.<android.graphics.Insets: int right>;

        i2 = $i7 + $i6;

        $i9 = r1.<android.graphics.Insets: int top>;

        $i8 = r1.<android.graphics.Insets: int bottom>;

        i3 = $i9 + $i8;

        if z0 == 0 goto label4;

     label1:
        i0 = i0 + i2;

        if z0 == 0 goto label5;

     label2:
        i1 = i1 + i3;

     label3:
        r0.<android.view.View: int mMeasuredWidth> = i0;

        r0.<android.view.View: int mMeasuredHeight> = i1;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 2048 | $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        return;

     label4:
        i2 = neg i2;

        goto label1;

     label5:
        i3 = neg i3;

        goto label2;
    }

    public void setMinimumHeight(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mMinHeight> = i0;

        virtualinvoke r0.<android.view.View: void requestLayout()>();

        return;
    }

    public void setMinimumWidth(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mMinWidth> = i0;

        virtualinvoke r0.<android.view.View: void requestLayout()>();

        return;
    }

    public void setNextFocusDownId(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mNextFocusDownId> = i0;

        return;
    }

    public void setNextFocusForwardId(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mNextFocusForwardId> = i0;

        return;
    }

    public void setNextFocusLeftId(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mNextFocusLeftId> = i0;

        return;
    }

    public void setNextFocusRightId(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mNextFocusRightId> = i0;

        return;
    }

    public void setNextFocusUpId(int)
    {
        android.view.View r0;
        int i0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r0.<android.view.View: int mNextFocusUpId> = i0;

        return;
    }

    public void setOnClickListener(android.view.View$OnClickListener)
    {
        android.view.View r0;
        android.view.View$OnClickListener r1;
        boolean $z0;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnClickListener;

        $z0 = virtualinvoke r0.<android.view.View: boolean isClickable()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void setClickable(boolean)>(1);

     label1:
        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        $r2.<android.view.View$ListenerInfo: android.view.View$OnClickListener mOnClickListener> = r1;

        return;
    }

    public void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)
    {
        android.view.View r0;
        android.view.View$OnCreateContextMenuListener r1;
        boolean $z0;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnCreateContextMenuListener;

        $z0 = virtualinvoke r0.<android.view.View: boolean isLongClickable()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void setLongClickable(boolean)>(1);

     label1:
        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        $r2.<android.view.View$ListenerInfo: android.view.View$OnCreateContextMenuListener mOnCreateContextMenuListener> = r1;

        return;
    }

    public void setOnDragListener(android.view.View$OnDragListener)
    {
        android.view.View r0;
        android.view.View$OnDragListener r1;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnDragListener;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        staticinvoke <android.view.View$ListenerInfo: android.view.View$OnDragListener access$602(android.view.View$ListenerInfo,android.view.View$OnDragListener)>($r2, r1);

        return;
    }

    public void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)
    {
        android.view.View r0;
        android.view.View$OnFocusChangeListener r1;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnFocusChangeListener;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        $r2.<android.view.View$ListenerInfo: android.view.View$OnFocusChangeListener mOnFocusChangeListener> = r1;

        return;
    }

    public void setOnGenericMotionListener(android.view.View$OnGenericMotionListener)
    {
        android.view.View r0;
        android.view.View$OnGenericMotionListener r1;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnGenericMotionListener;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        staticinvoke <android.view.View$ListenerInfo: android.view.View$OnGenericMotionListener access$402(android.view.View$ListenerInfo,android.view.View$OnGenericMotionListener)>($r2, r1);

        return;
    }

    public void setOnHoverListener(android.view.View$OnHoverListener)
    {
        android.view.View r0;
        android.view.View$OnHoverListener r1;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnHoverListener;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        staticinvoke <android.view.View$ListenerInfo: android.view.View$OnHoverListener access$502(android.view.View$ListenerInfo,android.view.View$OnHoverListener)>($r2, r1);

        return;
    }

    public void setOnKeyListener(android.view.View$OnKeyListener)
    {
        android.view.View r0;
        android.view.View$OnKeyListener r1;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnKeyListener;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        staticinvoke <android.view.View$ListenerInfo: android.view.View$OnKeyListener access$202(android.view.View$ListenerInfo,android.view.View$OnKeyListener)>($r2, r1);

        return;
    }

    public void setOnLongClickListener(android.view.View$OnLongClickListener)
    {
        android.view.View r0;
        android.view.View$OnLongClickListener r1;
        boolean $z0;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnLongClickListener;

        $z0 = virtualinvoke r0.<android.view.View: boolean isLongClickable()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.view.View: void setLongClickable(boolean)>(1);

     label1:
        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        $r2.<android.view.View$ListenerInfo: android.view.View$OnLongClickListener mOnLongClickListener> = r1;

        return;
    }

    public void setOnSystemUiVisibilityChangeListener(android.view.View$OnSystemUiVisibilityChangeListener)
    {
        android.view.View r0;
        android.view.View$OnSystemUiVisibilityChangeListener r1;
        android.view.View$ListenerInfo $r2;
        android.view.ViewParent $r4, $r7;
        android.view.View$AttachInfo $r5, $r6;
        boolean $z0;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnSystemUiVisibilityChangeListener;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        staticinvoke <android.view.View$ListenerInfo: android.view.View$OnSystemUiVisibilityChangeListener access$1102(android.view.View$ListenerInfo,android.view.View$OnSystemUiVisibilityChangeListener)>($r2, r1);

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r4 == null goto label1;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r5 == null goto label1;

        $r6 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z0 = $r6.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes>;

        if $z0 != 0 goto label1;

        $r7 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r7.<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>(r0);

     label1:
        return;
    }

    public void setOnTouchListener(android.view.View$OnTouchListener)
    {
        android.view.View r0;
        android.view.View$OnTouchListener r1;
        android.view.View$ListenerInfo $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.View$OnTouchListener;

        $r2 = virtualinvoke r0.<android.view.View: android.view.View$ListenerInfo getListenerInfo()>();

        staticinvoke <android.view.View$ListenerInfo: android.view.View$OnTouchListener access$302(android.view.View$ListenerInfo,android.view.View$OnTouchListener)>($r2, r1);

        return;
    }

    public void setOverScrollMode(int)
    {
        android.view.View r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid overscroll mode ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<android.view.View: int mOverScrollMode> = i0;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<android.view.View: void resetResolvedPadding()>();

        r0.<android.view.View: int mUserPaddingStart> = -2147483648;

        r0.<android.view.View: int mUserPaddingEnd> = -2147483648;

        r0.<android.view.View: int mUserPaddingLeftInitial> = i0;

        r0.<android.view.View: int mUserPaddingRightInitial> = i2;

        r0.<android.view.View: boolean mLeftPaddingDefined> = 1;

        r0.<android.view.View: boolean mRightPaddingDefined> = 1;

        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void setPaddingRelative(int, int, int, int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        virtualinvoke r0.<android.view.View: void resetResolvedPadding()>();

        r0.<android.view.View: int mUserPaddingStart> = i0;

        r0.<android.view.View: int mUserPaddingEnd> = i2;

        r0.<android.view.View: boolean mLeftPaddingDefined> = 1;

        r0.<android.view.View: boolean mRightPaddingDefined> = 1;

        $i4 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        tableswitch($i4)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r0.<android.view.View: int mUserPaddingLeftInitial> = i0;

        r0.<android.view.View: int mUserPaddingRightInitial> = i2;

        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>(i0, i1, i2, i3);

        return;

     label2:
        r0.<android.view.View: int mUserPaddingLeftInitial> = i2;

        r0.<android.view.View: int mUserPaddingRightInitial> = i0;

        virtualinvoke r0.<android.view.View: void internalSetPadding(int,int,int,int)>(i2, i1, i0, i3);

        return;
    }

    public void setPivotX(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        boolean z0;
        int $i0, $i1, $i3, $i4, $i5, $i6;
        byte $b2;
        android.view.DisplayList $r2, $r3;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 536870912 & $i0;

        if $i1 != 536870912 goto label5;

        z0 = 1;

     label1:
        $f1 = r1.<android.view.View$TransformationInfo: float mPivotX>;

        $b2 = $f1 cmpl f0;

        if $b2 != 0 goto label2;

        if z0 != 0 goto label4;

     label2:
        $i3 = r0.<android.view.View: int mPrivateFlags>;

        $i4 = 536870912 | $i3;

        r0.<android.view.View: int mPrivateFlags> = $i4;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mPivotX> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label3;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setPivotX(float)>(f0);

     label3:
        $i5 = r0.<android.view.View: int mPrivateFlags2>;

        $i6 = 268435456 & $i5;

        if $i6 != 268435456 goto label4;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label4:
        return;

     label5:
        z0 = 0;

        goto label1;
    }

    public void setPivotY(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        boolean z0;
        int $i0, $i1, $i3, $i4, $i5, $i6;
        byte $b2;
        android.view.DisplayList $r2, $r3;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 536870912 & $i0;

        if $i1 != 536870912 goto label5;

        z0 = 1;

     label1:
        $f1 = r1.<android.view.View$TransformationInfo: float mPivotY>;

        $b2 = $f1 cmpl f0;

        if $b2 != 0 goto label2;

        if z0 != 0 goto label4;

     label2:
        $i3 = r0.<android.view.View: int mPrivateFlags>;

        $i4 = 536870912 | $i3;

        r0.<android.view.View: int mPrivateFlags> = $i4;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mPivotY> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label3;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setPivotY(float)>(f0);

     label3:
        $i5 = r0.<android.view.View: int mPrivateFlags2>;

        $i6 = 268435456 & $i5;

        if $i6 != 268435456 goto label4;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label4:
        return;

     label5:
        z0 = 0;

        goto label1;
    }

    public void setPressed(boolean)
    {
        android.view.View r0;
        boolean z0, z1, z2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        z1 = 1;

        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 16384 & $i0;

        if $i1 != 16384 goto label5;

        z2 = z1;

     label1:
        if z0 == z2 goto label6;

     label2:
        if z0 == 0 goto label7;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 16384 | $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

     label3:
        if z1 == 0 goto label4;

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

     label4:
        virtualinvoke r0.<android.view.View: void dispatchSetPressed(boolean)>(z0);

        return;

     label5:
        z2 = 0;

        goto label1;

     label6:
        z1 = 0;

        goto label2;

     label7:
        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -16385 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        goto label3;
    }

    public final void setRight(int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        boolean z0, $z1;
        android.view.View$TransformationInfo $r1, $r3, $r6;
        android.view.DisplayList $r2, $r5;
        android.view.View$AttachInfo $r4;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i4 = r0.<android.view.View: int mRight>;

        if i0 == $i4 goto label08;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label01;

        $r6 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $z1 = staticinvoke <android.view.View$TransformationInfo: boolean access$1600(android.view.View$TransformationInfo)>($r6);

        if $z1 == 0 goto label09;

     label01:
        z0 = 1;

     label02:
        if z0 == 0 goto label11;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r4 == null goto label04;

        $i20 = r0.<android.view.View: int mRight>;

        if i0 >= $i20 goto label10;

        i3 = r0.<android.view.View: int mRight>;

     label03:
        $i19 = r0.<android.view.View: int mLeft>;

        $i23 = i3 - $i19;

        $i21 = r0.<android.view.View: int mBottom>;

        $i22 = r0.<android.view.View: int mTop>;

        $i24 = $i21 - $i22;

        virtualinvoke r0.<android.view.View: void invalidate(int,int,int,int)>(0, 0, $i23, $i24);

     label04:
        $i6 = r0.<android.view.View: int mRight>;

        $i5 = r0.<android.view.View: int mLeft>;

        i1 = $i6 - $i5;

        $i8 = r0.<android.view.View: int mBottom>;

        $i7 = r0.<android.view.View: int mTop>;

        i2 = $i8 - $i7;

        r0.<android.view.View: int mRight> = i0;

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label05;

        $r5 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $i18 = r0.<android.view.View: int mRight>;

        virtualinvoke $r5.<android.view.DisplayList: void setRight(int)>($i18);

     label05:
        $i10 = r0.<android.view.View: int mRight>;

        $i9 = r0.<android.view.View: int mLeft>;

        $i11 = $i10 - $i9;

        specialinvoke r0.<android.view.View: void sizeChange(int,int,int,int)>($i11, i2, i1, i2);

        if z0 != 0 goto label07;

        $i15 = r0.<android.view.View: int mPrivateFlags>;

        $i14 = 536870912 & $i15;

        if $i14 != 0 goto label06;

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r3.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

     label06:
        $i17 = r0.<android.view.View: int mPrivateFlags>;

        $i16 = 32 | $i17;

        r0.<android.view.View: int mPrivateFlags> = $i16;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label07:
        r0.<android.view.View: boolean mBackgroundSizeChanged> = 1;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

        $i13 = r0.<android.view.View: int mPrivateFlags2>;

        $i12 = 268435456 & $i13;

        if $i12 != 268435456 goto label08;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label08:
        return;

     label09:
        z0 = 0;

        goto label02;

     label10:
        i3 = i0;

        goto label03;

     label11:
        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        goto label04;
    }

    public void setRotation(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        byte $b0;
        android.view.DisplayList $r2, $r3;
        int $i1, $i2;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = r1.<android.view.View$TransformationInfo: float mRotation>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mRotation> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setRotation(float)>(f0);

     label1:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 268435456 & $i1;

        if $i2 != 268435456 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label2:
        return;
    }

    public void setRotationX(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        byte $b0;
        android.view.DisplayList $r2, $r3;
        int $i1, $i2;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = r1.<android.view.View$TransformationInfo: float mRotationX>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mRotationX> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setRotationX(float)>(f0);

     label1:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 268435456 & $i1;

        if $i2 != 268435456 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label2:
        return;
    }

    public void setRotationY(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        byte $b0;
        android.view.DisplayList $r2, $r3;
        int $i1, $i2;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = r1.<android.view.View$TransformationInfo: float mRotationY>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mRotationY> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setRotationY(float)>(f0);

     label1:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 268435456 & $i1;

        if $i2 != 268435456 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label2:
        return;
    }

    public void setSaveEnabled(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        i0 = 0;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 65536);

        return;

     label2:
        i0 = 65536;

        goto label1;
    }

    public void setSaveFromParentEnabled(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        i0 = 0;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 536870912);

        return;

     label2:
        i0 = 536870912;

        goto label1;
    }

    public void setScaleX(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        byte $b0;
        android.view.DisplayList $r2, $r3;
        int $i1, $i2;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = r1.<android.view.View$TransformationInfo: float mScaleX>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mScaleX> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setScaleX(float)>(f0);

     label1:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 268435456 & $i1;

        if $i2 != 268435456 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label2:
        return;
    }

    public void setScaleY(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        byte $b0;
        android.view.DisplayList $r2, $r3;
        int $i1, $i2;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = r1.<android.view.View$TransformationInfo: float mScaleY>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mScaleY> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setScaleY(float)>(f0);

     label1:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 268435456 & $i1;

        if $i2 != 268435456 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label2:
        return;
    }

    public void setScrollBarDefaultDelayBeforeFade(int)
    {
        android.view.View r0;
        int i0;
        android.view.View$ScrollabilityCache $r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.view.View: android.view.View$ScrollabilityCache getScrollCache()>();

        $r1.<android.view.View$ScrollabilityCache: int scrollBarDefaultDelayBeforeFade> = i0;

        return;
    }

    public void setScrollBarFadeDuration(int)
    {
        android.view.View r0;
        int i0;
        android.view.View$ScrollabilityCache $r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.view.View: android.view.View$ScrollabilityCache getScrollCache()>();

        $r1.<android.view.View$ScrollabilityCache: int scrollBarFadeDuration> = i0;

        return;
    }

    public void setScrollBarSize(int)
    {
        android.view.View r0;
        int i0;
        android.view.View$ScrollabilityCache $r1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.view.View: android.view.View$ScrollabilityCache getScrollCache()>();

        $r1.<android.view.View$ScrollabilityCache: int scrollBarSize> = i0;

        return;
    }

    public void setScrollBarStyle(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.View: int mViewFlags>;

        $i2 = 50331648 & $i1;

        if i0 == $i2 goto label1;

        $i3 = r0.<android.view.View: int mViewFlags>;

        $i5 = -50331649 & $i3;

        $i4 = i0 & 50331648;

        $i6 = $i5 | $i4;

        r0.<android.view.View: int mViewFlags> = $i6;

        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label1:
        return;
    }

    public void setScrollContainer(boolean)
    {
        android.view.View r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View$AttachInfo $r1, $r3, $r4;
        java.util.ArrayList $r2, $r5;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label1;

        $i6 = r0.<android.view.View: int mPrivateFlags>;

        $i7 = 1048576 & $i6;

        if $i7 != 0 goto label1;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r5 = $r4.<android.view.View$AttachInfo: java.util.ArrayList mScrollContainers>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $i8 = r0.<android.view.View: int mPrivateFlags>;

        $i9 = 1048576 | $i8;

        r0.<android.view.View: int mPrivateFlags> = $i9;

     label1:
        $i4 = r0.<android.view.View: int mPrivateFlags>;

        $i5 = 524288 | $i4;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        return;

     label2:
        $i0 = r0.<android.view.View: int mPrivateFlags>;

        $i1 = 1048576 & $i0;

        if $i1 == 0 goto label3;

        $r1 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r2 = $r1.<android.view.View$AttachInfo: java.util.ArrayList mScrollContainers>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

     label3:
        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = -1572865 & $i2;

        r0.<android.view.View: int mPrivateFlags> = $i3;

        return;
    }

    public void setScrollX(int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.View: int mScrollY>;

        virtualinvoke r0.<android.view.View: void scrollTo(int,int)>(i0, $i1);

        return;
    }

    public void setScrollY(int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.View: int mScrollX>;

        virtualinvoke r0.<android.view.View: void scrollTo(int,int)>($i1, i0);

        return;
    }

    public void setScrollbarFadingEnabled(boolean)
    {
        android.view.View r0;
        boolean z0;
        android.view.View$ScrollabilityCache r1;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.View: void initScrollCache()>();

        r1 = r0.<android.view.View: android.view.View$ScrollabilityCache mScrollCache>;

        r1.<android.view.View$ScrollabilityCache: boolean fadeScrollBars> = z0;

        if z0 == 0 goto label1;

        r1.<android.view.View$ScrollabilityCache: int state> = 0;

        return;

     label1:
        r1.<android.view.View$ScrollabilityCache: int state> = 1;

        return;
    }

    public void setSelected(boolean)
    {
        android.view.View r0;
        boolean z0, z1;
        int i0, $i2, $i3, $i4, $i5;
        byte b1;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $i2 = r0.<android.view.View: int mPrivateFlags>;

        $i3 = 4 & $i2;

        if $i3 == 0 goto label5;

        z1 = 1;

     label1:
        if z1 == z0 goto label4;

        $i4 = r0.<android.view.View: int mPrivateFlags>;

        i0 = -5 & $i4;

        if z0 == 0 goto label6;

        b1 = 4;

     label2:
        $i5 = b1 | i0;

        r0.<android.view.View: int mPrivateFlags> = $i5;

        if z0 != 0 goto label3;

        specialinvoke r0.<android.view.View: void resetPressedState()>();

     label3:
        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        virtualinvoke r0.<android.view.View: void refreshDrawableState()>();

        virtualinvoke r0.<android.view.View: void dispatchSetSelected(boolean)>(z0);

        virtualinvoke r0.<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

     label4:
        return;

     label5:
        z1 = 0;

        goto label1;

     label6:
        b1 = 0;

        goto label2;
    }

    public void setSoundEffectsEnabled(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        i0 = 134217728;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 134217728);

        return;

     label2:
        i0 = 0;

        goto label1;
    }

    public void setSystemUiVisibility(int)
    {
        android.view.View r0;
        int i0, $i1;
        android.view.ViewParent $r1, $r4;
        android.view.View$AttachInfo $r2, $r3;
        boolean $z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.View: int mSystemUiVisibility>;

        if i0 == $i1 goto label1;

        r0.<android.view.View: int mSystemUiVisibility> = i0;

        $r1 = r0.<android.view.View: android.view.ViewParent mParent>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $z0 = $r3.<android.view.View$AttachInfo: boolean mRecomputeGlobalAttributes>;

        if $z0 != 0 goto label1;

        $r4 = r0.<android.view.View: android.view.ViewParent mParent>;

        interfaceinvoke $r4.<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>(r0);

     label1:
        return;
    }

    public void setTag(int, java.lang.Object)
    {
        android.view.View r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = i0 >>> 24;

        if $i1 >= 2 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The key must be an application-specific resource id.");

        throw $r2;

     label1:
        specialinvoke r0.<android.view.View: void setKeyedTag(int,java.lang.Object)>(i0, r1);

        return;
    }

    public void setTag(java.lang.Object)
    {
        android.view.View r0;
        java.lang.Object r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: java.lang.Object;

        r0.<android.view.View: java.lang.Object mTag> = r1;

        return;
    }

    public void setTagInternal(int, java.lang.Object)
    {
        android.view.View r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = i0 >>> 24;

        if $i1 == 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The key must be a framework-specific resource id.");

        throw $r2;

     label1:
        specialinvoke r0.<android.view.View: void setKeyedTag(int,java.lang.Object)>(i0, r1);

        return;
    }

    public void setTextAlignment(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.view.View: int getRawTextAlignment()>();

        if i0 == $i1 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = -57345 & $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        virtualinvoke r0.<android.view.View: void resetResolvedTextAlignment()>();

        $i6 = r0.<android.view.View: int mPrivateFlags2>;

        $i4 = i0 << 13;

        $i5 = 57344 & $i4;

        $i7 = $i6 | $i5;

        r0.<android.view.View: int mPrivateFlags2> = $i7;

        virtualinvoke r0.<android.view.View: boolean resolveTextAlignment()>();

        $i8 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        virtualinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>($i8);

        virtualinvoke r0.<android.view.View: void requestLayout()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label1:
        return;
    }

    public void setTextDirection(int)
    {
        android.view.View r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.view.View: int getRawTextDirection()>();

        if $i1 == i0 goto label1;

        $i2 = r0.<android.view.View: int mPrivateFlags2>;

        $i3 = -449 & $i2;

        r0.<android.view.View: int mPrivateFlags2> = $i3;

        virtualinvoke r0.<android.view.View: void resetResolvedTextDirection()>();

        $i6 = r0.<android.view.View: int mPrivateFlags2>;

        $i4 = i0 << 6;

        $i5 = 448 & $i4;

        $i7 = $i6 | $i5;

        r0.<android.view.View: int mPrivateFlags2> = $i7;

        virtualinvoke r0.<android.view.View: boolean resolveTextDirection()>();

        $i8 = virtualinvoke r0.<android.view.View: int getLayoutDirection()>();

        virtualinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>($i8);

        virtualinvoke r0.<android.view.View: void requestLayout()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label1:
        return;
    }

    public final void setTop(int)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        boolean z0, $z1;
        android.view.View$TransformationInfo $r1, $r3, $r6;
        android.view.DisplayList $r2, $r4;
        android.view.View$AttachInfo $r5;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i5 = r0.<android.view.View: int mTop>;

        if i0 == $i5 goto label08;

        specialinvoke r0.<android.view.View: void updateMatrix()>();

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        if $r1 == null goto label01;

        $r6 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $z1 = staticinvoke <android.view.View$TransformationInfo: boolean access$1600(android.view.View$TransformationInfo)>($r6);

        if $z1 == 0 goto label09;

     label01:
        z0 = 1;

     label02:
        if z0 == 0 goto label11;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r5 == null goto label04;

        $i20 = r0.<android.view.View: int mTop>;

        if i0 >= $i20 goto label10;

        i3 = i0;

        $i26 = r0.<android.view.View: int mTop>;

        i4 = i0 - $i26;

     label03:
        $i21 = r0.<android.view.View: int mRight>;

        $i22 = r0.<android.view.View: int mLeft>;

        $i25 = $i21 - $i22;

        $i24 = r0.<android.view.View: int mBottom>;

        $i23 = $i24 - i3;

        virtualinvoke r0.<android.view.View: void invalidate(int,int,int,int)>(0, i4, $i25, $i23);

     label04:
        $i7 = r0.<android.view.View: int mRight>;

        $i6 = r0.<android.view.View: int mLeft>;

        i1 = $i7 - $i6;

        $i9 = r0.<android.view.View: int mBottom>;

        $i8 = r0.<android.view.View: int mTop>;

        i2 = $i9 - $i8;

        r0.<android.view.View: int mTop> = i0;

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label05;

        $r4 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $i19 = r0.<android.view.View: int mTop>;

        virtualinvoke $r4.<android.view.DisplayList: void setTop(int)>($i19);

     label05:
        $i11 = r0.<android.view.View: int mBottom>;

        $i10 = r0.<android.view.View: int mTop>;

        $i13 = $i11 - $i10;

        specialinvoke r0.<android.view.View: void sizeChange(int,int,int,int)>(i1, $i13, i1, i2);

        if z0 != 0 goto label07;

        $i14 = r0.<android.view.View: int mPrivateFlags>;

        $i17 = 536870912 & $i14;

        if $i17 != 0 goto label06;

        $r3 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r3.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

     label06:
        $i16 = r0.<android.view.View: int mPrivateFlags>;

        $i18 = 32 | $i16;

        r0.<android.view.View: int mPrivateFlags> = $i18;

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

     label07:
        r0.<android.view.View: boolean mBackgroundSizeChanged> = 1;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

        $i12 = r0.<android.view.View: int mPrivateFlags2>;

        $i15 = 268435456 & $i12;

        if $i15 != 268435456 goto label08;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label08:
        return;

     label09:
        z0 = 0;

        goto label02;

     label10:
        i3 = r0.<android.view.View: int mTop>;

        i4 = 0;

        goto label03;

     label11:
        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        goto label04;
    }

    public void setTouchDelegate(android.view.TouchDelegate)
    {
        android.view.View r0;
        android.view.TouchDelegate r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.TouchDelegate;

        r0.<android.view.View: android.view.TouchDelegate mTouchDelegate> = r1;

        return;
    }

    public void setTransitionAlpha(float)
    {
        android.view.View r0;
        float f0, $f1, $f2;
        android.view.View$TransformationInfo $r1, $r2;
        byte $b0;
        int $i1, $i2;
        android.view.DisplayList $r3, $r4;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        $r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = $r1.<android.view.View$TransformationInfo: float mTransitionAlpha>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $r2.<android.view.View$TransformationInfo: float mTransitionAlpha> = f0;

        $i1 = r0.<android.view.View: int mPrivateFlags>;

        $i2 = -262145 & $i1;

        r0.<android.view.View: int mPrivateFlags> = $i2;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r3 == null goto label1;

        $r4 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        $f2 = specialinvoke r0.<android.view.View: float getFinalAlpha()>();

        virtualinvoke $r4.<android.view.DisplayList: void setAlpha(float)>($f2);

     label1:
        return;
    }

    public void setTranslationX(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        byte $b0;
        android.view.DisplayList $r2, $r3;
        int $i1, $i2;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = r1.<android.view.View$TransformationInfo: float mTranslationX>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mTranslationX> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setTranslationX(float)>(f0);

     label1:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 268435456 & $i1;

        if $i2 != 268435456 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label2:
        return;
    }

    public void setTranslationY(float)
    {
        android.view.View r0;
        float f0, $f1;
        android.view.View$TransformationInfo r1;
        byte $b0;
        android.view.DisplayList $r2, $r3;
        int $i1, $i2;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.view.View: void ensureTransformationInfo()>();

        r1 = r0.<android.view.View: android.view.View$TransformationInfo mTransformationInfo>;

        $f1 = r1.<android.view.View$TransformationInfo: float mTranslationY>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(1, 0);

        r1.<android.view.View$TransformationInfo: float mTranslationY> = f0;

        r1.<android.view.View$TransformationInfo: boolean mMatrixDirty> = 1;

        virtualinvoke r0.<android.view.View: void invalidateViewProperty(boolean,boolean)>(0, 1);

        $r2 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.DisplayList mDisplayList>;

        virtualinvoke $r3.<android.view.DisplayList: void setTranslationY(float)>(f0);

     label1:
        $i1 = r0.<android.view.View: int mPrivateFlags2>;

        $i2 = 268435456 & $i1;

        if $i2 != 268435456 goto label2;

        virtualinvoke r0.<android.view.View: void invalidateParentIfNeeded()>();

     label2:
        return;
    }

    public void setVerticalFadingEdgeEnabled(boolean)
    {
        android.view.View r0;
        boolean z0, $z1;
        int $i0, $i1;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.view.View: boolean isVerticalFadingEdgeEnabled()>();

        if $z1 == z0 goto label2;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.view.View: void initScrollCache()>();

     label1:
        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 8192 ^ $i0;

        r0.<android.view.View: int mViewFlags> = $i1;

     label2:
        return;
    }

    public void setVerticalScrollBarEnabled(boolean)
    {
        android.view.View r0;
        boolean z0, $z1;
        int $i0, $i1;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.view.View: boolean isVerticalScrollBarEnabled()>();

        if $z1 == z0 goto label1;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 512 ^ $i0;

        r0.<android.view.View: int mViewFlags> = $i1;

        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label1:
        return;
    }

    public void setVerticalScrollbarPosition(int)
    {
        android.view.View r0;
        int i0, $i1;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.View: int mVerticalScrollbarPosition>;

        if $i1 == i0 goto label1;

        r0.<android.view.View: int mVerticalScrollbarPosition> = i0;

        virtualinvoke r0.<android.view.View: void computeOpaqueFlags()>();

        virtualinvoke r0.<android.view.View: void resolvePadding()>();

     label1:
        return;
    }

    public void setVisibility(int)
    {
        android.view.View r0;
        int i0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean z0;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 12);

        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if $r2 == null goto label2;

        r1 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if i0 != 0 goto label3;

        z0 = 1;

     label1:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, 0);

     label2:
        return;

     label3:
        z0 = 0;

        goto label1;
    }

    public void setWillNotCacheDrawing(boolean)
    {
        android.view.View r0;
        boolean z0;
        int i0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        i0 = 131072;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(i0, 131072);

        return;

     label2:
        i0 = 0;

        goto label1;
    }

    public void setWillNotDraw(boolean)
    {
        android.view.View r0;
        boolean z0;
        short s0;

        r0 := @this: android.view.View;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        s0 = 128;

     label1:
        virtualinvoke r0.<android.view.View: void setFlags(int,int)>(s0, 128);

        return;

     label2:
        s0 = 0;

        goto label1;
    }

    public void setX(float)
    {
        android.view.View r0;
        float f0, $f1, $f2;
        int $i0;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        $i0 = r0.<android.view.View: int mLeft>;

        $f1 = (float) $i0;

        $f2 = f0 - $f1;

        virtualinvoke r0.<android.view.View: void setTranslationX(float)>($f2);

        return;
    }

    public void setY(float)
    {
        android.view.View r0;
        float f0, $f1, $f2;
        int $i0;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        $i0 = r0.<android.view.View: int mTop>;

        $f1 = (float) $i0;

        $f2 = f0 - $f1;

        virtualinvoke r0.<android.view.View: void setTranslationY(float)>($f2);

        return;
    }

    public boolean showContextMenu()
    {
        android.view.View r0;
        android.view.ViewParent $r1;
        boolean $z0;

        r0 := @this: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = interfaceinvoke $r1.<android.view.ViewParent: boolean showContextMenuForChild(android.view.View)>(r0);

        return $z0;
    }

    public boolean showContextMenu(float, float, int)
    {
        android.view.View r0;
        float f0, f1;
        int i0;
        boolean $z0;

        r0 := @this: android.view.View;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<android.view.View: boolean showContextMenu()>();

        return $z0;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
    {
        android.view.View r0;
        android.view.ActionMode$Callback r1;
        android.view.ViewParent r2;
        android.view.ActionMode $r3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.ActionMode$Callback;

        r2 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke r2.<android.view.ViewParent: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>(r0, r1);

        return $r3;
    }

    public void startAnimation(android.view.animation.Animation)
    {
        android.view.View r0;
        android.view.animation.Animation r1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.animation.Animation;

        virtualinvoke r1.<android.view.animation.Animation: void setStartTime(long)>(-1L);

        virtualinvoke r0.<android.view.View: void setAnimation(android.view.animation.Animation)>(r1);

        virtualinvoke r0.<android.view.View: void invalidateParentCaches()>();

        virtualinvoke r0.<android.view.View: void invalidate(boolean)>(1);

        return;
    }

    public final boolean startDrag(android.content.ClipData, android.view.View$DragShadowBuilder, java.lang.Object, int)
    {
        android.view.View r0;
        android.content.ClipData r1;
        android.view.View$DragShadowBuilder r2;
        java.lang.Object r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0;
        android.graphics.Point r4, r5, $r12, $r13;
        android.view.Surface r6, $r16;
        java.lang.Exception r7, $r24;
        android.os.IBinder r8;
        android.graphics.Canvas r9;
        java.lang.Throwable r10, $r26;
        android.view.ViewRootImpl r11;
        java.lang.IllegalStateException $r14;
        android.view.View$AttachInfo $r15, $r17, $r21, $r22;
        android.view.IWindow $r18, $r23;
        android.view.IWindowSession $r19, $r25;
        android.graphics.PorterDuff$Mode $r20;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.content.ClipData;

        r2 := @parameter1: android.view.View$DragShadowBuilder;

        r3 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        z0 = 0;

        $r12 = new android.graphics.Point;

        specialinvoke $r12.<android.graphics.Point: void <init>()>();

        r4 = $r12;

        $r13 = new android.graphics.Point;

        specialinvoke $r13.<android.graphics.Point: void <init>()>();

        r5 = $r13;

        virtualinvoke r2.<android.view.View$DragShadowBuilder: void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point)>(r4, r5);

        $i1 = r4.<android.graphics.Point: int x>;

        if $i1 < 0 goto label01;

        $i2 = r4.<android.graphics.Point: int y>;

        if $i2 < 0 goto label01;

        $i4 = r5.<android.graphics.Point: int x>;

        if $i4 < 0 goto label01;

        $i3 = r5.<android.graphics.Point: int y>;

        if $i3 >= 0 goto label02;

     label01:
        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Drag shadow dimensions must not be negative");

        throw $r14;

     label02:
        $r16 = new android.view.Surface;

        specialinvoke $r16.<android.view.Surface: void <init>()>();

        r6 = $r16;

     label03:
        $r15 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r19 = $r15.<android.view.View$AttachInfo: android.view.IWindowSession mSession>;

        $r17 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r18 = $r17.<android.view.View$AttachInfo: android.view.IWindow mWindow>;

        $i6 = r4.<android.graphics.Point: int x>;

        $i5 = r4.<android.graphics.Point: int y>;

        r8 = interfaceinvoke $r19.<android.view.IWindowSession: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>($r18, i0, $i6, $i5, r6);

     label04:
        z0 = 0;

        if r8 == null goto label12;

     label05:
        r9 = virtualinvoke r6.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);

     label06:
        $r20 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke r9.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r20);

        virtualinvoke r2.<android.view.View$DragShadowBuilder: void onDrawShadow(android.graphics.Canvas)>(r9);

     label07:
        virtualinvoke r6.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r9);

        r11 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        virtualinvoke r11.<android.view.ViewRootImpl: void setLocalDragState(java.lang.Object)>(r3);

        virtualinvoke r11.<android.view.ViewRootImpl: void getLastTouchPoint(android.graphics.Point)>(r4);

        $r22 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r25 = $r22.<android.view.View$AttachInfo: android.view.IWindowSession mSession>;

        $r21 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r23 = $r21.<android.view.View$AttachInfo: android.view.IWindow mWindow>;

        $i7 = r4.<android.graphics.Point: int x>;

        $f1 = (float) $i7;

        $i9 = r4.<android.graphics.Point: int y>;

        $f3 = (float) $i9;

        $i10 = r5.<android.graphics.Point: int x>;

        $f2 = (float) $i10;

        $i8 = r5.<android.graphics.Point: int y>;

        $f0 = (float) $i8;

        z0 = interfaceinvoke $r25.<android.view.IWindowSession: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>($r23, r8, $f1, $f3, $f2, $f0, r1);

        virtualinvoke r6.<android.view.Surface: void release()>();

     label08:
        return z0;

     label09:
        $r26 := @caughtexception;

        r10 = $r26;

     label10:
        virtualinvoke r6.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r9);

        throw r10;

     label11:
        $r24 := @caughtexception;

        r7 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("View", "Unable to initiate drag", r7);

        virtualinvoke r6.<android.view.Surface: void destroy()>();

     label12:
        return z0;

        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label10 to label11 with label11;
    }

    public boolean toGlobalMotionEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        android.view.View$AttachInfo r2;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 != null goto label1;

        return 0;

     label1:
        specialinvoke r0.<android.view.View: void transformMotionEventToGlobal(android.view.MotionEvent)>(r1);

        $i0 = r2.<android.view.View$AttachInfo: int mWindowLeft>;

        $f1 = (float) $i0;

        $i1 = r2.<android.view.View$AttachInfo: int mWindowTop>;

        $f0 = (float) $i1;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f1, $f0);

        return 1;
    }

    public boolean toLocalMotionEvent(android.view.MotionEvent)
    {
        android.view.View r0;
        android.view.MotionEvent r1;
        android.view.View$AttachInfo r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if r2 != null goto label1;

        return 0;

     label1:
        $i0 = r2.<android.view.View$AttachInfo: int mWindowLeft>;

        $i1 = neg $i0;

        $f1 = (float) $i1;

        $i2 = r2.<android.view.View$AttachInfo: int mWindowTop>;

        $i3 = neg $i2;

        $f0 = (float) $i3;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>($f1, $f0);

        specialinvoke r0.<android.view.View: void transformMotionEventToLocal(android.view.MotionEvent)>(r1);

        return 1;
    }

    public java.lang.String toString()
    {
        android.view.View r0;
        char c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14;
        java.lang.StringBuilder r1, $r4;
        int i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55;
        java.lang.String r2, r5, r6, $r10, $r14, $r47, $r49;
        android.content.res.Resources r3;
        java.lang.Class $r11;
        android.content.res.Resources$NotFoundException $r55;

        r0 := @this: android.view.View;

        c0 = 70;

        c1 = 68;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r4;

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $i16 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i16);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $i20 = r0.<android.view.View: int mViewFlags>;

        $i21 = 12 & $i20;

        lookupswitch($i21)
        {
            case 0: goto label21;
            case 4: goto label22;
            case 8: goto label23;
            default: goto label01;
        };

     label01:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label02:
        $i22 = r0.<android.view.View: int mViewFlags>;

        $i17 = 1 & $i22;

        if $i17 != 1 goto label24;

        c2 = c0;

     label03:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        $i18 = r0.<android.view.View: int mViewFlags>;

        $i19 = 32 & $i18;

        if $i19 != 0 goto label25;

        c3 = 69;

     label04:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

        $i26 = r0.<android.view.View: int mViewFlags>;

        $i27 = 128 & $i26;

        if $i27 != 128 goto label26;

        c4 = 46;

     label05:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        $i23 = r0.<android.view.View: int mViewFlags>;

        $i24 = 256 & $i23;

        if $i24 == 0 goto label27;

        c5 = 72;

     label06:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

        $i25 = r0.<android.view.View: int mViewFlags>;

        $i30 = 512 & $i25;

        if $i30 == 0 goto label28;

        c6 = 86;

     label07:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6);

        $i32 = r0.<android.view.View: int mViewFlags>;

        $i31 = 16384 & $i32;

        if $i31 == 0 goto label29;

        c7 = 67;

     label08:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        $i28 = r0.<android.view.View: int mViewFlags>;

        $i29 = 2097152 & $i28;

        if $i29 == 0 goto label30;

        c8 = 76;

     label09:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $i36 = r0.<android.view.View: int mPrivateFlags>;

        $i37 = 8 & $i36;

        if $i37 == 0 goto label31;

        c9 = 82;

     label10:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c9);

        $i34 = r0.<android.view.View: int mPrivateFlags>;

        $i33 = 2 & $i34;

        if $i33 == 0 goto label32;

     label11:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $i35 = r0.<android.view.View: int mPrivateFlags>;

        $i43 = 4 & $i35;

        if $i43 == 0 goto label33;

        c10 = 83;

     label12:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c10);

        $i41 = r0.<android.view.View: int mPrivateFlags>;

        $i42 = 33554432 & $i41;

        if $i42 == 0 goto label34;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(112);

     label13:
        $i38 = r0.<android.view.View: int mPrivateFlags>;

        $i48 = 268435456 & $i38;

        if $i48 == 0 goto label37;

        c12 = 72;

     label14:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c12);

        $i46 = r0.<android.view.View: int mPrivateFlags>;

        $i47 = 1073741824 & $i46;

        if $i47 == 0 goto label38;

        c14 = 65;

     label15:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c14);

        $i45 = r0.<android.view.View: int mPrivateFlags>;

        $i44 = -2147483648 & $i45;

        if $i44 == 0 goto label39;

        c13 = 73;

     label16:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c13);

        $i52 = r0.<android.view.View: int mPrivateFlags>;

        $i51 = 6291456 & $i52;

        if $i51 == 0 goto label40;

     label17:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $i50 = r0.<android.view.View: int mLeft>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i49 = r0.<android.view.View: int mTop>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $i54 = r0.<android.view.View: int mRight>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i54);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i53 = r0.<android.view.View: int mBottom>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        i15 = virtualinvoke r0.<android.view.View: int getId()>();

        if i15 == -1 goto label20;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #");

        $r49 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i15);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        r3 = r0.<android.view.View: android.content.res.Resources mResources>;

        if i15 == 0 goto label20;

        if r3 == null goto label20;

        $i55 = -16777216 & i15;

        lookupswitch($i55)
        {
            case 16777216: goto label42;
            case 2130706432: goto label41;
            default: goto label18;
        };

     label18:
        r2 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getResourcePackageName(int)>(i15);

     label19:
        r6 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getResourceTypeName(int)>(i15);

        r5 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>(i15);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

     label20:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r47 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r47;

     label21:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(86);

        goto label02;

     label22:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(73);

        goto label02;

     label23:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(71);

        goto label02;

     label24:
        c2 = 46;

        goto label03;

     label25:
        c3 = 46;

        goto label04;

     label26:
        c4 = c1;

        goto label05;

     label27:
        c5 = 46;

        goto label06;

     label28:
        c6 = 46;

        goto label07;

     label29:
        c7 = 46;

        goto label08;

     label30:
        c8 = 46;

        goto label09;

     label31:
        c9 = 46;

        goto label10;

     label32:
        c0 = 46;

        goto label11;

     label33:
        c10 = 46;

        goto label12;

     label34:
        $i39 = r0.<android.view.View: int mPrivateFlags>;

        $i40 = 16384 & $i39;

        if $i40 == 0 goto label36;

        c11 = 80;

     label35:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c11);

        goto label13;

     label36:
        c11 = 46;

        goto label35;

     label37:
        c12 = 46;

        goto label14;

     label38:
        c14 = 46;

        goto label15;

     label39:
        c13 = 46;

        goto label16;

     label40:
        c1 = 46;

        goto label17;

     label41:
        r2 = "app";

        goto label19;

     label42:
        r2 = "android";

        goto label19;

     label43:
        $r55 := @caughtexception;

        goto label20;

        catch android.content.res.Resources$NotFoundException from label18 to label19 with label43;
        catch android.content.res.Resources$NotFoundException from label19 to label20 with label43;
    }

    void transformRect(android.graphics.Rect)
    {
        android.view.View r0;
        android.graphics.Rect r1;
        android.graphics.RectF r2;
        android.graphics.Matrix $r3, $r5;
        boolean $z0;
        android.view.View$AttachInfo $r4;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.Rect;

        $r3 = virtualinvoke r0.<android.view.View: android.graphics.Matrix getMatrix()>();

        $z0 = virtualinvoke $r3.<android.graphics.Matrix: boolean isIdentity()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r2 = $r4.<android.view.View$AttachInfo: android.graphics.RectF mTmpTransformRect>;

        virtualinvoke r2.<android.graphics.RectF: void set(android.graphics.Rect)>(r1);

        $r5 = virtualinvoke r0.<android.view.View: android.graphics.Matrix getMatrix()>();

        virtualinvoke $r5.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r2);

        $f0 = r2.<android.graphics.RectF: float left>;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i0 = (int) $d1;

        $f1 = r2.<android.graphics.RectF: float top>;

        $d2 = (double) $f1;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2);

        $i1 = (int) $d3;

        $f2 = r2.<android.graphics.RectF: float right>;

        $d4 = (double) $f2;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $i2 = (int) $d5;

        $f3 = r2.<android.graphics.RectF: float bottom>;

        $d6 = (double) $f3;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        $i3 = (int) $d7;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

     label1:
        return;
    }

    void unFocus()
    {
        android.view.View r0;

        r0 := @this: android.view.View;

        virtualinvoke r0.<android.view.View: void clearFocusInternal(boolean,boolean)>(0, 0);

        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        android.view.View$AttachInfo $r2, $r3;
        android.view.ViewRootImpl $r4;
        android.view.Choreographer $r5;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label1;

        if r1 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r4 = $r3.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        $r5 = $r4.<android.view.ViewRootImpl: android.view.Choreographer mChoreographer>;

        virtualinvoke $r5.<android.view.Choreographer: void removeCallbacks(int,java.lang.Runnable,java.lang.Object)>(1, null, r1);

     label1:
        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        boolean $z0;
        android.view.View$AttachInfo $r3, $r5;
        android.view.ViewRootImpl$RunQueue $r4;
        android.view.ViewRootImpl $r6;
        android.view.Choreographer $r7;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        $z0 = virtualinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label1;

        if r2 == null goto label1;

        $r3 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r3 == null goto label2;

        $r5 = r0.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $r6 = $r5.<android.view.View$AttachInfo: android.view.ViewRootImpl mViewRootImpl>;

        $r7 = $r6.<android.view.ViewRootImpl: android.view.Choreographer mChoreographer>;

        virtualinvoke $r7.<android.view.Choreographer: void removeCallbacks(int,java.lang.Runnable,java.lang.Object)>(1, r2, r1);

     label1:
        return;

     label2:
        $r4 = staticinvoke <android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>();

        virtualinvoke $r4.<android.view.ViewRootImpl$RunQueue: void removeCallbacks(java.lang.Runnable)>(r2);

        return;
    }

    boolean updateLocalSystemUiVisibility(int, int)
    {
        android.view.View r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.view.View;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<android.view.View: int mSystemUiVisibility>;

        $i3 = i1 ^ -1;

        $i6 = $i4 & $i3;

        $i5 = i0 & i1;

        i2 = $i6 | $i5;

        $i7 = r0.<android.view.View: int mSystemUiVisibility>;

        if i2 == $i7 goto label1;

        virtualinvoke r0.<android.view.View: void setSystemUiVisibility(int)>(i2);

        return 1;

     label1:
        return 0;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1, $r2;

        r0 := @this: android.view.View;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.view.View: android.graphics.drawable.Drawable mBackground>;

        if r1 != $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean willNotCacheDrawing()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 131072 & $i0;

        if $i1 != 131072 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean willNotDraw()
    {
        android.view.View r0;
        int $i0, $i1;

        r0 := @this: android.view.View;

        $i0 = r0.<android.view.View: int mViewFlags>;

        $i1 = 128 & $i0;

        if $i1 != 128 goto label1;

        return 1;

     label1:
        return 0;
    }
}
