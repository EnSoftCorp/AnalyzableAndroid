class android.widget.RemoteViewsService$RemoteViewsFactoryAdapter extends com.android.internal.widget.IRemoteViewsFactory$Stub
{
    private android.widget.RemoteViewsService$RemoteViewsFactory mFactory;
    private boolean mIsCreated;

    public void <init>(android.widget.RemoteViewsService$RemoteViewsFactory, boolean)
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        android.widget.RemoteViewsService$RemoteViewsFactory r1;
        boolean z0;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        r1 := @parameter0: android.widget.RemoteViewsService$RemoteViewsFactory;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.widget.IRemoteViewsFactory$Stub: void <init>()>();

        r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory> = r1;

        r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: boolean mIsCreated> = z0;

        return;
    }

    public int getCount()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Throwable r1, $r5;
        java.lang.Exception r2, $r6;
        java.lang.Thread r3;
        int i0, i1;
        android.widget.RemoteViewsService$RemoteViewsFactory $r4;
        java.lang.Thread$UncaughtExceptionHandler $r7;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        $r4 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        i1 = interfaceinvoke $r4.<android.widget.RemoteViewsService$RemoteViewsFactory: int getCount()>();

     label2:
        i0 = i1;

     label3:
        exitmonitor r0;

        return i0;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r7.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2);

     label6:
        i0 = 0;

        goto label3;

     label7:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public long getItemId(int)
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        int i0;
        long l1, l2;
        java.lang.Throwable r1, $r7;
        java.lang.Exception r2, $r5;
        java.lang.Thread r3;
        android.widget.RemoteViewsService$RemoteViewsFactory $r4;
        java.lang.Thread$UncaughtExceptionHandler $r6;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        i0 := @parameter0: int;

        entermonitor r0;

        l1 = 0L;

     label1:
        $r4 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        l2 = interfaceinvoke $r4.<android.widget.RemoteViewsService$RemoteViewsFactory: long getItemId(int)>(i0);

     label2:
        l1 = l2;

     label3:
        exitmonitor r0;

        return l1;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r6.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2);

     label6:
        goto label3;

     label7:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public android.widget.RemoteViews getLoadingView()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Throwable r1, $r9;
        java.lang.Exception r2, $r7;
        java.lang.Thread r3;
        android.widget.RemoteViews r4, r5;
        android.widget.RemoteViewsService$RemoteViewsFactory $r6;
        java.lang.Thread$UncaughtExceptionHandler $r8;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        $r6 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        r5 = interfaceinvoke $r6.<android.widget.RemoteViewsService$RemoteViewsFactory: android.widget.RemoteViews getLoadingView()>();

     label2:
        r4 = r5;

     label3:
        exitmonitor r0;

        return r4;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

     label5:
        r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r8.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2);

     label6:
        r4 = null;

        goto label3;

     label7:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public android.widget.RemoteViews getViewAt(int)
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        int i0;
        android.widget.RemoteViews r1;
        java.lang.Throwable r2, $r6;
        java.lang.Exception r3, $r7;
        java.lang.Thread r4;
        android.widget.RemoteViewsService$RemoteViewsFactory $r5;
        java.lang.Thread$UncaughtExceptionHandler $r8;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        i0 := @parameter0: int;

        entermonitor r0;

        r1 = null;

     label1:
        $r5 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        r1 = interfaceinvoke $r5.<android.widget.RemoteViewsService$RemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>(i0);

     label2:
        if r1 == null goto label4;

     label3:
        virtualinvoke r1.<android.widget.RemoteViews: void setIsWidgetCollectionChild(boolean)>(1);

     label4:
        exitmonitor r0;

        return r1;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r8.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r4, r3);

     label7:
        goto label4;

     label8:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int getViewTypeCount()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Throwable r1, $r7;
        java.lang.Exception r2, $r5;
        java.lang.Thread r3;
        int i0, i1;
        android.widget.RemoteViewsService$RemoteViewsFactory $r4;
        java.lang.Thread$UncaughtExceptionHandler $r6;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        $r4 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        i1 = interfaceinvoke $r4.<android.widget.RemoteViewsService$RemoteViewsFactory: int getViewTypeCount()>();

     label2:
        i0 = i1;

     label3:
        exitmonitor r0;

        return i0;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r6.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2);

     label6:
        i0 = 0;

        goto label3;

     label7:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public boolean hasStableIds()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Throwable r1, $r7;
        java.lang.Exception r2, $r5;
        java.lang.Thread r3;
        boolean z0, z1;
        android.widget.RemoteViewsService$RemoteViewsFactory $r4;
        java.lang.Thread$UncaughtExceptionHandler $r6;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        $r4 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        z1 = interfaceinvoke $r4.<android.widget.RemoteViewsService$RemoteViewsFactory: boolean hasStableIds()>();

     label2:
        z0 = z1;

     label3:
        exitmonitor r0;

        return z0;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r6.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2);

     label6:
        z0 = 0;

        goto label3;

     label7:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public boolean isCreated()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Throwable r1, $r2;
        boolean z0;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        z0 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: boolean mIsCreated>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onDataSetChanged()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Throwable r1, $r7;
        java.lang.Exception r2, $r5;
        java.lang.Thread r3;
        android.widget.RemoteViewsService$RemoteViewsFactory $r4;
        java.lang.Thread$UncaughtExceptionHandler $r6;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        $r4 = r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViewsService$RemoteViewsFactory mFactory>;

        interfaceinvoke $r4.<android.widget.RemoteViewsService$RemoteViewsFactory: void onDataSetChanged()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r6.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r3, r2);

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void onDataSetChangedAsync()
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: void onDataSetChanged()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void onDestroy(android.content.Intent)
    {
        android.widget.RemoteViewsService$RemoteViewsFactoryAdapter r0;
        android.content.Intent r1;
        java.lang.Object r2, $r11;
        android.content.Intent$FilterComparison r3, $r8;
        java.lang.Throwable r4, $r15;
        android.widget.RemoteViewsService$RemoteViewsFactory r5;
        java.lang.Exception r6, $r14;
        java.lang.Thread r7;
        java.util.HashMap $r9, $r10, $r13;
        boolean $z0;
        java.lang.Thread$UncaughtExceptionHandler $r16;

        r0 := @this: android.widget.RemoteViewsService$RemoteViewsFactoryAdapter;

        r1 := @parameter0: android.content.Intent;

        r2 = staticinvoke <android.widget.RemoteViewsService: java.lang.Object access$000()>();

        entermonitor r2;

     label01:
        $r8 = new android.content.Intent$FilterComparison;

        specialinvoke $r8.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r1);

        r3 = $r8;

        $r9 = staticinvoke <android.widget.RemoteViewsService: java.util.HashMap access$100()>();

        $z0 = virtualinvoke $r9.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r3);

        if $z0 == 0 goto label04;

        $r10 = staticinvoke <android.widget.RemoteViewsService: java.util.HashMap access$100()>();

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (android.widget.RemoteViewsService$RemoteViewsFactory) $r11;

     label02:
        interfaceinvoke r5.<android.widget.RemoteViewsService$RemoteViewsFactory: void onDestroy()>();

     label03:
        $r13 = staticinvoke <android.widget.RemoteViewsService: java.util.HashMap access$100()>();

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r3);

     label04:
        exitmonitor r2;

     label05:
        return;

     label06:
        $r14 := @caughtexception;

        r6 = $r14;

     label07:
        r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r16 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        interfaceinvoke $r16.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r7, r6);

     label08:
        goto label03;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

     label10:
        exitmonitor r2;

     label11:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
