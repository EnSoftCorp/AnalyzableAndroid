class android.text.PackedIntVector extends java.lang.Object
{
    private final int mColumns;
    private int mRowGapLength;
    private int mRowGapStart;
    private int mRows;
    private int[] mValueGap;
    private int[] mValues;

    public void <init>(int)
    {
        android.text.PackedIntVector r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.PackedIntVector: int mColumns> = i0;

        r0.<android.text.PackedIntVector: int mRows> = 0;

        r0.<android.text.PackedIntVector: int mRowGapStart> = 0;

        $i1 = r0.<android.text.PackedIntVector: int mRows>;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i1;

        r0.<android.text.PackedIntVector: int[] mValues> = null;

        $i2 = i0 * 2;

        $r1 = newarray (int)[$i2];

        r0.<android.text.PackedIntVector: int[] mValueGap> = $r1;

        return;
    }

    private final void growBuffer()
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        int[] r1, r2, $r3, $r4, $r5;

        r0 := @this: android.text.PackedIntVector;

        i0 = r0.<android.text.PackedIntVector: int mColumns>;

        $i5 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        $i6 = 1 + $i5;

        $i7 = i0 * $i6;

        $i8 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i7);

        i1 = $i8 / i0;

        $i9 = i1 * i0;

        r1 = newarray (int)[$i9];

        r2 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        i2 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i12 = r0.<android.text.PackedIntVector: int mRows>;

        $i10 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i11 = i2 + $i10;

        i3 = $i12 - $i11;

        $r3 = r0.<android.text.PackedIntVector: int[] mValues>;

        if $r3 == null goto label1;

        $r4 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i23 = i0 * i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i23);

        $r5 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i25 = r0.<android.text.PackedIntVector: int mRows>;

        $i24 = $i25 - i3;

        $i27 = i0 * $i24;

        $i28 = i1 - i3;

        $i26 = i0 * $i28;

        $i29 = i3 * i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i27, r1, $i26, $i29);

     label1:
        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        $i18 = r2[i4];

        if $i18 < i2 goto label3;

        $i19 = r2[i4];

        $i17 = r0.<android.text.PackedIntVector: int mRows>;

        $i20 = i1 - $i17;

        $i22 = $i19 + $i20;

        r2[i4] = $i22;

        $i21 = r2[i4];

        if $i21 >= i2 goto label3;

        r2[i4] = i2;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $i16 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i14 = r0.<android.text.PackedIntVector: int mRows>;

        $i13 = i1 - $i14;

        $i15 = $i16 + $i13;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i15;

        r0.<android.text.PackedIntVector: int mRows> = i1;

        r0.<android.text.PackedIntVector: int[] mValues> = r1;

        return;
    }

    private final void moveRowGapTo(int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52;
        int[] r1, r2, r3, r4;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        $i16 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 != $i16 goto label01;

        return;

     label01:
        $i15 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 <= $i15 goto label07;

        $i31 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i35 = i0 + $i31;

        $i37 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i32 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i38 = $i37 + $i32;

        i8 = $i35 - $i38;

        i9 = r0.<android.text.PackedIntVector: int mColumns>;

        r3 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r4 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i41 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i36 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i10 = $i41 + $i36;

        i12 = i10;

     label02:
        $i42 = i10 + i8;

        if i12 >= $i42 goto label13;

        $i40 = i12 - i10;

        $i39 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        i11 = $i40 + $i39;

        i14 = 0;

     label03:
        if i14 >= i9 goto label06;

        $i46 = i12 * i9;

        $i45 = i14 + $i46;

        i13 = r4[$i45];

        $i44 = r3[i14];

        if i12 < $i44 goto label04;

        $i52 = i14 + i9;

        $i51 = r3[$i52];

        i13 = i13 + $i51;

     label04:
        $i43 = r3[i14];

        if i11 < $i43 goto label05;

        $i48 = i14 + i9;

        $i47 = r3[$i48];

        i13 = i13 - $i47;

     label05:
        $i50 = i11 * i9;

        $i49 = i14 + $i50;

        r4[$i49] = i13;

        i14 = i14 + 1;

        goto label03;

     label06:
        i12 = i12 + 1;

        goto label02;

     label07:
        $i18 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        i1 = $i18 - i0;

        i2 = r0.<android.text.PackedIntVector: int mColumns>;

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i20 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i17 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i3 = $i20 + $i17;

        $i19 = i0 + i1;

        i4 = -1 + $i19;

     label08:
        if i4 < i0 goto label13;

        $i22 = i4 - i0;

        $i21 = i3 + $i22;

        i5 = $i21 - i1;

        i6 = 0;

     label09:
        if i6 >= i2 goto label12;

        $i24 = i4 * i2;

        $i23 = i6 + $i24;

        i7 = r2[$i23];

        $i26 = r1[i6];

        if i4 < $i26 goto label10;

        $i33 = i6 + i2;

        $i34 = r1[$i33];

        i7 = i7 + $i34;

     label10:
        $i25 = r1[i6];

        if i5 < $i25 goto label11;

        $i27 = i6 + i2;

        $i28 = r1[$i27];

        i7 = i7 - $i28;

     label11:
        $i29 = i5 * i2;

        $i30 = i6 + $i29;

        r2[$i30] = i7;

        i6 = i6 + 1;

        goto label09;

     label12:
        i4 = i4 + -1;

        goto label08;

     label13:
        r0.<android.text.PackedIntVector: int mRowGapStart> = i0;

        return;
    }

    private final void moveValueGapTo(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        int[] r1, r2;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        i2 = r0.<android.text.PackedIntVector: int mColumns>;

        $i7 = r1[i0];

        if i1 != $i7 goto label1;

        return;

     label1:
        $i8 = r1[i0];

        if i1 <= $i8 goto label3;

        i5 = r1[i0];

     label2:
        if i5 >= i1 goto label5;

        $i16 = i5 * i2;

        i6 = i0 + $i16;

        $i17 = r2[i6];

        $i15 = i0 + i2;

        $i18 = r1[$i15];

        $i19 = $i17 + $i18;

        r2[i6] = $i19;

        i5 = i5 + 1;

        goto label2;

     label3:
        i3 = i1;

     label4:
        $i9 = r1[i0];

        if i3 >= $i9 goto label5;

        $i10 = i3 * i2;

        i4 = i0 + $i10;

        $i14 = r2[i4];

        $i11 = i0 + i2;

        $i12 = r1[$i11];

        $i13 = $i14 - $i12;

        r2[i4] = $i13;

        i3 = i3 + 1;

        goto label4;

     label5:
        r1[i0] = i1;

        return;
    }

    private void setValueInternal(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] r1, $r2;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 < $i3 goto label1;

        $i11 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i0 = i0 + $i11;

     label1:
        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i4 = r1[i1];

        if i0 < $i4 goto label2;

        $i8 = r0.<android.text.PackedIntVector: int mColumns>;

        $i9 = i1 + $i8;

        $i10 = r1[$i9];

        i2 = i2 - $i10;

     label2:
        $r2 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i5 = r0.<android.text.PackedIntVector: int mColumns>;

        $i6 = i0 * $i5;

        $i7 = i1 + $i6;

        $r2[$i7] = i2;

        return;
    }

    public void adjustValuesBelow(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i4 = i0 | i1;

        if $i4 < 0 goto label1;

        $i5 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 > $i5 goto label1;

        $i6 = virtualinvoke r0.<android.text.PackedIntVector: int width()>();

        if i1 < $i6 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $i7 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 < $i7 goto label3;

        $i10 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i0 = i0 + $i10;

     label3:
        specialinvoke r0.<android.text.PackedIntVector: void moveValueGapTo(int,int)>(i1, i0);

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i9 = r0.<android.text.PackedIntVector: int mColumns>;

        i3 = i1 + $i9;

        $i8 = r1[i3];

        $i11 = i2 + $i8;

        r1[i3] = $i11;

        return;
    }

    public void deleteAt(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 | i1;

        if $i2 < 0 goto label1;

        $i3 = i0 + i1;

        $i4 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if $i3 <= $i4 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label2:
        $i5 = i0 + i1;

        specialinvoke r0.<android.text.PackedIntVector: void moveRowGapTo(int)>($i5);

        $i6 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i7 = $i6 - i1;

        r0.<android.text.PackedIntVector: int mRowGapStart> = $i7;

        $i8 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i9 = i1 + $i8;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i9;

        return;
    }

    public int getValue(int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        int[] r1, $r8;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = r0.<android.text.PackedIntVector: int mColumns>;

        $i4 = i0 | i1;

        if $i4 < 0 goto label1;

        $i5 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 >= $i5 goto label1;

        if i1 < i2 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $i6 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 < $i6 goto label3;

        $i11 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i0 = i0 + $i11;

     label3:
        $r8 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i7 = i0 * i2;

        $i8 = i1 + $i7;

        i3 = $r8[$i8];

        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i10 = r1[i1];

        if i0 < $i10 goto label4;

        $i9 = i1 + i2;

        $i12 = r1[$i9];

        i3 = i3 + $i12;

     label4:
        return i3;
    }

    public void insertAt(int, int[])
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] r1;
        java.lang.IndexOutOfBoundsException $r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        if i0 < 0 goto label1;

        $i3 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("row ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        if r1 == null goto label3;

        $i11 = lengthof r1;

        $i13 = virtualinvoke r0.<android.text.PackedIntVector: int width()>();

        if $i11 >= $i13 goto label3;

        $r7 = new java.lang.IndexOutOfBoundsException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value count ");

        $i14 = lengthof r1;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label3:
        specialinvoke r0.<android.text.PackedIntVector: void moveRowGapTo(int)>(i0);

        $i4 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        if $i4 != 0 goto label4;

        specialinvoke r0.<android.text.PackedIntVector: void growBuffer()>();

     label4:
        $i5 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        $i6 = 1 + $i5;

        r0.<android.text.PackedIntVector: int mRowGapStart> = $i6;

        $i7 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i8 = -1 + $i7;

        r0.<android.text.PackedIntVector: int mRowGapLength> = $i8;

        if r1 != null goto label6;

        $i12 = r0.<android.text.PackedIntVector: int mColumns>;

        i2 = -1 + $i12;

     label5:
        if i2 < 0 goto label8;

        specialinvoke r0.<android.text.PackedIntVector: void setValueInternal(int,int,int)>(i0, i2, 0);

        i2 = i2 + -1;

        goto label5;

     label6:
        $i10 = r0.<android.text.PackedIntVector: int mColumns>;

        i1 = -1 + $i10;

     label7:
        if i1 < 0 goto label8;

        $i9 = r1[i1];

        specialinvoke r0.<android.text.PackedIntVector: void setValueInternal(int,int,int)>(i0, i1, $i9);

        i1 = i1 + -1;

        goto label7;

     label8:
        return;
    }

    public void setValue(int, int, int)
    {
        android.text.PackedIntVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] r1, $r8;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.text.PackedIntVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i0 | i1;

        if $i3 < 0 goto label1;

        $i4 = virtualinvoke r0.<android.text.PackedIntVector: int size()>();

        if i0 >= $i4 goto label1;

        $i5 = r0.<android.text.PackedIntVector: int mColumns>;

        if i1 < $i5 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $i6 = r0.<android.text.PackedIntVector: int mRowGapStart>;

        if i0 < $i6 goto label3;

        $i13 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        i0 = i0 + $i13;

     label3:
        r1 = r0.<android.text.PackedIntVector: int[] mValueGap>;

        $i7 = r1[i1];

        if i0 < $i7 goto label4;

        $i12 = r0.<android.text.PackedIntVector: int mColumns>;

        $i11 = i1 + $i12;

        $i14 = r1[$i11];

        i2 = i2 - $i14;

     label4:
        $r8 = r0.<android.text.PackedIntVector: int[] mValues>;

        $i9 = r0.<android.text.PackedIntVector: int mColumns>;

        $i8 = i0 * $i9;

        $i10 = i1 + $i8;

        $r8[$i10] = i2;

        return;
    }

    public int size()
    {
        android.text.PackedIntVector r0;
        int $i0, $i1, $i2;

        r0 := @this: android.text.PackedIntVector;

        $i1 = r0.<android.text.PackedIntVector: int mRows>;

        $i0 = r0.<android.text.PackedIntVector: int mRowGapLength>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int width()
    {
        android.text.PackedIntVector r0;
        int $i0;

        r0 := @this: android.text.PackedIntVector;

        $i0 = r0.<android.text.PackedIntVector: int mColumns>;

        return $i0;
    }
}
