public class gov.nist.core.ThreadAuditor$ThreadHandle extends java.lang.Object
{
    private boolean isThreadActive;
    final gov.nist.core.ThreadAuditor this$0;
    private java.lang.Thread thread;
    private gov.nist.core.ThreadAuditor threadAuditor;

    public void <init>(gov.nist.core.ThreadAuditor, gov.nist.core.ThreadAuditor)
    {
        gov.nist.core.ThreadAuditor$ThreadHandle r0;
        gov.nist.core.ThreadAuditor r1, r2;
        java.lang.Thread $r3;

        r0 := @this: gov.nist.core.ThreadAuditor$ThreadHandle;

        r1 := @parameter0: gov.nist.core.ThreadAuditor;

        r2 := @parameter1: gov.nist.core.ThreadAuditor;

        r0.<gov.nist.core.ThreadAuditor$ThreadHandle: gov.nist.core.ThreadAuditor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.core.ThreadAuditor$ThreadHandle: boolean isThreadActive> = 0;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<gov.nist.core.ThreadAuditor$ThreadHandle: java.lang.Thread thread> = $r3;

        r0.<gov.nist.core.ThreadAuditor$ThreadHandle: gov.nist.core.ThreadAuditor threadAuditor> = r2;

        return;
    }

    public long getPingIntervalInMillisecs()
    {
        gov.nist.core.ThreadAuditor$ThreadHandle r0;
        gov.nist.core.ThreadAuditor $r1;
        long $l0;

        r0 := @this: gov.nist.core.ThreadAuditor$ThreadHandle;

        $r1 = r0.<gov.nist.core.ThreadAuditor$ThreadHandle: gov.nist.core.ThreadAuditor threadAuditor>;

        $l0 = virtualinvoke $r1.<gov.nist.core.ThreadAuditor: long getPingIntervalInMillisecs()>();

        return $l0;
    }

    public java.lang.Thread getThread()
    {
        gov.nist.core.ThreadAuditor$ThreadHandle r0;
        java.lang.Thread $r1;

        r0 := @this: gov.nist.core.ThreadAuditor$ThreadHandle;

        $r1 = r0.<gov.nist.core.ThreadAuditor$ThreadHandle: java.lang.Thread thread>;

        return $r1;
    }

    public boolean isThreadActive()
    {
        gov.nist.core.ThreadAuditor$ThreadHandle r0;
        boolean $z0;

        r0 := @this: gov.nist.core.ThreadAuditor$ThreadHandle;

        $z0 = r0.<gov.nist.core.ThreadAuditor$ThreadHandle: boolean isThreadActive>;

        return $z0;
    }

    public void ping()
    {
        gov.nist.core.ThreadAuditor$ThreadHandle r0;
        gov.nist.core.ThreadAuditor $r1;

        r0 := @this: gov.nist.core.ThreadAuditor$ThreadHandle;

        $r1 = r0.<gov.nist.core.ThreadAuditor$ThreadHandle: gov.nist.core.ThreadAuditor threadAuditor>;

        virtualinvoke $r1.<gov.nist.core.ThreadAuditor: void ping(gov.nist.core.ThreadAuditor$ThreadHandle)>(r0);

        return;
    }

    protected void setThreadActive(boolean)
    {
        gov.nist.core.ThreadAuditor$ThreadHandle r0;
        boolean z0;

        r0 := @this: gov.nist.core.ThreadAuditor$ThreadHandle;

        z0 := @parameter0: boolean;

        r0.<gov.nist.core.ThreadAuditor$ThreadHandle: boolean isThreadActive> = z0;

        return;
    }

    public java.lang.String toString()
    {
        gov.nist.core.ThreadAuditor$ThreadHandle r0;
        java.lang.StringBuffer $r1, $r2, $r5, $r6, $r8;
        java.lang.Thread $r3, $r7;
        java.lang.String $r4, $r9;
        boolean $z0;

        r0 := @this: gov.nist.core.ThreadAuditor$ThreadHandle;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Thread Name: ");

        $r3 = r0.<gov.nist.core.ThreadAuditor$ThreadHandle: java.lang.Thread thread>;

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", Alive: ");

        $r7 = r0.<gov.nist.core.ThreadAuditor$ThreadHandle: java.lang.Thread thread>;

        $z0 = virtualinvoke $r7.<java.lang.Thread: boolean isAlive()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
