public class com.google.android.mms.util.DownloadDrmHelper extends java.lang.Object
{
    public static final java.lang.String EXTENSION_DRM_MESSAGE;
    public static final java.lang.String EXTENSION_INTERNAL_FWDL;
    public static final java.lang.String MIMETYPE_DRM_MESSAGE;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.google.android.mms.util.DownloadDrmHelper r0;

        r0 := @this: com.google.android.mms.util.DownloadDrmHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getOriginalMimeType(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r7;
        android.drm.DrmManagerClient r4, $r8;
        boolean $z0;
        java.lang.IllegalStateException $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = r2;

        $r8 = new android.drm.DrmManagerClient;

        specialinvoke $r8.<android.drm.DrmManagerClient: void <init>(android.content.Context)>(r0);

        r4 = $r8;

     label1:
        $z0 = virtualinvoke r4.<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)>(r1, null);

        if $z0 == 0 goto label3;

        r7 = virtualinvoke r4.<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>(r1);

     label2:
        r3 = r7;

     label3:
        return r3;

     label4:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DownloadDrmHelper", "Can\'t get original mime type since path is null or empty string.");

        return r3;

     label5:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DownloadDrmHelper", "DrmManagerClient didn\'t initialize properly.");

        return r3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.IllegalStateException from label1 to label2 with label5;
    }

    public static boolean isDrmConvertNeeded(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = "application/vnd.oma.drm.message";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isDrmMimeType(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        boolean z0, z1;
        android.drm.DrmManagerClient r2, $r5;
        int i0;
        java.lang.IllegalArgumentException $r6;
        java.lang.IllegalStateException $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        z0 = 0;

        if r0 == null goto label7;

     label1:
        $r5 = new android.drm.DrmManagerClient;

        specialinvoke $r5.<android.drm.DrmManagerClient: void <init>(android.content.Context)>(r0);

        r2 = $r5;

     label2:
        z0 = 0;

        if r2 == null goto label7;

        z0 = 0;

        if r1 == null goto label7;

     label3:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label4:
        z0 = 0;

        if i0 <= 0 goto label7;

     label5:
        z1 = virtualinvoke r2.<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)>("", r1);

     label6:
        z0 = z1;

     label7:
        return z0;

     label8:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DownloadDrmHelper", "DrmManagerClient instance could not be created, context is Illegal.");

        return 0;

     label9:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DownloadDrmHelper", "DrmManagerClient didn\'t initialize properly.");

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label8;
        catch java.lang.IllegalStateException from label1 to label2 with label9;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
        catch java.lang.IllegalStateException from label3 to label4 with label9;
        catch java.lang.IllegalArgumentException from label5 to label6 with label8;
        catch java.lang.IllegalStateException from label5 to label6 with label9;
    }

    public static java.lang.String modifyDrmFwLockFileExtension(java.lang.String)
    {
        java.lang.String r0;
        int i0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if i0 == -1 goto label1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label1:
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String concat(java.lang.String)>(".fl");

     label2:
        return r0;
    }

    public static void <clinit>()
    {
        <com.google.android.mms.util.DownloadDrmHelper: java.lang.String TAG> = "DownloadDrmHelper";

        <com.google.android.mms.util.DownloadDrmHelper: java.lang.String MIMETYPE_DRM_MESSAGE> = "application/vnd.oma.drm.message";

        <com.google.android.mms.util.DownloadDrmHelper: java.lang.String EXTENSION_INTERNAL_FWDL> = ".fl";

        <com.google.android.mms.util.DownloadDrmHelper: java.lang.String EXTENSION_DRM_MESSAGE> = ".dm";

        return;
    }
}
