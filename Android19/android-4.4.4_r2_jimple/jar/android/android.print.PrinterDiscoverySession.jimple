public final class android.print.PrinterDiscoverySession extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final int MSG_PRINTERS_ADDED;
    private static final int MSG_PRINTERS_REMOVED;
    private final android.os.Handler mHandler;
    private boolean mIsPrinterDiscoveryStarted;
    private android.print.PrinterDiscoverySession$OnPrintersChangeListener mListener;
    private android.print.IPrinterDiscoveryObserver mObserver;
    private final android.print.IPrintManager mPrintManager;
    private final java.util.LinkedHashMap mPrinters;
    private final int mUserId;

    void <init>(android.print.IPrintManager, android.content.Context, int)
    {
        android.print.PrinterDiscoverySession r0;
        android.print.IPrintManager r1, $r9;
        android.content.Context r2;
        int i0, $i1;
        android.os.RemoteException r3, $r10;
        java.util.LinkedHashMap $r4;
        android.print.PrinterDiscoverySession$SessionHandler $r5;
        android.os.Looper $r6;
        android.print.PrinterDiscoverySession$PrinterDiscoveryObserver $r7;
        android.print.IPrinterDiscoveryObserver $r8;

        r0 := @this: android.print.PrinterDiscoverySession;

        r1 := @parameter0: android.print.IPrintManager;

        r2 := @parameter1: android.content.Context;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters> = $r4;

        r0.<android.print.PrinterDiscoverySession: android.print.IPrintManager mPrintManager> = r1;

        r0.<android.print.PrinterDiscoverySession: int mUserId> = i0;

        $r5 = new android.print.PrinterDiscoverySession$SessionHandler;

        $r6 = virtualinvoke r2.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r5.<android.print.PrinterDiscoverySession$SessionHandler: void <init>(android.print.PrinterDiscoverySession,android.os.Looper)>(r0, $r6);

        r0.<android.print.PrinterDiscoverySession: android.os.Handler mHandler> = $r5;

        $r7 = new android.print.PrinterDiscoverySession$PrinterDiscoveryObserver;

        specialinvoke $r7.<android.print.PrinterDiscoverySession$PrinterDiscoveryObserver: void <init>(android.print.PrinterDiscoverySession)>(r0);

        r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver> = $r7;

     label1:
        $r9 = r0.<android.print.PrinterDiscoverySession: android.print.IPrintManager mPrintManager>;

        $r8 = r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver>;

        $i1 = r0.<android.print.PrinterDiscoverySession: int mUserId>;

        interfaceinvoke $r9.<android.print.IPrintManager: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>($r8, $i1);

     label2:
        return;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PrinterDiscoverySession", "Error creating printer discovery session", r3);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void access$000(android.print.PrinterDiscoverySession, java.util.List)
    {
        android.print.PrinterDiscoverySession r0;
        java.util.List r1;

        r0 := @parameter0: android.print.PrinterDiscoverySession;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<android.print.PrinterDiscoverySession: void handlePrintersAdded(java.util.List)>(r1);

        return;
    }

    static void access$100(android.print.PrinterDiscoverySession, java.util.List)
    {
        android.print.PrinterDiscoverySession r0;
        java.util.List r1;

        r0 := @parameter0: android.print.PrinterDiscoverySession;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<android.print.PrinterDiscoverySession: void handlePrintersRemoved(java.util.List)>(r1);

        return;
    }

    static android.os.Handler access$200(android.print.PrinterDiscoverySession)
    {
        android.print.PrinterDiscoverySession r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.print.PrinterDiscoverySession;

        $r1 = r0.<android.print.PrinterDiscoverySession: android.os.Handler mHandler>;

        return $r1;
    }

    private void destroyNoCheck()
    {
        android.print.PrinterDiscoverySession r0;
        java.lang.Throwable r1, $r8;
        android.os.RemoteException r2, $r6;
        int $i0;
        android.print.IPrinterDiscoveryObserver $r3;
        android.print.IPrintManager $r4;
        java.util.LinkedHashMap $r5, $r7, $r9;

        r0 := @this: android.print.PrinterDiscoverySession;

        virtualinvoke r0.<android.print.PrinterDiscoverySession: void stopPrinterDiscovery()>();

     label1:
        $r4 = r0.<android.print.PrinterDiscoverySession: android.print.IPrintManager mPrintManager>;

        $r3 = r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver>;

        $i0 = r0.<android.print.PrinterDiscoverySession: int mUserId>;

        interfaceinvoke $r4.<android.print.IPrintManager: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>($r3, $i0);

     label2:
        r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver> = null;

        $r5 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        virtualinvoke $r5.<java.util.LinkedHashMap: void clear()>();

        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PrinterDiscoverySession", "Error destroying printer discovery session", r2);

     label5:
        r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver> = null;

        $r7 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        virtualinvoke $r7.<java.util.LinkedHashMap: void clear()>();

        return;

     label6:
        $r8 := @caughtexception;

        r1 = $r8;

        r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver> = null;

        $r9 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        virtualinvoke $r9.<java.util.LinkedHashMap: void clear()>();

        throw r1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void handlePrintersAdded(java.util.List)
    {
        android.print.PrinterDiscoverySession r0;
        java.util.List r1;
        android.util.ArrayMap r2, $r9;
        int i0, i1, i2, i3;
        java.util.Iterator r3;
        android.print.PrinterId r4, $r17, $r20;
        android.print.PrinterInfo r5, r6, r7;
        boolean $z0, $z1, $z2;
        java.util.LinkedHashMap $r8, $r10, $r12, $r16, $r23;
        java.util.Set $r11;
        java.lang.Object $r13, $r14, $r18, $r22;

        r0 := @this: android.print.PrinterDiscoverySession;

        r1 := @parameter0: java.util.List;

        $z0 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r8 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        $z1 = virtualinvoke $r8.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = 0;

     label2:
        if i3 >= i2 goto label3;

        $r22 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r7 = (android.print.PrinterInfo) $r22;

        $r23 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        $r20 = virtualinvoke r7.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        virtualinvoke $r23.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, r7);

        i3 = i3 + 1;

        goto label2;

     label3:
        specialinvoke r0.<android.print.PrinterDiscoverySession: void notifyOnPrintersChanged()>();

        return;

     label4:
        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r2 = $r9;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label5:
        if i1 >= i0 goto label6;

        $r18 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (android.print.PrinterInfo) $r18;

        $r17 = virtualinvoke r6.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r6);

        i1 = i1 + 1;

        goto label5;

     label6:
        $r10 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        $r11 = virtualinvoke $r10.<java.util.LinkedHashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.print.PrinterId) $r14;

        $r13 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r4);

        r5 = (android.print.PrinterInfo) $r13;

        if r5 == null goto label7;

        $r16 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        virtualinvoke $r16.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label7;

     label8:
        $r12 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        virtualinvoke $r12.<java.util.LinkedHashMap: void putAll(java.util.Map)>(r2);

        specialinvoke r0.<android.print.PrinterDiscoverySession: void notifyOnPrintersChanged()>();

        return;
    }

    private void handlePrintersRemoved(java.util.List)
    {
        android.print.PrinterDiscoverySession r0;
        java.util.List r1;
        boolean z0, $z1;
        int i0, i1;
        android.print.PrinterId r2;
        java.lang.Object $r3, $r5;
        java.util.LinkedHashMap $r4;

        r0 := @this: android.print.PrinterDiscoverySession;

        r1 := @parameter0: java.util.List;

        $z1 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        z0 = 0;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.print.PrinterId) $r3;

        $r4 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        $r5 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r2);

        if $r5 == null goto label4;

        z0 = 1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        if z0 == 0 goto label1;

        specialinvoke r0.<android.print.PrinterDiscoverySession: void notifyOnPrintersChanged()>();

        return;
    }

    private boolean isDestroyedNoCheck()
    {
        android.print.PrinterDiscoverySession r0;
        android.print.IPrinterDiscoveryObserver $r1;

        r0 := @this: android.print.PrinterDiscoverySession;

        $r1 = r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver>;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    private void notifyOnPrintersChanged()
    {
        android.print.PrinterDiscoverySession r0;
        android.print.PrinterDiscoverySession$OnPrintersChangeListener $r1, $r2;

        r0 := @this: android.print.PrinterDiscoverySession;

        $r1 = r0.<android.print.PrinterDiscoverySession: android.print.PrinterDiscoverySession$OnPrintersChangeListener mListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.print.PrinterDiscoverySession: android.print.PrinterDiscoverySession$OnPrintersChangeListener mListener>;

        interfaceinvoke $r2.<android.print.PrinterDiscoverySession$OnPrintersChangeListener: void onPrintersChanged()>();

     label1:
        return;
    }

    private static void throwIfNotCalledOnMainThread()
    {
        android.os.Looper $r0;
        boolean $z0;
        java.lang.IllegalAccessError $r1;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $z0 = virtualinvoke $r0.<android.os.Looper: boolean isCurrentThread()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalAccessError;

        specialinvoke $r1.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("must be called from the main thread");

        throw $r1;

     label1:
        return;
    }

    public final void destroy()
    {
        android.print.PrinterDiscoverySession r0;
        boolean $z0;

        r0 := @this: android.print.PrinterDiscoverySession;

        $z0 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PrinterDiscoverySession", "Ignoring destroy - session destroyed");

     label1:
        specialinvoke r0.<android.print.PrinterDiscoverySession: void destroyNoCheck()>();

        return;
    }

    protected final void finalize() throws java.lang.Throwable
    {
        android.print.PrinterDiscoverySession r0;
        boolean $z0;

        r0 := @this: android.print.PrinterDiscoverySession;

        $z0 = specialinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyedNoCheck()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PrinterDiscoverySession", "Destroying leaked printer discovery session");

        specialinvoke r0.<android.print.PrinterDiscoverySession: void destroyNoCheck()>();

     label1:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public final java.util.List getPrinters()
    {
        android.print.PrinterDiscoverySession r0;
        boolean $z0;
        java.util.ArrayList $r1;
        java.util.LinkedHashMap $r2;
        java.util.Collection $r3;
        java.util.List $r4;

        r0 := @this: android.print.PrinterDiscoverySession;

        $z0 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PrinterDiscoverySession", "Ignoring get printers - session destroyed");

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r1 = new java.util.ArrayList;

        $r2 = r0.<android.print.PrinterDiscoverySession: java.util.LinkedHashMap mPrinters>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.util.Collection values()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r1;
    }

    public final boolean isDestroyed()
    {
        android.print.PrinterDiscoverySession r0;
        boolean $z0;

        r0 := @this: android.print.PrinterDiscoverySession;

        staticinvoke <android.print.PrinterDiscoverySession: void throwIfNotCalledOnMainThread()>();

        $z0 = specialinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyedNoCheck()>();

        return $z0;
    }

    public final boolean isPrinterDiscoveryStarted()
    {
        android.print.PrinterDiscoverySession r0;
        boolean $z0;

        r0 := @this: android.print.PrinterDiscoverySession;

        staticinvoke <android.print.PrinterDiscoverySession: void throwIfNotCalledOnMainThread()>();

        $z0 = r0.<android.print.PrinterDiscoverySession: boolean mIsPrinterDiscoveryStarted>;

        return $z0;
    }

    public final void setOnPrintersChangeListener(android.print.PrinterDiscoverySession$OnPrintersChangeListener)
    {
        android.print.PrinterDiscoverySession r0;
        android.print.PrinterDiscoverySession$OnPrintersChangeListener r1;

        r0 := @this: android.print.PrinterDiscoverySession;

        r1 := @parameter0: android.print.PrinterDiscoverySession$OnPrintersChangeListener;

        staticinvoke <android.print.PrinterDiscoverySession: void throwIfNotCalledOnMainThread()>();

        r0.<android.print.PrinterDiscoverySession: android.print.PrinterDiscoverySession$OnPrintersChangeListener mListener> = r1;

        return;
    }

    public final void startPrinterDisovery(java.util.List)
    {
        android.print.PrinterDiscoverySession r0;
        java.util.List r1;
        android.os.RemoteException r2, $r5;
        boolean $z0, $z1;
        int $i0;
        android.print.IPrinterDiscoveryObserver $r3;
        android.print.IPrintManager $r4;

        r0 := @this: android.print.PrinterDiscoverySession;

        r1 := @parameter0: java.util.List;

        $z0 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PrinterDiscoverySession", "Ignoring start printers dsicovery - session destroyed");

     label1:
        return;

     label2:
        $z1 = r0.<android.print.PrinterDiscoverySession: boolean mIsPrinterDiscoveryStarted>;

        if $z1 != 0 goto label1;

        r0.<android.print.PrinterDiscoverySession: boolean mIsPrinterDiscoveryStarted> = 1;

     label3:
        $r4 = r0.<android.print.PrinterDiscoverySession: android.print.IPrintManager mPrintManager>;

        $r3 = r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver>;

        $i0 = r0.<android.print.PrinterDiscoverySession: int mUserId>;

        interfaceinvoke $r4.<android.print.IPrintManager: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>($r3, r1, $i0);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PrinterDiscoverySession", "Error starting printer discovery", r2);

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public final void startPrinterStateTracking(android.print.PrinterId)
    {
        android.print.PrinterDiscoverySession r0;
        android.print.PrinterId r1;
        android.os.RemoteException r2, $r4;
        boolean $z0;
        int $i0;
        android.print.IPrintManager $r3;

        r0 := @this: android.print.PrinterDiscoverySession;

        r1 := @parameter0: android.print.PrinterId;

        $z0 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PrinterDiscoverySession", "Ignoring start printer state tracking - session destroyed");

        return;

     label1:
        $r3 = r0.<android.print.PrinterDiscoverySession: android.print.IPrintManager mPrintManager>;

        $i0 = r0.<android.print.PrinterDiscoverySession: int mUserId>;

        interfaceinvoke $r3.<android.print.IPrintManager: void startPrinterStateTracking(android.print.PrinterId,int)>(r1, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PrinterDiscoverySession", "Error starting printer state tracking", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void stopPrinterDiscovery()
    {
        android.print.PrinterDiscoverySession r0;
        android.os.RemoteException r1, $r4;
        boolean $z0, $z1;
        int $i0;
        android.print.IPrinterDiscoveryObserver $r2;
        android.print.IPrintManager $r3;

        r0 := @this: android.print.PrinterDiscoverySession;

        $z0 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PrinterDiscoverySession", "Ignoring stop printers discovery - session destroyed");

     label1:
        return;

     label2:
        $z1 = r0.<android.print.PrinterDiscoverySession: boolean mIsPrinterDiscoveryStarted>;

        if $z1 == 0 goto label1;

        r0.<android.print.PrinterDiscoverySession: boolean mIsPrinterDiscoveryStarted> = 0;

     label3:
        $r3 = r0.<android.print.PrinterDiscoverySession: android.print.IPrintManager mPrintManager>;

        $r2 = r0.<android.print.PrinterDiscoverySession: android.print.IPrinterDiscoveryObserver mObserver>;

        $i0 = r0.<android.print.PrinterDiscoverySession: int mUserId>;

        interfaceinvoke $r3.<android.print.IPrintManager: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>($r2, $i0);

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PrinterDiscoverySession", "Error stopping printer discovery", r1);

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public final void stopPrinterStateTracking(android.print.PrinterId)
    {
        android.print.PrinterDiscoverySession r0;
        android.print.PrinterId r1;
        android.os.RemoteException r2, $r4;
        boolean $z0;
        int $i0;
        android.print.IPrintManager $r3;

        r0 := @this: android.print.PrinterDiscoverySession;

        r1 := @parameter0: android.print.PrinterId;

        $z0 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PrinterDiscoverySession", "Ignoring stop printer state tracking - session destroyed");

        return;

     label1:
        $r3 = r0.<android.print.PrinterDiscoverySession: android.print.IPrintManager mPrintManager>;

        $i0 = r0.<android.print.PrinterDiscoverySession: int mUserId>;

        interfaceinvoke $r3.<android.print.IPrintManager: void stopPrinterStateTracking(android.print.PrinterId,int)>(r1, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PrinterDiscoverySession", "Error stoping printer state tracking", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void validatePrinters(java.util.List)
    {
        android.print.PrinterDiscoverySession r0;
        java.util.List r1;
        android.os.RemoteException r2, $r4;
        boolean $z0;
        int $i0;
        android.print.IPrintManager $r3;

        r0 := @this: android.print.PrinterDiscoverySession;

        r1 := @parameter0: java.util.List;

        $z0 = virtualinvoke r0.<android.print.PrinterDiscoverySession: boolean isDestroyed()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PrinterDiscoverySession", "Ignoring validate printers - session destroyed");

        return;

     label1:
        $r3 = r0.<android.print.PrinterDiscoverySession: android.print.IPrintManager mPrintManager>;

        $i0 = r0.<android.print.PrinterDiscoverySession: int mUserId>;

        interfaceinvoke $r3.<android.print.IPrintManager: void validatePrinters(java.util.List,int)>(r1, $i0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PrinterDiscoverySession", "Error validating printers", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.print.PrinterDiscoverySession: int MSG_PRINTERS_REMOVED> = 2;

        <android.print.PrinterDiscoverySession: int MSG_PRINTERS_ADDED> = 1;

        <android.print.PrinterDiscoverySession: java.lang.String LOG_TAG> = "PrinterDiscoverySession";

        return;
    }
}
