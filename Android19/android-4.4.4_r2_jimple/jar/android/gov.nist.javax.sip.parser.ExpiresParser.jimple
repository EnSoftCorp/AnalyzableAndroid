public class gov.nist.javax.sip.parser.ExpiresParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ExpiresParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ExpiresParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ExpiresParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ExpiresParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ExpiresParser r0;
        gov.nist.javax.sip.header.Expires r1, $r6;
        java.lang.Throwable r2, $r16;
        java.lang.String r3, $r19;
        javax.sip.InvalidArgumentException r4, $r17;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r7, $r9, $r10, $r12, $r13, $r14;
        int $i0;
        java.text.ParseException $r18, $r20;
        java.lang.NumberFormatException $r21;

        r0 := @this: gov.nist.javax.sip.parser.ExpiresParser;

        $r6 = new gov.nist.javax.sip.header.Expires;

        specialinvoke $r6.<gov.nist.javax.sip.header.Expires: void <init>()>();

        r1 = $r6;

        $z0 = <gov.nist.javax.sip.parser.ExpiresParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: void dbg_enter(java.lang.String)>("parse");

     label01:
        $r7 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(2090);

        $r9 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

        $r10 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r13 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

        $r12 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r12.<gov.nist.core.LexerCore: java.lang.String getNextId()>();

        $r14 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label02:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        virtualinvoke r1.<gov.nist.javax.sip.header.Expires: void setExpires(int)>($i0);

     label03:
        $z1 = <gov.nist.javax.sip.parser.ExpiresParser: boolean debug>;

        if $z1 == 0 goto label04;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: void dbg_leave(java.lang.String)>("parse");

     label04:
        return r1;

     label05:
        $r21 := @caughtexception;

     label06:
        $r20 = virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: java.text.ParseException createParseException(java.lang.String)>("bad integer format");

        throw $r20;

     label07:
        $r16 := @caughtexception;

        r2 = $r16;

        $z2 = <gov.nist.javax.sip.parser.ExpiresParser: boolean debug>;

        if $z2 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: void dbg_leave(java.lang.String)>("parse");

     label08:
        throw r2;

     label09:
        $r17 := @caughtexception;

        r4 = $r17;

     label10:
        $r19 = virtualinvoke r4.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r18 = virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: java.text.ParseException createParseException(java.lang.String)>($r19);

        throw $r18;

     label11:
        nop;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.NumberFormatException from label02 to label03 with label05;
        catch javax.sip.InvalidArgumentException from label02 to label03 with label09;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }
}
