public final class com.android.org.conscrypt.TrustManagerImpl extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
    private final java.security.cert.X509Certificate[] acceptedIssuers;
    private final java.lang.Exception err;
    private final java.security.cert.CertificateFactory factory;
    private com.android.org.conscrypt.CertPinManager pinManager;
    private final java.security.KeyStore rootKeyStore;
    private final com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex;
    private final com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore;
    private final java.security.cert.CertPathValidator validator;

    public void <init>(java.security.KeyStore)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.KeyStore r1;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.KeyStore;

        specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: void <init>(java.security.KeyStore,com.android.org.conscrypt.CertPinManager)>(r1, null);

        return;
    }

    public void <init>(java.security.KeyStore, com.android.org.conscrypt.CertPinManager)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.KeyStore r1, r5;
        com.android.org.conscrypt.CertPinManager r2, $r18;
        java.security.cert.CertPathValidator r3;
        java.security.cert.CertificateFactory r4;
        com.android.org.conscrypt.TrustedCertificateStore r6, r12, $r21;
        java.security.cert.X509Certificate[] r7;
        java.lang.Exception r8, r9, $r22, $r23;
        com.android.org.conscrypt.TrustedCertificateIndex r10, r13, r14, $r17, $r20;
        com.android.org.conscrypt.PinManagerException r11, $r25;
        java.lang.String $r15, $r16;
        boolean $z0;
        java.util.Set $r19;
        java.lang.SecurityException $r24;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: com.android.org.conscrypt.CertPinManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r3 = null;

        r4 = null;

        r5 = null;

        r6 = null;

        r7 = null;

        r8 = null;

     label01:
        r3 = staticinvoke <java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)>("PKIX");

        r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X509");

        $r15 = "AndroidCAStore";

        $r16 = virtualinvoke r1.<java.security.KeyStore: java.lang.String getType()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label09;

     label02:
        r5 = r1;

     label03:
        $r21 = new com.android.org.conscrypt.TrustedCertificateStore;

        specialinvoke $r21.<com.android.org.conscrypt.TrustedCertificateStore: void <init>()>();

        r12 = $r21;

     label04:
        r7 = null;

     label05:
        $r20 = new com.android.org.conscrypt.TrustedCertificateIndex;

        specialinvoke $r20.<com.android.org.conscrypt.TrustedCertificateIndex: void <init>()>();

        r13 = $r20;

     label06:
        r10 = r13;

        r6 = r12;

     label07:
        if r2 == null goto label14;

        r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.CertPinManager pinManager> = r2;

     label08:
        r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.KeyStore rootKeyStore> = r5;

        r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore> = r6;

        r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.CertPathValidator validator> = r3;

        r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.CertificateFactory factory> = r4;

        r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex> = r10;

        r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers> = r7;

        r0.<com.android.org.conscrypt.TrustManagerImpl: java.lang.Exception err> = r8;

        return;

     label09:
        r5 = null;

        r6 = null;

     label10:
        r7 = staticinvoke <com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers(java.security.KeyStore)>(r1);

        $r17 = new com.android.org.conscrypt.TrustedCertificateIndex;

        $r19 = staticinvoke <com.android.org.conscrypt.TrustManagerImpl: java.util.Set trustAnchors(java.security.cert.X509Certificate[])>(r7);

        specialinvoke $r17.<com.android.org.conscrypt.TrustedCertificateIndex: void <init>(java.util.Set)>($r19);

        r14 = $r17;

     label11:
        r10 = r14;

        r8 = null;

        r5 = null;

        r6 = null;

        goto label07;

     label12:
        $r22 := @caughtexception;

        r9 = $r22;

     label13:
        r8 = r9;

        r10 = null;

        goto label07;

     label14:
        $r18 = new com.android.org.conscrypt.CertPinManager;

        specialinvoke $r18.<com.android.org.conscrypt.CertPinManager: void <init>(com.android.org.conscrypt.TrustedCertificateStore)>(r6);

        r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.CertPinManager pinManager> = $r18;

     label15:
        goto label08;

     label16:
        $r25 := @caughtexception;

        r11 = $r25;

        $r24 = new java.lang.SecurityException;

        specialinvoke $r24.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>("Could not initialize CertPinManager", r11);

        throw $r24;

     label17:
        $r23 := @caughtexception;

        r9 = $r23;

        r6 = r12;

        r7 = null;

        goto label13;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label10 to label11 with label12;
        catch com.android.org.conscrypt.PinManagerException from label14 to label15 with label16;
    }

    private static java.security.cert.X509Certificate[] acceptedIssuers(java.security.KeyStore)
    {
        java.security.KeyStore r0;
        java.util.ArrayList r1, $r6;
        java.util.Enumeration r3;
        java.security.cert.X509Certificate[] r4, $r7, $r12;
        java.security.cert.X509Certificate r5;
        boolean $z0;
        int $i0;
        java.lang.Object[] $r8;
        java.lang.Object $r9;
        java.lang.String $r10;
        java.security.cert.Certificate $r11;
        java.security.KeyStoreException $r13;

        r0 := @parameter0: java.security.KeyStore;

     label1:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        r3 = virtualinvoke r0.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r0.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r10);

        r5 = (java.security.cert.X509Certificate) $r11;

     label3:
        if r5 == null goto label2;

     label4:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);

     label5:
        goto label2;

     label6:
        $r13 := @caughtexception;

        $r12 = newarray (java.security.cert.X509Certificate)[0];

        return $r12;

     label7:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r7 = newarray (java.security.cert.X509Certificate)[$i0];

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r4 = (java.security.cert.X509Certificate[]) $r8;

     label8:
        return r4;

        catch java.security.KeyStoreException from label1 to label2 with label6;
        catch java.security.KeyStoreException from label2 to label3 with label6;
        catch java.security.KeyStoreException from label4 to label5 with label6;
        catch java.security.KeyStoreException from label7 to label8 with label6;
    }

    private java.util.List checkTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String, boolean) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1, r5;
        java.lang.String r2, r3;
        boolean z0, z1, $z2, $z4;
        java.util.HashSet r4, $r25;
        java.util.ArrayList r6, $r23;
        java.util.Iterator r7;
        java.security.cert.X509Certificate r8, r10, $r32, $r36, $r44;
        java.security.cert.TrustAnchor r9, $r43;
        java.security.cert.CertPath r11;
        java.security.cert.CertPathValidatorException r12, r13, r22, $r40, $r45, $r53;
        java.security.cert.PKIXParameters r14, $r34;
        java.security.InvalidAlgorithmParameterException r15, $r49;
        java.security.cert.CertificateException r16, r18, r20, $r39, $r46, $r48, $r50, $r51, $r54;
        com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker r17, $r33;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.org.conscrypt.PinManagerException r19, $r47;
        java.lang.IllegalArgumentException $r21;
        java.lang.Exception $r24, $r52;
        java.util.List $r26, $r30;
        java.lang.Object $r27, $r42;
        java.security.cert.CertificateFactory $r28;
        com.android.org.conscrypt.TrustedCertificateIndex $r29, $r35;
        java.security.cert.CertPathValidator $r31;
        com.android.org.conscrypt.CertPinManager $r38;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if r1 == null goto label01;

        $i2 = lengthof r1;

        if $i2 == 0 goto label01;

        if r2 == null goto label01;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label02;

     label01:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null or zero-length parameter");

        throw $r21;

     label02:
        $r24 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.lang.Exception err>;

        if $r24 == null goto label03;

        $r51 = new java.security.cert.CertificateException;

        $r52 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.lang.Exception err>;

        specialinvoke $r51.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>($r52);

        throw $r51;

     label03:
        $r25 = new java.util.HashSet;

        specialinvoke $r25.<java.util.HashSet: void <init>()>();

        r4 = $r25;

        r5 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] cleanupCertChainAndFindTrustAnchors(java.security.cert.X509Certificate[],java.util.Set)>(r1, r4);

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r6 = $r23;

        $r26 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);

        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r26);

        r7 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r42 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r43 = (java.security.cert.TrustAnchor) $r42;

        $r44 = virtualinvoke $r43.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r44);

        goto label04;

     label05:
        $i4 = interfaceinvoke r6.<java.util.List: int size()>();

        $i3 = -1 + $i4;

        $r27 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>($i3);

        r8 = (java.security.cert.X509Certificate) $r27;

     label06:
        $r29 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        r9 = virtualinvoke $r29.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)>(r8);

        if r9 != null goto label10;

     label07:
        $r28 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.CertificateFactory factory>;

        $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);

        r11 = virtualinvoke $r28.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>($r30);

        if r3 == null goto label12;

     label08:
        $r38 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.CertPinManager pinManager>;

        z1 = virtualinvoke $r38.<com.android.org.conscrypt.CertPinManager: boolean chainIsNotPinned(java.lang.String,java.util.List)>(r3, r6);

     label09:
        if z1 == 0 goto label12;

        $r45 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r45.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Certificate path is not properly pinned.", null, r11, -1);

        r22 = $r45;

        $r46 = new java.security.cert.CertificateException;

        specialinvoke $r46.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r22);

        throw $r46;

     label10:
        r10 = virtualinvoke r9.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if r10 == r8 goto label07;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r10);

        r8 = r10;

        goto label06;

     label11:
        $r47 := @caughtexception;

        r19 = $r47;

        $r48 = new java.security.cert.CertificateException;

        specialinvoke $r48.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r19);

        r20 = $r48;

        throw r20;

     label12:
        $i5 = lengthof r5;

        if $i5 != 0 goto label14;

     label13:
        return r6;

     label14:
        $z4 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>();

        if $z4 == 0 goto label15;

        $r40 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r40.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Trust anchor for certification path not found.", null, r11, -1);

        r12 = $r40;

        $r39 = new java.security.cert.CertificateException;

        specialinvoke $r39.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r12);

        throw $r39;

     label15:
        staticinvoke <com.android.org.conscrypt.ChainStrengthAnalyzer: void check(java.security.cert.X509Certificate[])>(r5);

     label16:
        $r34 = new java.security.cert.PKIXParameters;

        specialinvoke $r34.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>(r4);

        r14 = $r34;

        virtualinvoke r14.<java.security.cert.PKIXParameters: void setRevocationEnabled(boolean)>(0);

        $r33 = new com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker;

        $r32 = r5[0];

        specialinvoke $r33.<com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: void <init>(boolean,java.security.cert.X509Certificate,com.android.org.conscrypt.TrustManagerImpl$1)>(z0, $r32, null);

        r17 = $r33;

        virtualinvoke r14.<java.security.cert.PKIXParameters: void addCertPathChecker(java.security.cert.PKIXCertPathChecker)>(r17);

        $r31 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.CertPathValidator validator>;

        virtualinvoke $r31.<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>(r11, r14);

     label17:
        i0 = 1;

     label18:
        $i6 = lengthof r5;

        if i0 >= $i6 goto label13;

        $r35 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        $r36 = r5[i0];

        virtualinvoke $r35.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>($r36);

     label19:
        i0 = i0 + 1;

        goto label18;

     label20:
        $r49 := @caughtexception;

        r15 = $r49;

        $r50 = new java.security.cert.CertificateException;

        specialinvoke $r50.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r15);

        r18 = $r50;

        throw r18;

     label21:
        $r53 := @caughtexception;

        r13 = $r53;

        $r54 = new java.security.cert.CertificateException;

        specialinvoke $r54.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r13);

        r16 = $r54;

        throw r16;

        catch com.android.org.conscrypt.PinManagerException from label08 to label09 with label11;
        catch java.security.InvalidAlgorithmParameterException from label16 to label17 with label20;
        catch java.security.cert.CertPathValidatorException from label16 to label17 with label21;
        catch java.security.InvalidAlgorithmParameterException from label18 to label19 with label20;
        catch java.security.cert.CertPathValidatorException from label18 to label19 with label21;
    }

    private java.security.cert.X509Certificate[] cleanupCertChainAndFindTrustAnchors(java.security.cert.X509Certificate[], java.util.Set)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1, r3, r4;
        java.util.Set r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.security.cert.TrustAnchor r5, r6;
        boolean z0, $z1, $z4;
        java.security.cert.X509Certificate r7, $r9, $r10, $r11, $r12, $r15;
        java.lang.Object[] $r8;
        java.security.Principal $r13, $r14;
        java.lang.Object $r16;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.util.Set;

        r3 = r1;

        i0 = 0;

     label01:
        $i6 = lengthof r1;

        if i0 >= $i6 goto label05;

        i3 = i0 + 1;

     label02:
        i4 = lengthof r1;

        z0 = 0;

        if i3 >= i4 goto label04;

        $r11 = r1[i0];

        $r13 = virtualinvoke $r11.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r12 = r1[i3];

        $r14 = virtualinvoke $r12.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z4 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z4 == 0 goto label10;

        z0 = 1;

        $i9 = i0 + 1;

        if i3 == $i9 goto label04;

        if r1 != r3 goto label03;

        $r16 = virtualinvoke r3.<java.lang.Object: java.lang.Object clone()>();

        r1 = (java.security.cert.X509Certificate[]) $r16;

     label03:
        r7 = r1[i3];

        $i10 = i0 + 1;

        $r15 = r1[$i10];

        r1[i3] = $r15;

        $i8 = i0 + 1;

        r1[$i8] = r7;

     label04:
        if z0 != 0 goto label11;

     label05:
        i1 = 0;

     label06:
        if i1 > i0 goto label07;

        $r10 = r1[i1];

        r6 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)>($r10);

        if r6 == null goto label12;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

     label07:
        i2 = i1;

        $i5 = lengthof r1;

        if i2 != $i5 goto label13;

        r4 = r1;

     label08:
        $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label09;

        $i7 = i1 - 1;

        $r9 = r4[$i7];

        r5 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.TrustAnchor findTrustAnchorByIssuerAndSignature(java.security.cert.X509Certificate)>($r9);

        if r5 == null goto label09;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label09:
        return r4;

     label10:
        i3 = i3 + 1;

        goto label02;

     label11:
        i0 = i0 + 1;

        goto label01;

     label12:
        i1 = i1 + 1;

        goto label06;

     label13:
        $r8 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, i2);

        r4 = (java.security.cert.X509Certificate[]) $r8;

        goto label08;
    }

    private java.security.cert.TrustAnchor findTrustAnchorByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate r1, r3;
        java.security.cert.TrustAnchor r2, $r8;
        com.android.org.conscrypt.TrustedCertificateIndex $r4, $r7;
        com.android.org.conscrypt.TrustedCertificateStore $r5, $r6;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r4 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        r2 = virtualinvoke $r4.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        if $r5 != null goto label2;

        return null;

     label2:
        $r6 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        r3 = virtualinvoke $r6.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.X509Certificate findIssuer(java.security.cert.X509Certificate)>(r1);

        if r3 == null goto label3;

        $r7 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        $r8 = virtualinvoke $r7.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>(r3);

        return $r8;

     label3:
        return null;
    }

    private java.security.cert.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate r1;
        java.security.cert.TrustAnchor r2, $r7;
        com.android.org.conscrypt.TrustedCertificateIndex $r3, $r6;
        com.android.org.conscrypt.TrustedCertificateStore $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r3 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        r2 = virtualinvoke $r3.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r4 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        if $r4 != null goto label2;

        return null;

     label2:
        $r5 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        $z0 = virtualinvoke $r5.<com.android.org.conscrypt.TrustedCertificateStore: boolean isTrustAnchor(java.security.cert.X509Certificate)>(r1);

        if $z0 == 0 goto label3;

        $r6 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        $r7 = virtualinvoke $r6.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>(r1);

        return $r7;

     label3:
        return null;
    }

    private static java.util.Set trustAnchors(java.security.cert.X509Certificate[])
    {
        java.security.cert.X509Certificate[] r0;
        java.util.HashSet r1, $r2;
        int i0, i1, $i2;
        java.security.cert.TrustAnchor $r3;
        java.security.cert.X509Certificate $r4;

        r0 := @parameter0: java.security.cert.X509Certificate[];

        $r2 = new java.util.HashSet;

        $i2 = lengthof r0;

        specialinvoke $r2.<java.util.HashSet: void <init>(int)>($i2);

        r1 = $r2;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = new java.security.cert.TrustAnchor;

        $r4 = r0[i1];

        specialinvoke $r3.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>($r4, null);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String,boolean)>(r1, r2, null, 1);

        return;
    }

    public java.util.List checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2, r3;
        java.util.List $r4;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);

        return $r4;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String,boolean)>(r1, r2, null, 0);

        return;
    }

    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] $r1, $r3, $r4, $r6;
        java.security.KeyStore $r2;
        java.lang.Object $r5;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        $r1 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (java.security.cert.X509Certificate[]) $r5;

        return $r6;

     label1:
        $r2 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.KeyStore rootKeyStore>;

        $r3 = staticinvoke <com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers(java.security.KeyStore)>($r2);

        return $r3;
    }

    public void handleTrustStorageUpdate()
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] $r1, $r2;
        com.android.org.conscrypt.TrustedCertificateIndex $r3, $r5;
        java.util.Set $r4;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        $r1 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers>;

        if $r1 != null goto label1;

        $r5 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        virtualinvoke $r5.<com.android.org.conscrypt.TrustedCertificateIndex: void reset()>();

        return;

     label1:
        $r3 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        $r2 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers>;

        $r4 = staticinvoke <com.android.org.conscrypt.TrustManagerImpl: java.util.Set trustAnchors(java.security.cert.X509Certificate[])>($r2);

        virtualinvoke $r3.<com.android.org.conscrypt.TrustedCertificateIndex: void reset(java.util.Set)>($r4);

        return;
    }
}
