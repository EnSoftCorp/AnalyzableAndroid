final class com.android.internal.policy.impl.PhoneWindow$DecorView extends android.widget.FrameLayout implements com.android.internal.view.RootViewSurfaceTaker
{
    private android.view.ActionMode mActionMode;
    private android.widget.PopupWindow mActionModePopup;
    private com.android.internal.widget.ActionBarContextView mActionModeView;
    private final android.graphics.Rect mBackgroundPadding;
    private boolean mChanging;
    int mDefaultOpacity;
    private int mDownY;
    private final android.graphics.Rect mDrawingBounds;
    private final int mFeatureId;
    private final android.graphics.Rect mFrameOffsets;
    private final android.graphics.Rect mFramePadding;
    private android.graphics.drawable.Drawable mMenuBackground;
    private android.view.View mNavigationGuard;
    private java.lang.Runnable mShowActionModePopup;
    private android.view.View mStatusGuard;
    private boolean mWatchingForMenu;
    final com.android.internal.policy.impl.PhoneWindow this$0;

    public void <init>(com.android.internal.policy.impl.PhoneWindow, android.content.Context, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        com.android.internal.policy.impl.PhoneWindow r1;
        android.content.Context r2;
        int i0;
        android.graphics.Rect $r3, $r4, $r5, $r6;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindow;

        r2 := @parameter1: android.content.Context;

        i0 := @parameter2: int;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0> = r1;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r2);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mDefaultOpacity> = -1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mDrawingBounds> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets> = $r6;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId> = i0;

        return;
    }

    static com.android.internal.widget.ActionBarContextView access$1300(com.android.internal.policy.impl.PhoneWindow$DecorView)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        com.android.internal.widget.ActionBarContextView $r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        return $r1;
    }

    static android.widget.PopupWindow access$1400(com.android.internal.policy.impl.PhoneWindow$DecorView)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.widget.PopupWindow $r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        return $r1;
    }

    static java.lang.Runnable access$1900(com.android.internal.policy.impl.PhoneWindow$DecorView)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: java.lang.Runnable mShowActionModePopup>;

        return $r1;
    }

    static android.view.ActionMode access$300(com.android.internal.policy.impl.PhoneWindow$DecorView)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.ActionMode $r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        return $r1;
    }

    static android.view.ActionMode access$302(com.android.internal.policy.impl.PhoneWindow$DecorView, android.view.ActionMode)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.ActionMode r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter1: android.view.ActionMode;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode> = r1;

        return r1;
    }

    private void drawableChanged()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.graphics.drawable.Drawable r1, r2;
        boolean $z0;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15;
        com.android.internal.policy.impl.PhoneWindow $r12;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $z0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging>;

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i4 = $r3.<android.graphics.Rect: int left>;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i3 = $r4.<android.graphics.Rect: int left>;

        $i14 = $i4 + $i3;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i6 = $r5.<android.graphics.Rect: int top>;

        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i5 = $r6.<android.graphics.Rect: int top>;

        $i12 = $i6 + $i5;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i8 = $r7.<android.graphics.Rect: int right>;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i7 = $r8.<android.graphics.Rect: int right>;

        $i13 = $i8 + $i7;

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i11 = $r9.<android.graphics.Rect: int bottom>;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i9 = $r10.<android.graphics.Rect: int bottom>;

        $i10 = $i11 + $i9;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void setPadding(int,int,int,int)>($i14, $i12, $i13, $i10);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void requestLayout()>();

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void invalidate()>();

        i0 = -1;

        r1 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getForeground()>();

        if r1 == null goto label3;

        if r2 != null goto label4;

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

     label3:
        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mDefaultOpacity> = i0;

        $i15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i15 >= 0 goto label1;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: void access$1700(com.android.internal.policy.impl.PhoneWindow,int)>($r12, i0);

        return;

     label4:
        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i17 = $r11.<android.graphics.Rect: int left>;

        if $i17 > 0 goto label9;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i16 = $r14.<android.graphics.Rect: int top>;

        if $i16 > 0 goto label9;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i19 = $r13.<android.graphics.Rect: int right>;

        if $i19 > 0 goto label9;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i18 = $r15.<android.graphics.Rect: int bottom>;

        if $i18 > 0 goto label9;

        i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if i1 == -1 goto label5;

        if i2 != -1 goto label6;

     label5:
        i0 = -1;

        goto label3;

     label6:
        if i1 != 0 goto label7;

        i0 = i2;

        goto label3;

     label7:
        if i2 != 0 goto label8;

        i0 = i1;

        goto label3;

     label8:
        i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveOpacity(int,int)>(i1, i2);

        goto label3;

     label9:
        i0 = -3;

        goto label3;
    }

    private boolean isOutOfBounds(int, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < -5 goto label1;

        if i1 < -5 goto label1;

        $i2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getWidth()>();

        $i3 = 5 + $i2;

        if i0 > $i3 goto label1;

        $i4 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getHeight()>();

        $i5 = 5 + $i4;

        if i1 <= $i5 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void updateNavigationGuard(android.graphics.Rect)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.Rect r1;
        android.widget.FrameLayout$LayoutParams r2, $r17;
        android.view.ViewGroup$MarginLayoutParams r3;
        com.android.internal.policy.impl.PhoneWindow $r4, $r6, $r18, $r22, $r25;
        android.view.WindowManager$LayoutParams $r5;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup $r7, $r21, $r24, $r26;
        android.view.View $r8, $r9, $r11, $r12, $r14, $r19;
        android.view.ViewGroup$LayoutParams $r10, $r20, $r23;
        android.content.Context $r13, $r15;
        android.content.res.Resources $r16;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.Rect;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r5 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = $r5.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 != 2011 goto label2;

        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r7 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$1600(com.android.internal.policy.impl.PhoneWindow)>($r6);

        if $r7 == null goto label1;

        $r18 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r21 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$1600(com.android.internal.policy.impl.PhoneWindow)>($r18);

        $r20 = virtualinvoke $r21.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r20 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label1;

        $r22 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r24 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$1600(com.android.internal.policy.impl.PhoneWindow)>($r22);

        $r23 = virtualinvoke $r24.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r23;

        $i4 = r1.<android.graphics.Rect: int bottom>;

        r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin> = $i4;

        $r25 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r26 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$1600(com.android.internal.policy.impl.PhoneWindow)>($r25);

        virtualinvoke $r26.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

     label1:
        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        if $r8 != null goto label3;

        $r12 = new android.view.View;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        specialinvoke $r12.<android.view.View: void <init>(android.content.Context)>($r13);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard> = $r12;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r16.<android.content.res.Resources: int getColor(int)>(17170482);

        virtualinvoke $r14.<android.view.View: void setBackgroundColor(int)>($i2);

        $r19 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        $r17 = new android.widget.FrameLayout$LayoutParams;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        specialinvoke $r17.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, $i3, 8388691);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r19, $r17);

     label2:
        return;

     label3:
        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        $r10 = virtualinvoke $r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r10;

        $i1 = r1.<android.graphics.Rect: int bottom>;

        r2.<android.widget.FrameLayout$LayoutParams: int height> = $i1;

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        virtualinvoke $r11.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        return;
    }

    private void updateStatusGuard(android.graphics.Rect)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.Rect r1;
        com.android.internal.widget.ActionBarContextView r2, $r7, $r8, $r12, $r24;
        boolean z0, z1, z2, z3, $z4;
        android.view.View r3, $r6, $r13, $r15, $r16, $r18, $r19, $r23;
        byte b0;
        android.view.ViewGroup$MarginLayoutParams r4;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.widget.FrameLayout$LayoutParams r5, $r21;
        android.view.ViewGroup$LayoutParams $r9, $r11, $r14;
        com.android.internal.policy.impl.PhoneWindow $r10;
        android.content.Context $r17, $r20;
        android.content.res.Resources $r22;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.Rect;

        r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        z0 = 0;

        if r2 == null goto label04;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $r9 = virtualinvoke $r7.<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        z1 = $r9 instanceof android.view.ViewGroup$MarginLayoutParams;

        z0 = 0;

        if z1 == 0 goto label04;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $r11 = virtualinvoke $r8.<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.view.ViewGroup$MarginLayoutParams) $r11;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i4 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$1500(com.android.internal.policy.impl.PhoneWindow)>($r10);

        $i5 = 1024 & $i4;

        if $i5 != 0 goto label07;

        $r24 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $z4 = virtualinvoke $r24.<com.android.internal.widget.ActionBarContextView: boolean isShown()>();

        if $z4 == 0 goto label07;

        z2 = 1;

     label01:
        if z2 == 0 goto label09;

        i2 = r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        i3 = r1.<android.graphics.Rect: int top>;

        z3 = 0;

        if i2 == i3 goto label02;

        z3 = 1;

        $i6 = r1.<android.graphics.Rect: int top>;

        r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = $i6;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        if $r13 != null goto label08;

        $r19 = new android.view.View;

        $r20 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        specialinvoke $r19.<android.view.View: void <init>(android.content.Context)>($r20);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard> = $r19;

        $r18 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r22 = virtualinvoke $r17.<android.content.Context: android.content.res.Resources getResources()>();

        $i11 = virtualinvoke $r22.<android.content.res.Resources: int getColor(int)>(17170482);

        virtualinvoke $r18.<android.view.View: void setBackgroundColor(int)>($i11);

        $r23 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        $r21 = new android.widget.FrameLayout$LayoutParams;

        $i10 = r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        specialinvoke $r21.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, $i10, 8388659);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r23, $r21);

     label02:
        r1.<android.graphics.Rect: int top> = 0;

        z0 = 1;

     label03:
        if z3 == 0 goto label04;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r12.<com.android.internal.widget.ActionBarContextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r4);

     label04:
        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        if $r6 == null goto label06;

        r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        b0 = 0;

        if z0 == 0 goto label10;

     label05:
        virtualinvoke r3.<android.view.View: void setVisibility(int)>(b0);

     label06:
        return;

     label07:
        z2 = 0;

        goto label01;

     label08:
        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        $r14 = virtualinvoke $r15.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (android.widget.FrameLayout$LayoutParams) $r14;

        $i7 = r5.<android.widget.FrameLayout$LayoutParams: int height>;

        $i8 = r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i7 == $i8 goto label02;

        $i9 = r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        r5.<android.widget.FrameLayout$LayoutParams: int height> = $i9;

        $r16 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        virtualinvoke $r16.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        goto label02;

     label09:
        i1 = r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        z3 = 0;

        z0 = 0;

        if i1 == 0 goto label03;

        z3 = 1;

        r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = 0;

        z0 = 0;

        goto label03;

     label10:
        b0 = 8;

        goto label05;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $z2 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.KeyEvent r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r13, $r14;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState $r8, $r10, $r15;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.KeyEvent;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label3;

        z0 = 1;

     label1:
        if z0 == 0 goto label5;

        $i7 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i7 != 0 goto label5;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$600(com.android.internal.policy.impl.PhoneWindow)>($r7);

        if $i8 <= 0 goto label4;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i9 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$600(com.android.internal.policy.impl.PhoneWindow)>($r13);

        if $i9 == i0 goto label4;

        $z7 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        if $z7 == 0 goto label4;

     label2:
        return 1;

     label3:
        z0 = 0;

        goto label1;

     label4:
        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$700(com.android.internal.policy.impl.PhoneWindow)>($r9);

        if $r8 == null goto label5;

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r10 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$700(com.android.internal.policy.impl.PhoneWindow)>($r11);

        $z5 = $r10.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isOpen>;

        if $z5 == 0 goto label5;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r15 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$700(com.android.internal.policy.impl.PhoneWindow)>($r12);

        $z6 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$800(com.android.internal.policy.impl.PhoneWindow,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,int,android.view.KeyEvent,int)>($r14, $r15, i0, r1, 0);

        if $z6 != 0 goto label2;

     label5:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z2 != 0 goto label7;

        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r6.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label8;

        $i6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i6 >= 0 goto label8;

        z1 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

     label6:
        if z1 != 0 goto label2;

     label7:
        if z0 == 0 goto label9;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        $i5 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z4 = virtualinvoke $r5.<com.android.internal.policy.impl.PhoneWindow: boolean onKeyDown(int,int,android.view.KeyEvent)>($i4, $i5, r1);

        return $z4;

     label8:
        z1 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        goto label6;

     label9:
        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z3 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean onKeyUp(int,int,android.view.KeyEvent)>($i2, $i3, r1);

        return $z3;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.KeyEvent r1;
        android.view.Window$Callback r2;
        boolean z0, z1, $z3, $z4;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState r3, $r5, $r8, $r14, $r16, $r19;
        com.android.internal.policy.impl.PhoneWindow $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r18;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.KeyEvent;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r5 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$700(com.android.internal.policy.impl.PhoneWindow)>($r4);

        if $r5 == null goto label2;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r14 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$700(com.android.internal.policy.impl.PhoneWindow)>($r13);

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z4 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$800(com.android.internal.policy.impl.PhoneWindow,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,int,android.view.KeyEvent,int)>($r15, $r14, $i2, r1, 1);

        if $z4 == 0 goto label2;

        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r16 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$700(com.android.internal.policy.impl.PhoneWindow)>($r17);

        if $r16 == null goto label1;

        $r18 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r19 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$700(com.android.internal.policy.impl.PhoneWindow)>($r18);

        $r19.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isHandled> = 1;

     label1:
        return 1;

     label2:
        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r6.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label5;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z3 = virtualinvoke $r12.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z3 != 0 goto label5;

        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 >= 0 goto label5;

        z0 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

     label3:
        if z0 != 0 goto label1;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$700(com.android.internal.policy.impl.PhoneWindow)>($r7);

        if $r8 != null goto label4;

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r3 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow,int,boolean)>($r9, 0, 1);

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r10.<com.android.internal.policy.impl.PhoneWindow: boolean preparePanel(com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent)>(r3, r1);

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        z1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$800(com.android.internal.policy.impl.PhoneWindow,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,int,android.view.KeyEvent,int)>($r11, r3, $i0, r1, 1);

        r3.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isPrepared> = 0;

        if z1 != 0 goto label1;

     label4:
        return 0;

     label5:
        z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        goto label3;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        $z2 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z0;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $z2 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $z2 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable mMenuBackground>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable mMenuBackground>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        return;
    }

    public void finishChanging()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging> = 0;

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

        return;
    }

    protected boolean fitSystemWindows(android.graphics.Rect)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.Rect r1, $r2;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets>;

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void updateStatusGuard(android.graphics.Rect)>(r1);

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void updateNavigationGuard(android.graphics.Rect)>(r1);

        $r3 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getForeground()>();

        if $r3 == null goto label1;

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean fitSystemWindows(android.graphics.Rect)>(r1);

        return $z0;
    }

    protected void onAttachedToWindow()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.Window$Callback r1;
        com.android.internal.policy.impl.PhoneWindow $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        specialinvoke r0.<android.widget.FrameLayout: void onAttachedToWindow()>();

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void updateWindowResizeState()>();

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r1 = virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r1 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z0 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z0 != 0 goto label1;

        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 >= 0 goto label1;

        interfaceinvoke r1.<android.view.Window$Callback: void onAttachedToWindow()>();

     label1:
        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 != -1 goto label2;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: void access$1800(com.android.internal.policy.impl.PhoneWindow)>($r3);

     label2:
        return;
    }

    public void onCloseSystemDialogs(java.lang.String)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        java.lang.String r1;
        int $i0;
        com.android.internal.policy.impl.PhoneWindow $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 < 0 goto label1;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: void closeAllPanels()>();

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.Window$Callback r1;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4, $r7, $r14;
        com.android.internal.widget.ActionBarView $r5, $r13;
        android.widget.PopupWindow $r6, $r11, $r12;
        com.android.internal.view.menu.MenuBuilder $r8, $r9;
        int $i0, $i1;
        java.lang.Runnable $r10;
        boolean $z1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        specialinvoke r0.<android.widget.FrameLayout: void onDetachedFromWindow()>();

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r1 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r1 == null goto label1;

        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 >= 0 goto label1;

        interfaceinvoke r1.<android.view.Window$Callback: void onDetachedFromWindow()>();

     label1:
        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r5 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.widget.ActionBarView access$1000(com.android.internal.policy.impl.PhoneWindow)>($r4);

        if $r5 == null goto label2;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r13 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.widget.ActionBarView access$1000(com.android.internal.policy.impl.PhoneWindow)>($r14);

        virtualinvoke $r13.<com.android.internal.widget.ActionBarView: void dismissPopupMenus()>();

     label2:
        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        if $r6 == null goto label4;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean removeCallbacks(java.lang.Runnable)>($r10);

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        $z1 = virtualinvoke $r11.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label3;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r12.<android.widget.PopupWindow: void dismiss()>();

     label3:
        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup> = null;

     label4:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow,int,boolean)>($r7, 0, 0);

        if r2 == null goto label5;

        $r8 = r2.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: com.android.internal.view.menu.MenuBuilder menu>;

        if $r8 == null goto label5;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label5;

        $r9 = r2.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: com.android.internal.view.menu.MenuBuilder menu>;

        virtualinvoke $r9.<com.android.internal.view.menu.MenuBuilder: void close()>();

     label5:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3, $i4;
        float $f0, $f1;
        boolean $z0;
        com.android.internal.policy.impl.PhoneWindow $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 < 0 goto label1;

        if i0 != 0 goto label1;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i2 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i3 = (int) $f1;

        $z0 = specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean isOutOfBounds(int,int)>($i2, $i3);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: void closePanel(int)>($i4);

        return 1;

     label1:
        return 0;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        android.util.DisplayMetrics r1;
        boolean z0, z1, z2;
        android.util.TypedValue r2, r3, r4;
        android.content.Context $r5;
        android.content.res.Resources $r6;
        com.android.internal.policy.impl.PhoneWindow $r7, $r8, $r9, $r10, $r11, $r12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r5 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i11 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $i12 = r1.<android.util.DisplayMetrics: int heightPixels>;

        if $i11 >= $i12 goto label12;

        z0 = 1;

     label01:
        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        z1 = 0;

        if i2 != -2147483648 goto label04;

        if z0 == 0 goto label13;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r4 = $r12.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mFixedWidthMinor>;

     label02:
        z1 = 0;

        if r4 == null goto label04;

        i9 = r4.<android.util.TypedValue: int type>;

        z1 = 0;

        if i9 == 0 goto label04;

        $i25 = r4.<android.util.TypedValue: int type>;

        if $i25 != 5 goto label14;

        $f11 = virtualinvoke r4.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r1);

        i10 = (int) $f11;

     label03:
        z1 = 0;

        if i10 <= 0 goto label04;

        $i28 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i27 = staticinvoke <java.lang.Math: int min(int,int)>(i10, $i28);

        i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i27, 1073741824);

        z1 = 1;

     label04:
        if i3 != -2147483648 goto label07;

        if z0 == 0 goto label16;

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r3 = $r11.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mFixedHeightMajor>;

     label05:
        if r3 == null goto label07;

        $i19 = r3.<android.util.TypedValue: int type>;

        if $i19 == 0 goto label07;

        $i20 = r3.<android.util.TypedValue: int type>;

        if $i20 != 5 goto label17;

        $f4 = virtualinvoke r3.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r1);

        i8 = (int) $f4;

     label06:
        if i8 <= 0 goto label07;

        $i18 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>(i8, $i18);

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i23, 1073741824);

     label07:
        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>(i0, i1);

        i4 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getMeasuredWidth()>();

        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, 1073741824);

        z2 = 0;

        if z1 != 0 goto label10;

        z2 = 0;

        if i2 != -2147483648 goto label10;

        if z0 == 0 goto label19;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = $r8.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mMinWidthMinor>;

     label08:
        i6 = r2.<android.util.TypedValue: int type>;

        z2 = 0;

        if i6 == 0 goto label10;

        $i13 = r2.<android.util.TypedValue: int type>;

        if $i13 != 5 goto label20;

        $f3 = virtualinvoke r2.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r1);

        i7 = (int) $f3;

     label09:
        z2 = 0;

        if i4 >= i7 goto label10;

        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, 1073741824);

        z2 = 1;

     label10:
        if z2 == 0 goto label11;

        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>(i5, i1);

     label11:
        return;

     label12:
        z0 = 0;

        goto label01;

     label13:
        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r4 = $r10.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mFixedWidthMajor>;

        goto label02;

     label14:
        $i24 = r4.<android.util.TypedValue: int type>;

        if $i24 != 6 goto label15;

        $i26 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f9 = (float) $i26;

        $i29 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f10 = (float) $i29;

        $f8 = virtualinvoke r4.<android.util.TypedValue: float getFraction(float,float)>($f9, $f10);

        i10 = (int) $f8;

        goto label03;

     label15:
        i10 = 0;

        goto label03;

     label16:
        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r3 = $r9.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mFixedHeightMinor>;

        goto label05;

     label17:
        $i17 = r3.<android.util.TypedValue: int type>;

        if $i17 != 6 goto label18;

        $i21 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f6 = (float) $i21;

        $i22 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f7 = (float) $i22;

        $f5 = virtualinvoke r3.<android.util.TypedValue: float getFraction(float,float)>($f6, $f7);

        i8 = (int) $f5;

        goto label06;

     label18:
        i8 = 0;

        goto label06;

     label19:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = $r7.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mMinWidthMajor>;

        goto label08;

     label20:
        $i14 = r2.<android.util.TypedValue: int type>;

        if $i14 != 6 goto label21;

        $i15 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f1 = (float) $i15;

        $i16 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f0 = (float) $i16;

        $f2 = virtualinvoke r2.<android.util.TypedValue: float getFraction(float,float)>($f1, $f0);

        i7 = (int) $f2;

        goto label09;

     label21:
        i7 = 0;

        goto label09;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        boolean z0, $z1;
        android.view.Window$Callback r1;
        com.android.internal.policy.impl.PhoneWindow $r2, $r3, $r4, $r5;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.FrameLayout: void onWindowFocusChanged(boolean)>(z0);

        if z0 != 0 goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$600(com.android.internal.policy.impl.PhoneWindow)>($r4);

        if $i1 == 0 goto label1;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r5.<com.android.internal.policy.impl.PhoneWindow: void closePanel(int)>(0);

     label1:
        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r1 = virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r1 == null goto label2;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label2;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label2;

        interfaceinvoke r1.<android.view.Window$Callback: void onWindowFocusChanged(boolean)>(z0);

     label2:
        return;
    }

    public void sendAccessibilityEvent(int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Context $r1;
        android.view.accessibility.AccessibilityManager $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r1);

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 == 0 goto label2;

        $i3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i3 == 6 goto label2;

        $i4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i4 == 2 goto label2;

        $i5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i5 != 5 goto label3;

     label2:
        $i2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getChildCount()>();

        if $i2 != 1 goto label3;

        $r3 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View getChildAt(int)>(0);

        virtualinvoke $r3.<android.view.View: void sendAccessibilityEvent(int)>(i0);

        return;

     label3:
        specialinvoke r0.<android.widget.FrameLayout: void sendAccessibilityEvent(int)>(i0);

        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.drawable.Drawable r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.widget.FrameLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.os.IBinder getWindowToken()>();

        if $r2 == null goto label1;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void updateWindowResizeState()>();

     label1:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        boolean z0;
        android.graphics.Rect r1, r4, r5;
        android.graphics.drawable.Drawable r2, r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.widget.FrameLayout: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        if z0 == 0 goto label2;

        r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mDrawingBounds>;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void getDrawingRect(android.graphics.Rect)>(r1);

        r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getForeground()>();

        if r2 == null goto label1;

        r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets>;

        $i5 = r1.<android.graphics.Rect: int left>;

        $i4 = r4.<android.graphics.Rect: int left>;

        $i7 = $i5 + $i4;

        r1.<android.graphics.Rect: int left> = $i7;

        $i9 = r1.<android.graphics.Rect: int top>;

        $i6 = r4.<android.graphics.Rect: int top>;

        $i8 = $i9 + $i6;

        r1.<android.graphics.Rect: int top> = $i8;

        $i10 = r1.<android.graphics.Rect: int right>;

        $i11 = r4.<android.graphics.Rect: int right>;

        $i13 = $i10 - $i11;

        r1.<android.graphics.Rect: int right> = $i13;

        $i15 = r1.<android.graphics.Rect: int bottom>;

        $i12 = r4.<android.graphics.Rect: int bottom>;

        $i14 = $i15 - $i12;

        r1.<android.graphics.Rect: int bottom> = $i14;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

        r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i18 = r1.<android.graphics.Rect: int left>;

        $i16 = r5.<android.graphics.Rect: int left>;

        $i17 = r4.<android.graphics.Rect: int left>;

        $i19 = $i16 - $i17;

        $i21 = $i18 + $i19;

        r1.<android.graphics.Rect: int left> = $i21;

        $i22 = r1.<android.graphics.Rect: int top>;

        $i24 = r5.<android.graphics.Rect: int top>;

        $i20 = r4.<android.graphics.Rect: int top>;

        $i25 = $i24 - $i20;

        $i23 = $i22 + $i25;

        r1.<android.graphics.Rect: int top> = $i23;

        $i27 = r1.<android.graphics.Rect: int right>;

        $i29 = r5.<android.graphics.Rect: int right>;

        $i28 = r4.<android.graphics.Rect: int right>;

        $i26 = $i29 - $i28;

        $i32 = $i27 - $i26;

        r1.<android.graphics.Rect: int right> = $i32;

        $i34 = r1.<android.graphics.Rect: int bottom>;

        $i30 = r5.<android.graphics.Rect: int bottom>;

        $i33 = r4.<android.graphics.Rect: int bottom>;

        $i31 = $i30 - $i33;

        $i35 = $i34 - $i31;

        r1.<android.graphics.Rect: int bottom> = $i35;

     label1:
        r3 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        if r3 == null goto label2;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label2:
        return z0;
    }

    public void setSurfaceFormat(int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0;
        com.android.internal.policy.impl.PhoneWindow $r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindow: void setFormat(int)>(i0);

        return;
    }

    public void setSurfaceKeepScreenOn(boolean)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        boolean z0;
        com.android.internal.policy.impl.PhoneWindow $r1, $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: void addFlags(int)>(128);

        return;

     label1:
        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindow: void clearFlags(int)>(128);

        return;
    }

    public void setSurfaceType(int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0;
        com.android.internal.policy.impl.PhoneWindow $r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindow: void setType(int)>(i0);

        return;
    }

    public void setWindowBackground(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.drawable.Drawable r1, $r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        if $r2 == r1 goto label2;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

        if r1 == null goto label3;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r4);

     label1:
        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

     label2:
        return;

     label3:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        goto label1;
    }

    public void setWindowFrame(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.drawable.Drawable r1, $r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getForeground()>();

        if $r2 == r1 goto label2;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void setForeground(android.graphics.drawable.Drawable)>(r1);

        if r1 == null goto label3;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r4);

     label1:
        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

     label2:
        return;

     label3:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        goto label1;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.View r1;
        com.android.internal.view.menu.MenuDialogHelper r2, $r11, $r16;
        com.android.internal.policy.impl.PhoneWindow $r3, $r5, $r7, $r10, $r12, $r14, $r15, $r20, $r21, $r23;
        com.android.internal.view.menu.ContextMenuBuilder $r4, $r6, $r8, $r17, $r24;
        android.os.IBinder $r9;
        com.android.internal.policy.impl.PhoneWindow$DialogMenuCallback $r18, $r25;
        android.content.Context $r19;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r4 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1100(com.android.internal.policy.impl.PhoneWindow)>($r3);

        if $r4 != null goto label3;

        $r20 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r17 = new com.android.internal.view.menu.ContextMenuBuilder;

        $r19 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context getContext()>();

        specialinvoke $r17.<com.android.internal.view.menu.ContextMenuBuilder: void <init>(android.content.Context)>($r19);

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1102(com.android.internal.policy.impl.PhoneWindow,com.android.internal.view.menu.ContextMenuBuilder)>($r20, $r17);

        $r21 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r24 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1100(com.android.internal.policy.impl.PhoneWindow)>($r21);

        $r23 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r25 = $r23.<com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$DialogMenuCallback mContextMenuCallback>;

        virtualinvoke $r24.<com.android.internal.view.menu.ContextMenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)>($r25);

     label1:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1100(com.android.internal.policy.impl.PhoneWindow)>($r7);

        $r9 = virtualinvoke r1.<android.view.View: android.os.IBinder getWindowToken()>();

        r2 = virtualinvoke $r8.<com.android.internal.view.menu.ContextMenuBuilder: com.android.internal.view.menu.MenuDialogHelper show(android.view.View,android.os.IBinder)>(r1, $r9);

        if r2 == null goto label4;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r18 = $r15.<com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$DialogMenuCallback mContextMenuCallback>;

        virtualinvoke r2.<com.android.internal.view.menu.MenuDialogHelper: void setPresenterCallback(com.android.internal.view.menu.MenuPresenter$Callback)>($r18);

     label2:
        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.MenuDialogHelper access$1202(com.android.internal.policy.impl.PhoneWindow,com.android.internal.view.menu.MenuDialogHelper)>($r12, r2);

        if r2 == null goto label5;

        return 1;

     label3:
        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1100(com.android.internal.policy.impl.PhoneWindow)>($r5);

        virtualinvoke $r6.<com.android.internal.view.menu.ContextMenuBuilder: void clearAll()>();

        goto label1;

     label4:
        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r11 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.MenuDialogHelper access$1200(com.android.internal.policy.impl.PhoneWindow)>($r10);

        if $r11 == null goto label2;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r16 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.MenuDialogHelper access$1200(com.android.internal.policy.impl.PhoneWindow)>($r14);

        virtualinvoke $r16.<com.android.internal.view.menu.MenuDialogHelper: void dismiss()>();

        goto label2;

     label5:
        return 0;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.ActionMode$Callback r1;
        com.android.internal.policy.impl.PhoneWindow$DecorView$ActionModeCallbackWrapper r2, $r13;
        android.view.Window$Callback r3, $r20, $r23, $r60;
        android.view.ActionMode r4, r11, $r14, $r18, $r19, $r26, $r61;
        android.content.Context r5, $r37, $r43, $r45, $r49;
        com.android.internal.widget.ActionBarContextView r6, $r16, $r17, $r27, $r28, $r31, $r33, $r38, $r39, $r41, $r56;
        boolean z0, z1, $z2, $z3, $z4;
        com.android.internal.view.StandaloneActionMode r7, $r29;
        android.view.ViewStub r9;
        android.util.TypedValue r10, $r46;
        int i0, $i1;
        com.android.internal.policy.impl.PhoneWindow $r15, $r21, $r22, $r24, $r36, $r53, $r59;
        android.widget.PopupWindow $r25, $r34, $r42, $r44, $r47, $r48, $r51;
        android.view.Menu $r30;
        java.lang.Runnable $r32;
        android.view.View $r35, $r40;
        android.content.res.Resources$Theme $r50;
        com.android.internal.policy.impl.PhoneWindow$DecorView$1 $r52;
        android.content.res.Resources $r54;
        android.util.DisplayMetrics $r55;
        java.lang.AbstractMethodError $r57, $r58;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        if $r14 == null goto label01;

        $r61 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        virtualinvoke $r61.<android.view.ActionMode: void finish()>();

     label01:
        $r13 = new com.android.internal.policy.impl.PhoneWindow$DecorView$ActionModeCallbackWrapper;

        specialinvoke $r13.<com.android.internal.policy.impl.PhoneWindow$DecorView$ActionModeCallbackWrapper: void <init>(com.android.internal.policy.impl.PhoneWindow$DecorView,android.view.ActionMode$Callback)>(r0, r1);

        r2 = $r13;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r3 = virtualinvoke $r15.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        r4 = null;

        if r3 == null goto label04;

        $r53 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        z1 = virtualinvoke $r53.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        r4 = null;

        if z1 != 0 goto label04;

     label02:
        $r59 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r60 = virtualinvoke $r59.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        r11 = interfaceinvoke $r60.<android.view.Window$Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>(r2);

     label03:
        r4 = r11;

     label04:
        if r4 == null goto label08;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode> = r4;

     label05:
        $r19 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        if $r19 == null goto label07;

        $r21 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r20 = virtualinvoke $r21.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if $r20 == null goto label07;

        $r22 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z2 = virtualinvoke $r22.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z2 != 0 goto label07;

     label06:
        $r24 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r23 = virtualinvoke $r24.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        $r26 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        interfaceinvoke $r23.<android.view.Window$Callback: void onActionModeStarted(android.view.ActionMode)>($r26);

     label07:
        $r18 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        return $r18;

     label08:
        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        if $r17 != null goto label09;

        $r36 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z4 = virtualinvoke $r36.<com.android.internal.policy.impl.PhoneWindow: boolean isFloating()>();

        if $z4 == 0 goto label12;

        $r38 = new com.android.internal.widget.ActionBarContextView;

        $r37 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        specialinvoke $r38.<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context)>($r37);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView> = $r38;

        $r44 = new android.widget.PopupWindow;

        $r43 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        specialinvoke $r44.<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>($r43, null, 16843785);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup> = $r44;

        $r42 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r42.<android.widget.PopupWindow: void setWindowLayoutType(int)>(2);

        $r48 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        $r41 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r48.<android.widget.PopupWindow: void setContentView(android.view.View)>($r41);

        $r47 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r47.<android.widget.PopupWindow: void setWidth(int)>(-1);

        $r46 = new android.util.TypedValue;

        specialinvoke $r46.<android.util.TypedValue: void <init>()>();

        r10 = $r46;

        $r45 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r50 = virtualinvoke $r45.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r50.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843499, r10, 1);

        $i1 = r10.<android.util.TypedValue: int data>;

        $r49 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r54 = virtualinvoke $r49.<android.content.Context: android.content.res.Resources getResources()>();

        $r55 = virtualinvoke $r54.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i1, $r55);

        $r56 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r56.<com.android.internal.widget.ActionBarContextView: void setContentHeight(int)>(i0);

        $r51 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r51.<android.widget.PopupWindow: void setHeight(int)>(-2);

        $r52 = new com.android.internal.policy.impl.PhoneWindow$DecorView$1;

        specialinvoke $r52.<com.android.internal.policy.impl.PhoneWindow$DecorView$1: void <init>(com.android.internal.policy.impl.PhoneWindow$DecorView)>(r0);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: java.lang.Runnable mShowActionModePopup> = $r52;

     label09:
        $r16 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        if $r16 == null goto label05;

        $r27 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r27.<com.android.internal.widget.ActionBarContextView: void killMode()>();

        r5 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context getContext()>();

        r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $r25 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        if $r25 != null goto label13;

        z0 = 1;

     label10:
        $r29 = new com.android.internal.view.StandaloneActionMode;

        specialinvoke $r29.<com.android.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.android.internal.widget.ActionBarContextView,android.view.ActionMode$Callback,boolean)>(r5, r6, r2, z0);

        r7 = $r29;

        $r30 = virtualinvoke r7.<android.view.ActionMode: android.view.Menu getMenu()>();

        $z3 = interfaceinvoke r1.<android.view.ActionMode$Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>(r7, $r30);

        if $z3 == 0 goto label14;

        virtualinvoke r7.<android.view.ActionMode: void invalidate()>();

        $r28 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r28.<com.android.internal.widget.ActionBarContextView: void initForMode(android.view.ActionMode)>(r7);

        $r33 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r33.<com.android.internal.widget.ActionBarContextView: void setVisibility(int)>(0);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode> = r7;

        $r34 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        if $r34 == null goto label11;

        $r32 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean post(java.lang.Runnable)>($r32);

     label11:
        $r31 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r31.<com.android.internal.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        goto label05;

     label12:
        $r35 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View findViewById(int)>(16909070);

        r9 = (android.view.ViewStub) $r35;

        if r9 == null goto label09;

        $r40 = virtualinvoke r9.<android.view.ViewStub: android.view.View inflate()>();

        $r39 = (com.android.internal.widget.ActionBarContextView) $r40;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView> = $r39;

        goto label09;

     label13:
        z0 = 0;

        goto label10;

     label14:
        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode> = null;

        goto label05;

     label15:
        $r58 := @caughtexception;

        goto label07;

     label16:
        $r57 := @caughtexception;

        r4 = null;

        goto label04;

        catch java.lang.AbstractMethodError from label02 to label03 with label16;
        catch java.lang.AbstractMethodError from label06 to label07 with label15;
    }

    public android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.View r1;
        android.view.ActionMode$Callback r2;
        android.view.ActionMode $r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ActionMode$Callback;

        $r3 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r2);

        return $r3;
    }

    public void startChanging()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging> = 1;

        return;
    }

    public boolean superDispatchGenericMotionEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean superDispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.KeyEvent r1;
        int i0, $i1;
        boolean $z0, $z1;
        android.view.ActionMode $r2, $r9;
        com.android.internal.policy.impl.PhoneWindow $r3, $r5, $r7;
        com.android.internal.widget.ActionBarView $r4, $r6, $r8;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 4 goto label4;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        if $r2 == null goto label3;

        if i0 != 1 goto label1;

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        virtualinvoke $r9.<android.view.ActionMode: void finish()>();

        return 1;

     label3:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r4 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.widget.ActionBarView access$1000(com.android.internal.policy.impl.PhoneWindow)>($r3);

        if $r4 == null goto label4;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.widget.ActionBarView access$1000(com.android.internal.policy.impl.PhoneWindow)>($r5);

        $z1 = virtualinvoke $r6.<com.android.internal.widget.ActionBarView: boolean hasExpandedActionView()>();

        if $z1 == 0 goto label4;

        if i0 != 1 goto label1;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.widget.ActionBarView access$1000(com.android.internal.policy.impl.PhoneWindow)>($r7);

        virtualinvoke $r8.<com.android.internal.widget.ActionBarView: void collapseActionView()>();

        return 1;

     label4:
        return 0;
    }

    public boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        return $z0;
    }

    public boolean superDispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean superDispatchTrackballEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    void updateWindowResizeState()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.drawable.Drawable r1;
        boolean z0;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i0 == -1 goto label3;

     label1:
        z0 = 1;

     label2:
        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void hackTurnOffWindowResizeAnim(boolean)>(z0);

        return;

     label3:
        z0 = 0;

        goto label2;
    }

    public android.view.InputQueue$Callback willYouTakeTheInputQueue()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int $i0;
        com.android.internal.policy.impl.PhoneWindow $r1;
        android.view.InputQueue$Callback $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindow: android.view.InputQueue$Callback mTakeInputQueueCallback>;

        return $r2;

     label1:
        return null;
    }

    public android.view.SurfaceHolder$Callback2 willYouTakeTheSurface()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int $i0;
        com.android.internal.policy.impl.PhoneWindow $r1;
        android.view.SurfaceHolder$Callback2 $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindow: android.view.SurfaceHolder$Callback2 mTakeSurfaceCallback>;

        return $r2;

     label1:
        return null;
    }
}
