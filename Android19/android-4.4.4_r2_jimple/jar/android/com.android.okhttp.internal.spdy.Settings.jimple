final class com.android.okhttp.internal.spdy.Settings extends java.lang.Object
{
    static final int CLIENT_CERTIFICATE_VECTOR_SIZE;
    static final int COUNT;
    static final int CURRENT_CWND;
    static final int DEFAULT_INITIAL_WINDOW_SIZE;
    static final int DOWNLOAD_BANDWIDTH;
    static final int DOWNLOAD_RETRANS_RATE;
    static final int FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS;
    static final int INITIAL_WINDOW_SIZE;
    static final int MAX_CONCURRENT_STREAMS;
    static final int PERSISTED;
    static final int PERSIST_VALUE;
    static final int ROUND_TRIP_TIME;
    static final int UPLOAD_BANDWIDTH;
    private int persistValue;
    private int persisted;
    private int set;
    private final int[] values;

    void <init>()
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[9];

        r0.<com.android.okhttp.internal.spdy.Settings: int[] values> = $r1;

        return;
    }

    int flags(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0;
        boolean z0, $z1;
        byte b1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        z0 = virtualinvoke r0.<com.android.okhttp.internal.spdy.Settings: boolean isPersisted(int)>(i0);

        b1 = 0;

        if z0 == 0 goto label1;

        b1 = 0 | 2;

     label1:
        $z1 = virtualinvoke r0.<com.android.okhttp.internal.spdy.Settings: boolean persistValue(int)>(i0);

        if $z1 == 0 goto label2;

        b1 = b1 | 1;

     label2:
        return b1;
    }

    int get(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        $i1 = $r1[i0];

        return $i1;
    }

    int getClientCertificateVectorSize(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i2 = 256 & $i1;

        if $i2 == 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        i0 = $r1[8];

     label1:
        return i0;
    }

    int getCurrentCwnd(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i2 = 32 & $i1;

        if $i2 == 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        i0 = $r1[5];

     label1:
        return i0;
    }

    int getDownloadBandwidth(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i2 = 4 & $i1;

        if $i2 == 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        i0 = $r1[2];

     label1:
        return i0;
    }

    int getDownloadRetransRate(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i2 = 64 & $i1;

        if $i2 == 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        i0 = $r1[6];

     label1:
        return i0;
    }

    int getInitialWindowSize(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i2 = 128 & $i1;

        if $i2 == 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        i0 = $r1[7];

     label1:
        return i0;
    }

    int getMaxConcurrentStreams(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i2 = 16 & $i1;

        if $i2 == 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        i0 = $r1[4];

     label1:
        return i0;
    }

    int getRoundTripTime(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i2 = 8 & $i1;

        if $i2 == 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        i0 = $r1[3];

     label1:
        return i0;
    }

    int getUploadBandwidth(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i2 = 2 & $i1;

        if $i2 == 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        i0 = $r1[1];

     label1:
        return i0;
    }

    boolean isPersisted(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i2 = 1 << i0;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int persisted>;

        $i3 = $i2 & $i1;

        if $i3 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isSet(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i2 = 1 << i0;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i3 = $i2 & $i1;

        if $i3 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void merge(com.android.okhttp.internal.spdy.Settings)
    {
        com.android.okhttp.internal.spdy.Settings r0, r1;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        r1 := @parameter0: com.android.okhttp.internal.spdy.Settings;

        i0 = 0;

     label1:
        if i0 >= 9 goto label4;

        $z0 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: boolean isSet(int)>(i0);

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $i1 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int flags(int)>(i0);

        $i2 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int get(int)>(i0);

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Settings: void set(int,int,int)>(i0, $i1, $i2);

        goto label2;

     label4:
        return;
    }

    boolean persistValue(int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        $i2 = 1 << i0;

        $i1 = r0.<com.android.okhttp.internal.spdy.Settings: int persistValue>;

        $i3 = $i2 & $i1;

        if $i3 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void set(int, int, int)
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        int[] $r1, $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        $i4 = lengthof $r1;

        if i0 < $i4 goto label1;

        return;

     label1:
        i3 = 1 << i0;

        $i5 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i6 = i3 | $i5;

        r0.<com.android.okhttp.internal.spdy.Settings: int set> = $i6;

        $i7 = i1 & 1;

        if $i7 == 0 goto label4;

        $i18 = r0.<com.android.okhttp.internal.spdy.Settings: int persistValue>;

        $i17 = i3 | $i18;

        r0.<com.android.okhttp.internal.spdy.Settings: int persistValue> = $i17;

     label2:
        $i11 = i1 & 2;

        if $i11 == 0 goto label5;

        $i16 = r0.<com.android.okhttp.internal.spdy.Settings: int persisted>;

        $i15 = i3 | $i16;

        r0.<com.android.okhttp.internal.spdy.Settings: int persisted> = $i15;

     label3:
        $r2 = r0.<com.android.okhttp.internal.spdy.Settings: int[] values>;

        $r2[i0] = i2;

        return;

     label4:
        $i9 = r0.<com.android.okhttp.internal.spdy.Settings: int persistValue>;

        $i8 = i3 ^ -1;

        $i10 = $i9 & $i8;

        r0.<com.android.okhttp.internal.spdy.Settings: int persistValue> = $i10;

        goto label2;

     label5:
        $i13 = r0.<com.android.okhttp.internal.spdy.Settings: int persisted>;

        $i12 = i3 ^ -1;

        $i14 = $i13 & $i12;

        r0.<com.android.okhttp.internal.spdy.Settings: int persisted> = $i14;

        goto label3;
    }

    int size()
    {
        com.android.okhttp.internal.spdy.Settings r0;
        int $i0, $i1;

        r0 := @this: com.android.okhttp.internal.spdy.Settings;

        $i0 = r0.<com.android.okhttp.internal.spdy.Settings: int set>;

        $i1 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);

        return $i1;
    }

    public static void <clinit>()
    {
        <com.android.okhttp.internal.spdy.Settings: int UPLOAD_BANDWIDTH> = 1;

        <com.android.okhttp.internal.spdy.Settings: int ROUND_TRIP_TIME> = 3;

        <com.android.okhttp.internal.spdy.Settings: int PERSIST_VALUE> = 1;

        <com.android.okhttp.internal.spdy.Settings: int PERSISTED> = 2;

        <com.android.okhttp.internal.spdy.Settings: int MAX_CONCURRENT_STREAMS> = 4;

        <com.android.okhttp.internal.spdy.Settings: int INITIAL_WINDOW_SIZE> = 7;

        <com.android.okhttp.internal.spdy.Settings: int FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS> = 1;

        <com.android.okhttp.internal.spdy.Settings: int DOWNLOAD_RETRANS_RATE> = 6;

        <com.android.okhttp.internal.spdy.Settings: int DOWNLOAD_BANDWIDTH> = 2;

        <com.android.okhttp.internal.spdy.Settings: int DEFAULT_INITIAL_WINDOW_SIZE> = 65536;

        <com.android.okhttp.internal.spdy.Settings: int CURRENT_CWND> = 5;

        <com.android.okhttp.internal.spdy.Settings: int COUNT> = 9;

        <com.android.okhttp.internal.spdy.Settings: int CLIENT_CERTIFICATE_VECTOR_SIZE> = 8;

        return;
    }
}
