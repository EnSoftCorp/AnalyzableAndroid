final class com.android.server.usb.UsbDeviceManager$UsbHandler extends android.os.Handler
{
    private boolean mAdbNotificationShown;
    private final android.content.BroadcastReceiver mBootCompletedReceiver;
    private boolean mConfigured;
    private boolean mConnected;
    private android.hardware.usb.UsbAccessory mCurrentAccessory;
    private java.lang.String mCurrentFunctions;
    private int mCurrentUser;
    private java.lang.String mDefaultFunctions;
    private int mUsbNotificationId;
    private final android.content.BroadcastReceiver mUserSwitchedReceiver;
    final com.android.server.usb.UsbDeviceManager this$0;

    public void <init>(com.android.server.usb.UsbDeviceManager, android.os.Looper)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        com.android.server.usb.UsbDeviceManager r1;
        android.os.Looper r2;
        java.lang.Exception r3, $r37;
        java.lang.String r4, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r29, $r33, $r35, $r36, $r38;
        char c0;
        com.android.server.usb.UsbDeviceManager$UsbHandler$1 $r5;
        com.android.server.usb.UsbDeviceManager$UsbHandler$2 $r6;
        boolean $z0, $z1;
        java.io.File $r12;
        android.content.ContentResolver $r17;
        int $i1;
        com.android.server.usb.UsbDeviceManager$AdbSettingsObserver $r18;
        android.net.Uri $r19;
        android.os.UEventObserver $r20, $r23;
        android.content.IntentFilter $r21, $r25;
        android.content.BroadcastReceiver $r22, $r26;
        android.content.Context $r24, $r28;
        java.lang.StringBuilder $r30, $r32, $r34;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        r1 := @parameter0: com.android.server.usb.UsbDeviceManager;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: int mCurrentUser> = -10000;

        $r5 = new com.android.server.usb.UsbDeviceManager$UsbHandler$1;

        specialinvoke $r5.<com.android.server.usb.UsbDeviceManager$UsbHandler$1: void <init>(com.android.server.usb.UsbDeviceManager$UsbHandler)>(r0);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.content.BroadcastReceiver mBootCompletedReceiver> = $r5;

        $r6 = new com.android.server.usb.UsbDeviceManager$UsbHandler$2;

        specialinvoke $r6.<com.android.server.usb.UsbDeviceManager$UsbHandler$2: void <init>(com.android.server.usb.UsbDeviceManager$UsbHandler)>(r0);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.content.BroadcastReceiver mUserSwitchedReceiver> = $r6;

     label01:
        $r7 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("persist.sys.usb.config", "adb");

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions> = $r7;

        $r8 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        $r9 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300(com.android.server.usb.UsbDeviceManager,java.lang.String)>(r1, $r8);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions> = $r9;

        $r10 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("sys.usb.config", "none");

        $r11 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label02;

        $r29 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resetting config to persistent property: ");

        $r35 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r29, $r33);

        $r38 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.usb.config", $r38);

     label02:
        $r13 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions> = $r13;

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>("/sys/class/android_usb/android0/state");

        $r15 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r12, 0, null);

        $r14 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateState(java.lang.String)>($r14);

        $r16 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $z1 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r16, "adb");

        staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$502(com.android.server.usb.UsbDeviceManager,boolean)>(r1, $z1);

        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("persist.service.adb.enable", "");

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i1 <= 0 goto label06;

        c0 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

     label03:
        if c0 != 49 goto label08;

     label04:
        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void setAdbEnabled(boolean)>(1);

     label05:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.service.adb.enable", "");

     label06:
        $r17 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.ContentResolver access$000(com.android.server.usb.UsbDeviceManager)>(r1);

        $r19 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("adb_enabled");

        $r18 = new com.android.server.usb.UsbDeviceManager$AdbSettingsObserver;

        specialinvoke $r18.<com.android.server.usb.UsbDeviceManager$AdbSettingsObserver: void <init>(com.android.server.usb.UsbDeviceManager)>(r1);

        virtualinvoke $r17.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r19, 0, $r18);

        $r20 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.os.UEventObserver access$700(com.android.server.usb.UsbDeviceManager)>(r1);

        virtualinvoke $r20.<android.os.UEventObserver: void startObserving(java.lang.String)>("DEVPATH=/devices/virtual/android_usb/android0");

        $r23 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.os.UEventObserver access$700(com.android.server.usb.UsbDeviceManager)>(r1);

        virtualinvoke $r23.<android.os.UEventObserver: void startObserving(java.lang.String)>("DEVPATH=/devices/virtual/misc/usb_accessory");

        $r24 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>(r1);

        $r22 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.content.BroadcastReceiver mBootCompletedReceiver>;

        $r21 = new android.content.IntentFilter;

        specialinvoke $r21.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BOOT_COMPLETED");

        virtualinvoke $r24.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r22, $r21);

        $r28 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>(r1);

        $r26 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.content.BroadcastReceiver mUserSwitchedReceiver>;

        $r25 = new android.content.IntentFilter;

        specialinvoke $r25.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke $r28.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r26, $r25);

     label07:
        return;

     label08:
        if c0 != 48 goto label05;

     label09:
        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void setAdbEnabled(boolean)>(0);

     label10:
        goto label05;

     label11:
        $r37 := @caughtexception;

        r3 = $r37;

        $r36 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r36, "Error initializing UsbHandler", r3);

        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    private void setAdbEnabled(boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        boolean z0, $z1, $z2;
        com.android.server.usb.UsbDeviceManager $r1, $r2, $r4, $r6, $r7;
        com.android.server.usb.UsbDebuggingManager $r3, $r5;
        java.lang.String $r8;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z1 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$500(com.android.server.usb.UsbDeviceManager)>($r1);

        if z0 == $z1 goto label1;

        $r7 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$502(com.android.server.usb.UsbDeviceManager,boolean)>($r7, z0);

        $r8 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void setEnabledFunctions(java.lang.String,boolean)>($r8, 1);

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateAdbNotification()>();

     label1:
        $r2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r3 = staticinvoke <com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbDebuggingManager access$900(com.android.server.usb.UsbDeviceManager)>($r2);

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r5 = staticinvoke <com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbDebuggingManager access$900(com.android.server.usb.UsbDeviceManager)>($r4);

        $r6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z2 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$500(com.android.server.usb.UsbDeviceManager)>($r6);

        virtualinvoke $r5.<com.android.server.usb.UsbDebuggingManager: void setAdbEnabled(boolean)>($z2);

     label2:
        return;
    }

    private void setEnabledFunctions(java.lang.String, boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        java.lang.String r1, r2, r3, r4, $r7, $r8, $r11, $r13, $r14, $r15, $r18, $r21, $r22, $r24, $r25, $r26;
        boolean z0, $z1, $z2, $z3, $z4, $z7, $z8, $z9, $z10, $z11;
        com.android.server.usb.UsbDeviceManager $r5, $r6, $r16, $r17;
        java.lang.StringBuilder $r9, $r10, $r12, $r19, $r20, $r23;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r1 == null goto label06;

        if z0 == 0 goto label06;

        $r17 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z8 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$1000(com.android.server.usb.UsbDeviceManager)>($r17);

        if $z8 != 0 goto label06;

        $r16 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z7 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$500(com.android.server.usb.UsbDeviceManager)>($r16);

        if $z7 == 0 goto label03;

        r4 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$1100(java.lang.String,java.lang.String)>(r1, "adb");

     label01:
        $r18 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        $z9 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 != 0 goto label02;

        $z10 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean setUsbConfig(java.lang.String)>("none");

        if $z10 != 0 goto label04;

        $r26 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r26, "Failed to disable USB");

        $r25 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean setUsbConfig(java.lang.String)>($r25);

     label02:
        return;

     label03:
        r4 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$1200(java.lang.String,java.lang.String)>(r1, "adb");

        goto label01;

     label04:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.usb.config", r4);

        $z11 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean waitForState(java.lang.String)>(r4);

        if $z11 == 0 goto label05;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions> = r4;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions> = r4;

        return;

     label05:
        $r21 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to switch persistent USB config to ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r21, $r24);

        $r22 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.usb.config", $r22);

        return;

     label06:
        if r1 != null goto label07;

        r1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

     label07:
        $r5 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        r2 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$300(com.android.server.usb.UsbDeviceManager,java.lang.String)>($r5, r1);

        $r6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z1 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$500(com.android.server.usb.UsbDeviceManager)>($r6);

        if $z1 == 0 goto label09;

        r3 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$1100(java.lang.String,java.lang.String)>(r2, "adb");

     label08:
        $r7 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 != 0 goto label02;

        $z2 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean setUsbConfig(java.lang.String)>("none");

        if $z2 != 0 goto label10;

        $r14 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r14, "Failed to disable USB");

        $r15 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean setUsbConfig(java.lang.String)>($r15);

        return;

     label09:
        r3 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$1200(java.lang.String,java.lang.String)>(r2, "adb");

        goto label08;

     label10:
        $z4 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean setUsbConfig(java.lang.String)>(r3);

        if $z4 == 0 goto label11;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions> = r3;

        return;

     label11:
        $r8 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to switch USB config to ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r8, $r11);

        $r13 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean setUsbConfig(java.lang.String)>($r13);

        return;
    }

    private boolean setUsbConfig(java.lang.String)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.usb.config", r1);

        $z0 = specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean waitForState(java.lang.String)>(r1);

        return $z0;
    }

    private void updateAdbNotification()
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        android.content.res.Resources r1;
        java.lang.CharSequence r2, r3;
        android.app.Notification r4, $r17;
        android.content.Intent r5;
        android.app.PendingIntent r6;
        com.android.server.usb.UsbDeviceManager $r7, $r9, $r10, $r16, $r20, $r22, $r24;
        android.app.NotificationManager $r8, $r11, $r23;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.os.UserHandle $r12, $r21, $r26;
        java.lang.String $r13, $r14;
        android.content.Context $r15, $r19, $r25;
        android.content.ComponentName $r18;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        $r7 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r8 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.app.NotificationManager access$1800(com.android.server.usb.UsbDeviceManager)>($r7);

        if $r8 != null goto label2;

     label1:
        return;

     label2:
        $r9 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z0 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$500(com.android.server.usb.UsbDeviceManager)>($r9);

        if $z0 == 0 goto label3;

        $z2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConnected>;

        if $z2 == 0 goto label3;

        $r14 = "0";

        $r13 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.adb.notify");

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z4 != 0 goto label1;

        $z3 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mAdbNotificationShown>;

        if $z3 != 0 goto label1;

        $r16 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r15 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>($r16);

        r1 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040506);

        r3 = virtualinvoke r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040507);

        $r17 = new android.app.Notification;

        specialinvoke $r17.<android.app.Notification: void <init>()>();

        r4 = $r17;

        r4.<android.app.Notification: int icon> = 17302925;

        r4.<android.app.Notification: long when> = 0L;

        r4.<android.app.Notification: int flags> = 2;

        r4.<android.app.Notification: java.lang.CharSequence tickerText> = r2;

        r4.<android.app.Notification: int defaults> = 0;

        r4.<android.app.Notification: android.net.Uri sound> = null;

        r4.<android.app.Notification: long[] vibrate> = null;

        r4.<android.app.Notification: int priority> = -1;

        $r18 = new android.content.ComponentName;

        specialinvoke $r18.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.DevelopmentSettings");

        r5 = staticinvoke <android.content.Intent: android.content.Intent makeRestartActivityTask(android.content.ComponentName)>($r18);

        $r20 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r19 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>($r20);

        $r21 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        r6 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>($r19, 0, r5, 0, null, $r21);

        $r24 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r25 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>($r24);

        virtualinvoke r4.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>($r25, r2, r3, r6);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mAdbNotificationShown> = 1;

        $r22 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r23 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.app.NotificationManager access$1800(com.android.server.usb.UsbDeviceManager)>($r22);

        $r26 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r23.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, 17040506, r4, $r26);

        return;

     label3:
        $z1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mAdbNotificationShown>;

        if $z1 == 0 goto label1;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mAdbNotificationShown> = 0;

        $r10 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r11 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.app.NotificationManager access$1800(com.android.server.usb.UsbDeviceManager)>($r10);

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r11.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, 17040506, $r12);

        return;
    }

    private void updateAudioSourceFunction()
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        boolean z0, $z1;
        android.content.Intent r1, $r6;
        byte b0;
        java.util.Scanner r2, $r15;
        java.io.FileNotFoundException r3, $r18;
        int i1, i2;
        java.lang.String $r4, $r19;
        com.android.server.usb.UsbDeviceManager $r5, $r9, $r13;
        android.os.UserHandle $r11;
        android.content.Context $r12;
        java.io.File $r14;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        $r4 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        z0 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r4, "audio_source");

        $r5 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z1 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$1700(com.android.server.usb.UsbDeviceManager)>($r5);

        if z0 == $z1 goto label4;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USB_AUDIO_ACCESSORY_PLUG");

        r1 = $r6;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        if z0 == 0 goto label5;

        b0 = 1;

     label1:
        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("state", b0);

        if z0 == 0 goto label3;

     label2:
        $r15 = new java.util.Scanner;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>("/sys/class/android_usb/android0/f_audio_source/pcm");

        specialinvoke $r15.<java.util.Scanner: void <init>(java.io.File)>($r14);

        r2 = $r15;

        i1 = virtualinvoke r2.<java.util.Scanner: int nextInt()>();

        i2 = virtualinvoke r2.<java.util.Scanner: int nextInt()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("card", i1);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("device", i2);

     label3:
        $r9 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r12 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>($r9);

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r11);

        $r13 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$1702(com.android.server.usb.UsbDeviceManager,boolean)>($r13, z0);

     label4:
        return;

     label5:
        b0 = 0;

        goto label1;

     label6:
        $r18 := @caughtexception;

        r3 = $r18;

        $r19 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r19, "could not open audio source PCM file", r3);

        goto label3;

        catch java.io.FileNotFoundException from label2 to label3 with label6;
    }

    private void updateCurrentAccessory()
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.usb.UsbDeviceManager $r1, $r5, $r6, $r8, $r10, $r16, $r23, $r26, $r27;
        long $l0, $l5, $l6, $l7;
        byte $b1, $b8;
        java.lang.String $r2, $r3, $r12, $r18, $r21;
        android.hardware.usb.UsbAccessory $r4, $r11, $r14, $r19, $r25;
        com.android.server.usb.UsbSettingsManager $r9, $r24;
        java.lang.String[] $r13, $r15;
        java.lang.StringBuilder $r17, $r20, $r22;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        $r1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $l0 = staticinvoke <com.android.server.usb.UsbDeviceManager: long access$1300(com.android.server.usb.UsbDeviceManager)>($r1);

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label3;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r27 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $l5 = staticinvoke <com.android.server.usb.UsbDeviceManager: long access$1300(com.android.server.usb.UsbDeviceManager)>($r27);

        $l7 = 10000L + $l5;

        $b8 = $l6 cmp $l7;

        if $b8 >= 0 goto label3;

        z0 = 1;

     label1:
        $z1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConfigured>;

        if $z1 == 0 goto label5;

        if z0 == 0 goto label5;

        $r10 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r13 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String[] access$1400(com.android.server.usb.UsbDeviceManager)>($r10);

        if $r13 == null goto label4;

        $r14 = new android.hardware.usb.UsbAccessory;

        $r16 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r15 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String[] access$1400(com.android.server.usb.UsbDeviceManager)>($r16);

        specialinvoke $r14.<android.hardware.usb.UsbAccessory: void <init>(java.lang.String[])>($r15);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory> = $r14;

        $r18 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("entering USB accessory mode: ");

        $r19 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r18, $r21);

        $r23 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z3 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$1500(com.android.server.usb.UsbDeviceManager)>($r23);

        if $z3 == 0 goto label2;

        $r26 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r24 = staticinvoke <com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbSettingsManager access$1600(com.android.server.usb.UsbDeviceManager)>($r26);

        $r25 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory>;

        virtualinvoke $r24.<com.android.server.usb.UsbSettingsManager: void accessoryAttached(android.hardware.usb.UsbAccessory)>($r25);

     label2:
        return;

     label3:
        z0 = 0;

        goto label1;

     label4:
        $r12 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r12, "nativeGetAccessoryStrings failed");

        return;

     label5:
        if z0 != 0 goto label2;

        $r2 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r2, "exited USB accessory mode");

        $r3 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void setEnabledFunctions(java.lang.String,boolean)>($r3, 0);

        $r4 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory>;

        if $r4 == null goto label2;

        $r5 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z2 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$1500(com.android.server.usb.UsbDeviceManager)>($r5);

        if $z2 == 0 goto label6;

        $r8 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r9 = staticinvoke <com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbSettingsManager access$1600(com.android.server.usb.UsbDeviceManager)>($r8);

        $r11 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory>;

        virtualinvoke $r9.<com.android.server.usb.UsbSettingsManager: void accessoryDetached(android.hardware.usb.UsbAccessory)>($r11);

     label6:
        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory> = null;

        $r6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String[] access$1402(com.android.server.usb.UsbDeviceManager,java.lang.String[])>($r6, null);

        return;
    }

    private void updateUsbNotification()
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        android.content.res.Resources r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, $i1, $i2, $i3;
        java.lang.CharSequence r2, r3;
        android.app.Notification r4, $r12;
        android.content.Intent r5;
        android.app.PendingIntent r6;
        com.android.server.usb.UsbDeviceManager $r7, $r9, $r10, $r15, $r18, $r20, $r24;
        android.app.NotificationManager $r8, $r19, $r21;
        android.content.Context $r11, $r14, $r17;
        android.content.ComponentName $r13;
        android.os.UserHandle $r16, $r22, $r23;
        java.lang.String $r25, $r26, $r27, $r28;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        $r7 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r8 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.app.NotificationManager access$1800(com.android.server.usb.UsbDeviceManager)>($r7);

        if $r8 == null goto label1;

        $r9 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z2 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$1900(com.android.server.usb.UsbDeviceManager)>($r9);

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        $r10 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r11 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>($r10);

        r1 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        z0 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConnected>;

        i0 = 0;

        if z0 == 0 goto label3;

        $r26 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $z3 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r26, "mtp");

        if $z3 == 0 goto label5;

        i0 = 17040498;

     label3:
        $i1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: int mUsbNotificationId>;

        if i0 == $i1 goto label1;

        $i2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: int mUsbNotificationId>;

        if $i2 == 0 goto label4;

        $r24 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r21 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.app.NotificationManager access$1800(com.android.server.usb.UsbDeviceManager)>($r24);

        $i3 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: int mUsbNotificationId>;

        $r22 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r21.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, $i3, $r22);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: int mUsbNotificationId> = 0;

     label4:
        if i0 == 0 goto label1;

        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040502);

        r3 = virtualinvoke r1.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        $r12 = new android.app.Notification;

        specialinvoke $r12.<android.app.Notification: void <init>()>();

        r4 = $r12;

        r4.<android.app.Notification: int icon> = 17302957;

        r4.<android.app.Notification: long when> = 0L;

        r4.<android.app.Notification: int flags> = 2;

        r4.<android.app.Notification: java.lang.CharSequence tickerText> = r3;

        r4.<android.app.Notification: int defaults> = 0;

        r4.<android.app.Notification: android.net.Uri sound> = null;

        r4.<android.app.Notification: long[] vibrate> = null;

        r4.<android.app.Notification: int priority> = -2;

        $r13 = new android.content.ComponentName;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.settings", "com.android.settings.UsbSettings");

        r5 = staticinvoke <android.content.Intent: android.content.Intent makeRestartActivityTask(android.content.ComponentName)>($r13);

        $r15 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r14 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>($r15);

        $r16 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        r6 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>($r14, 0, r5, 0, null, $r16);

        $r18 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r17 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>($r18);

        virtualinvoke r4.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>($r17, r3, r2, r6);

        $r20 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r19 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.app.NotificationManager access$1800(com.android.server.usb.UsbDeviceManager)>($r20);

        $r23 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r19.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, i0, r4, $r23);

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: int mUsbNotificationId> = i0;

        return;

     label5:
        $r25 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $z5 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r25, "ptp");

        if $z5 == 0 goto label6;

        i0 = 17040499;

        goto label3;

     label6:
        $r28 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $z4 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r28, "mass_storage");

        if $z4 == 0 goto label7;

        i0 = 17040500;

        goto label3;

     label7:
        $r27 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        z1 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r27, "accessory");

        i0 = 0;

        if z1 == 0 goto label3;

        i0 = 17040501;

        goto label3;
    }

    private void updateUsbState()
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        android.content.Intent r1, $r3;
        java.lang.String[] r2;
        int i0, $i1;
        boolean $z0, $z1;
        java.lang.String $r7, $r10, $r13;
        com.android.server.usb.UsbDeviceManager $r8;
        android.content.Context $r9;
        android.os.UserHandle $r11;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.hardware.usb.action.USB_STATE");

        r1 = $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $z0 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConnected>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("connected", $z0);

        $z1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConfigured>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("configured", $z1);

        $r7 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        if $r7 == null goto label2;

        $r10 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        r2 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label2;

        $r13 = r2[i0];

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>($r13, 1);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r8 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r9 = staticinvoke <com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>($r8);

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r11);

        return;
    }

    private boolean waitForState(java.lang.String)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        java.lang.String r1, $r2, $r7, $r8;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        if i0 >= 20 goto label3;

        $r8 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("sys.usb.state");

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        staticinvoke <android.os.SystemClock: void sleep(long)>(50L);

        i0 = i0 + 1;

        goto label1;

     label3:
        $r2 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("waitForState(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") FAILED");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r2, $r7);

        return 0;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.io.IOException r3, $r47;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r23, $r24, $r26, $r29, $r30, $r36, $r37, $r39, $r41, $r44, $r46, $r49, $r51, $r52;
        java.lang.String $r6, $r8, $r11, $r13, $r18, $r20, $r27, $r31, $r32, $r33, $r35, $r38, $r40, $r42, $r43, $r48, $r50;
        boolean $z0, $z1;
        android.hardware.usb.UsbAccessory $r25;
        java.io.File $r28, $r34, $r45;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  USB Device State:");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Current Functions: ");

        $r6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Default Functions: ");

        $r11 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mConnected: ");

        $z0 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConnected>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mConfigured: ");

        $z1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConfigured>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mCurrentAccessory: ");

        $r25 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

     label1:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Kernel state: ");

        $r28 = new java.io.File;

        specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>("/sys/class/android_usb/android0/state");

        $r32 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r28, 0, null);

        $r33 = virtualinvoke $r32.<java.lang.String: java.lang.String trim()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Kernel function list: ");

        $r34 = new java.io.File;

        specialinvoke $r34.<java.io.File: void <init>(java.lang.String)>("/sys/class/android_usb/android0/functions");

        $r35 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r34, 0, null);

        $r40 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Mass storage backing file: ");

        $r45 = new java.io.File;

        specialinvoke $r45.<java.io.File: void <init>(java.lang.String)>("/sys/class/android_usb/android0/f_mass_storage/lun/file");

        $r42 = staticinvoke <android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>($r45, 0, null);

        $r43 = virtualinvoke $r42.<java.lang.String: java.lang.String trim()>();

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r48);

     label2:
        return;

     label3:
        $r47 := @caughtexception;

        r3 = $r47;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException: ");

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.hardware.usb.UsbAccessory getCurrentAccessory()
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        android.hardware.usb.UsbAccessory $r1;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        $r1 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory>;

        return $r1;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        android.os.Message r1;
        boolean z0, z1, z2, z3, $z4, $z7, $z9, $z10, $z11, $z12, z13, z14, z15, z16;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r19, $r20;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        com.android.server.usb.UsbDeviceManager $r7, $r10, $r12, $r13, $r16, $r18;
        android.hardware.usb.UsbAccessory $r8, $r14;
        com.android.server.usb.UsbDebuggingManager $r9, $r11;
        java.lang.Object $r15;
        com.android.server.usb.UsbSettingsManager $r17;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        r1 := @parameter0: android.os.Message;

        z0 = 1;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label09;
            case 2: goto label12;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label18;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $i4 = r1.<android.os.Message: int arg1>;

        z13 = z0;

        i8 = (int) z13;

        if $i4 != i8 goto label06;

        z3 = z0;

     label03:
        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConnected> = z3;

        $i5 = r1.<android.os.Message: int arg2>;

        z14 = z0;

        i9 = (int) z14;

        if $i5 != i9 goto label07;

     label04:
        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConfigured> = z0;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateUsbNotification()>();

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateAdbNotification()>();

        $r19 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $z11 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r19, "accessory");

        if $z11 == 0 goto label08;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateCurrentAccessory()>();

     label05:
        $r18 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z12 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$1500(com.android.server.usb.UsbDeviceManager)>($r18);

        if $z12 == 0 goto label01;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateUsbState()>();

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateAudioSourceFunction()>();

        return;

     label06:
        z3 = 0;

        goto label03;

     label07:
        z0 = 0;

        goto label04;

     label08:
        $z10 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean mConnected>;

        if $z10 != 0 goto label05;

        $r20 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mDefaultFunctions>;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void setEnabledFunctions(java.lang.String,boolean)>($r20, 0);

        goto label05;

     label09:
        $i7 = r1.<android.os.Message: int arg1>;

        z15 = z0;

        i10 = (int) z15;

        if $i7 != i10 goto label11;

     label10:
        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void setAdbEnabled(boolean)>(z0);

        return;

     label11:
        z0 = 0;

        goto label10;

     label12:
        $r15 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (java.lang.String) $r15;

        $i6 = r1.<android.os.Message: int arg1>;

        z16 = z0;

        i11 = (int) z16;

        if $i6 != i11 goto label14;

        z2 = z0;

     label13:
        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void setEnabledFunctions(java.lang.String,boolean)>(r2, z2);

        return;

     label14:
        z2 = 0;

        goto label13;

     label15:
        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateUsbNotification()>();

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateAdbNotification()>();

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateUsbState()>();

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateAudioSourceFunction()>();

        return;

     label16:
        $r7 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$1502(com.android.server.usb.UsbDeviceManager,boolean)>($r7, z0);

        $r8 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory>;

        if $r8 == null goto label17;

        $r16 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r17 = staticinvoke <com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbSettingsManager access$1600(com.android.server.usb.UsbDeviceManager)>($r16);

        $r14 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory mCurrentAccessory>;

        virtualinvoke $r17.<com.android.server.usb.UsbSettingsManager: void accessoryAttached(android.hardware.usb.UsbAccessory)>($r14);

     label17:
        $r10 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r9 = staticinvoke <com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbDebuggingManager access$900(com.android.server.usb.UsbDeviceManager)>($r10);

        if $r9 == null goto label01;

        $r12 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $r11 = staticinvoke <com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbDebuggingManager access$900(com.android.server.usb.UsbDeviceManager)>($r12);

        $r13 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: com.android.server.usb.UsbDeviceManager this$0>;

        $z9 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$500(com.android.server.usb.UsbDeviceManager)>($r13);

        virtualinvoke $r11.<com.android.server.usb.UsbDebuggingManager: void setAdbEnabled(boolean)>($z9);

        return;

     label18:
        $r3 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $z4 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r3, "mtp");

        if $z4 != 0 goto label19;

        $r6 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        $z7 = staticinvoke <com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>($r6, "ptp");

        if $z7 == 0 goto label22;

     label19:
        z1 = z0;

     label20:
        if z1 == 0 goto label21;

        $i2 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: int mCurrentUser>;

        if $i2 == -10000 goto label21;

        $r4 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r4, "Current user switched; resetting USB host stack for MTP");

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean setUsbConfig(java.lang.String)>("none");

        $r5 = r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: java.lang.String mCurrentFunctions>;

        specialinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean setUsbConfig(java.lang.String)>($r5);

     label21:
        $i1 = r1.<android.os.Message: int arg1>;

        r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: int mCurrentUser> = $i1;

        return;

     label22:
        z1 = 0;

        goto label20;
    }

    public void sendMessage(int, java.lang.Object)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        int i0;
        java.lang.Object r1;
        android.os.Message r2;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void removeMessages(int)>(i0);

        r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>(r0, i0);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void sendMessage(int, java.lang.Object, boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        android.os.Message r2;
        byte b1;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void removeMessages(int)>(i0);

        r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>(r0, i0);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        r2.<android.os.Message: int arg1> = b1;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean sendMessage(android.os.Message)>(r2);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public void sendMessage(int, boolean)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        int i0;
        boolean z0;
        android.os.Message r1;
        byte b1;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void removeMessages(int)>(i0);

        r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>(r0, i0);

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        r1.<android.os.Message: int arg1> = b1;

        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean sendMessage(android.os.Message)>(r1);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public void updateState(java.lang.String)
    {
        com.android.server.usb.UsbDeviceManager$UsbHandler r0;
        java.lang.String r1, $r3, $r4, $r5, $r6, $r10;
        byte b0, b1;
        android.os.Message r2;
        long l2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.server.usb.UsbDeviceManager$UsbHandler;

        r1 := @parameter0: java.lang.String;

        $r3 = "DISCONNECTED";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        b0 = 0;

        b1 = 0;

     label1:
        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: void removeMessages(int)>(0);

        r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>(r0, 0);

        r2.<android.os.Message: int arg1> = b0;

        r2.<android.os.Message: int arg2> = b1;

        if b0 != 0 goto label6;

        l2 = 1000L;

     label2:
        virtualinvoke r0.<com.android.server.usb.UsbDeviceManager$UsbHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, l2);

        return;

     label3:
        $r4 = "CONNECTED";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

        b0 = 1;

        b1 = 0;

        goto label1;

     label4:
        $r5 = "CONFIGURED";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label5;

        b0 = 1;

        b1 = 1;

        goto label1;

     label5:
        $r6 = staticinvoke <com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown state ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r6, $r10);

        return;

     label6:
        l2 = 0L;

        goto label2;
    }
}
