class com.android.internal.telephony.cat.IconLoader extends android.os.Handler
{
    private static final int CLUT_ENTRY_SIZE;
    private static final int CLUT_LOCATION_OFFSET;
    private static final int EVENT_READ_CLUT_DONE;
    private static final int EVENT_READ_EF_IMG_RECOED_DONE;
    private static final int EVENT_READ_ICON_DONE;
    private static final int STATE_MULTI_ICONS;
    private static final int STATE_SINGLE_ICON;
    private static com.android.internal.telephony.cat.IconLoader sLoader;
    private android.graphics.Bitmap mCurrentIcon;
    private int mCurrentRecordIndex;
    private android.os.Message mEndMsg;
    private byte[] mIconData;
    private android.graphics.Bitmap[] mIcons;
    private java.util.HashMap mIconsCache;
    private com.android.internal.telephony.cat.ImageDescriptor mId;
    private int mRecordNumber;
    private int[] mRecordNumbers;
    private com.android.internal.telephony.uicc.IccFileHandler mSimFH;
    private int mState;

    static void <clinit>()
    {
        <com.android.internal.telephony.cat.IconLoader: int STATE_SINGLE_ICON> = 1;

        <com.android.internal.telephony.cat.IconLoader: int STATE_MULTI_ICONS> = 2;

        <com.android.internal.telephony.cat.IconLoader: int EVENT_READ_ICON_DONE> = 2;

        <com.android.internal.telephony.cat.IconLoader: int EVENT_READ_EF_IMG_RECOED_DONE> = 1;

        <com.android.internal.telephony.cat.IconLoader: int EVENT_READ_CLUT_DONE> = 3;

        <com.android.internal.telephony.cat.IconLoader: int CLUT_LOCATION_OFFSET> = 4;

        <com.android.internal.telephony.cat.IconLoader: int CLUT_ENTRY_SIZE> = 3;

        <com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.IconLoader sLoader> = null;

        return;
    }

    private void <init>(android.os.Looper, com.android.internal.telephony.uicc.IccFileHandler)
    {
        com.android.internal.telephony.cat.IconLoader r0;
        android.os.Looper r1;
        com.android.internal.telephony.uicc.IccFileHandler r2;
        java.util.HashMap $r3;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: com.android.internal.telephony.uicc.IccFileHandler;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        r0.<com.android.internal.telephony.cat.IconLoader: int mState> = 1;

        r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.uicc.IccFileHandler mSimFH> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message mEndMsg> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: byte[] mIconData> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: int[] mRecordNumbers> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: int mCurrentRecordIndex> = 0;

        r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap[] mIcons> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: java.util.HashMap mIconsCache> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.uicc.IccFileHandler mSimFH> = r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(50);

        r0.<com.android.internal.telephony.cat.IconLoader: java.util.HashMap mIconsCache> = $r3;

        return;
    }

    private static int bitToBnW(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return -1;

     label1:
        return -16777216;
    }

    static com.android.internal.telephony.cat.IconLoader getInstance(android.os.Handler, com.android.internal.telephony.uicc.IccFileHandler)
    {
        android.os.Handler r0;
        com.android.internal.telephony.uicc.IccFileHandler r1;
        android.os.HandlerThread r2, $r4;
        com.android.internal.telephony.cat.IconLoader $r3, $r5, $r7;
        android.os.Looper $r6;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: com.android.internal.telephony.uicc.IccFileHandler;

        $r3 = <com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.IconLoader sLoader>;

        if $r3 == null goto label1;

        $r7 = <com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.IconLoader sLoader>;

        return $r7;

     label1:
        if r1 == null goto label2;

        $r4 = new android.os.HandlerThread;

        specialinvoke $r4.<android.os.HandlerThread: void <init>(java.lang.String)>("Cat Icon Loader");

        r2 = $r4;

        virtualinvoke r2.<android.os.HandlerThread: void start()>();

        $r5 = new com.android.internal.telephony.cat.IconLoader;

        $r6 = virtualinvoke r2.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r5.<com.android.internal.telephony.cat.IconLoader: void <init>(android.os.Looper,com.android.internal.telephony.uicc.IccFileHandler)>($r6, r1);

        return $r5;

     label2:
        return null;
    }

    private static int getMask(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            case 8: goto label9;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 3;

     label4:
        return 7;

     label5:
        return 15;

     label6:
        return 31;

     label7:
        return 63;

     label8:
        return 127;

     label9:
        return 255;
    }

    private boolean handleImageDescriptor(byte[])
    {
        com.android.internal.telephony.cat.IconLoader r0;
        byte[] r1;
        boolean z0;
        com.android.internal.telephony.cat.ImageDescriptor $r2, $r3;
        int i0;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        r1 := @parameter0: byte[];

        z0 = 1;

        i0 = (int) z0;

        $r2 = staticinvoke <com.android.internal.telephony.cat.ImageDescriptor: com.android.internal.telephony.cat.ImageDescriptor parse(byte[],int)>(r1, i0);

        r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId> = $r2;

        $r3 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId>;

        if $r3 != null goto label1;

        z0 = 0;

     label1:
        return z0;
    }

    public static android.graphics.Bitmap parseToBnW(byte[], int)
    {
        byte[] r0;
        int i0, i1, i3, i5, i6, i8, i9, i10, i11, i12, $i15, $i18;
        short s2, s4;
        int[] r1;
        byte b7, $b13, $b14, $b16, $b17;
        android.graphics.Bitmap$Config $r2;
        android.graphics.Bitmap $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 = 0 + 1;

        $b13 = r0[0];

        s2 = 255 & $b13;

        i3 = i1 + 1;

        $b14 = r0[i1];

        s4 = 255 & $b14;

        i5 = s2 * s4;

        r1 = newarray (int)[i5];

        i6 = 7;

        b7 = 0;

        i8 = 0;

        i9 = i3;

     label1:
        if i8 >= i5 goto label3;

        $i15 = i8 % 8;

        if $i15 != 0 goto label5;

        i10 = i9 + 1;

        b7 = r0[i9];

        i6 = 7;

     label2:
        i11 = i8 + 1;

        i12 = i6 - 1;

        $b17 = b7 >> i6;

        $b16 = 1 & $b17;

        $i18 = staticinvoke <com.android.internal.telephony.cat.IconLoader: int bitToBnW(int)>($b16);

        r1[i8] = $i18;

        i6 = i12;

        i8 = i11;

        i9 = i10;

        goto label1;

     label3:
        if i8 == i5 goto label4;

        staticinvoke <com.android.internal.telephony.cat.CatLog: void d(java.lang.String,java.lang.String)>("IconLoader", "parseToBnW; size error");

     label4:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r1, s2, s4, $r2);

        return $r3;

     label5:
        i10 = i9;

        goto label2;
    }

    public static android.graphics.Bitmap parseToRGB(byte[], int, boolean, byte[])
    {
        byte[] r0, r1;
        int i0, i1, i3, i5, i8, i9, i10, i12, i13, i14, i15, i16, i17, $i23, $i24, $i25, $i29, $i31, $i32;
        boolean z0, z1;
        short s2, s4, s6, s7;
        int[] r2;
        byte b11, $b18, $b19, $b21, $b22, $b26, $b27, $b28, $b30;
        android.graphics.Bitmap$Config $r3;
        android.graphics.Bitmap $r4;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: byte[];

        i1 = 0 + 1;

        $b19 = r0[0];

        s2 = 255 & $b19;

        i3 = i1 + 1;

        $b18 = r0[i1];

        s4 = 255 & $b18;

        i5 = i3 + 1;

        $b21 = r0[i3];

        s6 = 255 & $b21;

        $b22 = r0[i5];

        s7 = 255 & $b22;

        if 1 != z0 goto label1;

        $i32 = s7 - 1;

        r1[$i32] = 0;

     label1:
        i8 = s2 * s4;

        r2 = newarray (int)[i8];

        i9 = 8 - s6;

        i10 = i9;

        i12 = 6 + 1;

        b11 = r0[6];

        i13 = staticinvoke <com.android.internal.telephony.cat.IconLoader: int getMask(int)>(s6);

        $i23 = 8 % s6;

        if $i23 != 0 goto label5;

        z1 = 1;

     label2:
        i15 = 0;

     label3:
        if i15 >= i8 goto label7;

        if i10 >= 0 goto label8;

        i14 = i12 + 1;

        b11 = r0[i12];

        if z1 == 0 goto label6;

        i10 = i9;

     label4:
        $b26 = b11 >> i10;

        $i24 = i13 & $b26;

        i17 = 3 * $i24;

        i16 = i15 + 1;

        $b28 = r1[i17];

        $i25 = i17 + 1;

        $b27 = r1[$i25];

        $i29 = i17 + 2;

        $b30 = r1[$i29];

        $i31 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($b28, $b27, $b30);

        r2[i15] = $i31;

        i10 = i10 - s6;

        i15 = i16;

        i12 = i14;

        goto label3;

     label5:
        z1 = 0;

        goto label2;

     label6:
        i10 = i10 * -1;

        goto label4;

     label7:
        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r2, s2, s4, $r3);

        return $r4;

     label8:
        i14 = i12;

        goto label4;
    }

    private void postIcon()
    {
        com.android.internal.telephony.cat.IconLoader r0;
        android.graphics.Bitmap[] r1, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Bitmap $r2, $r9;
        int[] $r3, $r7;
        android.os.Message $r5, $r6, $r8, $r10;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        $i1 = r0.<com.android.internal.telephony.cat.IconLoader: int mState>;

        if $i1 != 1 goto label2;

        $r8 = r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message mEndMsg>;

        $r9 = r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon>;

        $r8.<android.os.Message: java.lang.Object obj> = $r9;

        $r10 = r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message mEndMsg>;

        virtualinvoke $r10.<android.os.Message: void sendToTarget()>();

     label1:
        return;

     label2:
        $i2 = r0.<com.android.internal.telephony.cat.IconLoader: int mState>;

        if $i2 != 2 goto label1;

        r1 = r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap[] mIcons>;

        i0 = r0.<com.android.internal.telephony.cat.IconLoader: int mCurrentRecordIndex>;

        $i3 = i0 + 1;

        r0.<com.android.internal.telephony.cat.IconLoader: int mCurrentRecordIndex> = $i3;

        $r2 = r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon>;

        r1[i0] = $r2;

        $i5 = r0.<com.android.internal.telephony.cat.IconLoader: int mCurrentRecordIndex>;

        $r3 = r0.<com.android.internal.telephony.cat.IconLoader: int[] mRecordNumbers>;

        $i4 = lengthof $r3;

        if $i5 >= $i4 goto label3;

        $r7 = r0.<com.android.internal.telephony.cat.IconLoader: int[] mRecordNumbers>;

        $i6 = r0.<com.android.internal.telephony.cat.IconLoader: int mCurrentRecordIndex>;

        $i7 = $r7[$i6];

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void startLoadingIcon(int)>($i7);

        return;

     label3:
        $r5 = r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message mEndMsg>;

        $r4 = r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap[] mIcons>;

        $r5.<android.os.Message: java.lang.Object obj> = $r4;

        $r6 = r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message mEndMsg>;

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void readClut()
    {
        com.android.internal.telephony.cat.IconLoader r0;
        int i0, $i4;
        android.os.Message r1;
        byte[] $r2, $r4, $r5;
        byte $b1, $b2, $b3;
        com.android.internal.telephony.cat.ImageDescriptor $r3;
        com.android.internal.telephony.uicc.IccFileHandler $r6;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        $r2 = r0.<com.android.internal.telephony.cat.IconLoader: byte[] mIconData>;

        $b1 = $r2[3];

        i0 = 3 * $b1;

        r1 = virtualinvoke r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message obtainMessage(int)>(3);

        $r6 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.uicc.IccFileHandler mSimFH>;

        $r3 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId>;

        $i4 = $r3.<com.android.internal.telephony.cat.ImageDescriptor: int mImageId>;

        $r4 = r0.<com.android.internal.telephony.cat.IconLoader: byte[] mIconData>;

        $b3 = $r4[4];

        $r5 = r0.<com.android.internal.telephony.cat.IconLoader: byte[] mIconData>;

        $b2 = $r5[5];

        virtualinvoke $r6.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>($i4, $b3, $b2, i0, r1);

        return;
    }

    private void readIconData()
    {
        com.android.internal.telephony.cat.IconLoader r0;
        android.os.Message r1;
        com.android.internal.telephony.cat.ImageDescriptor $r2, $r3;
        int $i0, $i1;
        com.android.internal.telephony.uicc.IccFileHandler $r4;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        r1 = virtualinvoke r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message obtainMessage(int)>(2);

        $r4 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.uicc.IccFileHandler mSimFH>;

        $r2 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId>;

        $i1 = $r2.<com.android.internal.telephony.cat.ImageDescriptor: int mImageId>;

        $r3 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId>;

        $i0 = $r3.<com.android.internal.telephony.cat.ImageDescriptor: int mLength>;

        virtualinvoke $r4.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>($i1, 0, 0, $i0, r1);

        return;
    }

    private void readId()
    {
        com.android.internal.telephony.cat.IconLoader r0;
        android.os.Message r1;
        int $i0, $i1;
        com.android.internal.telephony.uicc.IccFileHandler $r2;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        $i0 = r0.<com.android.internal.telephony.cat.IconLoader: int mRecordNumber>;

        if $i0 >= 0 goto label1;

        r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon> = null;

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void postIcon()>();

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message obtainMessage(int)>(1);

        $r2 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.uicc.IccFileHandler mSimFH>;

        $i1 = r0.<com.android.internal.telephony.cat.IconLoader: int mRecordNumber>;

        virtualinvoke $r2.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>($i1, r1);

        return;
    }

    private void startLoadingIcon(int)
    {
        com.android.internal.telephony.cat.IconLoader r0;
        int i0;
        java.util.HashMap $r1, $r3;
        java.lang.Integer $r2, $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.graphics.Bitmap $r6;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: byte[] mIconData> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon> = null;

        r0.<com.android.internal.telephony.cat.IconLoader: int mRecordNumber> = i0;

        $r1 = r0.<com.android.internal.telephony.cat.IconLoader: java.util.HashMap mIconsCache>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.cat.IconLoader: java.util.HashMap mIconsCache>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (android.graphics.Bitmap) $r5;

        r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon> = $r6;

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void postIcon()>();

        return;

     label1:
        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void readId()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.cat.IconLoader r0;
        android.os.Message r1;
        byte[] r3, r4, $r8, $r9, $r13, $r15, $r17, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r5, $r7, $r11, $r14, $r21, $r23;
        android.os.AsyncResult $r6, $r12, $r24;
        boolean $z0;
        java.lang.Exception $r10, $r31;
        android.graphics.Bitmap $r16, $r19, $r30, $r32;
        java.util.HashMap $r18, $r28;
        java.lang.Integer $r20, $r29;
        com.android.internal.telephony.cat.ImageDescriptor $r25, $r27;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        r1 := @parameter0: android.os.Message;

     label01:
        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label10;
            default: goto label11;
        };

     label02:
        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        $r6 = (android.os.AsyncResult) $r5;

        $r7 = $r6.<android.os.AsyncResult: java.lang.Object result>;

        $r8 = (byte[]) $r7;

        $r9 = (byte[]) $r8;

        $z0 = specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: boolean handleImageDescriptor(byte[])>($r9);

        if $z0 == 0 goto label05;

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void readIconData()>();

     label03:
        return;

     label04:
        $r31 := @caughtexception;

        staticinvoke <com.android.internal.telephony.cat.CatLog: void d(java.lang.Object,java.lang.String)>(r0, "Icon load failed");

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void postIcon()>();

        return;

     label05:
        $r10 = new java.lang.Exception;

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>("Unable to parse image descriptor");

        throw $r10;

     label06:
        $r21 = r1.<android.os.Message: java.lang.Object obj>;

        $r24 = (android.os.AsyncResult) $r21;

        $r23 = $r24.<android.os.AsyncResult: java.lang.Object result>;

        $r26 = (byte[]) $r23;

        r4 = (byte[]) $r26;

        $r25 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId>;

        $i5 = $r25.<com.android.internal.telephony.cat.ImageDescriptor: int mCodingScheme>;

        if $i5 != 17 goto label08;

        $i4 = lengthof r4;

        $r30 = staticinvoke <com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToBnW(byte[],int)>(r4, $i4);

        r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon> = $r30;

        $r28 = r0.<com.android.internal.telephony.cat.IconLoader: java.util.HashMap mIconsCache>;

        $i6 = r0.<com.android.internal.telephony.cat.IconLoader: int mRecordNumber>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r32 = r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon>;

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r32);

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void postIcon()>();

     label07:
        return;

     label08:
        $r27 = r0.<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.ImageDescriptor mId>;

        $i3 = $r27.<com.android.internal.telephony.cat.ImageDescriptor: int mCodingScheme>;

        if $i3 != 33 goto label11;

        r0.<com.android.internal.telephony.cat.IconLoader: byte[] mIconData> = r4;

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void readClut()>();

     label09:
        return;

     label10:
        $r11 = r1.<android.os.Message: java.lang.Object obj>;

        $r12 = (android.os.AsyncResult) $r11;

        $r14 = $r12.<android.os.AsyncResult: java.lang.Object result>;

        $r13 = (byte[]) $r14;

        r3 = (byte[]) $r13;

        $r17 = r0.<com.android.internal.telephony.cat.IconLoader: byte[] mIconData>;

        $r15 = r0.<com.android.internal.telephony.cat.IconLoader: byte[] mIconData>;

        $i1 = lengthof $r15;

        $r16 = staticinvoke <com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToRGB(byte[],int,boolean,byte[])>($r17, $i1, 0, r3);

        r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon> = $r16;

        $r18 = r0.<com.android.internal.telephony.cat.IconLoader: java.util.HashMap mIconsCache>;

        $i2 = r0.<com.android.internal.telephony.cat.IconLoader: int mRecordNumber>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r19 = r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap mCurrentIcon>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r19);

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void postIcon()>();

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label04;
        catch java.lang.Exception from label06 to label07 with label04;
        catch java.lang.Exception from label08 to label09 with label04;
        catch java.lang.Exception from label10 to label11 with label04;
    }

    void loadIcon(int, android.os.Message)
    {
        com.android.internal.telephony.cat.IconLoader r0;
        int i0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        if r1 != null goto label1;

        return;

     label1:
        r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message mEndMsg> = r1;

        r0.<com.android.internal.telephony.cat.IconLoader: int mState> = 1;

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void startLoadingIcon(int)>(i0);

        return;
    }

    void loadIcons(int[], android.os.Message)
    {
        com.android.internal.telephony.cat.IconLoader r0;
        int[] r1;
        android.os.Message r2;
        int $i0, $i1, $i2;
        android.graphics.Bitmap[] $r3;

        r0 := @this: com.android.internal.telephony.cat.IconLoader;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.os.Message;

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 == 0 goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        r0.<com.android.internal.telephony.cat.IconLoader: android.os.Message mEndMsg> = r2;

        $i1 = lengthof r1;

        $r3 = newarray (android.graphics.Bitmap)[$i1];

        r0.<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap[] mIcons> = $r3;

        r0.<com.android.internal.telephony.cat.IconLoader: int[] mRecordNumbers> = r1;

        r0.<com.android.internal.telephony.cat.IconLoader: int mCurrentRecordIndex> = 0;

        r0.<com.android.internal.telephony.cat.IconLoader: int mState> = 2;

        $i2 = r1[0];

        specialinvoke r0.<com.android.internal.telephony.cat.IconLoader: void startLoadingIcon(int)>($i2);

        return;
    }
}
