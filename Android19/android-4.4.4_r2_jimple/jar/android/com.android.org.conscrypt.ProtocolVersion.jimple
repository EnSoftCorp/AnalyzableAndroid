public class com.android.org.conscrypt.ProtocolVersion extends java.lang.Object
{
    public static final com.android.org.conscrypt.ProtocolVersion SSLv3;
    public static final com.android.org.conscrypt.ProtocolVersion TLSv1;
    private static java.util.Hashtable protocolsByName;
    public static final java.lang.String[] supportedProtocols;
    public final java.lang.String name;
    public final byte[] version;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.Hashtable $r1, $r9, $r14, $r16, $r21;
        com.android.org.conscrypt.ProtocolVersion $r2, $r4, $r6, $r7, $r11, $r12, $r17, $r18;
        byte[] $r3, $r5;
        java.lang.String $r8, $r13;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "TLSv1";

        $r0[1] = "SSLv3";

        <com.android.org.conscrypt.ProtocolVersion: java.lang.String[] supportedProtocols> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>(int)>(4);

        <com.android.org.conscrypt.ProtocolVersion: java.util.Hashtable protocolsByName> = $r1;

        $r2 = new com.android.org.conscrypt.ProtocolVersion;

        $r3 = newarray (byte)[2];

        $r3[0] = 3;

        $r3[1] = 0;

        specialinvoke $r2.<com.android.org.conscrypt.ProtocolVersion: void <init>(java.lang.String,byte[])>("SSLv3", $r3);

        <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion SSLv3> = $r2;

        $r4 = new com.android.org.conscrypt.ProtocolVersion;

        $r5 = newarray (byte)[2];

        $r5[0] = 3;

        $r5[1] = 1;

        specialinvoke $r4.<com.android.org.conscrypt.ProtocolVersion: void <init>(java.lang.String,byte[])>("TLSv1", $r5);

        <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion TLSv1> = $r4;

        $r9 = <com.android.org.conscrypt.ProtocolVersion: java.util.Hashtable protocolsByName>;

        $r6 = <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion SSLv3>;

        $r8 = $r6.<com.android.org.conscrypt.ProtocolVersion: java.lang.String name>;

        $r7 = <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion SSLv3>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r14 = <com.android.org.conscrypt.ProtocolVersion: java.util.Hashtable protocolsByName>;

        $r11 = <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion TLSv1>;

        $r13 = $r11.<com.android.org.conscrypt.ProtocolVersion: java.lang.String name>;

        $r12 = <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion TLSv1>;

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r12);

        $r16 = <com.android.org.conscrypt.ProtocolVersion: java.util.Hashtable protocolsByName>;

        $r17 = <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion SSLv3>;

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("SSL", $r17);

        $r21 = <com.android.org.conscrypt.ProtocolVersion: java.util.Hashtable protocolsByName>;

        $r18 = <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion TLSv1>;

        virtualinvoke $r21.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS", $r18);

        return;
    }

    private void <init>(java.lang.String, byte[])
    {
        com.android.org.conscrypt.ProtocolVersion r0;
        java.lang.String r1;
        byte[] r2;

        r0 := @this: com.android.org.conscrypt.ProtocolVersion;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.conscrypt.ProtocolVersion: java.lang.String name> = r1;

        r0.<com.android.org.conscrypt.ProtocolVersion: byte[] version> = r2;

        return;
    }

    public static com.android.org.conscrypt.ProtocolVersion getByName(java.lang.String)
    {
        java.lang.String r0;
        java.util.Hashtable $r1;
        java.lang.Object $r2;
        com.android.org.conscrypt.ProtocolVersion $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.org.conscrypt.ProtocolVersion: java.util.Hashtable protocolsByName>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (com.android.org.conscrypt.ProtocolVersion) $r2;

        return $r3;
    }

    public static com.android.org.conscrypt.ProtocolVersion getByVersion(byte[])
    {
        byte[] r0;
        byte $b0, $b1, $b2;
        com.android.org.conscrypt.ProtocolVersion $r1, $r2;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        if $b0 != 3 goto label2;

        $b1 = r0[1];

        if $b1 != 1 goto label1;

        $r2 = <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion TLSv1>;

        return $r2;

     label1:
        $b2 = r0[1];

        if $b2 != 0 goto label2;

        $r1 = <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion SSLv3>;

        return $r1;

     label2:
        return null;
    }

    public static com.android.org.conscrypt.ProtocolVersion getLatestVersion(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.org.conscrypt.ProtocolVersion r1, r2;
        int i0, $i1, $i2;
        java.lang.String $r3, $r4;
        byte[] $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b3, $b4, $b5, $b6, $b7, $b8;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label1;

        $i1 = lengthof r0;

        if $i1 != 0 goto label3;

     label1:
        r1 = null;

     label2:
        return r1;

     label3:
        $r3 = r0[0];

        r1 = staticinvoke <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion getByName(java.lang.String)>($r3);

        i0 = 1;

     label4:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label2;

        $r4 = r0[i0];

        r2 = staticinvoke <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion getByName(java.lang.String)>($r4);

        if r2 != null goto label6;

     label5:
        i0 = i0 + 1;

        goto label4;

     label6:
        if r1 == null goto label7;

        $r5 = r1.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        $b4 = $r5[0];

        $r6 = r2.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        $b3 = $r6[0];

        if $b4 < $b3 goto label7;

        $r7 = r1.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        $b5 = $r7[0];

        $r8 = r2.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        $b6 = $r8[0];

        if $b5 != $b6 goto label5;

        $r10 = r1.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        $b7 = $r10[1];

        $r9 = r2.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        $b8 = $r9[1];

        if $b7 >= $b8 goto label5;

     label7:
        r1 = r2;

        goto label5;
    }

    public static boolean isSupported(java.lang.String)
    {
        java.lang.String r0;
        java.util.Hashtable $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.org.conscrypt.ProtocolVersion: java.util.Hashtable protocolsByName>;

        $z0 = virtualinvoke $r1.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isSupported(byte[])
    {
        byte[] r0;
        boolean z0, z1;
        byte $b0, $b1, $b2, b5;
        int i3, i4;

        r0 := @parameter0: byte[];

        z0 = 1;

        $b0 = r0[0];

        if $b0 != 3 goto label1;

        i3 = (int) z0;

        $b1 = r0[i3];

        if $b1 == 0 goto label2;

        i4 = (int) z0;

        $b2 = r0[i4];

        z1 = z0;

        b5 = (byte) z1;

        if $b2 == b5 goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }
}
