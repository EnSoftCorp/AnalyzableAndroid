public class android.app.backup.FullBackup extends java.lang.Object
{
    public static final java.lang.String APK_TREE_TOKEN;
    public static final java.lang.String APPS_PREFIX;
    public static final java.lang.String CACHE_TREE_TOKEN;
    public static final java.lang.String CONF_TOKEN_INTENT_EXTRA;
    public static final java.lang.String DATABASE_TREE_TOKEN;
    public static final java.lang.String DATA_TREE_TOKEN;
    public static final java.lang.String FULL_BACKUP_INTENT_ACTION;
    public static final java.lang.String FULL_RESTORE_INTENT_ACTION;
    public static final java.lang.String MANAGED_EXTERNAL_TREE_TOKEN;
    public static final java.lang.String OBB_TREE_TOKEN;
    public static final java.lang.String ROOT_TREE_TOKEN;
    public static final java.lang.String SHAREDPREFS_TREE_TOKEN;
    public static final java.lang.String SHARED_PREFIX;
    public static final java.lang.String SHARED_STORAGE_TOKEN;
    static final java.lang.String TAG;

    public void <init>()
    {
        android.app.backup.FullBackup r0;

        r0 := @this: android.app.backup.FullBackup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native int backupToTar(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.backup.BackupDataOutput);

    public static void restoreFile(android.os.ParcelFileDescriptor, long, int, long, long, java.io.File) throws java.io.IOException
    {
        android.os.ParcelFileDescriptor r0;
        long l0, l2, l3, l4, l5, $l11, $l14, $l15;
        int i1, i6, i7, $i9, $i13;
        java.io.File r1, r8;
        java.io.FileOutputStream r2, r10, $r20;
        byte[] r3;
        java.io.FileInputStream r4, $r9;
        libcore.io.ErrnoException r5, $r24;
        java.io.IOException r6, r7, $r22, $r32;
        byte $b8, $b10, $b12;
        java.io.FileDescriptor $r11;
        java.lang.String $r12, $r18, $r26, $r29, $r31, $r34;
        libcore.io.Os $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19, $r21, $r25, $r27, $r28, $r30, $r33;
        boolean $z3;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        r1 := @parameter5: java.io.File;

        if i1 != 2 goto label05;

        if r1 == null goto label01;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

     label01:
        $b10 = l2 cmp 0L;

        if $b10 < 0 goto label04;

        if r1 == null goto label04;

        l5 = l2 & 448L;

     label02:
        $r13 = <libcore.io.Libcore: libcore.io.Os os>;

        $r12 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $i9 = (int) l5;

        interfaceinvoke $r13.<libcore.io.Os: void chmod(java.lang.String,int)>($r12, $i9);

     label03:
        virtualinvoke r1.<java.io.File: boolean setLastModified(long)>(l3);

     label04:
        return;

     label05:
        r2 = null;

        if r1 == null goto label09;

     label06:
        r8 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        $z3 = virtualinvoke r8.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label07;

        virtualinvoke r8.<java.io.File: boolean mkdirs()>();

     label07:
        $r20 = new java.io.FileOutputStream;

        specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r10 = $r20;

     label08:
        r2 = r10;

     label09:
        r3 = newarray (byte)[32768];

        l4 = l0;

        $r9 = new java.io.FileInputStream;

        $r11 = virtualinvoke r0.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r11);

        r4 = $r9;

     label10:
        $b8 = l0 cmp 0L;

        if $b8 <= 0 goto label12;

        $i13 = lengthof r3;

        $l11 = (long) $i13;

        $b12 = l0 cmp $l11;

        if $b12 <= 0 goto label14;

        i6 = lengthof r3;

     label11:
        i7 = virtualinvoke r4.<java.io.FileInputStream: int read(byte[],int,int)>(r3, 0, i6);

        if i7 > 0 goto label15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incomplete read: expected ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got ");

        $l15 = l4 - l0;

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FullBackup", $r18);

     label12:
        if r2 == null goto label01;

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

        goto label01;

     label13:
        $r22 := @caughtexception;

        r7 = $r22;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create/open file ");

        $r26 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FullBackup", $r31, r7);

        r2 = null;

        goto label09;

     label14:
        i6 = (int) l0;

        goto label11;

     label15:
        if r2 == null goto label17;

     label16:
        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[],int,int)>(r3, 0, i7);

     label17:
        $l14 = (long) i7;

        l0 = l0 - $l14;

        goto label10;

     label18:
        $r32 := @caughtexception;

        r6 = $r32;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to write to file ");

        $r29 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FullBackup", $r34, r6);

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

        virtualinvoke r1.<java.io.File: boolean delete()>();

        r2 = null;

        goto label17;

     label19:
        $r24 := @caughtexception;

        r5 = $r24;

        virtualinvoke r5.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        goto label03;

        catch libcore.io.ErrnoException from label02 to label03 with label19;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label16 to label17 with label18;
    }

    public static void <clinit>()
    {
        <android.app.backup.FullBackup: java.lang.String TAG> = "FullBackup";

        <android.app.backup.FullBackup: java.lang.String SHARED_STORAGE_TOKEN> = "shared";

        <android.app.backup.FullBackup: java.lang.String SHARED_PREFIX> = "shared/";

        <android.app.backup.FullBackup: java.lang.String SHAREDPREFS_TREE_TOKEN> = "sp";

        <android.app.backup.FullBackup: java.lang.String ROOT_TREE_TOKEN> = "r";

        <android.app.backup.FullBackup: java.lang.String OBB_TREE_TOKEN> = "obb";

        <android.app.backup.FullBackup: java.lang.String MANAGED_EXTERNAL_TREE_TOKEN> = "ef";

        <android.app.backup.FullBackup: java.lang.String FULL_RESTORE_INTENT_ACTION> = "fullrest";

        <android.app.backup.FullBackup: java.lang.String FULL_BACKUP_INTENT_ACTION> = "fullback";

        <android.app.backup.FullBackup: java.lang.String DATA_TREE_TOKEN> = "f";

        <android.app.backup.FullBackup: java.lang.String DATABASE_TREE_TOKEN> = "db";

        <android.app.backup.FullBackup: java.lang.String CONF_TOKEN_INTENT_EXTRA> = "conftoken";

        <android.app.backup.FullBackup: java.lang.String CACHE_TREE_TOKEN> = "c";

        <android.app.backup.FullBackup: java.lang.String APPS_PREFIX> = "apps/";

        <android.app.backup.FullBackup: java.lang.String APK_TREE_TOKEN> = "a";

        return;
    }
}
