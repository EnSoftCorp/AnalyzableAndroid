public class com.android.org.conscrypt.ClientHello extends com.android.org.conscrypt.Message
{
    final com.android.org.conscrypt.CipherSuite[] cipher_suites;
    final byte[] client_version;
    final byte[] compression_methods;
    final byte[] random;
    final byte[] session_id;

    public void <init>(com.android.org.conscrypt.HandshakeIODataStream) throws java.io.IOException
    {
        com.android.org.conscrypt.ClientHello r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0, i1, i2, $i6, $i7, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        byte b3, b4, b5, $b8, $b10;
        byte[] $r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        com.android.org.conscrypt.CipherSuite[] $r7, $r8, $r12, $r21;
        com.android.org.conscrypt.CipherSuite $r20;

        r0 := @this: com.android.org.conscrypt.ClientHello;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        $r2 = newarray (byte)[32];

        r0.<com.android.org.conscrypt.ClientHello: byte[] random> = $r2;

        $i6 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint8()>();

        if $i6 == 1 goto label1;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHello: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect V2ClientHello");

     label1:
        $r3 = newarray (byte)[2];

        r0.<com.android.org.conscrypt.ClientHello: byte[] client_version> = $r3;

        $r4 = r0.<com.android.org.conscrypt.ClientHello: byte[] client_version>;

        $i7 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint8()>();

        $b8 = (byte) $i7;

        $r4[0] = $b8;

        $r5 = r0.<com.android.org.conscrypt.ClientHello: byte[] client_version>;

        $i9 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint8()>();

        $b10 = (byte) $i9;

        $r5[1] = $b10;

        i0 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint16()>();

        $i11 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint16()>();

        if $i11 == 0 goto label2;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHello: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect V2ClientHello, cannot be used for resuming");

     label2:
        i1 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint16()>();

        if i1 >= 16 goto label3;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHello: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect V2ClientHello, short challenge data");

     label3:
        $r6 = <com.android.org.conscrypt.util.EmptyArray: byte[] BYTE>;

        r0.<com.android.org.conscrypt.ClientHello: byte[] session_id> = $r6;

        $i12 = i0 / 3;

        $r8 = newarray (com.android.org.conscrypt.CipherSuite)[$i12];

        r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites> = $r8;

        i2 = 0;

     label4:
        $r7 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $i13 = lengthof $r7;

        if i2 >= $i13 goto label5;

        $i27 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        b3 = (byte) $i27;

        $i26 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        b4 = (byte) $i26;

        $i25 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        b5 = (byte) $i25;

        $r21 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $r20 = staticinvoke <com.android.org.conscrypt.CipherSuite: com.android.org.conscrypt.CipherSuite getByCode(byte,byte,byte)>(b3, b4, b5);

        $r21[i2] = $r20;

        i2 = i2 + 1;

        goto label4;

     label5:
        $r9 = newarray (byte)[1];

        $r9[0] = 0;

        r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods> = $r9;

        if i1 >= 32 goto label8;

        $r18 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        $i24 = 32 - i1;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r18, 0, $i24, 0);

        $r17 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: byte[] read(int)>(i1);

        $r19 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        $i23 = 32 - i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, $r19, $i23, i1);

     label6:
        $i14 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int available()>();

        if $i14 <= 0 goto label7;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHello: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect V2ClientHello, extra data");

     label7:
        $r13 = r0.<com.android.org.conscrypt.ClientHello: byte[] session_id>;

        $i17 = lengthof $r13;

        $i20 = 38 + $i17;

        $r12 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $i16 = lengthof $r12;

        $i19 = $i16 << 1;

        $i21 = $i20 + $i19;

        $r14 = r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods>;

        $i18 = lengthof $r14;

        $i22 = $i21 + $i18;

        r0.<com.android.org.conscrypt.ClientHello: int length> = $i22;

        return;

     label8:
        if i1 != 32 goto label9;

        $r15 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: byte[] read(int)>(32);

        $r16 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r16, 0, 32);

        goto label6;

     label9:
        $r11 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: byte[] read(int)>(i1);

        $i15 = i1 - 32;

        $r10 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i15, $r10, 0, 32);

        goto label6;
    }

    public void <init>(com.android.org.conscrypt.HandshakeIODataStream, int) throws java.io.IOException
    {
        com.android.org.conscrypt.ClientHello r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0, i1, i2, i3, i4, i5, $i9, $i11, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i26, $i27, $i28, $i29;
        byte b6, b7, $b8, $b10;
        byte[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14;
        com.android.org.conscrypt.CipherSuite[] $r9, $r12, $r16;
        long $l25;
        com.android.org.conscrypt.CipherSuite $r15;

        r0 := @this: com.android.org.conscrypt.ClientHello;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        $r2 = newarray (byte)[32];

        r0.<com.android.org.conscrypt.ClientHello: byte[] random> = $r2;

        $r3 = newarray (byte)[2];

        r0.<com.android.org.conscrypt.ClientHello: byte[] client_version> = $r3;

        $r4 = r0.<com.android.org.conscrypt.ClientHello: byte[] client_version>;

        $i9 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint8()>();

        $b8 = (byte) $i9;

        $r4[0] = $b8;

        $r5 = r0.<com.android.org.conscrypt.ClientHello: byte[] client_version>;

        $i11 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint8()>();

        $b10 = (byte) $i11;

        $r5[1] = $b10;

        $r6 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[])>(r1, $r6);

        i1 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        $r8 = newarray (byte)[i1];

        r0.<com.android.org.conscrypt.ClientHello: byte[] session_id> = $r8;

        $r7 = r0.<com.android.org.conscrypt.ClientHello: byte[] session_id>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read(byte[],int,int)>($r7, 0, i1);

        i2 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint16()>();

        $i13 = i2 & 1;

        if $i13 != 1 goto label1;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHello: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect ClientHello");

     label1:
        i3 = i2 >> 1;

        $r9 = newarray (com.android.org.conscrypt.CipherSuite)[i3];

        r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites> = $r9;

        i4 = 0;

     label2:
        if i4 >= i3 goto label3;

        $i29 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        b6 = (byte) $i29;

        $i28 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        b7 = (byte) $i28;

        $r16 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $r15 = staticinvoke <com.android.org.conscrypt.CipherSuite: com.android.org.conscrypt.CipherSuite getByCode(byte,byte)>(b6, b7);

        $r16[i4] = $r15;

        i4 = i4 + 1;

        goto label2;

     label3:
        i5 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        $r11 = newarray (byte)[i5];

        r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods> = $r11;

        $r10 = r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read(byte[],int,int)>($r10, 0, i5);

        $r13 = r0.<com.android.org.conscrypt.ClientHello: byte[] session_id>;

        $i16 = lengthof $r13;

        $i19 = 38 + $i16;

        $r12 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $i15 = lengthof $r12;

        $i18 = $i15 << 1;

        $i22 = $i19 + $i18;

        $r14 = r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods>;

        $i17 = lengthof $r14;

        $i23 = $i22 + $i17;

        r0.<com.android.org.conscrypt.ClientHello: int length> = $i23;

        $i20 = r0.<com.android.org.conscrypt.ClientHello: int length>;

        if $i20 <= i0 goto label4;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHello: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect ClientHello");

     label4:
        $i21 = r0.<com.android.org.conscrypt.ClientHello: int length>;

        if $i21 >= i0 goto label5;

        $i27 = r0.<com.android.org.conscrypt.ClientHello: int length>;

        $i26 = i0 - $i27;

        $l25 = (long) $i26;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: long skip(long)>($l25);

        r0.<com.android.org.conscrypt.ClientHello: int length> = i0;

     label5:
        return;
    }

    public void <init>(java.security.SecureRandom, byte[], byte[], com.android.org.conscrypt.CipherSuite[])
    {
        com.android.org.conscrypt.ClientHello r0;
        java.security.SecureRandom r1;
        byte[] r2, r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        com.android.org.conscrypt.CipherSuite[] r4, $r13;
        long l0, $l1, $l2, $l5, $l9, $l12;
        int $i3, $i6, $i8, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        byte $b4, $b7, $b10, $b13;

        r0 := @this: com.android.org.conscrypt.ClientHello;

        r1 := @parameter0: java.security.SecureRandom;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        r4 := @parameter3: com.android.org.conscrypt.CipherSuite[];

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        $r5 = newarray (byte)[32];

        r0.<com.android.org.conscrypt.ClientHello: byte[] random> = $r5;

        r0.<com.android.org.conscrypt.ClientHello: byte[] client_version> = r2;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = $l1 / 1000L;

        $r6 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>($r6);

        $r7 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        $l2 = l0 & 255L;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        $r7[0] = $b4;

        $r8 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        $l5 = l0 & 255L;

        $i6 = (int) $l5;

        $b7 = (byte) $i6;

        $r8[1] = $b7;

        $r9 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        $l9 = l0 & 255L;

        $i8 = (int) $l9;

        $b10 = (byte) $i8;

        $r9[2] = $b10;

        $r10 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        $l12 = l0 & 255L;

        $i11 = (int) $l12;

        $b13 = (byte) $i11;

        $r10[3] = $b13;

        r0.<com.android.org.conscrypt.ClientHello: byte[] session_id> = r3;

        r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites> = r4;

        $r12 = newarray (byte)[1];

        $r12[0] = 0;

        r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods> = $r12;

        $r11 = r0.<com.android.org.conscrypt.ClientHello: byte[] session_id>;

        $i14 = lengthof $r11;

        $i19 = 38 + $i14;

        $r13 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $i16 = lengthof $r13;

        $i15 = $i16 << 1;

        $i18 = $i19 + $i15;

        $r14 = r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods>;

        $i17 = lengthof $r14;

        $i20 = $i18 + $i17;

        r0.<com.android.org.conscrypt.ClientHello: int length> = $i20;

        return;
    }

    public byte[] getRandom()
    {
        com.android.org.conscrypt.ClientHello r0;
        byte[] $r1;

        r0 := @this: com.android.org.conscrypt.ClientHello;

        $r1 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        return $r1;
    }

    public int getType()
    {
        com.android.org.conscrypt.ClientHello r0;

        r0 := @this: com.android.org.conscrypt.ClientHello;

        return 1;
    }

    public void send(com.android.org.conscrypt.HandshakeIODataStream)
    {
        com.android.org.conscrypt.ClientHello r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0, i1, $i2, $i4, $i5, $i7, $i8, $i10;
        byte[] $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r12;
        long $l3, $l6, $l9;
        com.android.org.conscrypt.CipherSuite[] $r6, $r7, $r11;
        byte $b11;
        com.android.org.conscrypt.CipherSuite $r13;

        r0 := @this: com.android.org.conscrypt.ClientHello;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        $r2 = r0.<com.android.org.conscrypt.ClientHello: byte[] client_version>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r2);

        $r3 = r0.<com.android.org.conscrypt.ClientHello: byte[] random>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r3);

        $r4 = r0.<com.android.org.conscrypt.ClientHello: byte[] session_id>;

        $i2 = lengthof $r4;

        $l3 = (long) $i2;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint8(long)>($l3);

        $r5 = r0.<com.android.org.conscrypt.ClientHello: byte[] session_id>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r5);

        $r6 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $i4 = lengthof $r6;

        $i5 = $i4 << 1;

        $l6 = (long) $i5;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint16(long)>($l6);

        i0 = 0;

     label1:
        $r7 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $i7 = lengthof $r7;

        if i0 >= $i7 goto label2;

        $r11 = r0.<com.android.org.conscrypt.ClientHello: com.android.org.conscrypt.CipherSuite[] cipher_suites>;

        $r13 = $r11[i0];

        $r12 = virtualinvoke $r13.<com.android.org.conscrypt.CipherSuite: byte[] toBytes()>();

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r12);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r8 = r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods>;

        $i8 = lengthof $r8;

        $l9 = (long) $i8;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint8(long)>($l9);

        i1 = 0;

     label3:
        $r9 = r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods>;

        $i10 = lengthof $r9;

        if i1 >= $i10 goto label4;

        $r10 = r0.<com.android.org.conscrypt.ClientHello: byte[] compression_methods>;

        $b11 = $r10[i1];

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte)>($b11);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }
}
