public class gov.nist.javax.sip.parser.Pipeline extends java.io.InputStream
{
    private java.util.LinkedList buffList;
    private gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer;
    private boolean isClosed;
    private java.util.TimerTask myTimerTask;
    private java.io.InputStream pipe;
    private int readTimeout;
    private java.util.Timer timer;

    public void <init>(java.io.InputStream, int, java.util.Timer)
    {
        gov.nist.javax.sip.parser.Pipeline r0;
        java.io.InputStream r1;
        int i0;
        java.util.Timer r2;
        java.util.LinkedList $r3;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Timer;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<gov.nist.javax.sip.parser.Pipeline: java.util.Timer timer> = r2;

        r0.<gov.nist.javax.sip.parser.Pipeline: java.io.InputStream pipe> = r1;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList> = $r3;

        r0.<gov.nist.javax.sip.parser.Pipeline: int readTimeout> = i0;

        return;
    }

    public void close() throws java.io.IOException
    {
        gov.nist.javax.sip.parser.Pipeline r0;
        java.util.LinkedList r1, $r3;
        java.lang.Throwable r2, $r5;
        java.io.InputStream $r4;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline;

        r0.<gov.nist.javax.sip.parser.Pipeline: boolean isClosed> = 1;

        r1 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        entermonitor r1;

     label1:
        $r3 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        $r4 = r0.<gov.nist.javax.sip.parser.Pipeline: java.io.InputStream pipe>;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int read() throws java.io.IOException
    {
        gov.nist.javax.sip.parser.Pipeline r0;
        java.util.LinkedList r1, $r6, $r7, $r13, $r14;
        java.lang.Throwable r2, $r26;
        java.util.NoSuchElementException r3, $r20;
        java.lang.InterruptedException r4, $r21;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, $z1, $z2, $z3;
        gov.nist.javax.sip.parser.Pipeline$Buffer $r5, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19;
        java.lang.Object $r8;
        java.io.IOException $r22, $r23;
        java.lang.String $r24, $r25;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline;

        r1 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        entermonitor r1;

     label01:
        $r5 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        if $r5 == null goto label04;

        $r16 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        $i4 = $r16.<gov.nist.javax.sip.parser.Pipeline$Buffer: int ptr>;

        $r15 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        $i5 = $r15.<gov.nist.javax.sip.parser.Pipeline$Buffer: int length>;

        if $i4 >= $i5 goto label04;

        $r19 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        i1 = virtualinvoke $r19.<gov.nist.javax.sip.parser.Pipeline$Buffer: int getNextByte()>();

        $r17 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        $i7 = $r17.<gov.nist.javax.sip.parser.Pipeline$Buffer: int ptr>;

        $r18 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        $i6 = $r18.<gov.nist.javax.sip.parser.Pipeline$Buffer: int length>;

        if $i7 != $i6 goto label02;

        r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer> = null;

     label02:
        exitmonitor r1;

     label03:
        return i1;

     label04:
        $z1 = r0.<gov.nist.javax.sip.parser.Pipeline: boolean isClosed>;

        if $z1 == 0 goto label09;

        $r14 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        $z3 = virtualinvoke $r14.<java.util.LinkedList: boolean isEmpty()>();

        if $z3 == 0 goto label09;

        exitmonitor r1;

     label05:
        return -1;

     label06:
        $r26 := @caughtexception;

        r2 = $r26;

     label07:
        exitmonitor r1;

     label08:
        throw r2;

     label09:
        $r6 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        $z2 = virtualinvoke $r6.<java.util.LinkedList: boolean isEmpty()>();

        if $z2 == 0 goto label13;

        $r13 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        virtualinvoke $r13.<java.lang.Object: void wait()>();

        z0 = r0.<gov.nist.javax.sip.parser.Pipeline: boolean isClosed>;

     label10:
        if z0 == 0 goto label09;

     label11:
        exitmonitor r1;

     label12:
        return -1;

     label13:
        $r7 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        $r8 = virtualinvoke $r7.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r9 = (gov.nist.javax.sip.parser.Pipeline$Buffer) $r8;

        r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer> = $r9;

        $r10 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        i0 = virtualinvoke $r10.<gov.nist.javax.sip.parser.Pipeline$Buffer: int getNextByte()>();

        $r12 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        $i2 = $r12.<gov.nist.javax.sip.parser.Pipeline$Buffer: int ptr>;

        $r11 = r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer>;

        $i3 = $r11.<gov.nist.javax.sip.parser.Pipeline$Buffer: int length>;

        if $i2 != $i3 goto label14;

        r0.<gov.nist.javax.sip.parser.Pipeline: gov.nist.javax.sip.parser.Pipeline$Buffer currentBuffer> = null;

     label14:
        exitmonitor r1;

     label15:
        return i0;

     label16:
        $r21 := @caughtexception;

        r4 = $r21;

     label17:
        $r22 = new java.io.IOException;

        $r25 = virtualinvoke r4.<java.lang.InterruptedException: java.lang.String getMessage()>();

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r25);

        throw $r22;

     label18:
        $r20 := @caughtexception;

        r3 = $r20;

     label19:
        virtualinvoke r3.<java.util.NoSuchElementException: void printStackTrace()>();

        $r23 = new java.io.IOException;

        $r24 = virtualinvoke r3.<java.util.NoSuchElementException: java.lang.String getMessage()>();

        specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label20:
        nop;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.InterruptedException from label09 to label10 with label16;
        catch java.util.NoSuchElementException from label09 to label10 with label18;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.InterruptedException from label13 to label14 with label16;
        catch java.util.NoSuchElementException from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
        catch java.lang.Throwable from label17 to label18 with label06;
        catch java.lang.Throwable from label19 to label20 with label06;
    }

    public void startTimer()
    {
        gov.nist.javax.sip.parser.Pipeline r0;
        int $i0, $i1;
        gov.nist.javax.sip.parser.Pipeline$MyTimer $r1;
        long $l2;
        java.util.TimerTask $r2;
        java.util.Timer $r3;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline;

        $i0 = r0.<gov.nist.javax.sip.parser.Pipeline: int readTimeout>;

        if $i0 != -1 goto label1;

        return;

     label1:
        $r1 = new gov.nist.javax.sip.parser.Pipeline$MyTimer;

        specialinvoke $r1.<gov.nist.javax.sip.parser.Pipeline$MyTimer: void <init>(gov.nist.javax.sip.parser.Pipeline,gov.nist.javax.sip.parser.Pipeline)>(r0, r0);

        r0.<gov.nist.javax.sip.parser.Pipeline: java.util.TimerTask myTimerTask> = $r1;

        $r3 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.Timer timer>;

        $r2 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.TimerTask myTimerTask>;

        $i1 = r0.<gov.nist.javax.sip.parser.Pipeline: int readTimeout>;

        $l2 = (long) $i1;

        virtualinvoke $r3.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r2, $l2);

        return;
    }

    public void stopTimer()
    {
        gov.nist.javax.sip.parser.Pipeline r0;
        int $i0;
        java.util.TimerTask $r1, $r2;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline;

        $i0 = r0.<gov.nist.javax.sip.parser.Pipeline: int readTimeout>;

        if $i0 != -1 goto label2;

     label1:
        return;

     label2:
        $r1 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.TimerTask myTimerTask>;

        if $r1 == null goto label1;

        $r2 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.TimerTask myTimerTask>;

        virtualinvoke $r2.<java.util.TimerTask: boolean cancel()>();

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        gov.nist.javax.sip.parser.Pipeline r0;
        byte[] r1;
        gov.nist.javax.sip.parser.Pipeline$Buffer r2, $r5;
        java.util.LinkedList r3, $r6, $r7;
        java.lang.Throwable r4, $r9;
        boolean $z0;
        int $i0;
        java.io.IOException $r8;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline;

        r1 := @parameter0: byte[];

        $z0 = r0.<gov.nist.javax.sip.parser.Pipeline: boolean isClosed>;

        if $z0 == 0 goto label1;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Closed!!");

        throw $r8;

     label1:
        $r5 = new gov.nist.javax.sip.parser.Pipeline$Buffer;

        $i0 = lengthof r1;

        specialinvoke $r5.<gov.nist.javax.sip.parser.Pipeline$Buffer: void <init>(gov.nist.javax.sip.parser.Pipeline,byte[],int)>(r0, r1, $i0);

        r2 = $r5;

        r3 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        entermonitor r3;

     label2:
        $r6 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        virtualinvoke $r6.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

        $r7 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor r3;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

     label5:
        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        gov.nist.javax.sip.parser.Pipeline r0;
        byte[] r1;
        int i0, i1;
        gov.nist.javax.sip.parser.Pipeline$Buffer r2, $r5;
        java.util.LinkedList r3, $r6, $r7;
        java.lang.Throwable r4, $r9;
        boolean $z0;
        java.io.IOException $r8;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<gov.nist.javax.sip.parser.Pipeline: boolean isClosed>;

        if $z0 == 0 goto label1;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Closed!!");

        throw $r8;

     label1:
        $r5 = new gov.nist.javax.sip.parser.Pipeline$Buffer;

        specialinvoke $r5.<gov.nist.javax.sip.parser.Pipeline$Buffer: void <init>(gov.nist.javax.sip.parser.Pipeline,byte[],int)>(r0, r1, i1);

        r2 = $r5;

        r2.<gov.nist.javax.sip.parser.Pipeline$Buffer: int ptr> = i0;

        r3 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        entermonitor r3;

     label2:
        $r6 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        virtualinvoke $r6.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

        $r7 = r0.<gov.nist.javax.sip.parser.Pipeline: java.util.LinkedList buffList>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor r3;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

     label5:
        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
