public class org.apache.http.conn.routing.BasicRouteDirector extends java.lang.Object implements org.apache.http.conn.routing.HttpRouteDirector
{

    public void <init>()
    {
        org.apache.http.conn.routing.BasicRouteDirector r0;

        r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected int directStep(org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo)
    {
        org.apache.http.conn.routing.BasicRouteDirector r0;
        org.apache.http.conn.routing.RouteInfo r1, r2;
        int $i0;
        org.apache.http.HttpHost $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        java.net.InetAddress $r5, $r6, $r7;

        r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        r1 := @parameter0: org.apache.http.conn.routing.RouteInfo;

        r2 := @parameter1: org.apache.http.conn.routing.RouteInfo;

        $i0 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i0 <= 1 goto label2;

     label1:
        return -1;

     label2:
        $r3 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>();

        $r4 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>();

        $z0 = virtualinvoke $r3.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>();

        $z2 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>();

        if $z1 != $z2 goto label1;

        $r5 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

        if $r5 == null goto label3;

        $r6 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

        $r7 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>();

        $z3 = virtualinvoke $r6.<java.net.InetAddress: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label1;

     label3:
        return 0;
    }

    protected int firstStep(org.apache.http.conn.routing.RouteInfo)
    {
        org.apache.http.conn.routing.BasicRouteDirector r0;
        org.apache.http.conn.routing.RouteInfo r1;
        byte b0;
        int $i1;

        r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        r1 := @parameter0: org.apache.http.conn.routing.RouteInfo;

        b0 = 1;

        $i1 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i1 <= b0 goto label1;

        b0 = 2;

     label1:
        return b0;
    }

    public int nextStep(org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo)
    {
        org.apache.http.conn.routing.BasicRouteDirector r0;
        org.apache.http.conn.routing.RouteInfo r1, r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        r1 := @parameter0: org.apache.http.conn.routing.RouteInfo;

        r2 := @parameter1: org.apache.http.conn.routing.RouteInfo;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Planned route may not be null.");

        throw $r3;

     label1:
        if r2 == null goto label2;

        $i1 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i1 >= 1 goto label3;

     label2:
        $i0 = virtualinvoke r0.<org.apache.http.conn.routing.BasicRouteDirector: int firstStep(org.apache.http.conn.routing.RouteInfo)>(r1);

        return $i0;

     label3:
        $i2 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i2 <= 1 goto label4;

        $i4 = virtualinvoke r0.<org.apache.http.conn.routing.BasicRouteDirector: int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>(r1, r2);

        return $i4;

     label4:
        $i3 = virtualinvoke r0.<org.apache.http.conn.routing.BasicRouteDirector: int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>(r1, r2);

        return $i3;
    }

    protected int proxiedStep(org.apache.http.conn.routing.RouteInfo, org.apache.http.conn.routing.RouteInfo)
    {
        org.apache.http.conn.routing.BasicRouteDirector r0;
        org.apache.http.conn.routing.RouteInfo r1, r2;
        int i0, i1, i2, $i3, $i4;
        org.apache.http.HttpHost $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;

        r0 := @this: org.apache.http.conn.routing.BasicRouteDirector;

        r1 := @parameter0: org.apache.http.conn.routing.RouteInfo;

        r2 := @parameter1: org.apache.http.conn.routing.RouteInfo;

        $i3 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if $i3 > 1 goto label2;

     label1:
        return -1;

     label2:
        $r3 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>();

        $r4 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>();

        $z0 = virtualinvoke $r3.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        i0 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        i1 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: int getHopCount()>();

        if i0 < i1 goto label1;

        i2 = 0;

     label3:
        $i4 = i1 - 1;

        if i2 >= $i4 goto label4;

        $r5 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getHopTarget(int)>(i2);

        $r6 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getHopTarget(int)>(i2);

        $z11 = virtualinvoke $r5.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r6);

        if $z11 == 0 goto label1;

        i2 = i2 + 1;

        goto label3;

     label4:
        if i0 <= i1 goto label5;

        return 4;

     label5:
        $z1 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>();

        if $z1 == 0 goto label6;

        $z10 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>();

        if $z10 == 0 goto label1;

     label6:
        $z2 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>();

        if $z2 == 0 goto label7;

        $z8 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>();

        if $z8 == 0 goto label1;

     label7:
        $z3 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>();

        if $z3 == 0 goto label8;

        $z9 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>();

        if $z9 != 0 goto label8;

        return 3;

     label8:
        $z5 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>();

        if $z5 == 0 goto label9;

        $z6 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>();

        if $z6 != 0 goto label9;

        return 5;

     label9:
        $z4 = interfaceinvoke r1.<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>();

        $z7 = interfaceinvoke r2.<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>();

        if $z4 != $z7 goto label1;

        return 0;
    }
}
