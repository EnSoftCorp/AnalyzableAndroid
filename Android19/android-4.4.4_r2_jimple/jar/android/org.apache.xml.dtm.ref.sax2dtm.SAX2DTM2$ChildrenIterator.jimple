public final class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase
{
    final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator r0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        return;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator r0;
        int i0, i1, $i2, $i3, $i4;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r2;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator;

        i0 = -1;

        $i2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: int _currentNode>;

        if $i2 == i0 goto label1;

        i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: int _currentNode>;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i3 = virtualinvoke $r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _nextsib2(int)>(i1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: int _currentNode> = $i3;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i4 = virtualinvoke $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeHandle(int)>(i1);

        i0 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: int returnNode(int)>($i4);

     label1:
        return i0;
    }

    public org.apache.xml.dtm.DTMAxisIterator setStartNode(int)
    {
        org.apache.xml.dtm.DTMAxisIterator r0;
        int i0, i1, $i2;
        boolean $z0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r2, $r3;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator r4, r5, r6, r7, r8, r9, r10;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator;

        i0 := @parameter0: int;

        i1 = -1;

        if i0 != 0 goto label1;

        r4 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator) r0;

        $r3 = r4.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i0 = virtualinvoke $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getDocument()>();

     label1:
        r5 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator) r0;

        $z0 = r5.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: boolean _isRestartable>;

        if $z0 == 0 goto label3;

        r6 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator) r0;

        r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: int _startNode> = i0;

        if i0 != i1 goto label4;

     label2:
        r7 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator) r0;

        r7.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: int _currentNode> = i1;

        r8 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator) r0;

        r0 = virtualinvoke r8.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

     label3:
        return r0;

     label4:
        r9 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator) r0;

        $r2 = r9.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        r10 = (org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator) r0;

        $r1 = r10.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ChildrenIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeIdentity(int)>(i0);

        i1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _firstch2(int)>($i2);

        goto label2;
    }
}
