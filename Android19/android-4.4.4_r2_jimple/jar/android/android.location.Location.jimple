public class android.location.Location extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final java.lang.String EXTRA_COARSE_LOCATION;
    public static final java.lang.String EXTRA_NO_GPS_LOCATION;
    public static final int FORMAT_DEGREES;
    public static final int FORMAT_MINUTES;
    public static final int FORMAT_SECONDS;
    private float mAccuracy;
    private double mAltitude;
    private float mBearing;
    private float mDistance;
    private long mElapsedRealtimeNanos;
    private android.os.Bundle mExtras;
    private boolean mHasAccuracy;
    private boolean mHasAltitude;
    private boolean mHasBearing;
    private boolean mHasSpeed;
    private float mInitialBearing;
    private boolean mIsFromMockProvider;
    private double mLat1;
    private double mLat2;
    private double mLatitude;
    private double mLon1;
    private double mLon2;
    private double mLongitude;
    private java.lang.String mProvider;
    private final float[] mResults;
    private float mSpeed;
    private long mTime;

    static void <clinit>()
    {
        android.location.Location$1 $r0;

        <android.location.Location: int FORMAT_SECONDS> = 2;

        <android.location.Location: int FORMAT_MINUTES> = 1;

        <android.location.Location: int FORMAT_DEGREES> = 0;

        <android.location.Location: java.lang.String EXTRA_NO_GPS_LOCATION> = "noGPSLocation";

        <android.location.Location: java.lang.String EXTRA_COARSE_LOCATION> = "coarseLocation";

        $r0 = new android.location.Location$1;

        specialinvoke $r0.<android.location.Location$1: void <init>()>();

        <android.location.Location: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.location.Location)
    {
        android.location.Location r0, r1;
        float[] $r2;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.location.Location;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.Location: long mTime> = 0L;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = 0L;

        r0.<android.location.Location: double mLatitude> = 0.0;

        r0.<android.location.Location: double mLongitude> = 0.0;

        r0.<android.location.Location: boolean mHasAltitude> = 0;

        r0.<android.location.Location: double mAltitude> = 0.0;

        r0.<android.location.Location: boolean mHasSpeed> = 0;

        r0.<android.location.Location: float mSpeed> = 0.0F;

        r0.<android.location.Location: boolean mHasBearing> = 0;

        r0.<android.location.Location: float mBearing> = 0.0F;

        r0.<android.location.Location: boolean mHasAccuracy> = 0;

        r0.<android.location.Location: float mAccuracy> = 0.0F;

        r0.<android.location.Location: android.os.Bundle mExtras> = null;

        r0.<android.location.Location: boolean mIsFromMockProvider> = 0;

        r0.<android.location.Location: double mLat1> = 0.0;

        r0.<android.location.Location: double mLon1> = 0.0;

        r0.<android.location.Location: double mLat2> = 0.0;

        r0.<android.location.Location: double mLon2> = 0.0;

        r0.<android.location.Location: float mDistance> = 0.0F;

        r0.<android.location.Location: float mInitialBearing> = 0.0F;

        $r2 = newarray (float)[2];

        r0.<android.location.Location: float[] mResults> = $r2;

        virtualinvoke r0.<android.location.Location: void set(android.location.Location)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        android.location.Location r0;
        java.lang.String r1;
        float[] $r2;

        r0 := @this: android.location.Location;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.Location: long mTime> = 0L;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = 0L;

        r0.<android.location.Location: double mLatitude> = 0.0;

        r0.<android.location.Location: double mLongitude> = 0.0;

        r0.<android.location.Location: boolean mHasAltitude> = 0;

        r0.<android.location.Location: double mAltitude> = 0.0;

        r0.<android.location.Location: boolean mHasSpeed> = 0;

        r0.<android.location.Location: float mSpeed> = 0.0F;

        r0.<android.location.Location: boolean mHasBearing> = 0;

        r0.<android.location.Location: float mBearing> = 0.0F;

        r0.<android.location.Location: boolean mHasAccuracy> = 0;

        r0.<android.location.Location: float mAccuracy> = 0.0F;

        r0.<android.location.Location: android.os.Bundle mExtras> = null;

        r0.<android.location.Location: boolean mIsFromMockProvider> = 0;

        r0.<android.location.Location: double mLat1> = 0.0;

        r0.<android.location.Location: double mLon1> = 0.0;

        r0.<android.location.Location: double mLat2> = 0.0;

        r0.<android.location.Location: double mLon2> = 0.0;

        r0.<android.location.Location: float mDistance> = 0.0F;

        r0.<android.location.Location: float mInitialBearing> = 0.0F;

        $r2 = newarray (float)[2];

        r0.<android.location.Location: float[] mResults> = $r2;

        r0.<android.location.Location: java.lang.String mProvider> = r1;

        return;
    }

    static long access$002(android.location.Location, long)
    {
        android.location.Location r0;
        long l0;

        r0 := @parameter0: android.location.Location;

        l0 := @parameter1: long;

        r0.<android.location.Location: long mTime> = l0;

        return l0;
    }

    static boolean access$1002(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mHasAccuracy> = z0;

        return z0;
    }

    static long access$102(android.location.Location, long)
    {
        android.location.Location r0;
        long l0;

        r0 := @parameter0: android.location.Location;

        l0 := @parameter1: long;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = l0;

        return l0;
    }

    static float access$1102(android.location.Location, float)
    {
        android.location.Location r0;
        float f0;

        r0 := @parameter0: android.location.Location;

        f0 := @parameter1: float;

        r0.<android.location.Location: float mAccuracy> = f0;

        return f0;
    }

    static android.os.Bundle access$1202(android.location.Location, android.os.Bundle)
    {
        android.location.Location r0;
        android.os.Bundle r1;

        r0 := @parameter0: android.location.Location;

        r1 := @parameter1: android.os.Bundle;

        r0.<android.location.Location: android.os.Bundle mExtras> = r1;

        return r1;
    }

    static boolean access$1302(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mIsFromMockProvider> = z0;

        return z0;
    }

    static double access$202(android.location.Location, double)
    {
        android.location.Location r0;
        double d0;

        r0 := @parameter0: android.location.Location;

        d0 := @parameter1: double;

        r0.<android.location.Location: double mLatitude> = d0;

        return d0;
    }

    static double access$302(android.location.Location, double)
    {
        android.location.Location r0;
        double d0;

        r0 := @parameter0: android.location.Location;

        d0 := @parameter1: double;

        r0.<android.location.Location: double mLongitude> = d0;

        return d0;
    }

    static boolean access$402(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mHasAltitude> = z0;

        return z0;
    }

    static double access$502(android.location.Location, double)
    {
        android.location.Location r0;
        double d0;

        r0 := @parameter0: android.location.Location;

        d0 := @parameter1: double;

        r0.<android.location.Location: double mAltitude> = d0;

        return d0;
    }

    static boolean access$602(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mHasSpeed> = z0;

        return z0;
    }

    static float access$702(android.location.Location, float)
    {
        android.location.Location r0;
        float f0;

        r0 := @parameter0: android.location.Location;

        f0 := @parameter1: float;

        r0.<android.location.Location: float mSpeed> = f0;

        return f0;
    }

    static boolean access$802(android.location.Location, boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @parameter0: android.location.Location;

        z0 := @parameter1: boolean;

        r0.<android.location.Location: boolean mHasBearing> = z0;

        return z0;
    }

    static float access$902(android.location.Location, float)
    {
        android.location.Location r0;
        float f0;

        r0 := @parameter0: android.location.Location;

        f0 := @parameter1: float;

        r0.<android.location.Location: float mBearing> = f0;

        return f0;
    }

    private static void computeDistanceAndBearing(double, double, double, double, float[])
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, d23, d24, d25, d26, d27, d28, d29, d30, d31, d32, d33, d34, $d35, $d36, $d37, $d38, d39, d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132;
        float[] r0;
        int i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4;
        byte $b3, $b4, $b5;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r0 := @parameter4: float[];

        d4 = d0 * 0.017453292519943295;

        d5 = d2 * 0.017453292519943295;

        d6 = d1 * 0.017453292519943295;

        d7 = d3 * 0.017453292519943295;

        $d35 = 6378137.0 - 6356752.3142;

        d8 = $d35 / 6378137.0;

        $d37 = 6378137.0 * 6378137.0;

        $d36 = 6356752.3142 * 6356752.3142;

        $d45 = $d37 - $d36;

        $d38 = 6356752.3142 * 6356752.3142;

        d9 = $d45 / $d38;

        d10 = d7 - d6;

        d11 = 0.0;

        $d44 = 1.0 - d8;

        $d47 = staticinvoke <java.lang.Math: double tan(double)>(d4);

        $d46 = $d44 * $d47;

        d12 = staticinvoke <java.lang.Math: double atan(double)>($d46);

        $d41 = 1.0 - d8;

        $d43 = staticinvoke <java.lang.Math: double tan(double)>(d5);

        $d42 = $d41 * $d43;

        d13 = staticinvoke <java.lang.Math: double atan(double)>($d42);

        d14 = staticinvoke <java.lang.Math: double cos(double)>(d12);

        d15 = staticinvoke <java.lang.Math: double cos(double)>(d13);

        d17 = staticinvoke <java.lang.Math: double sin(double)>(d12);

        d16 = staticinvoke <java.lang.Math: double sin(double)>(d13);

        d19 = d14 * d15;

        d18 = d17 * d16;

        d21 = 0.0;

        d20 = 0.0;

        d23 = 0.0;

        d22 = 0.0;

        d24 = d10;

        i0 = 0;

     label1:
        if i0 >= 20 goto label4;

        d26 = d24;

        d23 = staticinvoke <java.lang.Math: double cos(double)>(d24);

        d22 = staticinvoke <java.lang.Math: double sin(double)>(d24);

        d25 = d15 * d22;

        $d78 = d14 * d16;

        $d67 = d17 * d15;

        $d66 = d23 * $d67;

        d28 = $d78 - $d66;

        $d80 = d25 * d25;

        $d77 = d28 * d28;

        $d79 = $d80 + $d77;

        d27 = staticinvoke <java.lang.Math: double sqrt(double)>($d79);

        $d81 = d19 * d23;

        d30 = d18 + $d81;

        d21 = staticinvoke <java.lang.Math: double atan2(double,double)>(d27, d30);

        $b4 = d27 cmpl 0.0;

        if $b4 != 0 goto label6;

        d29 = 0.0;

     label2:
        $d70 = d29 * d29;

        d33 = 1.0 - $d70;

        $b3 = d33 cmpl 0.0;

        if $b3 != 0 goto label7;

        d34 = 0.0;

     label3:
        d31 = d33 * d9;

        $d93 = d31 / 16384.0;

        $d73 = 175.0 * d31;

        $d76 = 320.0 - $d73;

        $d75 = d31 * $d76;

        $d90 = -768.0 + $d75;

        $d91 = d31 * $d90;

        $d92 = 4096.0 + $d91;

        $d94 = $d93 * $d92;

        d11 = 1.0 + $d94;

        $d85 = d31 / 1024.0;

        $d95 = 47.0 * d31;

        $d96 = 74.0 - $d95;

        $d97 = d31 * $d96;

        $d82 = -128.0 + $d97;

        $d83 = d31 * $d82;

        $d84 = 256.0 + $d83;

        d32 = $d85 * $d84;

        $d86 = d8 / 16.0;

        $d108 = d33 * $d86;

        $d87 = 3.0 * d33;

        $d88 = 4.0 - $d87;

        $d89 = d8 * $d88;

        $d109 = 4.0 + $d89;

        d39 = $d108 * $d109;

        d40 = d34 * d34;

        $d122 = d32 * d27;

        $d102 = d32 / 4.0;

        $d107 = 2.0 * d40;

        $d106 = -1.0 + $d107;

        $d104 = d30 * $d106;

        $d113 = d32 / 6.0;

        $d101 = d34 * $d113;

        $d112 = 4.0 * d27;

        $d111 = d27 * $d112;

        $d110 = -3.0 + $d111;

        $d98 = $d101 * $d110;

        $d100 = 4.0 * d40;

        $d99 = -3.0 + $d100;

        $d105 = $d98 * $d99;

        $d103 = $d104 - $d105;

        $d124 = $d102 * $d103;

        $d125 = d34 + $d124;

        d20 = $d122 * $d125;

        $d123 = 1.0 - d39;

        $d128 = d8 * $d123;

        $d118 = d29 * $d128;

        $d115 = d39 * d27;

        $d116 = d39 * d30;

        $d129 = 2.0 * d34;

        $d126 = d34 * $d129;

        $d127 = -1.0 + $d126;

        $d117 = $d116 * $d127;

        $d114 = d34 + $d117;

        $d120 = $d115 * $d114;

        $d121 = d21 + $d120;

        $d119 = $d118 * $d121;

        d24 = d10 + $d119;

        $d131 = d24 - d26;

        $d130 = $d131 / d24;

        $d132 = staticinvoke <java.lang.Math: double abs(double)>($d130);

        $b5 = $d132 cmpg 1.0E-12;

        if $b5 >= 0 goto label8;

     label4:
        $d50 = 6356752.3142 * d11;

        $d48 = d21 - d20;

        $d49 = $d50 * $d48;

        $f0 = (float) $d49;

        r0[0] = $f0;

        $i1 = lengthof r0;

        if $i1 <= 1 goto label5;

        $d51 = d15 * d22;

        $d52 = d14 * d16;

        $d54 = d17 * d15;

        $d55 = d23 * $d54;

        $d53 = $d52 - $d55;

        $d59 = staticinvoke <java.lang.Math: double atan2(double,double)>($d51, $d53);

        $f2 = (float) $d59;

        $d58 = (double) $f2;

        $d57 = 57.29577951308232 * $d58;

        $f1 = (float) $d57;

        r0[1] = $f1;

        $i2 = lengthof r0;

        if $i2 <= 2 goto label5;

        $d61 = d14 * d22;

        $d56 = neg d17;

        $d63 = d15 * $d56;

        $d65 = d14 * d16;

        $d64 = d23 * $d65;

        $d62 = $d63 + $d64;

        $d60 = staticinvoke <java.lang.Math: double atan2(double,double)>($d61, $d62);

        $f4 = (float) $d60;

        $d69 = (double) $f4;

        $d68 = 57.29577951308232 * $d69;

        $f3 = (float) $d68;

        r0[2] = $f3;

     label5:
        return;

     label6:
        $d71 = d19 * d22;

        d29 = $d71 / d27;

        goto label2;

     label7:
        $d72 = 2.0 * d18;

        $d74 = $d72 / d33;

        d34 = d30 - $d74;

        goto label3;

     label8:
        i0 = i0 + 1;

        goto label1;
    }

    public static double convert(java.lang.String)
    {
        java.lang.String r0, r3, r4, $r12, $r13, $r20, $r21, $r30, $r33;
        char c0;
        boolean z0, z1, $z2;
        java.util.StringTokenizer r1, $r5;
        int i1, i2, $i8;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        byte $b3, $b4, $b5, $b6, $b7, $b9, $b10;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r14, $r15, $r16, $r17, $r19, $r22, $r23, $r24, $r27, $r28, $r29;
        java.lang.IllegalArgumentException $r7, $r10, $r18, $r25, $r26;
        java.lang.NullPointerException $r31;
        java.lang.NumberFormatException $r32;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $r31 = new java.lang.NullPointerException;

        specialinvoke $r31.<java.lang.NullPointerException: void <init>(java.lang.String)>("coordinate");

        throw $r31;

     label01:
        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        z0 = 0;

        if c0 != 45 goto label02;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        z0 = 1;

     label02:
        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ":");

        r1 = $r5;

        i1 = virtualinvoke r1.<java.util.StringTokenizer: int countTokens()>();

        if i1 >= 1 goto label03;

        $r25 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r30 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r25;

     label03:
        r3 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label04:
        if i1 != 1 goto label07;

     label05:
        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

     label06:
        if z0 == 0 goto label19;

        $d11 = neg d0;

        return $d11;

     label07:
        r4 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label08:
        d1 = 0.0;

     label09:
        $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label13;

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        d2 = (double) $i8;

        $r21 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r21);

     label10:
        goto label20;

     label11:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label12:
        $r32 := @caughtexception;

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33);

        throw $r26;

     label13:
        d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r4);

     label14:
        goto label20;

     label15:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label16:
        $r18 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r18;

     label17:
        $d5 = (double) i2;

        $d8 = 3600.0 * $d5;

        $d9 = 60.0 * d2;

        $d7 = $d8 + $d9;

        $d6 = d1 + $d7;

        d3 = $d6 / 3600.0;

        if z0 == 0 goto label18;

        $d10 = neg d3;

        return $d10;

     label18:
        return d3;

     label19:
        return d0;

     label20:
        if z0 == 0 goto label22;

        if i2 != 180 goto label22;

        $b10 = d2 cmpl 0.0;

        if $b10 != 0 goto label22;

        $b9 = d1 cmpl 0.0;

        if $b9 != 0 goto label22;

        z1 = 1;

     label21:
        $d4 = (double) i2;

        $b3 = $d4 cmpg 0.0;

        if $b3 < 0 goto label11;

        if i2 <= 179 goto label23;

        if z1 != 0 goto label23;

        goto label11;

     label22:
        z1 = 0;

        goto label21;

     label23:
        $b4 = d2 cmpg 0.0;

        if $b4 < 0 goto label15;

        $b5 = d2 cmpl 59.0;

        if $b5 <= 0 goto label24;

        goto label15;

     label24:
        $b6 = d1 cmpg 0.0;

        if $b6 < 0 goto label16;

        $b7 = d1 cmpl 59.0;

        if $b7 <= 0 goto label17;

        goto label16;

        catch java.lang.NumberFormatException from label03 to label04 with label12;
        catch java.lang.NumberFormatException from label05 to label06 with label12;
        catch java.lang.NumberFormatException from label07 to label08 with label12;
        catch java.lang.NumberFormatException from label09 to label10 with label12;
        catch java.lang.NumberFormatException from label11 to label12 with label12;
        catch java.lang.NumberFormatException from label13 to label14 with label12;
        catch java.lang.NumberFormatException from label15 to label16 with label12;
        catch java.lang.NumberFormatException from label16 to label17 with label12;
    }

    public static java.lang.String convert(double, int)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        int i0, i1, i2;
        java.lang.StringBuilder r0, $r3, $r4, $r5, $r7, $r18, $r20, $r21;
        java.text.DecimalFormat r1, $r8;
        byte $b3, $b4, $b5;
        java.lang.IllegalArgumentException $r2, $r17;
        java.lang.String $r6, $r12, $r13, $r19;
        boolean $z0;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $b3 = d0 cmpg -180.0;

        if $b3 < 0 goto label1;

        $b4 = d0 cmpl 180.0;

        if $b4 > 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 == 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinate=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        if i0 == 0 goto label3;

        if i0 == 1 goto label3;

        if i0 == 2 goto label3;

        $r17 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("outputType=");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r17;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r0 = $r7;

        $b5 = d0 cmpg 0.0;

        if $b5 >= 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        d0 = neg d0;

     label4:
        $r8 = new java.text.DecimalFormat;

        specialinvoke $r8.<java.text.DecimalFormat: void <init>(java.lang.String)>("###.#####");

        r1 = $r8;

        if i0 == 1 goto label5;

        if i0 != 2 goto label6;

     label5:
        $d1 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        i1 = (int) $d1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $d3 = (double) i1;

        $d2 = d0 - $d3;

        d0 = 60.0 * $d2;

        if i0 != 2 goto label6;

        $d4 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        i2 = (int) $d4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $d5 = (double) i2;

        $d6 = d0 - $d5;

        d0 = 60.0 * $d6;

     label6:
        $r12 = virtualinvoke r1.<java.text.DecimalFormat: java.lang.String format(double)>(d0);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static void distanceBetween(double, double, double, double, float[])
    {
        double d0, d1, d2, d3;
        float[] r0;
        java.lang.IllegalArgumentException $r1;
        int $i0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r0 := @parameter4: float[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 >= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("results is null or has length < 1");

        throw $r1;

     label2:
        staticinvoke <android.location.Location: void computeDistanceAndBearing(double,double,double,double,float[])>(d0, d1, d2, d3, r0);

        return;
    }

    public float bearingTo(android.location.Location)
    {
        android.location.Location r0, r1;
        float[] r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;
        float f0, $f1, $f2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.location.Location;

        r2 = r0.<android.location.Location: float[] mResults>;

        entermonitor r2;

     label1:
        $d1 = r0.<android.location.Location: double mLatitude>;

        $d0 = r0.<android.location.Location: double mLat1>;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label2;

        $d11 = r0.<android.location.Location: double mLongitude>;

        $d10 = r0.<android.location.Location: double mLon1>;

        $b1 = $d11 cmpl $d10;

        if $b1 != 0 goto label2;

        $d12 = r1.<android.location.Location: double mLatitude>;

        $d13 = r0.<android.location.Location: double mLat2>;

        $b2 = $d12 cmpl $d13;

        if $b2 != 0 goto label2;

        $d15 = r1.<android.location.Location: double mLongitude>;

        $d14 = r0.<android.location.Location: double mLon2>;

        $b3 = $d15 cmpl $d14;

        if $b3 == 0 goto label3;

     label2:
        $d5 = r0.<android.location.Location: double mLatitude>;

        $d4 = r0.<android.location.Location: double mLongitude>;

        $d3 = r1.<android.location.Location: double mLatitude>;

        $d2 = r1.<android.location.Location: double mLongitude>;

        $r4 = r0.<android.location.Location: float[] mResults>;

        staticinvoke <android.location.Location: void computeDistanceAndBearing(double,double,double,double,float[])>($d5, $d4, $d3, $d2, $r4);

        $d6 = r0.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLat1> = $d6;

        $d7 = r0.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLon1> = $d7;

        $d9 = r1.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLat2> = $d9;

        $d8 = r1.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLon2> = $d8;

        $r5 = r0.<android.location.Location: float[] mResults>;

        $f1 = $r5[0];

        r0.<android.location.Location: float mDistance> = $f1;

        $r6 = r0.<android.location.Location: float[] mResults>;

        $f2 = $r6[1];

        r0.<android.location.Location: float mInitialBearing> = $f2;

     label3:
        f0 = r0.<android.location.Location: float mInitialBearing>;

        exitmonitor r2;

     label4:
        return f0;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int describeContents()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        return 0;
    }

    public float distanceTo(android.location.Location)
    {
        android.location.Location r0, r1;
        float[] r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;
        float f0, $f1, $f2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.location.Location;

        r2 = r0.<android.location.Location: float[] mResults>;

        entermonitor r2;

     label1:
        $d1 = r0.<android.location.Location: double mLatitude>;

        $d0 = r0.<android.location.Location: double mLat1>;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label2;

        $d11 = r0.<android.location.Location: double mLongitude>;

        $d10 = r0.<android.location.Location: double mLon1>;

        $b1 = $d11 cmpl $d10;

        if $b1 != 0 goto label2;

        $d12 = r1.<android.location.Location: double mLatitude>;

        $d13 = r0.<android.location.Location: double mLat2>;

        $b2 = $d12 cmpl $d13;

        if $b2 != 0 goto label2;

        $d15 = r1.<android.location.Location: double mLongitude>;

        $d14 = r0.<android.location.Location: double mLon2>;

        $b3 = $d15 cmpl $d14;

        if $b3 == 0 goto label3;

     label2:
        $d5 = r0.<android.location.Location: double mLatitude>;

        $d4 = r0.<android.location.Location: double mLongitude>;

        $d3 = r1.<android.location.Location: double mLatitude>;

        $d2 = r1.<android.location.Location: double mLongitude>;

        $r4 = r0.<android.location.Location: float[] mResults>;

        staticinvoke <android.location.Location: void computeDistanceAndBearing(double,double,double,double,float[])>($d5, $d4, $d3, $d2, $r4);

        $d6 = r0.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLat1> = $d6;

        $d7 = r0.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLon1> = $d7;

        $d9 = r1.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLat2> = $d9;

        $d8 = r1.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLon2> = $d8;

        $r5 = r0.<android.location.Location: float[] mResults>;

        $f1 = $r5[0];

        r0.<android.location.Location: float mDistance> = $f1;

        $r6 = r0.<android.location.Location: float[] mResults>;

        $f2 = $r6[1];

        r0.<android.location.Location: float mInitialBearing> = $f2;

     label3:
        f0 = r0.<android.location.Location: float mDistance>;

        exitmonitor r2;

     label4:
        return f0;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void dump(android.util.Printer, java.lang.String)
    {
        android.location.Location r0;
        android.util.Printer r1;
        java.lang.String r2, $r5, $r7;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.util.Printer;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke r0.<android.location.Location: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<android.util.Printer: void println(java.lang.String)>($r7);

        return;
    }

    public float getAccuracy()
    {
        android.location.Location r0;
        float $f0;

        r0 := @this: android.location.Location;

        $f0 = r0.<android.location.Location: float mAccuracy>;

        return $f0;
    }

    public double getAltitude()
    {
        android.location.Location r0;
        double $d0;

        r0 := @this: android.location.Location;

        $d0 = r0.<android.location.Location: double mAltitude>;

        return $d0;
    }

    public float getBearing()
    {
        android.location.Location r0;
        float $f0;

        r0 := @this: android.location.Location;

        $f0 = r0.<android.location.Location: float mBearing>;

        return $f0;
    }

    public long getElapsedRealtimeNanos()
    {
        android.location.Location r0;
        long $l0;

        r0 := @this: android.location.Location;

        $l0 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        return $l0;
    }

    public android.location.Location getExtraLocation(java.lang.String)
    {
        android.location.Location r0, $r5;
        java.lang.String r1;
        android.os.Parcelable r2;
        android.os.Bundle $r3, $r4;
        boolean $z0;

        r0 := @this: android.location.Location;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.location.Location: android.os.Bundle mExtras>;

        if $r3 == null goto label1;

        $r4 = r0.<android.location.Location: android.os.Bundle mExtras>;

        r2 = virtualinvoke $r4.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>(r1);

        $z0 = r2 instanceof android.location.Location;

        if $z0 == 0 goto label1;

        $r5 = (android.location.Location) r2;

        return $r5;

     label1:
        return null;
    }

    public android.os.Bundle getExtras()
    {
        android.location.Location r0;
        android.os.Bundle $r1;

        r0 := @this: android.location.Location;

        $r1 = r0.<android.location.Location: android.os.Bundle mExtras>;

        return $r1;
    }

    public double getLatitude()
    {
        android.location.Location r0;
        double $d0;

        r0 := @this: android.location.Location;

        $d0 = r0.<android.location.Location: double mLatitude>;

        return $d0;
    }

    public double getLongitude()
    {
        android.location.Location r0;
        double $d0;

        r0 := @this: android.location.Location;

        $d0 = r0.<android.location.Location: double mLongitude>;

        return $d0;
    }

    public java.lang.String getProvider()
    {
        android.location.Location r0;
        java.lang.String $r1;

        r0 := @this: android.location.Location;

        $r1 = r0.<android.location.Location: java.lang.String mProvider>;

        return $r1;
    }

    public float getSpeed()
    {
        android.location.Location r0;
        float $f0;

        r0 := @this: android.location.Location;

        $f0 = r0.<android.location.Location: float mSpeed>;

        return $f0;
    }

    public long getTime()
    {
        android.location.Location r0;
        long $l0;

        r0 := @this: android.location.Location;

        $l0 = r0.<android.location.Location: long mTime>;

        return $l0;
    }

    public boolean hasAccuracy()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mHasAccuracy>;

        return $z0;
    }

    public boolean hasAltitude()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mHasAltitude>;

        return $z0;
    }

    public boolean hasBearing()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mHasBearing>;

        return $z0;
    }

    public boolean hasSpeed()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mHasSpeed>;

        return $z0;
    }

    public boolean isComplete()
    {
        android.location.Location r0;
        java.lang.String $r1;
        boolean $z0;
        long $l0, $l2;
        byte $b1, $b3;

        r0 := @this: android.location.Location;

        $r1 = r0.<android.location.Location: java.lang.String mProvider>;

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        $z0 = r0.<android.location.Location: boolean mHasAccuracy>;

        if $z0 == 0 goto label1;

        $l0 = r0.<android.location.Location: long mTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        return 1;
    }

    public boolean isFromMockProvider()
    {
        android.location.Location r0;
        boolean $z0;

        r0 := @this: android.location.Location;

        $z0 = r0.<android.location.Location: boolean mIsFromMockProvider>;

        return $z0;
    }

    public void makeComplete()
    {
        android.location.Location r0;
        java.lang.String $r1;
        boolean $z0;
        long $l0, $l2, $l4, $l5;
        byte $b1, $b3;

        r0 := @this: android.location.Location;

        $r1 = r0.<android.location.Location: java.lang.String mProvider>;

        if $r1 != null goto label1;

        r0.<android.location.Location: java.lang.String mProvider> = "?";

     label1:
        $z0 = r0.<android.location.Location: boolean mHasAccuracy>;

        if $z0 != 0 goto label2;

        r0.<android.location.Location: boolean mHasAccuracy> = 1;

        r0.<android.location.Location: float mAccuracy> = 100.0F;

     label2:
        $l0 = r0.<android.location.Location: long mTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label3;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<android.location.Location: long mTime> = $l5;

     label3:
        $l2 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label4;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        r0.<android.location.Location: long mElapsedRealtimeNanos> = $l4;

     label4:
        return;
    }

    public void removeAccuracy()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: float mAccuracy> = 0.0F;

        r0.<android.location.Location: boolean mHasAccuracy> = 0;

        return;
    }

    public void removeAltitude()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: double mAltitude> = 0.0;

        r0.<android.location.Location: boolean mHasAltitude> = 0;

        return;
    }

    public void removeBearing()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: float mBearing> = 0.0F;

        r0.<android.location.Location: boolean mHasBearing> = 0;

        return;
    }

    public void removeSpeed()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: float mSpeed> = 0.0F;

        r0.<android.location.Location: boolean mHasSpeed> = 0;

        return;
    }

    public void reset()
    {
        android.location.Location r0;

        r0 := @this: android.location.Location;

        r0.<android.location.Location: java.lang.String mProvider> = null;

        r0.<android.location.Location: long mTime> = 0L;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = 0L;

        r0.<android.location.Location: double mLatitude> = 0.0;

        r0.<android.location.Location: double mLongitude> = 0.0;

        r0.<android.location.Location: boolean mHasAltitude> = 0;

        r0.<android.location.Location: double mAltitude> = 0.0;

        r0.<android.location.Location: boolean mHasSpeed> = 0;

        r0.<android.location.Location: float mSpeed> = 0.0F;

        r0.<android.location.Location: boolean mHasBearing> = 0;

        r0.<android.location.Location: float mBearing> = 0.0F;

        r0.<android.location.Location: boolean mHasAccuracy> = 0;

        r0.<android.location.Location: float mAccuracy> = 0.0F;

        r0.<android.location.Location: android.os.Bundle mExtras> = null;

        r0.<android.location.Location: boolean mIsFromMockProvider> = 0;

        return;
    }

    public void set(android.location.Location)
    {
        android.location.Location r0, r1;
        android.os.Bundle r2, $r4, $r5, $r6;
        java.lang.String $r3;
        long $l0, $l1;
        double $d0, $d1, $d2;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.location.Location;

        $r3 = r1.<android.location.Location: java.lang.String mProvider>;

        r0.<android.location.Location: java.lang.String mProvider> = $r3;

        $l0 = r1.<android.location.Location: long mTime>;

        r0.<android.location.Location: long mTime> = $l0;

        $l1 = r1.<android.location.Location: long mElapsedRealtimeNanos>;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = $l1;

        $d0 = r1.<android.location.Location: double mLatitude>;

        r0.<android.location.Location: double mLatitude> = $d0;

        $d1 = r1.<android.location.Location: double mLongitude>;

        r0.<android.location.Location: double mLongitude> = $d1;

        $z0 = r1.<android.location.Location: boolean mHasAltitude>;

        r0.<android.location.Location: boolean mHasAltitude> = $z0;

        $d2 = r1.<android.location.Location: double mAltitude>;

        r0.<android.location.Location: double mAltitude> = $d2;

        $z1 = r1.<android.location.Location: boolean mHasSpeed>;

        r0.<android.location.Location: boolean mHasSpeed> = $z1;

        $f0 = r1.<android.location.Location: float mSpeed>;

        r0.<android.location.Location: float mSpeed> = $f0;

        $z2 = r1.<android.location.Location: boolean mHasBearing>;

        r0.<android.location.Location: boolean mHasBearing> = $z2;

        $f1 = r1.<android.location.Location: float mBearing>;

        r0.<android.location.Location: float mBearing> = $f1;

        $z3 = r1.<android.location.Location: boolean mHasAccuracy>;

        r0.<android.location.Location: boolean mHasAccuracy> = $z3;

        $f2 = r1.<android.location.Location: float mAccuracy>;

        r0.<android.location.Location: float mAccuracy> = $f2;

        $r5 = r1.<android.location.Location: android.os.Bundle mExtras>;

        if $r5 != null goto label2;

        r2 = null;

     label1:
        r0.<android.location.Location: android.os.Bundle mExtras> = r2;

        $z4 = r1.<android.location.Location: boolean mIsFromMockProvider>;

        r0.<android.location.Location: boolean mIsFromMockProvider> = $z4;

        return;

     label2:
        $r4 = new android.os.Bundle;

        $r6 = r1.<android.location.Location: android.os.Bundle mExtras>;

        specialinvoke $r4.<android.os.Bundle: void <init>(android.os.Bundle)>($r6);

        r2 = $r4;

        goto label1;
    }

    public void setAccuracy(float)
    {
        android.location.Location r0;
        float f0;

        r0 := @this: android.location.Location;

        f0 := @parameter0: float;

        r0.<android.location.Location: float mAccuracy> = f0;

        r0.<android.location.Location: boolean mHasAccuracy> = 1;

        return;
    }

    public void setAltitude(double)
    {
        android.location.Location r0;
        double d0;

        r0 := @this: android.location.Location;

        d0 := @parameter0: double;

        r0.<android.location.Location: double mAltitude> = d0;

        r0.<android.location.Location: boolean mHasAltitude> = 1;

        return;
    }

    public void setBearing(float)
    {
        android.location.Location r0;
        float f0;
        byte $b0, $b1;

        r0 := @this: android.location.Location;

        f0 := @parameter0: float;

     label1:
        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label2;

        f0 = f0 + 360.0F;

        goto label1;

     label2:
        $b1 = f0 cmpl 360.0F;

        if $b1 < 0 goto label3;

        f0 = f0 - 360.0F;

        goto label2;

     label3:
        r0.<android.location.Location: float mBearing> = f0;

        r0.<android.location.Location: boolean mHasBearing> = 1;

        return;
    }

    public void setElapsedRealtimeNanos(long)
    {
        android.location.Location r0;
        long l0;

        r0 := @this: android.location.Location;

        l0 := @parameter0: long;

        r0.<android.location.Location: long mElapsedRealtimeNanos> = l0;

        return;
    }

    public void setExtraLocation(java.lang.String, android.location.Location)
    {
        android.location.Location r0, r2;
        java.lang.String r1;
        android.os.Bundle $r3, $r4, $r5;

        r0 := @this: android.location.Location;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.location.Location;

        $r3 = r0.<android.location.Location: android.os.Bundle mExtras>;

        if $r3 != null goto label1;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r0.<android.location.Location: android.os.Bundle mExtras> = $r5;

     label1:
        $r4 = r0.<android.location.Location: android.os.Bundle mExtras>;

        virtualinvoke $r4.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>(r1, r2);

        return;
    }

    public void setExtras(android.os.Bundle)
    {
        android.location.Location r0;
        android.os.Bundle r1, r2, $r3;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label2;

        r2 = null;

     label1:
        r0.<android.location.Location: android.os.Bundle mExtras> = r2;

        return;

     label2:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        r2 = $r3;

        goto label1;
    }

    public void setIsFromMockProvider(boolean)
    {
        android.location.Location r0;
        boolean z0;

        r0 := @this: android.location.Location;

        z0 := @parameter0: boolean;

        r0.<android.location.Location: boolean mIsFromMockProvider> = z0;

        return;
    }

    public void setLatitude(double)
    {
        android.location.Location r0;
        double d0;

        r0 := @this: android.location.Location;

        d0 := @parameter0: double;

        r0.<android.location.Location: double mLatitude> = d0;

        return;
    }

    public void setLongitude(double)
    {
        android.location.Location r0;
        double d0;

        r0 := @this: android.location.Location;

        d0 := @parameter0: double;

        r0.<android.location.Location: double mLongitude> = d0;

        return;
    }

    public void setProvider(java.lang.String)
    {
        android.location.Location r0;
        java.lang.String r1;

        r0 := @this: android.location.Location;

        r1 := @parameter0: java.lang.String;

        r0.<android.location.Location: java.lang.String mProvider> = r1;

        return;
    }

    public void setSpeed(float)
    {
        android.location.Location r0;
        float f0;

        r0 := @this: android.location.Location;

        f0 := @parameter0: float;

        r0.<android.location.Location: float mSpeed> = f0;

        r0.<android.location.Location: boolean mHasSpeed> = 1;

        return;
    }

    public void setTime(long)
    {
        android.location.Location r0;
        long l0;

        r0 := @this: android.location.Location;

        l0 := @parameter0: long;

        r0.<android.location.Location: long mTime> = l0;

        return;
    }

    public java.lang.String toString()
    {
        android.location.Location r0;
        java.lang.StringBuilder r1, $r3, $r17, $r19, $r20, $r24, $r28;
        java.lang.Object[] r2, r4;
        java.lang.String $r5, $r9, $r18, $r31;
        double $d0, $d1, $d2;
        java.lang.Double $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l0, $l3, $l4, $l5;
        byte $b1, $b2;
        android.os.Bundle $r14, $r16;
        float $f0, $f1, $f2;
        java.lang.Float $r29;

        r0 := @this: android.location.Location;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Location[");

        $r5 = r0.<android.location.Location: java.lang.String mProvider>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r2 = newarray (java.lang.Object)[2];

        $d0 = r0.<android.location.Location: double mLatitude>;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r2[0] = $r8;

        $d1 = r0.<android.location.Location: double mLongitude>;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        r2[1] = $r10;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %.6f,%.6f", r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $z0 = r0.<android.location.Location: boolean mHasAccuracy>;

        if $z0 == 0 goto label09;

        r4 = newarray (java.lang.Object)[1];

        $f2 = r0.<android.location.Location: float mAccuracy>;

        $r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        r4[0] = $r29;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" acc=%.0f", r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

     label01:
        $l0 = r0.<android.location.Location: long mTime>;

        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label02;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t=?!?");

     label02:
        $l3 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        $b1 = $l3 cmp 0L;

        if $b1 != 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" et=?!?");

     label03:
        $z1 = r0.<android.location.Location: boolean mHasAltitude>;

        if $z1 == 0 goto label04;

        $r28 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" alt=");

        $d2 = r0.<android.location.Location: double mAltitude>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

     label04:
        $z2 = r0.<android.location.Location: boolean mHasSpeed>;

        if $z2 == 0 goto label05;

        $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vel=");

        $f1 = r0.<android.location.Location: float mSpeed>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

     label05:
        $z3 = r0.<android.location.Location: boolean mHasBearing>;

        if $z3 == 0 goto label06;

        $r20 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bear=");

        $f0 = r0.<android.location.Location: float mBearing>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

     label06:
        $z4 = r0.<android.location.Location: boolean mIsFromMockProvider>;

        if $z4 == 0 goto label07;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mock");

     label07:
        $r14 = r0.<android.location.Location: android.os.Bundle mExtras>;

        if $r14 == null goto label08;

        $r19 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r16 = r0.<android.location.Location: android.os.Bundle mExtras>;

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

     label08:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label09:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" acc=???");

        goto label01;

     label10:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" et=");

        $l4 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        $l5 = $l4 / 1000000L;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l5, r1);

        goto label03;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.location.Location r0;
        android.os.Parcel r1;
        int i0;
        byte b1, b2, b3, b4, b5;
        java.lang.String $r2;
        long $l6, $l7;
        double $d0, $d1, $d2;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2;
        android.os.Bundle $r3;

        r0 := @this: android.location.Location;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        b1 = 1;

        $r2 = r0.<android.location.Location: java.lang.String mProvider>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $l6 = r0.<android.location.Location: long mTime>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l6);

        $l7 = r0.<android.location.Location: long mElapsedRealtimeNanos>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l7);

        $d0 = r0.<android.location.Location: double mLatitude>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d0);

        $d1 = r0.<android.location.Location: double mLongitude>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d1);

        $z0 = r0.<android.location.Location: boolean mHasAltitude>;

        if $z0 == 0 goto label06;

        b2 = b1;

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $d2 = r0.<android.location.Location: double mAltitude>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d2);

        $z1 = r0.<android.location.Location: boolean mHasSpeed>;

        if $z1 == 0 goto label07;

        b3 = b1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b3);

        $f0 = r0.<android.location.Location: float mSpeed>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $z2 = r0.<android.location.Location: boolean mHasBearing>;

        if $z2 == 0 goto label08;

        b4 = b1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b4);

        $f1 = r0.<android.location.Location: float mBearing>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $z3 = r0.<android.location.Location: boolean mHasAccuracy>;

        if $z3 == 0 goto label09;

        b5 = b1;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b5);

        $f2 = r0.<android.location.Location: float mAccuracy>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

        $r3 = r0.<android.location.Location: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r3);

        $z4 = r0.<android.location.Location: boolean mIsFromMockProvider>;

        if $z4 == 0 goto label10;

     label05:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        return;

     label06:
        b2 = 0;

        goto label01;

     label07:
        b3 = 0;

        goto label02;

     label08:
        b4 = 0;

        goto label03;

     label09:
        b5 = 0;

        goto label04;

     label10:
        b1 = 0;

        goto label05;
    }
}
