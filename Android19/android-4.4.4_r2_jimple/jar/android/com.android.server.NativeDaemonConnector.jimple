final class com.android.server.NativeDaemonConnector extends java.lang.Object implements java.lang.Runnable, android.os.Handler$Callback, com.android.server.Watchdog$Monitor
{
    private static final int DEFAULT_TIMEOUT;
    private static final boolean LOGD;
    private static final long WARN_EXECUTE_DELAY_MS;
    private final int BUFFER_SIZE;
    private final java.lang.String TAG;
    private android.os.Handler mCallbackHandler;
    private com.android.server.INativeDaemonConnectorCallbacks mCallbacks;
    private final java.lang.Object mDaemonLock;
    private android.util.LocalLog mLocalLog;
    private java.io.OutputStream mOutputStream;
    private final com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue;
    private java.util.concurrent.atomic.AtomicInteger mSequenceNumber;
    private java.lang.String mSocket;

    void <init>(com.android.server.INativeDaemonConnectorCallbacks, java.lang.String, int, java.lang.String, int)
    {
        com.android.server.NativeDaemonConnector r0;
        com.android.server.INativeDaemonConnectorCallbacks r1;
        java.lang.String r2, r3;
        int i0, i1;
        java.lang.Object $r4;
        com.android.server.NativeDaemonConnector$ResponseQueue $r5;
        java.util.concurrent.atomic.AtomicInteger $r6;
        android.util.LocalLog $r7;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: com.android.server.INativeDaemonConnectorCallbacks;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock> = $r4;

        r0.<com.android.server.NativeDaemonConnector: int BUFFER_SIZE> = 4096;

        r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks> = r1;

        r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket> = r2;

        $r5 = new com.android.server.NativeDaemonConnector$ResponseQueue;

        specialinvoke $r5.<com.android.server.NativeDaemonConnector$ResponseQueue: void <init>(int)>(i0);

        r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue> = $r5;

        $r6 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.android.server.NativeDaemonConnector: java.util.concurrent.atomic.AtomicInteger mSequenceNumber> = $r6;

        if r3 == null goto label2;

     label1:
        r0.<com.android.server.NativeDaemonConnector: java.lang.String TAG> = r3;

        $r7 = new android.util.LocalLog;

        specialinvoke $r7.<android.util.LocalLog: void <init>(int)>(i1);

        r0.<com.android.server.NativeDaemonConnector: android.util.LocalLog mLocalLog> = $r7;

        return;

     label2:
        r3 = "NativeDaemonConnector";

        goto label1;
    }

    static void appendEscaped(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        boolean z0;
        int i0, i1, $i3;
        char c2;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String;

        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(32);

        if $i3 < 0 goto label5;

        z0 = 1;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label2:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label8;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if c2 != 34 goto label6;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\"");

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        z0 = 0;

        goto label1;

     label6:
        if c2 != 92 goto label7;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");

        goto label4;

     label7:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label4;

     label8:
        if z0 == 0 goto label9;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label9:
        return;
    }

    private android.net.LocalSocketAddress determineSocketAddress()
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String $r1, $r4, $r6;
        boolean $z0, $z1;
        android.net.LocalSocketAddress $r2, $r5;
        android.net.LocalSocketAddress$Namespace $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        $r1 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("__test__");

        if $z0 == 0 goto label1;

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label1;

        $r5 = new android.net.LocalSocketAddress;

        $r6 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        specialinvoke $r5.<android.net.LocalSocketAddress: void <init>(java.lang.String)>($r6);

        return $r5;

     label1:
        $r2 = new android.net.LocalSocketAddress;

        $r4 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        $r3 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r2.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>($r4, $r3);

        return $r2;
    }

    private void listenToSocket() throws java.io.IOException
    {
        com.android.server.NativeDaemonConnector r0;
        android.net.LocalSocket r1, r2, $r22;
        java.lang.Throwable r3, r5, r12, r14, $r65, $r75, $r83, $r93, $r94;
        java.lang.Object r4, r11, r15;
        java.io.OutputStream r6, r17, $r26, $r53, $r82;
        java.io.IOException r7, r8, r9, r16, r18, $r54, $r60, $r74, $r92, $r99, $r100;
        java.io.InputStream r10;
        byte[] r13;
        int i0, i1, i2, i3, i4, i5, $i6, $i8, $i9, $i10;
        java.lang.String r19, r21, $r27, $r33, $r35, $r39, $r45, $r47, $r52, $r58, $r66, $r70, $r71, $r77, $r85, $r87, $r95, $r101;
        java.lang.IllegalArgumentException r20, $r69;
        com.android.server.NativeDaemonEvent r23;
        android.net.LocalSocketAddress $r24;
        com.android.server.INativeDaemonConnectorCallbacks $r25;
        java.nio.charset.Charset $r28, $r34;
        java.lang.StringBuilder $r29, $r30, $r31, $r32, $r36, $r37, $r38, $r40, $r46, $r48, $r49, $r50, $r51, $r55, $r56, $r57, $r59, $r61, $r62, $r63, $r64, $r67, $r68, $r72, $r73, $r76, $r78, $r79, $r80, $r81, $r84, $r86, $r88, $r89, $r90, $r91, $r96, $r97, $r98;
        byte $b7;
        boolean $z0;
        android.os.Handler $r41, $r42;
        com.android.server.NativeDaemonConnector$ResponseQueue $r43;
        android.os.Message $r44;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 = null;

     label01:
        $r22 = new android.net.LocalSocket;

        specialinvoke $r22.<android.net.LocalSocket: void <init>()>();

        r2 = $r22;

     label02:
        $r24 = specialinvoke r0.<com.android.server.NativeDaemonConnector: android.net.LocalSocketAddress determineSocketAddress()>();

        virtualinvoke r2.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>($r24);

        r10 = virtualinvoke r2.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        r11 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r11;

     label03:
        $r26 = virtualinvoke r2.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream> = $r26;

        exitmonitor r11;

     label04:
        $r25 = r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks>;

        interfaceinvoke $r25.<com.android.server.INativeDaemonConnectorCallbacks: void onDaemonConnected()>();

        r13 = newarray (byte)[4096];

     label05:
        i0 = 0;

     label06:
        $i6 = 4096 - i0;

        i1 = virtualinvoke r10.<java.io.InputStream: int read(byte[],int,int)>(r13, i0, $i6);

     label07:
        if i1 >= 0 goto label33;

     label08:
        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reading with start = ");

        $r46 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r47);

     label09:
        r15 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r15;

     label10:
        r17 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

     label11:
        if r17 == null goto label14;

     label12:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closing stream for ");

        $r58 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r52 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r52);

        $r53 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

        virtualinvoke $r53.<java.io.OutputStream: void close()>();

     label13:
        r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream> = null;

     label14:
        exitmonitor r15;

     label15:
        if r2 == null goto label17;

     label16:
        virtualinvoke r2.<android.net.LocalSocket: void close()>();

     label17:
        return;

     label18:
        $r83 := @caughtexception;

        r12 = $r83;

     label19:
        exitmonitor r11;

     label20:
        throw r12;

     label21:
        $r54 := @caughtexception;

        r9 = $r54;

        r1 = r2;

     label22:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Communications error: ");

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r66);

        throw r9;

     label23:
        $r94 := @caughtexception;

        r3 = $r94;

     label24:
        r4 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r4;

     label25:
        r6 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

     label26:
        if r6 == null goto label29;

     label27:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closing stream for ");

        $r87 = r0.<com.android.server.NativeDaemonConnector: java.lang.String mSocket>;

        $r84 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r85);

        $r82 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

        virtualinvoke $r82.<java.io.OutputStream: void close()>();

     label28:
        r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream> = null;

     label29:
        exitmonitor r4;

     label30:
        if r1 == null goto label32;

     label31:
        virtualinvoke r1.<android.net.LocalSocket: void close()>();

     label32:
        throw r3;

     label33:
        i2 = i1 + i0;

        i4 = 0;

        i3 = 0;

     label34:
        if i3 >= i2 goto label43;

     label35:
        $b7 = r13[i3];

        if $b7 != 0 goto label65;

        $r33 = new java.lang.String;

        $i8 = i3 - i4;

        $r34 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r33.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r13, i4, $i8, $r34);

        r21 = $r33;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RCV <- {");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r39);

     label36:
        r23 = staticinvoke <com.android.server.NativeDaemonEvent: com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String)>(r21);

        $z0 = virtualinvoke r23.<com.android.server.NativeDaemonEvent: boolean isClassUnsolicited()>();

        if $z0 == 0 goto label38;

        $r42 = r0.<com.android.server.NativeDaemonConnector: android.os.Handler mCallbackHandler>;

        $r41 = r0.<com.android.server.NativeDaemonConnector: android.os.Handler mCallbackHandler>;

        $i10 = virtualinvoke r23.<com.android.server.NativeDaemonEvent: int getCode()>();

        $r45 = virtualinvoke r23.<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()>();

        $r44 = virtualinvoke $r41.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>($i10, $r45);

        virtualinvoke $r42.<android.os.Handler: boolean sendMessage(android.os.Message)>($r44);

     label37:
        goto label64;

     label38:
        $r43 = r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue>;

        $i9 = virtualinvoke r23.<com.android.server.NativeDaemonEvent: int getCmdNumber()>();

        virtualinvoke $r43.<com.android.server.NativeDaemonConnector$ResponseQueue: void add(int,com.android.server.NativeDaemonEvent)>($i9, r23);

     label39:
        goto label64;

     label40:
        $r69 := @caughtexception;

        r20 = $r69;

     label41:
        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem parsing message: ");

        $r78 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r76 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r77);

     label42:
        goto label64;

     label43:
        if i4 != 0 goto label45;

     label44:
        $r27 = new java.lang.String;

        $r28 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r27.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r13, i4, i2, $r28);

        r19 = $r27;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RCV incomplete <- {");

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r35);

     label45:
        if i4 == i2 goto label48;

        i5 = 4096 - i4;

     label46:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, i4, r13, 0, i5);

     label47:
        i0 = i5;

        goto label06;

     label48:
        i0 = 0;

        goto label06;

     label49:
        $r93 := @caughtexception;

        r5 = $r93;

     label50:
        exitmonitor r4;

     label51:
        throw r5;

     label52:
        $r99 := @caughtexception;

        r7 = $r99;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed closing socket: ");

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r95);

        goto label32;

     label53:
        $r92 := @caughtexception;

        r8 = $r92;

     label54:
        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed closing output stream: ");

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r101 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r101);

     label55:
        goto label28;

     label56:
        $r65 := @caughtexception;

        r14 = $r65;

     label57:
        exitmonitor r15;

     label58:
        throw r14;

     label59:
        $r60 := @caughtexception;

        r16 = $r60;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed closing socket: ");

        $r72 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r71);

        return;

     label60:
        $r74 := @caughtexception;

        r18 = $r74;

     label61:
        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed closing output stream: ");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r70 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r70);

     label62:
        goto label13;

     label63:
        $r100 := @caughtexception;

        r9 = $r100;

        r1 = null;

        goto label22;

     label64:
        i4 = i3 + 1;

     label65:
        i3 = i3 + 1;

        goto label34;

     label66:
        $r75 := @caughtexception;

        r3 = $r75;

        r1 = r2;

        goto label24;

        catch java.io.IOException from label01 to label02 with label63;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.io.IOException from label02 to label03 with label21;
        catch java.lang.Throwable from label02 to label03 with label66;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.lang.Throwable from label04 to label05 with label66;
        catch java.io.IOException from label06 to label07 with label21;
        catch java.lang.Throwable from label06 to label07 with label66;
        catch java.io.IOException from label08 to label09 with label21;
        catch java.lang.Throwable from label08 to label09 with label66;
        catch java.lang.Throwable from label10 to label11 with label56;
        catch java.io.IOException from label12 to label13 with label60;
        catch java.lang.Throwable from label12 to label13 with label56;
        catch java.lang.Throwable from label13 to label14 with label56;
        catch java.lang.Throwable from label14 to label15 with label56;
        catch java.io.IOException from label16 to label17 with label59;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.io.IOException from label20 to label21 with label21;
        catch java.lang.Throwable from label20 to label21 with label66;
        catch java.lang.Throwable from label22 to label23 with label23;
        catch java.lang.Throwable from label25 to label26 with label49;
        catch java.io.IOException from label27 to label28 with label53;
        catch java.lang.Throwable from label27 to label28 with label49;
        catch java.lang.Throwable from label28 to label29 with label49;
        catch java.lang.Throwable from label29 to label30 with label49;
        catch java.io.IOException from label31 to label32 with label52;
        catch java.io.IOException from label35 to label36 with label21;
        catch java.lang.Throwable from label35 to label36 with label66;
        catch java.lang.IllegalArgumentException from label36 to label37 with label40;
        catch java.io.IOException from label36 to label37 with label21;
        catch java.lang.Throwable from label36 to label37 with label66;
        catch java.lang.IllegalArgumentException from label38 to label39 with label40;
        catch java.io.IOException from label38 to label39 with label21;
        catch java.lang.Throwable from label38 to label39 with label66;
        catch java.io.IOException from label41 to label42 with label21;
        catch java.lang.Throwable from label41 to label42 with label66;
        catch java.io.IOException from label44 to label45 with label21;
        catch java.lang.Throwable from label44 to label45 with label66;
        catch java.io.IOException from label46 to label47 with label21;
        catch java.lang.Throwable from label46 to label47 with label66;
        catch java.lang.Throwable from label50 to label51 with label49;
        catch java.lang.Throwable from label54 to label55 with label49;
        catch java.lang.Throwable from label57 to label58 with label56;
        catch java.lang.Throwable from label61 to label62 with label56;
    }

    private void log(java.lang.String)
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1;
        android.util.LocalLog $r2;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.NativeDaemonConnector: android.util.LocalLog mLocalLog>;

        virtualinvoke $r2.<android.util.LocalLog: void log(java.lang.String)>(r1);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1, $r2;
        android.util.LocalLog $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.NativeDaemonConnector: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r2, r1);

        $r3 = r0.<com.android.server.NativeDaemonConnector: android.util.LocalLog mLocalLog>;

        virtualinvoke $r3.<android.util.LocalLog: void log(java.lang.String)>(r1);

        return;
    }

    static transient void makeCommand(java.lang.StringBuilder, java.lang.StringBuilder, int, java.lang.String, java.lang.Object[])
    {
        java.lang.StringBuilder r0, r1, $r6, $r7, $r8, $r11, $r17, $r18, $r20, $r21, $r22, $r25;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r2, r5, $r19, $r26;
        java.lang.Object[] r3;
        java.lang.Object r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r15, $r23, $r24;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.StringBuilder;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.Object[];

        $i3 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(0);

        if $i3 < 0 goto label1;

        $r24 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected command: ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r24;

     label1:
        $i4 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(32);

        if $i4 < 0 goto label2;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Arguments must be separate from command");

        throw $r23;

     label2:
        $r6 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        i1 = lengthof r3;

        i2 = 0;

     label3:
        if i2 >= i1 goto label7;

        r4 = r3[i2];

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $i5 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(0);

        if $i5 < 0 goto label4;

        $r15 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected argument: ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label4:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        staticinvoke <com.android.server.NativeDaemonConnector: void appendEscaped(java.lang.StringBuilder,java.lang.String)>(r0, r5);

        $z0 = r4 instanceof com.android.server.NativeDaemonConnector$SensitiveArg;

        if $z0 == 0 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[scrubbed]");

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        staticinvoke <com.android.server.NativeDaemonConnector: void appendEscaped(java.lang.StringBuilder,java.lang.String)>(r1, r5);

        goto label5;

     label7:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.NativeDaemonConnector r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.util.LocalLog $r4;
        com.android.server.NativeDaemonConnector$ResponseQueue $r5;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.NativeDaemonConnector: android.util.LocalLog mLocalLog>;

        virtualinvoke $r4.<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r5 = r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue>;

        virtualinvoke $r5.<com.android.server.NativeDaemonConnector$ResponseQueue: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    public com.android.server.NativeDaemonEvent execute(com.android.server.NativeDaemonConnector$Command) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        com.android.server.NativeDaemonConnector$Command r1;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        java.lang.Object[] $r4;
        com.android.server.NativeDaemonEvent $r5;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: com.android.server.NativeDaemonConnector$Command;

        $r2 = staticinvoke <com.android.server.NativeDaemonConnector$Command: java.lang.String access$000(com.android.server.NativeDaemonConnector$Command)>(r1);

        $r3 = staticinvoke <com.android.server.NativeDaemonConnector$Command: java.util.ArrayList access$100(com.android.server.NativeDaemonConnector$Command)>(r1);

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r5 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(java.lang.String,java.lang.Object[])>($r2, $r4);

        return $r5;
    }

    public transient com.android.server.NativeDaemonEvent execute(java.lang.String, java.lang.Object[]) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1, $r9;
        java.lang.Object[] r2;
        com.android.server.NativeDaemonEvent[] r3;
        int $i0, $i1;
        com.android.server.NativeDaemonEvent $r4;
        com.android.server.NativeDaemonConnectorException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(java.lang.String,java.lang.Object[])>(r1, r2);

        $i0 = lengthof r3;

        if $i0 == 1 goto label1;

        $r5 = new com.android.server.NativeDaemonConnectorException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected exactly one response, but received ");

        $i1 = lengthof r3;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r4 = r3[0];

        return $r4;
    }

    public transient com.android.server.NativeDaemonEvent[] execute(int, java.lang.String, java.lang.Object[]) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        int i0, i2, $i6;
        java.lang.String r1, r6, r7, $r18, $r29, $r41, $r45;
        java.lang.Object[] r2, $r31;
        long l1, l3, $l5, $l7;
        java.util.ArrayList r3;
        java.lang.StringBuilder r4, r5, $r12, $r14, $r15, $r16, $r17, $r19, $r25, $r26, $r27, $r28, $r33, $r34, $r37, $r38, $r39, $r40, $r44, $r46, $r47;
        java.lang.Object r8;
        java.lang.Throwable r9, $r48;
        java.io.IOException r10, $r49;
        com.android.server.NativeDaemonEvent r11;
        java.util.concurrent.atomic.AtomicInteger $r13;
        java.nio.charset.Charset $r20;
        java.io.OutputStream $r21, $r22;
        com.android.server.NativeDaemonConnector$ResponseQueue $r23;
        byte[] $r24;
        boolean $z0, $z2, $z3;
        byte $b4;
        com.android.server.NativeDaemonEvent[] $r30, $r32;
        com.android.server.NativeDaemonConnector$NativeDaemonArgumentException $r35;
        com.android.server.NativeDaemonConnector$NativeDaemonFailureException $r36, $r42;
        com.android.server.NativeDaemonConnectorException $r43, $r50;

        r0 := @this: com.android.server.NativeDaemonConnector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r3 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r4 = $r12;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        r5 = $r14;

        $r13 = r0.<com.android.server.NativeDaemonConnector: java.util.concurrent.atomic.AtomicInteger mSequenceNumber>;

        i2 = virtualinvoke $r13.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        staticinvoke <com.android.server.NativeDaemonConnector: void makeCommand(java.lang.StringBuilder,java.lang.StringBuilder,int,java.lang.String,java.lang.Object[])>(r4, r5, i2, r1, r2);

        r6 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SND -> {");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r18);

        r8 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r8;

     label01:
        $r22 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

        if $r22 != null goto label05;

        $r43 = new com.android.server.NativeDaemonConnectorException;

        specialinvoke $r43.<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>("missing output stream");

        throw $r43;

     label02:
        $r48 := @caughtexception;

        r9 = $r48;

     label03:
        exitmonitor r8;

     label04:
        throw r9;

     label05:
        $r21 = r0.<com.android.server.NativeDaemonConnector: java.io.OutputStream mOutputStream>;

        $r20 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r24 = virtualinvoke r6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r20);

        virtualinvoke $r21.<java.io.OutputStream: void write(byte[])>($r24);

     label06:
        exitmonitor r8;

     label07:
        $r23 = r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonConnector$ResponseQueue mResponseQueue>;

        r11 = virtualinvoke $r23.<com.android.server.NativeDaemonConnector$ResponseQueue: com.android.server.NativeDaemonEvent remove(int,int,java.lang.String)>(i2, i0, r7);

        if r11 != null goto label10;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timed-out waiting for response to ");

        $r40 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r41);

        $r42 = new com.android.server.NativeDaemonConnector$NativeDaemonFailureException;

        specialinvoke $r42.<com.android.server.NativeDaemonConnector$NativeDaemonFailureException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>(r7, r11);

        throw $r42;

     label08:
        $r49 := @caughtexception;

        r10 = $r49;

     label09:
        $r50 = new com.android.server.NativeDaemonConnectorException;

        specialinvoke $r50.<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>("problem sending command", r10);

        throw $r50;

     label10:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RMV <- {");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r29);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        $z0 = virtualinvoke r11.<com.android.server.NativeDaemonEvent: boolean isClassContinue()>();

        if $z0 != 0 goto label07;

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = l3 - l1;

        $b4 = $l5 cmp 500L;

        if $b4 <= 0 goto label11;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NDC Command {");

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} took too long (");

        $l7 = l3 - l1;

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms)");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r45);

     label11:
        $z3 = virtualinvoke r11.<com.android.server.NativeDaemonEvent: boolean isClassClientError()>();

        if $z3 == 0 goto label12;

        $r35 = new com.android.server.NativeDaemonConnector$NativeDaemonArgumentException;

        specialinvoke $r35.<com.android.server.NativeDaemonConnector$NativeDaemonArgumentException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>(r7, r11);

        throw $r35;

     label12:
        $z2 = virtualinvoke r11.<com.android.server.NativeDaemonEvent: boolean isClassServerError()>();

        if $z2 == 0 goto label13;

        $r36 = new com.android.server.NativeDaemonConnector$NativeDaemonFailureException;

        specialinvoke $r36.<com.android.server.NativeDaemonConnector$NativeDaemonFailureException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>(r7, r11);

        throw $r36;

     label13:
        $i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r32 = newarray (com.android.server.NativeDaemonEvent)[$i6];

        $r31 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r32);

        $r30 = (com.android.server.NativeDaemonEvent[]) $r31;

        return $r30;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label06 to label07 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
    }

    public com.android.server.NativeDaemonEvent[] executeForList(com.android.server.NativeDaemonConnector$Command) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        com.android.server.NativeDaemonConnector$Command r1;
        java.lang.String $r2;
        java.util.ArrayList $r3;
        java.lang.Object[] $r4;
        com.android.server.NativeDaemonEvent[] $r5;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: com.android.server.NativeDaemonConnector$Command;

        $r2 = staticinvoke <com.android.server.NativeDaemonConnector$Command: java.lang.String access$000(com.android.server.NativeDaemonConnector$Command)>(r1);

        $r3 = staticinvoke <com.android.server.NativeDaemonConnector$Command: java.util.ArrayList access$100(com.android.server.NativeDaemonConnector$Command)>(r1);

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r5 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(java.lang.String,java.lang.Object[])>($r2, $r4);

        return $r5;
    }

    public transient com.android.server.NativeDaemonEvent[] executeForList(java.lang.String, java.lang.Object[]) throws com.android.server.NativeDaemonConnectorException
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        com.android.server.NativeDaemonEvent[] $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] execute(int,java.lang.String,java.lang.Object[])>(60000, r1, r2);

        return $r3;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.NativeDaemonConnector r0;
        android.os.Message r1;
        java.lang.String r2, $r8, $r14;
        java.lang.Exception r3, $r9;
        java.lang.Object $r4;
        com.android.server.INativeDaemonConnectorCallbacks $r5;
        int $i0;
        java.lang.String[] $r6;
        boolean $z0;
        java.lang.Object[] $r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 := @parameter0: android.os.Message;

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (java.lang.String) $r4;

     label1:
        $r5 = r0.<com.android.server.NativeDaemonConnector: com.android.server.INativeDaemonConnectorCallbacks mCallbacks>;

        $i0 = r1.<android.os.Message: int what>;

        $r6 = staticinvoke <com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>(r2);

        $z0 = interfaceinvoke $r5.<com.android.server.INativeDaemonConnectorCallbacks: boolean onEvent(int,java.lang.String,java.lang.String[])>($i0, r2, $r6);

        if $z0 != 0 goto label2;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r2;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unhandled event \'%s\'", $r7);

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void log(java.lang.String)>($r8);

     label2:
        return 1;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error handling \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r14);

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void monitor()
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.NativeDaemonConnector;

        r1 = r0.<com.android.server.NativeDaemonConnector: java.lang.Object mDaemonLock>;

        entermonitor r1;

     label1:
        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void run()
    {
        com.android.server.NativeDaemonConnector r0;
        java.lang.Exception r1, $r5;
        android.os.Handler $r2;
        com.android.server.FgThread $r3;
        android.os.Looper $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.server.NativeDaemonConnector;

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <com.android.server.FgThread: com.android.server.FgThread get()>();

        $r4 = virtualinvoke $r3.<com.android.server.FgThread: android.os.Looper getLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r4, r0);

        r0.<com.android.server.NativeDaemonConnector: android.os.Handler mCallbackHandler> = $r2;

     label1:
        specialinvoke r0.<com.android.server.NativeDaemonConnector: void listenToSocket()>();

     label2:
        goto label1;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in NativeDaemonConnector: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.NativeDaemonConnector: void loge(java.lang.String)>($r9);

        staticinvoke <android.os.SystemClock: void sleep(long)>(5000L);

        goto label1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.NativeDaemonConnector: long WARN_EXECUTE_DELAY_MS> = 500L;

        <com.android.server.NativeDaemonConnector: boolean LOGD> = 0;

        <com.android.server.NativeDaemonConnector: int DEFAULT_TIMEOUT> = 60000;

        return;
    }
}
