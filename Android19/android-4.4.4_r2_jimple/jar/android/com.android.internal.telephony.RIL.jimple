public final class com.android.internal.telephony.RIL extends com.android.internal.telephony.BaseCommands implements com.android.internal.telephony.CommandsInterface
{
    private static final int CDMA_BROADCAST_SMS_NO_OF_SERVICE_CATEGORIES;
    private static final int CDMA_BSI_NO_OF_INTS_STRUCT;
    private static final int DEFAULT_WAKE_LOCK_TIMEOUT;
    static final int EVENT_SEND;
    static final int EVENT_WAKE_LOCK_TIMEOUT;
    static final int RESPONSE_SOLICITED;
    static final int RESPONSE_UNSOLICITED;
    static final boolean RILJ_LOGD;
    static final boolean RILJ_LOGV;
    static final java.lang.String RILJ_LOG_TAG;
    static final int RIL_MAX_COMMAND_BYTES;
    static final java.lang.String SOCKET_NAME_RIL;
    static final int SOCKET_OPEN_RETRY_MILLIS;
    android.content.BroadcastReceiver mIntentReceiver;
    java.lang.Object mLastNITZTimeInfo;
    com.android.internal.telephony.RIL$RILReceiver mReceiver;
    java.lang.Thread mReceiverThread;
    android.util.SparseArray mRequestList;
    com.android.internal.telephony.RIL$RILSender mSender;
    android.os.HandlerThread mSenderThread;
    private int mSetPreferredNetworkType;
    android.net.LocalSocket mSocket;
    java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall;
    android.os.PowerManager$WakeLock mWakeLock;
    int mWakeLockCount;
    final int mWakeLockTimeout;

    public void <init>(android.content.Context, int, int)
    {
        com.android.internal.telephony.RIL r0;
        android.content.Context r1;
        int i0, i1, $i2;
        android.content.IntentFilter r2, $r29;
        android.util.SparseArray $r3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        com.android.internal.telephony.RIL$1 $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        java.lang.Object $r13, $r21;
        android.os.PowerManager$WakeLock $r14, $r16;
        android.os.PowerManager $r15;
        android.os.HandlerThread $r17, $r18, $r19;
        com.android.internal.telephony.RIL$RILSender $r20;
        android.os.Looper $r22;
        boolean $z0;
        android.net.ConnectivityManager $r23;
        java.lang.Thread $r24, $r26;
        com.android.internal.telephony.RIL$RILReceiver $r25, $r27;
        android.content.BroadcastReceiver $r30;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.internal.telephony.BaseCommands: void <init>(android.content.Context)>(r1);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList> = $r3;

        $r4 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall> = $r4;

        $r5 = new com.android.internal.telephony.RIL$1;

        specialinvoke $r5.<com.android.internal.telephony.RIL$1: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: android.content.BroadcastReceiver mIntentReceiver> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL(context, preferredNetworkType=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cdmaSubscription=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        r0.<com.android.internal.telephony.RIL: int mCdmaSubscription> = i1;

        r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType> = i0;

        r0.<com.android.internal.telephony.RIL: int mPhoneType> = 0;

        $r13 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r15 = (android.os.PowerManager) $r13;

        $r14 = virtualinvoke $r15.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "RILJ");

        r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock> = $r14;

        $r16 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r16.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.ril.wake_lock_timeout", 60000);

        r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout> = $i2;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r18 = new android.os.HandlerThread;

        specialinvoke $r18.<android.os.HandlerThread: void <init>(java.lang.String)>("RILSender");

        r0.<com.android.internal.telephony.RIL: android.os.HandlerThread mSenderThread> = $r18;

        $r17 = r0.<com.android.internal.telephony.RIL: android.os.HandlerThread mSenderThread>;

        virtualinvoke $r17.<android.os.HandlerThread: void start()>();

        $r20 = new com.android.internal.telephony.RIL$RILSender;

        $r19 = r0.<com.android.internal.telephony.RIL: android.os.HandlerThread mSenderThread>;

        $r22 = virtualinvoke $r19.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r20.<com.android.internal.telephony.RIL$RILSender: void <init>(com.android.internal.telephony.RIL,android.os.Looper)>(r0, $r22);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender> = $r20;

        $r21 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r23 = (android.net.ConnectivityManager) $r21;

        $z0 = virtualinvoke $r23.<android.net.ConnectivityManager: boolean isNetworkSupported(int)>(0);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Not starting RILReceiver: wifi-only");

        return;

     label1:
        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Starting RILReceiver");

        $r25 = new com.android.internal.telephony.RIL$RILReceiver;

        specialinvoke $r25.<com.android.internal.telephony.RIL$RILReceiver: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILReceiver mReceiver> = $r25;

        $r24 = new java.lang.Thread;

        $r27 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILReceiver mReceiver>;

        specialinvoke $r24.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r27, "RILReceiver");

        r0.<com.android.internal.telephony.RIL: java.lang.Thread mReceiverThread> = $r24;

        $r26 = r0.<com.android.internal.telephony.RIL: java.lang.Thread mReceiverThread>;

        virtualinvoke $r26.<java.lang.Thread: void start()>();

        $r29 = new android.content.IntentFilter;

        specialinvoke $r29.<android.content.IntentFilter: void <init>()>();

        r2 = $r29;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        $r30 = r0.<com.android.internal.telephony.RIL: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r30, r2);

        return;
    }

    static void access$000(com.android.internal.telephony.RIL, boolean)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.telephony.RIL: void sendScreenState(boolean)>(z0);

        return;
    }

    static void access$100(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock()>();

        return;
    }

    static com.android.internal.telephony.RILRequest access$200(com.android.internal.telephony.RIL, int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        com.android.internal.telephony.RILRequest $r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)>(i0);

        return $r1;
    }

    static boolean access$300(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        $z0 = specialinvoke r0.<com.android.internal.telephony.RIL: boolean clearWakeLock()>();

        return $z0;
    }

    static int access$400(java.io.InputStream, byte[]) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte[] r1;
        int $i0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: byte[];

        $i0 = staticinvoke <com.android.internal.telephony.RIL: int readRilMessage(java.io.InputStream,byte[])>(r0, r1);

        return $i0;
    }

    static void access$500(com.android.internal.telephony.RIL, android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<com.android.internal.telephony.RIL: void processResponse(android.os.Parcel)>(r1);

        return;
    }

    static void access$600(com.android.internal.telephony.RIL, int, boolean)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.telephony.RIL: void clearRequestList(int,boolean)>(i0, z0);

        return;
    }

    static void access$700(com.android.internal.telephony.RIL, int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.telephony.RIL: void notifyRegistrantsRilConnectionChanged(int)>(i0);

        return;
    }

    private void acquireWakeLock()
    {
        com.android.internal.telephony.RIL r0;
        android.os.PowerManager$WakeLock r1, $r4;
        java.lang.Throwable r2, $r8;
        android.os.Message r3;
        int $i0, $i1, $i2;
        com.android.internal.telephony.RIL$RILSender $r5, $r6, $r7;
        long $l3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void acquire()>();

        $i0 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $i1 = 1 + $i0;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = $i1;

        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        virtualinvoke $r5.<com.android.internal.telephony.RIL$RILSender: void removeMessages(int)>(2);

        $r6 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        r3 = virtualinvoke $r6.<com.android.internal.telephony.RIL$RILSender: android.os.Message obtainMessage(int)>(2);

        $r7 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        $i2 = r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout>;

        $l3 = (long) $i2;

        virtualinvoke $r7.<com.android.internal.telephony.RIL$RILSender: boolean sendMessageDelayed(android.os.Message,long)>(r3, $l3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void clearRequestList(int, boolean)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, $i3, $i4, $i6;
        boolean z0;
        android.util.SparseArray r1, $r4, $r5, $r6;
        java.lang.Throwable r2, $r22;
        com.android.internal.telephony.RILRequest r3;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r20, $r21;
        java.lang.String $r14, $r15, $r19;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

     label02:
        if z0 == 0 goto label16;

     label03:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearRequestList  mWakeLockCount=");

        $i6 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRequestList=");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r19);

     label04:
        goto label16;

     label05:
        if i2 >= i1 goto label11;

     label06:
        $r6 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r3 = (com.android.internal.telephony.RILRequest) $r7;

     label07:
        if z0 == 0 goto label09;

     label08:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": [");

        $i3 = r3.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $i4 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r15);

     label09:
        virtualinvoke r3.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>(i0, null);

        virtualinvoke r3.<com.android.internal.telephony.RILRequest: void release()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock()>();

     label10:
        i2 = i2 + 1;

        goto label05;

     label11:
        $r5 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        virtualinvoke $r5.<android.util.SparseArray: void clear()>();

        exitmonitor r1;

     label12:
        return;

     label13:
        $r22 := @caughtexception;

        r2 = $r22;

     label14:
        exitmonitor r1;

     label15:
        throw r2;

     label16:
        i2 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private boolean clearWakeLock()
    {
        com.android.internal.telephony.RIL r0;
        android.os.PowerManager$WakeLock r1, $r8, $r10;
        java.lang.Throwable r2, $r11;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        com.android.internal.telephony.RIL$RILSender $r9;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        if $i0 != 0 goto label3;

        $r10 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r10.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTE: mWakeLockCount is ");

        $i1 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at time of clearing");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r7);

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r8 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r8.<android.os.PowerManager$WakeLock: void release()>();

        $r9 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        virtualinvoke $r9.<com.android.internal.telephony.RIL$RILSender: void removeMessages(int)>(2);

        exitmonitor r1;

     label4:
        return 1;

     label5:
        $r11 := @caughtexception;

        r2 = $r11;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void constructCdmaSendSmsRilRequest(com.android.internal.telephony.RILRequest, byte[])
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        byte[] r2;
        java.io.DataInputStream r3, $r5;
        java.io.IOException r4, $r24;
        byte b0, b2, $b7, $b16, $b19, $b20, $b21;
        int i1, i3, i4, i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18;
        java.io.ByteArrayInputStream $r6;
        android.os.Parcel $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.StringBuilder $r22, $r23, $r26;
        java.lang.String $r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        r2 := @parameter1: byte[];

        $r5 = new java.io.DataInputStream;

        $r6 = new java.io.ByteArrayInputStream;

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r6);

        r3 = $r5;

     label01:
        $r7 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i6 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>($i6);

        $r8 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i8 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        $b7 = (byte) $i8;

        virtualinvoke $r8.<android.os.Parcel: void writeByte(byte)>($b7);

        $r9 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i9 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>($i9);

        $r10 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i10 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        virtualinvoke $r10.<android.os.Parcel: void writeInt(int)>($i10);

        $r11 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i11 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        virtualinvoke $r11.<android.os.Parcel: void writeInt(int)>($i11);

        $r12 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i12 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>($i12);

        $r13 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i13 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>($i13);

        $i14 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        b0 = (byte) $i14;

        $r14 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeByte(byte)>(b0);

     label02:
        i1 = 0;

     label03:
        if i1 >= b0 goto label06;

     label04:
        $r20 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b21 = virtualinvoke r3.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke $r20.<android.os.Parcel: void writeByte(byte)>($b21);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r15 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i15 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        virtualinvoke $r15.<android.os.Parcel: void writeInt(int)>($i15);

        $r16 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i18 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        $b16 = (byte) $i18;

        virtualinvoke $r16.<android.os.Parcel: void writeByte(byte)>($b16);

        $i17 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        b2 = (byte) $i17;

        $r19 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r19.<android.os.Parcel: void writeByte(byte)>(b2);

     label07:
        i3 = 0;

     label08:
        if i3 >= b2 goto label11;

     label09:
        $r21 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b19 = virtualinvoke r3.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke $r21.<android.os.Parcel: void writeByte(byte)>($b19);

     label10:
        i3 = i3 + 1;

        goto label08;

     label11:
        i4 = virtualinvoke r3.<java.io.DataInputStream: int read()>();

        $r17 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r17.<android.os.Parcel: void writeInt(int)>(i4);

     label12:
        i5 = 0;

     label13:
        if i5 >= i4 goto label17;

     label14:
        $r18 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b20 = virtualinvoke r3.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke $r18.<android.os.Parcel: void writeByte(byte)>($b20);

     label15:
        i5 = i5 + 1;

        goto label13;

     label16:
        $r24 := @caughtexception;

        r4 = $r24;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendSmsCdma: conversion from input stream to object failed: ");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r25);

     label17:
        return;

        catch java.io.IOException from label01 to label02 with label16;
        catch java.io.IOException from label04 to label05 with label16;
        catch java.io.IOException from label06 to label07 with label16;
        catch java.io.IOException from label09 to label10 with label16;
        catch java.io.IOException from label11 to label12 with label16;
        catch java.io.IOException from label14 to label15 with label16;
    }

    private void constructGsmSendSmsRilRequest(com.android.internal.telephony.RILRequest, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        java.lang.String r2, r3;
        android.os.Parcel $r4, $r5, $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        $r5 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return;
    }

    private void decrementWakeLock()
    {
        com.android.internal.telephony.RIL r0;
        android.os.PowerManager$WakeLock r1, $r3;
        java.lang.Throwable r2, $r5;
        int $i0, $i1, $i2;
        com.android.internal.telephony.RIL$RILSender $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        if $i0 <= 1 goto label4;

        $i1 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $i2 = -1 + $i1;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = $i2;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();

        $r4 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        virtualinvoke $r4.<com.android.internal.telephony.RIL$RILSender: void removeMessages(int)>(2);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.util.SparseArray r1, $r4, $r6;
        java.lang.Throwable r2, $r7;
        com.android.internal.telephony.RILRequest r3;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.internal.telephony.RILRequest) $r5;

     label2:
        if r3 == null goto label4;

     label3:
        $r6 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        exitmonitor r1;

     label5:
        return r3;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private com.android.internal.telephony.dataconnection.DataCallResponse getDataCallResponse(android.os.Parcel, int)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.android.internal.telephony.dataconnection.DataCallResponse r2, $r7;
        java.lang.String r3, r4, r5, r6, $r8, $r9, $r13, $r17;
        com.android.internal.telephony.dataconnection.DcFailCause $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r11, $r12, $r14, $r16;
        java.lang.RuntimeException $r15;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r7 = new com.android.internal.telephony.dataconnection.DataCallResponse;

        specialinvoke $r7.<com.android.internal.telephony.dataconnection.DataCallResponse: void <init>()>();

        r2 = $r7;

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int version> = i0;

        if i0 >= 5 goto label2;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int cid> = $i8;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int active> = $i7;

        $r17 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String type> = $r17;

        r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z4 != 0 goto label1;

        $r16 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] addresses> = $r16;

     label1:
        return r2;

     label2:
        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int status> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int suggestedRetryTime> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int cid> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int active> = $i4;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String type> = $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String ifname> = $r9;

        $i6 = r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int status>;

        $r10 = <com.android.internal.telephony.dataconnection.DcFailCause: com.android.internal.telephony.dataconnection.DcFailCause NONE>;

        $i5 = virtualinvoke $r10.<com.android.internal.telephony.dataconnection.DcFailCause: int getErrorCode()>();

        if $i6 != $i5 goto label3;

        $r13 = r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String ifname>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r13);

        if $z3 == 0 goto label3;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>("getDataCallResponse, no ifname");

        throw $r15;

     label3:
        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label4;

        $r14 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] addresses> = $r14;

     label4:
        r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 != 0 goto label5;

        $r11 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] dnses> = $r11;

     label5:
        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z2 != 0 goto label1;

        $r12 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] gateways> = $r12;

        return r2;
    }

    private com.android.internal.telephony.CommandsInterface$RadioState getRadioStateFromInt(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        com.android.internal.telephony.CommandsInterface$RadioState $r1, $r2, $r3;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 10: goto label4;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized RIL_RadioState: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        $r3 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_OFF>;

        return $r3;

     label3:
        $r2 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_UNAVAILABLE>;

        return $r2;

     label4:
        $r1 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_ON>;

        return $r1;
    }

    private void notifyRegistrantsCdmaInfoRec(com.android.internal.telephony.cdma.CdmaInformationRecords)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.cdma.CdmaInformationRecords r1;
        java.lang.Object $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r16, $r18, $r19, $r21, $r25, $r27, $r30, $r32, $r33, $r38, $r39, $r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.os.RegistrantList $r10, $r13, $r14, $r17, $r20, $r23, $r24, $r26, $r31, $r35, $r36, $r37, $r40, $r41;
        android.os.AsyncResult $r12, $r15, $r22, $r28, $r29, $r34, $r43;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaInformationRecords;

        $r2 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z0 = $r2 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaDisplayInfoRec;

        if $z0 == 0 goto label2;

        $r37 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mDisplayInfoRegistrants>;

        if $r37 == null goto label1;

        $r38 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r38);

        $r41 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mDisplayInfoRegistrants>;

        $r43 = new android.os.AsyncResult;

        $r42 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r43.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r42, null);

        virtualinvoke $r41.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r43);

     label1:
        return;

     label2:
        $r3 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z1 = $r3 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaSignalInfoRec;

        if $z1 == 0 goto label3;

        $r36 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mSignalInfoRegistrants>;

        if $r36 == null goto label1;

        $r33 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r33);

        $r40 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mSignalInfoRegistrants>;

        $r34 = new android.os.AsyncResult;

        $r39 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r34.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r39, null);

        virtualinvoke $r40.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r34);

        return;

     label3:
        $r4 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z2 = $r4 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaNumberInfoRec;

        if $z2 == 0 goto label4;

        $r31 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mNumberInfoRegistrants>;

        if $r31 == null goto label1;

        $r32 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r32);

        $r35 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mNumberInfoRegistrants>;

        $r29 = new android.os.AsyncResult;

        $r30 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r29.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r30, null);

        virtualinvoke $r35.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r29);

        return;

     label4:
        $r5 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z3 = $r5 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaRedirectingNumberInfoRec;

        if $z3 == 0 goto label5;

        $r23 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRedirNumInfoRegistrants>;

        if $r23 == null goto label1;

        $r27 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r27);

        $r26 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRedirNumInfoRegistrants>;

        $r28 = new android.os.AsyncResult;

        $r25 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r28.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r25, null);

        virtualinvoke $r26.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r28);

        return;

     label5:
        $r6 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z4 = $r6 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaLineControlInfoRec;

        if $z4 == 0 goto label6;

        $r20 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mLineControlInfoRegistrants>;

        if $r20 == null goto label1;

        $r19 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r19);

        $r24 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mLineControlInfoRegistrants>;

        $r22 = new android.os.AsyncResult;

        $r21 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r22.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r21, null);

        virtualinvoke $r24.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r22);

        return;

     label6:
        $r7 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z5 = $r7 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53ClirInfoRec;

        if $z5 == 0 goto label7;

        $r13 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mT53ClirInfoRegistrants>;

        if $r13 == null goto label1;

        $r16 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r16);

        $r17 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mT53ClirInfoRegistrants>;

        $r15 = new android.os.AsyncResult;

        $r18 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r15.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r18, null);

        virtualinvoke $r17.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r15);

        return;

     label7:
        $r8 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z6 = $r8 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53AudioControlInfoRec;

        if $z6 == 0 goto label1;

        $r10 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mT53AudCntrlInfoRegistrants>;

        if $r10 == null goto label1;

        $r9 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(1027, $r9);

        $r14 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mT53AudCntrlInfoRegistrants>;

        $r12 = new android.os.AsyncResult;

        $r11 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r12.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r11, null);

        virtualinvoke $r14.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r12);

        return;
    }

    private void notifyRegistrantsRilConnectionChanged(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.RegistrantList $r1, $r4;
        android.os.AsyncResult $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.RIL: int mRilVersion> = i0;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRilConnectedRegistrants>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRilConnectedRegistrants>;

        $r2 = new android.os.AsyncResult;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i0);

        specialinvoke $r2.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r3, null);

        virtualinvoke $r4.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r2);

     label1:
        return;
    }

    private void processResponse(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0;
        com.android.internal.telephony.RILRequest r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 != 1 goto label2;

        specialinvoke r0.<com.android.internal.telephony.RIL: void processUnsolicited(android.os.Parcel)>(r1);

     label1:
        return;

     label2:
        if i0 != 0 goto label1;

        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest processSolicited(android.os.Parcel)>(r1);

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.internal.telephony.RILRequest: void release()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock()>();

        return;
    }

    private com.android.internal.telephony.RILRequest processSolicited(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.android.internal.telephony.RILRequest r2;
        java.lang.Throwable r3, $r53;
        java.lang.Object r4, r5, r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r19, $r20, $r26, $r28, $r29, $r31, $r35, $r37, $r42, $r45, $r46, $r48, $r49, $r50, $r51, $r52, $r54, $r60;
        java.lang.String $r11, $r14, $r17, $r18, $r23, $r34, $r39, $r44, $r47, $r55, $r59;
        android.os.Message $r21, $r24, $r27, $r57, $r58, $r61;
        android.os.RegistrantList $r25, $r30, $r32, $r33, $r36, $r38;
        java.util.concurrent.atomic.AtomicBoolean $r40;
        boolean $z0;
        android.os.Registrant $r41, $r43;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)>(i0);

        if r2 != null goto label002;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected solicited response! sn: ");

        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error: ");

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("RILJ", $r55);

        r2 = null;

     label001:
        return r2;

     label002:
        if i1 == 0 goto label003;

        i2 = virtualinvoke r1.<android.os.Parcel: int dataAvail()>();

        r5 = null;

        if i2 <= 0 goto label008;

     label003:
        $i3 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        tableswitch($i3)
        {
            case 1: goto label006;
            case 2: goto label011;
            case 3: goto label013;
            case 4: goto label015;
            case 5: goto label017;
            case 6: goto label019;
            case 7: goto label021;
            case 8: goto label023;
            case 9: goto label025;
            case 10: goto label027;
            case 11: goto label029;
            case 12: goto label031;
            case 13: goto label033;
            case 14: goto label035;
            case 15: goto label038;
            case 16: goto label040;
            case 17: goto label042;
            case 18: goto label044;
            case 19: goto label046;
            case 20: goto label048;
            case 21: goto label050;
            case 22: goto label052;
            case 23: goto label054;
            case 24: goto label056;
            case 25: goto label058;
            case 26: goto label060;
            case 27: goto label062;
            case 28: goto label064;
            case 29: goto label066;
            case 30: goto label068;
            case 31: goto label070;
            case 32: goto label072;
            case 33: goto label074;
            case 34: goto label076;
            case 35: goto label078;
            case 36: goto label080;
            case 37: goto label082;
            case 38: goto label084;
            case 39: goto label086;
            case 40: goto label088;
            case 41: goto label090;
            case 42: goto label092;
            case 43: goto label094;
            case 44: goto label096;
            case 45: goto label098;
            case 46: goto label100;
            case 47: goto label102;
            case 48: goto label104;
            case 49: goto label106;
            case 50: goto label108;
            case 51: goto label110;
            case 52: goto label112;
            case 53: goto label114;
            case 54: goto label116;
            case 55: goto label118;
            case 56: goto label120;
            case 57: goto label122;
            case 58: goto label124;
            case 59: goto label126;
            case 60: goto label128;
            case 61: goto label130;
            case 62: goto label132;
            case 63: goto label134;
            case 64: goto label136;
            case 65: goto label138;
            case 66: goto label140;
            case 67: goto label142;
            case 68: goto label144;
            case 69: goto label146;
            case 70: goto label148;
            case 71: goto label150;
            case 72: goto label152;
            case 73: goto label154;
            case 74: goto label156;
            case 75: goto label158;
            case 76: goto label160;
            case 77: goto label162;
            case 78: goto label164;
            case 79: goto label166;
            case 80: goto label168;
            case 81: goto label170;
            case 82: goto label172;
            case 83: goto label174;
            case 84: goto label176;
            case 85: goto label178;
            case 86: goto label196;
            case 87: goto label180;
            case 88: goto label182;
            case 89: goto label184;
            case 90: goto label186;
            case 91: goto label188;
            case 92: goto label190;
            case 93: goto label192;
            case 94: goto label194;
            case 95: goto label198;
            case 96: goto label200;
            case 97: goto label202;
            case 98: goto label204;
            case 99: goto label210;
            case 100: goto label206;
            case 101: goto label208;
            case 102: goto label212;
            case 103: goto label214;
            case 104: goto label216;
            case 105: goto label218;
            case 106: goto label220;
            case 107: goto label222;
            case 108: goto label224;
            case 109: goto label226;
            case 110: goto label228;
            case 111: goto label230;
            case 112: goto label232;
            case 113: goto label234;
            default: goto label004;
        };

     label004:
        $r7 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized solicited response: ");

        $i4 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label005:
        $r53 := @caughtexception;

        r3 = $r53;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i11 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r47 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i11);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r60 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception, possible invalid RIL response");

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", $r59, r3);

        $r61 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        if $r61 == null goto label001;

        $r57 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r57, null, r3);

        $r58 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        virtualinvoke $r58.<android.os.Message: void sendToTarget()>();

        return r2;

     label006:
        r6 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseIccCardStatus(android.os.Parcel)>(r1);

     label007:
        r5 = r6;

     label008:
        $i5 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        tableswitch($i5)
        {
            case 3: goto label236;
            case 4: goto label009;
            case 5: goto label236;
            default: goto label009;
        };

     label009:
        if i1 == 0 goto label238;

        $i8 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        lookupswitch($i8)
        {
            case 2: goto label237;
            case 4: goto label237;
            case 6: goto label237;
            case 7: goto label237;
            case 43: goto label237;
            default: goto label010;
        };

     label010:
        virtualinvoke r2.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>(i1, r5);

        return r2;

     label011:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label012:
        goto label008;

     label013:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label014:
        goto label008;

     label015:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label016:
        goto label008;

     label017:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label018:
        goto label008;

     label019:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label020:
        goto label008;

     label021:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label022:
        goto label008;

     label023:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label024:
        goto label008;

     label025:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCallList(android.os.Parcel)>(r1);

     label026:
        goto label008;

     label027:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label028:
        goto label008;

     label029:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label030:
        goto label008;

     label031:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label032:
        goto label008;

     label033:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label034:
        goto label008;

     label035:
        $r40 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        $z0 = virtualinvoke $r40.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        if $z0 == 0 goto label036;

        $r41 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        if $r41 == null goto label036;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("testing emergency call, notify ECM Registrants");

        $r43 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        virtualinvoke $r43.<android.os.Registrant: void notifyRegistrant()>();

     label036:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label037:
        goto label008;

     label038:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label039:
        goto label008;

     label040:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label041:
        goto label008;

     label042:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label043:
        goto label008;

     label044:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label045:
        goto label008;

     label046:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSignalStrength(android.os.Parcel)>(r1);

     label047:
        goto label008;

     label048:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

     label049:
        goto label008;

     label050:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

     label051:
        goto label008;

     label052:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

     label053:
        goto label008;

     label054:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label055:
        goto label008;

     label056:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label057:
        goto label008;

     label058:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSMS(android.os.Parcel)>(r1);

     label059:
        goto label008;

     label060:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSMS(android.os.Parcel)>(r1);

     label061:
        goto label008;

     label062:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSetupDataCall(android.os.Parcel)>(r1);

     label063:
        goto label008;

     label064:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseICC_IO(android.os.Parcel)>(r1);

     label065:
        goto label008;

     label066:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label067:
        goto label008;

     label068:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label069:
        goto label008;

     label070:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label071:
        goto label008;

     label072:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label073:
        goto label008;

     label074:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCallForward(android.os.Parcel)>(r1);

     label075:
        goto label008;

     label076:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label077:
        goto label008;

     label078:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label079:
        goto label008;

     label080:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label081:
        goto label008;

     label082:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label083:
        goto label008;

     label084:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label085:
        goto label008;

     label086:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label087:
        goto label008;

     label088:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label089:
        goto label008;

     label090:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label091:
        goto label008;

     label092:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label093:
        goto label008;

     label094:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label095:
        goto label008;

     label096:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label097:
        goto label008;

     label098:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label099:
        goto label008;

     label100:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label101:
        goto label008;

     label102:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label103:
        goto label008;

     label104:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseOperatorInfos(android.os.Parcel)>(r1);

     label105:
        goto label008;

     label106:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label107:
        goto label008;

     label108:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label109:
        goto label008;

     label110:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label111:
        goto label008;

     label112:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label113:
        goto label008;

     label114:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label115:
        goto label008;

     label116:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label117:
        goto label008;

     label118:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label119:
        goto label008;

     label120:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label121:
        goto label008;

     label122:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseDataCallList(android.os.Parcel)>(r1);

     label123:
        goto label008;

     label124:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label125:
        goto label008;

     label126:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseRaw(android.os.Parcel)>(r1);

     label127:
        goto label008;

     label128:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

     label129:
        goto label008;

     label130:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label131:
        goto label008;

     label132:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label133:
        goto label008;

     label134:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label135:
        goto label008;

     label136:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label137:
        goto label008;

     label138:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label139:
        goto label008;

     label140:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label141:
        goto label008;

     label142:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label143:
        goto label008;

     label144:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label145:
        goto label008;

     label146:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label147:
        goto label008;

     label148:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label149:
        goto label008;

     label150:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label151:
        goto label008;

     label152:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label153:
        goto label008;

     label154:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label155:
        goto label008;

     label156:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseGetPreferredNetworkType(android.os.Parcel)>(r1);

     label157:
        goto label008;

     label158:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCellList(android.os.Parcel)>(r1);

     label159:
        goto label008;

     label160:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label161:
        goto label008;

     label162:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label163:
        goto label008;

     label164:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label165:
        goto label008;

     label166:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label167:
        goto label008;

     label168:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label169:
        goto label008;

     label170:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label171:
        goto label008;

     label172:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label173:
        goto label008;

     label174:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label175:
        goto label008;

     label176:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label177:
        goto label008;

     label178:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label179:
        goto label008;

     label180:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSMS(android.os.Parcel)>(r1);

     label181:
        goto label008;

     label182:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label183:
        goto label008;

     label184:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseGmsBroadcastConfig(android.os.Parcel)>(r1);

     label185:
        goto label008;

     label186:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label187:
        goto label008;

     label188:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label189:
        goto label008;

     label190:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCdmaBroadcastConfig(android.os.Parcel)>(r1);

     label191:
        goto label008;

     label192:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label193:
        goto label008;

     label194:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label195:
        goto label008;

     label196:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label197:
        goto label008;

     label198:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

     label199:
        goto label008;

     label200:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label201:
        goto label008;

     label202:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label203:
        goto label008;

     label204:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

     label205:
        goto label008;

     label206:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label207:
        goto label008;

     label208:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label209:
        goto label008;

     label210:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label211:
        goto label008;

     label212:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label213:
        goto label008;

     label214:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label215:
        goto label008;

     label216:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label217:
        goto label008;

     label218:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label219:
        goto label008;

     label220:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label221:
        goto label008;

     label222:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseICC_IO(android.os.Parcel)>(r1);

     label223:
        goto label008;

     label224:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label225:
        goto label008;

     label226:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.util.ArrayList responseCellInfoList(android.os.Parcel)>(r1);

     label227:
        goto label008;

     label228:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label229:
        goto label008;

     label230:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label231:
        goto label008;

     label232:
        r5 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label233:
        goto label008;

     label234:
        r4 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSMS(android.os.Parcel)>(r1);

     label235:
        r5 = r4;

        goto label008;

     label236:
        $r32 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        if $r32 == null goto label009;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON enter sim puk fakeSimStatusChanged: reg count=");

        $r36 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        $i10 = virtualinvoke $r36.<android.os.RegistrantList: int size()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r39);

        $r38 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r38.<android.os.RegistrantList: void notifyRegistrants()>();

        goto label009;

     label237:
        $r25 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        if $r25 == null goto label010;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON some errors fakeSimStatusChanged: reg count=");

        $r30 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        $i9 = virtualinvoke $r30.<android.os.RegistrantList: int size()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r34);

        $r33 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r33.<android.os.RegistrantList: void notifyRegistrants()>();

        goto label010;

     label238:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i6 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r17 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i7 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r18 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>($i7, r5);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r23);

        $r24 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        if $r24 == null goto label001;

        $r21 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r21, r5, null);

        $r27 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        virtualinvoke $r27.<android.os.Message: void sendToTarget()>();

        return r2;

        catch java.lang.Throwable from label003 to label004 with label005;
        catch java.lang.Throwable from label004 to label005 with label005;
        catch java.lang.Throwable from label006 to label007 with label005;
        catch java.lang.Throwable from label011 to label012 with label005;
        catch java.lang.Throwable from label013 to label014 with label005;
        catch java.lang.Throwable from label015 to label016 with label005;
        catch java.lang.Throwable from label017 to label018 with label005;
        catch java.lang.Throwable from label019 to label020 with label005;
        catch java.lang.Throwable from label021 to label022 with label005;
        catch java.lang.Throwable from label023 to label024 with label005;
        catch java.lang.Throwable from label025 to label026 with label005;
        catch java.lang.Throwable from label027 to label028 with label005;
        catch java.lang.Throwable from label029 to label030 with label005;
        catch java.lang.Throwable from label031 to label032 with label005;
        catch java.lang.Throwable from label033 to label034 with label005;
        catch java.lang.Throwable from label035 to label036 with label005;
        catch java.lang.Throwable from label036 to label037 with label005;
        catch java.lang.Throwable from label038 to label039 with label005;
        catch java.lang.Throwable from label040 to label041 with label005;
        catch java.lang.Throwable from label042 to label043 with label005;
        catch java.lang.Throwable from label044 to label045 with label005;
        catch java.lang.Throwable from label046 to label047 with label005;
        catch java.lang.Throwable from label048 to label049 with label005;
        catch java.lang.Throwable from label050 to label051 with label005;
        catch java.lang.Throwable from label052 to label053 with label005;
        catch java.lang.Throwable from label054 to label055 with label005;
        catch java.lang.Throwable from label056 to label057 with label005;
        catch java.lang.Throwable from label058 to label059 with label005;
        catch java.lang.Throwable from label060 to label061 with label005;
        catch java.lang.Throwable from label062 to label063 with label005;
        catch java.lang.Throwable from label064 to label065 with label005;
        catch java.lang.Throwable from label066 to label067 with label005;
        catch java.lang.Throwable from label068 to label069 with label005;
        catch java.lang.Throwable from label070 to label071 with label005;
        catch java.lang.Throwable from label072 to label073 with label005;
        catch java.lang.Throwable from label074 to label075 with label005;
        catch java.lang.Throwable from label076 to label077 with label005;
        catch java.lang.Throwable from label078 to label079 with label005;
        catch java.lang.Throwable from label080 to label081 with label005;
        catch java.lang.Throwable from label082 to label083 with label005;
        catch java.lang.Throwable from label084 to label085 with label005;
        catch java.lang.Throwable from label086 to label087 with label005;
        catch java.lang.Throwable from label088 to label089 with label005;
        catch java.lang.Throwable from label090 to label091 with label005;
        catch java.lang.Throwable from label092 to label093 with label005;
        catch java.lang.Throwable from label094 to label095 with label005;
        catch java.lang.Throwable from label096 to label097 with label005;
        catch java.lang.Throwable from label098 to label099 with label005;
        catch java.lang.Throwable from label100 to label101 with label005;
        catch java.lang.Throwable from label102 to label103 with label005;
        catch java.lang.Throwable from label104 to label105 with label005;
        catch java.lang.Throwable from label106 to label107 with label005;
        catch java.lang.Throwable from label108 to label109 with label005;
        catch java.lang.Throwable from label110 to label111 with label005;
        catch java.lang.Throwable from label112 to label113 with label005;
        catch java.lang.Throwable from label114 to label115 with label005;
        catch java.lang.Throwable from label116 to label117 with label005;
        catch java.lang.Throwable from label118 to label119 with label005;
        catch java.lang.Throwable from label120 to label121 with label005;
        catch java.lang.Throwable from label122 to label123 with label005;
        catch java.lang.Throwable from label124 to label125 with label005;
        catch java.lang.Throwable from label126 to label127 with label005;
        catch java.lang.Throwable from label128 to label129 with label005;
        catch java.lang.Throwable from label130 to label131 with label005;
        catch java.lang.Throwable from label132 to label133 with label005;
        catch java.lang.Throwable from label134 to label135 with label005;
        catch java.lang.Throwable from label136 to label137 with label005;
        catch java.lang.Throwable from label138 to label139 with label005;
        catch java.lang.Throwable from label140 to label141 with label005;
        catch java.lang.Throwable from label142 to label143 with label005;
        catch java.lang.Throwable from label144 to label145 with label005;
        catch java.lang.Throwable from label146 to label147 with label005;
        catch java.lang.Throwable from label148 to label149 with label005;
        catch java.lang.Throwable from label150 to label151 with label005;
        catch java.lang.Throwable from label152 to label153 with label005;
        catch java.lang.Throwable from label154 to label155 with label005;
        catch java.lang.Throwable from label156 to label157 with label005;
        catch java.lang.Throwable from label158 to label159 with label005;
        catch java.lang.Throwable from label160 to label161 with label005;
        catch java.lang.Throwable from label162 to label163 with label005;
        catch java.lang.Throwable from label164 to label165 with label005;
        catch java.lang.Throwable from label166 to label167 with label005;
        catch java.lang.Throwable from label168 to label169 with label005;
        catch java.lang.Throwable from label170 to label171 with label005;
        catch java.lang.Throwable from label172 to label173 with label005;
        catch java.lang.Throwable from label174 to label175 with label005;
        catch java.lang.Throwable from label176 to label177 with label005;
        catch java.lang.Throwable from label178 to label179 with label005;
        catch java.lang.Throwable from label180 to label181 with label005;
        catch java.lang.Throwable from label182 to label183 with label005;
        catch java.lang.Throwable from label184 to label185 with label005;
        catch java.lang.Throwable from label186 to label187 with label005;
        catch java.lang.Throwable from label188 to label189 with label005;
        catch java.lang.Throwable from label190 to label191 with label005;
        catch java.lang.Throwable from label192 to label193 with label005;
        catch java.lang.Throwable from label194 to label195 with label005;
        catch java.lang.Throwable from label196 to label197 with label005;
        catch java.lang.Throwable from label198 to label199 with label005;
        catch java.lang.Throwable from label200 to label201 with label005;
        catch java.lang.Throwable from label202 to label203 with label005;
        catch java.lang.Throwable from label204 to label205 with label005;
        catch java.lang.Throwable from label206 to label207 with label005;
        catch java.lang.Throwable from label208 to label209 with label005;
        catch java.lang.Throwable from label210 to label211 with label005;
        catch java.lang.Throwable from label212 to label213 with label005;
        catch java.lang.Throwable from label214 to label215 with label005;
        catch java.lang.Throwable from label216 to label217 with label005;
        catch java.lang.Throwable from label218 to label219 with label005;
        catch java.lang.Throwable from label220 to label221 with label005;
        catch java.lang.Throwable from label222 to label223 with label005;
        catch java.lang.Throwable from label224 to label225 with label005;
        catch java.lang.Throwable from label226 to label227 with label005;
        catch java.lang.Throwable from label228 to label229 with label005;
        catch java.lang.Throwable from label230 to label231 with label005;
        catch java.lang.Throwable from label232 to label233 with label005;
        catch java.lang.Throwable from label234 to label235 with label005;
    }

    private void processUnsolicited(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r2, r3, r69, $r103;
        android.os.RegistrantList r4, r6, r8, r10, r12, r19, r21, r35, r48, $r73, $r74, $r77, $r78, $r81, $r84, $r86, $r88, $r90, $r98, $r100, $r102, $r123, $r124, $r128, $r160, $r162;
        android.os.AsyncResult r5, r7, r9, r11, r13, r14, r22, r24, r26, r27, r30, r32, r34, r36, r38, r40, r42, r44, r45, r47, r51, r54, r56, r59, r62, $r72, $r75, $r76, $r79, $r80, $r89, $r91, $r97, $r99, $r101, $r104, $r105, $r109, $r115, $r117, $r119, $r121, $r125, $r127, $r131, $r135, $r137, $r138, $r140, $r144, $r146, $r150, $r157, $r159, $r161;
        boolean z0, $z1, $z2;
        android.os.Registrant r15, r23, r28, r29, r31, r33, r37, r39, r41, r43, r46, r49, r52, r55, r57, r65, $r93, $r106, $r107, $r108, $r110, $r111, $r112, $r113, $r114, $r116, $r118, $r120, $r122, $r126, $r130, $r134, $r136, $r139, $r145, $r147, $r151, $r156;
        java.lang.ClassCastException r16, $r163;
        java.util.Iterator r17;
        java.util.ArrayList r18;
        com.android.internal.telephony.cdma.CdmaInformationRecords r20;
        android.telephony.SmsMessage r25, r64;
        java.lang.Object[] r50;
        long l1;
        java.lang.String[] r53, r63, $r132, $r148, $r149;
        int[] r58, $r82, $r83, $r85, $r87, $r153;
        com.android.internal.telephony.CommandsInterface$RadioState r60;
        java.lang.Throwable r61, $r171;
        java.lang.StringBuilder $r66, $r67, $r71, $r142, $r143, $r152, $r165, $r167, $r168, $r169, $r170;
        java.lang.String $r68, $r92, $r133, $r141, $r154, $r155, $r158, $r164, $r166;
        java.lang.RuntimeException $r70;
        byte[] $r94, $r95;
        java.lang.Boolean $r96;
        java.lang.Long $r129;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        tableswitch(i0)
        {
            case 1000: goto label004;
            case 1001: goto label009;
            case 1002: goto label011;
            case 1003: goto label013;
            case 1004: goto label015;
            case 1005: goto label017;
            case 1006: goto label019;
            case 1007: goto label001;
            case 1008: goto label021;
            case 1009: goto label023;
            case 1010: goto label025;
            case 1011: goto label027;
            case 1012: goto label029;
            case 1013: goto label031;
            case 1014: goto label033;
            case 1015: goto label035;
            case 1016: goto label037;
            case 1017: goto label039;
            case 1018: goto label041;
            case 1019: goto label045;
            case 1020: goto label047;
            case 1021: goto label049;
            case 1022: goto label051;
            case 1023: goto label043;
            case 1024: goto label053;
            case 1025: goto label055;
            case 1026: goto label057;
            case 1027: goto label059;
            case 1028: goto label061;
            case 1029: goto label063;
            case 1030: goto label065;
            case 1031: goto label067;
            case 1032: goto label069;
            case 1033: goto label071;
            case 1034: goto label073;
            case 1035: goto label075;
            case 1036: goto label077;
            case 1037: goto label079;
            default: goto label001;
        };

     label001:
        $r70 = new java.lang.RuntimeException;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized unsol response: ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r70.<java.lang.RuntimeException: void <init>(java.lang.String)>($r68);

        throw $r70;

     label002:
        $r171 := @caughtexception;

        r61 = $r171;

        $r170 = new java.lang.StringBuilder;

        specialinvoke $r170.<java.lang.StringBuilder: void <init>()>();

        $r169 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception processing unsol response: ");

        $r168 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r167 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception:");

        $r166 = virtualinvoke r61.<java.lang.Throwable: java.lang.String toString()>();

        $r165 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166);

        $r164 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r164);

     label003:
        return;

     label004:
        r69 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label005:
        r3 = r69;

     label006:
        tableswitch(i0)
        {
            case 1000: goto label008;
            case 1001: goto label082;
            case 1002: goto label083;
            case 1003: goto label084;
            case 1004: goto label085;
            case 1005: goto label086;
            case 1006: goto label088;
            case 1007: goto label007;
            case 1008: goto label090;
            case 1009: goto label093;
            case 1010: goto label094;
            case 1011: goto label095;
            case 1012: goto label096;
            case 1013: goto label097;
            case 1014: goto label098;
            case 1015: goto label099;
            case 1016: goto label100;
            case 1017: goto label101;
            case 1018: goto label102;
            case 1019: goto label104;
            case 1020: goto label105;
            case 1021: goto label106;
            case 1022: goto label107;
            case 1023: goto label103;
            case 1024: goto label108;
            case 1025: goto label109;
            case 1026: goto label110;
            case 1027: goto label111;
            case 1028: goto label115;
            case 1029: goto label116;
            case 1030: goto label119;
            case 1031: goto label121;
            case 1032: goto label122;
            case 1033: goto label123;
            case 1034: goto label124;
            case 1035: goto label120;
            case 1036: goto label125;
            case 1037: goto label081;
            default: goto label007;
        };

     label007:
        return;

     label008:
        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r60 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.CommandsInterface$RadioState getRadioStateFromInt(int)>($i9);

        $r155 = virtualinvoke r60.<com.android.internal.telephony.CommandsInterface$RadioState: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogMore(int,java.lang.String)>(i0, $r155);

        specialinvoke r0.<com.android.internal.telephony.RIL: void switchToRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>(r60);

        return;

     label009:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label010:
        goto label006;

     label011:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label012:
        goto label006;

     label013:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label014:
        goto label006;

     label015:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label016:
        goto label006;

     label017:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label018:
        goto label006;

     label019:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

     label020:
        goto label006;

     label021:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label022:
        goto label006;

     label023:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSignalStrength(android.os.Parcel)>(r1);

     label024:
        goto label006;

     label025:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseDataCallList(android.os.Parcel)>(r1);

     label026:
        goto label006;

     label027:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSuppServiceNotification(android.os.Parcel)>(r1);

     label028:
        goto label006;

     label029:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label030:
        goto label006;

     label031:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label032:
        goto label006;

     label033:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

     label034:
        goto label006;

     label035:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label036:
        goto label006;

     label037:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label038:
        goto label006;

     label039:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSimRefresh(android.os.Parcel)>(r1);

     label040:
        goto label006;

     label041:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCallRing(android.os.Parcel)>(r1);

     label042:
        goto label006;

     label043:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label044:
        goto label006;

     label045:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label046:
        goto label006;

     label047:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCdmaSms(android.os.Parcel)>(r1);

     label048:
        goto label006;

     label049:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseRaw(android.os.Parcel)>(r1);

     label050:
        goto label006;

     label051:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label052:
        goto label006;

     label053:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label054:
        goto label006;

     label055:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCdmaCallWaiting(android.os.Parcel)>(r1);

     label056:
        goto label006;

     label057:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label058:
        goto label006;

     label059:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.util.ArrayList responseCdmaInformationRecord(android.os.Parcel)>(r1);

     label060:
        goto label006;

     label061:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseRaw(android.os.Parcel)>(r1);

     label062:
        goto label006;

     label063:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label064:
        goto label006;

     label065:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label066:
        goto label006;

     label067:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label068:
        goto label006;

     label069:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label070:
        goto label006;

     label071:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label072:
        goto label006;

     label073:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label074:
        goto label006;

     label075:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

     label076:
        goto label006;

     label077:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.util.ArrayList responseCellInfoList(android.os.Parcel)>(r1);

     label078:
        goto label006;

     label079:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

     label080:
        r3 = r2;

        goto label006;

     label081:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r74 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mImsNetworkStateChangedRegistrants>;

        $r75 = new android.os.AsyncResult;

        specialinvoke $r75.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r74.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r75);

        return;

     label082:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r160 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCallStateRegistrants>;

        $r159 = new android.os.AsyncResult;

        specialinvoke $r159.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r160.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r159);

        return;

     label083:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r162 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoiceNetworkStateRegistrants>;

        $r161 = new android.os.AsyncResult;

        specialinvoke $r161.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r162.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r161);

        return;

     label084:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        r63 = newarray (java.lang.String)[2];

        $r158 = (java.lang.String) r3;

        r63[1] = $r158;

        r64 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage newFromCMT(java.lang.String[])>(r63);

        $r156 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mGsmSmsRegistrant>;

        if $r156 == null goto label003;

        r65 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mGsmSmsRegistrant>;

        $r157 = new android.os.AsyncResult;

        specialinvoke $r157.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r64, null);

        r59 = $r157;

        virtualinvoke r65.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r59);

        return;

     label085:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r145 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSmsStatusRegistrant>;

        if $r145 == null goto label003;

        r55 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSmsStatusRegistrant>;

        $r144 = new android.os.AsyncResult;

        specialinvoke $r144.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r62 = $r144;

        virtualinvoke r55.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r62);

        return;

     label086:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r153 = (int[]) r3;

        r58 = (int[]) $r153;

        $i8 = lengthof r58;

        if $i8 != 1 goto label087;

        $r147 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSmsOnSimRegistrant>;

        if $r147 == null goto label003;

        r57 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSmsOnSimRegistrant>;

        $r146 = new android.os.AsyncResult;

        specialinvoke $r146.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r58, null);

        r56 = $r146;

        virtualinvoke r57.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r56);

        return;

     label087:
        $r152 = new java.lang.StringBuilder;

        specialinvoke $r152.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NEW_SMS_ON_SIM ERROR with wrong length ");

        $i7 = lengthof r58;

        $r142 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r141 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r141);

        return;

     label088:
        $r132 = (java.lang.String[]) r3;

        r53 = (java.lang.String[]) $r132;

        $i6 = lengthof r53;

        if $i6 >= 2 goto label089;

        r53 = newarray (java.lang.String)[2];

        $r149 = (java.lang.String[]) r3;

        $r148 = (java.lang.String[]) $r149;

        $r154 = $r148[0];

        r53[0] = $r154;

        r53[1] = null;

     label089:
        $r133 = r53[0];

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogMore(int,java.lang.String)>(i0, $r133);

        $r151 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mUSSDRegistrant>;

        if $r151 == null goto label003;

        r52 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mUSSDRegistrant>;

        $r150 = new android.os.AsyncResult;

        specialinvoke $r150.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r53, null);

        r51 = $r150;

        virtualinvoke r52.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r51);

        return;

     label090:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r50 = newarray (java.lang.Object)[2];

        r50[0] = r3;

        $r129 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        r50[1] = $r129;

        $z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("telephony.test.ignore.nitz", 0);

        if $z2 == 0 goto label091;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("ignoring UNSOL_NITZ_TIME_RECEIVED");

        return;

     label091:
        $r130 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mNITZTimeRegistrant>;

        if $r130 == null goto label092;

        r49 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mNITZTimeRegistrant>;

        $r131 = new android.os.AsyncResult;

        specialinvoke $r131.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r50, null);

        r54 = $r131;

        virtualinvoke r49.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r54);

        return;

     label092:
        r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo> = r50;

        return;

     label093:
        $r139 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSignalStrengthRegistrant>;

        if $r139 == null goto label003;

        r46 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSignalStrengthRegistrant>;

        $r140 = new android.os.AsyncResult;

        specialinvoke $r140.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r45 = $r140;

        virtualinvoke r46.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r45);

        return;

     label094:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        r48 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mDataNetworkStateRegistrants>;

        $r138 = new android.os.AsyncResult;

        specialinvoke $r138.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r47 = $r138;

        virtualinvoke r48.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r47);

        return;

     label095:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r136 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSsnRegistrant>;

        if $r136 == null goto label003;

        r41 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSsnRegistrant>;

        $r137 = new android.os.AsyncResult;

        specialinvoke $r137.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r42 = $r137;

        virtualinvoke r41.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r42);

        return;

     label096:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r134 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatSessionEndRegistrant>;

        if $r134 == null goto label003;

        r43 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatSessionEndRegistrant>;

        $r135 = new android.os.AsyncResult;

        specialinvoke $r135.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r44 = $r135;

        virtualinvoke r43.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r44);

        return;

     label097:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r120 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatProCmdRegistrant>;

        if $r120 == null goto label003;

        r37 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatProCmdRegistrant>;

        $r119 = new android.os.AsyncResult;

        specialinvoke $r119.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r38 = $r119;

        virtualinvoke r37.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r38);

        return;

     label098:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r118 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatEventRegistrant>;

        if $r118 == null goto label003;

        r39 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatEventRegistrant>;

        $r117 = new android.os.AsyncResult;

        specialinvoke $r117.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r40 = $r117;

        virtualinvoke r39.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r40);

        return;

     label099:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r116 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatCallSetUpRegistrant>;

        if $r116 == null goto label003;

        r33 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatCallSetUpRegistrant>;

        $r115 = new android.os.AsyncResult;

        specialinvoke $r115.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r34 = $r115;

        virtualinvoke r33.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r34);

        return;

     label100:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r114 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mIccSmsFullRegistrant>;

        if $r114 == null goto label003;

        $r113 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mIccSmsFullRegistrant>;

        virtualinvoke $r113.<android.os.Registrant: void notifyRegistrant()>();

        return;

     label101:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r128 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccRefreshRegistrants>;

        if $r128 == null goto label003;

        r35 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccRefreshRegistrants>;

        $r127 = new android.os.AsyncResult;

        specialinvoke $r127.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r36 = $r127;

        virtualinvoke r35.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r36);

        return;

     label102:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r126 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mRingRegistrant>;

        if $r126 == null goto label003;

        r29 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mRingRegistrant>;

        $r125 = new android.os.AsyncResult;

        specialinvoke $r125.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r30 = $r125;

        virtualinvoke r29.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r30);

        return;

     label103:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogvRet(int,java.lang.Object)>(i0, r3);

        $r110 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mRestrictedStateRegistrant>;

        if $r110 == null goto label003;

        r31 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mRestrictedStateRegistrant>;

        $r109 = new android.os.AsyncResult;

        specialinvoke $r109.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r32 = $r109;

        virtualinvoke r31.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r32);

        return;

     label104:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r124 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        if $r124 == null goto label003;

        $r123 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r123.<android.os.RegistrantList: void notifyRegistrants()>();

        return;

     label105:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        r25 = (android.telephony.SmsMessage) r3;

        $r122 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCdmaSmsRegistrant>;

        if $r122 == null goto label003;

        r28 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCdmaSmsRegistrant>;

        $r121 = new android.os.AsyncResult;

        specialinvoke $r121.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r25, null);

        r27 = $r121;

        virtualinvoke r28.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r27);

        return;

     label106:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r106 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mGsmBroadcastSmsRegistrant>;

        if $r106 == null goto label003;

        r23 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mGsmBroadcastSmsRegistrant>;

        $r105 = new android.os.AsyncResult;

        specialinvoke $r105.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r26 = $r105;

        virtualinvoke r23.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r26);

        return;

     label107:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r108 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mIccSmsFullRegistrant>;

        if $r108 == null goto label003;

        $r107 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mIccSmsFullRegistrant>;

        virtualinvoke $r107.<android.os.Registrant: void notifyRegistrant()>();

        return;

     label108:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r112 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        if $r112 == null goto label003;

        $r111 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        virtualinvoke $r111.<android.os.Registrant: void notifyRegistrant()>();

        return;

     label109:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r100 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCallWaitingInfoRegistrants>;

        if $r100 == null goto label003;

        r21 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCallWaitingInfoRegistrants>;

        $r99 = new android.os.AsyncResult;

        specialinvoke $r99.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r24 = $r99;

        virtualinvoke r21.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r24);

        return;

     label110:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r102 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mOtaProvisionRegistrants>;

        if $r102 == null goto label003;

        r19 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mOtaProvisionRegistrants>;

        $r101 = new android.os.AsyncResult;

        specialinvoke $r101.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r22 = $r101;

        virtualinvoke r19.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r22);

        return;

     label111:
        r18 = (java.util.ArrayList) r3;

     label112:
        r17 = virtualinvoke r18.<java.util.ArrayList: java.util.Iterator iterator()>();

     label113:
        $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label003;

        $r103 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r20 = (com.android.internal.telephony.cdma.CdmaInformationRecords) $r103;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r20);

        specialinvoke r0.<com.android.internal.telephony.RIL: void notifyRegistrantsCdmaInfoRec(com.android.internal.telephony.cdma.CdmaInformationRecords)>(r20);

        goto label113;

     label114:
        $r163 := @caughtexception;

        r16 = $r163;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", "Unexpected exception casting to listInfoRecs", r16);

        return;

     label115:
        $r94 = (byte[]) r3;

        $r95 = (byte[]) $r94;

        $r92 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r95);

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogvRet(int,java.lang.Object)>(i0, $r92);

        $r93 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mUnsolOemHookRawRegistrant>;

        if $r93 == null goto label003;

        r15 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mUnsolOemHookRawRegistrant>;

        $r104 = new android.os.AsyncResult;

        specialinvoke $r104.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r14 = $r104;

        virtualinvoke r15.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>(r14);

        return;

     label116:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogvRet(int,java.lang.Object)>(i0, r3);

        $r86 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRingbackToneRegistrants>;

        if $r86 == null goto label003;

        $r87 = (int[]) r3;

        $r85 = (int[]) $r87;

        $i5 = $r85[0];

        if $i5 != 1 goto label118;

        z0 = 1;

     label117:
        $r98 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRingbackToneRegistrants>;

        $r97 = new android.os.AsyncResult;

        $r96 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        specialinvoke $r97.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r96, null);

        virtualinvoke $r98.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r97);

        return;

     label118:
        z0 = 0;

        goto label117;

     label119:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r88 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mResendIncallMuteRegistrants>;

        if $r88 == null goto label003;

        r12 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mResendIncallMuteRegistrants>;

        $r89 = new android.os.AsyncResult;

        specialinvoke $r89.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r13 = $r89;

        virtualinvoke r12.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r13);

        return;

     label120:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r73 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoiceRadioTechChangedRegistrants>;

        if $r73 == null goto label003;

        r10 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoiceRadioTechChangedRegistrants>;

        $r72 = new android.os.AsyncResult;

        specialinvoke $r72.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r11 = $r72;

        virtualinvoke r10.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r11);

        return;

     label121:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r90 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCdmaSubscriptionChangedRegistrants>;

        if $r90 == null goto label003;

        r8 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCdmaSubscriptionChangedRegistrants>;

        $r91 = new android.os.AsyncResult;

        specialinvoke $r91.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r9 = $r91;

        virtualinvoke r8.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r9);

        return;

     label122:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r81 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCdmaPrlChangedRegistrants>;

        if $r81 == null goto label003;

        r6 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCdmaPrlChangedRegistrants>;

        $r80 = new android.os.AsyncResult;

        specialinvoke $r80.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r7 = $r80;

        virtualinvoke r6.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r7);

        return;

     label123:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r84 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mExitEmergencyCallbackModeRegistrants>;

        if $r84 == null goto label003;

        $r78 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mExitEmergencyCallbackModeRegistrants>;

        $r79 = new android.os.AsyncResult;

        specialinvoke $r79.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r78.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r79);

        return;

     label124:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setRadioPower(boolean,android.os.Message)>(0, null);

        $i3 = r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setPreferredNetworkType(int,android.os.Message)>($i3, null);

        $i2 = r0.<com.android.internal.telephony.RIL: int mCdmaSubscription>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setCdmaSubscriptionSource(int,android.os.Message)>($i2, null);

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setCellInfoListRate(int,android.os.Message)>(2147483647, null);

        $r83 = (int[]) r3;

        $r82 = (int[]) $r83;

        $i4 = $r82[0];

        specialinvoke r0.<com.android.internal.telephony.RIL: void notifyRegistrantsRilConnectionChanged(int)>($i4);

        return;

     label125:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r3);

        $r77 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRilCellInfoListRegistrants>;

        if $r77 == null goto label003;

        r4 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRilCellInfoListRegistrants>;

        $r76 = new android.os.AsyncResult;

        specialinvoke $r76.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r3, null);

        r5 = $r76;

        virtualinvoke r4.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r5);

        return;

        catch java.lang.Throwable from label001 to label002 with label002;
        catch java.lang.Throwable from label004 to label005 with label002;
        catch java.lang.Throwable from label009 to label010 with label002;
        catch java.lang.Throwable from label011 to label012 with label002;
        catch java.lang.Throwable from label013 to label014 with label002;
        catch java.lang.Throwable from label015 to label016 with label002;
        catch java.lang.Throwable from label017 to label018 with label002;
        catch java.lang.Throwable from label019 to label020 with label002;
        catch java.lang.Throwable from label021 to label022 with label002;
        catch java.lang.Throwable from label023 to label024 with label002;
        catch java.lang.Throwable from label025 to label026 with label002;
        catch java.lang.Throwable from label027 to label028 with label002;
        catch java.lang.Throwable from label029 to label030 with label002;
        catch java.lang.Throwable from label031 to label032 with label002;
        catch java.lang.Throwable from label033 to label034 with label002;
        catch java.lang.Throwable from label035 to label036 with label002;
        catch java.lang.Throwable from label037 to label038 with label002;
        catch java.lang.Throwable from label039 to label040 with label002;
        catch java.lang.Throwable from label041 to label042 with label002;
        catch java.lang.Throwable from label043 to label044 with label002;
        catch java.lang.Throwable from label045 to label046 with label002;
        catch java.lang.Throwable from label047 to label048 with label002;
        catch java.lang.Throwable from label049 to label050 with label002;
        catch java.lang.Throwable from label051 to label052 with label002;
        catch java.lang.Throwable from label053 to label054 with label002;
        catch java.lang.Throwable from label055 to label056 with label002;
        catch java.lang.Throwable from label057 to label058 with label002;
        catch java.lang.Throwable from label059 to label060 with label002;
        catch java.lang.Throwable from label061 to label062 with label002;
        catch java.lang.Throwable from label063 to label064 with label002;
        catch java.lang.Throwable from label065 to label066 with label002;
        catch java.lang.Throwable from label067 to label068 with label002;
        catch java.lang.Throwable from label069 to label070 with label002;
        catch java.lang.Throwable from label071 to label072 with label002;
        catch java.lang.Throwable from label073 to label074 with label002;
        catch java.lang.Throwable from label075 to label076 with label002;
        catch java.lang.Throwable from label077 to label078 with label002;
        catch java.lang.Throwable from label079 to label080 with label002;
        catch java.lang.ClassCastException from label111 to label112 with label114;
    }

    private static int readRilMessage(java.io.InputStream, byte[]) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte[] r1;
        int i0, i1, i2, i3, i4, i5, i6, $i11, $i12, $i15, $i16, $i19;
        byte $b7, $b9, $b14, $b18;
        short $s8, $s10, $s13, $s17;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: byte[];

        i0 = 0;

        i1 = 4;

     label1:
        i2 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        if i2 >= 0 goto label2;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", "Hit EOS reading message length");

        return -1;

     label2:
        i0 = i0 + i2;

        i1 = i1 - i2;

        if i1 > 0 goto label1;

        $b7 = r1[0];

        $s8 = 255 & $b7;

        $i12 = $s8 << 24;

        $b9 = r1[1];

        $s10 = 255 & $b9;

        $i11 = $s10 << 16;

        $i15 = $i12 | $i11;

        $b14 = r1[2];

        $s13 = 255 & $b14;

        $i16 = $s13 << 8;

        $i19 = $i15 | $i16;

        $b18 = r1[3];

        $s17 = 255 & $b18;

        i3 = $i19 | $s17;

        i4 = 0;

        i5 = i3;

     label3:
        i6 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i4, i5);

        if i6 >= 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hit EOS reading message.  messageLength=");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remaining=");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r7);

        return -1;

     label4:
        i4 = i4 + i6;

        i5 = i5 - i6;

        if i5 > 0 goto label3;

        return i3;
    }

    static java.lang.String requestToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label002;
            case 2: goto label003;
            case 3: goto label004;
            case 4: goto label005;
            case 5: goto label006;
            case 6: goto label007;
            case 7: goto label008;
            case 8: goto label009;
            case 9: goto label010;
            case 10: goto label011;
            case 11: goto label012;
            case 12: goto label013;
            case 13: goto label014;
            case 14: goto label015;
            case 15: goto label016;
            case 16: goto label017;
            case 17: goto label018;
            case 18: goto label019;
            case 19: goto label020;
            case 20: goto label021;
            case 21: goto label022;
            case 22: goto label023;
            case 23: goto label024;
            case 24: goto label025;
            case 25: goto label026;
            case 26: goto label027;
            case 27: goto label028;
            case 28: goto label029;
            case 29: goto label030;
            case 30: goto label031;
            case 31: goto label032;
            case 32: goto label033;
            case 33: goto label034;
            case 34: goto label035;
            case 35: goto label036;
            case 36: goto label037;
            case 37: goto label038;
            case 38: goto label039;
            case 39: goto label040;
            case 40: goto label041;
            case 41: goto label042;
            case 42: goto label043;
            case 43: goto label044;
            case 44: goto label045;
            case 45: goto label046;
            case 46: goto label047;
            case 47: goto label048;
            case 48: goto label049;
            case 49: goto label050;
            case 50: goto label051;
            case 51: goto label052;
            case 52: goto label053;
            case 53: goto label054;
            case 54: goto label055;
            case 55: goto label056;
            case 56: goto label057;
            case 57: goto label058;
            case 58: goto label059;
            case 59: goto label060;
            case 60: goto label061;
            case 61: goto label062;
            case 62: goto label063;
            case 63: goto label064;
            case 64: goto label065;
            case 65: goto label066;
            case 66: goto label067;
            case 67: goto label068;
            case 68: goto label069;
            case 69: goto label070;
            case 70: goto label071;
            case 71: goto label072;
            case 72: goto label073;
            case 73: goto label074;
            case 74: goto label075;
            case 75: goto label076;
            case 76: goto label077;
            case 77: goto label078;
            case 78: goto label079;
            case 79: goto label080;
            case 80: goto label081;
            case 81: goto label082;
            case 82: goto label083;
            case 83: goto label084;
            case 84: goto label085;
            case 85: goto label086;
            case 86: goto label094;
            case 87: goto label087;
            case 88: goto label088;
            case 89: goto label089;
            case 90: goto label090;
            case 91: goto label093;
            case 92: goto label091;
            case 93: goto label092;
            case 94: goto label095;
            case 95: goto label096;
            case 96: goto label097;
            case 97: goto label098;
            case 98: goto label099;
            case 99: goto label102;
            case 100: goto label100;
            case 101: goto label101;
            case 102: goto label103;
            case 103: goto label104;
            case 104: goto label105;
            case 105: goto label106;
            case 106: goto label107;
            case 107: goto label108;
            case 108: goto label109;
            case 109: goto label110;
            case 110: goto label111;
            case 111: goto label112;
            case 112: goto label113;
            case 113: goto label114;
            default: goto label001;
        };

     label001:
        return "<unknown request>";

     label002:
        return "GET_SIM_STATUS";

     label003:
        return "ENTER_SIM_PIN";

     label004:
        return "ENTER_SIM_PUK";

     label005:
        return "ENTER_SIM_PIN2";

     label006:
        return "ENTER_SIM_PUK2";

     label007:
        return "CHANGE_SIM_PIN";

     label008:
        return "CHANGE_SIM_PIN2";

     label009:
        return "ENTER_NETWORK_DEPERSONALIZATION";

     label010:
        return "GET_CURRENT_CALLS";

     label011:
        return "DIAL";

     label012:
        return "GET_IMSI";

     label013:
        return "HANGUP";

     label014:
        return "HANGUP_WAITING_OR_BACKGROUND";

     label015:
        return "HANGUP_FOREGROUND_RESUME_BACKGROUND";

     label016:
        return "REQUEST_SWITCH_WAITING_OR_HOLDING_AND_ACTIVE";

     label017:
        return "CONFERENCE";

     label018:
        return "UDUB";

     label019:
        return "LAST_CALL_FAIL_CAUSE";

     label020:
        return "SIGNAL_STRENGTH";

     label021:
        return "VOICE_REGISTRATION_STATE";

     label022:
        return "DATA_REGISTRATION_STATE";

     label023:
        return "OPERATOR";

     label024:
        return "RADIO_POWER";

     label025:
        return "DTMF";

     label026:
        return "SEND_SMS";

     label027:
        return "SEND_SMS_EXPECT_MORE";

     label028:
        return "SETUP_DATA_CALL";

     label029:
        return "SIM_IO";

     label030:
        return "SEND_USSD";

     label031:
        return "CANCEL_USSD";

     label032:
        return "GET_CLIR";

     label033:
        return "SET_CLIR";

     label034:
        return "QUERY_CALL_FORWARD_STATUS";

     label035:
        return "SET_CALL_FORWARD";

     label036:
        return "QUERY_CALL_WAITING";

     label037:
        return "SET_CALL_WAITING";

     label038:
        return "SMS_ACKNOWLEDGE";

     label039:
        return "GET_IMEI";

     label040:
        return "GET_IMEISV";

     label041:
        return "ANSWER";

     label042:
        return "DEACTIVATE_DATA_CALL";

     label043:
        return "QUERY_FACILITY_LOCK";

     label044:
        return "SET_FACILITY_LOCK";

     label045:
        return "CHANGE_BARRING_PASSWORD";

     label046:
        return "QUERY_NETWORK_SELECTION_MODE";

     label047:
        return "SET_NETWORK_SELECTION_AUTOMATIC";

     label048:
        return "SET_NETWORK_SELECTION_MANUAL";

     label049:
        return "QUERY_AVAILABLE_NETWORKS ";

     label050:
        return "DTMF_START";

     label051:
        return "DTMF_STOP";

     label052:
        return "BASEBAND_VERSION";

     label053:
        return "SEPARATE_CONNECTION";

     label054:
        return "SET_MUTE";

     label055:
        return "GET_MUTE";

     label056:
        return "QUERY_CLIP";

     label057:
        return "LAST_DATA_CALL_FAIL_CAUSE";

     label058:
        return "DATA_CALL_LIST";

     label059:
        return "RESET_RADIO";

     label060:
        return "OEM_HOOK_RAW";

     label061:
        return "OEM_HOOK_STRINGS";

     label062:
        return "SCREEN_STATE";

     label063:
        return "SET_SUPP_SVC_NOTIFICATION";

     label064:
        return "WRITE_SMS_TO_SIM";

     label065:
        return "DELETE_SMS_ON_SIM";

     label066:
        return "SET_BAND_MODE";

     label067:
        return "QUERY_AVAILABLE_BAND_MODE";

     label068:
        return "REQUEST_STK_GET_PROFILE";

     label069:
        return "REQUEST_STK_SET_PROFILE";

     label070:
        return "REQUEST_STK_SEND_ENVELOPE_COMMAND";

     label071:
        return "REQUEST_STK_SEND_TERMINAL_RESPONSE";

     label072:
        return "REQUEST_STK_HANDLE_CALL_SETUP_REQUESTED_FROM_SIM";

     label073:
        return "REQUEST_EXPLICIT_CALL_TRANSFER";

     label074:
        return "REQUEST_SET_PREFERRED_NETWORK_TYPE";

     label075:
        return "REQUEST_GET_PREFERRED_NETWORK_TYPE";

     label076:
        return "REQUEST_GET_NEIGHBORING_CELL_IDS";

     label077:
        return "REQUEST_SET_LOCATION_UPDATES";

     label078:
        return "RIL_REQUEST_CDMA_SET_SUBSCRIPTION_SOURCE";

     label079:
        return "RIL_REQUEST_CDMA_SET_ROAMING_PREFERENCE";

     label080:
        return "RIL_REQUEST_CDMA_QUERY_ROAMING_PREFERENCE";

     label081:
        return "RIL_REQUEST_SET_TTY_MODE";

     label082:
        return "RIL_REQUEST_QUERY_TTY_MODE";

     label083:
        return "RIL_REQUEST_CDMA_SET_PREFERRED_VOICE_PRIVACY_MODE";

     label084:
        return "RIL_REQUEST_CDMA_QUERY_PREFERRED_VOICE_PRIVACY_MODE";

     label085:
        return "RIL_REQUEST_CDMA_FLASH";

     label086:
        return "RIL_REQUEST_CDMA_BURST_DTMF";

     label087:
        return "RIL_REQUEST_CDMA_SEND_SMS";

     label088:
        return "RIL_REQUEST_CDMA_SMS_ACKNOWLEDGE";

     label089:
        return "RIL_REQUEST_GSM_GET_BROADCAST_CONFIG";

     label090:
        return "RIL_REQUEST_GSM_SET_BROADCAST_CONFIG";

     label091:
        return "RIL_REQUEST_CDMA_GET_BROADCAST_CONFIG";

     label092:
        return "RIL_REQUEST_CDMA_SET_BROADCAST_CONFIG";

     label093:
        return "RIL_REQUEST_GSM_BROADCAST_ACTIVATION";

     label094:
        return "RIL_REQUEST_CDMA_VALIDATE_AND_WRITE_AKEY";

     label095:
        return "RIL_REQUEST_CDMA_BROADCAST_ACTIVATION";

     label096:
        return "RIL_REQUEST_CDMA_SUBSCRIPTION";

     label097:
        return "RIL_REQUEST_CDMA_WRITE_SMS_TO_RUIM";

     label098:
        return "RIL_REQUEST_CDMA_DELETE_SMS_ON_RUIM";

     label099:
        return "RIL_REQUEST_DEVICE_IDENTITY";

     label100:
        return "RIL_REQUEST_GET_SMSC_ADDRESS";

     label101:
        return "RIL_REQUEST_SET_SMSC_ADDRESS";

     label102:
        return "REQUEST_EXIT_EMERGENCY_CALLBACK_MODE";

     label103:
        return "RIL_REQUEST_REPORT_SMS_MEMORY_STATUS";

     label104:
        return "RIL_REQUEST_REPORT_STK_SERVICE_IS_RUNNING";

     label105:
        return "RIL_REQUEST_CDMA_GET_SUBSCRIPTION_SOURCE";

     label106:
        return "RIL_REQUEST_ISIM_AUTHENTICATION";

     label107:
        return "RIL_REQUEST_ACKNOWLEDGE_INCOMING_GSM_SMS_WITH_PDU";

     label108:
        return "RIL_REQUEST_STK_SEND_ENVELOPE_WITH_STATUS";

     label109:
        return "RIL_REQUEST_VOICE_RADIO_TECH";

     label110:
        return "RIL_REQUEST_GET_CELL_INFO_LIST";

     label111:
        return "RIL_REQUEST_SET_CELL_INFO_LIST_RATE";

     label112:
        return "RIL_REQUEST_SET_INITIAL_ATTACH_APN";

     label113:
        return "RIL_REQUEST_IMS_REGISTRATION_STATE";

     label114:
        return "RIL_REQUEST_IMS_SEND_SMS";
    }

    private java.lang.Object responseCallForward(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.internal.telephony.CallForwardInfo[] r2;
        com.android.internal.telephony.CallForwardInfo $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = newarray (com.android.internal.telephony.CallForwardInfo)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = new com.android.internal.telephony.CallForwardInfo;

        specialinvoke $r3.<com.android.internal.telephony.CallForwardInfo: void <init>()>();

        r2[i1] = $r3;

        $r4 = r2[i1];

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4.<com.android.internal.telephony.CallForwardInfo: int status> = $i2;

        $r5 = r2[i1];

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r5.<com.android.internal.telephony.CallForwardInfo: int reason> = $i3;

        $r6 = r2[i1];

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6.<com.android.internal.telephony.CallForwardInfo: int serviceClass> = $i4;

        $r7 = r2[i1];

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r7.<com.android.internal.telephony.CallForwardInfo: int toa> = $i5;

        $r8 = r2[i1];

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r8.<com.android.internal.telephony.CallForwardInfo: java.lang.String number> = $r10;

        $r9 = r2[i1];

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r9.<com.android.internal.telephony.CallForwardInfo: int timeSeconds> = $i6;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseCallList(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.util.ArrayList r2, $r6;
        com.android.internal.telephony.DriverCall r3, $r9;
        boolean z0, z1, z2, z3, $z4, $z6;
        byte[] r4, $r25, $r38, $r41;
        java.lang.Object[] r5;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        android.os.Registrant $r8, $r10;
        com.android.internal.telephony.DriverCall$State $r11;
        java.lang.String $r12, $r13, $r14, $r15, $r29, $r32, $r36, $r39, $r42;
        com.android.internal.telephony.UUSInfo $r16, $r17, $r20, $r21, $r22, $r23, $r26, $r37, $r40;
        android.os.RegistrantList $r18, $r19;
        java.lang.Integer $r24, $r27, $r30;
        java.lang.StringBuilder $r28, $r31, $r33, $r34, $r35, $r43;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r6;

        i1 = 0;

     label01:
        if i1 >= i0 goto label14;

        $r9 = new com.android.internal.telephony.DriverCall;

        specialinvoke $r9.<com.android.internal.telephony.DriverCall: void <init>()>();

        r3 = $r9;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r11 = staticinvoke <com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State stateFromCLCC(int)>($i2);

        r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state> = $r11;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.DriverCall: int index> = $i4;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.DriverCall: int TOA> = $i3;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label08;

        z0 = 1;

     label02:
        r3.<com.android.internal.telephony.DriverCall: boolean isMpty> = z0;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label09;

        z1 = 1;

     label03:
        r3.<com.android.internal.telephony.DriverCall: boolean isMT> = z1;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.DriverCall: int als> = $i8;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i7 != 0 goto label10;

        z2 = 0;

     label04:
        r3.<com.android.internal.telephony.DriverCall: boolean isVoice> = z2;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label11;

        z3 = 1;

     label05:
        r3.<com.android.internal.telephony.DriverCall: boolean isVoicePrivacy> = z3;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r3.<com.android.internal.telephony.DriverCall: java.lang.String number> = $r12;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i10 = staticinvoke <com.android.internal.telephony.DriverCall: int presentationFromCLIP(int)>($i11);

        r3.<com.android.internal.telephony.DriverCall: int numberPresentation> = $i10;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r3.<com.android.internal.telephony.DriverCall: java.lang.String name> = $r13;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.DriverCall: int namePresentation> = $i14;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i12 != 1 goto label12;

        $r16 = new com.android.internal.telephony.UUSInfo;

        specialinvoke $r16.<com.android.internal.telephony.UUSInfo: void <init>()>();

        r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo> = $r16;

        $r17 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke $r17.<com.android.internal.telephony.UUSInfo: void setType(int)>($i16);

        $r20 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke $r20.<com.android.internal.telephony.UUSInfo: void setDcs(int)>($i15);

        r4 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        $r22 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        virtualinvoke $r22.<com.android.internal.telephony.UUSInfo: void setUserData(byte[])>(r4);

        r5 = newarray (java.lang.Object)[3];

        $r21 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $i17 = virtualinvoke $r21.<com.android.internal.telephony.UUSInfo: int getType()>();

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        r5[0] = $r24;

        $r23 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $i18 = virtualinvoke $r23.<com.android.internal.telephony.UUSInfo: int getDcs()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        r5[1] = $r27;

        $r26 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $r25 = virtualinvoke $r26.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        $i19 = lengthof $r25;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        r5[2] = $r30;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Incoming UUS : type=%d, dcs=%d, length=%d", r5);

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r29);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming UUS : data (string)=");

        $r36 = new java.lang.String;

        $r37 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $r38 = virtualinvoke $r37.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        specialinvoke $r36.<java.lang.String: void <init>(byte[])>($r38);

        $r31 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming UUS : data (hex): ");

        $r40 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $r41 = virtualinvoke $r40.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        $r42 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r41);

        $r43 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r39 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r39);

     label06:
        $r14 = r3.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $i13 = r3.<com.android.internal.telephony.DriverCall: int TOA>;

        $r15 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>($r14, $i13);

        r3.<com.android.internal.telephony.DriverCall: java.lang.String number> = $r15;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $z6 = r3.<com.android.internal.telephony.DriverCall: boolean isVoicePrivacy>;

        if $z6 == 0 goto label13;

        $r19 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoicePrivacyOnRegistrants>;

        virtualinvoke $r19.<android.os.RegistrantList: void notifyRegistrants()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("InCall VoicePrivacy is enabled");

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        z0 = 0;

        goto label02;

     label09:
        z1 = 0;

        goto label03;

     label10:
        z2 = 1;

        goto label04;

     label11:
        z3 = 0;

        goto label05;

     label12:
        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>("Incoming UUS : NOT present!");

        goto label06;

     label13:
        $r18 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoicePrivacyOffRegistrants>;

        virtualinvoke $r18.<android.os.RegistrantList: void notifyRegistrants()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("InCall VoicePrivacy is disabled");

        goto label07;

     label14:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r2);

        if i0 != 0 goto label15;

        $r7 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        $z4 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        if $z4 == 0 goto label15;

        $r8 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        if $r8 == null goto label15;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("responseCallList: call ended, testing emergency call, notify ECM Registrants");

        $r10 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        virtualinvoke $r10.<android.os.Registrant: void notifyRegistrant()>();

     label15:
        return r2;
    }

    private java.lang.Object responseCallRing(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        char[] r2;
        int $i0, $i2, $i4, $i6;
        char $c1, $c3, $c5, $c7;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        r2 = newarray (char)[4];

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $c1 = (char) $i0;

        r2[0] = $c1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $c3 = (char) $i2;

        r2[1] = $c3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $c5 = (char) $i4;

        r2[2] = $c5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $c7 = (char) $i6;

        r2[3] = $c7;

        return r2;
    }

    private java.lang.Object responseCdmaBroadcastConfig(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 != 0 goto label2;

        r2 = newarray (int)[94];

        r2[0] = 31;

        i3 = 1;

     label1:
        if i3 >= 94 goto label4;

        $i7 = i3 + 0;

        $i6 = i3 / 3;

        r2[$i7] = $i6;

        $i8 = i3 + 1;

        r2[$i8] = 1;

        $i9 = i3 + 2;

        r2[$i9] = 0;

        i3 = i3 + 3;

        goto label1;

     label2:
        $i4 = i0 * 3;

        i1 = 1 + $i4;

        r2 = newarray (int)[i1];

        r2[0] = i0;

        i2 = 1;

     label3:
        if i2 >= i1 goto label4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2[i2] = $i5;

        i2 = i2 + 1;

        goto label3;

     label4:
        return r2;
    }

    private java.lang.Object responseCdmaCallWaiting(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r2, $r3;
        java.lang.String $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r3 = new com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        specialinvoke $r3.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: void <init>()>();

        r2 = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String number> = $r4;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i1 = staticinvoke <com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int presentationFromCLIP(int)>($i0);

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPresentation> = $i1;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String name> = $r5;

        $i2 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPresentation>;

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int namePresentation> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int isPresent> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int signalType> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int alertPitch> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int signal> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberType> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPlan> = $i8;

        return r2;
    }

    private java.util.ArrayList responseCdmaInformationRecord(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1;
        java.util.ArrayList r2, $r3;
        com.android.internal.telephony.cdma.CdmaInformationRecords $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = new com.android.internal.telephony.cdma.CdmaInformationRecords;

        specialinvoke $r4.<com.android.internal.telephony.cdma.CdmaInformationRecords: void <init>(android.os.Parcel)>(r1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseCdmaSms(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        android.telephony.SmsMessage $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r2 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage newFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    private java.util.ArrayList responseCellInfoList(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1;
        java.util.ArrayList r2, $r3;
        android.os.Parcelable$Creator $r4;
        java.lang.Object $r5;
        android.telephony.CellInfo $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = <android.telephony.CellInfo: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r6 = (android.telephony.CellInfo) $r5;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseCellList(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i2, $i3;
        java.util.ArrayList r2, $r4;
        java.lang.String r3, $r6;
        byte b1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.telephony.NeighboringCellInfo $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("gsm.network.type", "unknown");

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("GPRS");

        if $z0 == 0 goto label3;

        b1 = 1;

     label1:
        if b1 == 0 goto label9;

        i2 = 0;

     label2:
        if i2 >= i0 goto label9;

        $r5 = new android.telephony.NeighboringCellInfo;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        specialinvoke $r5.<android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>($i3, $r6, b1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label2;

     label3:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("EDGE");

        if $z1 == 0 goto label4;

        b1 = 2;

        goto label1;

     label4:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("UMTS");

        if $z2 == 0 goto label5;

        b1 = 3;

        goto label1;

     label5:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("HSDPA");

        if $z3 == 0 goto label6;

        b1 = 8;

        goto label1;

     label6:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("HSUPA");

        if $z4 == 0 goto label7;

        b1 = 9;

        goto label1;

     label7:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("HSPA");

        if $z5 == 0 goto label8;

        b1 = 10;

        goto label1;

     label8:
        b1 = 0;

        goto label1;

     label9:
        return r2;
    }

    private java.lang.Object responseDataCallList(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, i2;
        java.util.ArrayList r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        com.android.internal.telephony.dataconnection.DataCallResponse $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("responseDataCallList ver=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r8);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(i1);

        r2 = $r9;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r10 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.dataconnection.DataCallResponse getDataCallResponse(android.os.Parcel,int)>(r1, i0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseGetPreferredNetworkType(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int[] r2, $r4;
        java.lang.Object $r3;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        $r4 = (int[]) $r3;

        r2 = (int[]) $r4;

        $i0 = lengthof r2;

        if $i0 < 1 goto label1;

        $i1 = r2[0];

        r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType> = $i1;

     label1:
        return r2;
    }

    private java.lang.Object responseGmsBroadcastConfig(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, i5, $i6;
        java.util.ArrayList r2, $r3;
        boolean z0;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 != 1 goto label3;

        z0 = 1;

     label2:
        $r4 = new com.android.internal.telephony.gsm.SmsBroadcastConfigInfo;

        specialinvoke $r4.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void <init>(int,int,int,int,boolean)>(i2, i3, i4, i5, z0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label3:
        z0 = 0;

        goto label2;

     label4:
        return r2;
    }

    private java.lang.Object responseICC_IO(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.uicc.IccIoResult $r2;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new com.android.internal.telephony.uicc.IccIoResult;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        specialinvoke $r2.<com.android.internal.telephony.uicc.IccIoResult: void <init>(int,int,java.lang.String)>($i0, $i1, $r3);

        return $r2;
    }

    private java.lang.Object responseIccCardStatus(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.uicc.IccCardStatus r2, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.internal.telephony.uicc.IccCardApplicationStatus r3, $r6;
        com.android.internal.telephony.uicc.IccCardApplicationStatus[] $r5, $r14;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r7;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState $r8;
        java.lang.String $r9, $r11;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState $r10;
        com.android.internal.telephony.uicc.IccCardStatus$PinState $r12, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r4 = new com.android.internal.telephony.uicc.IccCardStatus;

        specialinvoke $r4.<com.android.internal.telephony.uicc.IccCardStatus: void <init>()>();

        r2 = $r4;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r2.<com.android.internal.telephony.uicc.IccCardStatus: void setCardState(int)>($i2);

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r2.<com.android.internal.telephony.uicc.IccCardStatus: void setUniversalPinState(int)>($i3);

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.uicc.IccCardStatus: int mGsmUmtsSubscriptionAppIndex> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.uicc.IccCardStatus: int mCdmaSubscriptionAppIndex> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.uicc.IccCardStatus: int mImsSubscriptionAppIndex> = $i6;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 <= 8 goto label1;

        i0 = 8;

     label1:
        $r5 = newarray (com.android.internal.telephony.uicc.IccCardApplicationStatus)[i0];

        r2.<com.android.internal.telephony.uicc.IccCardStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus[] mApplications> = $r5;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r6 = new com.android.internal.telephony.uicc.IccCardApplicationStatus;

        specialinvoke $r6.<com.android.internal.telephony.uicc.IccCardApplicationStatus: void <init>()>();

        r3 = $r6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r7 = virtualinvoke r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType AppTypeFromRILInt(int)>($i7);

        r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType app_type> = $r7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r8 = virtualinvoke r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState AppStateFromRILInt(int)>($i8);

        r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState app_state> = $r8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r10 = virtualinvoke r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState PersoSubstateFromRILInt(int)>($i9);

        r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState perso_substate> = $r10;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: java.lang.String aid> = $r9;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: java.lang.String app_label> = $r11;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: int pin1_replaced> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r12 = virtualinvoke r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardStatus$PinState PinStateFromRILInt(int)>($i11);

        r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardStatus$PinState pin1> = $r12;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r13 = virtualinvoke r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardStatus$PinState PinStateFromRILInt(int)>($i12);

        r3.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardStatus$PinState pin2> = $r13;

        $r14 = r2.<com.android.internal.telephony.uicc.IccCardStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus[] mApplications>;

        $r14[i1] = r3;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r2;
    }

    private java.lang.Object responseInts(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, $i2;
        int[] r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = newarray (int)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2[i1] = $i2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseOperatorInfos(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        java.lang.String[] r2, $r5;
        java.util.ArrayList r3, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object $r4;
        com.android.internal.telephony.OperatorInfo $r7;
        java.lang.String $r8, $r9, $r10, $r11, $r16;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r4 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        $r5 = (java.lang.String[]) $r4;

        r2 = (java.lang.String[]) $r5;

        $i1 = lengthof r2;

        $i2 = $i1 % 4;

        if $i2 == 0 goto label1;

        $r12 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_QUERY_AVAILABLE_NETWORKS: invalid response. Got ");

        $i10 = lengthof r2;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" strings, expected multible of 4");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label1:
        $r6 = new java.util.ArrayList;

        $i3 = lengthof r2;

        $i4 = $i3 / 4;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i4);

        r3 = $r6;

        i0 = 0;

     label2:
        $i5 = lengthof r2;

        if i0 >= $i5 goto label3;

        $r7 = new com.android.internal.telephony.OperatorInfo;

        $i6 = i0 + 0;

        $r10 = r2[$i6];

        $i7 = i0 + 1;

        $r11 = r2[$i7];

        $i9 = i0 + 2;

        $r8 = r2[$i9];

        $i8 = i0 + 3;

        $r9 = r2[$i8];

        specialinvoke $r7.<com.android.internal.telephony.OperatorInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r11, $r8, $r9);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i0 = i0 + 4;

        goto label2;

     label3:
        return r3;
    }

    private java.lang.Object responseRaw(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        byte[] $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        return $r2;
    }

    private java.lang.Object responseSMS(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.SmsResponse $r2;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new com.android.internal.telephony.SmsResponse;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        specialinvoke $r2.<com.android.internal.telephony.SmsResponse: void <init>(int,java.lang.String,int)>($i0, $r3, $i1);

        return $r2;
    }

    private java.lang.Object responseSetupDataCall(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, $i2;
        com.android.internal.telephony.dataconnection.DataCallResponse r2, $r6, $r13;
        java.lang.String r3, r4, r5, $r11, $r12, $r14, $r15, $r19, $r22;
        java.lang.RuntimeException $r7, $r26;
        java.lang.StringBuilder $r8, $r9, $r10, $r16, $r17, $r18, $r21, $r23, $r24;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r20, $r25, $r27;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 >= 5 goto label5;

        $r13 = new com.android.internal.telephony.dataconnection.DataCallResponse;

        specialinvoke $r13.<com.android.internal.telephony.dataconnection.DataCallResponse: void <init>()>();

        r2 = $r13;

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int version> = i0;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int cid> = $i2;

        $r14 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String ifname> = $r14;

        $r15 = r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String ifname>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r15);

        if $z0 == 0 goto label1;

        $r26 = new java.lang.RuntimeException;

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>("RIL_REQUEST_SETUP_DATA_CALL response, no ifname");

        throw $r26;

     label1:
        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        $r25 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] addresses> = $r25;

     label2:
        if i1 < 4 goto label3;

        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("responseSetupDataCall got dnses=");

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r22);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z3 != 0 goto label3;

        $r27 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] dnses> = $r27;

     label3:
        if i1 < 5 goto label4;

        r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("responseSetupDataCall got gateways=");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r19);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z2 != 0 goto label4;

        $r20 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] gateways> = $r20;

     label4:
        return r2;

     label5:
        if i1 == 1 goto label6;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_SETUP_DATA_CALL response expecting 1 RIL_Data_Call_response_v5 got ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label6:
        $r6 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.dataconnection.DataCallResponse getDataCallResponse(android.os.Parcel,int)>(r1, i0);

        return $r6;
    }

    private java.lang.Object responseSignalStrength(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        android.telephony.SignalStrength $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r2 = staticinvoke <android.telephony.SignalStrength: android.telephony.SignalStrength makeSignalStrengthFromRilParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    private java.lang.Object responseSimRefresh(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.uicc.IccRefreshResponse r2, $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r3 = new com.android.internal.telephony.uicc.IccRefreshResponse;

        specialinvoke $r3.<com.android.internal.telephony.uicc.IccRefreshResponse: void <init>()>();

        r2 = $r3;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.uicc.IccRefreshResponse: int refreshResult> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.uicc.IccRefreshResponse: int efId> = $i1;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.uicc.IccRefreshResponse: java.lang.String aid> = $r4;

        return r2;
    }

    private java.lang.Object responseString(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        return $r2;
    }

    private java.lang.Object responseStrings(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] readStringArray()>();

        return $r2;
    }

    private java.lang.Object responseSuppServiceNotification(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.gsm.SuppServiceNotification r2, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r3 = new com.android.internal.telephony.gsm.SuppServiceNotification;

        specialinvoke $r3.<com.android.internal.telephony.gsm.SuppServiceNotification: void <init>()>();

        r2 = $r3;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: int notificationType> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: int code> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: int index> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: int type> = $i3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: java.lang.String number> = $r4;

        return r2;
    }

    static java.lang.String responseToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1000: goto label02;
            case 1001: goto label03;
            case 1002: goto label04;
            case 1003: goto label05;
            case 1004: goto label06;
            case 1005: goto label07;
            case 1006: goto label08;
            case 1007: goto label09;
            case 1008: goto label10;
            case 1009: goto label11;
            case 1010: goto label12;
            case 1011: goto label13;
            case 1012: goto label14;
            case 1013: goto label15;
            case 1014: goto label16;
            case 1015: goto label17;
            case 1016: goto label18;
            case 1017: goto label19;
            case 1018: goto label20;
            case 1019: goto label21;
            case 1020: goto label22;
            case 1021: goto label23;
            case 1022: goto label24;
            case 1023: goto label25;
            case 1024: goto label26;
            case 1025: goto label27;
            case 1026: goto label28;
            case 1027: goto label29;
            case 1028: goto label30;
            case 1029: goto label31;
            case 1030: goto label32;
            case 1031: goto label33;
            case 1032: goto label34;
            case 1033: goto label35;
            case 1034: goto label36;
            case 1035: goto label37;
            case 1036: goto label38;
            case 1037: goto label39;
            default: goto label01;
        };

     label01:
        return "<unknown response>";

     label02:
        return "UNSOL_RESPONSE_RADIO_STATE_CHANGED";

     label03:
        return "UNSOL_RESPONSE_CALL_STATE_CHANGED";

     label04:
        return "UNSOL_RESPONSE_VOICE_NETWORK_STATE_CHANGED";

     label05:
        return "UNSOL_RESPONSE_NEW_SMS";

     label06:
        return "UNSOL_RESPONSE_NEW_SMS_STATUS_REPORT";

     label07:
        return "UNSOL_RESPONSE_NEW_SMS_ON_SIM";

     label08:
        return "UNSOL_ON_USSD";

     label09:
        return "UNSOL_ON_USSD_REQUEST";

     label10:
        return "UNSOL_NITZ_TIME_RECEIVED";

     label11:
        return "UNSOL_SIGNAL_STRENGTH";

     label12:
        return "UNSOL_DATA_CALL_LIST_CHANGED";

     label13:
        return "UNSOL_SUPP_SVC_NOTIFICATION";

     label14:
        return "UNSOL_STK_SESSION_END";

     label15:
        return "UNSOL_STK_PROACTIVE_COMMAND";

     label16:
        return "UNSOL_STK_EVENT_NOTIFY";

     label17:
        return "UNSOL_STK_CALL_SETUP";

     label18:
        return "UNSOL_SIM_SMS_STORAGE_FULL";

     label19:
        return "UNSOL_SIM_REFRESH";

     label20:
        return "UNSOL_CALL_RING";

     label21:
        return "UNSOL_RESPONSE_SIM_STATUS_CHANGED";

     label22:
        return "UNSOL_RESPONSE_CDMA_NEW_SMS";

     label23:
        return "UNSOL_RESPONSE_NEW_BROADCAST_SMS";

     label24:
        return "UNSOL_CDMA_RUIM_SMS_STORAGE_FULL";

     label25:
        return "UNSOL_RESTRICTED_STATE_CHANGED";

     label26:
        return "UNSOL_ENTER_EMERGENCY_CALLBACK_MODE";

     label27:
        return "UNSOL_CDMA_CALL_WAITING";

     label28:
        return "UNSOL_CDMA_OTA_PROVISION_STATUS";

     label29:
        return "UNSOL_CDMA_INFO_REC";

     label30:
        return "UNSOL_OEM_HOOK_RAW";

     label31:
        return "UNSOL_RINGBACK_TONE";

     label32:
        return "UNSOL_RESEND_INCALL_MUTE";

     label33:
        return "CDMA_SUBSCRIPTION_SOURCE_CHANGED";

     label34:
        return "UNSOL_CDMA_PRL_CHANGED";

     label35:
        return "UNSOL_EXIT_EMERGENCY_CALLBACK_MODE";

     label36:
        return "UNSOL_RIL_CONNECTED";

     label37:
        return "UNSOL_VOICE_RADIO_TECH_CHANGED";

     label38:
        return "UNSOL_CELL_INFO_LIST";

     label39:
        return "UNSOL_RESPONSE_IMS_NETWORK_STATE_CHANGED";
    }

    private java.lang.Object responseVoid(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        return null;
    }

    static java.lang.String retToString(int, java.lang.Object)
    {
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8;
        java.lang.Object r0, $r17, $r23;
        java.util.ArrayList r1, r4;
        java.lang.StringBuilder r2, r5, r9, r10, r12, r13, $r14, $r19, $r21, $r26, $r27, $r31, $r37;
        java.util.Iterator r3, r6;
        com.android.internal.telephony.DriverCall r7;
        java.lang.String[] r8, $r25;
        int[] r11, $r38;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r15, $r16, $r22, $r28, $r29, $r33, $r35;
        android.telephony.NeighboringCellInfo $r20;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        return "";

     label01:
        lookupswitch(i0)
        {
            case 11: goto label04;
            case 38: goto label04;
            case 39: goto label04;
            default: goto label02;
        };

     label02:
        $z1 = r0 instanceof int[];

        if $z1 == 0 goto label06;

        $r38 = (int[]) r0;

        r11 = (int[]) $r38;

        i4 = lengthof r11;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        r12 = $r37;

        if i4 <= 0 goto label05;

        i5 = 0 + 1;

        $i8 = r11[0];

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

     label03:
        if i5 >= i4 goto label05;

        r13 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        i6 = i5 + 1;

        $i7 = r11[i5];

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        i5 = i6;

        goto label03;

     label04:
        return "";

     label05:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r35 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r35;

     label06:
        $z0 = r0 instanceof java.lang.String[];

        if $z0 == 0 goto label09;

        $r25 = (java.lang.String[]) r0;

        r8 = (java.lang.String[]) $r25;

        i1 = lengthof r8;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        r9 = $r31;

        if i1 <= 0 goto label08;

        i2 = 0 + 1;

        $r28 = r8[0];

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

     label07:
        if i2 >= i1 goto label08;

        r10 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        i3 = i2 + 1;

        $r33 = r8[i2];

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        i2 = i3;

        goto label07;

     label08:
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r29 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;

     label09:
        if i0 != 9 goto label12;

        r4 = (java.util.ArrayList) r0;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        r5 = $r19;

        r6 = virtualinvoke r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r23 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.internal.telephony.DriverCall) $r23;

        $r26 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        goto label10;

     label11:
        $r22 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;

     label12:
        if i0 != 75 goto label15;

        r1 = (java.util.ArrayList) r0;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        r2 = $r14;

        r3 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (android.telephony.NeighboringCellInfo) $r17;

        $r21 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label13;

     label14:
        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label15:
        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r15;
    }

    private void riljLog(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", r1);

        return;
    }

    private void riljLogv(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("RILJ", r1);

        return;
    }

    private void send(com.android.internal.telephony.RILRequest)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        android.os.Message r2;
        android.net.LocalSocket $r3;
        com.android.internal.telephony.RIL$RILSender $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        $r3 = r0.<com.android.internal.telephony.RIL: android.net.LocalSocket mSocket>;

        if $r3 != null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>(1, null);

        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void release()>();

        return;

     label1:
        $r4 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        r2 = virtualinvoke $r4.<com.android.internal.telephony.RIL$RILSender: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void acquireWakeLock()>();

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void sendScreenState(boolean)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        byte b0;
        com.android.internal.telephony.RILRequest r1;
        android.os.Parcel r2, $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11;
        java.lang.String $r5, $r8, $r12;
        int $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        b0 = 1;

        r1 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(61, null);

        $r3 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(b0);

        r2 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r1);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    private void switchToRadioState(com.android.internal.telephony.CommandsInterface$RadioState)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.CommandsInterface$RadioState r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.CommandsInterface$RadioState;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>(r1);

        return;
    }

    private int translateStatus(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $i1 = i0 & 7;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label3;
            case 6: goto label1;
            case 7: goto label4;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        return 0;

     label3:
        return 3;

     label4:
        return 2;
    }

    private void unsljLog(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r3 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r5);

        return;
    }

    private void unsljLogMore(int, java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.String r1, $r4, $r8;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r8);

        return;
    }

    private void unsljLogRet(int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>(i0, r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        return;
    }

    private void unsljLogvRet(int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>(i0, r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r9);

        return;
    }

    public void acceptCall(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(40, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void acknowledgeIncomingGsmSmsWithPdu(boolean, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        java.lang.String r1, r5, $r9, $r12, $r19;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel r4, $r6, $r7;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(106, r2);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(2);

        r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

        r5 = "1";

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r5);

        $r7 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r19);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;

     label2:
        r5 = "0";

        goto label1;
    }

    public void acknowledgeLastIncomingCdmaSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        int i0, $i2;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4;
        byte b1;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r6, $r9, $r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(88, r1);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

        b1 = 0;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b1 = 1;

        goto label1;
    }

    public void acknowledgeLastIncomingGsmSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        int i0, $i2;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4, $r5;
        byte b1;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r16;
        java.lang.String $r7, $r10, $r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(37, r1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

        $r5 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public void cancelPendingUssd(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(30, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void changeBarringPassword(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(44, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void changeIccPin(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void changeIccPin2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void changeIccPin2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(7, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void changeIccPinForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(6, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void conference(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(16, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void deactivateDataCall(int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, $i2;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4, $r6;
        java.lang.String $r5, $r7, $r9, $r13, $r18;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(41, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(2);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void deleteSmsOnRuim(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(97, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void deleteSmsOnSim(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(64, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void dial(java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        int i0;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>(r1, i0, null, r2);

        return;
    }

    public void dial(java.lang.String, int, com.android.internal.telephony.UUSInfo, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r12, $r16, $r17;
        int i0, $i1, $i2, $i3;
        com.android.internal.telephony.UUSInfo r2;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        android.os.Parcel $r5, $r6, $r7, $r8, $r9, $r10, $r19;
        byte[] $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.telephony.UUSInfo;

        r3 := @parameter3: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(10, r3);

        $r5 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i0);

        if r2 != null goto label2;

        $r19 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r19.<android.os.Parcel: void writeInt(int)>(0);

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r17);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;

     label2:
        $r7 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(1);

        $r8 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i1 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: int getType()>();

        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>($i1);

        $r9 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i2 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: int getDcs()>();

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>($i2);

        $r10 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r11 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        virtualinvoke $r10.<android.os.Parcel: void writeByteArray(byte[])>($r11);

        goto label1;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.RIL r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.util.SparseArray r4, $r50, $r63;
        java.lang.Throwable r5, r7, $r72, $r76;
        android.os.PowerManager$WakeLock r6, $r38;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.internal.telephony.RILRequest r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r15, $r17, $r18, $r19, $r20, $r22, $r25, $r27, $r28, $r29, $r31, $r33, $r34, $r36, $r39, $r40, $r41, $r42, $r44, $r46, $r47, $r48, $r49, $r53, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r65, $r66, $r68, $r70, $r74, $r75;
        java.lang.String $r12, $r16, $r23, $r26, $r30, $r35, $r43, $r45, $r51, $r52, $r57, $r69, $r71, $r73;
        android.net.LocalSocket $r14;
        android.os.HandlerThread $r21;
        com.android.internal.telephony.RIL$RILSender $r24;
        java.lang.Thread $r32;
        com.android.internal.telephony.RIL$RILReceiver $r37;
        java.lang.Object $r62, $r64;
        java.util.concurrent.atomic.AtomicBoolean $r67;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSocket=");

        $r14 = r0.<com.android.internal.telephony.RIL: android.net.LocalSocket mSocket>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSenderThread=");

        $r21 = r0.<com.android.internal.telephony.RIL: android.os.HandlerThread mSenderThread>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSender=");

        $r24 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mReceiverThread=");

        $r32 = r0.<com.android.internal.telephony.RIL: java.lang.Thread mReceiverThread>;

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mReceiver=");

        $r37 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILReceiver mReceiver>;

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLock=");

        $r38 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLockTimeout=");

        $i2 = r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout>;

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        r4 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        entermonitor r4;

     label01:
        r6 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        entermonitor r6;

     label02:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLockCount=");

        $i3 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r51);

        exitmonitor r6;

     label03:
        $r50 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        i0 = virtualinvoke $r50.<android.util.SparseArray: int size()>();

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRequestList count=");

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r52);

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label14;

     label06:
        $r63 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r64 = virtualinvoke $r63.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r8 = (com.android.internal.telephony.RILRequest) $r64;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  [");

        $i4 = r8.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r74 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $i5 = r8.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r71 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        $r70 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r73);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        $r76 := @caughtexception;

        r7 = $r76;

     label09:
        exitmonitor r6;

     label10:
        throw r7;

     label11:
        $r72 := @caughtexception;

        r5 = $r72;

     label12:
        exitmonitor r4;

     label13:
        throw r5;

     label14:
        exitmonitor r4;

     label15:
        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastNITZTimeInfo=");

        $r62 = r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo>;

        $r56 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTestingEmergencyCall=");

        $r67 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        $z0 = virtualinvoke $r67.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        $r68 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r69);

        return;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
    }

    public void exitEmergencyCallbackMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(99, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void explicitCallTransfer(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(72, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(48, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getBasebandVersion(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(51, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getCDMASubscription(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(95, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getCLIR(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(31, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getCdmaBroadcastConfig(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        $r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(92, r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>($r2);

        return;
    }

    public void getCdmaSubscriptionSource(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(104, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getCellInfoList(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(109, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getCurrentCalls(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(9, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getDataCallList(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(57, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getDataRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(21, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getDeviceIdentity(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(98, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getGsmBroadcastConfig(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(89, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getIMEI(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(38, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getIMEISV(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(39, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getIMSI(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void getIMSIForApp(java.lang.String,android.os.Message)>(null, r1);

        return;
    }

    public void getIMSIForApp(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r7, $r10, $r14;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(11, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(1);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> getIMSI: ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void getIccCardStatus(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(1, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getImsRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(112, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getLastCallFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(18, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getLastDataCallFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(56, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getLastPdpFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void getLastDataCallFailCause(android.os.Message)>(r1);

        return;
    }

    public void getMute(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(54, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getNeighboringCids(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(75, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getNetworkSelectionMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(45, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getOperator(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(22, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getPDPContextList(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void getDataCallList(android.os.Message)>(r1);

        return;
    }

    public void getPreferredNetworkType(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(74, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getPreferredVoicePrivacy(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest $r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        $r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(83, r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>($r2);

        return;
    }

    public void getSignalStrength(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(19, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getSmscAddress(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(100, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getVoiceRadioTechnology(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(108, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getVoiceRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(20, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void handleCallSetupRequestFromSim(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        int[] r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String $r5, $r8, $r10;
        int $i1;
        android.os.Parcel $r11;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(71, r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        r3 = newarray (int)[b0];

        if z0 == 0 goto label2;

     label1:
        r3[0] = b0;

        $r11 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeIntArray(int[])>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void hangupConnection(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r9, $r10, $r12, $r13, $r14;
        java.lang.String $r6, $r8, $r11, $r16;
        android.os.Parcel $r15, $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hangupConnection: gsmIndex=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(12, r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        $r15 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeInt(int)>(1);

        $r17 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r17.<android.os.Parcel: void writeInt(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void hangupForegroundResumeBackground(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(14, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void hangupWaitingOrBackground(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(13, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void iccIO(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r2, r3;
        android.os.Message r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        r3 := @parameter7: java.lang.String;

        r4 := @parameter8: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(i0, i1, r1, i2, i3, i4, r2, r3, null, r4);

        return;
    }

    public void iccIOForApp(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.String r1, r2, r3, r4, $r16, $r20, $r24, $r28, $r37;
        android.os.Message r5;
        com.android.internal.telephony.RILRequest r6;
        android.os.Parcel $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        r3 := @parameter7: java.lang.String;

        r4 := @parameter8: java.lang.String;

        r5 := @parameter9: android.os.Message;

        r6 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(28, r5);

        $r7 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(i0);

        $r8 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>(i1);

        $r9 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r11 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeInt(int)>(i2);

        $r10 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r10.<android.os.Parcel: void writeInt(int)>(i3);

        $r13 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(i4);

        $r12 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r15 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r14 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r6.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> iccIO: ");

        $i5 = r6.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r20 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0x");

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0x");

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r37);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r6);

        return;
    }

    public void invokeOemRilRequestRaw(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        byte[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r12, $r13;
        java.lang.String $r5, $r8, $r11, $r15;
        int $i0;
        android.os.Parcel $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(59, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r11 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        $r14 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String $r5, $r8, $r10;
        int $i0;
        android.os.Parcel $r11;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(60, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    protected void onRadioAvailable()
    {
        com.android.internal.telephony.RIL r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.os.PowerManager $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r3 = (android.os.PowerManager) $r2;

        $z0 = virtualinvoke $r3.<android.os.PowerManager: boolean isScreenOn()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void sendScreenState(boolean)>($z0);

        return;
    }

    public void queryAvailableBandMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(66, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void queryCLIP(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(55, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void queryCallForwardStatus(int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1, $r11, $r14, $r19;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r15, $r16, $r17, $r18, $r20;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(33, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i1);

        $r7 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i2 = staticinvoke <android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>(r1);

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>($i2);

        $r8 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r9 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>(0);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r19);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void queryCallWaiting(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(35, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void queryCdmaRoamingPreference(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(79, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void queryFacilityLock(java.lang.String, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        int i0;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>(r1, r2, i0, null, r3);

        return;
    }

    public void queryFacilityLockForApp(java.lang.String, java.lang.String, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r20, $r23;
        int i0, $i1;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.os.Parcel $r19, $r21, $r22, $r24, $r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(42, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r20);

        $r19 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r19.<android.os.Parcel: void writeInt(int)>(4);

        $r22 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r22.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r21 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r21.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r24 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r24.<android.os.Parcel: void writeString(java.lang.String)>($r23);

        $r25 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r25.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void queryTTYMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(81, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void rejectCall(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(17, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void reportSmsMemoryStatus(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r6, $r9, $r12;
        int $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(102, r1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(b0);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void reportStkServiceIsRunning(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(103, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void requestIsimAuthentication(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r11;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(105, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void resetRadio(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(58, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void sendBurstDtmf(java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r7, $r9, $r11, $r15, $r18;
        int i0, i1, $i2;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6, $r8;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r16, $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(85, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(3);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendCDMAFeatureCode(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r13;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(84, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendCdmaSms(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        byte[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String $r5, $r8, $r10;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(87, r2);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructCdmaSendSmsRilRequest(com.android.internal.telephony.RILRequest,byte[])>(r3, r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        char c0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9, $r11;
        int $i1;
        android.os.Parcel $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        c0 := @parameter0: char;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(24, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r10 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r11 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c0);

        virtualinvoke $r10.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void sendEnvelope(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r10;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        int $i0;
        android.os.Parcel $r11;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(69, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendEnvelopeWithStatus(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r13;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11, $r12;
        int $i0;
        android.os.Parcel $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(107, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        $r14 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendImsCdmaSms(byte[], int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        byte[] r1;
        int i0, i1, $i3;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6;
        byte $b2;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;
        java.lang.String $r8, $r12, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(113, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b2 = (byte) i0;

        virtualinvoke $r5.<android.os.Parcel: void writeByte(byte)>($b2);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructCdmaSendSmsRilRequest(com.android.internal.telephony.RILRequest,byte[])>(r3, r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendImsGsmSms(java.lang.String, java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r9, $r12, $r13;
        int i0, i1, $i3;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        android.os.Parcel $r5, $r6, $r7;
        byte $b2;
        java.lang.StringBuilder $r8, $r10, $r11, $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(113, r3);

        $r5 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(1);

        $r6 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b2 = (byte) i0;

        virtualinvoke $r6.<android.os.Parcel: void writeByte(byte)>($b2);

        $r7 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(i1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructGsmSendSmsRilRequest(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.String)>(r4, r1, r2);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void sendSMS(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r6, $r9, $r11;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(25, r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructGsmSendSmsRilRequest(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.String)>(r4, r1, r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void sendTerminalResponse(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r10;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        int $i0;
        android.os.Parcel $r11;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(70, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendUSSD(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r12;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11;
        int $i0;
        android.os.Parcel $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(29, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*******");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void separateConnection(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r10;
        java.lang.String $r4, $r7, $r11;
        android.os.Parcel $r12, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(52, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r12 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>(1);

        $r13 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setBandMode(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(65, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCLIR(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(32, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCallForward(int, int, int, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.String r1, $r10, $r14, $r23;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        r2 := @parameter5: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(34, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i2);

        $r7 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i4 = staticinvoke <android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>(r1);

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>($i4);

        $r8 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r9 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>(i3);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i5 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r23);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void setCallWaiting(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        int i0, $i2;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4, $r5;
        byte b1;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r16;
        java.lang.String $r7, $r10, $r15;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(36, r1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b1);

        $r5 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public void setCdmaBroadcastActivation(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        int $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(94, r1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(b0);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        b0 = 0;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[] r1, r5;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.util.ArrayList r4, $r8;
        int i0, i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.os.Parcel r6, $r10, $r25, $r26;
        byte b4;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo r7, $r22, $r23, $r24, $r27, $r28;
        java.lang.Object[] $r9;
        java.lang.String $r11, $r15, $r19, $r21;
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r17, $r18, $r20;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(93, r2);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        i0 = lengthof r1;

        i1 = 0;

     label01:
        if i1 >= i0 goto label04;

        r7 = r1[i1];

        i5 = virtualinvoke r7.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getFromServiceCategory()>();

     label02:
        $i14 = virtualinvoke r7.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getToServiceCategory()>();

        if i5 > $i14 goto label03;

        $r28 = new com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo;

        $i13 = virtualinvoke r7.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getLanguage()>();

        $z1 = virtualinvoke r7.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: boolean isSelected()>();

        specialinvoke $r28.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: void <init>(int,int,int,boolean)>(i5, i5, $i13, $z1);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        i5 = i5 + 1;

        goto label02;

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        $r9 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        r5 = (com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[]) $r9;

        $r10 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i6 = lengthof r5;

        virtualinvoke $r10.<android.os.Parcel: void writeInt(int)>($i6);

        i2 = 0;

     label05:
        $i7 = lengthof r5;

        if i2 >= $i7 goto label08;

        $r26 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r22 = r5[i2];

        $i11 = virtualinvoke $r22.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getFromServiceCategory()>();

        virtualinvoke $r26.<android.os.Parcel: void writeInt(int)>($i11);

        $r25 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r24 = r5[i2];

        $i12 = virtualinvoke $r24.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getLanguage()>();

        virtualinvoke $r25.<android.os.Parcel: void writeInt(int)>($i12);

        r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r27 = r5[i2];

        $z0 = virtualinvoke $r27.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: boolean isSelected()>();

        if $z0 == 0 goto label07;

        b4 = 1;

     label06:
        virtualinvoke r6.<android.os.Parcel: void writeInt(int)>(b4);

        i2 = i2 + 1;

        goto label05;

     label07:
        b4 = 0;

        goto label06;

     label08:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i8 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i8);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $i9 = lengthof r5;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configs : ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r19);

        i3 = 0;

     label09:
        $i10 = lengthof r5;

        if i3 >= $i10 goto label10;

        $r23 = r5[i3];

        $r21 = virtualinvoke $r23.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r21);

        i3 = i3 + 1;

        goto label09;

     label10:
        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void setCdmaRoamingPreference(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(78, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCdmaSubscriptionSource(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(77, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCellInfoListRate(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r9, $r11, $r12, $r13;
        java.lang.String $r6, $r10, $r14, $r15;
        android.os.Parcel $r7, $r8;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setCellInfoListRate: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(110, r1);

        $r7 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(1);

        $r8 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>(i0);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCurrentPreferredNetworkType()
    {
        com.android.internal.telephony.RIL r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setCurrentPreferredNetworkType: ");

        $i0 = r0.<com.android.internal.telephony.RIL: int mSetPreferredNetworkType>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r4);

        $i1 = r0.<com.android.internal.telephony.RIL: int mSetPreferredNetworkType>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setPreferredNetworkType(int,android.os.Message)>($i1, null);

        return;
    }

    public void setFacilityLock(java.lang.String, boolean, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        boolean z0;
        int i0;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>(r1, z0, r2, i0, null, r3);

        return;
    }

    public void setFacilityLockForApp(java.lang.String, boolean, java.lang.String, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, r6, $r8, $r11, $r23, $r28;
        boolean z0;
        int i0, $i1;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        android.os.Parcel $r22, $r24, $r25, $r26, $r27, $r29;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(43, r4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r23);

        $r22 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r22.<android.os.Parcel: void writeInt(int)>(5);

        $r25 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r25.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        if z0 == 0 goto label2;

        r6 = "1";

     label1:
        $r24 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r24.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r27 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r27.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r26 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r26.<android.os.Parcel: void writeString(java.lang.String)>($r28);

        $r29 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r29.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;

     label2:
        r6 = "0";

        goto label1;
    }

    public void setGsmBroadcastActivation(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        int $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(91, r1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(b0);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        b0 = 0;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8;
        android.os.Parcel r4, $r5, $r18, $r21, $r22, $r24;
        byte b3;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r12, $r13, $r15;
        java.lang.String $r7, $r11, $r14, $r16;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo $r17, $r19, $r20, $r23, $r25, $r26;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(90, r2);

        i0 = lengthof r1;

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r18 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r19 = r1[i1];

        $i5 = virtualinvoke $r19.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromServiceId()>();

        virtualinvoke $r18.<android.os.Parcel: void writeInt(int)>($i5);

        $r21 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r20 = r1[i1];

        $i6 = virtualinvoke $r20.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToServiceId()>();

        virtualinvoke $r21.<android.os.Parcel: void writeInt(int)>($i6);

        $r22 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r23 = r1[i1];

        $i8 = virtualinvoke $r23.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromCodeScheme()>();

        virtualinvoke $r22.<android.os.Parcel: void writeInt(int)>($i8);

        $r24 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r25 = r1[i1];

        $i7 = virtualinvoke $r25.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToCodeScheme()>();

        virtualinvoke $r24.<android.os.Parcel: void writeInt(int)>($i7);

        r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r26 = r1[i1];

        $z0 = virtualinvoke $r26.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: boolean isSelected()>();

        if $z0 == 0 goto label3;

        b3 = 1;

     label2:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(b3);

        i1 = i1 + 1;

        goto label1;

     label3:
        b3 = 0;

        goto label2;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i4 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configs : ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

        i2 = 0;

     label5:
        if i2 >= i0 goto label6;

        $r17 = r1[i2];

        $r16 = virtualinvoke $r17.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        i2 = i2 + 1;

        goto label5;

     label6:
        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void setInitialAttachApn(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, r4, $r13, $r16, $r27;
        int i0, $i1;
        android.os.Message r5;
        com.android.internal.telephony.RILRequest r6;
        android.os.Parcel $r7, $r8, $r9, $r10, $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.Message;

        r6 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(111, null);

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Set RIL_REQUEST_SET_INITIAL_ATTACH_APN");

        $r7 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r8 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r9 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>(i0);

        $r10 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r10.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r11 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r6.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r6.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", apn:");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", protocol:");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", authType:");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", username:");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", password:");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r27);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r6);

        return;
    }

    public void setLocationUpdates(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r6, $r9, $r12;
        int $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(76, r1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(b0);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setMute(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r12;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11;
        java.lang.String $r5, $r8, $r13;
        int $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(53, r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        $r12 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>(b0);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setNetworkSelectionModeAutomatic(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(46, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setNetworkSelectionModeManual(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r12;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11;
        int $i0;
        android.os.Parcel $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(47, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void setOnNITZTime(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2, $r3, $r5;
        android.os.AsyncResult $r4;
        android.os.Registrant $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.android.internal.telephony.BaseCommands: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        $r3 = r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo>;

        if $r3 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mNITZTimeRegistrant>;

        $r4 = new android.os.AsyncResult;

        $r5 = r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo>;

        specialinvoke $r4.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r5, null);

        virtualinvoke $r6.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r4);

        r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo> = null;

     label1:
        return;
    }

    public void setPhoneType(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPhoneType=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" old value=");

        $i1 = r0.<com.android.internal.telephony.RIL: int mPhoneType>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        r0.<com.android.internal.telephony.RIL: int mPhoneType> = i0;

        return;
    }

    public void setPreferredNetworkType(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(73, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        r0.<com.android.internal.telephony.RIL: int mSetPreferredNetworkType> = i0;

        r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType> = i0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setPreferredVoicePrivacy(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(82, r1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(b0);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setRadioPower(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r6;
        java.lang.StringBuilder r4, $r7, $r9, $r10, $r12;
        java.lang.String r5, $r8, $r11, $r13;
        int $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(23, r1);

        $r6 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(b0);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label3;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        if z0 == 0 goto label4;

        r5 = " on";

     label2:
        $r12 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label3:
        b0 = 0;

        goto label1;

     label4:
        r5 = " off";

        goto label2;
    }

    public void setSmscAddress(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r13;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(101, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void setSuppServiceNotifications(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        byte b0;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        int $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        b0 = 1;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(62, r1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(b0);

        r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label2;

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setTTYMode(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(80, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setupDataCall(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, $r20, $r23, $r38;
        android.os.Message r8;
        com.android.internal.telephony.RILRequest r9;
        android.os.Parcel $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18;
        java.lang.StringBuilder $r17, $r19, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: android.os.Message;

        r9 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(27, r8);

        $r10 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r10.<android.os.Parcel: void writeInt(int)>(7);

        $r11 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r12 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r13 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r14 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r16 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r5);

        $r15 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r18 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r18.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r9.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r9.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r23 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r38);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r9);

        return;
    }

    public void startDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        char c0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9, $r11;
        int $i1;
        android.os.Parcel $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        c0 := @parameter0: char;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(49, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r10 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r11 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c0);

        virtualinvoke $r10.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void stopDtmf(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(50, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void supplyIccPin(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>(r1, null, r2);

        return;
    }

    public void supplyIccPin2(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>(r1, null, r2);

        return;
    }

    public void supplyIccPin2ForApp(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r6, $r9, $r11;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;
        android.os.Parcel $r12, $r13, $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(4, r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r12 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>(2);

        $r13 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void supplyIccPinForApp(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r6, $r9, $r11;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;
        android.os.Parcel $r12, $r13, $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(2, r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r12 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>(2);

        $r13 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void supplyIccPuk(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void supplyIccPuk2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void supplyIccPuk2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(5, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void supplyIccPukForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(3, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void supplyNetworkDepersonalization(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r10;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        int $i0;
        android.os.Parcel $r11, $r12;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(8, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeInt(int)>(1);

        $r12 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void switchWaitingOrHoldingAndActive(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(15, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void testingEmergencyCall()
    {
        com.android.internal.telephony.RIL r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.internal.telephony.RIL;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("testingEmergencyCall");

        $r1 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    public void writeSmsToRuim(int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Message;

        i1 = specialinvoke r0.<com.android.internal.telephony.RIL: int translateStatus(int)>(i0);

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(96, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void writeSmsToSim(int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1;
        java.lang.String r1, r2;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        android.os.Parcel $r5, $r6, $r7;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Message;

        i1 = specialinvoke r0.<com.android.internal.telephony.RIL: int translateStatus(int)>(i0);

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(63, r3);

        $r5 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r7 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.RIL: int SOCKET_OPEN_RETRY_MILLIS> = 4000;

        <com.android.internal.telephony.RIL: java.lang.String SOCKET_NAME_RIL> = "rild";

        <com.android.internal.telephony.RIL: int RIL_MAX_COMMAND_BYTES> = 8192;

        <com.android.internal.telephony.RIL: java.lang.String RILJ_LOG_TAG> = "RILJ";

        <com.android.internal.telephony.RIL: boolean RILJ_LOGV> = 0;

        <com.android.internal.telephony.RIL: boolean RILJ_LOGD> = 1;

        <com.android.internal.telephony.RIL: int RESPONSE_UNSOLICITED> = 1;

        <com.android.internal.telephony.RIL: int RESPONSE_SOLICITED> = 0;

        <com.android.internal.telephony.RIL: int EVENT_WAKE_LOCK_TIMEOUT> = 2;

        <com.android.internal.telephony.RIL: int EVENT_SEND> = 1;

        <com.android.internal.telephony.RIL: int DEFAULT_WAKE_LOCK_TIMEOUT> = 60000;

        <com.android.internal.telephony.RIL: int CDMA_BSI_NO_OF_INTS_STRUCT> = 3;

        <com.android.internal.telephony.RIL: int CDMA_BROADCAST_SMS_NO_OF_SERVICE_CATEGORIES> = 31;

        return;
    }
}
