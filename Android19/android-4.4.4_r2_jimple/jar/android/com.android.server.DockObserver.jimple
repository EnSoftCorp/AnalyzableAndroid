final class com.android.server.DockObserver extends android.os.UEventObserver
{
    private static final java.lang.String DOCK_STATE_PATH;
    private static final java.lang.String DOCK_UEVENT_MATCH;
    private static final int MSG_DOCK_STATE_CHANGED;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private int mDockState;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private final android.os.PowerManager mPowerManager;
    private int mPreviousDockState;
    private boolean mSystemReady;
    private final android.os.PowerManager$WakeLock mWakeLock;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.DockObserver: java.lang.String DOCK_UEVENT_MATCH> = "DEVPATH=/devices/virtual/switch/dock";

        <com.android.server.DockObserver: java.lang.String DOCK_STATE_PATH> = "/sys/class/switch/dock/state";

        $r0 = class "com/android/server/DockObserver";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.DockObserver: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.server.DockObserver r0;
        android.content.Context r1, $r4;
        java.lang.Object $r2, $r5;
        com.android.server.DockObserver$1 $r3;
        android.os.PowerManager $r6, $r8;
        java.lang.String $r7;
        android.os.PowerManager$WakeLock $r9;

        r0 := @this: com.android.server.DockObserver;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.UEventObserver: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.DockObserver: java.lang.Object mLock> = $r2;

        r0.<com.android.server.DockObserver: int mDockState> = 0;

        r0.<com.android.server.DockObserver: int mPreviousDockState> = 0;

        $r3 = new com.android.server.DockObserver$1;

        specialinvoke $r3.<com.android.server.DockObserver$1: void <init>(com.android.server.DockObserver,boolean)>(r0, 1);

        r0.<com.android.server.DockObserver: android.os.Handler mHandler> = $r3;

        r0.<com.android.server.DockObserver: android.content.Context mContext> = r1;

        $r4 = r0.<com.android.server.DockObserver: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r6 = (android.os.PowerManager) $r5;

        r0.<com.android.server.DockObserver: android.os.PowerManager mPowerManager> = $r6;

        $r8 = r0.<com.android.server.DockObserver: android.os.PowerManager mPowerManager>;

        $r7 = <com.android.server.DockObserver: java.lang.String TAG>;

        $r9 = virtualinvoke $r8.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, $r7);

        r0.<com.android.server.DockObserver: android.os.PowerManager$WakeLock mWakeLock> = $r9;

        specialinvoke r0.<com.android.server.DockObserver: void init()>();

        virtualinvoke r0.<com.android.server.DockObserver: void startObserving(java.lang.String)>("DEVPATH=/devices/virtual/switch/dock");

        return;
    }

    static void access$000(com.android.server.DockObserver)
    {
        com.android.server.DockObserver r0;

        r0 := @parameter0: com.android.server.DockObserver;

        specialinvoke r0.<com.android.server.DockObserver: void handleDockStateChange()>();

        return;
    }

    private void handleDockStateChange()
    {
        com.android.server.DockObserver r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r27;
        android.content.ContentResolver r3;
        android.content.Intent r4, $r15;
        java.lang.String r5, r6, $r11, $r13, $r25, $r26;
        android.net.Uri r7;
        android.media.Ringtone r8;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        java.lang.StringBuilder $r9, $r10, $r12, $r21, $r22, $r23;
        android.content.Context $r14, $r18, $r24;
        android.os.UserHandle $r19;
        android.os.PowerManager$WakeLock $r20;

        r0 := @this: com.android.server.DockObserver;

        r1 = r0.<com.android.server.DockObserver: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r11 = <com.android.server.DockObserver: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dock state changed: ");

        $i2 = r0.<com.android.server.DockObserver: int mDockState>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r11, $r13);

        $r14 = r0.<com.android.server.DockObserver: android.content.Context mContext>;

        r3 = virtualinvoke $r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i4 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r3, "device_provisioned", 0);

        if $i4 != 0 goto label03;

        $r26 = <com.android.server.DockObserver: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r26, "Device not provisioned, skipping dock broadcast");

        exitmonitor r1;

     label02:
        return;

     label03:
        $r15 = new android.content.Intent;

        specialinvoke $r15.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DOCK_EVENT");

        r4 = $r15;

        virtualinvoke r4.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $i5 = r0.<com.android.server.DockObserver: int mDockState>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.DOCK_STATE", $i5);

        $i6 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r3, "dock_sounds_enabled", 1);

        if $i6 != 1 goto label13;

        $i7 = r0.<com.android.server.DockObserver: int mDockState>;

        if $i7 != 0 goto label20;

        $i9 = r0.<com.android.server.DockObserver: int mPreviousDockState>;

        if $i9 == 1 goto label24;

        $i10 = r0.<com.android.server.DockObserver: int mPreviousDockState>;

        if $i10 == 3 goto label24;

        $i14 = r0.<com.android.server.DockObserver: int mPreviousDockState>;

        if $i14 != 4 goto label18;

     label04:
        goto label24;

     label05:
        if r5 == null goto label13;

     label06:
        r6 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r3, r5);

     label07:
        if r6 == null goto label13;

     label08:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r25);

     label09:
        if r7 == null goto label13;

     label10:
        $r24 = r0.<com.android.server.DockObserver: android.content.Context mContext>;

        r8 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>($r24, r7);

     label11:
        if r8 == null goto label13;

     label12:
        virtualinvoke r8.<android.media.Ringtone: void setStreamType(int)>(1);

        virtualinvoke r8.<android.media.Ringtone: void play()>();

     label13:
        $r18 = r0.<com.android.server.DockObserver: android.content.Context mContext>;

        $r19 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r18.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r4, $r19);

        $r20 = r0.<com.android.server.DockObserver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r20.<android.os.PowerManager$WakeLock: void release()>();

        exitmonitor r1;

     label14:
        return;

     label15:
        $r27 := @caughtexception;

        r2 = $r27;

     label16:
        exitmonitor r1;

     label17:
        throw r2;

     label18:
        i1 = r0.<com.android.server.DockObserver: int mPreviousDockState>;

     label19:
        r5 = null;

        if i1 != 2 goto label05;

        r5 = "car_undock_sound";

        goto label05;

     label20:
        $i8 = r0.<com.android.server.DockObserver: int mDockState>;

        if $i8 == 1 goto label25;

        $i11 = r0.<com.android.server.DockObserver: int mDockState>;

        if $i11 == 3 goto label25;

        $i12 = r0.<com.android.server.DockObserver: int mDockState>;

        if $i12 != 4 goto label22;

     label21:
        goto label25;

     label22:
        i0 = r0.<com.android.server.DockObserver: int mDockState>;

     label23:
        r5 = null;

        if i0 != 2 goto label05;

        r5 = "car_dock_sound";

        goto label05;

     label24:
        r5 = "desk_undock_sound";

        goto label05;

     label25:
        r5 = "desk_dock_sound";

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label18 to label19 with label15;
        catch java.lang.Throwable from label20 to label21 with label15;
        catch java.lang.Throwable from label22 to label23 with label15;
    }

    private void init()
    {
        com.android.server.DockObserver r0;
        java.lang.Object r1;
        java.lang.Exception r2, $r13;
        java.lang.Throwable r3, r7, $r16, $r17;
        char[] r5;
        java.io.FileReader r6, $r8;
        java.lang.String $r9, $r10, $r12, $r15;
        int $i0, $i1, $i2;
        java.lang.Integer $r11;
        java.io.FileNotFoundException $r14;

        r0 := @this: com.android.server.DockObserver;

        r1 = r0.<com.android.server.DockObserver: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        r5 = newarray (char)[1024];

        $r8 = new java.io.FileReader;

        specialinvoke $r8.<java.io.FileReader: void <init>(java.lang.String)>("/sys/class/switch/dock/state");

        r6 = $r8;

     label02:
        $r9 = new java.lang.String;

        $i0 = virtualinvoke r6.<java.io.FileReader: int read(char[],int,int)>(r5, 0, 1024);

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>(r5, 0, $i0);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r10);

        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        r0.<com.android.server.DockObserver: int mDockState> = $i1;

        $i2 = r0.<com.android.server.DockObserver: int mDockState>;

        r0.<com.android.server.DockObserver: int mPreviousDockState> = $i2;

     label03:
        virtualinvoke r6.<java.io.FileReader: void close()>();

     label04:
        exitmonitor r1;

     label05:
        return;

     label06:
        $r17 := @caughtexception;

        r7 = $r17;

     label07:
        virtualinvoke r6.<java.io.FileReader: void close()>();

        throw r7;

     label08:
        $r14 := @caughtexception;

     label09:
        $r15 = <com.android.server.DockObserver: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r15, "This kernel does not have dock station support");

     label10:
        goto label04;

     label11:
        $r16 := @caughtexception;

        r3 = $r16;

     label12:
        exitmonitor r1;

     label13:
        throw r3;

     label14:
        $r13 := @caughtexception;

        r2 = $r13;

     label15:
        $r12 = <com.android.server.DockObserver: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "", r2);

     label16:
        goto label04;

        catch java.io.FileNotFoundException from label01 to label02 with label08;
        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.io.FileNotFoundException from label03 to label04 with label08;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label08;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
    }

    private void updateLocked()
    {
        com.android.server.DockObserver r0;
        android.os.PowerManager$WakeLock $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.DockObserver;

        $r1 = r0.<com.android.server.DockObserver: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        $r2 = r0.<com.android.server.DockObserver: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(0);

        return;
    }

    public void onUEvent(android.os.UEventObserver$UEvent)
    {
        com.android.server.DockObserver r0;
        android.os.UEventObserver$UEvent r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r14;
        int i0, $i1, $i2;
        java.lang.String $r5, $r6, $r8, $r10, $r12, $r16, $r20;
        boolean $z0, $z1;
        long $l3;
        android.os.PowerManager $r7;
        java.lang.StringBuilder $r9, $r11, $r13, $r17, $r18, $r19;
        java.lang.NumberFormatException $r15;

        r0 := @this: com.android.server.DockObserver;

        r1 := @parameter0: android.os.UEventObserver$UEvent;

        $r5 = <com.android.server.DockObserver: java.lang.String TAG>;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r5, 2);

        if $z0 == 0 goto label01;

        $r8 = <com.android.server.DockObserver: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dock UEVENT: ");

        $r10 = virtualinvoke r1.<android.os.UEventObserver$UEvent: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r8, $r12);

     label01:
        r2 = r0.<com.android.server.DockObserver: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        $r6 = virtualinvoke r1.<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String)>("SWITCH_STATE");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $i1 = r0.<com.android.server.DockObserver: int mDockState>;

        if i0 == $i1 goto label03;

        $i2 = r0.<com.android.server.DockObserver: int mDockState>;

        r0.<com.android.server.DockObserver: int mPreviousDockState> = $i2;

        r0.<com.android.server.DockObserver: int mDockState> = i0;

        $z1 = r0.<com.android.server.DockObserver: boolean mSystemReady>;

        if $z1 == 0 goto label03;

        $r7 = r0.<com.android.server.DockObserver: android.os.PowerManager mPowerManager>;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke $r7.<android.os.PowerManager: void wakeUp(long)>($l3);

        specialinvoke r0.<com.android.server.DockObserver: void updateLocked()>();

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r15 := @caughtexception;

     label06:
        $r16 = <com.android.server.DockObserver: java.lang.String TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse switch state from event ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r16, $r20);

     label07:
        goto label03;

     label08:
        $r14 := @caughtexception;

        r3 = $r14;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.NumberFormatException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void systemReady()
    {
        com.android.server.DockObserver r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int $i0;

        r0 := @this: com.android.server.DockObserver;

        r1 = r0.<com.android.server.DockObserver: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i0 = r0.<com.android.server.DockObserver: int mDockState>;

        if $i0 == 0 goto label2;

        specialinvoke r0.<com.android.server.DockObserver: void updateLocked()>();

     label2:
        r0.<com.android.server.DockObserver: boolean mSystemReady> = 1;

        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
