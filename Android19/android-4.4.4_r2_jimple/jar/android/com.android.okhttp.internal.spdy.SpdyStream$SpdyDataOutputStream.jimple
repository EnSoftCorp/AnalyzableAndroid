final class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream extends java.io.OutputStream
{
    static final boolean $assertionsDisabled;
    private final byte[] buffer;
    private boolean closed;
    private boolean finished;
    private int pos;
    final com.android.okhttp.internal.spdy.SpdyStream this$0;
    private int unacknowledgedBytes;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/okhttp/internal/spdy/SpdyStream";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    private void <init>(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        com.android.okhttp.internal.spdy.SpdyStream r1;
        byte[] $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0> = r1;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r2 = newarray (byte)[8192];

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: byte[] buffer> = $r2;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos> = 8;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int unacknowledgedBytes> = 0;

        return;
    }

    void <init>(com.android.okhttp.internal.spdy.SpdyStream, com.android.okhttp.internal.spdy.SpdyStream$1)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        com.android.okhttp.internal.spdy.SpdyStream r1;
        com.android.okhttp.internal.spdy.SpdyStream$1 r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        r2 := @parameter1: com.android.okhttp.internal.spdy.SpdyStream$1;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: void <init>(com.android.okhttp.internal.spdy.SpdyStream)>(r1);

        return;
    }

    static boolean access$300(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean finished>;

        return $z0;
    }

    static boolean access$302(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream, boolean)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        boolean z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean finished> = z0;

        return z0;
    }

    static boolean access$500(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean closed>;

        return $z0;
    }

    static int access$620(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream, int)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        int i0, i1, $i2;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        i0 := @parameter1: int;

        $i2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int unacknowledgedBytes>;

        i1 = $i2 - i0;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int unacknowledgedBytes> = i1;

        return i1;
    }

    private void checkNotClosed() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        com.android.okhttp.internal.spdy.SpdyStream r1, $r3, $r7;
        java.lang.Throwable r2, $r13;
        boolean $z0, $z1;
        int $i0;
        java.io.IOException $r4, $r11, $r12;
        java.lang.StringBuilder $r5, $r6, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean closed>;

        if $z0 == 0 goto label5;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r11;

     label2:
        $r13 := @caughtexception;

        r2 = $r13;

     label3:
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        $z1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean finished>;

        if $z1 == 0 goto label6;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("stream finished");

        throw $r12;

     label6:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i0 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$1000(com.android.okhttp.internal.spdy.SpdyStream)>($r3);

        if $i0 == -1 goto label7;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r8 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: java.lang.String access$1200(com.android.okhttp.internal.spdy.SpdyStream)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label7:
        exitmonitor r1;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
        catch java.lang.Throwable from label6 to label7 with label2;
        catch java.lang.Throwable from label7 to label8 with label2;
    }

    private void waitUntilWritable(int, boolean) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2;
        com.android.okhttp.internal.spdy.SpdyStream $r2, $r3, $r4, $r8;
        java.io.IOException $r5, $r11, $r13;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10, $r12;
        java.io.InterruptedIOException $r14;
        java.lang.InterruptedException $r15;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $i1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int unacknowledgedBytes>;

        $i2 = i0 + $i1;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i3 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$1400(com.android.okhttp.internal.spdy.SpdyStream)>($r2);

        if $i2 < $i3 goto label7;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r3.<java.lang.Object: void wait()>();

     label2:
        if z0 != 0 goto label5;

     label3:
        $z2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean closed>;

        if $z2 == 0 goto label5;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r13;

     label4:
        $r15 := @caughtexception;

        $r14 = new java.io.InterruptedIOException;

        specialinvoke $r14.<java.io.InterruptedIOException: void <init>()>();

        throw $r14;

     label5:
        $z1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean finished>;

        if $z1 == 0 goto label6;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("stream finished");

        throw $r11;

     label6:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i4 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$1000(com.android.okhttp.internal.spdy.SpdyStream)>($r4);

        if $i4 == -1 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r10 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: java.lang.String access$1200(com.android.okhttp.internal.spdy.SpdyStream)>($r8);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label7:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.lang.InterruptedException from label3 to label4 with label4;
        catch java.lang.InterruptedException from label5 to label6 with label4;
        catch java.lang.InterruptedException from label6 to label7 with label4;
    }

    private void writeFrame(boolean) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        boolean z0, $z1, $z2;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        com.android.okhttp.internal.spdy.SpdyStream r1, $r3, $r7, $r10;
        java.lang.Throwable r2, $r13;
        short s1, $s6;
        byte[] $r4, $r8, $r11;
        java.nio.ByteOrder $r5, $r6;
        com.android.okhttp.internal.spdy.SpdyConnection $r9;
        java.lang.AssertionError $r12;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        z0 := @parameter0: boolean;

        $z1 = <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $z2 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r10);

        if $z2 == 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $i2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos>;

        i0 = -8 + $i2;

        r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor r1;

     label2:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: void waitUntilWritable(int,boolean)>(i0, z0);

        $i3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int unacknowledgedBytes>;

        $i4 = i0 + $i3;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int unacknowledgedBytes> = $i4;

        exitmonitor r1;

     label3:
        s1 = 0;

        if z0 == 0 goto label4;

        s1 = 0 | 1;

     label4:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: byte[] buffer>;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i5 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$700(com.android.okhttp.internal.spdy.SpdyStream)>($r3);

        $i7 = 2147483647 & $i5;

        $r5 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        staticinvoke <com.android.okhttp.internal.Util: void pokeInt(byte[],int,int,java.nio.ByteOrder)>($r4, 0, $i7, $r5);

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: byte[] buffer>;

        $s6 = s1 & 255;

        $i8 = $s6 << 24;

        $i9 = 16777215 & i0;

        $i10 = $i8 | $i9;

        $r6 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        staticinvoke <com.android.okhttp.internal.Util: void pokeInt(byte[],int,int,java.nio.ByteOrder)>($r8, 4, $i10, $r6);

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r9 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection access$800(com.android.okhttp.internal.spdy.SpdyStream)>($r7);

        $r11 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: byte[] buffer>;

        $i11 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos>;

        virtualinvoke $r9.<com.android.okhttp.internal.spdy.SpdyConnection: void writeFrame(byte[],int,int)>($r11, 0, $i11);

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos> = 8;

        return;

     label5:
        $r13 := @caughtexception;

        r2 = $r13;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0, $r4;
        com.android.okhttp.internal.spdy.SpdyStream r1, $r3, $r5, $r7, $r8;
        java.lang.Throwable r2, $r9;
        boolean $z0, $z1, $z2, $z3;
        com.android.okhttp.internal.spdy.SpdyConnection $r6;
        java.lang.AssertionError $r10;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $z3 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r8);

        if $z3 == 0 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        entermonitor r1;

     label2:
        $z1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean closed>;

        if $z1 == 0 goto label4;

        exitmonitor r1;

     label3:
        return;

     label4:
        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean closed> = 1;

        exitmonitor r1;

     label5:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r4 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream access$1300(com.android.okhttp.internal.spdy.SpdyStream)>($r3);

        $z2 = $r4.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean finished>;

        if $z2 != 0 goto label6;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: void writeFrame(boolean)>(1);

     label6:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r6 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection access$800(com.android.okhttp.internal.spdy.SpdyStream)>($r5);

        virtualinvoke $r6.<com.android.okhttp.internal.spdy.SpdyConnection: void flush()>();

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: void access$1100(com.android.okhttp.internal.spdy.SpdyStream)>($r7);

        return;

     label7:
        $r9 := @caughtexception;

        r2 = $r9;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void flush() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        boolean $z0, $z1;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyStream $r1, $r3;
        com.android.okhttp.internal.spdy.SpdyConnection $r2;
        java.lang.AssertionError $r4;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: void checkNotClosed()>();

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos>;

        if $i0 <= 8 goto label2;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: void writeFrame(boolean)>(0);

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r2 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection access$800(com.android.okhttp.internal.spdy.SpdyStream)>($r1);

        virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyConnection: void flush()>();

     label2:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        int i0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        i0 := @parameter0: int;

        staticinvoke <com.android.okhttp.internal.Util: void writeSingleByte(java.io.OutputStream,int)>(r0, i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream r0;
        byte[] r1, $r2, $r3, $r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1;
        com.android.okhttp.internal.spdy.SpdyStream $r5;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $i3 = lengthof r1;

        staticinvoke <com.android.okhttp.internal.Util: void checkOffsetAndCount(int,int,int)>($i3, i0, i1);

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: void checkNotClosed()>();

     label2:
        if i1 <= 0 goto label4;

        $i5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos>;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: byte[] buffer>;

        $i4 = lengthof $r2;

        if $i5 != $i4 goto label3;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: void writeFrame(boolean)>(0);

     label3:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: byte[] buffer>;

        $i7 = lengthof $r3;

        $i6 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos>;

        $i8 = $i7 - $i6;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i8);

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: byte[] buffer>;

        $i9 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r4, $i9, i2);

        $i10 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos>;

        $i11 = i2 + $i10;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream: int pos> = $i11;

        i0 = i0 + i2;

        i1 = i1 - i2;

        goto label2;

     label4:
        return;
    }
}
