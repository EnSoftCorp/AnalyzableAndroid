class android.app.ActivityThread$ApplicationThread extends android.app.ApplicationThreadNative
{
    private static final java.lang.String DB_INFO_FORMAT;
    private static final java.lang.String ONE_COUNT_COLUMN;
    private static final java.lang.String TWO_COUNT_COLUMNS;
    private int mLastProcessState;
    final android.app.ActivityThread this$0;

    private void <init>(android.app.ActivityThread)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.app.ActivityThread;

        r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0> = r1;

        specialinvoke r0.<android.app.ApplicationThreadNative: void <init>()>();

        r0.<android.app.ActivityThread$ApplicationThread: int mLastProcessState> = -1;

        return;
    }

    void <init>(android.app.ActivityThread, android.app.ActivityThread$1)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread r1;
        android.app.ActivityThread$1 r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.app.ActivityThread;

        r2 := @parameter1: android.app.ActivityThread$1;

        specialinvoke r0.<android.app.ActivityThread$ApplicationThread: void <init>(android.app.ActivityThread)>(r1);

        return;
    }

    private void dumpMemInfo(java.io.PrintWriter, android.os.Debug$MemoryInfo, boolean, boolean, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.PrintWriter r1;
        android.os.Debug$MemoryInfo r2;
        boolean z0, z1, z2;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l16, $l21, $l22, $l23, $l24, $l25, $l34, $l36, $l38, $l39, $l41, $l42;
        java.lang.Runtime r3;
        int i10, i11, i12, i13, i14, i15, i17, i18, i19, i20, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i37, $i40, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50;
        android.database.sqlite.SQLiteDebug$PagerStats r4;
        java.lang.Object[] r5, r6, r8, r9, r10, r11, r12, r14, r17, $r35;
        java.lang.String r7, r13, r15, r16, r20, $r38, $r41, $r43, $r45, $r47;
        android.database.sqlite.SQLiteDebug$DbStats r18, r19;
        java.lang.Long $r21, $r22, $r27, $r28, $r30;
        android.app.ActivityThread $r23, $r48;
        android.app.ActivityThread$AppBindData $r24, $r49;
        java.lang.Integer $r25, $r26, $r29, $r31, $r32, $r33, $r34, $r37;
        java.util.ArrayList $r36, $r40, $r42, $r46;
        byte $b33, $b35;
        java.lang.Object $r39, $r44;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        $l23 = staticinvoke <android.os.Debug: long getNativeHeapSize()>();

        l0 = $l23 / 1024L;

        $l22 = staticinvoke <android.os.Debug: long getNativeHeapAllocatedSize()>();

        l1 = $l22 / 1024L;

        $l21 = staticinvoke <android.os.Debug: long getNativeHeapFreeSize()>();

        l2 = $l21 / 1024L;

        r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l25 = virtualinvoke r3.<java.lang.Runtime: long totalMemory()>();

        l3 = $l25 / 1024L;

        $l24 = virtualinvoke r3.<java.lang.Runtime: long freeMemory()>();

        l4 = $l24 / 1024L;

        l5 = l3 - l4;

        l6 = staticinvoke <android.view.ViewDebug: long getViewInstanceCount()>();

        l7 = staticinvoke <android.view.ViewDebug: long getViewRootImplCount()>();

        l8 = staticinvoke <android.os.Debug: long countInstancesOfClass(java.lang.Class)>(class "android/app/ContextImpl");

        l9 = staticinvoke <android.os.Debug: long countInstancesOfClass(java.lang.Class)>(class "android/app/Activity");

        i10 = staticinvoke <android.content.res.AssetManager: int getGlobalAssetCount()>();

        i12 = staticinvoke <android.content.res.AssetManager: int getGlobalAssetManagerCount()>();

        i11 = staticinvoke <android.os.Debug: int getBinderLocalObjectCount()>();

        i14 = staticinvoke <android.os.Debug: int getBinderProxyObjectCount()>();

        i13 = staticinvoke <android.os.Debug: int getBinderDeathObjectCount()>();

        l16 = staticinvoke <android.os.Debug: long countInstancesOfClass(java.lang.Class)>(class "com/android/org/conscrypt/OpenSSLSocketImpl");

        r4 = staticinvoke <android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()>();

        i15 = staticinvoke <android.os.Process: int myPid()>();

        $r23 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r24 = $r23.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        if $r24 == null goto label03;

        $r48 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r49 = $r48.<android.app.ActivityThread: android.app.ActivityThread$AppBindData mBoundApplication>;

        r7 = $r49.<android.app.ActivityThread$AppBindData: java.lang.String processName>;

     label01:
        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>(r1, r2, z0, z1, z2, i15, r7, l0, l1, l2, l3, l5, l4);

        if z0 == 0 goto label06;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l6);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l7);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l8);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l9);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i10);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i12);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i11);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i14);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i13);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l16);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i37 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int memoryUsed>;

        $i45 = $i37 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i45);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i44 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int memoryUsed>;

        $i47 = $i44 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i47);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i46 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int pageCacheOverflow>;

        $i49 = $i46 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i49);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i48 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int largestMemAlloc>;

        $i50 = $i48 / 1024;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i50);

        i20 = 0;

     label02:
        $r46 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats>;

        i19 = virtualinvoke $r46.<java.util.ArrayList: int size()>();

        if i20 >= i19 goto label04;

        $r42 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats>;

        $r44 = virtualinvoke $r42.<java.util.ArrayList: java.lang.Object get(int)>(i20);

        r19 = (android.database.sqlite.SQLiteDebug$DbStats) $r44;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $r43 = r19.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String dbName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r43);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $l42 = r19.<android.database.sqlite.SQLiteDebug$DbStats: long pageSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l42);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $l41 = r19.<android.database.sqlite.SQLiteDebug$DbStats: long dbSize>;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l41);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $i43 = r19.<android.database.sqlite.SQLiteDebug$DbStats: int lookaside>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i43);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $r45 = r19.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String cache>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r45);

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(44);

        $r47 = r19.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String cache>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r47);

        i20 = i20 + 1;

        goto label02;

     label03:
        r7 = "unknown";

        goto label01;

     label04:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label05:
        return;

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" Objects");

        r8 = newarray (java.lang.Object)[4];

        r8[0] = "Views:";

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        r8[1] = $r21;

        r8[2] = "ViewRootImpl:";

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l7);

        r8[3] = $r22;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", r8);

        r5 = newarray (java.lang.Object)[4];

        r5[0] = "AppContexts:";

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l8);

        r5[1] = $r27;

        r5[2] = "Activities:";

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l9);

        r5[3] = $r28;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", r5);

        r6 = newarray (java.lang.Object)[4];

        r6[0] = "Assets:";

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        r6[1] = $r25;

        r6[2] = "AssetManagers:";

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        r6[3] = $r26;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", r6);

        r11 = newarray (java.lang.Object)[4];

        r11[0] = "Local Binders:";

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        r11[1] = $r31;

        r11[2] = "Proxy Binders:";

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i14);

        r11[3] = $r32;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", r11);

        r12 = newarray (java.lang.Object)[2];

        r12[0] = "Death Recipients:";

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        r12[1] = $r29;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d", r12);

        r9 = newarray (java.lang.Object)[2];

        r9[0] = "OpenSSL Sockets:";

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16);

        r9[1] = $r30;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d", r9);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" SQL");

        r10 = newarray (java.lang.Object)[2];

        r10[0] = "MEMORY_USED:";

        $i28 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int memoryUsed>;

        $i29 = $i28 / 1024;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        r10[1] = $r34;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d", r10);

        r14 = newarray (java.lang.Object)[4];

        r14[0] = "PAGECACHE_OVERFLOW:";

        $i26 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int pageCacheOverflow>;

        $i27 = $i26 / 1024;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        r14[1] = $r33;

        r14[2] = "MALLOC_SIZE:";

        $i30 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: int largestMemAlloc>;

        $i31 = $i30 / 1024;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i31);

        r14[3] = $r37;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "%21s %8d %21s %8d", r14);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        $r36 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats>;

        i18 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        if i18 <= 0 goto label14;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" DATABASES");

        $r35 = newarray (java.lang.Object)[5];

        $r35[0] = "pgsz";

        $r35[1] = "dbsz";

        $r35[2] = "Lookaside(b)";

        $r35[3] = "cache";

        $r35[4] = "Dbname";

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "  %8s %8s %14s %14s  %s", $r35);

        i17 = 0;

     label07:
        if i17 >= i18 goto label14;

        $r40 = r4.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats>;

        $r39 = virtualinvoke $r40.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r18 = (android.database.sqlite.SQLiteDebug$DbStats) $r39;

        r17 = newarray (java.lang.Object)[5];

        $l36 = r18.<android.database.sqlite.SQLiteDebug$DbStats: long pageSize>;

        $b35 = $l36 cmp 0L;

        if $b35 <= 0 goto label11;

        $l38 = r18.<android.database.sqlite.SQLiteDebug$DbStats: long pageSize>;

        r16 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l38);

     label08:
        r17[0] = r16;

        $l34 = r18.<android.database.sqlite.SQLiteDebug$DbStats: long dbSize>;

        $b33 = $l34 cmp 0L;

        if $b33 <= 0 goto label12;

        $l39 = r18.<android.database.sqlite.SQLiteDebug$DbStats: long dbSize>;

        r15 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l39);

     label09:
        r17[1] = r15;

        $i32 = r18.<android.database.sqlite.SQLiteDebug$DbStats: int lookaside>;

        if $i32 <= 0 goto label13;

        $i40 = r18.<android.database.sqlite.SQLiteDebug$DbStats: int lookaside>;

        r20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i40);

     label10:
        r17[2] = r20;

        $r38 = r18.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String cache>;

        r17[3] = $r38;

        $r41 = r18.<android.database.sqlite.SQLiteDebug$DbStats: java.lang.String dbName>;

        r17[4] = $r41;

        staticinvoke <android.app.ActivityThread: void printRow(java.io.PrintWriter,java.lang.String,java.lang.Object[])>(r1, "  %8s %8s %14s %14s  %s", r17);

        i17 = i17 + 1;

        goto label07;

     label11:
        r16 = " ";

        goto label08;

     label12:
        r15 = " ";

        goto label09;

     label13:
        r20 = " ";

        goto label10;

     label14:
        r13 = staticinvoke <android.content.res.AssetManager: java.lang.String getAssetAllocations()>();

        if r13 == null goto label05;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" Asset Allocations");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r13);

        return;
    }

    private void updatePendingConfiguration(android.content.res.Configuration)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.res.Configuration r1, $r6, $r9;
        android.app.ResourcesManager r2;
        java.lang.Throwable r3, $r10;
        android.app.ActivityThread $r4, $r5, $r7, $r8;
        boolean $z0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.res.Configuration;

        $r4 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        r2 = staticinvoke <android.app.ActivityThread: android.app.ResourcesManager access$200(android.app.ActivityThread)>($r4);

        entermonitor r2;

     label1:
        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r6 = $r5.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        if $r6 == null goto label2;

        $r8 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r9 = $r8.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration>;

        $z0 = virtualinvoke $r9.<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>(r1);

        if $z0 == 0 goto label3;

     label2:
        $r7 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r7.<android.app.ActivityThread: android.content.res.Configuration mPendingConfiguration> = r1;

     label3:
        exitmonitor r2;

     label4:
        return;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public final void bindApplication(java.lang.String, android.content.pm.ApplicationInfo, java.util.List, android.content.ComponentName, java.lang.String, android.os.ParcelFileDescriptor, boolean, android.os.Bundle, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection, int, boolean, boolean, boolean, android.content.res.Configuration, android.content.res.CompatibilityInfo, java.util.Map, android.os.Bundle)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.lang.String r1, r5;
        android.content.pm.ApplicationInfo r2;
        java.util.List r3;
        android.content.ComponentName r4;
        android.os.ParcelFileDescriptor r6;
        boolean z0, z1, z2, z3;
        android.os.Bundle r7, r14;
        android.app.IInstrumentationWatcher r8;
        android.app.IUiAutomationConnection r9;
        int i0;
        android.content.res.Configuration r10;
        java.util.Map r11;
        android.content.res.CompatibilityInfo r12;
        android.app.ActivityThread$AppBindData r13, $r16;
        android.app.ActivityThread $r15;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: android.content.ComponentName;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.ParcelFileDescriptor;

        z0 := @parameter6: boolean;

        r7 := @parameter7: android.os.Bundle;

        r8 := @parameter8: android.app.IInstrumentationWatcher;

        r9 := @parameter9: android.app.IUiAutomationConnection;

        i0 := @parameter10: int;

        z1 := @parameter11: boolean;

        z2 := @parameter12: boolean;

        z3 := @parameter13: boolean;

        r10 := @parameter14: android.content.res.Configuration;

        r12 := @parameter15: android.content.res.CompatibilityInfo;

        r11 := @parameter16: java.util.Map;

        r14 := @parameter17: android.os.Bundle;

        if r11 == null goto label1;

        staticinvoke <android.os.ServiceManager: void initServiceCache(java.util.Map)>(r11);

     label1:
        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void setCoreSettings(android.os.Bundle)>(r14);

        $r16 = new android.app.ActivityThread$AppBindData;

        specialinvoke $r16.<android.app.ActivityThread$AppBindData: void <init>()>();

        r13 = $r16;

        r13.<android.app.ActivityThread$AppBindData: java.lang.String processName> = r1;

        r13.<android.app.ActivityThread$AppBindData: android.content.pm.ApplicationInfo appInfo> = r2;

        r13.<android.app.ActivityThread$AppBindData: java.util.List providers> = r3;

        r13.<android.app.ActivityThread$AppBindData: android.content.ComponentName instrumentationName> = r4;

        r13.<android.app.ActivityThread$AppBindData: android.os.Bundle instrumentationArgs> = r7;

        r13.<android.app.ActivityThread$AppBindData: android.app.IInstrumentationWatcher instrumentationWatcher> = r8;

        r13.<android.app.ActivityThread$AppBindData: android.app.IUiAutomationConnection instrumentationUiAutomationConnection> = r9;

        r13.<android.app.ActivityThread$AppBindData: int debugMode> = i0;

        r13.<android.app.ActivityThread$AppBindData: boolean enableOpenGlTrace> = z1;

        r13.<android.app.ActivityThread$AppBindData: boolean restrictedBackupMode> = z2;

        r13.<android.app.ActivityThread$AppBindData: boolean persistent> = z3;

        r13.<android.app.ActivityThread$AppBindData: android.content.res.Configuration config> = r10;

        r13.<android.app.ActivityThread$AppBindData: android.content.res.CompatibilityInfo compatInfo> = r12;

        r13.<android.app.ActivityThread$AppBindData: java.lang.String initProfileFile> = r5;

        r13.<android.app.ActivityThread$AppBindData: android.os.ParcelFileDescriptor initProfileFd> = r6;

        r13.<android.app.ActivityThread$AppBindData: boolean initAutoStopProfiler> = 0;

        $r15 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r15, 110, r13);

        return;
    }

    public void clearDnsCache()
    {
        android.app.ActivityThread$ApplicationThread r0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        staticinvoke <java.net.InetAddress: void clearDnsCache()>();

        return;
    }

    public void dispatchPackageBroadcast(int, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0;
        java.lang.String[] r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>($r2, 133, r1, i0);

        return;
    }

    public void dumpActivity(java.io.FileDescriptor, android.os.IBinder, java.lang.String, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String r3;
        java.lang.String[] r4;
        android.app.ActivityThread$DumpComponentInfo r5, $r7;
        java.io.IOException r6, $r10;
        android.os.ParcelFileDescriptor $r8;
        android.app.ActivityThread $r9;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r7 = new android.app.ActivityThread$DumpComponentInfo;

        specialinvoke $r7.<android.app.ActivityThread$DumpComponentInfo: void <init>()>();

        r5 = $r7;

     label1:
        $r8 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r1);

        r5.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd> = $r8;

        r5.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token> = r2;

        r5.<android.app.ActivityThread$DumpComponentInfo: java.lang.String prefix> = r3;

        r5.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args> = r4;

        $r9 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$600(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>($r9, 136, r5, 0, 0, 1);

     label2:
        return;

     label3:
        $r10 := @caughtexception;

        r6 = $r10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "dumpActivity failed", r6);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void dumpDbInfo(java.io.FileDescriptor, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        com.android.internal.util.FastPrintWriter r3, $r4;
        java.io.FileOutputStream $r5;
        android.util.PrintWriterPrinter $r6;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.lang.String[];

        $r4 = new com.android.internal.util.FastPrintWriter;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        specialinvoke $r4.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>($r5);

        r3 = $r4;

        $r6 = new android.util.PrintWriterPrinter;

        specialinvoke $r6.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r3);

        staticinvoke <android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[])>($r6, r2);

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

        return;
    }

    public void dumpGfxInfo(java.io.FileDescriptor, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        android.app.ActivityThread $r3;
        android.view.WindowManagerGlobal $r4;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.lang.String[];

        $r3 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$700(android.app.ActivityThread,java.io.FileDescriptor)>($r3, r1);

        $r4 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        virtualinvoke $r4.<android.view.WindowManagerGlobal: void dumpGfxInfo(java.io.FileDescriptor)>(r1);

        return;
    }

    public void dumpHeap(boolean, java.lang.String, android.os.ParcelFileDescriptor)
    {
        android.app.ActivityThread$ApplicationThread r0;
        boolean z0;
        java.lang.String r1;
        android.os.ParcelFileDescriptor r2;
        android.app.ActivityThread$DumpHeapData r3, $r5;
        android.app.ActivityThread r4;
        byte b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        $r5 = new android.app.ActivityThread$DumpHeapData;

        specialinvoke $r5.<android.app.ActivityThread$DumpHeapData: void <init>()>();

        r3 = $r5;

        r3.<android.app.ActivityThread$DumpHeapData: java.lang.String path> = r1;

        r3.<android.app.ActivityThread$DumpHeapData: android.os.ParcelFileDescriptor fd> = r2;

        r4 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$600(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>(r4, 135, r3, b0, 0, 1);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void dumpMemInfo(java.io.FileDescriptor, android.os.Debug$MemoryInfo, boolean, boolean, boolean, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        android.os.Debug$MemoryInfo r2;
        boolean z0, z1, z2;
        java.lang.String[] r3;
        com.android.internal.util.FastPrintWriter r4, $r6;
        java.lang.Throwable r5, $r8;
        java.io.FileOutputStream $r7;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: android.os.Debug$MemoryInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r3 := @parameter5: java.lang.String[];

        $r6 = new com.android.internal.util.FastPrintWriter;

        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        specialinvoke $r6.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>($r7);

        r4 = $r6;

     label1:
        specialinvoke r0.<android.app.ActivityThread$ApplicationThread: void dumpMemInfo(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean)>(r4, r2, z0, z1, z2);

     label2:
        virtualinvoke r4.<java.io.PrintWriter: void flush()>();

        return;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<java.io.PrintWriter: void flush()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void dumpProvider(java.io.FileDescriptor, android.os.IBinder, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String[] r3;
        android.app.ActivityThread$DumpComponentInfo r4, $r6;
        java.io.IOException r5, $r9;
        android.os.ParcelFileDescriptor $r7;
        android.app.ActivityThread $r8;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String[];

        $r6 = new android.app.ActivityThread$DumpComponentInfo;

        specialinvoke $r6.<android.app.ActivityThread$DumpComponentInfo: void <init>()>();

        r4 = $r6;

     label1:
        $r7 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r1);

        r4.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd> = $r7;

        r4.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token> = r2;

        r4.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args> = r3;

        $r8 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$600(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>($r8, 141, r4, 0, 0, 1);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "dumpProvider failed", r5);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void dumpService(java.io.FileDescriptor, android.os.IBinder, java.lang.String[])
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.io.FileDescriptor r1;
        android.os.IBinder r2;
        java.lang.String[] r3;
        android.app.ActivityThread$DumpComponentInfo r4, $r6;
        java.io.IOException r5, $r9;
        android.os.ParcelFileDescriptor $r7;
        android.app.ActivityThread $r8;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: java.lang.String[];

        $r6 = new android.app.ActivityThread$DumpComponentInfo;

        specialinvoke $r6.<android.app.ActivityThread$DumpComponentInfo: void <init>()>();

        r4 = $r6;

     label1:
        $r7 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>(r1);

        r4.<android.app.ActivityThread$DumpComponentInfo: android.os.ParcelFileDescriptor fd> = $r7;

        r4.<android.app.ActivityThread$DumpComponentInfo: android.os.IBinder token> = r2;

        r4.<android.app.ActivityThread$DumpComponentInfo: java.lang.String[] args> = r3;

        $r8 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$600(android.app.ActivityThread,int,java.lang.Object,int,int,boolean)>($r8, 123, r4, 0, 0, 1);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", "dumpService failed", r5);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void processInBackground()
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread $r1, $r3, $r4;
        android.app.ActivityThread$H $r2, $r5, $r6;
        android.os.Message $r7;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r2 = $r1.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        virtualinvoke $r2.<android.app.ActivityThread$H: void removeMessages(int)>(120);

        $r3 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r6 = $r3.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        $r4 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r5 = $r4.<android.app.ActivityThread: android.app.ActivityThread$H mH>;

        $r7 = virtualinvoke $r5.<android.app.ActivityThread$H: android.os.Message obtainMessage(int)>(120);

        virtualinvoke $r6.<android.app.ActivityThread$H: boolean sendMessage(android.os.Message)>($r7);

        return;
    }

    public void profilerControl(boolean, java.lang.String, android.os.ParcelFileDescriptor, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        boolean z0;
        java.lang.String r1;
        android.os.ParcelFileDescriptor r2;
        int i0;
        android.app.ActivityThread$ProfilerControlData r3, $r5;
        android.app.ActivityThread r4;
        byte b1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        i0 := @parameter3: int;

        $r5 = new android.app.ActivityThread$ProfilerControlData;

        specialinvoke $r5.<android.app.ActivityThread$ProfilerControlData: void <init>()>();

        r3 = $r5;

        r3.<android.app.ActivityThread$ProfilerControlData: java.lang.String path> = r1;

        r3.<android.app.ActivityThread$ProfilerControlData: android.os.ParcelFileDescriptor fd> = r2;

        r4 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object,int,int)>(r4, 127, r3, b1, i0);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public void requestAssistContextExtras(android.os.IBinder, android.os.IBinder, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1, r2;
        int i0;
        android.app.ActivityThread$RequestAssistContextExtras r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $r4 = new android.app.ActivityThread$RequestAssistContextExtras;

        specialinvoke $r4.<android.app.ActivityThread$RequestAssistContextExtras: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$RequestAssistContextExtras: android.os.IBinder activityToken> = r1;

        r3.<android.app.ActivityThread$RequestAssistContextExtras: android.os.IBinder requestToken> = r2;

        r3.<android.app.ActivityThread$RequestAssistContextExtras: int requestType> = i0;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 143, r3);

        return;
    }

    public void requestThumbnail(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 117, r1);

        return;
    }

    public void scheduleActivityConfigurationChanged(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 125, r1);

        return;
    }

    public final void scheduleBindService(android.os.IBinder, android.content.Intent, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.content.Intent r2;
        boolean z0;
        int i0;
        android.app.ActivityThread$BindServiceData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i0, 0);

        $r4 = new android.app.ActivityThread$BindServiceData;

        specialinvoke $r4.<android.app.ActivityThread$BindServiceData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$BindServiceData: android.os.IBinder token> = r1;

        r3.<android.app.ActivityThread$BindServiceData: android.content.Intent intent> = r2;

        r3.<android.app.ActivityThread$BindServiceData: boolean rebind> = z0;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 121, r3);

        return;
    }

    public void scheduleConfigurationChanged(android.content.res.Configuration)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.res.Configuration r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.ActivityThread$ApplicationThread: void updatePendingConfiguration(android.content.res.Configuration)>(r1);

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 118, r1);

        return;
    }

    public void scheduleCrash(java.lang.String)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.lang.String r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 134, r1);

        return;
    }

    public final void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        int i0;
        android.app.ActivityThread$CreateBackupAgentData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        i0 := @parameter2: int;

        $r4 = new android.app.ActivityThread$CreateBackupAgentData;

        specialinvoke $r4.<android.app.ActivityThread$CreateBackupAgentData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo> = r1;

        r3.<android.app.ActivityThread$CreateBackupAgentData: android.content.res.CompatibilityInfo compatInfo> = r2;

        r3.<android.app.ActivityThread$CreateBackupAgentData: int backupMode> = i0;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 128, r3);

        return;
    }

    public final void scheduleCreateService(android.os.IBinder, android.content.pm.ServiceInfo, android.content.res.CompatibilityInfo, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.content.pm.ServiceInfo r2;
        android.content.res.CompatibilityInfo r3;
        int i0;
        android.app.ActivityThread$CreateServiceData r4, $r5;
        android.app.ActivityThread $r6;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.pm.ServiceInfo;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        i0 := @parameter3: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i0, 0);

        $r5 = new android.app.ActivityThread$CreateServiceData;

        specialinvoke $r5.<android.app.ActivityThread$CreateServiceData: void <init>()>();

        r4 = $r5;

        r4.<android.app.ActivityThread$CreateServiceData: android.os.IBinder token> = r1;

        r4.<android.app.ActivityThread$CreateServiceData: android.content.pm.ServiceInfo info> = r2;

        r4.<android.app.ActivityThread$CreateServiceData: android.content.res.CompatibilityInfo compatInfo> = r3;

        $r6 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r6, 114, r4);

        return;
    }

    public final void scheduleDestroyActivity(android.os.IBinder, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        int i0;
        android.app.ActivityThread r2;
        byte b1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label2;

        b1 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object,int,int)>(r2, 109, r1, b1, i0);

        return;

     label2:
        b1 = 0;

        goto label1;
    }

    public final void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.pm.ApplicationInfo r1;
        android.content.res.CompatibilityInfo r2;
        android.app.ActivityThread$CreateBackupAgentData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        $r4 = new android.app.ActivityThread$CreateBackupAgentData;

        specialinvoke $r4.<android.app.ActivityThread$CreateBackupAgentData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$CreateBackupAgentData: android.content.pm.ApplicationInfo appInfo> = r1;

        r3.<android.app.ActivityThread$CreateBackupAgentData: android.content.res.CompatibilityInfo compatInfo> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 129, r3);

        return;
    }

    public final void scheduleExit()
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r1, 111, null);

        return;
    }

    public void scheduleInstallProvider(android.content.pm.ProviderInfo)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.pm.ProviderInfo r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.pm.ProviderInfo;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 145, r1);

        return;
    }

    public final void scheduleLaunchActivity(android.content.Intent, android.os.IBinder, int, android.content.pm.ActivityInfo, android.content.res.Configuration, android.content.res.CompatibilityInfo, int, android.os.Bundle, java.util.List, java.util.List, boolean, boolean, java.lang.String, android.os.ParcelFileDescriptor, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.Intent r1;
        android.os.IBinder r2;
        int i0, i1;
        android.content.pm.ActivityInfo r3;
        android.content.res.Configuration r4;
        android.content.res.CompatibilityInfo r5;
        android.os.Bundle r6;
        java.util.List r7, r8;
        boolean z0, z1, z2;
        java.lang.String r9;
        android.os.ParcelFileDescriptor r10;
        android.app.ActivityThread$ActivityClientRecord $r11, r12;
        android.app.ActivityThread $r13;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.pm.ActivityInfo;

        r4 := @parameter4: android.content.res.Configuration;

        r5 := @parameter5: android.content.res.CompatibilityInfo;

        i1 := @parameter6: int;

        r6 := @parameter7: android.os.Bundle;

        r7 := @parameter8: java.util.List;

        r8 := @parameter9: java.util.List;

        z0 := @parameter10: boolean;

        z1 := @parameter11: boolean;

        r9 := @parameter12: java.lang.String;

        r10 := @parameter13: android.os.ParcelFileDescriptor;

        z2 := @parameter14: boolean;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i1, 0);

        $r11 = new android.app.ActivityThread$ActivityClientRecord;

        specialinvoke $r11.<android.app.ActivityThread$ActivityClientRecord: void <init>()>();

        r12 = $r11;

        r12.<android.app.ActivityThread$ActivityClientRecord: android.os.IBinder token> = r2;

        r12.<android.app.ActivityThread$ActivityClientRecord: int ident> = i0;

        r12.<android.app.ActivityThread$ActivityClientRecord: android.content.Intent intent> = r1;

        r12.<android.app.ActivityThread$ActivityClientRecord: android.content.pm.ActivityInfo activityInfo> = r3;

        r12.<android.app.ActivityThread$ActivityClientRecord: android.content.res.CompatibilityInfo compatInfo> = r5;

        r12.<android.app.ActivityThread$ActivityClientRecord: android.os.Bundle state> = r6;

        r12.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingResults> = r7;

        r12.<android.app.ActivityThread$ActivityClientRecord: java.util.List pendingIntents> = r8;

        r12.<android.app.ActivityThread$ActivityClientRecord: boolean startsNotResumed> = z0;

        r12.<android.app.ActivityThread$ActivityClientRecord: boolean isForward> = z1;

        r12.<android.app.ActivityThread$ActivityClientRecord: java.lang.String profileFile> = r9;

        r12.<android.app.ActivityThread$ActivityClientRecord: android.os.ParcelFileDescriptor profileFd> = r10;

        r12.<android.app.ActivityThread$ActivityClientRecord: boolean autoStopProfiler> = z2;

        specialinvoke r0.<android.app.ActivityThread$ApplicationThread: void updatePendingConfiguration(android.content.res.Configuration)>(r4);

        $r13 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r13, 100, r12);

        return;
    }

    public void scheduleLowMemory()
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r1, 124, null);

        return;
    }

    public final void scheduleNewIntent(java.util.List, android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.util.List r1;
        android.os.IBinder r2;
        android.app.ActivityThread$NewIntentData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.os.IBinder;

        $r4 = new android.app.ActivityThread$NewIntentData;

        specialinvoke $r4.<android.app.ActivityThread$NewIntentData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$NewIntentData: java.util.List intents> = r1;

        r3.<android.app.ActivityThread$NewIntentData: android.os.IBinder token> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 112, r3);

        return;
    }

    public final void schedulePauseActivity(android.os.IBinder, boolean, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0, z1;
        int i0;
        android.app.ActivityThread r2;
        byte b1, b2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label3;

        b1 = 102;

     label1:
        if z1 == 0 goto label4;

        b2 = 1;

     label2:
        staticinvoke <android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object,int,int)>(r2, b1, r1, b2, i0);

        return;

     label3:
        b1 = 101;

        goto label1;

     label4:
        b2 = 0;

        goto label2;
    }

    public final void scheduleReceiver(android.content.Intent, android.content.pm.ActivityInfo, android.content.res.CompatibilityInfo, int, java.lang.String, android.os.Bundle, boolean, int, int)
    {
        android.app.ActivityThread$ApplicationThread r0, $r9;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;
        android.content.res.CompatibilityInfo r3;
        int i0, i1, i2;
        java.lang.String r4;
        android.os.Bundle r5;
        boolean z0;
        android.app.ActivityThread$ReceiverData r6, $r7;
        android.app.ActivityThread $r8, $r11;
        android.os.IBinder $r10;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        r3 := @parameter2: android.content.res.CompatibilityInfo;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.Bundle;

        z0 := @parameter6: boolean;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i2, 0);

        $r7 = new android.app.ActivityThread$ReceiverData;

        $r8 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        $r9 = $r8.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread mAppThread>;

        $r10 = virtualinvoke $r9.<android.app.ActivityThread$ApplicationThread: android.os.IBinder asBinder()>();

        specialinvoke $r7.<android.app.ActivityThread$ReceiverData: void <init>(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,android.os.IBinder,int)>(r1, i0, r4, r5, z0, 0, $r10, i1);

        r6 = $r7;

        r6.<android.app.ActivityThread$ReceiverData: android.content.pm.ActivityInfo info> = r2;

        r6.<android.app.ActivityThread$ReceiverData: android.content.res.CompatibilityInfo compatInfo> = r3;

        $r11 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r11, 113, r6);

        return;
    }

    public void scheduleRegisteredReceiver(android.content.IIntentReceiver, android.content.Intent, int, java.lang.String, android.os.Bundle, boolean, boolean, int, int) throws android.os.RemoteException
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.content.IIntentReceiver r1;
        android.content.Intent r2;
        int i0, i1, i2;
        java.lang.String r3;
        android.os.Bundle r4;
        boolean z0, z1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.content.IIntentReceiver;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i2, 0);

        interfaceinvoke r1.<android.content.IIntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>(r2, i0, r3, r4, z0, z1, i1);

        return;
    }

    public final void scheduleRelaunchActivity(android.os.IBinder, java.util.List, java.util.List, int, boolean, android.content.res.Configuration)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        java.util.List r2, r3;
        int i0;
        boolean z0;
        android.content.res.Configuration r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: android.content.res.Configuration;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        virtualinvoke $r5.<android.app.ActivityThread: void requestRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,boolean)>(r1, r2, r3, i0, z0, r4, 1);

        return;
    }

    public final void scheduleResumeActivity(android.os.IBinder, int, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        int i0;
        boolean z0;
        android.app.ActivityThread r2;
        byte b1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i0, 0);

        r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        b1 = 0;

        if z0 == 0 goto label1;

        b1 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>(r2, 107, r1, b1);

        return;
    }

    public final void scheduleSendResult(android.os.IBinder, java.util.List)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        java.util.List r2;
        android.app.ActivityThread$ResultData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.util.List;

        $r4 = new android.app.ActivityThread$ResultData;

        specialinvoke $r4.<android.app.ActivityThread$ResultData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$ResultData: android.os.IBinder token> = r1;

        r3.<android.app.ActivityThread$ResultData: java.util.List results> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 108, r3);

        return;
    }

    public final void scheduleServiceArgs(android.os.IBinder, boolean, int, int, android.content.Intent)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        int i0, i1;
        android.content.Intent r2;
        android.app.ActivityThread$ServiceArgsData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: android.content.Intent;

        $r4 = new android.app.ActivityThread$ServiceArgsData;

        specialinvoke $r4.<android.app.ActivityThread$ServiceArgsData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$ServiceArgsData: android.os.IBinder token> = r1;

        r3.<android.app.ActivityThread$ServiceArgsData: boolean taskRemoved> = z0;

        r3.<android.app.ActivityThread$ServiceArgsData: int startId> = i0;

        r3.<android.app.ActivityThread$ServiceArgsData: int flags> = i1;

        r3.<android.app.ActivityThread$ServiceArgsData: android.content.Intent args> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 115, r3);

        return;
    }

    public final void scheduleSleeping(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread r2;
        byte b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>(r2, 137, r1, b0);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public final void scheduleStopActivity(android.os.IBinder, boolean, int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        int i0;
        android.app.ActivityThread r2;
        byte b1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label2;

        b1 = 103;

     label1:
        staticinvoke <android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object,int,int)>(r2, b1, r1, 0, i0);

        return;

     label2:
        b1 = 104;

        goto label1;
    }

    public final void scheduleStopService(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 116, r1);

        return;
    }

    public final void scheduleSuicide()
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r1, 130, null);

        return;
    }

    public void scheduleTranslucentConversionComplete(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread r2;
        byte b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>(r2, 144, r1, b0);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void scheduleTrimMemory(int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0;
        android.app.ActivityThread $r1;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$500(android.app.ActivityThread,int,java.lang.Object,int)>($r1, 140, null, i0);

        return;
    }

    public final void scheduleUnbindService(android.os.IBinder, android.content.Intent)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.content.Intent r2;
        android.app.ActivityThread$BindServiceData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        $r4 = new android.app.ActivityThread$BindServiceData;

        specialinvoke $r4.<android.app.ActivityThread$BindServiceData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$BindServiceData: android.os.IBinder token> = r1;

        r3.<android.app.ActivityThread$BindServiceData: android.content.Intent intent> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 122, r3);

        return;
    }

    public final void scheduleWindowVisibility(android.os.IBinder, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        boolean z0;
        android.app.ActivityThread r2;
        byte b0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        if z0 == 0 goto label2;

        b0 = 105;

     label1:
        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>(r2, b0, r1);

        return;

     label2:
        b0 = 106;

        goto label1;
    }

    public void setCoreSettings(android.os.Bundle)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.Bundle r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 138, r1);

        return;
    }

    public void setHttpProxy(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        staticinvoke <android.net.Proxy: void setHttpProxySystemProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public void setProcessState(int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.app.ActivityThread$ApplicationThread: void updateProcessState(int,boolean)>(i0, 1);

        return;
    }

    public void setSchedulingGroup(int)
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0, $i1;
        java.lang.Exception r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

     label1:
        $i1 = staticinvoke <android.os.Process: int myPid()>();

        staticinvoke <android.os.Process: void setProcessGroup(int,int)>($i1, i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setting process group to ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityThread", $r6, r1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void unstableProviderDied(android.os.IBinder)
    {
        android.app.ActivityThread$ApplicationThread r0;
        android.os.IBinder r1;
        android.app.ActivityThread $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r2, 142, r1);

        return;
    }

    public void updatePackageCompatibilityInfo(java.lang.String, android.content.res.CompatibilityInfo)
    {
        android.app.ActivityThread$ApplicationThread r0;
        java.lang.String r1;
        android.content.res.CompatibilityInfo r2;
        android.app.ActivityThread$UpdateCompatibilityData r3, $r4;
        android.app.ActivityThread $r5;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        $r4 = new android.app.ActivityThread$UpdateCompatibilityData;

        specialinvoke $r4.<android.app.ActivityThread$UpdateCompatibilityData: void <init>()>();

        r3 = $r4;

        r3.<android.app.ActivityThread$UpdateCompatibilityData: java.lang.String pkg> = r1;

        r3.<android.app.ActivityThread$UpdateCompatibilityData: android.content.res.CompatibilityInfo info> = r2;

        $r5 = r0.<android.app.ActivityThread$ApplicationThread: android.app.ActivityThread this$0>;

        staticinvoke <android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object)>($r5, 139, r3);

        return;
    }

    public void updateProcessState(int, boolean)
    {
        android.app.ActivityThread$ApplicationThread r0;
        int i0, $i1;
        boolean z0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        $i1 = r0.<android.app.ActivityThread$ApplicationThread: int mLastProcessState>;

        if $i1 == i0 goto label2;

        r0.<android.app.ActivityThread$ApplicationThread: int mLastProcessState> = i0;

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void updateTimeZone()
    {
        android.app.ActivityThread$ApplicationThread r0;

        r0 := @this: android.app.ActivityThread$ApplicationThread;

        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>(null);

        return;
    }

    public static void <clinit>()
    {
        <android.app.ActivityThread$ApplicationThread: java.lang.String TWO_COUNT_COLUMNS> = "%21s %8d %21s %8d";

        <android.app.ActivityThread$ApplicationThread: java.lang.String ONE_COUNT_COLUMN> = "%21s %8d";

        <android.app.ActivityThread$ApplicationThread: java.lang.String DB_INFO_FORMAT> = "  %8s %8s %14s %14s  %s";

        return;
    }
}
