public class android.net.LinkAddress extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private java.net.InetAddress address;
    private int prefixLength;

    static void <clinit>()
    {
        android.net.LinkAddress$1 $r0;

        $r0 = new android.net.LinkAddress$1;

        specialinvoke $r0.<android.net.LinkAddress$1: void <init>()>();

        <android.net.LinkAddress: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        android.net.LinkAddress r0;
        java.lang.String r1, $r9, $r10, $r14;
        int i0;
        java.net.InetAddress r3, r8;
        java.lang.String[] r7;
        java.lang.IllegalArgumentException $r11, $r18;
        java.lang.StringBuilder $r12, $r13, $r15;
        java.lang.NullPointerException $r16;
        java.lang.NumberFormatException $r17;
        java.lang.ArrayIndexOutOfBoundsException $r19;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = -1;

     label1:
        r7 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", 2);

        $r9 = r7[1];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = r7[0];

        r8 = staticinvoke <java.net.InetAddress: java.net.InetAddress parseNumericAddress(java.lang.String)>($r10);

     label2:
        r3 = r8;

     label3:
        if r3 == null goto label4;

        if i0 != -1 goto label5;

     label4:
        $r11 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad LinkAddress params ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label5:
        specialinvoke r0.<android.net.LinkAddress: void init(java.net.InetAddress,int)>(r3, i0);

        return;

     label6:
        $r18 := @caughtexception;

        r3 = null;

        goto label3;

     label7:
        $r17 := @caughtexception;

        r3 = null;

        goto label3;

     label8:
        $r19 := @caughtexception;

        r3 = null;

        goto label3;

     label9:
        $r16 := @caughtexception;

        r3 = null;

        goto label3;

        catch java.lang.NullPointerException from label1 to label2 with label9;
        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label8;
        catch java.lang.NumberFormatException from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
    }

    public void <init>(java.net.InetAddress, int)
    {
        android.net.LinkAddress r0;
        java.net.InetAddress r1;
        int i0;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.net.LinkAddress: void init(java.net.InetAddress,int)>(r1, i0);

        return;
    }

    public void <init>(java.net.InterfaceAddress)
    {
        android.net.LinkAddress r0;
        java.net.InterfaceAddress r1;
        java.net.InetAddress $r2;
        short $s0;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InterfaceAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>();

        $s0 = virtualinvoke r1.<java.net.InterfaceAddress: short getNetworkPrefixLength()>();

        specialinvoke r0.<android.net.LinkAddress: void init(java.net.InetAddress,int)>($r2, $s0);

        return;
    }

    private void init(java.net.InetAddress, int)
    {
        android.net.LinkAddress r0;
        java.net.InetAddress r1;
        int i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        if r1 == null goto label2;

        if i0 < 0 goto label2;

        $z0 = r1 instanceof java.net.Inet4Address;

        if $z0 == 0 goto label1;

        if i0 > 32 goto label2;

     label1:
        if i0 <= 128 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad LinkAddress params ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        r0.<android.net.LinkAddress: java.net.InetAddress address> = r1;

        r0.<android.net.LinkAddress: int prefixLength> = i0;

        return;
    }

    public int describeContents()
    {
        android.net.LinkAddress r0;

        r0 := @this: android.net.LinkAddress;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.LinkAddress r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.net.InetAddress $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.net.LinkAddress;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (android.net.LinkAddress) r1;

        $r4 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r3 = r2.<android.net.LinkAddress: java.net.InetAddress address>;

        $z1 = virtualinvoke $r4.<java.net.InetAddress: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        $i0 = r2.<android.net.LinkAddress: int prefixLength>;

        if $i1 != $i0 goto label1;

        return 1;
    }

    public java.net.InetAddress getAddress()
    {
        android.net.LinkAddress r0;
        java.net.InetAddress $r1;

        r0 := @this: android.net.LinkAddress;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        return $r1;
    }

    public int getNetworkPrefixLength()
    {
        android.net.LinkAddress r0;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $i0 = r0.<android.net.LinkAddress: int prefixLength>;

        return $i0;
    }

    public int hashCode()
    {
        android.net.LinkAddress r0;
        int i0, $i1, $i2;
        java.net.InetAddress $r1, $r2;

        r0 := @this: android.net.LinkAddress;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        if $r1 != null goto label2;

        i0 = 0;

     label1:
        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        $i2 = i0 + $i1;

        return $i2;

     label2:
        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        i0 = virtualinvoke $r2.<java.net.InetAddress: int hashCode()>();

        goto label1;
    }

    public java.lang.String toString()
    {
        android.net.LinkAddress r0;
        java.net.InetAddress $r1, $r3;
        java.lang.StringBuilder $r2, $r5, $r6, $r7;
        java.lang.String $r4, $r8;
        int $i0;

        r0 := @this: android.net.LinkAddress;

        $r1 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        if $r1 != null goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r4 = virtualinvoke $r3.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = r0.<android.net.LinkAddress: int prefixLength>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.LinkAddress r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.net.InetAddress $r2, $r3;
        byte[] $r4;

        r0 := @this: android.net.LinkAddress;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        if $r2 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r3 = r0.<android.net.LinkAddress: java.net.InetAddress address>;

        $r4 = virtualinvoke $r3.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r4);

        $i1 = r0.<android.net.LinkAddress: int prefixLength>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        return;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

        return;
    }
}
