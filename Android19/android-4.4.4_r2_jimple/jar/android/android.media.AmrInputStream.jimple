public final class android.media.AmrInputStream extends java.io.InputStream
{
    private static final int SAMPLES_PER_FRAME;
    private static final java.lang.String TAG;
    private final byte[] mBuf;
    private int mBufIn;
    private int mBufOut;
    private int mGae;
    private java.io.InputStream mInputStream;
    private byte[] mOneByte;

    static void <clinit>()
    {
        <android.media.AmrInputStream: java.lang.String TAG> = "AmrInputStream";

        <android.media.AmrInputStream: int SAMPLES_PER_FRAME> = 160;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        return;
    }

    public void <init>(java.io.InputStream)
    {
        android.media.AmrInputStream r0;
        java.io.InputStream r1;
        byte[] $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.media.AmrInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = newarray (byte)[320];

        r0.<android.media.AmrInputStream: byte[] mBuf> = $r2;

        r0.<android.media.AmrInputStream: int mBufIn> = 0;

        r0.<android.media.AmrInputStream: int mBufOut> = 0;

        $r3 = newarray (byte)[1];

        r0.<android.media.AmrInputStream: byte[] mOneByte> = $r3;

        r0.<android.media.AmrInputStream: java.io.InputStream mInputStream> = r1;

        $i0 = staticinvoke <android.media.AmrInputStream: int GsmAmrEncoderNew()>();

        r0.<android.media.AmrInputStream: int mGae> = $i0;

        $i1 = r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderInitialize(int)>($i1);

        return;
    }

    private static native void GsmAmrEncoderCleanup(int);

    private static native void GsmAmrEncoderDelete(int);

    private static native int GsmAmrEncoderEncode(int, byte[], int, byte[], int) throws java.io.IOException;

    private static native void GsmAmrEncoderInitialize(int);

    private static native int GsmAmrEncoderNew();

    public void close() throws java.io.IOException
    {
        android.media.AmrInputStream r0;
        java.lang.Throwable r1, r2, r3, r4, r5, r6, r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.io.InputStream $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.media.AmrInputStream;

     label01:
        $r8 = r0.<android.media.AmrInputStream: java.io.InputStream mInputStream>;

        if $r8 == null goto label02;

        $r9 = r0.<android.media.AmrInputStream: java.io.InputStream mInputStream>;

        virtualinvoke $r9.<java.io.InputStream: void close()>();

     label02:
        r0.<android.media.AmrInputStream: java.io.InputStream mInputStream> = null;

     label03:
        $i0 = r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label04;

        $i3 = r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderCleanup(int)>($i3);

     label04:
        $i1 = r0.<android.media.AmrInputStream: int mGae>;

        if $i1 == 0 goto label05;

        $i2 = r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderDelete(int)>($i2);

     label05:
        r0.<android.media.AmrInputStream: int mGae> = 0;

        return;

     label06:
        $r15 := @caughtexception;

        r7 = $r15;

        r0.<android.media.AmrInputStream: int mGae> = 0;

        throw r7;

     label07:
        $r12 := @caughtexception;

        r5 = $r12;

     label08:
        $i7 = r0.<android.media.AmrInputStream: int mGae>;

        if $i7 == 0 goto label09;

        $i6 = r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderDelete(int)>($i6);

     label09:
        r0.<android.media.AmrInputStream: int mGae> = 0;

        throw r5;

     label10:
        $r13 := @caughtexception;

        r6 = $r13;

        r0.<android.media.AmrInputStream: int mGae> = 0;

        throw r6;

     label11:
        $r14 := @caughtexception;

        r1 = $r14;

        r0.<android.media.AmrInputStream: java.io.InputStream mInputStream> = null;

     label12:
        $i8 = r0.<android.media.AmrInputStream: int mGae>;

        if $i8 == 0 goto label13;

        $i11 = r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderCleanup(int)>($i11);

     label13:
        $i10 = r0.<android.media.AmrInputStream: int mGae>;

        if $i10 == 0 goto label14;

        $i9 = r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderDelete(int)>($i9);

     label14:
        r0.<android.media.AmrInputStream: int mGae> = 0;

        throw r1;

     label15:
        $r16 := @caughtexception;

        r4 = $r16;

        r0.<android.media.AmrInputStream: int mGae> = 0;

        throw r4;

     label16:
        $r11 := @caughtexception;

        r2 = $r11;

     label17:
        $i5 = r0.<android.media.AmrInputStream: int mGae>;

        if $i5 == 0 goto label18;

        $i4 = r0.<android.media.AmrInputStream: int mGae>;

        staticinvoke <android.media.AmrInputStream: void GsmAmrEncoderDelete(int)>($i4);

     label18:
        r0.<android.media.AmrInputStream: int mGae> = 0;

        throw r2;

     label19:
        $r10 := @caughtexception;

        r3 = $r10;

        r0.<android.media.AmrInputStream: int mGae> = 0;

        throw r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.AmrInputStream r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.media.AmrInputStream;

        $i0 = r0.<android.media.AmrInputStream: int mGae>;

        if $i0 == 0 goto label1;

        virtualinvoke r0.<android.media.AmrInputStream: void close()>();

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("someone forgot to close AmrInputStream");

        throw $r1;

     label1:
        return;
    }

    public int read() throws java.io.IOException
    {
        android.media.AmrInputStream r0;
        byte[] $r1, $r2;
        int $i0;
        byte $b1;
        short $s2;

        r0 := @this: android.media.AmrInputStream;

        $r1 = r0.<android.media.AmrInputStream: byte[] mOneByte>;

        $i0 = virtualinvoke r0.<android.media.AmrInputStream: int read(byte[],int,int)>($r1, 0, 1);

        if $i0 != 1 goto label1;

        $r2 = r0.<android.media.AmrInputStream: byte[] mOneByte>;

        $b1 = $r2[0];

        $s2 = 255 & $b1;

        return $s2;

     label1:
        return -1;
    }

    public int read(byte[]) throws java.io.IOException
    {
        android.media.AmrInputStream r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: android.media.AmrInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<android.media.AmrInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.media.AmrInputStream r0;
        byte[] r1, $r2, $r3, $r4, $r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.io.InputStream $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.media.AmrInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = r0.<android.media.AmrInputStream: int mGae>;

        if $i4 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not open");

        throw $r7;

     label1:
        $i6 = r0.<android.media.AmrInputStream: int mBufOut>;

        $i5 = r0.<android.media.AmrInputStream: int mBufIn>;

        if $i6 < $i5 goto label5;

        r0.<android.media.AmrInputStream: int mBufOut> = 0;

        r0.<android.media.AmrInputStream: int mBufIn> = 0;

        i2 = 0;

     label2:
        if i2 >= 320 goto label4;

        $r6 = r0.<android.media.AmrInputStream: java.io.InputStream mInputStream>;

        $r5 = r0.<android.media.AmrInputStream: byte[] mBuf>;

        $i17 = 320 - i2;

        i3 = virtualinvoke $r6.<java.io.InputStream: int read(byte[],int,int)>($r5, i2, $i17);

        if i3 != -1 goto label3;

        return -1;

     label3:
        i2 = i2 + i3;

        goto label2;

     label4:
        $i16 = r0.<android.media.AmrInputStream: int mGae>;

        $r3 = r0.<android.media.AmrInputStream: byte[] mBuf>;

        $r4 = r0.<android.media.AmrInputStream: byte[] mBuf>;

        $i15 = staticinvoke <android.media.AmrInputStream: int GsmAmrEncoderEncode(int,byte[],int,byte[],int)>($i16, $r3, 0, $r4, 0);

        r0.<android.media.AmrInputStream: int mBufIn> = $i15;

     label5:
        $i8 = r0.<android.media.AmrInputStream: int mBufIn>;

        $i7 = r0.<android.media.AmrInputStream: int mBufOut>;

        $i9 = $i8 - $i7;

        if i1 <= $i9 goto label6;

        $i13 = r0.<android.media.AmrInputStream: int mBufIn>;

        $i14 = r0.<android.media.AmrInputStream: int mBufOut>;

        i1 = $i13 - $i14;

     label6:
        $r2 = r0.<android.media.AmrInputStream: byte[] mBuf>;

        $i10 = r0.<android.media.AmrInputStream: int mBufOut>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i10, r1, i0, i1);

        $i11 = r0.<android.media.AmrInputStream: int mBufOut>;

        $i12 = i1 + $i11;

        r0.<android.media.AmrInputStream: int mBufOut> = $i12;

        return i1;
    }
}
