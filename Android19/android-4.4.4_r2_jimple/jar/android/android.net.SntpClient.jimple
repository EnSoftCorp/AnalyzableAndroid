public class android.net.SntpClient extends java.lang.Object
{
    private static final int NTP_MODE_CLIENT;
    private static final int NTP_PACKET_SIZE;
    private static final int NTP_PORT;
    private static final int NTP_VERSION;
    private static final long OFFSET_1900_TO_1970;
    private static final int ORIGINATE_TIME_OFFSET;
    private static final int RECEIVE_TIME_OFFSET;
    private static final int REFERENCE_TIME_OFFSET;
    private static final java.lang.String TAG;
    private static final int TRANSMIT_TIME_OFFSET;
    private long mNtpTime;
    private long mNtpTimeReference;
    private long mRoundTripTime;

    public void <init>()
    {
        android.net.SntpClient r0;

        r0 := @this: android.net.SntpClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private long read32(byte[], int)
    {
        android.net.SntpClient r0;
        byte[] r1;
        int i0, i5, i6, i7, i8, $i9, $i10, $i11;
        byte b1, b2, b3, b4, $b26, $b27, $b28, $b29;
        short $s12, $s13, $s14, $s15;
        long $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25;

        r0 := @this: android.net.SntpClient;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        b1 = r1[i0];

        $i9 = i0 + 1;

        b2 = r1[$i9];

        $i10 = i0 + 2;

        b3 = r1[$i10];

        $i11 = i0 + 3;

        b4 = r1[$i11];

        $s12 = b1 & 128;

        if $s12 != 128 goto label5;

        $b28 = b1 & 127;

        i5 = 128 + $b28;

     label1:
        $s13 = b2 & 128;

        if $s13 != 128 goto label6;

        $b29 = b2 & 127;

        i6 = 128 + $b29;

     label2:
        $s15 = b3 & 128;

        if $s15 != 128 goto label7;

        $b26 = b3 & 127;

        i7 = 128 + $b26;

     label3:
        $s14 = b4 & 128;

        if $s14 != 128 goto label8;

        $b27 = b4 & 127;

        i8 = 128 + $b27;

     label4:
        $l17 = (long) i5;

        $l18 = $l17 << 24;

        $l16 = (long) i6;

        $l19 = $l16 << 16;

        $l23 = $l18 + $l19;

        $l21 = (long) i7;

        $l20 = $l21 << 8;

        $l25 = $l23 + $l20;

        $l22 = (long) i8;

        $l24 = $l25 + $l22;

        return $l24;

     label5:
        i5 = b1;

        goto label1;

     label6:
        i6 = b2;

        goto label2;

     label7:
        i7 = b3;

        goto label3;

     label8:
        i8 = b4;

        goto label4;
    }

    private long readTimeStamp(byte[], int)
    {
        android.net.SntpClient r0;
        byte[] r1;
        int i0, $i3;
        long l1, l2, $l4, $l5, $l6, $l7, $l8;

        r0 := @this: android.net.SntpClient;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 = specialinvoke r0.<android.net.SntpClient: long read32(byte[],int)>(r1, i0);

        $i3 = i0 + 4;

        l2 = specialinvoke r0.<android.net.SntpClient: long read32(byte[],int)>(r1, $i3);

        $l4 = l1 - 2208988800L;

        $l7 = 1000L * $l4;

        $l5 = 1000L * l2;

        $l6 = $l5 / 4294967296L;

        $l8 = $l7 + $l6;

        return $l8;
    }

    private void writeTimeStamp(byte[], int, long)
    {
        android.net.SntpClient r0;
        byte[] r1;
        int i0, i5, i6, i7, i8, i10, i11, i12, $i16, $i17, $i22, $i23, $i26, $i29, $i36, $i37;
        long l1, l2, l3, l4, l9, $l13, $l14, $l18, $l19, $l24, $l25, $l28, $l32, $l35;
        byte $b15, $b20, $b21, $b27, $b30, $b31, $b33, $b38;
        double $d0, $d1;

        r0 := @this: android.net.SntpClient;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 = l1 / 1000L;

        $l14 = 1000L * l2;

        l3 = l1 - $l14;

        l4 = l2 + 2208988800L;

        i5 = i0 + 1;

        $l13 = l4 >> 24;

        $i16 = (int) $l13;

        $b15 = (byte) $i16;

        r1[i0] = $b15;

        i6 = i5 + 1;

        $l18 = l4 >> 16;

        $i17 = (int) $l18;

        $b20 = (byte) $i17;

        r1[i5] = $b20;

        i7 = i6 + 1;

        $l19 = l4 >> 8;

        $i22 = (int) $l19;

        $b21 = (byte) $i22;

        r1[i6] = $b21;

        i8 = i7 + 1;

        $l24 = l4 >> 0;

        $i23 = (int) $l24;

        $b27 = (byte) $i23;

        r1[i7] = $b27;

        $l28 = 4294967296L * l3;

        l9 = $l28 / 1000L;

        i10 = i8 + 1;

        $l25 = l9 >> 24;

        $i26 = (int) $l25;

        $b31 = (byte) $i26;

        r1[i8] = $b31;

        i12 = i10 + 1;

        $l32 = l9 >> 16;

        $i29 = (int) $l32;

        $b30 = (byte) $i29;

        r1[i10] = $b30;

        i11 = i12 + 1;

        $l35 = l9 >> 8;

        $i36 = (int) $l35;

        $b33 = (byte) $i36;

        r1[i12] = $b33;

        $d1 = staticinvoke <java.lang.Math: double random()>();

        $d0 = 255.0 * $d1;

        $i37 = (int) $d0;

        $b38 = (byte) $i37;

        r1[i11] = $b38;

        return;
    }

    public long getNtpTime()
    {
        android.net.SntpClient r0;
        long $l0;

        r0 := @this: android.net.SntpClient;

        $l0 = r0.<android.net.SntpClient: long mNtpTime>;

        return $l0;
    }

    public long getNtpTimeReference()
    {
        android.net.SntpClient r0;
        long $l0;

        r0 := @this: android.net.SntpClient;

        $l0 = r0.<android.net.SntpClient: long mNtpTimeReference>;

        return $l0;
    }

    public long getRoundTripTime()
    {
        android.net.SntpClient r0;
        long $l0;

        r0 := @this: android.net.SntpClient;

        $l0 = r0.<android.net.SntpClient: long mRoundTripTime>;

        return $l0;
    }

    public boolean requestTime(java.lang.String, int)
    {
        android.net.SntpClient r0;
        java.lang.String r1;
        int i0, $i9, $i11;
        java.net.DatagramSocket r2, r3, $r10;
        boolean z0;
        java.lang.Throwable r5, $r16, $r17;
        java.net.InetAddress r6;
        byte[] r7;
        java.net.DatagramPacket r8, r9, $r12, $r13;
        long l1, l2, l3, l4, l5, l6, l7, l8, $l10, $l12, $l13, $l14, $l15, $l16, $l17, $l18;
        java.lang.Exception $r14, $r15;

        r0 := @this: android.net.SntpClient;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = null;

     label01:
        $r10 = new java.net.DatagramSocket;

        specialinvoke $r10.<java.net.DatagramSocket: void <init>()>();

        r3 = $r10;

     label02:
        virtualinvoke r3.<java.net.DatagramSocket: void setSoTimeout(int)>(i0);

        r6 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r1);

        r7 = newarray (byte)[48];

        $r12 = new java.net.DatagramPacket;

        $i9 = lengthof r7;

        specialinvoke $r12.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r7, $i9, r6, 123);

        r8 = $r12;

        r7[0] = 27;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<android.net.SntpClient: void writeTimeStamp(byte[],int,long)>(r7, 40, l1);

        virtualinvoke r3.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r8);

        $r13 = new java.net.DatagramPacket;

        $i11 = lengthof r7;

        specialinvoke $r13.<java.net.DatagramPacket: void <init>(byte[],int)>(r7, $i11);

        r9 = $r13;

        virtualinvoke r3.<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>(r9);

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label03:
        $l10 = l3 - l2;

        l4 = l1 + $l10;

     label04:
        l5 = specialinvoke r0.<android.net.SntpClient: long readTimeStamp(byte[],int)>(r7, 24);

        l6 = specialinvoke r0.<android.net.SntpClient: long readTimeStamp(byte[],int)>(r7, 32);

        l7 = specialinvoke r0.<android.net.SntpClient: long readTimeStamp(byte[],int)>(r7, 40);

     label05:
        $l13 = l3 - l2;

        $l12 = l7 - l6;

        l8 = $l13 - $l12;

     label06:
        $l17 = l6 - l5;

        $l16 = l7 - l4;

        $l14 = $l17 + $l16;

        $l15 = $l14 / 2L;

        $l18 = l4 + $l15;

        r0.<android.net.SntpClient: long mNtpTime> = $l18;

        r0.<android.net.SntpClient: long mNtpTimeReference> = l3;

        r0.<android.net.SntpClient: long mRoundTripTime> = l8;

     label07:
        if r3 == null goto label08;

        virtualinvoke r3.<java.net.DatagramSocket: void close()>();

     label08:
        z0 = 1;

     label09:
        return z0;

     label10:
        $r15 := @caughtexception;

     label11:
        z0 = 0;

        if r2 == null goto label09;

        virtualinvoke r2.<java.net.DatagramSocket: void close()>();

        return 0;

     label12:
        $r16 := @caughtexception;

        r5 = $r16;

     label13:
        if r2 == null goto label14;

        virtualinvoke r2.<java.net.DatagramSocket: void close()>();

     label14:
        throw r5;

     label15:
        $r17 := @caughtexception;

        r5 = $r17;

        r2 = r3;

        goto label13;

     label16:
        $r14 := @caughtexception;

        r2 = r3;

        goto label11;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Exception from label02 to label03 with label16;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Throwable from label06 to label07 with label15;
    }

    public static void <clinit>()
    {
        <android.net.SntpClient: int TRANSMIT_TIME_OFFSET> = 40;

        <android.net.SntpClient: java.lang.String TAG> = "SntpClient";

        <android.net.SntpClient: int REFERENCE_TIME_OFFSET> = 16;

        <android.net.SntpClient: int RECEIVE_TIME_OFFSET> = 32;

        <android.net.SntpClient: int ORIGINATE_TIME_OFFSET> = 24;

        <android.net.SntpClient: long OFFSET_1900_TO_1970> = 2208988800L;

        <android.net.SntpClient: int NTP_VERSION> = 3;

        <android.net.SntpClient: int NTP_PORT> = 123;

        <android.net.SntpClient: int NTP_PACKET_SIZE> = 48;

        <android.net.SntpClient: int NTP_MODE_CLIENT> = 3;

        return;
    }
}
