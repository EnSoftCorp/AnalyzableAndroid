class android.view.ViewRootImpl$W extends android.view.IWindow$Stub
{
    private final java.lang.ref.WeakReference mViewAncestor;
    private final android.view.IWindowSession mWindowSession;

    void <init>(android.view.ViewRootImpl)
    {
        android.view.ViewRootImpl$W r0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        android.view.IWindowSession $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.view.ViewRootImpl;

        specialinvoke r0.<android.view.IWindow$Stub: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor> = $r2;

        $r3 = r1.<android.view.ViewRootImpl: android.view.IWindowSession mWindowSession>;

        r0.<android.view.ViewRootImpl$W: android.view.IWindowSession mWindowSession> = $r3;

        return;
    }

    private static int checkCallingPermission(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2;
        android.app.IActivityManager $r2;
        android.os.RemoteException $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = interfaceinvoke $r2.<android.app.IActivityManager: int checkPermission(java.lang.String,int,int)>(r0, $i1, $i2);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void closeSystemDialogs(java.lang.String)
    {
        java.lang.Object $r0;
        android.view.ViewRootImpl$W r1;
        java.lang.String r2;
        android.view.ViewRootImpl r3;
        java.lang.ref.WeakReference $r4;

        r1 := @this: android.view.ViewRootImpl$W;

        r2 := @parameter0: java.lang.String;

        $r4 = r1.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r0 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.view.ViewRootImpl) $r0;

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.ViewRootImpl: void dispatchCloseSystemDialogs(java.lang.String)>(r2);

     label1:
        return;
    }

    public void dispatchAppVisibility(boolean)
    {
        java.lang.Object $r0;
        android.view.ViewRootImpl$W r1;
        boolean z0;
        android.view.ViewRootImpl r2;
        java.lang.ref.WeakReference $r3;

        r1 := @this: android.view.ViewRootImpl$W;

        z0 := @parameter0: boolean;

        $r3 = r1.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r0 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.ViewRootImpl) $r0;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchAppVisibility(boolean)>(z0);

     label1:
        return;
    }

    public void dispatchDragEvent(android.view.DragEvent)
    {
        java.lang.Object $r0;
        android.view.ViewRootImpl$W r1;
        android.view.DragEvent r2;
        android.view.ViewRootImpl r3;
        java.lang.ref.WeakReference $r4;

        r1 := @this: android.view.ViewRootImpl$W;

        r2 := @parameter0: android.view.DragEvent;

        $r4 = r1.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r0 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.view.ViewRootImpl) $r0;

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.ViewRootImpl: void dispatchDragEvent(android.view.DragEvent)>(r2);

     label1:
        return;
    }

    public void dispatchGetNewSurface()
    {
        android.view.ViewRootImpl$W r0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchGetNewSurface()>();

     label1:
        return;
    }

    public void dispatchScreenState(boolean)
    {
        java.lang.Object $r0;
        android.view.ViewRootImpl$W r1;
        boolean z0;
        android.view.ViewRootImpl r2;
        java.lang.ref.WeakReference $r3;

        r1 := @this: android.view.ViewRootImpl$W;

        z0 := @parameter0: boolean;

        $r3 = r1.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r0 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.ViewRootImpl) $r0;

        if r2 == null goto label1;

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchScreenStateChange(boolean)>(z0);

     label1:
        return;
    }

    public void dispatchSystemUiVisibilityChanged(int, int, int, int)
    {
        android.view.ViewRootImpl$W r0;
        int i0, i1, i2, i3;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchSystemUiVisibilityChanged(int,int,int,int)>(i0, i1, i2, i3);

     label1:
        return;
    }

    public void dispatchWallpaperCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)
    {
        android.view.ViewRootImpl$W r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        boolean z0;
        android.view.IWindowSession $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        if z0 == 0 goto label2;

     label1:
        $r4 = r0.<android.view.ViewRootImpl$W: android.view.IWindowSession mWindowSession>;

        $r5 = virtualinvoke r0.<android.view.ViewRootImpl$W: android.os.IBinder asBinder()>();

        interfaceinvoke $r4.<android.view.IWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>($r5, null);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void dispatchWallpaperOffsets(float, float, float, float, boolean)
    {
        android.view.ViewRootImpl$W r0;
        float f0, f1, f2, f3;
        boolean z0;
        android.view.IWindowSession $r2;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.view.ViewRootImpl$W;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label2;

     label1:
        $r2 = r0.<android.view.ViewRootImpl$W: android.view.IWindowSession mWindowSession>;

        $r3 = virtualinvoke r0.<android.view.ViewRootImpl$W: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.view.IWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>($r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void doneAnimating()
    {
        android.view.ViewRootImpl$W r0;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchDoneAnimating()>();

     label1:
        return;
    }

    public void executeCommand(java.lang.String, java.lang.String, android.os.ParcelFileDescriptor)
    {
        android.view.ViewRootImpl$W r0;
        java.lang.String r1, r2, $r21;
        android.os.ParcelFileDescriptor r3;
        android.view.ViewRootImpl r4;
        android.view.View r5;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream r6, r7, $r16;
        java.io.IOException r8, r10, r11, r12, $r23, $r24, $r26, $r27, $r28;
        java.lang.Throwable r9, $r25, $r29;
        java.lang.ref.WeakReference $r13;
        java.lang.Object $r14;
        int $i0, $i1, $i2;
        java.lang.SecurityException $r15;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r22;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        $r13 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r14 = virtualinvoke $r13.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.view.ViewRootImpl) $r14;

        if r4 == null goto label06;

        r5 = r4.<android.view.ViewRootImpl: android.view.View mView>;

        if r5 == null goto label06;

        $i0 = staticinvoke <android.view.ViewRootImpl$W: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label01;

        $r15 = new java.lang.SecurityException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Insufficient permissions to invoke executeCommand() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label01:
        r6 = null;

     label02:
        $r16 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        specialinvoke $r16.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>(r3);

        r7 = $r16;

     label03:
        staticinvoke <android.view.ViewDebug: void dispatchCommand(android.view.View,java.lang.String,java.lang.String,java.io.OutputStream)>(r5, r1, r2, r7);

     label04:
        if r7 == null goto label06;

     label05:
        virtualinvoke r7.<java.io.OutputStream: void close()>();

     label06:
        return;

     label07:
        $r27 := @caughtexception;

        r12 = $r27;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        return;

     label08:
        $r26 := @caughtexception;

        r8 = $r26;

     label09:
        virtualinvoke r8.<java.io.IOException: void printStackTrace()>();

     label10:
        if r6 == null goto label06;

     label11:
        virtualinvoke r6.<java.io.OutputStream: void close()>();

     label12:
        return;

     label13:
        $r24 := @caughtexception;

        r11 = $r24;

        virtualinvoke r11.<java.io.IOException: void printStackTrace()>();

        return;

     label14:
        $r25 := @caughtexception;

        r9 = $r25;

     label15:
        if r6 == null goto label17;

     label16:
        virtualinvoke r6.<java.io.OutputStream: void close()>();

     label17:
        throw r9;

     label18:
        $r23 := @caughtexception;

        r10 = $r23;

        virtualinvoke r10.<java.io.IOException: void printStackTrace()>();

        goto label17;

     label19:
        $r29 := @caughtexception;

        r9 = $r29;

        r6 = r7;

        goto label15;

     label20:
        $r28 := @caughtexception;

        r8 = $r28;

        r6 = r7;

        goto label09;

        catch java.io.IOException from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label16 to label17 with label18;
    }

    public void moved(int, int)
    {
        android.view.ViewRootImpl$W r0;
        int i0, i1;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchMoved(int,int)>(i0, i1);

     label1:
        return;
    }

    public void resized(android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, boolean, android.content.res.Configuration)
    {
        android.view.ViewRootImpl$W r0;
        android.graphics.Rect r1, r2, r3, r4;
        boolean z0;
        android.content.res.Configuration r5;
        android.view.ViewRootImpl r6;
        java.lang.ref.WeakReference $r7;
        java.lang.Object $r8;

        r0 := @this: android.view.ViewRootImpl$W;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.content.res.Configuration;

        $r7 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (android.view.ViewRootImpl) $r8;

        if r6 == null goto label1;

        virtualinvoke r6.<android.view.ViewRootImpl: void dispatchResized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>(r1, r2, r3, r4, z0, r5);

     label1:
        return;
    }

    public void windowFocusChanged(boolean, boolean)
    {
        android.view.ViewRootImpl$W r0;
        boolean z0, z1;
        android.view.ViewRootImpl r1;
        java.lang.ref.WeakReference $r2;
        java.lang.Object $r3;

        r0 := @this: android.view.ViewRootImpl$W;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r2 = r0.<android.view.ViewRootImpl$W: java.lang.ref.WeakReference mViewAncestor>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.view.ViewRootImpl) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void windowFocusChanged(boolean,boolean)>(z0, z1);

     label1:
        return;
    }
}
