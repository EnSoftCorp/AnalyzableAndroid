public abstract class android.hardware.usb.IUsbManager$Stub extends android.os.Binder implements android.hardware.usb.IUsbManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_allowUsbDebugging;
    static final int TRANSACTION_clearDefaults;
    static final int TRANSACTION_clearUsbDebuggingKeys;
    static final int TRANSACTION_denyUsbDebugging;
    static final int TRANSACTION_getCurrentAccessory;
    static final int TRANSACTION_getDeviceList;
    static final int TRANSACTION_grantAccessoryPermission;
    static final int TRANSACTION_grantDevicePermission;
    static final int TRANSACTION_hasAccessoryPermission;
    static final int TRANSACTION_hasDefaults;
    static final int TRANSACTION_hasDevicePermission;
    static final int TRANSACTION_openAccessory;
    static final int TRANSACTION_openDevice;
    static final int TRANSACTION_requestAccessoryPermission;
    static final int TRANSACTION_requestDevicePermission;
    static final int TRANSACTION_setAccessoryPackage;
    static final int TRANSACTION_setCurrentFunction;
    static final int TRANSACTION_setDevicePackage;
    static final int TRANSACTION_setMassStorageBackingFile;

    public void <init>()
    {
        android.hardware.usb.IUsbManager$Stub r0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.hardware.usb.IUsbManager");

        return;
    }

    public static android.hardware.usb.IUsbManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.hardware.usb.IUsbManager$Stub$Proxy $r2;
        boolean $z0;
        android.hardware.usb.IUsbManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.hardware.usb.IUsbManager;

        if $z0 == 0 goto label2;

        $r3 = (android.hardware.usb.IUsbManager) r1;

        return $r3;

     label2:
        $r2 = new android.hardware.usb.IUsbManager$Stub$Proxy;

        specialinvoke $r2.<android.hardware.usb.IUsbManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.usb.IUsbManager$Stub r0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub r0;
        int i0, i1, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.os.Parcel r1, r2;
        boolean z0, z1, z2, z3, z4, $z5;
        java.lang.String r3, r7, r11, $r21, $r22, $r23, $r24, $r41, $r43, $r47;
        byte b2, b3, b4;
        android.hardware.usb.UsbAccessory r4, r6, r12, r15, r17, r19;
        android.hardware.usb.UsbDevice r5, r9, r13, r14;
        android.app.PendingIntent r8, r10;
        android.os.ParcelFileDescriptor r16, r18;
        android.os.Bundle r20, $r50;
        android.os.Parcelable$Creator $r25, $r26, $r30, $r32, $r33, $r35, $r37, $r39, $r42, $r44, $r49;
        java.lang.Object $r27, $r28, $r29, $r31, $r34, $r36, $r38, $r40, $r45, $r46, $r48;

        r0 := @this: android.hardware.usb.IUsbManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label07;
            case 4: goto label09;
            case 5: goto label13;
            case 6: goto label16;
            case 7: goto label19;
            case 8: goto label23;
            case 9: goto label27;
            case 10: goto label32;
            case 11: goto label37;
            case 12: goto label40;
            case 13: goto label43;
            case 14: goto label45;
            case 15: goto label46;
            case 16: goto label49;
            case 17: goto label50;
            case 18: goto label53;
            case 19: goto label54;
            case 1598968902: goto label02;
            default: goto label01;
        };

     label01:
        $z5 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z5;

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.hardware.usb.IUsbManager");

        return 1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r50 = new android.os.Bundle;

        specialinvoke $r50.<android.os.Bundle: void <init>()>();

        r20 = $r50;

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void getDeviceList(android.os.Bundle)>(r20);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r20 == null goto label04;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r20.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        return 1;

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r47 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r18 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: android.os.ParcelFileDescriptor openDevice(java.lang.String)>($r47);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r18 == null goto label06;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r18.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        return 1;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        return 1;

     label07:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        r19 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: android.hardware.usb.UsbAccessory getCurrentAccessory()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r19 == null goto label08;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r19.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        return 1;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        return 1;

     label09:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i23 == 0 goto label11;

        $r49 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r46 = interfaceinvoke $r49.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r17 = (android.hardware.usb.UsbAccessory) $r46;

     label10:
        r16 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>(r17);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r16 == null goto label12;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r16.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        return 1;

     label11:
        r17 = null;

        goto label10;

     label12:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        return 1;

     label13:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i20 == 0 goto label15;

        $r42 = <android.hardware.usb.UsbDevice: android.os.Parcelable$Creator CREATOR>;

        $r48 = interfaceinvoke $r42.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r14 = (android.hardware.usb.UsbDevice) $r48;

     label14:
        $r41 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>(r14, $r41, $i21);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label15:
        r14 = null;

        goto label14;

     label16:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i18 == 0 goto label18;

        $r44 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r45 = interfaceinvoke $r44.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r15 = (android.hardware.usb.UsbAccessory) $r45;

     label17:
        $r43 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>(r15, $r43, $i22);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label18:
        r15 = null;

        goto label17;

     label19:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i19 == 0 goto label22;

        $r37 = <android.hardware.usb.UsbDevice: android.os.Parcelable$Creator CREATOR>;

        $r38 = interfaceinvoke $r37.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r13 = (android.hardware.usb.UsbDevice) $r38;

     label20:
        z4 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>(r13);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        b4 = 0;

        if z4 == 0 goto label21;

        b4 = 1;

     label21:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b4);

        return 1;

     label22:
        r13 = null;

        goto label20;

     label23:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i17 == 0 goto label26;

        $r39 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r40 = interfaceinvoke $r39.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r12 = (android.hardware.usb.UsbAccessory) $r40;

     label24:
        z3 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>(r12);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        b3 = 0;

        if z3 == 0 goto label25;

        b3 = 1;

     label25:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b3);

        return 1;

     label26:
        r12 = null;

        goto label24;

     label27:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i16 == 0 goto label30;

        $r35 = <android.hardware.usb.UsbDevice: android.os.Parcelable$Creator CREATOR>;

        $r34 = interfaceinvoke $r35.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r9 = (android.hardware.usb.UsbDevice) $r34;

     label28:
        r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i15 == 0 goto label31;

        $r33 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;

        $r36 = interfaceinvoke $r33.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r10 = (android.app.PendingIntent) $r36;

     label29:
        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>(r9, r11, r10);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label30:
        r9 = null;

        goto label28;

     label31:
        r10 = null;

        goto label29;

     label32:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i14 == 0 goto label35;

        $r30 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r29 = interfaceinvoke $r30.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r6 = (android.hardware.usb.UsbAccessory) $r29;

     label33:
        r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i13 == 0 goto label36;

        $r32 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;

        $r31 = interfaceinvoke $r32.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r8 = (android.app.PendingIntent) $r31;

     label34:
        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>(r6, r7, r8);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label35:
        r6 = null;

        goto label33;

     label36:
        r8 = null;

        goto label34;

     label37:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i12 == 0 goto label39;

        $r26 = <android.hardware.usb.UsbDevice: android.os.Parcelable$Creator CREATOR>;

        $r28 = interfaceinvoke $r26.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r5 = (android.hardware.usb.UsbDevice) $r28;

     label38:
        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>(r5, $i11);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label39:
        r5 = null;

        goto label38;

     label40:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i10 == 0 goto label42;

        $r25 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r27 = interfaceinvoke $r25.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r4 = (android.hardware.usb.UsbAccessory) $r27;

     label41:
        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>(r4, $i9);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label42:
        r4 = null;

        goto label41;

     label43:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r23 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z2 = virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: boolean hasDefaults(java.lang.String,int)>($r23, $i7);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        b2 = 0;

        if z2 == 0 goto label44;

        b2 = 1;

     label44:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

        return 1;

     label45:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r24 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void clearDefaults(java.lang.String,int)>($r24, $i8);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label46:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label48;

        z1 = 1;

     label47:
        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void setCurrentFunction(java.lang.String,boolean)>(r3, z1);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label48:
        z1 = 0;

        goto label47;

     label49:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r22 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void setMassStorageBackingFile(java.lang.String)>($r22);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label50:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label52;

        z0 = 1;

     label51:
        $r21 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void allowUsbDebugging(boolean,java.lang.String)>(z0, $r21);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label52:
        z0 = 0;

        goto label51;

     label53:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void denyUsbDebugging()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label54:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r0.<android.hardware.usb.IUsbManager$Stub: void clearUsbDebuggingKeys()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;
    }

    public static void <clinit>()
    {
        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_setMassStorageBackingFile> = 16;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_setDevicePackage> = 5;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_setCurrentFunction> = 15;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_setAccessoryPackage> = 6;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_requestDevicePermission> = 9;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_requestAccessoryPermission> = 10;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_openDevice> = 2;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_openAccessory> = 4;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_hasDevicePermission> = 7;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_hasDefaults> = 13;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_hasAccessoryPermission> = 8;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_grantDevicePermission> = 11;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_grantAccessoryPermission> = 12;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_getDeviceList> = 1;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_getCurrentAccessory> = 3;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_denyUsbDebugging> = 18;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_clearUsbDebuggingKeys> = 19;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_clearDefaults> = 14;

        <android.hardware.usb.IUsbManager$Stub: int TRANSACTION_allowUsbDebugging> = 17;

        <android.hardware.usb.IUsbManager$Stub: java.lang.String DESCRIPTOR> = "android.hardware.usb.IUsbManager";

        return;
    }
}
