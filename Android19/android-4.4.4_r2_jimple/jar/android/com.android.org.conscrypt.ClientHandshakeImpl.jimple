public class com.android.org.conscrypt.ClientHandshakeImpl extends com.android.org.conscrypt.HandshakeProtocol
{

    void <init>(java.lang.Object)
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        java.lang.Object r1;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.android.org.conscrypt.HandshakeProtocol: void <init>(java.lang.Object)>(r1);

        return;
    }

    private com.android.org.conscrypt.SSLSessionImpl findSessionToResume()
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        java.lang.String r1;
        int i0;
        com.android.org.conscrypt.SSLSessionImpl r2, $r10;
        com.android.org.conscrypt.SSLEngineImpl $r3, $r11, $r12;
        com.android.org.conscrypt.SSLSocketImpl $r4, $r5;
        com.android.org.conscrypt.SSLParametersImpl $r6;
        com.android.org.conscrypt.ClientSessionContext $r7;
        javax.net.ssl.SSLSession $r8;
        java.lang.Object $r9;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        $r3 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        if $r3 == null goto label4;

        $r11 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        r1 = virtualinvoke $r11.<com.android.org.conscrypt.SSLEngineImpl: java.lang.String getPeerHost()>();

        $r12 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        i0 = virtualinvoke $r12.<com.android.org.conscrypt.SSLEngineImpl: int getPeerPort()>();

     label1:
        if r1 == null goto label2;

        if i0 != -1 goto label5;

     label2:
        r2 = null;

     label3:
        return r2;

     label4:
        $r4 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        r1 = virtualinvoke $r4.<com.android.org.conscrypt.SSLSocketImpl: java.lang.String getPeerHostName()>();

        $r5 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        i0 = virtualinvoke $r5.<com.android.org.conscrypt.SSLSocketImpl: int getPeerPort()>();

        goto label1;

     label5:
        $r6 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r7 = virtualinvoke $r6.<com.android.org.conscrypt.SSLParametersImpl: com.android.org.conscrypt.ClientSessionContext getClientSessionContext()>();

        $r8 = virtualinvoke $r7.<com.android.org.conscrypt.ClientSessionContext: javax.net.ssl.SSLSession getSession(java.lang.String,int)>(r1, i0);

        r2 = (com.android.org.conscrypt.SSLSessionImpl) $r8;

        if r2 == null goto label3;

        $r9 = virtualinvoke r2.<com.android.org.conscrypt.SSLSessionImpl: java.lang.Object clone()>();

        $r10 = (com.android.org.conscrypt.SSLSessionImpl) $r9;

        return $r10;
    }

    private void renegotiateNewSession()
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1, $r3, $r10;
        boolean $z0;
        com.android.org.conscrypt.SSLSessionImpl $r2, $r7, $r11, $r15, $r18;
        java.security.SecureRandom $r4;
        com.android.org.conscrypt.SSLEngineImpl $r5, $r19, $r20;
        com.android.org.conscrypt.SSLSocketImpl $r6, $r9;
        java.lang.String $r8, $r21;
        int $i0, $i1;
        java.lang.String[] $r12;
        com.android.org.conscrypt.ProtocolVersion $r13, $r14;
        com.android.org.conscrypt.SSLRecordProtocol $r16;
        byte[] $r17;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        $r1 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getEnableSessionCreation()>();

        if $z0 == 0 goto label3;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming> = 0;

        $r2 = new com.android.org.conscrypt.SSLSessionImpl;

        $r3 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r4 = virtualinvoke $r3.<com.android.org.conscrypt.SSLParametersImpl: java.security.SecureRandom getSecureRandom()>();

        specialinvoke $r2.<com.android.org.conscrypt.SSLSessionImpl: void <init>(java.security.SecureRandom)>($r4);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session> = $r2;

        $r5 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        if $r5 == null goto label2;

        $r18 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r19 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        $r21 = virtualinvoke $r19.<com.android.org.conscrypt.SSLEngineImpl: java.lang.String getPeerHost()>();

        $r20 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        $i1 = virtualinvoke $r20.<com.android.org.conscrypt.SSLEngineImpl: int getPeerPort()>();

        virtualinvoke $r18.<com.android.org.conscrypt.SSLSessionImpl: void setPeer(java.lang.String,int)>($r21, $i1);

     label1:
        $r11 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r10 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r12 = virtualinvoke $r10.<com.android.org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledProtocols()>();

        $r13 = staticinvoke <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion getLatestVersion(java.lang.String[])>($r12);

        $r11.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.ProtocolVersion protocol> = $r13;

        $r16 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLRecordProtocol recordProtocol>;

        $r15 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r14 = $r15.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.ProtocolVersion protocol>;

        $r17 = $r14.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        virtualinvoke $r16.<com.android.org.conscrypt.SSLRecordProtocol: void setVersion(byte[])>($r17);

        specialinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void startSession()>();

        return;

     label2:
        $r7 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r6 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        $r8 = virtualinvoke $r6.<com.android.org.conscrypt.SSLSocketImpl: java.lang.String getPeerHostName()>();

        $r9 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        $i0 = virtualinvoke $r9.<com.android.org.conscrypt.SSLSocketImpl: int getPeerPort()>();

        virtualinvoke $r7.<com.android.org.conscrypt.SSLSessionImpl: void setPeer(java.lang.String,int)>($r8, $i0);

        goto label1;

     label3:
        r0.<com.android.org.conscrypt.ClientHandshakeImpl: int status> = 2;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void sendWarningAlert(byte)>(100);

        return;
    }

    private void startSession()
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        com.android.org.conscrypt.CipherSuite[] r1;
        boolean $z0;
        com.android.org.conscrypt.SSLParametersImpl $r2, $r4;
        com.android.org.conscrypt.ClientHello $r3, $r11, $r15;
        java.security.SecureRandom $r5;
        com.android.org.conscrypt.SSLSessionImpl $r6, $r8, $r13, $r14;
        com.android.org.conscrypt.ProtocolVersion $r7;
        byte[] $r9, $r10, $r12;
        com.android.org.conscrypt.CipherSuite $r16;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        $z0 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z0 == 0 goto label2;

        r1 = newarray (com.android.org.conscrypt.CipherSuite)[1];

        $r14 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r16 = $r14.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        r1[0] = $r16;

     label1:
        $r3 = new com.android.org.conscrypt.ClientHello;

        $r4 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r5 = virtualinvoke $r4.<com.android.org.conscrypt.SSLParametersImpl: java.security.SecureRandom getSecureRandom()>();

        $r6 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r7 = $r6.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.ProtocolVersion protocol>;

        $r10 = $r7.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        $r8 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r9 = $r8.<com.android.org.conscrypt.SSLSessionImpl: byte[] id>;

        specialinvoke $r3.<com.android.org.conscrypt.ClientHello: void <init>(java.security.SecureRandom,byte[],byte[],com.android.org.conscrypt.CipherSuite[])>($r5, $r10, $r9, r1);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello> = $r3;

        $r13 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r11 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        $r12 = $r11.<com.android.org.conscrypt.ClientHello: byte[] random>;

        $r13.<com.android.org.conscrypt.SSLSessionImpl: byte[] clientRandom> = $r12;

        $r15 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void send(com.android.org.conscrypt.Message)>($r15);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: int status> = 1;

        return;

     label2:
        $r2 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        r1 = virtualinvoke $r2.<com.android.org.conscrypt.SSLParametersImpl: com.android.org.conscrypt.CipherSuite[] getEnabledCipherSuitesMember()>();

        goto label1;
    }

    private void verifyServerCert()
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        com.android.org.conscrypt.CipherSuite r1;
        boolean z0, $z1;
        java.lang.String r2, r3;
        java.security.cert.CertificateException r4, $r21;
        javax.net.ssl.X509TrustManager r5;
        com.android.org.conscrypt.SSLSessionImpl $r6, $r16;
        com.android.org.conscrypt.ServerKeyExchange $r7;
        com.android.org.conscrypt.SSLEngineImpl $r8, $r19;
        com.android.org.conscrypt.SSLSocketImpl $r9;
        com.android.org.conscrypt.SSLParametersImpl $r10;
        java.security.cert.X509Certificate[] $r11, $r13, $r18;
        com.android.org.conscrypt.CertificateMessage $r12, $r14, $r15;
        com.android.org.conscrypt.TrustManagerImpl $r17;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        $r6 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        r1 = $r6.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $r7 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        if $r7 == null goto label2;

        z0 = 1;

     label1:
        r2 = virtualinvoke r1.<com.android.org.conscrypt.CipherSuite: java.lang.String getAuthType(boolean)>(z0);

        if r2 != null goto label3;

        return;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r8 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        if $r8 == null goto label6;

        $r19 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        r3 = virtualinvoke $r19.<com.android.org.conscrypt.SSLEngineImpl: java.lang.String getPeerHost()>();

     label4:
        $r10 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        r5 = virtualinvoke $r10.<com.android.org.conscrypt.SSLParametersImpl: javax.net.ssl.X509TrustManager getTrustManager()>();

        $z1 = r5 instanceof com.android.org.conscrypt.TrustManagerImpl;

        if $z1 == 0 goto label7;

        $r17 = (com.android.org.conscrypt.TrustManagerImpl) r5;

        $r15 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        $r18 = $r15.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        virtualinvoke $r17.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>($r18, r2, r3);

     label5:
        $r16 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r14 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        $r13 = $r14.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $r16.<com.android.org.conscrypt.SSLSessionImpl: java.security.cert.X509Certificate[] peerCertificates> = $r13;

        return;

     label6:
        $r9 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        r3 = virtualinvoke $r9.<com.android.org.conscrypt.SSLSocketImpl: java.lang.String getWrappedHostName()>();

        goto label4;

     label7:
        $r12 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        $r11 = $r12.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        interfaceinvoke r5.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r11, r2);

     label8:
        goto label5;

     label9:
        $r21 := @caughtexception;

        r4 = $r21;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String,java.lang.Exception)>(42, "Not trusted server certificate", r4);

        return;

        catch java.security.cert.CertificateException from label4 to label5 with label9;
        catch java.security.cert.CertificateException from label7 to label8 with label9;
    }

    protected void makeFinished()
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        byte[] r1, $r3, $r4, $r8, $r9;
        com.android.org.conscrypt.ServerHello $r2, $r7;
        byte $b0, $b1;
        com.android.org.conscrypt.Finished $r5, $r6;
        boolean $z0;
        com.android.org.conscrypt.SSLSessionImpl $r10;
        long $l2;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        $r2 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r3 = $r2.<com.android.org.conscrypt.ServerHello: byte[] server_version>;

        $b0 = $r3[1];

        if $b0 != 1 goto label2;

        r1 = newarray (byte)[12];

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void computerVerifyDataTLS(java.lang.String,byte[])>("client finished", r1);

     label1:
        $r5 = new com.android.org.conscrypt.Finished;

        specialinvoke $r5.<com.android.org.conscrypt.Finished: void <init>(byte[])>(r1);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.Finished clientFinished> = $r5;

        $r6 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.Finished clientFinished>;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void send(com.android.org.conscrypt.Message)>($r6);

        $z0 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z0 == 0 goto label3;

        $r10 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r10.<com.android.org.conscrypt.SSLSessionImpl: long lastAccessedTime> = $l2;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: int status> = 3;

        return;

     label2:
        r1 = newarray (byte)[36];

        $r4 = <com.android.org.conscrypt.SSLv3Constants: byte[] client>;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void computerVerifyDataSSLv3(byte[],byte[])>($r4, r1);

        goto label1;

     label3:
        $r7 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r8 = $r7.<com.android.org.conscrypt.ServerHello: byte[] server_version>;

        $b1 = $r8[1];

        if $b1 != 1 goto label5;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void computerReferenceVerifyDataTLS(java.lang.String)>("server finished");

     label4:
        r0.<com.android.org.conscrypt.ClientHandshakeImpl: int status> = 1;

        return;

     label5:
        $r9 = <com.android.org.conscrypt.SSLv3Constants: byte[] server>;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void computerReferenceVerifyDataSSLv3(byte[])>($r9);

        goto label4;
    }

    void processServerHelloDone()
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        com.android.org.conscrypt.CertificateRequest r1, $r135, $r136;
        java.security.PrivateKey r2, $r113;
        java.lang.Exception r3, r6, r12, $r139, $r140, $r142;
        javax.crypto.Cipher r4;
        javax.crypto.spec.SecretKeySpec r5, $r40;
        byte[] r7, $r36, $r37, $r39, $r42, $r43, $r45, $r54, $r57, $r64, $r66, $r75, $r80, $r107, $r109, $r115;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        com.android.org.conscrypt.ClientKeyExchange r8, $r47, $r48, $r49, $r60, $r97;
        java.lang.String r9, r23, $r52, $r58, $r67, $r104;
        com.android.org.conscrypt.DigitalSignature r10, r11, r13, $r53, $r72, $r118;
        java.security.KeyFactory r14;
        java.security.KeyPairGenerator r15;
        javax.crypto.KeyAgreement r16;
        java.security.KeyPair r17;
        java.security.PublicKey r18, $r112;
        java.lang.String[] r19;
        javax.net.ssl.X509KeyManager r20;
        javax.security.auth.x500.X500Principal[] r21;
        java.security.cert.X509Certificate[] r22, $r31, $r50, $r69, $r106;
        javax.net.ssl.X509ExtendedKeyManager r24;
        com.android.org.conscrypt.CertificateMessage r25, $r27, $r34, $r46, $r51, $r68, $r70, $r103, $r117, $r130, $r134;
        com.android.org.conscrypt.SSLSessionImpl $r26, $r29, $r61, $r76, $r81, $r84, $r88, $r119, $r121, $r123, $r126, $r128, $r131, $r143;
        com.android.org.conscrypt.CipherSuite $r28, $r30, $r62, $r82, $r85, $r86, $r87, $r120, $r122, $r124, $r127, $r129, $r144;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.security.cert.X509Certificate $r32, $r78, $r105;
        com.android.org.conscrypt.ServerKeyExchange $r33, $r71, $r74, $r83, $r89, $r93, $r94, $r95, $r100, $r101, $r125;
        java.security.SecureRandom $r35;
        com.android.org.conscrypt.SSLParametersImpl $r38, $r138;
        com.android.org.conscrypt.ClientHello $r41, $r77, $r108;
        com.android.org.conscrypt.ServerHello $r44, $r79, $r110;
        byte $b1;
        com.android.org.conscrypt.CertificateVerify $r55, $r59;
        com.android.org.conscrypt.HandshakeIODataStream $r56, $r63, $r65;
        java.security.interfaces.RSAPublicKey $r73;
        java.math.BigInteger $r90, $r91, $r92, $r98, $r99, $r114;
        javax.crypto.spec.DHPublicKeySpec $r96;
        javax.crypto.spec.DHParameterSpec $r102;
        javax.crypto.interfaces.DHPublicKey $r111;
        com.android.org.conscrypt.SSLEngineImpl $r132;
        com.android.org.conscrypt.SSLSocketImpl $r133, $r137, $r141;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        $r27 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        if $r27 == null goto label09;

        $r143 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r144 = $r143.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $z12 = virtualinvoke $r144.<com.android.org.conscrypt.CipherSuite: boolean isAnonymous()>();

        if $z12 == 0 goto label01;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

        return;

     label01:
        specialinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void verifyServerCert()>();

     label02:
        r1 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateRequest certificateRequest>;

        r2 = null;

        if r1 == null goto label05;

        $r136 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateRequest certificateRequest>;

        r19 = virtualinvoke $r136.<com.android.org.conscrypt.CertificateRequest: java.lang.String[] getTypesAsString()>();

        $r135 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateRequest certificateRequest>;

        r21 = $r135.<com.android.org.conscrypt.CertificateRequest: javax.security.auth.x500.X500Principal[] certificate_authorities>;

        $r138 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        r20 = virtualinvoke $r138.<com.android.org.conscrypt.SSLParametersImpl: javax.net.ssl.X509KeyManager getKeyManager()>();

        $z11 = r20 instanceof javax.net.ssl.X509ExtendedKeyManager;

        if $z11 == 0 goto label11;

        r24 = (javax.net.ssl.X509ExtendedKeyManager) r20;

        $r133 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        if $r133 == null goto label10;

        $r141 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        r23 = virtualinvoke r24.<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)>(r19, r21, $r141);

     label03:
        r22 = null;

        if r23 == null goto label04;

        r22 = virtualinvoke r24.<javax.net.ssl.X509ExtendedKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>(r23);

     label04:
        $r131 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r131.<com.android.org.conscrypt.SSLSessionImpl: java.security.cert.X509Certificate[] localCertificates> = r22;

        $r130 = new com.android.org.conscrypt.CertificateMessage;

        specialinvoke $r130.<com.android.org.conscrypt.CertificateMessage: void <init>(java.security.cert.X509Certificate[])>(r22);

        r25 = $r130;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage clientCert> = r25;

        r2 = interfaceinvoke r20.<javax.net.ssl.X509KeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>(r23);

        $r134 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage clientCert>;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void send(com.android.org.conscrypt.Message)>($r134);

     label05:
        $r29 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r30 = $r29.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i0 = $r30.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        if $i0 == 1 goto label06;

        $r76 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r86 = $r76.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i4 = $r86.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        if $i4 != 2 goto label25;

     label06:
        r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/PKCS1Padding");

        $r33 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        if $r33 == null goto label21;

        $r61 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r62 = $r61.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $z5 = virtualinvoke $r62.<com.android.org.conscrypt.CipherSuite: boolean isAnonymous()>();

        if $z5 != 0 goto label12;

        $r72 = new com.android.org.conscrypt.DigitalSignature;

        $r68 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        $r67 = virtualinvoke $r68.<com.android.org.conscrypt.CertificateMessage: java.lang.String getAuthType()>();

        specialinvoke $r72.<com.android.org.conscrypt.DigitalSignature: void <init>(java.lang.String)>($r67);

        r11 = $r72;

        $r70 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        $r69 = $r70.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $r78 = $r69[0];

        virtualinvoke r11.<com.android.org.conscrypt.DigitalSignature: void init(java.security.cert.Certificate)>($r78);

        $r77 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        $r80 = virtualinvoke $r77.<com.android.org.conscrypt.ClientHello: byte[] getRandom()>();

        virtualinvoke r11.<com.android.org.conscrypt.DigitalSignature: void update(byte[])>($r80);

        $r79 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r75 = virtualinvoke $r79.<com.android.org.conscrypt.ServerHello: byte[] getRandom()>();

        virtualinvoke r11.<com.android.org.conscrypt.DigitalSignature: void update(byte[])>($r75);

        $r74 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $z6 = virtualinvoke $r74.<com.android.org.conscrypt.ServerKeyExchange: boolean verifySignature(com.android.org.conscrypt.DigitalSignature)>(r11);

        if $z6 != 0 goto label12;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(51, "Cannot verify RSA params");

     label07:
        return;

     label08:
        $r139 := @caughtexception;

        r3 = $r139;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String,java.lang.Exception)>(80, "Unexpected exception", r3);

        return;

     label09:
        $r26 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r28 = $r26.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $z1 = virtualinvoke $r28.<com.android.org.conscrypt.CipherSuite: boolean isAnonymous()>();

        if $z1 != 0 goto label02;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

        return;

     label10:
        $r132 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        r23 = virtualinvoke r24.<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)>(r19, r21, $r132);

        goto label03;

     label11:
        $r137 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        r23 = interfaceinvoke r20.<javax.net.ssl.X509KeyManager: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)>(r19, r21, $r137);

        r22 = null;

        if r23 == null goto label04;

        r22 = interfaceinvoke r20.<javax.net.ssl.X509KeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>(r23);

        goto label04;

     label12:
        $r71 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $r73 = virtualinvoke $r71.<com.android.org.conscrypt.ServerKeyExchange: java.security.interfaces.RSAPublicKey getRSAPublicKey()>();

        virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(3, $r73);

     label13:
        $r37 = newarray (byte)[48];

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: byte[] preMasterSecret> = $r37;

        $r38 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r35 = virtualinvoke $r38.<com.android.org.conscrypt.SSLParametersImpl: java.security.SecureRandom getSecureRandom()>();

        $r36 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: byte[] preMasterSecret>;

        virtualinvoke $r35.<java.security.SecureRandom: void nextBytes(byte[])>($r36);

        $r41 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        $r39 = $r41.<com.android.org.conscrypt.ClientHello: byte[] client_version>;

        $r42 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: byte[] preMasterSecret>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r39, 0, $r42, 0, 2);

     label14:
        $r40 = new javax.crypto.spec.SecretKeySpec;

        $r45 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: byte[] preMasterSecret>;

        specialinvoke $r40.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r45, "preMasterSecret");

        r5 = $r40;

        r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r5);

        $r44 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r43 = $r44.<com.android.org.conscrypt.ServerHello: byte[] server_version>;

        $b1 = $r43[1];

        if $b1 != 1 goto label23;

     label15:
        z0 = 1;

     label16:
        $r48 = new com.android.org.conscrypt.ClientKeyExchange;

        specialinvoke $r48.<com.android.org.conscrypt.ClientKeyExchange: void <init>(byte[],boolean)>(r7, z0);

        r8 = $r48;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientKeyExchange clientKeyExchange> = r8;

     label17:
        $r47 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientKeyExchange clientKeyExchange>;

        if $r47 == null goto label18;

        $r60 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientKeyExchange clientKeyExchange>;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void send(com.android.org.conscrypt.Message)>($r60);

     label18:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void computerMasterSecret()>();

        $r46 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage clientCert>;

        if $r46 == null goto label20;

        $r51 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage clientCert>;

        $r50 = $r51.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $i2 = lengthof $r50;

        if $i2 <= 0 goto label20;

        $r49 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientKeyExchange clientKeyExchange>;

        $z2 = virtualinvoke $r49.<com.android.org.conscrypt.ClientKeyExchange: boolean isEmpty()>();

        if $z2 != 0 goto label20;

        r9 = interfaceinvoke r2.<java.security.PrivateKey: java.lang.String getAlgorithm()>();

        $r53 = new com.android.org.conscrypt.DigitalSignature;

        specialinvoke $r53.<com.android.org.conscrypt.DigitalSignature: void <init>(java.lang.String)>(r9);

        r10 = $r53;

        virtualinvoke r10.<com.android.org.conscrypt.DigitalSignature: void init(java.security.PrivateKey)>(r2);

        $r52 = "RSA";

        $z3 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z3 == 0 goto label34;

        $r63 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        $r64 = virtualinvoke $r63.<com.android.org.conscrypt.HandshakeIODataStream: byte[] getDigestMD5()>();

        virtualinvoke r10.<com.android.org.conscrypt.DigitalSignature: void setMD5(byte[])>($r64);

        $r65 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        $r66 = virtualinvoke $r65.<com.android.org.conscrypt.HandshakeIODataStream: byte[] getDigestSHA()>();

        virtualinvoke r10.<com.android.org.conscrypt.DigitalSignature: void setSHA(byte[])>($r66);

     label19:
        $r59 = new com.android.org.conscrypt.CertificateVerify;

        $r54 = virtualinvoke r10.<com.android.org.conscrypt.DigitalSignature: byte[] sign()>();

        specialinvoke $r59.<com.android.org.conscrypt.CertificateVerify: void <init>(byte[])>($r54);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateVerify certificateVerify> = $r59;

        $r55 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateVerify certificateVerify>;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void send(com.android.org.conscrypt.Message)>($r55);

     label20:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void sendChangeCipherSpec()>();

        return;

     label21:
        $r34 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        $r31 = $r34.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $r32 = $r31[0];

        virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.cert.Certificate)>(3, $r32);

     label22:
        goto label13;

     label23:
        z0 = 0;

        goto label16;

     label24:
        $r142 := @caughtexception;

        r6 = $r142;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String,java.lang.Exception)>(80, "Unexpected exception", r6);

        return;

     label25:
        $r84 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r85 = $r84.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i3 = $r85.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        if $i3 == 3 goto label26;

        $r126 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r127 = $r126.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i7 = $r127.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        if $i7 == 4 goto label26;

        $r128 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r129 = $r128.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i8 = $r129.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        if $i8 == 5 goto label26;

        $r119 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r120 = $r119.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i5 = $r120.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        if $i5 == 6 goto label26;

        $r121 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r122 = $r121.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i6 = $r122.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        if $i6 == 9 goto label26;

        $r123 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r124 = $r123.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i9 = $r124.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        if $i9 != 10 goto label33;

     label26:
        $r83 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        if $r83 != null goto label27;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(10, "Expected ServerKeyExchange");

        return;

     label27:
        $r81 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r82 = $r81.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $z9 = virtualinvoke $r82.<com.android.org.conscrypt.CipherSuite: boolean isAnonymous()>();

        $r89 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $z8 = virtualinvoke $r89.<com.android.org.conscrypt.ServerKeyExchange: boolean isAnonymous()>();

        if $z9 == $z8 goto label28;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(51, "Wrong type in ServerKeyExchange");

        return;

     label28:
        $r88 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r87 = $r88.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $z7 = virtualinvoke $r87.<com.android.org.conscrypt.CipherSuite: boolean isAnonymous()>();

        if $z7 != 0 goto label31;

        $r118 = new com.android.org.conscrypt.DigitalSignature;

        $r117 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        $r104 = virtualinvoke $r117.<com.android.org.conscrypt.CertificateMessage: java.lang.String getAuthType()>();

        specialinvoke $r118.<com.android.org.conscrypt.DigitalSignature: void <init>(java.lang.String)>($r104);

        r13 = $r118;

        $r103 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        $r106 = $r103.<com.android.org.conscrypt.CertificateMessage: java.security.cert.X509Certificate[] certs>;

        $r105 = $r106[0];

        virtualinvoke r13.<com.android.org.conscrypt.DigitalSignature: void init(java.security.cert.Certificate)>($r105);

        $r108 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        $r107 = virtualinvoke $r108.<com.android.org.conscrypt.ClientHello: byte[] getRandom()>();

        virtualinvoke r13.<com.android.org.conscrypt.DigitalSignature: void update(byte[])>($r107);

        $r110 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r109 = virtualinvoke $r110.<com.android.org.conscrypt.ServerHello: byte[] getRandom()>();

        virtualinvoke r13.<com.android.org.conscrypt.DigitalSignature: void update(byte[])>($r109);

        $r125 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $z10 = virtualinvoke $r125.<com.android.org.conscrypt.ServerKeyExchange: boolean verifySignature(com.android.org.conscrypt.DigitalSignature)>(r13);

        if $z10 != 0 goto label31;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(51, "Cannot verify DH params");

     label29:
        return;

     label30:
        $r140 := @caughtexception;

        r12 = $r140;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String,java.lang.Exception)>(80, "Unexpected exception", r12);

        return;

     label31:
        r14 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("DH");

        r16 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>("DH");

        r15 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>("DH");

        $r96 = new javax.crypto.spec.DHPublicKeySpec;

        $r95 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $r90 = $r95.<com.android.org.conscrypt.ServerKeyExchange: java.math.BigInteger par3>;

        $r94 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $r91 = $r94.<com.android.org.conscrypt.ServerKeyExchange: java.math.BigInteger par1>;

        $r93 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $r92 = $r93.<com.android.org.conscrypt.ServerKeyExchange: java.math.BigInteger par2>;

        specialinvoke $r96.<javax.crypto.spec.DHPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r90, $r91, $r92);

        r18 = virtualinvoke r14.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r96);

        $r102 = new javax.crypto.spec.DHParameterSpec;

        $r101 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $r98 = $r101.<com.android.org.conscrypt.ServerKeyExchange: java.math.BigInteger par1>;

        $r100 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        $r99 = $r100.<com.android.org.conscrypt.ServerKeyExchange: java.math.BigInteger par2>;

        specialinvoke $r102.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r98, $r99);

        virtualinvoke r15.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r102);

        r17 = virtualinvoke r15.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r97 = new com.android.org.conscrypt.ClientKeyExchange;

        $r112 = virtualinvoke r17.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r111 = (javax.crypto.interfaces.DHPublicKey) $r112;

        $r114 = interfaceinvoke $r111.<javax.crypto.interfaces.DHPublicKey: java.math.BigInteger getY()>();

        specialinvoke $r97.<com.android.org.conscrypt.ClientKeyExchange: void <init>(java.math.BigInteger)>($r114);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientKeyExchange clientKeyExchange> = $r97;

        $r113 = virtualinvoke r17.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        virtualinvoke r16.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r113);

        virtualinvoke r16.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>(r18, 1);

        $r115 = virtualinvoke r16.<javax.crypto.KeyAgreement: byte[] generateSecret()>();

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: byte[] preMasterSecret> = $r115;

     label32:
        goto label17;

     label33:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(51, "Unsupported handshake type");

        return;

     label34:
        $r58 = "DSA";

        $z4 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z4 == 0 goto label19;

        $r56 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        $r57 = virtualinvoke $r56.<com.android.org.conscrypt.HandshakeIODataStream: byte[] getDigestSHA()>();

        virtualinvoke r10.<com.android.org.conscrypt.DigitalSignature: void setSHA(byte[])>($r57);

        goto label19;

        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label12 to label13 with label08;
        catch java.lang.Exception from label14 to label15 with label24;
        catch java.lang.Exception from label16 to label17 with label24;
        catch java.lang.Exception from label21 to label22 with label08;
        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.Exception from label31 to label32 with label30;
    }

    public void receiveChangeCipherSpec()
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        boolean $z0;
        com.android.org.conscrypt.Finished $r1;
        com.android.org.conscrypt.ServerHello $r2;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        $z0 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        if $r2 != null goto label1;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

     label1:
        r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean changeCipherSpecReceived> = 1;

        return;

     label2:
        $r1 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.Finished clientFinished>;

        if $r1 != null goto label1;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

        goto label1;
    }

    public void start()
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        com.android.org.conscrypt.SSLSessionImpl $r1, $r3, $r4, $r6, $r11, $r16, $r17, $r24, $r26;
        com.android.org.conscrypt.ClientHello $r2;
        boolean $z0, $z1;
        com.android.org.conscrypt.SSLParametersImpl $r5, $r7, $r14;
        java.security.SecureRandom $r8;
        com.android.org.conscrypt.SSLEngineImpl $r9, $r21, $r25;
        com.android.org.conscrypt.SSLSocketImpl $r10, $r13;
        java.lang.String $r12, $r23;
        int $i0, $i1, $i2;
        java.lang.String[] $r15;
        com.android.org.conscrypt.ProtocolVersion $r18, $r20;
        byte[] $r19;
        com.android.org.conscrypt.SSLRecordProtocol $r22;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        $r1 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        if $r1 != null goto label4;

        $r26 = specialinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl findSessionToResume()>();

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session> = $r26;

     label1:
        $r4 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        if $r4 == null goto label6;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming> = 1;

     label2:
        specialinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void startSession()>();

     label3:
        return;

     label4:
        $r2 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        if $r2 == null goto label5;

        $i2 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: int status>;

        if $i2 != 3 goto label3;

     label5:
        $r3 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $z0 = virtualinvoke $r3.<com.android.org.conscrypt.SSLSessionImpl: boolean isValid()>();

        if $z0 != 0 goto label1;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session> = null;

        goto label1;

     label6:
        $r5 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $z1 = virtualinvoke $r5.<com.android.org.conscrypt.SSLParametersImpl: boolean getEnableSessionCreation()>();

        if $z1 == 0 goto label9;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming> = 0;

        $r6 = new com.android.org.conscrypt.SSLSessionImpl;

        $r7 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r8 = virtualinvoke $r7.<com.android.org.conscrypt.SSLParametersImpl: java.security.SecureRandom getSecureRandom()>();

        specialinvoke $r6.<com.android.org.conscrypt.SSLSessionImpl: void <init>(java.security.SecureRandom)>($r8);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session> = $r6;

        $r9 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        if $r9 == null goto label8;

        $r24 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r21 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        $r23 = virtualinvoke $r21.<com.android.org.conscrypt.SSLEngineImpl: java.lang.String getPeerHost()>();

        $r25 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLEngineImpl engineOwner>;

        $i1 = virtualinvoke $r25.<com.android.org.conscrypt.SSLEngineImpl: int getPeerPort()>();

        virtualinvoke $r24.<com.android.org.conscrypt.SSLSessionImpl: void setPeer(java.lang.String,int)>($r23, $i1);

     label7:
        $r16 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r14 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r15 = virtualinvoke $r14.<com.android.org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledProtocols()>();

        $r18 = staticinvoke <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion getLatestVersion(java.lang.String[])>($r15);

        $r16.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.ProtocolVersion protocol> = $r18;

        $r22 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLRecordProtocol recordProtocol>;

        $r17 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r20 = $r17.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.ProtocolVersion protocol>;

        $r19 = $r20.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        virtualinvoke $r22.<com.android.org.conscrypt.SSLRecordProtocol: void setVersion(byte[])>($r19);

        goto label2;

     label8:
        $r11 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r10 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        $r12 = virtualinvoke $r10.<com.android.org.conscrypt.SSLSocketImpl: java.lang.String getPeerHostName()>();

        $r13 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSocketImpl socketOwner>;

        $i0 = virtualinvoke $r13.<com.android.org.conscrypt.SSLSocketImpl: int getPeerPort()>();

        virtualinvoke $r11.<com.android.org.conscrypt.SSLSessionImpl: void setPeer(java.lang.String,int)>($r12, $i0);

        goto label7;

     label9:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(40, "SSL Session may not be created ");

        goto label2;
    }

    public void unwrap(byte[])
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        byte[] r1, $r16, $r51, $r67, $r71, $r73, $r74, $r77, $r78, $r81, $r92, $r93;
        int i0, i1, i2, i3, $i4, $i5, $i8, $i9, $i10, $i12;
        com.android.org.conscrypt.ProtocolVersion r3, $r64, $r87, $r100;
        java.lang.String[] r4;
        com.android.org.conscrypt.CipherSuite[] r5;
        java.lang.Exception r6, $r7;
        com.android.org.conscrypt.HandshakeIODataStream $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r28, $r40, $r45, $r47, $r55, $r96, $r98, $r102;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        com.android.org.conscrypt.Finished $r15, $r17, $r94, $r97;
        long $l6, $l7;
        com.android.org.conscrypt.SSLSessionImpl $r18, $r19, $r22, $r26, $r33, $r42, $r57, $r63, $r65, $r68, $r75, $r76, $r86, $r95, $r103, $r105;
        com.android.org.conscrypt.SSLParametersImpl $r20, $r24, $r52, $r59;
        com.android.org.conscrypt.ClientSessionContext $r21, $r23;
        com.android.org.conscrypt.ServerHello $r25, $r39, $r48, $r53, $r54, $r56, $r58, $r61, $r62, $r69, $r70, $r79, $r82, $r85, $r91;
        com.android.org.conscrypt.ServerHelloDone $r27, $r29;
        com.android.org.conscrypt.ClientHandshakeImpl$1 $r30;
        java.util.Vector $r31;
        com.android.org.conscrypt.DelegatedTask $r32;
        com.android.org.conscrypt.CertificateRequest $r34, $r36;
        com.android.org.conscrypt.CertificateMessage $r35, $r44, $r50;
        com.android.org.conscrypt.CipherSuite $r37, $r41, $r60, $r83, $r84, $r89, $r90;
        com.android.org.conscrypt.ServerKeyExchange $r38, $r43, $r49;
        com.android.org.conscrypt.ClientHello $r46, $r80, $r101;
        byte $b11, $b13;
        com.android.org.conscrypt.SSLRecordProtocol $r66;
        java.lang.Object $r72, $r104;
        java.lang.String $r88;
        java.io.IOException $r99;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        r1 := @parameter0: byte[];

        $r7 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: java.lang.Exception delegatedTaskErr>;

        if $r7 == null goto label01;

        r6 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: java.lang.Exception delegatedTaskErr>;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: java.lang.Exception delegatedTaskErr> = null;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String,java.lang.Exception)>(40, "Error in delegated task", r6);

     label01:
        $r8 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        virtualinvoke $r8.<com.android.org.conscrypt.HandshakeIODataStream: void append(byte[])>(r1);

     label02:
        $r9 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        $i4 = virtualinvoke $r9.<com.android.org.conscrypt.HandshakeIODataStream: int available()>();

        if $i4 <= 0 goto label67;

        $r11 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        virtualinvoke $r11.<com.android.org.conscrypt.HandshakeIODataStream: void mark()>();

     label03:
        $r10 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        i0 = virtualinvoke $r10.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        $r12 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        i1 = virtualinvoke $r12.<com.android.org.conscrypt.HandshakeIODataStream: int readUint24()>();

        $r13 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        $i5 = virtualinvoke $r13.<com.android.org.conscrypt.HandshakeIODataStream: int available()>();

        if $i5 >= i1 goto label68;

        $r96 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        virtualinvoke $r96.<com.android.org.conscrypt.HandshakeIODataStream: void reset()>();

     label04:
        return;

     label05:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

     label06:
        return;

     label07:
        $r99 := @caughtexception;

        $r98 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        virtualinvoke $r98.<com.android.org.conscrypt.HandshakeIODataStream: void reset()>();

        return;

     label08:
        $r102 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        virtualinvoke $r102.<com.android.org.conscrypt.HandshakeIODataStream: void removeFromMarkedPosition()>();

        $r101 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        if $r101 == null goto label09;

        $r94 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.Finished clientFinished>;

        if $r94 == null goto label02;

        $r97 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.Finished serverFinished>;

        if $r97 == null goto label02;

     label09:
        $r103 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $z15 = virtualinvoke $r103.<com.android.org.conscrypt.SSLSessionImpl: boolean isValid()>();

        if $z15 == 0 goto label11;

        $r105 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r104 = virtualinvoke $r105.<com.android.org.conscrypt.SSLSessionImpl: java.lang.Object clone()>();

        $r95 = (com.android.org.conscrypt.SSLSessionImpl) $r104;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session> = $r95;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming> = 1;

        specialinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void startSession()>();

     label10:
        goto label02;

     label11:
        specialinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void renegotiateNewSession()>();

     label12:
        goto label02;

     label13:
        $r46 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        if $r46 == null goto label14;

        $r53 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        if $r53 == null goto label16;

     label14:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

     label15:
        return;

     label16:
        $r54 = new com.android.org.conscrypt.ServerHello;

        $r55 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        specialinvoke $r54.<com.android.org.conscrypt.ServerHello: void <init>(com.android.org.conscrypt.HandshakeIODataStream,int)>($r55, i1);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello> = $r54;

        $r56 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r51 = $r56.<com.android.org.conscrypt.ServerHello: byte[] server_version>;

        r3 = staticinvoke <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion getByVersion(byte[])>($r51);

        $r52 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        r4 = virtualinvoke $r52.<com.android.org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledProtocols()>();

     label17:
        i2 = 0;

     label18:
        $i10 = lengthof r4;

        if i2 >= $i10 goto label27;

        $r88 = r4[i2];

        $r100 = staticinvoke <com.android.org.conscrypt.ProtocolVersion: com.android.org.conscrypt.ProtocolVersion getByName(java.lang.String)>($r88);

        $z14 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r100);

        if $z14 == 0 goto label69;

     label19:
        $r58 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $b11 = $r58.<com.android.org.conscrypt.ServerHello: byte compression_method>;

        if $b11 == 0 goto label20;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(40, "Bad server hello compression method");

     label20:
        $r59 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        r5 = virtualinvoke $r59.<com.android.org.conscrypt.SSLParametersImpl: com.android.org.conscrypt.CipherSuite[] getEnabledCipherSuitesMember()>();

     label21:
        i3 = 0;

     label22:
        $i9 = lengthof r5;

        if i3 >= $i9 goto label29;

        $r91 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r89 = $r91.<com.android.org.conscrypt.ServerHello: com.android.org.conscrypt.CipherSuite cipher_suite>;

        $r90 = r5[i3];

        $z13 = virtualinvoke $r89.<java.lang.Object: boolean equals(java.lang.Object)>($r90);

        if $z13 == 0 goto label70;

     label23:
        $z9 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z9 == 0 goto label25;

        $r69 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r81 = $r69.<com.android.org.conscrypt.ServerHello: byte[] session_id>;

        $i12 = lengthof $r81;

        if $i12 != 0 goto label31;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming> = 0;

     label24:
        $r82 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r93 = $r82.<com.android.org.conscrypt.ServerHello: byte[] server_version>;

        $b13 = $r93[1];

        if $b13 != 1 goto label37;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void computerReferenceVerifyDataTLS(java.lang.String)>("server finished");

     label25:
        $r57 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r57.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.ProtocolVersion protocol> = r3;

        $r66 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLRecordProtocol recordProtocol>;

        $r65 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r64 = $r65.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.ProtocolVersion protocol>;

        $r67 = $r64.<com.android.org.conscrypt.ProtocolVersion: byte[] version>;

        virtualinvoke $r66.<com.android.org.conscrypt.SSLRecordProtocol: void setVersion(byte[])>($r67);

        $r63 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r61 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r60 = $r61.<com.android.org.conscrypt.ServerHello: com.android.org.conscrypt.CipherSuite cipher_suite>;

        $r63.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite> = $r60;

        $r75 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r62 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r74 = $r62.<com.android.org.conscrypt.ServerHello: byte[] session_id>;

        $r72 = virtualinvoke $r74.<java.lang.Object: java.lang.Object clone()>();

        $r73 = (byte[]) $r72;

        $r75.<com.android.org.conscrypt.SSLSessionImpl: byte[] id> = $r73;

        $r68 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r70 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r71 = $r70.<com.android.org.conscrypt.ServerHello: byte[] random>;

        $r68.<com.android.org.conscrypt.SSLSessionImpl: byte[] serverRandom> = $r71;

     label26:
        goto label02;

     label27:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(40, "Bad server hello protocol version");

     label28:
        goto label19;

     label29:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(40, "Bad server hello cipher suite");

     label30:
        goto label23;

     label31:
        $r79 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r78 = $r79.<com.android.org.conscrypt.ServerHello: byte[] session_id>;

        $r80 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ClientHello clientHello>;

        $r77 = $r80.<com.android.org.conscrypt.ClientHello: byte[] session_id>;

        $z10 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r78, $r77);

        if $z10 != 0 goto label33;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming> = 0;

     label32:
        goto label24;

     label33:
        $r76 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r87 = $r76.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.ProtocolVersion protocol>;

        $z12 = virtualinvoke $r87.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z12 != 0 goto label35;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(40, "Bad server hello protocol version");

     label34:
        goto label24;

     label35:
        $r86 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r83 = $r86.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $r85 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        $r84 = $r85.<com.android.org.conscrypt.ServerHello: com.android.org.conscrypt.CipherSuite cipher_suite>;

        $z11 = virtualinvoke $r83.<java.lang.Object: boolean equals(java.lang.Object)>($r84);

        if $z11 != 0 goto label24;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void fatalAlert(byte,java.lang.String)>(40, "Bad server hello cipher suite");

     label36:
        goto label24;

     label37:
        $r92 = <com.android.org.conscrypt.SSLv3Constants: byte[] server>;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void computerReferenceVerifyDataSSLv3(byte[])>($r92);

     label38:
        goto label25;

     label39:
        $r48 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        if $r48 == null goto label40;

        $r49 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        if $r49 != null goto label40;

        $r50 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        if $r50 != null goto label40;

        $z8 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z8 == 0 goto label42;

     label40:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

     label41:
        return;

     label42:
        $r44 = new com.android.org.conscrypt.CertificateMessage;

        $r45 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        specialinvoke $r44.<com.android.org.conscrypt.CertificateMessage: void <init>(com.android.org.conscrypt.HandshakeIODataStream,int)>($r45, i1);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert> = $r44;

     label43:
        goto label02;

     label44:
        $r39 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        if $r39 == null goto label45;

        $r38 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange>;

        if $r38 != null goto label45;

        $z7 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z7 == 0 goto label47;

     label45:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

     label46:
        return;

     label47:
        $r43 = new com.android.org.conscrypt.ServerKeyExchange;

        $r47 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        $r42 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r41 = $r42.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $i8 = $r41.<com.android.org.conscrypt.CipherSuite: int keyExchange>;

        specialinvoke $r43.<com.android.org.conscrypt.ServerKeyExchange: void <init>(com.android.org.conscrypt.HandshakeIODataStream,int,int)>($r47, i1, $i8);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerKeyExchange serverKeyExchange> = $r43;

     label48:
        goto label02;

     label49:
        $r35 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateMessage serverCert>;

        if $r35 == null goto label50;

        $r34 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateRequest certificateRequest>;

        if $r34 != null goto label50;

        $r33 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r37 = $r33.<com.android.org.conscrypt.SSLSessionImpl: com.android.org.conscrypt.CipherSuite cipherSuite>;

        $z6 = virtualinvoke $r37.<com.android.org.conscrypt.CipherSuite: boolean isAnonymous()>();

        if $z6 != 0 goto label50;

        $z5 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z5 == 0 goto label52;

     label50:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

     label51:
        return;

     label52:
        $r36 = new com.android.org.conscrypt.CertificateRequest;

        $r40 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        specialinvoke $r36.<com.android.org.conscrypt.CertificateRequest: void <init>(com.android.org.conscrypt.HandshakeIODataStream,int)>($r40, i1);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.CertificateRequest certificateRequest> = $r36;

     label53:
        goto label02;

     label54:
        $r25 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHello serverHello>;

        if $r25 == null goto label55;

        $r29 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHelloDone serverHelloDone>;

        if $r29 != null goto label55;

        $z2 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z2 == 0 goto label57;

     label55:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

     label56:
        return;

     label57:
        $r27 = new com.android.org.conscrypt.ServerHelloDone;

        $r28 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        specialinvoke $r27.<com.android.org.conscrypt.ServerHelloDone: void <init>(com.android.org.conscrypt.HandshakeIODataStream,int)>($r28, i1);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.ServerHelloDone serverHelloDone> = $r27;

        $z3 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean nonBlocking>;

        if $z3 == 0 goto label59;

        $r31 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: java.util.Vector delegatedTasks>;

        $r32 = new com.android.org.conscrypt.DelegatedTask;

        $r30 = new com.android.org.conscrypt.ClientHandshakeImpl$1;

        specialinvoke $r30.<com.android.org.conscrypt.ClientHandshakeImpl$1: void <init>(com.android.org.conscrypt.ClientHandshakeImpl)>(r0);

        specialinvoke $r32.<com.android.org.conscrypt.DelegatedTask: void <init>(java.lang.Runnable,com.android.org.conscrypt.HandshakeProtocol)>($r30, r0);

        virtualinvoke $r31.<java.util.Vector: boolean add(java.lang.Object)>($r32);

     label58:
        return;

     label59:
        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void processServerHelloDone()>();

     label60:
        goto label02;

     label61:
        $z0 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean changeCipherSpecReceived>;

        if $z0 != 0 goto label63;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

     label62:
        return;

     label63:
        $r15 = new com.android.org.conscrypt.Finished;

        $r14 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.HandshakeIODataStream io_stream>;

        specialinvoke $r15.<com.android.org.conscrypt.Finished: void <init>(com.android.org.conscrypt.HandshakeIODataStream,int)>($r14, i1);

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.Finished serverFinished> = $r15;

        $r17 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.Finished serverFinished>;

        $r16 = virtualinvoke $r17.<com.android.org.conscrypt.Finished: byte[] getData()>();

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void verifyFinished(byte[])>($r16);

        $r18 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r18.<com.android.org.conscrypt.SSLSessionImpl: long lastAccessedTime> = $l6;

        $r19 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $r20 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r23 = virtualinvoke $r20.<com.android.org.conscrypt.SSLParametersImpl: com.android.org.conscrypt.ClientSessionContext getClientSessionContext()>();

        $r19.<com.android.org.conscrypt.SSLSessionImpl: javax.net.ssl.SSLSessionContext context> = $r23;

        $r24 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLParametersImpl parameters>;

        $r21 = virtualinvoke $r24.<com.android.org.conscrypt.SSLParametersImpl: com.android.org.conscrypt.ClientSessionContext getClientSessionContext()>();

        $r22 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        virtualinvoke $r21.<com.android.org.conscrypt.ClientSessionContext: void putSession(javax.net.ssl.SSLSession)>($r22);

        $z1 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: boolean isResuming>;

        if $z1 == 0 goto label65;

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void sendChangeCipherSpec()>();

     label64:
        goto label02;

     label65:
        $r26 = r0.<com.android.org.conscrypt.ClientHandshakeImpl: com.android.org.conscrypt.SSLSessionImpl session>;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r26.<com.android.org.conscrypt.SSLSessionImpl: long lastAccessedTime> = $l7;

        r0.<com.android.org.conscrypt.ClientHandshakeImpl: int status> = 3;

     label66:
        goto label02;

     label67:
        return;

     label68:
        lookupswitch(i0)
        {
            case 0: goto label08;
            case 2: goto label13;
            case 11: goto label39;
            case 12: goto label44;
            case 13: goto label49;
            case 14: goto label54;
            case 20: goto label61;
            default: goto label05;
        };

     label69:
        i2 = i2 + 1;

        goto label18;

     label70:
        i3 = i3 + 1;

        goto label22;

        catch java.io.IOException from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label08 to label09 with label07;
        catch java.io.IOException from label09 to label10 with label07;
        catch java.io.IOException from label11 to label12 with label07;
        catch java.io.IOException from label13 to label14 with label07;
        catch java.io.IOException from label14 to label15 with label07;
        catch java.io.IOException from label16 to label17 with label07;
        catch java.io.IOException from label18 to label19 with label07;
        catch java.io.IOException from label19 to label20 with label07;
        catch java.io.IOException from label20 to label21 with label07;
        catch java.io.IOException from label22 to label23 with label07;
        catch java.io.IOException from label23 to label24 with label07;
        catch java.io.IOException from label24 to label25 with label07;
        catch java.io.IOException from label25 to label26 with label07;
        catch java.io.IOException from label27 to label28 with label07;
        catch java.io.IOException from label29 to label30 with label07;
        catch java.io.IOException from label31 to label32 with label07;
        catch java.io.IOException from label33 to label34 with label07;
        catch java.io.IOException from label35 to label36 with label07;
        catch java.io.IOException from label37 to label38 with label07;
        catch java.io.IOException from label39 to label40 with label07;
        catch java.io.IOException from label40 to label41 with label07;
        catch java.io.IOException from label42 to label43 with label07;
        catch java.io.IOException from label44 to label45 with label07;
        catch java.io.IOException from label45 to label46 with label07;
        catch java.io.IOException from label47 to label48 with label07;
        catch java.io.IOException from label49 to label50 with label07;
        catch java.io.IOException from label50 to label51 with label07;
        catch java.io.IOException from label52 to label53 with label07;
        catch java.io.IOException from label54 to label55 with label07;
        catch java.io.IOException from label55 to label56 with label07;
        catch java.io.IOException from label57 to label58 with label07;
        catch java.io.IOException from label59 to label60 with label07;
        catch java.io.IOException from label61 to label62 with label07;
        catch java.io.IOException from label63 to label64 with label07;
        catch java.io.IOException from label65 to label66 with label07;
    }

    public void unwrapSSLv2(byte[])
    {
        com.android.org.conscrypt.ClientHandshakeImpl r0;
        byte[] r1;

        r0 := @this: com.android.org.conscrypt.ClientHandshakeImpl;

        r1 := @parameter0: byte[];

        virtualinvoke r0.<com.android.org.conscrypt.ClientHandshakeImpl: void unexpectedMessage()>();

        return;
    }
}
