public class com.android.org.chromium.media.MediaPlayerBridge extends java.lang.Object
{
    private com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask;
    private long mNativeMediaPlayerBridge;
    private android.media.MediaPlayer mPlayer;

    protected void <init>()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void <init>(long)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        long l0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.media.MediaPlayerBridge: long mNativeMediaPlayerBridge> = l0;

        return;
    }

    static long access$000(com.android.org.chromium.media.MediaPlayerBridge)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.media.MediaPlayerBridge;

        $l0 = r0.<com.android.org.chromium.media.MediaPlayerBridge: long mNativeMediaPlayerBridge>;

        return $l0;
    }

    static void access$100(com.android.org.chromium.media.MediaPlayerBridge, long, boolean)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        long l0;
        boolean z0;

        r0 := @parameter0: com.android.org.chromium.media.MediaPlayerBridge;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: void nativeOnDidSetDataUriDataSource(long,boolean)>(l0, z0);

        return;
    }

    private static com.android.org.chromium.media.MediaPlayerBridge create(long)
    {
        long l0;
        com.android.org.chromium.media.MediaPlayerBridge $r0;

        l0 := @parameter0: long;

        $r0 = new com.android.org.chromium.media.MediaPlayerBridge;

        specialinvoke $r0.<com.android.org.chromium.media.MediaPlayerBridge: void <init>(long)>(l0);

        return $r0;
    }

    private native void nativeOnDidSetDataUriDataSource(long, boolean);

    protected void destroy()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask $r1, $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        virtualinvoke $r2.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: boolean cancel(boolean)>(1);

        r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask> = null;

     label1:
        r0.<com.android.org.chromium.media.MediaPlayerBridge: long mNativeMediaPlayerBridge> = 0L;

        return;
    }

    protected com.android.org.chromium.media.MediaPlayerBridge$AllowedOperations getAllowedOperations()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, $z14, $z15, $z16;
        android.media.MediaPlayer r1;
        java.lang.NoSuchFieldException r2, r3, r22, r30, $r80, $r91, $r94;
        java.lang.IllegalAccessException r4, r5, r21, r27, $r73, $r78, $r93;
        java.lang.reflect.InvocationTargetException r6, r7, r24, r28, $r85, $r92, $r95;
        java.lang.NoSuchMethodException r8, r9, r23, r25, $r72, $r84, $r86;
        java.lang.Class r10, r16, $r34, $r35, $r38, $r41;
        java.lang.reflect.Method r11, r18, r19;
        java.lang.Class[] r12, r15, r17;
        java.lang.Object r13, $r42, $r45, $r48, $r52, $r53, $r57, $r58, $r62, $r67;
        java.lang.Object[] r14, r20, r26, r29, r31, r32, r33;
        int i0, i1, i2;
        java.lang.Boolean $r36, $r37, $r50, $r56, $r59, $r61, $r63, $r65;
        java.lang.reflect.Field $r39, $r44, $r47;
        com.android.org.chromium.media.MediaPlayerBridge$AllowedOperations $r40;
        java.lang.Integer $r43, $r46, $r49, $r51, $r54, $r55, $r60, $r64, $r66;
        java.lang.String $r68, $r74, $r82, $r90;
        java.lang.StringBuilder $r69, $r70, $r71, $r75, $r76, $r77, $r79, $r81, $r83, $r87, $r88, $r89;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        z0 = 1;

        r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

     label01:
        r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r12 = newarray (java.lang.Class)[2];

        $r35 = <java.lang.Boolean: java.lang.Class TYPE>;

        r12[0] = $r35;

        $r34 = <java.lang.Boolean: java.lang.Class TYPE>;

        r12[1] = $r34;

        r11 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getMetadata", r12);

        virtualinvoke r11.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        r14 = newarray (java.lang.Object)[2];

        $r37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r14[0] = $r37;

        $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r14[1] = $r36;

        r13 = virtualinvoke r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, r14);

     label02:
        if r13 == null goto label34;

     label03:
        r16 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        r15 = newarray (java.lang.Class)[1];

        $r41 = <java.lang.Integer: java.lang.Class TYPE>;

        r15[0] = $r41;

        r18 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("has", r15);

        r17 = newarray (java.lang.Class)[1];

        $r38 = <java.lang.Integer: java.lang.Class TYPE>;

        r17[0] = $r38;

        r19 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getBoolean", r17);

        $r39 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("PAUSE_AVAILABLE");

        $r45 = virtualinvoke $r39.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r46 = (java.lang.Integer) $r45;

        i0 = virtualinvoke $r46.<java.lang.Integer: int intValue()>();

        $r47 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("SEEK_FORWARD_AVAILABLE");

        $r42 = virtualinvoke $r47.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r43 = (java.lang.Integer) $r42;

        i2 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        $r44 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("SEEK_BACKWARD_AVAILABLE");

        $r52 = virtualinvoke $r44.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r51 = (java.lang.Integer) $r52;

        i1 = virtualinvoke $r51.<java.lang.Integer: int intValue()>();

        virtualinvoke r18.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        virtualinvoke r19.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        r20 = newarray (java.lang.Object)[1];

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r20[0] = $r49;

        $r48 = virtualinvoke r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r13, r20);

        $r50 = (java.lang.Boolean) $r48;

        $z14 = virtualinvoke $r50.<java.lang.Boolean: boolean booleanValue()>();

        if $z14 == 0 goto label05;

        r33 = newarray (java.lang.Object)[1];

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r33[0] = $r64;

        $r62 = virtualinvoke r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r13, r33);

        $r63 = (java.lang.Boolean) $r62;

        z12 = virtualinvoke $r63.<java.lang.Boolean: boolean booleanValue()>();

     label04:
        if z12 == 0 goto label15;

     label05:
        z3 = z0;

     label06:
        r26 = newarray (java.lang.Object)[1];

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r26[0] = $r55;

        $r57 = virtualinvoke r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r13, r26);

        $r56 = (java.lang.Boolean) $r57;

        $z15 = virtualinvoke $r56.<java.lang.Boolean: boolean booleanValue()>();

        if $z15 == 0 goto label08;

        r31 = newarray (java.lang.Object)[1];

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r31[0] = $r66;

        $r67 = virtualinvoke r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r13, r31);

        $r65 = (java.lang.Boolean) $r67;

        z13 = virtualinvoke $r65.<java.lang.Boolean: boolean booleanValue()>();

     label07:
        if z13 == 0 goto label16;

     label08:
        z5 = z0;

     label09:
        r29 = newarray (java.lang.Object)[1];

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r29[0] = $r54;

        $r53 = virtualinvoke r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r13, r29);

        $r61 = (java.lang.Boolean) $r53;

        $z16 = virtualinvoke $r61.<java.lang.Boolean: boolean booleanValue()>();

        if $z16 == 0 goto label11;

        r32 = newarray (java.lang.Object)[1];

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r32[0] = $r60;

        $r58 = virtualinvoke r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r13, r32);

        $r59 = (java.lang.Boolean) $r58;

        z10 = virtualinvoke $r59.<java.lang.Boolean: boolean booleanValue()>();

     label10:
        if z10 == 0 goto label17;

     label11:
        z8 = z0;

     label12:
        z0 = z5;

        z1 = z3;

     label13:
        z11 = z8;

        z2 = z0;

        z0 = z11;

     label14:
        $r40 = new com.android.org.chromium.media.MediaPlayerBridge$AllowedOperations;

        specialinvoke $r40.<com.android.org.chromium.media.MediaPlayerBridge$AllowedOperations: void <init>(boolean,boolean,boolean)>(z1, z2, z0);

        return $r40;

     label15:
        z3 = 0;

        goto label06;

     label16:
        z5 = 0;

        goto label09;

     label17:
        z8 = 0;

        goto label12;

     label18:
        $r72 := @caughtexception;

        r8 = $r72;

        r9 = r8;

        z1 = z0;

        z2 = z0;

     label19:
        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find getMetadata() method: ");

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r68);

        goto label14;

     label20:
        $r92 := @caughtexception;

        r6 = $r92;

        r7 = r6;

        z1 = z0;

        z2 = z0;

     label21:
        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot invoke MediaPlayer.getMetadata() method: ");

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r90);

        goto label14;

     label22:
        $r78 := @caughtexception;

        r4 = $r78;

        r5 = r4;

        z1 = z0;

        z2 = z0;

     label23:
        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot access metadata: ");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r74);

        goto label14;

     label24:
        $r91 := @caughtexception;

        r2 = $r91;

        r3 = r2;

        z1 = z0;

        z2 = z0;

     label25:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find matching fields in Metadata class: ");

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r82);

        goto label14;

     label26:
        $r80 := @caughtexception;

        r22 = $r80;

        r3 = r22;

        z1 = z3;

        z2 = z0;

        goto label25;

     label27:
        $r94 := @caughtexception;

        r30 = $r94;

        z1 = z3;

        z9 = z5;

        r3 = r30;

        z2 = z9;

        goto label25;

     label28:
        $r93 := @caughtexception;

        r21 = $r93;

        r5 = r21;

        z1 = z3;

        z2 = z0;

        goto label23;

     label29:
        $r73 := @caughtexception;

        r27 = $r73;

        z1 = z3;

        z6 = z5;

        r5 = r27;

        z2 = z6;

        goto label23;

     label30:
        $r95 := @caughtexception;

        r24 = $r95;

        r7 = r24;

        z1 = z3;

        z2 = z0;

        goto label21;

     label31:
        $r85 := @caughtexception;

        r28 = $r85;

        z1 = z3;

        z7 = z5;

        r7 = r28;

        z2 = z7;

        goto label21;

     label32:
        $r86 := @caughtexception;

        r23 = $r86;

        r9 = r23;

        z1 = z3;

        z2 = z0;

        goto label19;

     label33:
        $r84 := @caughtexception;

        r25 = $r84;

        z1 = z3;

        z4 = z5;

        r9 = r25;

        z2 = z4;

        goto label19;

     label34:
        z8 = z0;

        z1 = z0;

        goto label13;

        catch java.lang.NoSuchMethodException from label01 to label02 with label18;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label20;
        catch java.lang.IllegalAccessException from label01 to label02 with label22;
        catch java.lang.NoSuchFieldException from label01 to label02 with label24;
        catch java.lang.NoSuchMethodException from label03 to label04 with label18;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label20;
        catch java.lang.IllegalAccessException from label03 to label04 with label22;
        catch java.lang.NoSuchFieldException from label03 to label04 with label24;
        catch java.lang.NoSuchMethodException from label06 to label07 with label32;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label30;
        catch java.lang.IllegalAccessException from label06 to label07 with label28;
        catch java.lang.NoSuchFieldException from label06 to label07 with label26;
        catch java.lang.NoSuchMethodException from label09 to label10 with label33;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label31;
        catch java.lang.IllegalAccessException from label09 to label10 with label29;
        catch java.lang.NoSuchFieldException from label09 to label10 with label27;
    }

    protected int getCurrentPosition()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getCurrentPosition()>();

        return $i0;
    }

    protected int getDuration()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getDuration()>();

        return $i0;
    }

    protected android.media.MediaPlayer getLocalPlayer()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1, $r2, $r3;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer mPlayer>;

        if $r1 != null goto label1;

        $r3 = new android.media.MediaPlayer;

        specialinvoke $r3.<android.media.MediaPlayer: void <init>()>();

        r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer mPlayer> = $r3;

     label1:
        $r2 = r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer mPlayer>;

        return $r2;
    }

    protected int getVideoHeight()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getVideoHeight()>();

        return $i0;
    }

    protected int getVideoWidth()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getVideoWidth()>();

        return $i0;
    }

    protected boolean isPlaying()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $z0 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        return $z0;
    }

    protected void pause()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r1.<android.media.MediaPlayer: void pause()>();

        return;
    }

    protected boolean prepareAsync()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        java.lang.IllegalStateException r1, $r3;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

     label1:
        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void prepareAsync()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaPlayerBridge", "Unable to prepare MediaPlayer.", r1);

        return 0;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    protected void release()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r1.<android.media.MediaPlayer: void release()>();

        return;
    }

    protected void seekTo(int) throws java.lang.IllegalStateException
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        int i0;
        android.media.MediaPlayer $r1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r1.<android.media.MediaPlayer: void seekTo(int)>(i0);

        return;
    }

    protected boolean setDataSource(android.content.Context, java.lang.String, java.lang.String, boolean)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.content.Context r1;
        java.lang.String r2, r3;
        boolean z0, $z1;
        android.net.Uri r4;
        java.util.HashMap r5, $r7;
        android.media.MediaPlayer $r8;
        java.lang.Exception $r11;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r5 = $r7;

        if z0 == 0 goto label1;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("x-hide-urls-from-log", "true");

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie", r3);

     label2:
        $r8 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r8.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>(r1, r4, r5);

     label3:
        return 1;

     label4:
        $r11 := @caughtexception;

        return 0;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected boolean setDataUriDataSource(android.content.Context, java.lang.String)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.content.Context r1;
        java.lang.String r2, r3, r4, $r7, $r8, $r9;
        int i0, $i1, $i2;
        java.lang.String[] r5;
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask $r6, $r10, $r11, $r13;
        boolean $z0, $z1;
        java.lang.Void[] $r12;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        if $r6 == null goto label1;

        $r13 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        virtualinvoke $r13.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: boolean cancel(boolean)>(1);

        r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask> = null;

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("data:");

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(44);

        if i0 == -1 goto label2;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(5);

        r5 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i2 = lengthof r5;

        if $i2 != 2 goto label2;

        $r8 = "base64";

        $r9 = r5[1];

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label2;

        $r10 = new com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask;

        specialinvoke $r10.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: void <init>(com.android.org.chromium.media.MediaPlayerBridge,android.content.Context,java.lang.String)>(r0, r1, r4);

        r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask> = $r10;

        $r11 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        $r12 = newarray (java.lang.Void)[0];

        virtualinvoke $r11.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: android.os.AsyncTask execute(java.lang.Object[])>($r12);

        return 1;
    }

    protected void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnBufferingUpdateListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnBufferingUpdateListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>(r1);

        return;
    }

    protected void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnCompletionListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnCompletionListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>(r1);

        return;
    }

    protected void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnErrorListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnErrorListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>(r1);

        return;
    }

    protected void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnPreparedListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnPreparedListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>(r1);

        return;
    }

    protected void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnSeekCompleteListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnSeekCompleteListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)>(r1);

        return;
    }

    protected void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnVideoSizeChangedListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnVideoSizeChangedListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>(r1);

        return;
    }

    protected void setSurface(android.view.Surface)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.view.Surface r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.view.Surface;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setSurface(android.view.Surface)>(r1);

        return;
    }

    protected void setVolume(double)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        double d0;
        android.media.MediaPlayer $r1;
        float $f0, $f1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $f1 = (float) d0;

        $f0 = (float) d0;

        virtualinvoke $r1.<android.media.MediaPlayer: void setVolume(float,float)>($f1, $f0);

        return;
    }

    protected void start()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r1.<android.media.MediaPlayer: void start()>();

        return;
    }
}
