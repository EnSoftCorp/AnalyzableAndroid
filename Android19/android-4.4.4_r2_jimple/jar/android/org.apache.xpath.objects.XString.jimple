public class org.apache.xpath.objects.XString extends org.apache.xpath.objects.XObject implements org.apache.xml.utils.XMLString
{
    public static final org.apache.xpath.objects.XString EMPTYSTRING;
    static final long serialVersionUID;

    static void <clinit>()
    {
        org.apache.xpath.objects.XString $r0;

        <org.apache.xpath.objects.XString: long serialVersionUID> = 2020470518395094525L;

        $r0 = new org.apache.xpath.objects.XString;

        specialinvoke $r0.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>("");

        <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING> = $r0;

        return;
    }

    protected void <init>(java.lang.Object)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.Object r1;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>(java.lang.Object)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>(java.lang.Object)>(r1);

        return;
    }

    private static boolean isSpace(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(char)>(c0);

        return $z0;
    }

    public boolean bool()
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.XPathVisitor r2;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.XPathVisitor;

        virtualinvoke r2.<org.apache.xpath.XPathVisitor: boolean visitStringLiteral(org.apache.xpath.ExpressionOwner,org.apache.xpath.objects.XString)>(r1, r0);

        return;
    }

    public char charAt(int)
    {
        org.apache.xpath.objects.XString r0;
        int i0;
        java.lang.String $r1;
        char $c1;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        return $c1;
    }

    public int compareTo(org.apache.xml.utils.XMLString)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        int i0, i1, i2, i3, i4, i5, i6, $i9, $i10;
        char c7, c8;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        i0 = virtualinvoke r0.<org.apache.xpath.objects.XString: int length()>();

        i1 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: int length()>();

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i3 = 0;

        i4 = 0;

        i5 = i2;

     label1:
        i6 = i5 - 1;

        if i5 == 0 goto label3;

        c7 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i3);

        c8 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: char charAt(int)>(i4);

        if c7 == c8 goto label2;

        $i10 = c7 - c8;

        return $i10;

     label2:
        i3 = i3 + 1;

        i4 = i4 + 1;

        i5 = i6;

        goto label1;

     label3:
        $i9 = i0 - i1;

        return $i9;
    }

    public int compareToIgnoreCase(org.apache.xml.utils.XMLString)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        org.apache.xml.utils.WrappedRuntimeException $r2;
        java.lang.NoSuchMethodException $r3;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $r2 = new org.apache.xml.utils.WrappedRuntimeException;

        $r3 = new java.lang.NoSuchMethodException;

        specialinvoke $r3.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>("Java 1.2 method, not yet implemented");

        specialinvoke $r2.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r3);

        throw $r2;
    }

    public org.apache.xml.utils.XMLString concat(java.lang.String)
    {
        org.apache.xpath.objects.XString r0, $r2;
        java.lang.String r1, $r3, $r4;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.xpath.objects.XString;

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>(r1);

        specialinvoke $r2.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r4);

        return $r2;
    }

    public void dispatchAsComment(org.xml.sax.ext.LexicalHandler) throws org.xml.sax.SAXException
    {
        org.apache.xpath.objects.XString r0;
        org.xml.sax.ext.LexicalHandler r1;
        java.lang.String r2;
        char[] $r3;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.xml.sax.ext.LexicalHandler;

        r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        interfaceinvoke r1.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>($r3, 0, $i0);

        return;
    }

    public void dispatchCharactersEvents(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        org.apache.xpath.objects.XString r0;
        org.xml.sax.ContentHandler r1;
        java.lang.String r2;
        char[] $r3;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        interfaceinvoke r1.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r3, 0, $i0);

        return;
    }

    public boolean endsWith(java.lang.String)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = r1 instanceof org.apache.xpath.objects.XNodeSet;

        if $z0 == 0 goto label2;

        $z4 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z4;

     label2:
        $z1 = r1 instanceof org.apache.xpath.objects.XNumber;

        if $z1 == 0 goto label3;

        $z3 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z3;

     label3:
        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z2;
    }

    public boolean equals(java.lang.String)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean equals(org.apache.xml.utils.XMLString)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        if r1 == null goto label2;

        $z0 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: boolean hasString()>();

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $z2 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: boolean equals(java.lang.String)>($r4);

        return $z2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label2:
        return 0;
    }

    public boolean equals(org.apache.xpath.objects.XObject)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xpath.objects.XObject r1;
        boolean z0, $z1, $z2, $z3, z4;
        int i0, i2;
        javax.xml.transform.TransformerException r2, $r5;
        double d0, d1;
        org.apache.xml.utils.XMLString $r3, $r4;
        byte $b1;
        org.apache.xml.utils.WrappedRuntimeException $r6;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xpath.objects.XObject;

        z0 = 1;

        i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int getType()>();

        if 4 != i0 goto label02;

     label01:
        $z3 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>(r0);

        return $z3;

     label02:
        z4 = z0;

        i2 = (int) z4;

        if i2 != i0 goto label05;

     label03:
        $z2 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean bool()>();

        $z1 = virtualinvoke r0.<org.apache.xpath.objects.XString: boolean bool()>();

        if $z2 == $z1 goto label10;

     label04:
        return 0;

     label05:
        if 2 != i0 goto label09;

     label06:
        d0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: double num()>();

        d1 = virtualinvoke r0.<org.apache.xpath.objects.XString: double num()>();

     label07:
        $b1 = d0 cmpl d1;

        if $b1 == 0 goto label10;

        return 0;

     label08:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r6.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r2);

        throw $r6;

     label09:
        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XString: org.apache.xml.utils.XMLString xstr()>();

        $r4 = virtualinvoke r1.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        z0 = interfaceinvoke $r3.<org.apache.xml.utils.XMLString: boolean equals(org.apache.xml.utils.XMLString)>($r4);

     label10:
        return z0;

        catch javax.xml.transform.TransformerException from label01 to label02 with label08;
        catch javax.xml.transform.TransformerException from label03 to label04 with label08;
        catch javax.xml.transform.TransformerException from label06 to label07 with label08;
    }

    public boolean equalsIgnoreCase(java.lang.String)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        return $z0;
    }

    public org.apache.xml.utils.XMLString fixWhiteSpace(boolean, boolean, boolean)
    {
        org.apache.xml.utils.XMLString r0;
        boolean z0, z1, z2, z3, z4, $z5, $z6;
        int i0, i1, i2, i3, i4, i5, i9, $i10, $i11, $i14;
        char[] r1;
        org.apache.xml.utils.XMLStringFactory r2;
        char c6, c7, c8, $c12, $c13;
        java.lang.String r4;
        org.apache.xpath.objects.XString r5, r6;

        r0 := @this: org.apache.xpath.objects.XString;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r5 = (org.apache.xpath.objects.XString) r0;

        i0 = virtualinvoke r5.<org.apache.xpath.objects.XString: int length()>();

        r1 = newarray (char)[i0];

        r6 = (org.apache.xpath.objects.XString) r0;

        virtualinvoke r6.<org.apache.xpath.objects.XString: void getChars(int,int,char[],int)>(0, i0, r1, 0);

        z3 = 0;

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $c13 = r1[i1];

        $z6 = staticinvoke <org.apache.xpath.objects.XString: boolean isSpace(char)>($c13);

        if $z6 == 0 goto label06;

     label02:
        i2 = i1;

        z4 = 0;

        i3 = i2;

     label03:
        if i1 >= i0 goto label10;

        c7 = r1[i1];

        $z5 = staticinvoke <org.apache.xpath.objects.XString: boolean isSpace(char)>(c7);

        if $z5 == 0 goto label09;

        if z4 != 0 goto label08;

        if 32 == c7 goto label04;

        z3 = 1;

     label04:
        i9 = i3 + 1;

        r1[i3] = 32;

        if z2 == 0 goto label07;

        if i1 == 0 goto label07;

        $i14 = i1 - 1;

        c8 = r1[$i14];

        if c8 == 46 goto label05;

        if c8 == 33 goto label05;

        if c8 == 63 goto label05;

        z4 = 1;

     label05:
        i1 = i1 + 1;

        i3 = i9;

        goto label03;

     label06:
        i1 = i1 + 1;

        goto label01;

     label07:
        z4 = 1;

        goto label05;

     label08:
        z3 = 1;

        z4 = 1;

        i9 = i3;

        goto label05;

     label09:
        i9 = i3 + 1;

        r1[i3] = c7;

        z4 = 0;

        goto label05;

     label10:
        if z1 == 0 goto label14;

        if 1 > i3 goto label14;

        $i11 = i3 - 1;

        $c12 = r1[$i11];

        if 32 != $c12 goto label14;

        z3 = 1;

        i4 = i3 - 1;

     label11:
        i5 = 0;

        if z0 == 0 goto label12;

        i5 = 0;

        if i4 <= 0 goto label12;

        c6 = r1[0];

        i5 = 0;

        if 32 != c6 goto label12;

        z3 = 1;

        i5 = 0 + 1;

     label12:
        r2 = staticinvoke <org.apache.xpath.objects.XMLStringFactoryImpl: org.apache.xml.utils.XMLStringFactory getFactory()>();

        if z3 == 0 goto label13;

        r4 = new java.lang.String;

        $i10 = i4 - i5;

        specialinvoke r4.<java.lang.String: void <init>(char[],int,int)>(r1, i5, $i10);

        r0 = virtualinvoke r2.<org.apache.xml.utils.XMLStringFactory: org.apache.xml.utils.XMLString newstr(java.lang.String)>(r4);

     label13:
        return r0;

     label14:
        i4 = i3;

        goto label11;
    }

    public void getChars(int, int, char[], int)
    {
        org.apache.xpath.objects.XString r0;
        int i0, i1, i2;
        char[] r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        virtualinvoke $r2.<java.lang.String: void getChars(int,int,char[],int)>(i0, i1, r1, i2);

        return;
    }

    public int getType()
    {
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        return 3;
    }

    public java.lang.String getTypeString()
    {
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        return "#STRING";
    }

    public boolean hasString()
    {
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        return 1;
    }

    public int hashCode()
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public int indexOf(int)
    {
        org.apache.xpath.objects.XString r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(i0);

        return $i1;
    }

    public int indexOf(int, int)
    {
        org.apache.xpath.objects.XString r0;
        int i0, i1, $i2;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(i0, i1);

        return $i2;
    }

    public int indexOf(java.lang.String)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(r1);

        return $i0;
    }

    public int indexOf(java.lang.String, int)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1, $r2;
        int i0, $i1;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public int indexOf(org.apache.xml.utils.XMLString)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        java.lang.String $r2, $r3;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r3);

        return $i0;
    }

    public int lastIndexOf(int)
    {
        org.apache.xpath.objects.XString r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(i0);

        return $i1;
    }

    public int lastIndexOf(int, int)
    {
        org.apache.xpath.objects.XString r0;
        int i0, i1, $i2;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int,int)>(i0, i1);

        return $i2;
    }

    public int lastIndexOf(java.lang.String)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>(r1);

        return $i0;
    }

    public int lastIndexOf(java.lang.String, int)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1, $r2;
        int i0, $i1;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public int length()
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public double num()
    {
        org.apache.xpath.objects.XString r0;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XString;

        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XString: double toDouble()>();

        return $d0;
    }

    public int rtf(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xml.dtm.DTM r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM createDocumentFragment()>();

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        interfaceinvoke r2.<org.apache.xml.dtm.DTM: void appendTextChild(java.lang.String)>($r3);

        $i0 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getDocument()>();

        return $i0;
    }

    public boolean startsWith(java.lang.String)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XString: boolean startsWith(java.lang.String,int)>(r1, 0);

        return $z0;
    }

    public boolean startsWith(java.lang.String, int)
    {
        org.apache.xpath.objects.XString r0;
        java.lang.String r1, $r2;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    public boolean startsWith(org.apache.xml.utils.XMLString)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XString: boolean startsWith(org.apache.xml.utils.XMLString,int)>(r1, 0);

        return $z0;
    }

    public boolean startsWith(org.apache.xml.utils.XMLString, int)
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        int i0, i1, i2, i3, i4, i5;
        char $c6, $c7;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: org.apache.xml.utils.XMLString;

        i0 := @parameter1: int;

        i1 = i0;

        i2 = virtualinvoke r0.<org.apache.xpath.objects.XString: int length()>();

        i3 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: int length()>();

        if i0 < 0 goto label1;

        i4 = i2 - i3;

        i5 = 0;

        if i0 <= i4 goto label3;

     label1:
        return 0;

     label2:
        i1 = i1 + 1;

        i5 = i5 + 1;

     label3:
        i3 = i3 + -1;

        if i3 < 0 goto label4;

        $c6 = virtualinvoke r0.<org.apache.xpath.objects.XString: char charAt(int)>(i1);

        $c7 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: char charAt(int)>(i5);

        if $c6 == $c7 goto label2;

        return 0;

     label4:
        return 1;
    }

    public java.lang.String str()
    {
        org.apache.xpath.objects.XString r0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = r0.<org.apache.xpath.objects.XString: java.lang.Object m_obj>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xpath.objects.XString: java.lang.Object m_obj>;

        $r3 = (java.lang.String) $r2;

        return $r3;

     label1:
        return "";
    }

    public org.apache.xml.utils.XMLString substring(int)
    {
        org.apache.xpath.objects.XString r0, $r1;
        int i0;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        $r1 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(i0);

        specialinvoke $r1.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r1;
    }

    public org.apache.xml.utils.XMLString substring(int, int)
    {
        org.apache.xpath.objects.XString r0, $r1;
        int i0, i1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xpath.objects.XString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        specialinvoke $r1.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r1;
    }

    public double toDouble()
    {
        org.apache.xpath.objects.XString r0;
        org.apache.xml.utils.XMLString r1;
        double d0, d1;
        int i0, $i2;
        char c1;
        java.lang.String $r3;
        java.lang.NumberFormatException $r4;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 = virtualinvoke r0.<org.apache.xpath.objects.XString: org.apache.xml.utils.XMLString trim()>();

        d0 = #NaN;

        i0 = 0;

     label1:
        $i2 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: int length()>();

        if i0 >= $i2 goto label4;

        c1 = interfaceinvoke r1.<org.apache.xml.utils.XMLString: char charAt(int)>(i0);

        if c1 == 45 goto label3;

        if c1 == 46 goto label3;

        if c1 < 48 goto label2;

        if c1 <= 57 goto label3;

     label2:
        return d0;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label5:
        d0 = d1;

     label6:
        return d0;

     label7:
        $r4 := @caughtexception;

        goto label6;

        catch java.lang.NumberFormatException from label4 to label5 with label7;
    }

    public org.apache.xml.utils.XMLString toLowerCase()
    {
        org.apache.xpath.objects.XString r0, $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        specialinvoke $r1.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r1;
    }

    public org.apache.xml.utils.XMLString toLowerCase(java.util.Locale)
    {
        org.apache.xpath.objects.XString r0, $r2;
        java.util.Locale r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.util.Locale;

        $r2 = new org.apache.xpath.objects.XString;

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r1);

        specialinvoke $r2.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r4);

        return $r2;
    }

    public org.apache.xml.utils.XMLString toUpperCase()
    {
        org.apache.xpath.objects.XString r0, $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        specialinvoke $r1.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r1;
    }

    public org.apache.xml.utils.XMLString toUpperCase(java.util.Locale)
    {
        org.apache.xpath.objects.XString r0, $r2;
        java.util.Locale r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xpath.objects.XString;

        r1 := @parameter0: java.util.Locale;

        $r2 = new org.apache.xpath.objects.XString;

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(r1);

        specialinvoke $r2.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r4);

        return $r2;
    }

    public org.apache.xml.utils.XMLString trim()
    {
        org.apache.xpath.objects.XString r0, $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xpath.objects.XString;

        $r1 = new org.apache.xpath.objects.XString;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XString: java.lang.String str()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        specialinvoke $r1.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r3);

        return $r1;
    }

    public org.apache.xml.utils.XMLString xstr()
    {
        org.apache.xpath.objects.XString r0;

        r0 := @this: org.apache.xpath.objects.XString;

        return r0;
    }
}
