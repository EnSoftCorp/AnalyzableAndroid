public final class com.android.okhttp.internal.spdy.Ping extends java.lang.Object
{
    private final java.util.concurrent.CountDownLatch latch;
    private long received;
    private long sent;

    void <init>()
    {
        com.android.okhttp.internal.spdy.Ping r0;
        java.util.concurrent.CountDownLatch $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Ping;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<com.android.okhttp.internal.spdy.Ping: java.util.concurrent.CountDownLatch latch> = $r1;

        r0.<com.android.okhttp.internal.spdy.Ping: long sent> = -1L;

        r0.<com.android.okhttp.internal.spdy.Ping: long received> = -1L;

        return;
    }

    void cancel()
    {
        com.android.okhttp.internal.spdy.Ping r0;
        long $l0, $l2, $l4, $l5;
        byte $b1, $b3;
        java.lang.IllegalStateException $r1;
        java.util.concurrent.CountDownLatch $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Ping;

        $l0 = r0.<com.android.okhttp.internal.spdy.Ping: long received>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l2 = r0.<com.android.okhttp.internal.spdy.Ping: long sent>;

        $b3 = $l2 cmp -1L;

        if $b3 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label2:
        $l4 = r0.<com.android.okhttp.internal.spdy.Ping: long sent>;

        $l5 = $l4 - 1L;

        r0.<com.android.okhttp.internal.spdy.Ping: long received> = $l5;

        $r2 = r0.<com.android.okhttp.internal.spdy.Ping: java.util.concurrent.CountDownLatch latch>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

    void receive()
    {
        com.android.okhttp.internal.spdy.Ping r0;
        long $l0, $l2, $l4;
        byte $b1, $b3;
        java.lang.IllegalStateException $r1;
        java.util.concurrent.CountDownLatch $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Ping;

        $l0 = r0.<com.android.okhttp.internal.spdy.Ping: long received>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $l2 = r0.<com.android.okhttp.internal.spdy.Ping: long sent>;

        $b3 = $l2 cmp -1L;

        if $b3 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label2:
        $l4 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<com.android.okhttp.internal.spdy.Ping: long received> = $l4;

        $r2 = r0.<com.android.okhttp.internal.spdy.Ping: java.util.concurrent.CountDownLatch latch>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

    public long roundTripTime() throws java.lang.InterruptedException
    {
        com.android.okhttp.internal.spdy.Ping r0;
        java.util.concurrent.CountDownLatch $r1;
        long $l0, $l1, $l2;

        r0 := @this: com.android.okhttp.internal.spdy.Ping;

        $r1 = r0.<com.android.okhttp.internal.spdy.Ping: java.util.concurrent.CountDownLatch latch>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void await()>();

        $l1 = r0.<com.android.okhttp.internal.spdy.Ping: long received>;

        $l0 = r0.<com.android.okhttp.internal.spdy.Ping: long sent>;

        $l2 = $l1 - $l0;

        return $l2;
    }

    public long roundTripTime(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.android.okhttp.internal.spdy.Ping r0;
        long l0, $l1, $l2, $l3;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.CountDownLatch $r2;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.spdy.Ping;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.android.okhttp.internal.spdy.Ping: java.util.concurrent.CountDownLatch latch>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, r1);

        if $z0 == 0 goto label1;

        $l2 = r0.<com.android.okhttp.internal.spdy.Ping: long received>;

        $l1 = r0.<com.android.okhttp.internal.spdy.Ping: long sent>;

        $l3 = $l2 - $l1;

        return $l3;

     label1:
        return -2L;
    }

    void send()
    {
        com.android.okhttp.internal.spdy.Ping r0;
        long $l0, $l2;
        byte $b1;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Ping;

        $l0 = r0.<com.android.okhttp.internal.spdy.Ping: long sent>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<com.android.okhttp.internal.spdy.Ping: long sent> = $l2;

        return;
    }
}
