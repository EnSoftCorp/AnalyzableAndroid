public final class com.android.server.am.ActivityStackSupervisor extends java.lang.Object
{
    static final boolean DEBUG;
    static final boolean DEBUG_ADD_REMOVE;
    static final boolean DEBUG_APP;
    static final boolean DEBUG_IDLE;
    static final boolean DEBUG_SAVED_STATE;
    static final boolean DEBUG_STATES;
    public static final int HOME_STACK_ID;
    static final int IDLE_NOW_MSG;
    static final int IDLE_TIMEOUT;
    static final int IDLE_TIMEOUT_MSG;
    static final int LAUNCH_TIMEOUT;
    static final int LAUNCH_TIMEOUT_MSG;
    static final int RESUME_TOP_ACTIVITY_MSG;
    static final int SLEEP_TIMEOUT;
    static final int SLEEP_TIMEOUT_MSG;
    private static final int STACK_STATE_HOME_IN_BACK;
    private static final int STACK_STATE_HOME_IN_FRONT;
    private static final int STACK_STATE_HOME_TO_BACK;
    private static final int STACK_STATE_HOME_TO_FRONT;
    static final boolean VALIDATE_WAKE_LOCK_CALLER;
    final java.util.ArrayList mCancelledThumbnails;
    final android.content.Context mContext;
    private int mCurTaskId;
    private int mCurrentUser;
    boolean mDismissKeyguardOnNextActivity;
    final java.util.ArrayList mFinishingActivities;
    private com.android.server.am.ActivityStack mFocusedStack;
    final android.os.PowerManager$WakeLock mGoingToSleep;
    final java.util.ArrayList mGoingToSleepActivities;
    final com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler;
    private com.android.server.am.ActivityStack mHomeStack;
    private int mLastStackId;
    final android.os.PowerManager$WakeLock mLaunchingActivity;
    final android.os.Looper mLooper;
    final com.android.server.am.ActivityManagerService mService;
    boolean mSleepTimeout;
    private int mStackState;
    private java.util.ArrayList mStacks;
    final java.util.ArrayList mStartingUsers;
    final java.util.ArrayList mStoppingActivities;
    boolean mUserLeaving;
    android.util.SparseIntArray mUserStackInFront;
    final java.util.ArrayList mWaitingActivityLaunched;
    final java.util.ArrayList mWaitingActivityVisible;
    final java.util.ArrayList mWaitingVisibleActivities;
    com.android.server.wm.WindowManagerService mWindowManager;

    public void <init>(com.android.server.am.ActivityManagerService, android.content.Context, android.os.Looper)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityManagerService r1;
        android.content.Context r2;
        android.os.Looper r3;
        android.os.PowerManager r4;
        java.util.ArrayList $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        android.util.SparseIntArray $r14;
        java.lang.Object $r15;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r16;
        android.os.PowerManager$WakeLock $r17, $r18, $r19;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mDismissKeyguardOnNextActivity> = 0;

        r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId> = 0;

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId> = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks> = $r5;

        r0.<com.android.server.am.ActivityStackSupervisor: int mStackState> = 0;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityVisible> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mCancelledThumbnails> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers> = $r13;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mUserLeaving> = 0;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout> = 0;

        $r14 = new android.util.SparseIntArray;

        specialinvoke $r14.<android.util.SparseIntArray: void <init>(int)>(2);

        r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront> = $r14;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService> = r1;

        r0.<com.android.server.am.ActivityStackSupervisor: android.content.Context mContext> = r2;

        r0.<com.android.server.am.ActivityStackSupervisor: android.os.Looper mLooper> = r3;

        $r15 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r4 = (android.os.PowerManager) $r15;

        $r17 = virtualinvoke r4.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ActivityManager-Sleep");

        r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep> = $r17;

        $r16 = new com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler;

        specialinvoke $r16.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void <init>(com.android.server.am.ActivityStackSupervisor,android.os.Looper)>(r0, r3);

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler> = $r16;

        $r19 = virtualinvoke r4.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ActivityManager-Launch");

        r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity> = $r19;

        $r18 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r18.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        return;
    }

    static boolean dumpHistoryList(java.io.FileDescriptor, java.io.PrintWriter, java.util.List, java.lang.String, java.lang.String, boolean, boolean, boolean, java.lang.String, boolean, java.lang.String, java.lang.String)
    {
        java.io.FileDescriptor r0, $r29;
        java.io.PrintWriter r1;
        java.util.List r2;
        java.lang.String r3, r4, r5, r6, r7, r9, r12, r17, $r28, $r37, $r41, $r42, $r50, $r55;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7;
        com.android.server.am.TaskRecord r8, $r20;
        java.lang.String[] r10;
        com.android.server.am.ActivityRecord r11;
        int i0, $i1;
        java.lang.Throwable r13, $r47;
        com.android.internal.os.TransferPipe r14, $r25;
        java.io.IOException r15, $r49;
        java.lang.Object $r18;
        com.android.server.am.ProcessRecord $r19, $r22, $r26, $r33, $r34;
        android.app.IApplicationThread $r21, $r23;
        android.os.ParcelFileDescriptor $r24;
        android.content.Intent $r27, $r31, $r32;
        android.view.IApplicationToken$Stub $r30;
        java.lang.StringBuilder $r35, $r36, $r38, $r39, $r40, $r43, $r44, $r45, $r48, $r51, $r52, $r53, $r54;
        android.os.RemoteException $r46;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.io.PrintWriter;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        r5 := @parameter8: java.lang.String;

        z3 := @parameter9: boolean;

        r6 := @parameter10: java.lang.String;

        r7 := @parameter11: java.lang.String;

        r8 = null;

        r9 = null;

        r10 = null;

        z4 = 0;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i0 = -1 + $i1;

     label01:
        if i0 < 0 goto label27;

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r11 = (com.android.server.am.ActivityRecord) $r18;

        if r5 == null goto label03;

        $r42 = r11.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z7 != 0 goto label03;

     label02:
        i0 = i0 + -1;

        goto label01;

     label03:
        if r9 != null goto label04;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        r9 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = newarray (java.lang.String)[0];

     label04:
        z4 = 1;

        if z1 != 0 goto label18;

        if z0 != 0 goto label05;

        $z6 = virtualinvoke r11.<com.android.server.am.ActivityRecord: boolean isInHistory()>();

        if $z6 != 0 goto label18;

     label05:
        z5 = 1;

     label06:
        if z3 == 0 goto label07;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        z3 = 0;

     label07:
        if r6 == null goto label08;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r6);

        r6 = null;

     label08:
        if r7 == null goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r7);

        r7 = null;

     label09:
        $r20 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r8 == $r20 goto label11;

        r8 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        if z5 == 0 goto label19;

        r17 = "* ";

     label10:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r17);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r8);

        if z5 == 0 goto label20;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r41);

     label11:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        if z5 == 0 goto label21;

        r12 = "  * ";

     label12:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r11);

        if z5 == 0 goto label22;

        virtualinvoke r11.<com.android.server.am.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String)>(r1, r9);

     label13:
        if z2 == 0 goto label02;

        $r19 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r19 == null goto label02;

        $r22 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r21 = $r22.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r21 == null goto label02;

        virtualinvoke r1.<java.io.PrintWriter: void flush()>();

     label14:
        $r25 = new com.android.internal.os.TransferPipe;

        specialinvoke $r25.<com.android.internal.os.TransferPipe: void <init>()>();

        r14 = $r25;

     label15:
        $r26 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r26.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r24 = virtualinvoke r14.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r29 = virtualinvoke $r24.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r30 = r11.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r23.<android.app.IApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>($r29, $r30, r9, r10);

        virtualinvoke r14.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r0, 2000L);

     label16:
        virtualinvoke r14.<com.android.internal.os.TransferPipe: void kill()>();

     label17:
        z3 = 1;

        goto label02;

     label18:
        z5 = 0;

        goto label06;

     label19:
        r17 = "  ";

        goto label10;

     label20:
        if z0 == 0 goto label11;

        $r31 = r8.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r31 == null goto label11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r32 = r8.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r37 = virtualinvoke $r32.<android.content.Intent: java.lang.String toInsecureStringWithClip()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        goto label11;

     label21:
        r12 = "    ";

        goto label12;

     label22:
        if z0 == 0 goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        $r27 = r11.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r28 = virtualinvoke $r27.<android.content.Intent: java.lang.String toInsecureString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        $r33 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r33 == null goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        $r34 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r34);

        goto label13;

     label23:
        $r47 := @caughtexception;

        r13 = $r47;

     label24:
        virtualinvoke r14.<com.android.internal.os.TransferPipe: void kill()>();

        throw r13;

     label25:
        $r49 := @caughtexception;

        r15 = $r49;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the activity: ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        goto label17;

     label26:
        $r46 := @caughtexception;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r51 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the activity");

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        goto label17;

     label27:
        return z4;

        catch java.io.IOException from label14 to label15 with label25;
        catch android.os.RemoteException from label14 to label15 with label26;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.io.IOException from label16 to label17 with label25;
        catch android.os.RemoteException from label16 to label17 with label26;
        catch java.io.IOException from label24 to label25 with label25;
        catch android.os.RemoteException from label24 to label25 with label26;
    }

    static boolean printThisActivity(java.io.PrintWriter, com.android.server.am.ActivityRecord, java.lang.String, boolean, java.lang.String)
    {
        java.io.PrintWriter r0;
        com.android.server.am.ActivityRecord r1;
        java.lang.String r2, r3, $r4;
        boolean z0, $z1;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.am.ActivityRecord;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String;

        if r1 == null goto label3;

        if r2 == null goto label1;

        $r4 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.Object)>(r1);

        return 1;

     label3:
        return 0;
    }

    private static java.lang.String stackStateToString(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown stackState=");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        return "STACK_STATE_HOME_IN_FRONT";

     label3:
        return "STACK_STATE_HOME_TO_BACK";

     label4:
        return "STACK_STATE_HOME_IN_BACK";

     label5:
        return "STACK_STATE_HOME_TO_FRONT";
    }

    void acquireLaunchWakelock()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.PowerManager$WakeLock $r1;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $z0 = virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean hasMessages(int)>(104);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendEmptyMessageDelayed(int,long)>(104, 10000L);

     label1:
        return;
    }

    final com.android.server.am.ActivityRecord activityIdleInternalLocked(android.os.IBinder, boolean, android.content.res.Configuration)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.IBinder r1;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, $z8, $z11, $z12, $z13;
        android.content.res.Configuration r2;
        com.android.server.am.ActivityRecord r3;
        android.app.IApplicationThread r4, r9, r14;
        java.util.ArrayList r5, r6, r7, r8, r11, r12, $r15, $r16, $r17, $r33, $r34, $r35, $r36, $r37, $r38, $r45;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        com.android.server.am.ActivityStack r10, $r18, $r27, $r52;
        com.android.server.am.ProcessRecord r13, $r47, $r49;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r19, $r41, $r44;
        com.android.server.am.ActivityStackSupervisor$1 $r20;
        com.android.server.am.ActivityManagerService $r21, $r22, $r23, $r26, $r39, $r40, $r43, $r48, $r51;
        com.android.server.am.UserStartedState $r24;
        java.lang.Object $r25, $r29, $r32;
        com.android.server.am.TaskRecord $r28, $r31, $r50;
        android.os.PowerManager$WakeLock $r42, $r46;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.content.res.Configuration;

        z1 = 0;

        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        z2 = 0;

        r4 = null;

        if r3 == null goto label04;

        $r44 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r44.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int,java.lang.Object)>(100, r3);

        virtualinvoke r3.<com.android.server.am.ActivityRecord: void finishLaunchTickingLocked()>();

        if z0 == 0 goto label01;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void reportActivityLaunchedLocked(boolean,com.android.server.am.ActivityRecord,long,long)>(z0, r3, -1L, -1L);

     label01:
        if r2 == null goto label02;

        r3.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration> = r2;

     label02:
        r3.<com.android.server.am.ActivityRecord: boolean idle> = 1;

        z5 = r3.<com.android.server.am.ActivityRecord: boolean thumbnailNeeded>;

        r4 = null;

        if z5 == 0 goto label03;

        r13 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        r4 = null;

        if r13 == null goto label03;

        $r47 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        r14 = $r47.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r4 = null;

        if r14 == null goto label03;

        $r49 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        r4 = $r49.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r3.<com.android.server.am.ActivityRecord: boolean thumbnailNeeded> = 0;

     label03:
        $r51 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        z7 = $r51.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        z2 = 0;

        if z7 != 0 goto label04;

        $r50 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r52 = $r50.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        z6 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>($r52);

        z2 = 0;

        if z6 == 0 goto label04;

        $r48 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r48.<com.android.server.am.ActivityManagerService: boolean mBooted> = 1;

        z2 = 1;

     label04:
        $z8 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesIdle()>();

        if $z8 == 0 goto label07;

        if r3 == null goto label05;

        $r43 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r43.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label05:
        $r46 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $z13 = virtualinvoke $r46.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z13 == 0 goto label06;

        $r41 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r41.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int)>(104);

        $r42 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r42.<android.os.PowerManager$WakeLock: void release()>();

     label06:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

     label07:
        r5 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList processStoppingActivitiesLocked(boolean)>(1);

        if r5 == null goto label15;

        i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

     label08:
        $r16 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        i1 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        r6 = null;

        if i1 <= 0 goto label09;

        r12 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        $r36 = new java.util.ArrayList;

        specialinvoke $r36.<java.util.ArrayList: void <init>(java.util.Collection)>(r12);

        r6 = $r36;

        $r45 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        virtualinvoke $r45.<java.util.ArrayList: void clear()>();

     label09:
        $r15 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mCancelledThumbnails>;

        i2 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if i2 <= 0 goto label16;

        $r33 = new java.util.ArrayList;

        $r34 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mCancelledThumbnails>;

        specialinvoke $r33.<java.util.ArrayList: void <init>(java.util.Collection)>($r34);

        r7 = $r33;

        $r35 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mCancelledThumbnails>;

        virtualinvoke $r35.<java.util.ArrayList: void clear()>();

     label10:
        $r18 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        z3 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>($r18);

        z4 = 0;

        if z3 == 0 goto label11;

        $r39 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        z4 = $r39.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        $r40 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r40.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

     label11:
        $r17 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers>;

        i3 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        r8 = null;

        if i3 <= 0 goto label12;

        r11 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers>;

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>(java.util.Collection)>(r11);

        r8 = $r37;

        $r38 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers>;

        virtualinvoke $r38.<java.util.ArrayList: void clear()>();

     label12:
        r9 = r4;

        $r19 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r20 = new com.android.server.am.ActivityStackSupervisor$1;

        specialinvoke $r20.<com.android.server.am.ActivityStackSupervisor$1: void <init>(com.android.server.am.ActivityStackSupervisor,android.app.IApplicationThread,android.os.IBinder,int,java.util.ArrayList)>(r0, r9, r1, i2, r7);

        virtualinvoke $r19.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean post(java.lang.Runnable)>($r20);

        i5 = 0;

     label13:
        if i5 >= i0 goto label18;

        $r32 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r3 = (com.android.server.am.ActivityRecord) $r32;

        $r31 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r10 = $r31.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z12 = r3.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z12 == 0 goto label17;

        virtualinvoke r10.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord finishCurrentActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>(r3, 0, 0);

     label14:
        i5 = i5 + 1;

        goto label13;

     label15:
        i0 = 0;

        goto label08;

     label16:
        r7 = null;

        goto label10;

     label17:
        virtualinvoke r10.<com.android.server.am.ActivityStack: void stopActivityLocked(com.android.server.am.ActivityRecord)>(r3);

        goto label14;

     label18:
        i4 = 0;

     label19:
        if i4 >= i1 goto label20;

        $r29 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r3 = (com.android.server.am.ActivityRecord) $r29;

        $r28 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r27 = $r28.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z11 = virtualinvoke $r27.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean,java.lang.String)>(r3, 1, 0, "finish-idle");

        z1 = z1 | $z11;

        i4 = i4 + 1;

        goto label19;

     label20:
        if z4 == 0 goto label24;

        $r23 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r23.<com.android.server.am.ActivityManagerService: void finishBooting()>();

     label21:
        $r22 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r22.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        if z2 == 0 goto label22;

        $r21 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r21.<com.android.server.am.ActivityManagerService: void enableScreenAfterBoot()>();

     label22:
        if z1 == 0 goto label23;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label23:
        return r3;

     label24:
        if r8 == null goto label21;

        i7 = 0;

     label25:
        i6 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if i7 >= i6 goto label21;

        $r26 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r25 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r24 = (com.android.server.am.UserStartedState) $r25;

        virtualinvoke $r26.<com.android.server.am.ActivityManagerService: void finishUserSwitch(com.android.server.am.UserStartedState)>($r24);

        i7 = i7 + 1;

        goto label25;
    }

    void activitySleptLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        return;
    }

    com.android.server.am.ActivityStack adjustStackFocus(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.TaskRecord r2;
        int i0, $i1, $i2;
        com.android.server.am.ActivityStack r3, r4, r5, $r6, $r9, $r10, $r13, $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r7, $r12;
        com.android.server.am.ActivityManagerService $r8;
        java.lang.Object $r11;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z0 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isApplicationActivity()>();

        if $z0 != 0 goto label01;

        if r2 == null goto label10;

        $z3 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean isApplicationTask()>();

        if $z3 == 0 goto label10;

     label01:
        if r2 == null goto label05;

        r4 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        if $r14 == r4 goto label03;

        $z2 = virtualinvoke r4.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z2 == 0 goto label04;

        r5 = null;

     label02:
        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = r5;

     label03:
        return r4;

     label04:
        r5 = r4;

        goto label02;

     label05:
        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        if $r6 == null goto label06;

        $r15 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r15;

     label06:
        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label07:
        if i0 <= 0 goto label09;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r11 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActivityStack) $r11;

        $z1 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z1 != 0 goto label08;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = r3;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r13;

     label08:
        i0 = i0 + -1;

        goto label07;

     label09:
        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $i2 = virtualinvoke $r8.<com.android.server.am.ActivityManagerService: int createStack(int,int,int,float)>(-1, 0, 6, 1.0F);

        $r9 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>($i2);

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = $r9;

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r10;

     label10:
        $r16 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        return $r16;
    }

    boolean allPausedActivitiesComplete()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0;
        int i0, $i1;
        com.android.server.am.ActivityRecord r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r5;
        com.android.server.am.ActivityStack$ActivityState $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 = 1;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.am.ActivityStack) $r4;

        r1 = $r5.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if r1 == null goto label3;

        $r7 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r6 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSED>;

        if $r7 == $r6 goto label3;

        $r9 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r8 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPED>;

        if $r9 == $r8 goto label3;

        $r11 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r10 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        if $r11 == $r10 goto label3;

        z0 = 0;

     label2:
        return z0;

     label3:
        i0 = i0 + -1;

        goto label1;
    }

    boolean allResumedActivitiesComplete()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, $i1, $i2;
        com.android.server.am.ActivityStack r1;
        com.android.server.am.ActivityRecord r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;
        com.android.server.am.ActivityStack$ActivityState $r6, $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActivityStack) $r5;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r1);

        if $z0 == 0 goto label2;

        r2 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r2 == null goto label2;

        $r7 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r6 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r7 == $r6 goto label2;

        return 0;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        $i2 = r0.<com.android.server.am.ActivityStackSupervisor: int mStackState>;

        tableswitch($i2)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label6;
            default: goto label4;
        };

     label4:
        return 1;

     label5:
        r0.<com.android.server.am.ActivityStackSupervisor: int mStackState> = 2;

        goto label4;

     label6:
        r0.<com.android.server.am.ActivityStackSupervisor: int mStackState> = 0;

        goto label4;
    }

    boolean allResumedActivitiesIdle()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, $i1;
        com.android.server.am.ActivityStack r1;
        com.android.server.am.ActivityRecord r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActivityStack) $r5;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r1);

        if $z0 != 0 goto label3;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        r2 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r2 == null goto label4;

        $z1 = r2.<com.android.server.am.ActivityRecord: boolean idle>;

        if $z1 != 0 goto label2;

     label4:
        return 0;

     label5:
        return 1;
    }

    boolean allResumedActivitiesVisible()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, $i1;
        com.android.server.am.ActivityRecord r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label4;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.am.ActivityStack) $r4;

        r1 = $r5.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r1 == null goto label3;

        $z0 = r1.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z0 == 0 goto label2;

        $z1 = r1.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z1 == 0 goto label3;

     label2:
        return 0;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return 1;
    }

    com.android.server.am.TaskRecord anyTaskForIdLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2;
        com.android.server.am.TaskRecord r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.am.ActivityStack) $r4;

        r1 = virtualinvoke $r5.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord taskForIdLocked(int)>(i0);

        if r1 == null goto label2;

        return r1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    boolean attachApplicationLocked(com.android.server.am.ProcessRecord, boolean) throws java.lang.Exception
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1, $r9;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String r2, $r12, $r15, $r22, $r24;
        int i0, $i1, $i2, $i3;
        com.android.server.am.ActivityStack r3;
        com.android.server.am.ActivityRecord r4;
        java.lang.Exception r5, $r17;
        java.util.ArrayList $r6, $r7;
        java.lang.Object $r8;
        android.content.pm.ApplicationInfo $r10;
        android.content.pm.ActivityInfo $r11;
        java.lang.StringBuilder $r13, $r14, $r16, $r18, $r20, $r21;
        android.content.Intent $r19;
        android.content.ComponentName $r23;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 = 0;

        r2 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label01:
        if i0 < 0 goto label09;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActivityStack) $r8;

        $z3 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r3);

        if $z3 != 0 goto label03;

     label02:
        i0 = i0 + -1;

        goto label01;

     label03:
        r4 = virtualinvoke r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r4 == null goto label02;

        $r9 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r9 != null goto label02;

        $i2 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r11 = r4.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r10 = $r11.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        if $i2 != $i3 goto label02;

        $r12 = r4.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 == 0 goto label02;

        if z0 == 0 goto label07;

     label04:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting activities not supported on headless device: ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r15);

     label05:
        goto label02;

     label06:
        $r17 := @caughtexception;

        r5 = $r17;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in new application when starting activity ");

        $r19 = r4.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r23 = virtualinvoke $r19.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r24 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r22, r5);

        throw r5;

     label07:
        z2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean realStartActivityLocked(com.android.server.am.ActivityRecord,com.android.server.am.ProcessRecord,boolean,boolean)>(r4, r1, 1, 1);

     label08:
        if z2 == 0 goto label02;

        z1 = 1;

        goto label02;

     label09:
        if z1 != 0 goto label10;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

     label10:
        return z1;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label06;
    }

    void checkReadyForSleepLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.am.ActivityManagerService $r1, $r4, $r5;
        java.util.ArrayList $r2, $r8, $r9, $r11, $r12, $r14;
        android.os.PowerManager$WakeLock $r3, $r6;
        java.lang.Object $r7, $r13;
        com.android.server.am.ActivityStack $r10, $r15;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z1 = virtualinvoke $r1.<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>();

        if $z1 != 0 goto label02;

     label01:
        return;

     label02:
        $z2 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout>;

        if $z2 != 0 goto label07;

        z0 = 0;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i1 = -1 + $i3;

     label03:
        if i1 < 0 goto label04;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r13 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r15 = (com.android.server.am.ActivityStack) $r13;

        $z5 = virtualinvoke $r15.<com.android.server.am.ActivityStack: boolean checkReadyForSleepLocked()>();

        z0 = z0 | $z5;

        i1 = i1 + -1;

        goto label03;

     label04:
        $r11 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        $i4 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i4 <= 0 goto label05;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

        z0 = 1;

     label05:
        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        $i5 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label06;

        z0 = 1;

     label06:
        if z0 != 0 goto label01;

     label07:
        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i2;

     label08:
        if i0 < 0 goto label09;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r7 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (com.android.server.am.ActivityStack) $r7;

        virtualinvoke $r10.<com.android.server.am.ActivityStack: void goToSleep()>();

        i0 = i0 + -1;

        goto label08;

     label09:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void removeSleepTimeouts()>();

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z3 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z3 == 0 goto label10;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void release()>();

     label10:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z4 = $r4.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z4 == 0 goto label01;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        return;
    }

    void closeSystemDialogsLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.server.am.ActivityStack $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.am.ActivityStack) $r3;

        virtualinvoke $r4.<com.android.server.am.ActivityStack: void closeSystemDialogsLocked()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void comeOutOfSleepIfNeededLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, $i1;
        com.android.server.am.ActivityStack r1;
        android.os.PowerManager$WakeLock $r2, $r7;
        boolean $z0, $z1;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void removeSleepTimeouts()>();

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z0 = virtualinvoke $r2.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label2:
        if i0 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActivityStack) $r6;

        virtualinvoke r1.<com.android.server.am.ActivityStack: void awakeFromSleepingLocked()>();

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r1);

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label3:
        i0 = i0 + -1;

        goto label2;

     label4:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        return;
    }

    int createStack()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, $i1, $i2, $i3, $i4;
        com.android.server.am.ActivityStack $r1, $r2;
        android.os.Looper $r3;
        android.content.Context $r4;
        com.android.server.am.ActivityManagerService $r5;
        java.util.ArrayList $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

     label1:
        $i1 = r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId>;

        i0 = 1 + $i1;

        r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId> = i0;

        if i0 > 0 goto label2;

        r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId> = 1;

     label2:
        $i2 = r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId>;

        $r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>($i2);

        if $r1 != null goto label1;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r2 = new com.android.server.am.ActivityStack;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.content.Context mContext>;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.Looper mLooper>;

        $i3 = r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId>;

        specialinvoke $r2.<com.android.server.am.ActivityStack: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.os.Looper,int)>($r5, $r4, $r3, $i3);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i4 = r0.<com.android.server.am.ActivityStackSupervisor: int mLastStackId>;

        return $i4;
    }

    void dismissKeyguard()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean $z0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $z0 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mDismissKeyguardOnNextActivity>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mDismissKeyguardOnNextActivity> = 0;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r1.<com.android.server.wm.WindowManagerService: void dismissKeyguard()>();

     label1:
        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7, $r8, $r12, $r17, $r20;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r19, $r21;
        com.android.server.am.ActivityStack $r5;
        int $i0, $i1;
        android.util.SparseIntArray $r18;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mDismissKeyguardOnNextActivity=");

        $z0 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mDismissKeyguardOnNextActivity>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mFocusedStack=");

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mStackState=");

        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mStackState>;

        $r8 = staticinvoke <com.android.server.am.ActivityStackSupervisor: java.lang.String stackStateToString(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSleepTimeout=");

        $z1 = r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCurTaskId=");

        $i1 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mUserStackInFront=");

        $r18 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        return;
    }

    boolean dumpActivitiesLocked(java.io.FileDescriptor, java.io.PrintWriter, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, $z15, z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        java.lang.String r3, $r19;
        int i0, i1, $i2;
        java.util.ArrayList r4, r5, r6, r7, r8, r11, $r12, $r15, $r18;
        java.lang.StringBuilder r9, $r14;
        com.android.server.am.ActivityStack r10;
        java.lang.Object $r13;
        com.android.server.am.ActivityRecord $r21, $r22, $r23, $r24;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String;

        z2 = 0;

        z3 = 0;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        i0 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label08;

        $r15 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r13 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r10 = (com.android.server.am.ActivityStack) $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(int)>(128);

        r9 = $r14;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Stack #");

        $r18 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i2 = virtualinvoke $r18.<java.util.ArrayList: int indexOf(java.lang.Object)>(r10);

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r19 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z23 = virtualinvoke r10.<com.android.server.am.ActivityStack: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,boolean,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, z1, r3, z3, $r19);

        z13 = z2 | $z23;

        r11 = r10.<com.android.server.am.ActivityStack: java.util.ArrayList mLRUActivities>;

        if z0 != 0 goto label07;

        z14 = 1;

     label02:
        $z22 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, r11, "    ", "Run", 0, z14, 0, r3, 1, "    Running activities (most recent first):", null);

        z2 = z13 | $z22;

        z16 = z2;

        $r22 = r10.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        $z25 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r22, r3, z16, "    mPausingActivity: ");

        if $z25 == 0 goto label03;

        z2 = 1;

        z16 = 0;

     label03:
        $r21 = r10.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        $z24 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r21, r3, z16, "    mResumedActivity: ");

        if $z24 == 0 goto label04;

        z2 = 1;

        z16 = 0;

     label04:
        if z0 == 0 goto label06;

        $r24 = r10.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity>;

        $z27 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r24, r3, z16, "    mLastPausedActivity: ");

        if $z27 == 0 goto label05;

        z2 = 1;

        z16 = 1;

     label05:
        $r23 = r10.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity>;

        $z26 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r23, r3, z16, "    mLastNoHistoryActivity: ");

        z2 = z2 | $z26;

     label06:
        z3 = z2;

        i1 = i1 + 1;

        goto label01;

     label07:
        z14 = 0;

        goto label02;

     label08:
        r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        if z0 != 0 goto label14;

        z4 = 1;

     label09:
        $z15 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, r4, "  ", "Fin", 0, z4, 0, r3, 1, "  Activities waiting to finish:", null);

        z5 = z2 | $z15;

        r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        if z0 != 0 goto label15;

        z6 = 1;

     label10:
        $z19 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, r5, "  ", "Stop", 0, z6, 0, r3, 1, "  Activities waiting to stop:", null);

        z7 = z5 | $z19;

        r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        if z0 != 0 goto label16;

        z8 = 1;

     label11:
        $z20 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, r6, "  ", "Wait", 0, z8, 0, r3, 1, "  Activities waiting for another to become visible:", null);

        z9 = z7 | $z20;

        r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        if z0 != 0 goto label17;

        z11 = 1;

     label12:
        $z17 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, r7, "  ", "Sleep", 0, z11, 0, r3, 1, "  Activities waiting to sleep:", null);

        z10 = z9 | $z17;

        r8 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        if z0 != 0 goto label18;

        z12 = 1;

     label13:
        $z18 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, r8, "  ", "Sleep", 0, z12, 0, r3, 1, "  Activities waiting to sleep:", null);

        $z21 = z10 | $z18;

        return $z21;

     label14:
        z4 = 0;

        goto label09;

     label15:
        z6 = 0;

        goto label10;

     label16:
        z8 = 0;

        goto label11;

     label17:
        z11 = 0;

        goto label12;

     label18:
        z12 = 0;

        goto label13;
    }

    void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        int i0, i1, i2, $i3, $i4;
        boolean z0, $z1, $z3;
        com.android.server.am.ActivityStack r2, r3;
        java.util.ArrayList $r4, $r5, $r6, $r8;
        java.lang.Object $r7, $r9;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        i0 := @parameter1: int;

        z0 = 0;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = -1 + $i3;

     label1:
        if i1 < 0 goto label3;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ActivityStack) $r9;

        $z3 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r3);

        if $z3 == 0 goto label2;

        z0 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(r1, i0);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i4 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i2 = -1 + $i4;

     label4:
        if i2 < 0 goto label6;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.am.ActivityStack) $r7;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r2);

        if $z1 != 0 goto label5;

        virtualinvoke r2.<com.android.server.am.ActivityStack: boolean ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int,boolean)>(r1, i0, z0);

     label5:
        i2 = i2 + -1;

        goto label4;

     label6:
        return;
    }

    com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent, android.content.pm.ActivityInfo)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;
        int i0, $i1;
        com.android.server.am.ActivityRecord r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        com.android.server.am.ActivityStack $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (com.android.server.am.ActivityStack) $r6;

        r3 = virtualinvoke $r7.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent,android.content.pm.ActivityInfo)>(r1, r2);

        if r3 == null goto label2;

        return r3;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return null;
    }

    com.android.server.am.ActivityRecord findTaskLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, r3;
        int i0, $i1;
        com.android.server.am.ActivityStack r2;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ActivityStack) $r6;

        $z0 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isApplicationActivity()>();

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r2.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z1 != 0 goto label3;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        r3 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord findTaskLocked(com.android.server.am.ActivityRecord)>(r1);

        if r3 == null goto label2;

        return r3;

     label4:
        return null;
    }

    void findTaskToMoveToFrontLocked(int, int, android.os.Bundle)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, i2, $i3;
        android.os.Bundle r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = -1 + $i3;

     label1:
        if i2 < 0 goto label2;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (com.android.server.am.ActivityStack) $r4;

        $z0 = virtualinvoke $r5.<com.android.server.am.ActivityStack: boolean findTaskToMoveToFrontLocked(int,int,android.os.Bundle)>(i0, i1, r1);

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        i2 = i2 + -1;

        goto label1;
    }

    void finishTopRunningActivityLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.am.ActivityStack) $r4;

        virtualinvoke $r5.<com.android.server.am.ActivityStack: void finishTopRunningActivityLocked(com.android.server.am.ProcessRecord)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    boolean forceStopPackageLocked(java.lang.String, boolean, boolean, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.lang.String r1;
        boolean z0, z1, z2, $z3;
        int i0, i1, i2;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        z2 = 0;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (com.android.server.am.ActivityStack) $r4;

        $z3 = virtualinvoke $r5.<com.android.server.am.ActivityStack: boolean forceStopPackageLocked(java.lang.String,boolean,boolean,int)>(r1, z0, z1, i0);

        if $z3 == 0 goto label2;

        z2 = 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return z2;
    }

    java.util.ArrayList getDumpActivitiesLocked(java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.lang.String r1;
        com.android.server.am.ActivityStack $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        $r3 = virtualinvoke $r2.<com.android.server.am.ActivityStack: java.util.ArrayList getDumpActivitiesLocked(java.lang.String)>(r1);

        return $r3;
    }

    com.android.server.am.ActivityStack getFocusedStack()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack $r1, $r2, $r3, $r4;
        int $i0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        if $r1 != null goto label1;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        return $r4;

     label1:
        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mStackState>;

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label2;
        };

     label2:
        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r2;

     label3:
        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        return $r3;
    }

    com.android.server.am.ActivityStack getLastStack()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int $i0;
        com.android.server.am.ActivityStack $r1, $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mStackState>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        return $r1;

     label2:
        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        return $r2;
    }

    int getNextTaskId()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.am.TaskRecord $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

     label1:
        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        $i1 = 1 + $i0;

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId> = $i1;

        $i2 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        if $i2 > 0 goto label2;

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId> = 1;

     label2:
        $i3 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        $r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int)>($i3);

        if $r1 != null goto label1;

        $i4 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurTaskId>;

        return $i4;
    }

    com.android.server.am.ActivityStack getStack(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, $i2, $i3;
        com.android.server.am.ActivityStack r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.ActivityStack) $r4;

        $i3 = virtualinvoke r1.<com.android.server.am.ActivityStack: int getStackId()>();

        if $i3 != i0 goto label2;

        return r1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    java.util.ArrayList getStacks()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    com.android.server.am.ActivityRecord getTasksLocked(int, android.app.IThumbnailReceiver, com.android.server.am.PendingThumbnailsRecord, java.util.List)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, i2, i4;
        android.app.IThumbnailReceiver r1;
        com.android.server.am.PendingThumbnailsRecord r2;
        java.util.List r3;
        com.android.server.am.ActivityRecord r4, r9;
        java.util.ArrayList[] r5;
        long l3, l5;
        java.util.ArrayList r6, r7, r10, $r11, $r16, $r17;
        com.android.server.am.ActivityStack r8;
        java.lang.Object $r12, $r13, $r15;
        boolean $z1, $z2;
        byte $b6;
        android.app.ActivityManager$RunningTaskInfo $r14;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.IThumbnailReceiver;

        r2 := @parameter2: com.android.server.am.PendingThumbnailsRecord;

        r3 := @parameter3: java.util.List;

        r4 = null;

        $r11 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        r5 = newarray (java.util.ArrayList)[i1];

        i2 = i1 - 1;

     label1:
        if i2 < 0 goto label4;

        $r16 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r15 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r8 = (com.android.server.am.ActivityStack) $r15;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r10 = $r17;

        r5[i2] = r10;

        r9 = virtualinvoke r8.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getTasksLocked(android.app.IThumbnailReceiver,com.android.server.am.PendingThumbnailsRecord,java.util.List)>(r1, r2, r10);

        $z2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r8);

        if $z2 == 0 goto label2;

        r4 = r9;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        if r6 == null goto label7;

        $r12 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r12);

        i0 = i0 + -1;

     label4:
        if i0 <= 0 goto label7;

        l3 = -9223372036854775808L;

        r6 = null;

        i4 = 0;

     label5:
        if i4 >= i1 goto label3;

        r7 = r5[i4];

        $z1 = virtualinvoke r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r13 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r14 = (android.app.ActivityManager$RunningTaskInfo) $r13;

        l5 = $r14.<android.app.ActivityManager$RunningTaskInfo: long lastActiveTime>;

        $b6 = l5 cmp l3;

        if $b6 <= 0 goto label6;

        l3 = l5;

        r6 = r7;

     label6:
        i4 = i4 + 1;

        goto label5;

     label7:
        return r4;
    }

    void goingToSleepLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.PowerManager$WakeLock $r1, $r2, $r3, $r4;
        boolean $z0, $z1;
        com.android.server.am.ActivityManagerService $r5;
        android.os.Handler $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void scheduleSleepTimeout()>();

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $z1 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 == 0 goto label1;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int)>(104);

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        return;
    }

    void handleAppCrashLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        int i0, i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.am.ActivityStack) $r4;

        virtualinvoke $r5.<com.android.server.am.ActivityStack: void handleAppCrashLocked(com.android.server.am.ProcessRecord)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, $z1;
        int i0, $i1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 = 0;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.am.ActivityStack) $r4;

        $z1 = virtualinvoke $r5.<com.android.server.am.ActivityStack: boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)>(r1);

        z0 = z0 | $z1;

        i0 = i0 + -1;

        goto label1;

     label2:
        return z0;
    }

    boolean isFrontStack(com.android.server.am.ActivityStack)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityStack;

        $z0 = virtualinvoke r1.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        $r2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        $z1 = virtualinvoke $r2.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        $z2 = $z0 ^ $z1;

        if $z2 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    com.android.server.am.ActivityRecord isInAnyStackLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.os.IBinder r1;
        int i0, $i1;
        com.android.server.am.ActivityRecord r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        com.android.server.am.ActivityStack $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.am.ActivityStack) $r5;

        r2 = virtualinvoke $r6.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r2 == null goto label2;

        return r2;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return null;
    }

    void moveHomeStack(boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, z1, $z2;
        byte b0;
        com.android.server.am.ActivityStack $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>($r1);

        $z2 = z1 ^ z0;

        if $z2 == 0 goto label2;

        if z1 == 0 goto label3;

        b0 = 1;

     label1:
        r0.<com.android.server.am.ActivityStackSupervisor: int mStackState> = b0;

     label2:
        return;

     label3:
        b0 = 3;

        goto label1;
    }

    void moveHomeToTop()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>(1);

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        virtualinvoke $r1.<com.android.server.am.ActivityStack: void moveHomeTaskToTop()>();

        return;
    }

    void moveTaskToStack(int, int, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1;
        boolean z0;
        com.android.server.am.TaskRecord r1;
        com.android.server.am.ActivityStack r2;
        com.android.server.wm.WindowManagerService $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int)>(i0);

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i1);

        if r2 != null goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTaskToStack: no stack for id=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        return;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void removeTask(com.android.server.am.TaskRecord)>(r1);

        virtualinvoke r2.<com.android.server.am.ActivityStack: void addTask(com.android.server.am.TaskRecord,boolean)>(r1, z0);

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void addTask(int,int,boolean)>(i0, i1, z0);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        return;
    }

    boolean pauseBackStacks(boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, z1, $z2;
        int i0, $i1;
        com.android.server.am.ActivityStack r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityRecord $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        z1 = 0;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActivityStack) $r4;

        $z2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r1);

        if $z2 != 0 goto label2;

        $r5 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r5 == null goto label2;

        virtualinvoke r1.<com.android.server.am.ActivityStack: void startPausingLocked(boolean,boolean)>(z0, 0);

        z1 = 1;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return z1;
    }

    final java.util.ArrayList processStoppingActivitiesLocked(boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0, z1, $z2, $z3, $z5, $z7;
        int i0, i1;
        java.util.ArrayList r1, $r3, $r4, $r6, $r7, $r10;
        com.android.server.am.ActivityRecord r2;
        java.lang.Object $r5;
        com.android.server.am.ActivityManagerService $r9;
        android.view.IApplicationToken$Stub $r11;
        com.android.server.wm.WindowManagerService $r12;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 > 0 goto label2;

        r1 = null;

     label1:
        return r1;

     label2:
        r1 = null;

        z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesVisible()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityRecord) $r5;

        $z2 = r2.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z2 == 0 goto label4;

        if z1 == 0 goto label4;

        $r10 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r10.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        r2.<com.android.server.am.ActivityRecord: boolean waitingVisible> = 0;

        $z7 = r2.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z7 == 0 goto label4;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r11 = r2.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r12.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r11, 0);

     label4:
        $z3 = r2.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z3 == 0 goto label5;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z5 = virtualinvoke $r9.<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>();

        if $z5 == 0 goto label7;

     label5:
        if z0 == 0 goto label7;

        if r1 != null goto label6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1 = $r7;

     label6:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        i0 = i0 + -1;

        i1 = i1 + -1;

     label7:
        i1 = i1 + 1;

        goto label3;
    }

    final boolean realStartActivityLocked(com.android.server.am.ActivityRecord, com.android.server.am.ProcessRecord, boolean, boolean) throws android.os.RemoteException
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, $r98;
        com.android.server.am.ProcessRecord r2, r24, $r64, $r67, $r75, $r80, $r97;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z11, $z14, $z16;
        com.android.server.am.ActivityStack r3;
        android.os.RemoteException r4, $r96, $r109;
        java.util.ArrayList r5, r6, $r29, $r87, $r95, $r101;
        java.lang.Object[] r7;
        java.lang.String r8, r9, $r38, $r54, $r55, $r63, $r73, $r82, $r83, $r94, $r106, $r112;
        android.os.ParcelFileDescriptor r10, r20;
        android.app.IApplicationThread r11, $r35, $r117;
        android.view.IApplicationToken$Stub r12, $r25, r27, $r115;
        android.content.Intent r13, $r34, $r47, $r48, $r104;
        android.content.pm.ActivityInfo r14, $r36;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i10, $i12, $i13, $i15;
        android.content.res.CompatibilityInfo r15, $r41;
        android.content.res.Configuration r16, r23, r28, $r45, $r49;
        android.os.Bundle r17;
        android.os.Message r18;
        com.android.server.wm.WindowManagerService r22, $r26;
        long $l2;
        com.android.server.am.TaskRecord $r30, $r88, $r92;
        com.android.server.am.ActivityManagerService $r31, $r32, $r33, $r37, $r40, $r42, $r44, $r46, $r51, $r60, $r61, $r65, $r69, $r70, $r74, $r78, $r79, $r81, $r84, $r86, $r89, $r90, $r91, $r107, $r108, $r116;
        android.content.ComponentName $r39, $r105;
        android.content.pm.ApplicationInfo $r43, $r53, $r56;
        com.android.server.am.ActivityStack$ActivityState $r50;
        java.lang.StringBuilder $r52, $r57, $r58, $r59, $r66, $r68, $r72, $r76, $r77, $r102, $r103, $r113, $r114;
        android.os.Handler $r62, $r71;
        java.lang.Object $r85;
        java.lang.Integer $r93, $r99, $r100;
        java.io.IOException $r110, $r111;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>(r2, 0);

        $r26 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r25 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r26.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r25, 1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void startLaunchTickingLocked()>();

        if z1 == 0 goto label02;

        r22 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r107 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r23 = $r107.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $z14 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>(r2);

        if $z14 == 0 goto label06;

        r27 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

     label01:
        r28 = virtualinvoke r22.<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>(r23, r27);

        $r108 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r108.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r28, r1, 0, 0);

     label02:
        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = r2;

        r2.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill> = null;

        $i3 = r1.<com.android.server.am.ActivityRecord: int launchCount>;

        $i4 = 1 + $i3;

        r1.<com.android.server.am.ActivityRecord: int launchCount> = $i4;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ActivityRecord: long lastLaunchTime> = $l2;

        $r29 = r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i5 = virtualinvoke $r29.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if $i5 >= 0 goto label03;

        $r95 = r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r95.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label03:
        $r32 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r32.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r2, 1, null);

        $r31 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r31.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        $r30 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r3 = $r30.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

     label04:
        $r35 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r35 != null goto label07;

        $r96 = new android.os.RemoteException;

        specialinvoke $r96.<android.os.RemoteException: void <init>()>();

        throw $r96;

     label05:
        $r109 := @caughtexception;

        r4 = $r109;

        $z16 = r1.<com.android.server.am.ActivityRecord: boolean launchFailed>;

        if $z16 == 0 goto label35;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Second failure launching ");

        $r104 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r105 = virtualinvoke $r104.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r106 = virtualinvoke $r105.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r114 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r113 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", giving up");

        $r112 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r112, r4);

        $r116 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $i15 = r2.<com.android.server.am.ProcessRecord: int pid>;

        $r117 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        virtualinvoke $r116.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>(r2, $i15, $r117);

        $r115 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke r3.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>($r115, 0, null, "2nd-crash", 0);

        return 0;

     label06:
        r27 = null;

        goto label01;

     label07:
        r5 = null;

        r6 = null;

        if z0 == 0 goto label09;

     label08:
        r5 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        r6 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

     label09:
        if z0 == 0 goto label11;

     label10:
        r7 = newarray (java.lang.Object)[4];

        $i12 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r99 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        r7[0] = $r99;

        $i13 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r100 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        r7[1] = $r100;

        $r92 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i10 = $r92.<com.android.server.am.TaskRecord: int taskId>;

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        r7[2] = $r93;

        $r94 = r1.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        r7[3] = $r94;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30006, r7);

     label11:
        $z5 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z5 == 0 goto label12;

        $z11 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isNotResolverActivity()>();

        if $z11 == 0 goto label12;

        $r86 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r88 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r87 = $r88.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $r85 = virtualinvoke $r87.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r98 = (com.android.server.am.ActivityRecord) $r85;

        $r97 = $r98.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r86.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess> = $r97;

     label12:
        $r33 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r34 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r39 = virtualinvoke $r34.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r38 = virtualinvoke $r39.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke $r33.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r38);

        r1.<com.android.server.am.ActivityRecord: boolean sleeping> = 0;

        r1.<com.android.server.am.ActivityRecord: boolean forceNewConfig> = 0;

        $r37 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r37.<com.android.server.am.ActivityManagerService: void showAskCompatModeDialogLocked(com.android.server.am.ActivityRecord)>(r1);

        $r42 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r36 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r43 = $r36.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r41 = virtualinvoke $r42.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r43);

        r1.<com.android.server.am.ActivityRecord: android.content.res.CompatibilityInfo compat> = $r41;

        $r40 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r8 = $r40.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

     label13:
        r9 = null;

        r10 = null;

        z2 = 0;

        if r8 == null goto label19;

     label14:
        $r84 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r82 = $r84.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        $r83 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        z3 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>($r83);

     label15:
        r9 = null;

        r10 = null;

        z2 = 0;

        if z3 == 0 goto label19;

     label16:
        $r81 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r80 = $r81.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if $r80 == null goto label18;

        $r89 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r24 = $r89.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

     label17:
        r9 = null;

        r10 = null;

        z2 = 0;

        if r24 != r2 goto label19;

     label18:
        $r79 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r79.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = r2;

        $r78 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r9 = $r78.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        $r91 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r10 = $r91.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        $r90 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        z2 = $r90.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler>;

     label19:
        r2.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 1;

        r2.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 1;

     label20:
        if r10 == null goto label23;

     label21:
        r20 = virtualinvoke r10.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

     label22:
        r10 = r20;

     label23:
        virtualinvoke r2.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(2);

        r11 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r47 = new android.content.Intent;

        $r48 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        specialinvoke $r47.<android.content.Intent: void <init>(android.content.Intent)>($r48);

        r13 = $r47;

        r12 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        r14 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r49 = new android.content.res.Configuration;

        $r44 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r45 = $r44.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r49.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r45);

        r16 = $r49;

        r15 = r1.<com.android.server.am.ActivityRecord: android.content.res.CompatibilityInfo compat>;

        i1 = r2.<com.android.server.am.ProcessRecord: int repProcState>;

        r17 = r1.<com.android.server.am.ActivityRecord: android.os.Bundle icicle>;

     label24:
        if z0 != 0 goto label34;

        z4 = 1;

     label25:
        $r46 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z6 = virtualinvoke $r46.<com.android.server.am.ActivityManagerService: boolean isNextTransitionForward()>();

        interfaceinvoke r11.<android.app.IApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,int,android.os.Bundle,java.util.List,java.util.List,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,boolean)>(r13, r12, i0, r14, r16, r15, i1, r17, r5, r6, z4, $z6, r9, r10, z2);

        $r53 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i6 = $r53.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = 268435456 & $i6;

        if $i7 == 0 goto label27;

        $r63 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r56 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r55 = $r56.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z9 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>($r55);

        if $z9 == 0 goto label27;

        $r65 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r64 = $r65.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r64 == null goto label26;

        $r69 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r67 = $r69.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r67 == r2 goto label26;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting new heavy weight process ");

        $r76 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when already running ");

        $r74 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r75 = $r74.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r72 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r75);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r73);

     label26:
        $r61 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r61.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = r2;

        $r60 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r62 = $r60.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r18 = virtualinvoke $r62.<android.os.Handler: android.os.Message obtainMessage(int)>(24);

        r18.<android.os.Message: java.lang.Object obj> = r1;

        $r70 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r71 = $r70.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r71.<android.os.Handler: boolean sendMessage(android.os.Message)>(r18);

     label27:
        r1.<com.android.server.am.ActivityRecord: boolean launchFailed> = 0;

        $z8 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean updateLRUListLocked(com.android.server.am.ActivityRecord)>(r1);

        if $z8 == 0 goto label28;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" being launched, but already in LRU list");

        $r54 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r54);

     label28:
        if z0 == 0 goto label36;

        virtualinvoke r3.<com.android.server.am.ActivityStack: void minimalResumeActivityLocked(com.android.server.am.ActivityRecord)>(r1);

     label29:
        $z7 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r3);

        if $z7 == 0 goto label30;

        $r51 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r51.<com.android.server.am.ActivityManagerService: void startSetupActivityLocked()>();

     label30:
        return 1;

     label31:
        $r111 := @caughtexception;

        if r10 == null goto label23;

     label32:
        virtualinvoke r10.<android.os.ParcelFileDescriptor: void close()>();

     label33:
        r10 = null;

        goto label23;

     label34:
        z4 = 0;

        goto label25;

     label35:
        $r101 = r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r101.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        throw r4;

     label36:
        $r50 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r50;

        r1.<com.android.server.am.ActivityRecord: boolean stopped> = 1;

        goto label29;

     label37:
        $r110 := @caughtexception;

        goto label33;

        catch android.os.RemoteException from label04 to label05 with label05;
        catch android.os.RemoteException from label08 to label09 with label05;
        catch android.os.RemoteException from label10 to label11 with label05;
        catch android.os.RemoteException from label11 to label12 with label05;
        catch android.os.RemoteException from label12 to label13 with label05;
        catch android.os.RemoteException from label14 to label15 with label05;
        catch android.os.RemoteException from label16 to label17 with label05;
        catch android.os.RemoteException from label18 to label19 with label05;
        catch android.os.RemoteException from label19 to label20 with label05;
        catch java.io.IOException from label21 to label22 with label31;
        catch android.os.RemoteException from label21 to label22 with label05;
        catch android.os.RemoteException from label23 to label24 with label05;
        catch android.os.RemoteException from label25 to label26 with label05;
        catch android.os.RemoteException from label26 to label27 with label05;
        catch java.io.IOException from label32 to label33 with label37;
        catch android.os.RemoteException from label32 to label33 with label05;
    }

    void removeSleepTimeouts()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout> = 0;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int)>(103);

        return;
    }

    void removeTask(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.TaskRecord r1, $r10;
        com.android.server.am.ActivityStack r2, r4, $r8, $r9;
        com.android.server.am.ActivityRecord r3;
        int i0, i1, $i2, $i3;
        com.android.server.wm.WindowManagerService $r5, $r7;
        boolean $z0, $z1;
        java.util.ArrayList $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i2 = r1.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void removeTask(int)>($i2);

        r2 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        r3 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r3 == null goto label1;

        $r10 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r10 != r1 goto label1;

        r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = null;

     label1:
        $z0 = virtualinvoke r2.<com.android.server.am.ActivityStack: boolean removeTask(com.android.server.am.TaskRecord)>(r1);

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r2.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z1 != 0 goto label4;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        i0 = r2.<com.android.server.am.ActivityStack: int mStackId>;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        i1 = virtualinvoke $r7.<com.android.server.wm.WindowManagerService: int removeStack(int)>(i0);

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        if $r8 == null goto label2;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack>;

        $i3 = $r9.<com.android.server.am.ActivityStack: int mStackId>;

        if $i3 != i0 goto label4;

     label2:
        r4 = null;

        if i1 != 0 goto label5;

     label3:
        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = r4;

     label4:
        return;

     label5:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i1);

        goto label3;
    }

    void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int,java.lang.Object)>(100, r1);

        return;
    }

    void removeUserLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0;
        android.util.SparseIntArray $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront>;

        virtualinvoke $r1.<android.util.SparseIntArray: void delete(int)>(i0);

        return;
    }

    void reportActivityLaunchedLocked(boolean, com.android.server.am.ActivityRecord, long, long)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0;
        com.android.server.am.ActivityRecord r1;
        long l0, l1;
        int i2, $i3;
        android.app.IActivityManager$WaitResult r2;
        java.util.ArrayList $r3, $r5;
        com.android.server.am.ActivityManagerService $r4;
        java.lang.Object $r6;
        android.content.ComponentName $r7;
        android.content.pm.ActivityInfo $r8, $r9;
        java.lang.String $r10, $r11;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.server.am.ActivityRecord;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = -1 + $i3;

     label1:
        if i2 < 0 goto label3;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        r2 = (android.app.IActivityManager$WaitResult) $r6;

        r2.<android.app.IActivityManager$WaitResult: boolean timeout> = z0;

        if r1 == null goto label2;

        $r7 = new android.content.ComponentName;

        $r9 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r10 = $r9.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r8 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r11 = $r8.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r7.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, $r11);

        r2.<android.app.IActivityManager$WaitResult: android.content.ComponentName who> = $r7;

     label2:
        r2.<android.app.IActivityManager$WaitResult: long thisTime> = l0;

        r2.<android.app.IActivityManager$WaitResult: long totalTime> = l1;

        i2 = i2 + -1;

        goto label1;

     label3:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        return;
    }

    void reportActivityVisibleLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        int i0, $i1;
        android.app.IActivityManager$WaitResult r2;
        java.util.ArrayList $r3, $r5;
        com.android.server.am.ActivityManagerService $r4;
        java.lang.Object $r6;
        long $l2, $l3, $l4, $l5;
        android.content.ComponentName $r7;
        android.content.pm.ActivityInfo $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityVisible>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityVisible>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.app.IActivityManager$WaitResult) $r6;

        r2.<android.app.IActivityManager$WaitResult: boolean timeout> = 0;

        if r1 == null goto label2;

        $r7 = new android.content.ComponentName;

        $r8 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r11 = $r8.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r10 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r9 = $r10.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r7.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r11, $r9);

        r2.<android.app.IActivityManager$WaitResult: android.content.ComponentName who> = $r7;

     label2:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r2.<android.app.IActivityManager$WaitResult: long thisTime>;

        $l4 = $l2 - $l3;

        r2.<android.app.IActivityManager$WaitResult: long totalTime> = $l4;

        $l5 = r2.<android.app.IActivityManager$WaitResult: long totalTime>;

        r2.<android.app.IActivityManager$WaitResult: long thisTime> = $l5;

        i0 = i0 + -1;

        goto label1;

     label3:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void dismissKeyguard()>();

        return;
    }

    boolean reportResumedActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.TaskRecord $r2;
        com.android.server.am.ActivityStack $r3;
        boolean $z0, $z1;
        com.android.server.wm.WindowManagerService $r4;
        com.android.server.am.ActivityManagerService $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3 = $r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>($r3);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.ActivityRecord,boolean)>(r1, 1);

     label1:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesComplete()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void executeAppTransition()>();

        return 1;

     label2:
        return 0;
    }

    android.content.pm.ActivityInfo resolveActivity(android.content.Intent, java.lang.String, int, java.lang.String, android.os.ParcelFileDescriptor, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.content.Intent r1;
        java.lang.String r2, r3, r9, $r13, $r16, $r17, $r18, $r19, $r22, $r24;
        int i0, i1, $i2, $i3, $i4;
        android.os.ParcelFileDescriptor r4;
        boolean z0, $z1, $z2, $z3;
        android.content.pm.ActivityInfo r6;
        com.android.server.am.ActivityManagerService r7, $r20, $r23;
        android.content.pm.ApplicationInfo r8, $r14, $r21;
        android.content.pm.ResolveInfo r10;
        android.content.pm.IPackageManager $r11;
        android.content.ComponentName $r12;
        android.os.RemoteException $r25;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.ParcelFileDescriptor;

        i1 := @parameter5: int;

        z0 = 1;

     label01:
        $r11 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r10 = interfaceinvoke $r11.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r1, r2, 66560, i1);

     label02:
        if r10 == null goto label09;

     label03:
        r6 = r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label04:
        if r6 == null goto label08;

        $r12 = new android.content.ComponentName;

        $r14 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r16 = $r14.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r13 = r6.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r12.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r16, $r13);

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r12);

        $i3 = i0 & 2;

        if $i3 == 0 goto label05;

        $r24 = r6.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z3 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z3 != 0 goto label05;

        $r23 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r22 = r6.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r23.<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>($r22, z0, 0);

     label05:
        $i2 = i0 & 4;

        if $i2 == 0 goto label06;

        $r18 = r6.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z2 != 0 goto label06;

        $r20 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r21 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r19 = r6.<android.content.pm.ActivityInfo: java.lang.String processName>;

        virtualinvoke $r20.<com.android.server.am.ActivityManagerService: void setOpenGlTraceApp(android.content.pm.ApplicationInfo,java.lang.String)>($r21, $r19);

     label06:
        if r3 == null goto label08;

        $r17 = r6.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z1 != 0 goto label08;

        r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r8 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r9 = r6.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $i4 = i0 & 8;

        if $i4 == 0 goto label11;

     label07:
        virtualinvoke r7.<com.android.server.am.ActivityManagerService: void setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,java.lang.String,android.os.ParcelFileDescriptor,boolean)>(r8, r9, r3, r4, z0);

     label08:
        return r6;

     label09:
        r6 = null;

        goto label04;

     label10:
        $r25 := @caughtexception;

        r6 = null;

        goto label04;

     label11:
        z0 = 0;

        goto label07;

        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label10;
    }

    boolean resumeHomeActivity(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, r2;
        com.android.server.am.ActivityStack $r3, $r6;
        int $i0;
        com.android.server.am.ActivityManagerService $r4, $r5;
        boolean $z0, $z1, $z2;
        com.android.server.am.TaskRecord $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeToTop()>();

        if r1 == null goto label1;

        $r7 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r7.<com.android.server.am.TaskRecord: boolean mOnTopOfHome> = 0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z1 == 0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r2);

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        $z2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>($r6, r1, null);

        return $z2;

     label2:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurrentUser>;

        $z0 = virtualinvoke $r4.<com.android.server.am.ActivityManagerService: boolean startHomeActivityLocked(int)>($i0);

        return $z0;
    }

    boolean resumeTopActivitiesLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>(null, null, null);

        return $z0;
    }

    boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack, com.android.server.am.ActivityRecord, android.os.Bundle)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1, r4;
        com.android.server.am.ActivityRecord r2;
        android.os.Bundle r3;
        boolean z0, $z1;
        int i0, $i1;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityStack;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: android.os.Bundle;

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

     label1:
        z0 = 0;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label2:
        if i0 < 0 goto label5;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ActivityStack) $r7;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r4);

        if $z1 == 0 goto label3;

        if r4 != r1 goto label4;

        z0 = virtualinvoke r4.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord,android.os.Bundle)>(r2, r3);

     label3:
        i0 = i0 + -1;

        goto label2;

     label4:
        virtualinvoke r4.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

        goto label3;

     label5:
        return z0;
    }

    com.android.server.am.ActivityRecord resumedAppLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1;
        com.android.server.am.ActivityRecord r2, $r3;
        com.android.server.am.ProcessRecord $r4, $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        if r1 != null goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        r2 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r2 == null goto label3;

        $r5 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r5 != null goto label1;

     label3:
        r2 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if r2 == null goto label4;

        $r4 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r4 != null goto label1;

     label4:
        $r3 = virtualinvoke r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        return $r3;
    }

    void scheduleDestroyAllActivities(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2;
        int i0, i1;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        com.android.server.am.ActivityStack $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (com.android.server.am.ActivityStack) $r5;

        virtualinvoke $r6.<com.android.server.am.ActivityStack: void scheduleDestroyActivities(com.android.server.am.ProcessRecord,boolean,java.lang.String)>(r1, 0, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    final void scheduleIdleLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendEmptyMessage(int)>(101);

        return;
    }

    void scheduleIdleTimeoutLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        android.os.Message r2;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r3, $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,java.lang.Object)>(100, r1);

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 10000L);

        return;
    }

    final void scheduleResumeTopActivities()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendEmptyMessage(int)>(102);

        return;
    }

    final void scheduleSleepTimeout()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void removeSleepTimeouts()>();

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: boolean sendEmptyMessageDelayed(int,long)>(103, 5000L);

        return;
    }

    void setDismissKeyguard(boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        z0 := @parameter0: boolean;

        r0.<com.android.server.am.ActivityStackSupervisor: boolean mDismissKeyguardOnNextActivity> = z0;

        return;
    }

    void setFocusedStack(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityStack r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        com.android.server.am.TaskRecord $r3, $r4, $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $z0 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isApplicationActivity()>();

        if $z0 == 0 goto label3;

        $r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r3 == null goto label4;

        $r5 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z2 = virtualinvoke $r5.<com.android.server.am.TaskRecord: boolean isApplicationTask()>();

        if $z2 != 0 goto label4;

     label3:
        $i0 = r0.<com.android.server.am.ActivityStackSupervisor: int mStackState>;

        if $i0 == 0 goto label1;

        r0.<com.android.server.am.ActivityStackSupervisor: int mStackState> = 3;

        return;

     label4:
        $r4 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r2 = $r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z1 = virtualinvoke r2.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z1 == 0 goto label5;

        r2 = null;

     label5:
        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mFocusedStack> = r2;

        $i1 = r0.<com.android.server.am.ActivityStackSupervisor: int mStackState>;

        if $i1 == 2 goto label1;

        r0.<com.android.server.am.ActivityStackSupervisor: int mStackState> = 1;

        return;
    }

    void setWindowManager(com.android.server.wm.WindowManagerService)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.am.ActivityStack $r2, $r6;
        android.os.Looper $r3;
        android.content.Context $r4;
        com.android.server.am.ActivityManagerService $r5;
        java.util.ArrayList $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager> = r1;

        $r2 = new com.android.server.am.ActivityStack;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor: android.content.Context mContext>;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.os.Looper mLooper>;

        specialinvoke $r2.<com.android.server.am.ActivityStack: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.os.Looper,int)>($r5, $r4, $r3, 0);

        r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack> = $r2;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        return;
    }

    boolean shutdownLocked(int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i2, $i6;
        long l1, l3, $l4, $l5, $l8;
        boolean z0, z1, $z2;
        java.util.ArrayList $r2, $r5;
        byte $b7;
        com.android.server.am.ActivityManagerService $r3;
        java.lang.Object $r4;
        com.android.server.am.ActivityStack $r6;
        java.lang.InterruptedException $r7;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void goingToSleepLocked()>();

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = (long) i0;

        l1 = $l4 + $l5;

     label1:
        z0 = 0;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i6 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = -1 + $i6;

     label2:
        if i2 < 0 goto label3;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r4 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r6 = (com.android.server.am.ActivityStack) $r4;

        $z2 = virtualinvoke $r6.<com.android.server.am.ActivityStack: boolean checkReadyForSleepLocked()>();

        z0 = z0 | $z2;

        i2 = i2 + -1;

        goto label2;

     label3:
        z1 = 0;

        if z0 == 0 goto label8;

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l3 = l1 - $l8;

        $b7 = l3 cmp 0L;

        if $b7 <= 0 goto label7;

     label4:
        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r3.<java.lang.Object: void wait(long)>(l3);

     label5:
        goto label1;

     label6:
        $r7 := @caughtexception;

        goto label1;

     label7:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Activity manager shutdown timed out");

        z1 = 1;

     label8:
        r0.<com.android.server.am.ActivityStackSupervisor: boolean mSleepTimeout> = 1;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        return z1;

        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    final int startActivities(android.app.IApplicationThread, int, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, android.os.Bundle, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.app.IApplicationThread r1;
        int i0, i1, i2, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r2, $r19, $r21;
        android.content.Intent[] r3;
        java.lang.String[] r4;
        android.os.IBinder r5;
        android.os.Bundle r6, r15;
        long l3;
        java.lang.Throwable r7, r9, $r27, $r30;
        com.android.server.am.ActivityManagerService r8, $r17;
        com.android.server.am.ActivityRecord[] r10;
        boolean z0, $z1;
        android.content.Intent r11, r13, $r18;
        android.content.pm.ActivityInfo r12, r14;
        android.content.ComponentName $r16;
        com.android.server.am.ActivityRecord $r20, $r23;
        android.content.pm.ApplicationInfo $r22;
        java.lang.IllegalArgumentException $r24, $r25, $r26;
        java.lang.NullPointerException $r28, $r29;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.Intent[];

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: android.os.IBinder;

        r6 := @parameter6: android.os.Bundle;

        i1 := @parameter7: int;

        if r3 != null goto label01;

        $r28 = new java.lang.NullPointerException;

        specialinvoke $r28.<java.lang.NullPointerException: void <init>(java.lang.String)>("intents is null");

        throw $r28;

     label01:
        if r4 != null goto label02;

        $r29 = new java.lang.NullPointerException;

        specialinvoke $r29.<java.lang.NullPointerException: void <init>(java.lang.String)>("resolvedTypes is null");

        throw $r29;

     label02:
        $i8 = lengthof r3;

        $i9 = lengthof r4;

        if $i8 == $i9 goto label03;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("intents are length different than resolvedTypes");

        throw $r25;

     label03:
        if i0 < 0 goto label13;

        i2 = -1;

     label04:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        entermonitor r8;

     label06:
        r10 = newarray (com.android.server.am.ActivityRecord)[1];

     label07:
        i5 = 0;

     label08:
        i4 = lengthof r3;

     label09:
        if i5 >= i4 goto label36;

     label10:
        r11 = r3[i5];

     label11:
        if r11 != null goto label15;

     label12:
        i5 = i5 + 1;

        goto label08;

     label13:
        if r1 != null goto label14;

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        goto label04;

     label14:
        i0 = -1;

        i2 = i0;

        goto label04;

     label15:
        if r11 == null goto label21;

     label16:
        $z1 = virtualinvoke r11.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 == 0 goto label21;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r26;

     label17:
        $r27 := @caughtexception;

        r9 = $r27;

     label18:
        exitmonitor r8;

     label19:
        throw r9;

     label20:
        $r30 := @caughtexception;

        r7 = $r30;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r7;

     label21:
        $r16 = virtualinvoke r11.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r16 == null goto label38;

     label22:
        z0 = 1;

     label23:
        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(android.content.Intent)>(r11);

        r13 = $r18;

        $r19 = r4[i5];

        r12 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,java.lang.String,android.os.ParcelFileDescriptor,int)>(r13, $r19, 0, null, null, i1);

        $r17 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r14 = virtualinvoke $r17.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>(r12, i1);

     label24:
        if r14 == null goto label26;

     label25:
        $r22 = r14.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i11 = $r22.<android.content.pm.ApplicationInfo: int flags>;

        $i12 = 268435456 & $i11;

        if $i12 == 0 goto label26;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("FLAG_CANT_SAVE_STATE not supported here");

        throw $r24;

     label26:
        if r6 == null goto label33;

     label27:
        $i10 = lengthof r3;

        i6 = -1 + $i10;

     label28:
        if i5 != i6 goto label33;

        r15 = r6;

     label29:
        $r21 = r4[i5];

        i7 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[])>(r1, r13, $r21, r14, r5, null, -1, i2, i0, r2, 0, r15, z0, r10);

     label30:
        if i7 >= 0 goto label34;

     label31:
        exitmonitor r8;

     label32:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return i7;

     label33:
        r15 = null;

        goto label29;

     label34:
        $r20 = r10[0];

        if $r20 == null goto label40;

        $r23 = r10[0];

        r5 = $r23.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

     label35:
        goto label39;

     label36:
        exitmonitor r8;

     label37:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return 0;

     label38:
        z0 = 0;

        goto label23;

     label39:
        goto label12;

     label40:
        r5 = null;

        goto label39;

        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label21 to label22 with label17;
        catch java.lang.Throwable from label23 to label24 with label17;
        catch java.lang.Throwable from label25 to label26 with label17;
        catch java.lang.Throwable from label27 to label28 with label17;
        catch java.lang.Throwable from label29 to label30 with label17;
        catch java.lang.Throwable from label31 to label32 with label17;
        catch java.lang.Throwable from label34 to label35 with label17;
        catch java.lang.Throwable from label36 to label37 with label17;
    }

    final int startActivityLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.content.pm.ActivityInfo, android.os.IBinder, java.lang.String, int, int, int, java.lang.String, int, android.os.Bundle, boolean, com.android.server.am.ActivityRecord[])
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2, r24;
        java.lang.String r3, r6, r7, r15, r25, $r52, $r58, $r63, $r74, $r82, $r93, $r97, $r99;
        android.content.pm.ActivityInfo r4, $r42;
        android.os.IBinder r5;
        int i0, i1, i2, i3, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i15, $i16, $i18;
        android.os.Bundle r8;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z11;
        com.android.server.am.ActivityRecord[] r9;
        com.android.server.am.ProcessRecord r10;
        com.android.server.am.ActivityRecord r11, r13, r19, $r31, $r36, $r46;
        byte b4;
        com.android.server.am.ActivityStack r12, r21;
        com.android.server.am.ActivityManagerService r14, r18, $r28, $r29, $r32, $r34, $r35, $r37, $r39, $r40, $r41, $r44, $r50, $r87, $r102;
        android.content.pm.ApplicationInfo r16, $r30, $r43, $r49, $r77, $r95, $r100;
        com.android.server.firewall.IntentFirewall r17;
        android.content.res.Configuration r20;
        com.android.server.am.ActivityManagerService$PendingActivityLaunch r22, $r38;
        com.android.server.am.TaskRecord $r26;
        java.lang.StringBuilder r27, $r47, $r48, $r53, $r54, $r55, $r56, $r57, $r59, $r60, $r62, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r76, $r78, $r79, $r80, $r81, $r83, $r84, $r85, $r86, $r88, $r89, $r90, $r91, $r92, $r94, $r96, $r98;
        android.app.IActivityController $r33, $r51;
        java.util.ArrayList $r45;
        java.lang.SecurityException $r61;
        android.content.ComponentName $r75;
        android.os.RemoteException $r101;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.pm.ActivityInfo;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        r7 := @parameter9: java.lang.String;

        i3 := @parameter10: int;

        r8 := @parameter11: android.os.Bundle;

        z0 := @parameter12: boolean;

        r9 := @parameter13: com.android.server.am.ActivityRecord[];

        r10 = null;

        b4 = 0;

        if r1 == null goto label01;

        $r87 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r10 = virtualinvoke $r87.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        if r10 == null goto label07;

        i1 = r10.<com.android.server.am.ProcessRecord: int pid>;

        $r100 = r10.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i2 = $r100.<android.content.pm.ApplicationInfo: int uid>;

     label01:
        if b4 != 0 goto label04;

        if r4 == null goto label08;

        $r95 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i18 = $r95.<android.content.pm.ApplicationInfo: int uid>;

        i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i18);

     label02:
        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("START u");

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r82 = virtualinvoke r2.<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>(1, 1, 1, 0);

        $r81 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        r27 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} from pid ");

        if r10 == null goto label09;

        i10 = r10.<com.android.server.am.ProcessRecord: int pid>;

     label03:
        $r94 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r93);

     label04:
        r11 = null;

        r13 = null;

        if r5 == null goto label05;

        r13 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord isInAnyStackLocked(android.os.IBinder)>(r5);

        r11 = null;

        if r13 == null goto label05;

        r11 = null;

        if i0 < 0 goto label05;

        z5 = r13.<com.android.server.am.ActivityRecord: boolean finishing>;

        r11 = null;

        if z5 != 0 goto label05;

        r11 = r13;

     label05:
        if r11 != null goto label10;

        r12 = null;

     label06:
        $i12 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        $i11 = 33554432 & $i12;

        if $i11 == 0 goto label13;

        if r13 == null goto label13;

        if i0 < 0 goto label11;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r8);

        return -3;

     label07:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r96 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting: ");

        $r97 = virtualinvoke r2.<android.content.Intent: java.lang.String toString()>();

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r99);

        b4 = -4;

        goto label01;

     label08:
        i9 = 0;

        goto label02;

     label09:
        i10 = i1;

        goto label03;

     label10:
        $r26 = r11.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r12 = $r26.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        goto label06;

     label11:
        r11 = r13.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        r6 = r13.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        i0 = r13.<com.android.server.am.ActivityRecord: int requestCode>;

        r13.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = null;

        if r11 == null goto label12;

        virtualinvoke r11.<com.android.server.am.ActivityRecord: void removeResultsLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>(r13, r6, i0);

     label12:
        $i16 = r13.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        if $i16 != i2 goto label13;

        r7 = r13.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

     label13:
        if b4 != 0 goto label14;

        $r75 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r75 != null goto label14;

        b4 = -1;

     label14:
        if b4 != 0 goto label15;

        if r4 != null goto label15;

        b4 = -2;

     label15:
        if b4 == 0 goto label17;

        if r11 == null goto label16;

        virtualinvoke r12.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, r11, r6, i0, 0, null);

     label16:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void setDismissKeyguard(boolean)>(0);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r8);

        return b4;

     label17:
        $r28 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        i5 = virtualinvoke $r28.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.START_ANY_ACTIVITY", i1, i2);

        r14 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r15 = r4.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $r30 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i6 = $r30.<android.content.pm.ApplicationInfo: int uid>;

        z1 = r4.<android.content.pm.ActivityInfo: boolean exported>;

        i7 = virtualinvoke r14.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r15, i1, i2, i6, z1);

        if i5 == 0 goto label21;

        if i7 == 0 goto label21;

        if r11 == null goto label18;

        virtualinvoke r12.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, r11, r6, i0, 0, null);

     label18:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void setDismissKeyguard(boolean)>(0);

        $z11 = r4.<android.content.pm.ActivityInfo: boolean exported>;

        if $z11 != 0 goto label20;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r74 = virtualinvoke r2.<android.content.Intent: java.lang.String toString()>();

        $r71 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r69 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r67 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r80 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not exported from uid ");

        $r77 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i15 = $r77.<android.content.pm.ApplicationInfo: int uid>;

        $r76 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        r25 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r25);

        $r61 = new java.lang.SecurityException;

        specialinvoke $r61.<java.lang.SecurityException: void <init>(java.lang.String)>(r25);

        throw $r61;

     label20:
        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting ");

        $r58 = virtualinvoke r2.<android.content.Intent: java.lang.String toString()>();

        $r57 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r54 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r65 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r63 = r4.<android.content.pm.ActivityInfo: java.lang.String permission>;

        $r64 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        r25 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label21:
        $r29 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r17 = $r29.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall>;

        r16 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $z6 = virtualinvoke r17.<com.android.server.firewall.IntentFirewall: boolean checkStartActivity(android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>(r2, i2, i1, r3, r16);

        if $z6 != 0 goto label28;

        z2 = 1;

     label22:
        $r34 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r33 = $r34.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r33 == null goto label26;

     label23:
        r24 = virtualinvoke r2.<android.content.Intent: android.content.Intent cloneFilter()>();

        $r50 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r51 = $r50.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r49 = r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r52 = $r49.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        z3 = interfaceinvoke $r51.<android.app.IActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>(r24, $r52);

     label24:
        if z3 != 0 goto label29;

        z4 = 1;

     label25:
        z2 = z2 | z4;

     label26:
        if z2 == 0 goto label31;

        if r11 == null goto label27;

        virtualinvoke r12.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, r11, r6, i0, 0, null);

     label27:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void setDismissKeyguard(boolean)>(0);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r8);

        return 0;

     label28:
        z2 = 0;

        goto label22;

     label29:
        z4 = 0;

        goto label25;

     label30:
        $r101 := @caughtexception;

        $r102 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r102.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        goto label26;

     label31:
        r18 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r32 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r20 = $r32.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r31 = new com.android.server.am.ActivityRecord;

        specialinvoke $r31.<com.android.server.am.ActivityRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,java.lang.String,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.content.res.Configuration,com.android.server.am.ActivityRecord,java.lang.String,int,boolean,com.android.server.am.ActivityStackSupervisor)>(r18, r10, i2, r7, r2, r3, r4, r20, r11, r6, i0, z0, r0);

        r19 = $r31;

        if r9 == null goto label32;

        r9[0] = r19;

     label32:
        r21 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        $r36 = r21.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r36 == null goto label33;

        $r46 = r21.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        $r42 = $r46.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r43 = $r42.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r43.<android.content.pm.ApplicationInfo: int uid>;

        if $i13 == i2 goto label34;

     label33:
        $r35 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z7 = virtualinvoke $r35.<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,java.lang.String)>(i1, i2, "Activity start");

        if $z7 != 0 goto label34;

        $r38 = new com.android.server.am.ActivityManagerService$PendingActivityLaunch;

        specialinvoke $r38.<com.android.server.am.ActivityManagerService$PendingActivityLaunch: void <init>(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,int,com.android.server.am.ActivityStack)>(r19, r13, i3, r21);

        r22 = $r38;

        $r44 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r45 = $r44.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingActivityLaunches>;

        virtualinvoke $r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r22);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void setDismissKeyguard(boolean)>(0);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r8);

        return 4;

     label34:
        $r39 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $z9 = $r39.<com.android.server.am.ActivityManagerService: boolean mDidAppSwitch>;

        if $z9 == 0 goto label37;

        $r37 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r37.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime> = 0L;

     label35:
        $r41 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r41.<com.android.server.am.ActivityManagerService: void doPendingActivityLaunchesLocked(boolean)>(0);

        i8 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityUncheckedLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,int,boolean,android.os.Bundle)>(r19, r13, i3, 1, r8);

        $z8 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean allPausedActivitiesComplete()>();

        if $z8 == 0 goto label36;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void dismissKeyguard()>();

     label36:
        return i8;

     label37:
        $r40 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r40.<com.android.server.am.ActivityManagerService: boolean mDidAppSwitch> = 1;

        goto label35;

        catch android.os.RemoteException from label23 to label24 with label30;
    }

    final int startActivityMayWait(android.app.IApplicationThread, int, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, java.lang.String, android.os.ParcelFileDescriptor, android.app.IActivityManager$WaitResult, android.content.res.Configuration, android.os.Bundle, int)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.app.IApplicationThread r1, r20;
        int i0, i1, i2, i3, i4, i6, i7, i8, i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String r2, r4, r6, r7, r21, $r39, $r45, $r54, $r56, $r69, $r73, $r87, $r92, $r93, $r97, $r99;
        android.content.Intent r3, r12, r17, r19, r27, $r35, $r66;
        android.os.IBinder r5;
        android.os.ParcelFileDescriptor r8;
        android.app.IActivityManager$WaitResult r9;
        android.content.res.Configuration r10, $r95;
        android.os.Bundle r11;
        boolean z0, z1, $z2, $z4, $z5, $z8, $z9, $z10, $z11;
        com.android.server.am.ActivityManagerService r13, $r38, $r41, $r48, $r49, $r51, $r53, $r57, $r63, $r75, $r76, $r78, $r94, $r101;
        android.content.pm.ActivityInfo r14, r18, r32, r34, $r43, $r44;
        java.lang.Throwable r15, $r103, $r104, $r109;
        com.android.server.am.ActivityStack r16;
        long l5, $l10;
        com.android.server.am.ActivityRecord r23, r31;
        android.content.ComponentName r24, $r36, $r42, $r47;
        android.content.IIntentSender r26;
        com.android.server.am.ProcessRecord r28, $r50, $r52, $r64, $r74, $r91;
        android.content.pm.ResolveInfo r29;
        java.util.ArrayList $r37, $r40, $r62, $r85;
        android.content.pm.ApplicationInfo $r46, $r55, $r60, $r61, $r100;
        android.content.Intent[] $r58;
        java.lang.String[] $r59;
        android.content.IntentSender $r67;
        java.lang.Class $r70;
        android.content.pm.IPackageManager $r77;
        java.lang.StringBuilder $r79, $r80, $r81, $r82, $r83, $r96, $r98;
        java.lang.Object $r84;
        com.android.server.am.TaskRecord $r88;
        android.os.RemoteException $r102, $r107;
        java.lang.InterruptedException $r105, $r108;
        java.lang.IllegalArgumentException $r106;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.Intent;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.IBinder;

        r6 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        r7 := @parameter9: java.lang.String;

        r8 := @parameter10: android.os.ParcelFileDescriptor;

        r9 := @parameter11: android.app.IActivityManager$WaitResult;

        r10 := @parameter12: android.content.res.Configuration;

        r11 := @parameter13: android.os.Bundle;

        i3 := @parameter14: int;

        if r3 == null goto label01;

        $z11 = virtualinvoke r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z11 == 0 goto label01;

        $r106 = new java.lang.IllegalArgumentException;

        specialinvoke $r106.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r106;

     label01:
        $r36 = virtualinvoke r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r36 == null goto label38;

        z0 = 1;

     label02:
        $r35 = new android.content.Intent;

        specialinvoke $r35.<android.content.Intent: void <init>(android.content.Intent)>(r3);

        r12 = $r35;

        r14 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,java.lang.String,android.os.ParcelFileDescriptor,int)>(r12, r4, i2, r7, r8, i3);

        r13 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        entermonitor r13;

        if i0 < 0 goto label39;

        i4 = -1;

     label03:
        r16 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

     label04:
        if r10 == null goto label63;

     label05:
        $r94 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r95 = $r94.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i18 = virtualinvoke $r95.<android.content.res.Configuration: int diff(android.content.res.Configuration)>(r10);

        if $i18 == 0 goto label63;

     label06:
        z1 = 1;

     label07:
        r16.<com.android.server.am.ActivityStack: boolean mConfigWillChange> = z1;

        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        if r14 == null goto label61;

     label09:
        $r46 = r14.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r46.<android.content.pm.ApplicationInfo: int flags>;

        $i11 = 268435456 & $i12;

        if $i11 == 0 goto label61;

        $r56 = r14.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r55 = r14.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r54 = $r55.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z9 = virtualinvoke $r56.<java.lang.String: boolean equals(java.lang.Object)>($r54);

        if $z9 == 0 goto label61;

        $r51 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r50 = $r51.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r50 == null goto label61;

        $r53 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r52 = $r53.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r60 = $r52.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i14 = $r60.<android.content.pm.ApplicationInfo: int uid>;

        $r61 = r14.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r61.<android.content.pm.ApplicationInfo: int uid>;

        if $i14 != $i13 goto label10;

        $r101 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r91 = $r101.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r93 = $r91.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r92 = r14.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z10 = virtualinvoke $r93.<java.lang.String: boolean equals(java.lang.Object)>($r92);

        if $z10 != 0 goto label61;

     label10:
        i8 = i0;

        if r1 == null goto label14;

     label11:
        $r78 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r28 = virtualinvoke $r78.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

     label12:
        if r28 == null goto label42;

     label13:
        $r100 = r28.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i8 = $r100.<android.content.pm.ApplicationInfo: int uid>;

     label14:
        $r57 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r58 = newarray (android.content.Intent)[1];

        $r58[0] = r12;

        $r59 = newarray (java.lang.String)[1];

        $r59[0] = r4;

        r26 = virtualinvoke $r57.<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(2, "android", i8, i3, null, null, 0, $r58, $r59, 1342177280, null);

        $r66 = new android.content.Intent;

        specialinvoke $r66.<android.content.Intent: void <init>()>();

        r27 = $r66;

     label15:
        if i1 < 0 goto label17;

     label16:
        virtualinvoke r27.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("has_result", 1);

     label17:
        $r67 = new android.content.IntentSender;

        specialinvoke $r67.<android.content.IntentSender: void <init>(android.content.IIntentSender)>(r26);

        virtualinvoke r27.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("intent", $r67);

        $r63 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r64 = $r63.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r62 = $r64.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i15 = virtualinvoke $r62.<java.util.ArrayList: int size()>();

        if $i15 <= 0 goto label18;

        $r75 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r74 = $r75.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r85 = $r74.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r84 = virtualinvoke $r85.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r31 = (com.android.server.am.ActivityRecord) $r84;

        $r87 = r31.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r27.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("cur_app", $r87);

        $r88 = r31.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i17 = $r88.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke r27.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("cur_task", $i17);

     label18:
        $r73 = r14.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        virtualinvoke r27.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("new_app", $r73);

        $i16 = virtualinvoke r12.<android.content.Intent: int getFlags()>();

        virtualinvoke r27.<android.content.Intent: android.content.Intent setFlags(int)>($i16);

        $r70 = class "com/android/internal/app/HeavyWeightSwitcherActivity";

        $r69 = virtualinvoke $r70.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r27.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>("android", $r69);

     label19:
        r17 = r27;

        r4 = null;

        r1 = null;

     label20:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label21:
        i4 = i9;

        z0 = 1;

     label22:
        $r77 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r29 = interfaceinvoke $r77.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r17, null, 66560, i3);

     label23:
        if r29 == null goto label44;

     label24:
        r34 = r29.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label25:
        $r76 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r32 = virtualinvoke $r76.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>(r34, i3);

     label26:
        r18 = r32;

     label27:
        r20 = r1;

        r19 = r17;

        r21 = r4;

        i6 = i0;

     label28:
        i7 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[])>(r20, r19, r21, r18, r5, r6, i1, i4, i6, r2, i2, r11, z0, null);

        $z2 = r16.<com.android.server.am.ActivityStack: boolean mConfigWillChange>;

        if $z2 == 0 goto label29;

        $r49 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r49.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updateConfiguration()");

        r16.<com.android.server.am.ActivityStack: boolean mConfigWillChange> = 0;

        $r48 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r48.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r10, null, 0, 0);

     label29:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

     label30:
        if r9 == null goto label36;

     label31:
        r9.<android.app.IActivityManager$WaitResult: int result> = i7;

     label32:
        if i7 != 0 goto label47;

     label33:
        $r40 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched>;

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label34:
        $r41 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r41.<java.lang.Object: void wait()>();

     label35:
        $z8 = r9.<android.app.IActivityManager$WaitResult: boolean timeout>;

        if $z8 != 0 goto label36;

        $r47 = r9.<android.app.IActivityManager$WaitResult: android.content.ComponentName who>;

        if $r47 == null goto label34;

     label36:
        exitmonitor r13;

     label37:
        return i7;

     label38:
        z0 = 0;

        goto label02;

     label39:
        if r1 != null goto label62;

     label40:
        i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label41:
        goto label03;

     label42:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r83 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r96 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when starting: ");

        $r97 = virtualinvoke r12.<android.content.Intent: java.lang.String toString()>();

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r99);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r11);

        exitmonitor r13;

     label43:
        return -4;

     label44:
        r34 = null;

        goto label25;

     label45:
        $r107 := @caughtexception;

     label46:
        r18 = null;

        r1 = null;

        r4 = null;

        goto label27;

     label47:
        if i7 != 2 goto label36;

     label48:
        r23 = virtualinvoke r16.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        $z5 = r23.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z5 == 0 goto label52;

        r9.<android.app.IActivityManager$WaitResult: boolean timeout> = 0;

        $r42 = new android.content.ComponentName;

        $r43 = r23.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r39 = $r43.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r44 = r23.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r45 = $r44.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r42.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r39, $r45);

        r9.<android.app.IActivityManager$WaitResult: android.content.ComponentName who> = $r42;

        r9.<android.app.IActivityManager$WaitResult: long totalTime> = 0L;

        r9.<android.app.IActivityManager$WaitResult: long thisTime> = 0L;

     label49:
        goto label36;

     label50:
        exitmonitor r13;

     label51:
        throw r15;

     label52:
        $l10 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r9.<android.app.IActivityManager$WaitResult: long thisTime> = $l10;

        $r37 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityVisible>;

        virtualinvoke $r37.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label53:
        $r38 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r38.<java.lang.Object: void wait()>();

     label54:
        $z4 = r9.<android.app.IActivityManager$WaitResult: boolean timeout>;

        if $z4 != 0 goto label36;

        r24 = r9.<android.app.IActivityManager$WaitResult: android.content.ComponentName who>;

     label55:
        if r24 == null goto label53;

        goto label36;

     label56:
        $r103 := @caughtexception;

        r15 = $r103;

        goto label50;

     label57:
        $r104 := @caughtexception;

        r15 = $r104;

        goto label50;

     label58:
        $r105 := @caughtexception;

        goto label54;

     label59:
        $r108 := @caughtexception;

        goto label35;

     label60:
        $r102 := @caughtexception;

        goto label46;

     label61:
        r18 = r14;

        r17 = r12;

        goto label27;

     label62:
        i0 = -1;

        i4 = i0;

        goto label03;

     label63:
        z1 = 0;

        goto label07;

     label64:
        $r109 := @caughtexception;

        r15 = $r109;

        goto label50;

        catch java.lang.Throwable from label03 to label04 with label56;
        catch java.lang.Throwable from label05 to label06 with label56;
        catch java.lang.Throwable from label07 to label08 with label56;
        catch java.lang.Throwable from label09 to label10 with label56;
        catch java.lang.Throwable from label11 to label12 with label56;
        catch java.lang.Throwable from label13 to label14 with label56;
        catch java.lang.Throwable from label14 to label15 with label56;
        catch java.lang.Throwable from label16 to label17 with label56;
        catch java.lang.Throwable from label17 to label18 with label56;
        catch java.lang.Throwable from label18 to label19 with label56;
        catch java.lang.Throwable from label20 to label21 with label57;
        catch android.os.RemoteException from label22 to label23 with label45;
        catch java.lang.Throwable from label22 to label23 with label57;
        catch android.os.RemoteException from label24 to label25 with label45;
        catch java.lang.Throwable from label24 to label25 with label57;
        catch android.os.RemoteException from label25 to label26 with label60;
        catch java.lang.Throwable from label25 to label26 with label64;
        catch java.lang.Throwable from label28 to label29 with label64;
        catch java.lang.Throwable from label29 to label30 with label64;
        catch java.lang.Throwable from label31 to label32 with label64;
        catch java.lang.Throwable from label33 to label34 with label64;
        catch java.lang.InterruptedException from label34 to label35 with label59;
        catch java.lang.Throwable from label34 to label35 with label64;
        catch java.lang.Throwable from label35 to label36 with label64;
        catch java.lang.Throwable from label36 to label37 with label64;
        catch java.lang.Throwable from label40 to label41 with label56;
        catch java.lang.Throwable from label42 to label43 with label56;
        catch java.lang.Throwable from label48 to label49 with label64;
        catch java.lang.Throwable from label50 to label51 with label64;
        catch java.lang.Throwable from label52 to label53 with label64;
        catch java.lang.InterruptedException from label53 to label54 with label58;
        catch java.lang.Throwable from label53 to label54 with label64;
        catch java.lang.Throwable from label54 to label55 with label64;
    }

    final int startActivityUncheckedLocked(com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, int, boolean, android.os.Bundle)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, r2, r5, r9, r13, r15, r19, r20, r23, r24, r25, r28, r33, $r34, $r37, $r40, $r43, $r45, $r66, $r115, $r125, $r128;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i27, $i29, $i30, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i48, $i50, $i52, $i53;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, $z8, $z9, $z11, $z13, $z14, $z17, $z18, $z19, $z20, $z22, $z23;
        android.os.Bundle r3;
        android.content.Intent r4, r7, r27, $r56, $r62, $r78, $r82, $r88, $r93, $r100, $r105, $r107, $r109, $r113, $r119;
        android.content.pm.ActivityInfo r6, r26, $r51, $r85, $r95, $r101, $r106, $r114;
        com.android.server.am.ActivityStack r8, r11, r12, r21, r22, $r44, $r126, $r132;
        com.android.server.am.TaskRecord r10, r14, r17, r18, r29, r30, r31, r32, $r35, $r39, $r50, $r53, $r54, $r61, $r63, $r64, $r69, $r72, $r77, $r79, $r80, $r81, $r83, $r87, $r89, $r91, $r92, $r96, $r97, $r102, $r103, $r108, $r110, $r112, $r116, $r117, $r120, $r121, $r124, $r129, $r130, $r131, $r139;
        java.lang.Object[] r16;
        java.lang.RuntimeException $r36, $r60, $r70, $r73, $r90, $r104;
        java.lang.String $r38, $r41, $r46, $r127, $r141, $r143;
        java.lang.Throwable $r42, $r68, $r71, $r84, $r86, $r122;
        com.android.server.am.UriPermissionOwner $r47;
        com.android.server.wm.WindowManagerService $r48, $r58;
        com.android.server.am.ActivityManagerService $r49, $r55;
        java.lang.Integer $r52, $r59;
        com.android.server.am.ThumbnailHolder $r57;
        android.content.ComponentName $r65, $r67, $r94, $r98, $r99, $r111, $r133, $r134;
        com.android.server.am.ProcessRecord $r74, $r75;
        android.app.IApplicationThread $r76;
        java.lang.StringBuilder $r123, $r135, $r136, $r137, $r138, $r140, $r142, $r144, $r145;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: android.os.Bundle;

        r4 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        i1 = r1.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        i2 = virtualinvoke r4.<android.content.Intent: int getFlags()>();

        $i12 = 262144 & i2;

        if $i12 != 0 goto label23;

        z1 = 1;

     label01:
        r0.<com.android.server.am.ActivityStackSupervisor: boolean mUserLeaving> = z1;

        if z0 != 0 goto label02;

        r1.<com.android.server.am.ActivityRecord: boolean delayedResume> = 1;

     label02:
        $i8 = 16777216 & i2;

        if $i8 == 0 goto label24;

        r5 = r1;

     label03:
        $i9 = i0 & 1;

        if $i9 == 0 goto label05;

        r33 = r2;

        if r33 != null goto label04;

        $r132 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        r33 = virtualinvoke $r132.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>(r5);

     label04:
        $r133 = r33.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r134 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $z23 = virtualinvoke $r133.<android.content.ComponentName: boolean equals(java.lang.Object)>($r134);

        if $z23 != 0 goto label05;

        i0 = i0 & -2;

     label05:
        if r2 != null goto label25;

        $i53 = 268435456 & i2;

        if $i53 != 0 goto label06;

        $r142 = new java.lang.StringBuilder;

        specialinvoke $r142.<java.lang.StringBuilder: void <init>()>();

        $r144 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: ");

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r143 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r143);

        i2 = i2 | 268435456;

     label06:
        if r2 == null goto label29;

        $z22 = r2.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z22 == 0 goto label28;

        i6 = 268435456 & i2;

        r6 = null;

        r7 = null;

        if i6 != 0 goto label07;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r137 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startActivity called from finishing ");

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r135 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; forcing ");

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent.FLAG_ACTIVITY_NEW_TASK for: ");

        $r140 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r141);

        i2 = i2 | 268435456;

        r6 = r2.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r139 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r7 = $r139.<com.android.server.am.TaskRecord: android.content.Intent intent>;

     label07:
        r2 = null;

        r8 = null;

     label08:
        $r37 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r37 == null goto label09;

        $i48 = 268435456 & i2;

        if $i48 == 0 goto label09;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Activity is launching as a new task, so cancelling activity result.");

        $r128 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        $r129 = $r128.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r126 = $r129.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r125 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        $r127 = r1.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        $i47 = r1.<com.android.server.am.ActivityRecord: int requestCode>;

        virtualinvoke $r126.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r125, $r127, $i47, 0, null);

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = null;

     label09:
        $i13 = 268435456 & i2;

        if $i13 == 0 goto label10;

        $i50 = 134217728 & i2;

        if $i50 == 0 goto label11;

     label10:
        $i14 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i14 == 2 goto label11;

        i7 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        z2 = 0;

        z3 = 0;

        r10 = null;

        if i7 != 3 goto label48;

     label11:
        r9 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        z2 = 0;

        z3 = 0;

        r10 = null;

        if r9 != null goto label48;

        $i32 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i32 == 3 goto label30;

        r23 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord findTaskLocked(com.android.server.am.ActivityRecord)>(r1);

     label12:
        z2 = 0;

        z3 = 0;

        r10 = null;

        if r23 == null goto label48;

        $r81 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r81 != null goto label13;

        $r131 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task> = $r131;

     label13:
        $r80 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r21 = $r80.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        r21.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        $z14 = virtualinvoke r21.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>($z14);

        $r83 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r82 = $r83.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r82 != null goto label14;

        $r130 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r114 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke $r130.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>(r4, $r114);

     label14:
        r22 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getLastStack()>();

        if r22 != null goto label31;

        r24 = null;

     label15:
        z3 = 0;

        if r24 == null goto label19;

        $r120 = r24.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r121 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r120 != $r121 goto label16;

        r30 = r24.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r29 = virtualinvoke r22.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        z3 = 0;

        if r30 == r29 goto label19;

     label16:
        $r119 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke $r119.<android.content.Intent: android.content.Intent addFlags(int)>(4194304);

        if r2 == null goto label17;

        r28 = virtualinvoke r8.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topActivity()>();

        z3 = 0;

        if r28 == null goto label19;

        $r115 = virtualinvoke r8.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topActivity()>();

        r32 = $r115.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r31 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        z3 = 0;

        if r32 != r31 goto label19;

     label17:
        z3 = 1;

        $r117 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r21.<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle)>($r117, r1, r3);

        $i45 = 268451840 & i2;

        if $i45 != 268451840 goto label18;

        $r116 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r116.<com.android.server.am.TaskRecord: boolean mOnTopOfHome> = 1;

     label18:
        r3 = null;

     label19:
        $i38 = 2097152 & i2;

        if $i38 == 0 goto label20;

        r23 = virtualinvoke r21.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord resetTaskIfNeededLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>(r23, r1);

     label20:
        $i39 = i0 & 1;

        if $i39 == 0 goto label33;

        if z0 == 0 goto label32;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>(r21, null, r3);

     label21:
        $r103 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r103 != null goto label22;

        $r104 = new java.lang.RuntimeException;

        specialinvoke $r104.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        $r122 = virtualinvoke $r104.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "startActivityUncheckedLocked: task left null", $r122);

     label22:
        return 1;

     label23:
        z1 = 0;

        goto label01;

     label24:
        r5 = null;

        goto label03;

     label25:
        $i10 = r2.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i10 != 3 goto label26;

        i2 = i2 | 268435456;

        goto label06;

     label26:
        $i11 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i11 == 3 goto label27;

        $i52 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i52 != 2 goto label06;

     label27:
        i2 = i2 | 268435456;

        goto label06;

     label28:
        $r124 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r8 = $r124.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        r6 = null;

        r7 = null;

        goto label08;

     label29:
        r6 = null;

        r7 = null;

        r8 = null;

        goto label08;

     label30:
        $r85 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        r23 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent,android.content.pm.ActivityInfo)>(r4, $r85);

        goto label12;

     label31:
        r24 = virtualinvoke r22.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>(r5);

        goto label15;

     label32:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        goto label21;

     label33:
        $i36 = 268468224 & i2;

        if $i36 != 268468224 goto label37;

        r10 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r10.<com.android.server.am.TaskRecord: void performClearTaskLocked()>();

        r27 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        r26 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke r10.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>(r27, r26);

     label34:
        if z2 != 0 goto label48;

        if r10 != null goto label48;

        if z0 == 0 goto label47;

        virtualinvoke r21.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord,android.os.Bundle)>(null, r3);

     label35:
        $r89 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r89 != null goto label36;

        $r90 = new java.lang.RuntimeException;

        specialinvoke $r90.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        $r86 = virtualinvoke $r90.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "startActivityUncheckedLocked: task left null", $r86);

     label36:
        return 2;

     label37:
        $i37 = 67108864 & i2;

        if $i37 != 0 goto label38;

        $i43 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i43 == 2 goto label38;

        $i42 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i42 != 3 goto label41;

     label38:
        $r91 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r25 = virtualinvoke $r91.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord performClearTaskLocked(com.android.server.am.ActivityRecord,int)>(r1, i2);

        if r25 == null goto label40;

        $z17 = r25.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z17 == 0 goto label39;

        $r102 = r25.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r100 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r101 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke $r102.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>($r100, $r101);

     label39:
        $r87 = r25.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r1, $r87);

        $r88 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r25.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r88);

        z2 = 0;

        r10 = null;

        goto label34;

     label40:
        z2 = 1;

        r2 = r23;

        r10 = null;

        goto label34;

     label41:
        $r98 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r97 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r99 = $r97.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $z18 = virtualinvoke $r98.<android.content.ComponentName: boolean equals(java.lang.Object)>($r99);

        if $z18 == 0 goto label45;

        $i40 = 536870912 & i2;

        if $i40 != 0 goto label42;

        $i44 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i44 != 1 goto label44;

     label42:
        $r111 = r23.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r94 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $z20 = virtualinvoke $r111.<android.content.ComponentName: boolean equals(java.lang.Object)>($r94);

        if $z20 == 0 goto label44;

        $r110 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r1, $r110);

        $z19 = r23.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z19 == 0 goto label43;

        $r108 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r107 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r106 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke $r108.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>($r107, $r106);

     label43:
        $r105 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r23.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r105);

        z2 = 0;

        r10 = null;

        goto label34;

     label44:
        $r109 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r112 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r113 = $r112.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        z6 = virtualinvoke $r109.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r113);

        z2 = 0;

        r10 = null;

        if z6 != 0 goto label34;

        z2 = 1;

        r2 = r23;

        r10 = null;

        goto label34;

     label45:
        $i41 = 2097152 & i2;

        if $i41 != 0 goto label46;

        z2 = 1;

        r2 = r23;

        r10 = null;

        goto label34;

     label46:
        $r96 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        z7 = $r96.<com.android.server.am.TaskRecord: boolean rootWasReset>;

        z2 = 0;

        r10 = null;

        if z7 != 0 goto label34;

        $r92 = r23.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r93 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r95 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        virtualinvoke $r92.<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>($r93, $r95);

        z2 = 0;

        r10 = null;

        goto label34;

     label47:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        goto label35;

     label48:
        $r38 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        if $r38 == null goto label54;

        r11 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        r13 = virtualinvoke r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>(r5);

        if r13 == null goto label57;

        $r66 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r66 != null goto label57;

        $r67 = r13.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r65 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $z11 = virtualinvoke $r67.<android.content.ComponentName: boolean equals(java.lang.Object)>($r65);

        if $z11 == 0 goto label57;

        $i24 = r13.<com.android.server.am.ActivityRecord: int userId>;

        $i25 = r1.<com.android.server.am.ActivityRecord: int userId>;

        if $i24 != $i25 goto label57;

        $r74 = r13.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r74 == null goto label57;

        $r75 = r13.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r76 = $r75.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r76 == null goto label57;

        $i29 = 536870912 & i2;

        if $i29 != 0 goto label49;

        $i34 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i34 == 1 goto label49;

        $i33 = r1.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i33 != 2 goto label57;

     label49:
        $r77 = r13.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r13, $r77);

        r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        if z0 == 0 goto label50;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label50:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        $i30 = i0 & 1;

        if $i30 == 0 goto label52;

        $r72 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r72 != null goto label51;

        $r73 = new java.lang.RuntimeException;

        specialinvoke $r73.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        $r84 = virtualinvoke $r73.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "startActivityUncheckedLocked: task left null", $r84);

     label51:
        return 1;

     label52:
        $r78 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r13.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r78);

        $r79 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r79 != null goto label53;

        $r70 = new java.lang.RuntimeException;

        specialinvoke $r70.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        $r71 = virtualinvoke $r70.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "startActivityUncheckedLocked: task left null", $r71);

     label53:
        return 3;

     label54:
        $r34 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r34 == null goto label55;

        $r43 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        $r39 = $r43.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r44 = $r39.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r40 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        $r41 = r1.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        $i15 = r1.<com.android.server.am.ActivityRecord: int requestCode>;

        virtualinvoke $r44.<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(-1, $r40, $r41, $i15, 0, null);

     label55:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        $r35 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r35 != null goto label56;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        $r42 = virtualinvoke $r36.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "startActivityUncheckedLocked: task left null", $r42);

     label56:
        return -2;

     label57:
        $r45 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r45 != null goto label66;

        if z2 != 0 goto label66;

        $i27 = 268435456 & i2;

        if $i27 == 0 goto label66;

        r12 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack adjustStackFocus(com.android.server.am.ActivityRecord)>(r1);

        $z13 = virtualinvoke r12.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>($z13);

        if r10 != null goto label65;

        i5 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int getNextTaskId()>();

        if r6 == null goto label63;

     label58:
        if r7 == null goto label64;

     label59:
        $r64 = virtualinvoke r12.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord createTaskRecord(int,android.content.pm.ActivityInfo,android.content.Intent,boolean)>(i5, r6, r7, 1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.ThumbnailHolder,boolean)>($r64, null, 1);

     label60:
        z5 = 1;

        z4 = 0;

        if z3 != 0 goto label61;

        i4 = 268451840 & i2;

        z4 = 0;

        if i4 != 268451840 goto label61;

        $r69 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r69.<com.android.server.am.TaskRecord: boolean mOnTopOfHome> = 1;

     label61:
        $r49 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r46 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r47 = virtualinvoke r1.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>();

        virtualinvoke $r49.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner)>(i1, $r46, r4, $r47);

        if z5 == 0 goto label62;

        r16 = newarray (java.lang.Object)[2];

        $i20 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        r16[0] = $r52;

        $r53 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i19 = $r53.<com.android.server.am.TaskRecord: int taskId>;

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        r16[1] = $r59;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30004, r16);

     label62:
        $r54 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30005, r1, $r54);

        r12.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        virtualinvoke r12.<com.android.server.am.ActivityStack: void startActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean,boolean,android.os.Bundle)>(r1, z5, z0, z4, r3);

        $r55 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r55.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        return 0;

     label63:
        r6 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        goto label58;

     label64:
        r7 = r4;

        goto label59;

     label65:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.ThumbnailHolder,boolean)>(r10, r10, 1);

        goto label60;

     label66:
        if r2 == null goto label72;

        r17 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r12 = r17.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z9 = virtualinvoke r12.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>($z9);

        $r58 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $i21 = r17.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r58.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i21);

        if z2 != 0 goto label69;

        $i23 = 67108864 & i2;

        if $i23 == 0 goto label69;

        r20 = virtualinvoke r17.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord performClearTaskLocked(com.android.server.am.ActivityRecord,int)>(r1, i2);

        z4 = 1;

        if r20 == null goto label71;

        $r63 = r20.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r1, $r63);

        $r62 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r20.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r62);

        r12.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        if z0 == 0 goto label67;

        virtualinvoke r12.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label67:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        $r61 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r61 != null goto label68;

        $r60 = new java.lang.RuntimeException;

        specialinvoke $r60.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        $r68 = virtualinvoke $r60.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "startActivityUncheckedLocked: task left null", $r68);

     label68:
        return 3;

     label69:
        z4 = 0;

        if z2 != 0 goto label71;

        i3 = 131072 & i2;

        z4 = 0;

        if i3 == 0 goto label71;

        r19 = virtualinvoke r17.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord findActivityInHistoryLocked(com.android.server.am.ActivityRecord)>(r1);

        z4 = 0;

        if r19 == null goto label71;

        r18 = r19.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r18.<com.android.server.am.TaskRecord: void moveActivityToFrontLocked(com.android.server.am.ActivityRecord)>(r19);

        staticinvoke <com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>(30003, r1, r18);

        virtualinvoke r19.<com.android.server.am.ActivityRecord: void updateOptionsLocked(android.os.Bundle)>(r3);

        $r56 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke r19.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>(i1, $r56);

        r12.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        if z0 == 0 goto label70;

        virtualinvoke r12.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label70:
        return 3;

     label71:
        $r57 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.ThumbnailHolder,boolean)>(r17, $r57, 0);

        z5 = 0;

        goto label61;

     label72:
        r12 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack adjustStackFocus(com.android.server.am.ActivityRecord)>(r1);

        $z8 = virtualinvoke r12.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>($z8);

        r15 = virtualinvoke r12.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topActivity()>();

        if r15 == null goto label74;

        r14 = r15.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

     label73:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.ThumbnailHolder,boolean)>(r14, null, 1);

        $r48 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r50 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i18 = $r50.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r48.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i18);

        z5 = 0;

        z4 = 0;

        goto label61;

     label74:
        $i17 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int getNextTaskId()>();

        $r51 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        r14 = virtualinvoke r12.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord createTaskRecord(int,android.content.pm.ActivityInfo,android.content.Intent,boolean)>($i17, $r51, r4, 1);

        goto label73;
    }

    void startHomeActivity(android.content.Intent, android.content.pm.ActivityInfo)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeToTop()>();

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[])>(null, r1, null, r2, null, null, 0, 0, 0, null, 0, null, 0, null);

        return;
    }

    void startSpecificActivityLocked(com.android.server.am.ActivityRecord, boolean, boolean)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0, z1, $z4;
        com.android.server.am.ProcessRecord r2;
        android.os.RemoteException r3, $r24;
        android.content.pm.ActivityInfo $r4, $r10, $r18, $r19, $r22;
        android.content.pm.ApplicationInfo $r5, $r13;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r14, $r23, $r25, $r26, $r31, $r33;
        com.android.server.am.ActivityManagerService $r7, $r11, $r21;
        com.android.server.am.TaskRecord $r8;
        com.android.server.am.ActivityStack $r9;
        android.content.Intent $r12, $r28;
        android.content.ComponentName $r15, $r32;
        android.app.IApplicationThread $r16;
        com.android.server.am.ProcessStatsService $r20;
        java.lang.StringBuilder $r27, $r29, $r30;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r6 = r1.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        $r4 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        r2 = virtualinvoke $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r6, $i0, 1);

        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r9 = $r8.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r9.<com.android.server.am.ActivityStack: void setLaunchTime(com.android.server.am.ActivityRecord)>(r1);

        if r2 == null goto label6;

        $r16 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label6;

     label1:
        $r18 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i1 = $r18.<android.content.pm.ActivityInfo: int flags>;

        $i2 = 1 & $i1;

        if $i2 == 0 goto label2;

        $r26 = "android";

        $r22 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r25 = $r22.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z4 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z4 != 0 goto label3;

     label2:
        $r19 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r23 = $r19.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r21 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r20 = $r21.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,com.android.server.am.ProcessStatsService)>($r23, $r20);

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean realStartActivityLocked(com.android.server.am.ActivityRecord,com.android.server.am.ProcessRecord,boolean,boolean)>(r1, r2, z0, z1);

     label4:
        return;

     label5:
        $r24 := @caughtexception;

        r3 = $r24;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception when starting activity ");

        $r28 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r32 = virtualinvoke $r28.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r33 = virtualinvoke $r32.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r31, r3);

     label6:
        $r11 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r14 = r1.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        $r10 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r13 = $r10.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r12 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r15 = virtualinvoke $r12.<android.content.Intent: android.content.ComponentName getComponent()>();

        virtualinvoke $r11.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>($r14, $r13, 1, 0, "activity", $r15, 0, 0, 1);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label2 to label3 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    boolean switchUserLocked(int, com.android.server.am.UserStartedState)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        com.android.server.am.UserStartedState r1;
        com.android.server.am.ActivityStack r2, $r4, $r12;
        boolean z0;
        android.util.SparseIntArray $r3, $r5;
        java.util.ArrayList $r6, $r7, $r11;
        com.android.server.wm.WindowManagerService $r8;
        com.android.server.am.TaskRecord $r9;
        java.lang.Object $r10;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.UserStartedState;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront>;

        $i3 = r0.<com.android.server.am.ActivityStackSupervisor: int mCurrentUser>;

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        $i4 = virtualinvoke $r4.<com.android.server.am.ActivityStack: int getStackId()>();

        virtualinvoke $r3.<android.util.SparseIntArray: void put(int,int)>($i3, $i4);

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: android.util.SparseIntArray mUserStackInFront>;

        i1 = virtualinvoke $r5.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        r0.<com.android.server.am.ActivityStackSupervisor: int mCurrentUser> = i0;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStartingUsers>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i5 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i2 = -1 + $i5;

     label1:
        if i2 < 0 goto label2;

        $r11 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r12 = (com.android.server.am.ActivityStack) $r10;

        virtualinvoke $r12.<com.android.server.am.ActivityStack: void switchUserLocked(int)>(i0);

        i2 = i2 + -1;

        goto label1;

     label2:
        r2 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i1);

        if r2 != null goto label3;

        r2 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack mHomeStack>;

     label3:
        z0 = virtualinvoke r2.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>(z0);

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.wm.WindowManagerService mWindowManager>;

        $r9 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        $i6 = $r9.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i6);

        return z0;
    }

    com.android.server.am.ActivityRecord topRunningActivityLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityStack r1, r4;
        com.android.server.am.ActivityRecord r2, r3, r5;
        int i0, $i1;
        java.util.ArrayList $r6, $r7;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        r2 = virtualinvoke r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 == null goto label2;

        r3 = r2;

     label1:
        return r3;

     label2:
        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label3:
        r3 = null;

        if i0 < 0 goto label1;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ActivityStack) $r8;

        if r4 == r1 goto label4;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r4);

        if $z0 == 0 goto label4;

        r5 = virtualinvoke r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r5 == null goto label4;

        return r5;

     label4:
        i0 = i0 + -1;

        goto label3;
    }

    void updatePreviousProcessLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStackSupervisor r0;
        com.android.server.am.ActivityRecord r1, r4, $r17, $r18, $r19;
        int i0, $i1;
        com.android.server.am.ProcessRecord r2, $r6, $r7, $r10, $r11, $r13;
        com.android.server.am.ActivityStack r3;
        java.util.ArrayList $r5, $r16;
        com.android.server.am.ActivityManagerService $r8, $r9, $r12, $r14;
        long $l2, $l3, $l5;
        byte $b4;
        java.lang.Object $r15;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        r2 = null;

        if i0 < 0 goto label2;

        $r16 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r15 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActivityStack) $r15;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r3);

        if $z0 == 0 goto label5;

        $r17 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r17 == null goto label4;

        $r18 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        r2 = $r18.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

     label2:
        $r6 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label3;

        if r2 == null goto label3;

        $r7 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == r2 goto label3;

        $l3 = r1.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $l2 = $r8.<com.android.server.am.ActivityManagerService: long mPreviousProcessVisibleTime>;

        $b4 = $l3 cmp $l2;

        if $b4 <= 0 goto label3;

        $r10 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r11 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if $r10 == $r11 goto label3;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $r13 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r12.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess> = $r13;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        $l5 = r1.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        $r14.<com.android.server.am.ActivityManagerService: long mPreviousProcessVisibleTime> = $l5;

     label3:
        return;

     label4:
        r4 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        r2 = null;

        if r4 == null goto label2;

        $r19 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        r2 = $r19.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        goto label2;

     label5:
        i0 = i0 + -1;

        goto label1;
    }

    void validateTopActivitiesLocked()
    {
        com.android.server.am.ActivityStackSupervisor r0;
        int i0, $i1;
        com.android.server.am.ActivityStack r1;
        com.android.server.am.ActivityRecord r2, r4, r5;
        com.android.server.am.ActivityStack$ActivityState r3, $r10, $r16, $r22, $r23;
        java.util.ArrayList $r6, $r7;
        java.lang.Object $r8;
        boolean $z0;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r39;
        java.lang.String $r14, $r24, $r28, $r34, $r40;

        r0 := @this: com.android.server.am.ActivityStackSupervisor;

        $r6 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label01:
        if i0 < 0 goto label10;

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStacks>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.ActivityStack) $r8;

        r2 = virtualinvoke r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 != null goto label04;

        r3 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYED>;

     label02:
        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r1);

        if $z0 == 0 goto label07;

        if r2 != null goto label05;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validateTop...: null top activity, stack=");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r40);

     label03:
        i0 = i0 + -1;

        goto label01;

     label04:
        r3 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        goto label02;

     label05:
        r5 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if r5 == null goto label06;

        if r5 != r2 goto label06;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validateTop...: top stack has pausing activity r=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r34);

     label06:
        $r22 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState INITIALIZING>;

        if r3 == $r22 goto label03;

        $r23 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if r3 == $r23 goto label03;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validateTop...: activity in front not resumed r=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r28);

        goto label03;

     label07:
        r4 = r1.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r4 == null goto label08;

        if r4 != r2 goto label08;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validateTop...: back stack has resumed activity r=");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r24);

     label08:
        if r2 == null goto label03;

        $r10 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState INITIALIZING>;

        if r3 == $r10 goto label09;

        $r16 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if r3 != $r16 goto label03;

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("validateTop...: activity in back resumed r=");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state=");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        goto label03;

     label10:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActivityStackSupervisor: int STACK_STATE_HOME_TO_FRONT> = 3;

        <com.android.server.am.ActivityStackSupervisor: int STACK_STATE_HOME_TO_BACK> = 1;

        <com.android.server.am.ActivityStackSupervisor: int STACK_STATE_HOME_IN_FRONT> = 0;

        <com.android.server.am.ActivityStackSupervisor: int STACK_STATE_HOME_IN_BACK> = 2;

        <com.android.server.am.ActivityStackSupervisor: int SLEEP_TIMEOUT_MSG> = 103;

        <com.android.server.am.ActivityStackSupervisor: int SLEEP_TIMEOUT> = 5000;

        <com.android.server.am.ActivityStackSupervisor: int RESUME_TOP_ACTIVITY_MSG> = 102;

        <com.android.server.am.ActivityStackSupervisor: int LAUNCH_TIMEOUT_MSG> = 104;

        <com.android.server.am.ActivityStackSupervisor: int LAUNCH_TIMEOUT> = 10000;

        <com.android.server.am.ActivityStackSupervisor: int IDLE_TIMEOUT_MSG> = 100;

        <com.android.server.am.ActivityStackSupervisor: int IDLE_TIMEOUT> = 10000;

        <com.android.server.am.ActivityStackSupervisor: int IDLE_NOW_MSG> = 101;

        <com.android.server.am.ActivityStackSupervisor: int HOME_STACK_ID> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_STATES> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_SAVED_STATE> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_IDLE> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_APP> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG_ADD_REMOVE> = 0;

        <com.android.server.am.ActivityStackSupervisor: boolean DEBUG> = 0;

        return;
    }
}
