public class java.lang.Package extends java.lang.Object implements java.lang.reflect.AnnotatedElement
{
    private static final java.lang.annotation.Annotation[] NO_ANNOTATIONS;
    private final java.lang.String implTitle;
    private final java.lang.String implVendor;
    private final java.lang.String implVersion;
    private final java.lang.String name;
    private final java.net.URL sealBase;
    private final java.lang.String specTitle;
    private final java.lang.String specVendor;
    private final java.lang.String specVersion;

    static void <clinit>()
    {
        java.lang.annotation.Annotation[] $r0;

        $r0 = newarray (java.lang.annotation.Annotation)[0];

        <java.lang.Package: java.lang.annotation.Annotation[] NO_ANNOTATIONS> = $r0;

        return;
    }

    void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)
    {
        java.lang.Package r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7;
        java.net.URL r8;

        r0 := @this: java.lang.Package;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.net.URL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.lang.Package: java.lang.String name> = r1;

        r0.<java.lang.Package: java.lang.String specTitle> = r2;

        r0.<java.lang.Package: java.lang.String specVersion> = r3;

        r0.<java.lang.Package: java.lang.String specVendor> = r4;

        r0.<java.lang.Package: java.lang.String implTitle> = r5;

        r0.<java.lang.Package: java.lang.String implVersion> = r6;

        r0.<java.lang.Package: java.lang.String implVendor> = r7;

        r0.<java.lang.Package: java.net.URL sealBase> = r8;

        return;
    }

    public static java.lang.Package getPackage(java.lang.String)
    {
        java.lang.String r0;
        java.lang.ClassLoader r1;
        java.lang.Package $r2;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <dalvik.system.VMStack: java.lang.ClassLoader getCallingClassLoader()>();

        if r1 != null goto label1;

        r1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label1:
        $r2 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>(r0);

        return $r2;
    }

    public static java.lang.Package[] getPackages()
    {
        java.lang.ClassLoader r0;
        java.lang.Package[] $r1;

        r0 = staticinvoke <dalvik.system.VMStack: java.lang.ClassLoader getCallingClassLoader()>();

        if r0 != null goto label1;

        r0 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label1:
        $r1 = virtualinvoke r0.<java.lang.ClassLoader: java.lang.Package[] getPackages()>();

        return $r1;
    }

    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.Package r0;
        java.lang.Class r1;
        java.lang.annotation.Annotation[] r2;
        int i0, i1;
        java.lang.annotation.Annotation r3;
        boolean $z0;

        r0 := @this: java.lang.Package;

        r1 := @parameter0: java.lang.Class;

        r2 = virtualinvoke r0.<java.lang.Package: java.lang.annotation.Annotation[] getAnnotations()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.annotation.Annotation[] getAnnotations()
    {
        java.lang.Package r0;
        java.lang.annotation.Annotation[] r2, $r10;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        java.lang.Class $r8;
        java.lang.Exception $r9;

        r0 := @this: java.lang.Package;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Package: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".package-info");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r7);

        r2 = virtualinvoke $r8.<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()>();

     label2:
        return r2;

     label3:
        $r9 := @caughtexception;

        $r10 = <java.lang.Package: java.lang.annotation.Annotation[] NO_ANNOTATIONS>;

        return $r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.annotation.Annotation[] getDeclaredAnnotations()
    {
        java.lang.Package r0;
        java.lang.annotation.Annotation[] $r1;

        r0 := @this: java.lang.Package;

        $r1 = virtualinvoke r0.<java.lang.Package: java.lang.annotation.Annotation[] getAnnotations()>();

        return $r1;
    }

    public java.lang.String getImplementationTitle()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.lang.String implTitle>;

        return $r1;
    }

    public java.lang.String getImplementationVendor()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.lang.String implVendor>;

        return $r1;
    }

    public java.lang.String getImplementationVersion()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.lang.String implVersion>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getSpecificationTitle()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.lang.String specTitle>;

        return $r1;
    }

    public java.lang.String getSpecificationVendor()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.lang.String specVendor>;

        return $r1;
    }

    public java.lang.String getSpecificationVersion()
    {
        java.lang.Package r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.lang.String specVersion>;

        return $r1;
    }

    public int hashCode()
    {
        java.lang.Package r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean isAnnotationPresent(java.lang.Class)
    {
        java.lang.Package r0;
        java.lang.Class r1;
        java.lang.annotation.Annotation $r2;

        r0 := @this: java.lang.Package;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<java.lang.Package: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isCompatibleWith(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.Package r0;
        java.lang.String r1, $r4, $r5, $r6;
        java.lang.String[] r2, r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: java.lang.Package;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r4 = r0.<java.lang.Package: java.lang.String specVersion>;

        r3 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        i0 = 0;

     label1:
        $i4 = lengthof r2;

        $i3 = lengthof r3;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

        if i0 >= $i5 goto label5;

        $r5 = r2[i0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r6 = r3[i0];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        if i1 <= i2 goto label3;

     label2:
        return 0;

     label3:
        if i1 >= i2 goto label4;

        return 1;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        $i7 = lengthof r2;

        $i6 = lengthof r3;

        if $i7 > $i6 goto label2;

        return 1;
    }

    public boolean isSealed()
    {
        java.lang.Package r0;
        java.net.URL $r1;

        r0 := @this: java.lang.Package;

        $r1 = r0.<java.lang.Package: java.net.URL sealBase>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSealed(java.net.URL)
    {
        java.lang.Package r0;
        java.net.URL r1, $r2, $r3;
        boolean $z0;

        r0 := @this: java.lang.Package;

        r1 := @parameter0: java.net.URL;

        $r2 = r0.<java.lang.Package: java.net.URL sealBase>;

        if $r2 == null goto label1;

        $r3 = r0.<java.lang.Package: java.net.URL sealBase>;

        $z0 = virtualinvoke $r3.<java.net.URL: boolean sameFile(java.net.URL)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.Package r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: java.lang.Package;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package ");

        $r3 = r0.<java.lang.Package: java.lang.String name>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
