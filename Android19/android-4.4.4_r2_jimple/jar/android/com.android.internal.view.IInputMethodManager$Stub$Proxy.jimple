class com.android.internal.view.IInputMethodManager$Stub$Proxy extends java.lang.Object implements com.android.internal.view.IInputMethodManager
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addClient(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        com.android.internal.view.IInputContext r2;
        int i0, i1;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r9;
        android.os.IBinder r6, r7, $r8;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: com.android.internal.view.IInputContext;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label02:
        if r1 == null goto label09;

     label03:
        r6 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

     label05:
        r7 = null;

        if r2 == null goto label07;

     label06:
        r7 = interfaceinvoke r2.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r8 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        r6 = null;

        goto label04;

     label10:
        $r9 := @caughtexception;

        r5 = $r9;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        $r1 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void finishInput(com.android.internal.view.IInputMethodClient) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label2:
        if r1 == null goto label6;

     label3:
        r5 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r8;
        android.view.inputmethod.InputMethodSubtype r4;
        android.os.IBinder $r5;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r6 = <android.view.inputmethod.InputMethodSubtype: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r4 = (android.view.inputmethod.InputMethodSubtype) $r7;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        r4 = null;

        goto label2;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.util.List getEnabledInputMethodList() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r7;
        java.util.ArrayList r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r6 = <android.view.inputmethod.InputMethodInfo: android.os.Parcelable$Creator CREATOR>;

        r4 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r6);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.util.List getEnabledInputMethodSubtypeList(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        java.lang.String r1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r8;
        byte b0;
        java.util.ArrayList r5;
        android.os.IBinder $r6;
        android.os.Parcelable$Creator $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        b0 = 0;

        if z0 == 0 goto label3;

        b0 = 1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r6 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r7 = <android.view.inputmethod.InputMethodSubtype: android.os.Parcelable$Creator CREATOR>;

        r5 = virtualinvoke r3.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r7);

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getInputMethodList() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r7;
        java.util.ArrayList r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r6 = <android.view.inputmethod.InputMethodInfo: android.os.Parcelable$Creator CREATOR>;

        r4 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r6);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        return "com.android.internal.view.IInputMethodManager";
    }

    public android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r8;
        android.view.inputmethod.InputMethodSubtype r4;
        android.os.IBinder $r5;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r6 = <android.view.inputmethod.InputMethodSubtype: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r4 = (android.view.inputmethod.InputMethodSubtype) $r7;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        r4 = null;

        goto label2;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public java.util.List getShortcutInputMethodsAndSubtypes() throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r8;
        java.util.ArrayList r4;
        android.os.IBinder $r5;
        java.lang.Class $r6;
        java.lang.ClassLoader $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r4 = virtualinvoke r2.<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>($r7);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void hideMySoftInput(android.os.IBinder, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r5;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean hideSoftInput(com.android.internal.view.IInputMethodClient, int, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        int i0, i1;
        android.os.ResultReceiver r2;
        boolean z0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder r6, $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        z0 = 1;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label02:
        if r1 == null goto label10;

     label03:
        r6 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label05:
        if r2 == null goto label11;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        $r7 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label08:
        if i1 == 0 goto label14;

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z0;

     label10:
        r6 = null;

        goto label04;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label12:
        goto label07;

     label13:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label14:
        z0 = 0;

        goto label09;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public boolean notifySuggestionPicked(android.text.style.SuggestionSpan, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.text.style.SuggestionSpan r1;
        java.lang.String r2;
        int i0, i1;
        boolean z0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.text.style.SuggestionSpan;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 = 1;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label02:
        if r1 == null goto label07;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.text.style.SuggestionSpan: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label05:
        if i1 == 0 goto label10;

     label06:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z0;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label04;

     label09:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label10:
        z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[]) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.text.style.SuggestionSpan[] r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.text.style.SuggestionSpan[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r1, 0);

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void removeClient(com.android.internal.view.IInputMethodClient) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label2:
        if r1 == null goto label6;

     label3:
        r5 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void setAdditionalInputMethodSubtypes(java.lang.String, android.view.inputmethod.InputMethodSubtype[]) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        java.lang.String r1;
        android.view.inputmethod.InputMethodSubtype[] r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r2, 0);

        $r6 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.view.inputmethod.InputMethodSubtype r1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        z0 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label02:
        if r1 == null goto label07;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label05:
        if i0 == 0 goto label10;

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label04;

     label09:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void setImeWindowStatus(android.os.IBinder, int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r5;
        int i0, i1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setInputMethod(android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r6;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setInputMethodAndSubtype(android.os.IBinder, java.lang.String, android.view.inputmethod.InputMethodSubtype) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r7;
        java.lang.String r2;
        android.view.inputmethod.InputMethodSubtype r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r8;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.view.inputmethod.InputMethodSubtype;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label2:
        if r3 == null goto label6;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label4:
        $r7 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r8 := @caughtexception;

        r6 = $r8;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean setInputMethodEnabled(java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        java.lang.String r1;
        boolean z0, z1, z3;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0, i1, i2;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if z0 == 0 goto label6;

        z3 = z1;

        i2 = (int) z3;

        i0 = i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        if i1 == 0 goto label7;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label6:
        i0 = 0;

        goto label3;

     label7:
        z1 = 0;

        goto label5;

     label8:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
    }

    public boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r5;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label2:
        z0 = 0;

        if i0 == 0 goto label3;

        z0 = 1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient, java.lang.String) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder r6, $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label2:
        if r1 == null goto label6;

     label3:
        r6 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r7 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label6:
        r6 = null;

        goto label4;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label2:
        if r1 == null goto label6;

     label3:
        r5 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void showMySoftInput(android.os.IBinder, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r5;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean showSoftInput(com.android.internal.view.IInputMethodClient, int, android.os.ResultReceiver) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        int i0, i1;
        android.os.ResultReceiver r2;
        boolean z0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder r6, $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        z0 = 1;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label02:
        if r1 == null goto label10;

     label03:
        r6 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

     label05:
        if r2 == null goto label11;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        $r7 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label08:
        if i1 == 0 goto label14;

     label09:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z0;

     label10:
        r6 = null;

        goto label04;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label12:
        goto label07;

     label13:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label14:
        z0 = 0;

        goto label09;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        com.android.internal.view.IInputContext r2;
        android.view.inputmethod.EditorInfo r3;
        int i0, $i1;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r13;
        android.os.IBinder r7, r8, $r10;
        com.android.internal.view.InputBindResult r9;
        android.os.Parcelable$Creator $r11;
        java.lang.Object $r12;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: com.android.internal.view.IInputContext;

        r3 := @parameter2: android.view.inputmethod.EditorInfo;

        i0 := @parameter3: int;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label02:
        if r1 == null goto label12;

     label03:
        r7 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

     label05:
        r8 = null;

        if r2 == null goto label07;

     label06:
        r8 = interfaceinvoke r2.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label07:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

     label08:
        if r3 == null goto label13;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r10 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r10.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r5.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label16;

        $r11 = <com.android.internal.view.InputBindResult: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r5);

        r9 = (com.android.internal.view.InputBindResult) $r12;

     label11:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return r9;

     label12:
        r7 = null;

        goto label04;

     label13:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        goto label10;

     label15:
        $r13 := @caughtexception;

        r6 = $r13;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label16:
        r9 = null;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public boolean switchToLastInputMethod(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r5;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label2:
        z0 = 0;

        if i0 == 0 goto label3;

        z0 = 1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public boolean switchToNextInputMethod(android.os.IBinder, boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r5;
        boolean z0, z1, z3;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0, i1, i2;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        z1 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

     label2:
        if z0 == 0 goto label6;

        z3 = z1;

        i2 = (int) z3;

        i0 = i2;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label4:
        if i1 == 0 goto label7;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z1;

     label6:
        i0 = 0;

        goto label3;

     label7:
        z1 = 0;

        goto label5;

     label8:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
    }

    public void updateStatusIcon(android.os.IBinder, java.lang.String, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        android.os.IBinder r1, $r6;
        java.lang.String r2;
        int i0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient, android.os.IBinder, int, int, int, android.view.inputmethod.EditorInfo, com.android.internal.view.IInputContext) throws android.os.RemoteException
    {
        com.android.internal.view.IInputMethodManager$Stub$Proxy r0;
        com.android.internal.view.IInputMethodClient r1;
        android.os.IBinder r2, r8, r9, $r11;
        int i0, i1, i2, $i3;
        android.view.inputmethod.EditorInfo r3;
        com.android.internal.view.IInputContext r4;
        android.os.Parcel r5, r6;
        java.lang.Throwable r7, $r14;
        com.android.internal.view.InputBindResult r10;
        java.lang.Object $r12;
        android.os.Parcelable$Creator $r13;

        r0 := @this: com.android.internal.view.IInputMethodManager$Stub$Proxy;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.view.inputmethod.EditorInfo;

        r4 := @parameter6: com.android.internal.view.IInputContext;

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r5.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputMethodManager");

     label02:
        if r1 == null goto label11;

     label03:
        r8 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r8);

        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        if r3 == null goto label12;

     label06:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>(r5, 0);

     label07:
        r9 = null;

        if r4 == null goto label09;

     label08:
        r9 = interfaceinvoke r4.<com.android.internal.view.IInputContext: android.os.IBinder asBinder()>();

     label09:
        virtualinvoke r5.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r9);

        $r11 = r0.<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r11.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r5, r6, 0);

        virtualinvoke r6.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r6.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label15;

        $r13 = <com.android.internal.view.InputBindResult: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r6);

        r10 = (com.android.internal.view.InputBindResult) $r12;

     label10:
        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        return r10;

     label11:
        r8 = null;

        goto label04;

     label12:
        virtualinvoke r5.<android.os.Parcel: void writeInt(int)>(0);

     label13:
        goto label07;

     label14:
        $r14 := @caughtexception;

        r7 = $r14;

        virtualinvoke r6.<android.os.Parcel: void recycle()>();

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        throw r7;

     label15:
        r10 = null;

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }
}
