public class gov.nist.javax.sip.parser.UserAgentParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r1, $r3;
        int i0, $i1;
        gov.nist.javax.sip.header.UserAgent r2;
        gov.nist.javax.sip.parser.UserAgentParser $r4;
        java.lang.String $r5, $r10, $r12;
        gov.nist.javax.sip.header.SIPHeader $r6;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.io.PrintStream $r8;

        r0 := @parameter0: java.lang.String[];

        $r3 = newarray (java.lang.String)[6];

        $r3[0] = "User-Agent: Softphone/Beta1.5 \n";

        $r3[1] = "User-Agent:Nist/Beta1 (beta version) \n";

        $r3[2] = "User-Agent: Nist UA (beta version)\n";

        $r3[3] = "User-Agent: Nist1.0/Beta2 Ubi/vers.1.0 (very cool) \n";

        $r3[4] = "User-Agent: SJphone/1.60.299a/L (SJ Labs)\n";

        $r3[5] = "User-Agent: sipXecs/3.5.11 sipXecs/sipxbridge (Linux)\n";

        r1 = $r3;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r4 = new gov.nist.javax.sip.parser.UserAgentParser;

        $r5 = r1[i0];

        specialinvoke $r4.<gov.nist.javax.sip.parser.UserAgentParser: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r4.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        r2 = (gov.nist.javax.sip.header.UserAgent) $r6;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoded = ");

        $r10 = virtualinvoke r2.<gov.nist.javax.sip.header.UserAgent: java.lang.String encode()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        gov.nist.javax.sip.header.UserAgent r1, $r7;
        java.lang.Throwable r2, $r32;
        java.lang.String r3, r5, r6, $r18, $r34;
        java.lang.StringBuffer r4, $r15;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r8, $r9, $r10, $r11, $r13, $r14, $r17, $r20, $r23, $r25;
        char $c0, $c1, $c2, $c3;
        gov.nist.javax.sip.parser.Lexer $r12, $r22;
        int $i4;
        gov.nist.core.Token $r16;
        java.text.ParseException $r24, $r27, $r31;
        java.lang.StringBuilder $r28, $r29, $r30, $r33;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        $z0 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_enter(java.lang.String)>("UserAgentParser.parse");

     label01:
        $r7 = new gov.nist.javax.sip.header.UserAgent;

        specialinvoke $r7.<gov.nist.javax.sip.header.UserAgent: void <init>()>();

        r1 = $r7;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void headerName(int)>(2065);

        $r8 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 10 goto label05;

        $r31 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("empty header");

        throw $r31;

     label03:
        $r32 := @caughtexception;

        r2 = $r32;

        $z2 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z2 == 0 goto label04;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_leave(java.lang.String)>("UserAgentParser.parse");

     label04:
        throw r2;

     label05:
        $r9 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r9.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label17;

        $r10 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r10.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 == 0 goto label17;

        $r11 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r11.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 40 goto label08;

        $r25 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r6 = virtualinvoke $r25.<gov.nist.core.LexerCore: java.lang.String comment()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.UserAgent: void addProductToken(java.lang.String)>($r34);

     label06:
        $r17 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: void SPorHT()>();

     label07:
        goto label05;

     label08:
        $r12 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        virtualinvoke $r12.<gov.nist.javax.sip.parser.Lexer: void SPorHT()>();

        $r13 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r13.<gov.nist.core.LexerCore: java.lang.String byteStringNoSlash()>();

     label09:
        if r3 != null goto label11;

     label10:
        $r24 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("Expected product string");

        throw $r24;

     label11:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>(java.lang.String)>(r3);

        r4 = $r15;

        $r14 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $r16 = virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token peekNextToken()>();

        $i4 = virtualinvoke $r16.<gov.nist.core.Token: int getTokenType()>();

        if $i4 != 47 goto label15;

        $r20 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(47);

        $r22 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        virtualinvoke $r22.<gov.nist.javax.sip.parser.Lexer: void SPorHT()>();

        $r23 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r5 = virtualinvoke $r23.<gov.nist.core.LexerCore: java.lang.String byteStringNoSlash()>();

     label12:
        if r5 != null goto label14;

     label13:
        $r27 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("Expected product version");

        throw $r27;

     label14:
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

     label15:
        $r18 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.UserAgent: void addProductToken(java.lang.String)>($r18);

     label16:
        goto label06;

     label17:
        $z1 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z1 == 0 goto label18;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_leave(java.lang.String)>("UserAgentParser.parse");

     label18:
        return r1;

        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label05 to label06 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label08 to label09 with label03;
        catch java.lang.Throwable from label10 to label11 with label03;
        catch java.lang.Throwable from label11 to label12 with label03;
        catch java.lang.Throwable from label13 to label14 with label03;
        catch java.lang.Throwable from label14 to label15 with label03;
        catch java.lang.Throwable from label15 to label16 with label03;
    }
}
