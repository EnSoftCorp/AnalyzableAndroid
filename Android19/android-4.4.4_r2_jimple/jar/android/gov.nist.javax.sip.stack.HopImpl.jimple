public final class gov.nist.javax.sip.stack.HopImpl extends java.lang.Object implements javax.sip.address.Hop, java.io.Serializable
{
    protected boolean defaultRoute;
    protected java.lang.String host;
    protected int port;
    protected java.lang.String transport;
    protected boolean uriRoute;

    void <init>(java.lang.String) throws java.lang.IllegalArgumentException
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        java.lang.String r1, r2, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r18, $r20, $r22, $r23, $r24, $r25, $r26, $r27;
        short s0;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13;
        java.lang.IllegalArgumentException $r5, $r19, $r21, $r28, $r30;
        java.lang.StringBuilder $r14, $r15, $r17;
        java.io.PrintStream $r16;
        char $c8;
        boolean $z0;
        java.lang.NumberFormatException $r29;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        r1 := @parameter0: java.lang.String;

        s0 = 5060;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label01;

        $r30 = new java.lang.IllegalArgumentException;

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null arg!");

        throw $r30;

     label01:
        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(93);

        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(58, i1);

        i3 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(47, i2);

        if i2 <= 0 goto label07;

        $r26 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = $r26;

        if i3 <= 0 goto label05;

        $i13 = i2 + 1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i13, i3);

        $i12 = i3 + 1;

        $r27 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i12);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = $r27;

     label02:
        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        r0.<gov.nist.javax.sip.stack.HopImpl: int port> = $i10;

     label03:
        $r4 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        if $r4 == null goto label04;

        $r6 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i4 != 0 goto label10;

     label04:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no host!");

        throw $r5;

     label05:
        $i11 = i2 + 1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i11);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = "UDP";

        goto label02;

     label06:
        $r29 := @caughtexception;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad port spec");

        throw $r28;

     label07:
        if i3 <= 0 goto label09;

        $r22 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = $r22;

        $i9 = i3 + 1;

        $r25 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i9);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = $r25;

        $r24 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $z0 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TLS");

        if $z0 == 0 goto label08;

        s0 = 5061;

     label08:
        r0.<gov.nist.javax.sip.stack.HopImpl: int port> = s0;

        goto label03;

     label09:
        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = r1;

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = "UDP";

        r0.<gov.nist.javax.sip.stack.HopImpl: int port> = s0;

        goto label03;

     label10:
        $r7 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = $r9;

        $r8 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $r11 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = $r11;

        if i1 <= 0 goto label11;

        $r23 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $c8 = virtualinvoke $r23.<java.lang.String: char charAt(int)>(0);

        if $c8 == 91 goto label11;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad IPv6 reference spec");

        throw $r21;

     label11:
        $r10 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $i5 = virtualinvoke $r10.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("UDP");

        if $i5 == 0 goto label12;

        $r12 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $i6 = virtualinvoke $r12.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("TLS");

        if $i6 == 0 goto label12;

        $r13 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $i7 = virtualinvoke $r13.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("TCP");

        if $i7 == 0 goto label12;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad transport string ");

        $r18 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r19;

     label12:
        return;

        catch java.lang.NumberFormatException from label02 to label03 with label06;
    }

    public void <init>(java.lang.String, int, java.lang.String)
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        java.lang.String r1, r2, $r3, $r4, $r7, $r10;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = r1;

        $r3 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i1 < 0 goto label1;

        $r4 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $i2 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("[");

        if $i2 >= 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = $r10;

     label1:
        r0.<gov.nist.javax.sip.stack.HopImpl: int port> = i0;

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = r2;

        return;
    }

    public java.lang.String getHost()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $r1 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        return $r1;
    }

    public int getPort()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $i0 = r0.<gov.nist.javax.sip.stack.HopImpl: int port>;

        return $i0;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $r1 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        return $r1;
    }

    public boolean isURIRoute()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $z0 = r0.<gov.nist.javax.sip.stack.HopImpl: boolean uriRoute>;

        return $z0;
    }

    public void setURIRouteFlag()
    {
        gov.nist.javax.sip.stack.HopImpl r0;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        r0.<gov.nist.javax.sip.stack.HopImpl: boolean uriRoute> = 1;

        return;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r2, $r7, $r9;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r0.<gov.nist.javax.sip.stack.HopImpl: int port>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
