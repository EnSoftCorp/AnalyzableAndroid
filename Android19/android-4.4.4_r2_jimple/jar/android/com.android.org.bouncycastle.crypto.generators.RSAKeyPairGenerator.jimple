public class com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator extends java.lang.Object implements com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator
{
    private static final java.math.BigInteger ONE;
    private com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param;

    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator r0;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.math.BigInteger r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r12, $r16, $r18, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r31, $r32, $r33, $r35, $r36, $r37, $r39, $r41, $r42;
        com.android.org.bouncycastle.crypto.params.RSAKeyParameters r11, $r40;
        com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair r13, $r43;
        com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters $r14, $r15, $r17, $r21, $r26, $r34, $r38;
        java.security.SecureRandom $r19, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters $r44;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        $r14 = r0.<com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        i0 = virtualinvoke $r14.<com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getStrength()>();

        $i4 = i0 + 1;

        i1 = $i4 / 2;

        i2 = i0 - i1;

        i3 = i0 / 3;

        $r15 = r0.<com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        r1 = virtualinvoke $r15.<com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.math.BigInteger getPublicExponent()>();

     label1:
        $r16 = new java.math.BigInteger;

        $r17 = r0.<com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $r19 = virtualinvoke $r17.<com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>();

        specialinvoke $r16.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i1, 1, $r19);

        r2 = $r16;

        $r18 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1);

        $r20 = <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z0 = virtualinvoke $r18.<java.math.BigInteger: boolean equals(java.lang.Object)>($r20);

        if $z0 != 0 goto label1;

        $r21 = r0.<com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i5 = virtualinvoke $r21.<com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>();

        $z1 = virtualinvoke r2.<java.math.BigInteger: boolean isProbablePrime(int)>($i5);

        if $z1 == 0 goto label1;

        $r24 = <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r22 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r24);

        $r23 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r22);

        $r27 = <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z2 = virtualinvoke $r23.<java.math.BigInteger: boolean equals(java.lang.Object)>($r27);

        if $z2 == 0 goto label1;

     label2:
        $r25 = new java.math.BigInteger;

        $r26 = r0.<com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $r30 = virtualinvoke $r26.<com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>();

        specialinvoke $r25.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i2, 1, $r30);

        r3 = $r25;

        $r28 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r2);

        $r29 = virtualinvoke $r28.<java.math.BigInteger: java.math.BigInteger abs()>();

        $i6 = virtualinvoke $r29.<java.math.BigInteger: int bitLength()>();

        if $i6 < i3 goto label2;

        $r32 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r1);

        $r31 = <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z3 = virtualinvoke $r32.<java.math.BigInteger: boolean equals(java.lang.Object)>($r31);

        if $z3 != 0 goto label2;

        $r34 = r0.<com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i7 = virtualinvoke $r34.<com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>();

        $z4 = virtualinvoke r3.<java.math.BigInteger: boolean isProbablePrime(int)>($i7);

        if $z4 == 0 goto label2;

        $r33 = <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r37 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r33);

        $r36 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r37);

        $r35 = <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z5 = virtualinvoke $r36.<java.math.BigInteger: boolean equals(java.lang.Object)>($r35);

        if $z5 == 0 goto label2;

        r4 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r3);

        $i9 = virtualinvoke r4.<java.math.BigInteger: int bitLength()>();

        $r38 = r0.<com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i8 = virtualinvoke $r38.<com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getStrength()>();

        if $i9 != $i8 goto label4;

        $i10 = virtualinvoke r2.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r3);

        if $i10 >= 0 goto label3;

        r12 = r2;

        r2 = r3;

        r3 = r12;

     label3:
        $r39 = <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        r5 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r39);

        $r41 = <com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        r6 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r41);

        $r42 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r6);

        r7 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r42);

        r8 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>(r5);

        r9 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>(r6);

        r10 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>(r2);

        $r40 = new com.android.org.bouncycastle.crypto.params.RSAKeyParameters;

        specialinvoke $r40.<com.android.org.bouncycastle.crypto.params.RSAKeyParameters: void <init>(boolean,java.math.BigInteger,java.math.BigInteger)>(0, r4, r1);

        r11 = $r40;

        $r43 = new com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair;

        $r44 = new com.android.org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters;

        specialinvoke $r44.<com.android.org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>(r4, r1, r7, r2, r3, r8, r9, r10);

        specialinvoke $r43.<com.android.org.bouncycastle.crypto.AsymmetricCipherKeyPair: void <init>(com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter,com.android.org.bouncycastle.crypto.params.AsymmetricKeyParameter)>(r11, $r44);

        r13 = $r43;

        return r13;

     label4:
        r2 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger max(java.math.BigInteger)>(r3);

        goto label2;
    }

    public void init(com.android.org.bouncycastle.crypto.KeyGenerationParameters)
    {
        com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator r0;
        com.android.org.bouncycastle.crypto.KeyGenerationParameters r1;
        com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.KeyGenerationParameters;

        $r2 = (com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters) r1;

        r0.<com.android.org.bouncycastle.crypto.generators.RSAKeyPairGenerator: com.android.org.bouncycastle.crypto.params.RSAKeyGenerationParameters param> = $r2;

        return;
    }
}
