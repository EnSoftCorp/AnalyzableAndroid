public class org.apache.xml.utils.XMLChar extends java.lang.Object
{
    private static final byte[] CHARS;
    public static final int MASK_CONTENT;
    public static final int MASK_NAME;
    public static final int MASK_NAME_START;
    public static final int MASK_NCNAME;
    public static final int MASK_NCNAME_START;
    public static final int MASK_PUBID;
    public static final int MASK_SPACE;
    public static final int MASK_VALID;

    static void <clinit>()
    {
        int[] r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i39, $i40, $i41, $i42, $i50, $i57, $i58, $i62, $i65, $i66, $i76, $i81, $i82, $i87, $i88, $i89, $i96;
        byte[] r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, $r27, r28, $r43, $r44;
        byte $b38, $b44, $b45, $b46, $b47, $b48, $b49, $b51, $b52, $b53, $b54, $b55, $b60, $b61, $b63, $b68, $b69, $b70, $b72, $b73, $b75, $b77, $b78, $b80, $b83, $b85, $b86, $b90, $b91, $b92, $b94, $b95, $b97, $b98, $b99;
        short $s43, $s56, $s59, $s64, $s67, $s71, $s74, $s79, $s84, $s93;

        <org.apache.xml.utils.XMLChar: int MASK_VALID> = 1;

        <org.apache.xml.utils.XMLChar: int MASK_SPACE> = 2;

        <org.apache.xml.utils.XMLChar: int MASK_PUBID> = 16;

        <org.apache.xml.utils.XMLChar: int MASK_NCNAME_START> = 64;

        <org.apache.xml.utils.XMLChar: int MASK_NCNAME> = 128;

        <org.apache.xml.utils.XMLChar: int MASK_NAME_START> = 4;

        <org.apache.xml.utils.XMLChar: int MASK_NAME> = 8;

        <org.apache.xml.utils.XMLChar: int MASK_CONTENT> = 32;

        $r27 = newarray (byte)[65536];

        <org.apache.xml.utils.XMLChar: byte[] CHARS> = $r27;

        $r32 = newarray (int)[8];

        $r32[0] = 9;

        $r32[1] = 10;

        $r32[2] = 13;

        $r32[3] = 13;

        $r32[4] = 32;

        $r32[5] = 55295;

        $r32[6] = 57344;

        $r32[7] = 65533;

        r0 = $r32;

        $r31 = newarray (int)[4];

        $r31[0] = 32;

        $r31[1] = 9;

        $r31[2] = 13;

        $r31[3] = 10;

        r1 = $r31;

        $r30 = newarray (int)[2];

        $r30[0] = 45;

        $r30[1] = 46;

        r2 = $r30;

        $r29 = newarray (int)[2];

        $r29[0] = 58;

        $r29[1] = 95;

        r3 = $r29;

        $r36 = newarray (int)[9];

        $r36[0] = 10;

        $r36[1] = 13;

        $r36[2] = 32;

        $r36[3] = 33;

        $r36[4] = 35;

        $r36[5] = 36;

        $r36[6] = 37;

        $r36[7] = 61;

        $r36[8] = 95;

        r4 = $r36;

        $r35 = newarray (int)[6];

        $r35[0] = 39;

        $r35[1] = 59;

        $r35[2] = 63;

        $r35[3] = 90;

        $r35[4] = 97;

        $r35[5] = 122;

        r5 = $r35;

        $r34 = newarray (int)[302];

        $r34[0] = 65;

        $r34[1] = 90;

        $r34[2] = 97;

        $r34[3] = 122;

        $r34[4] = 192;

        $r34[5] = 214;

        $r34[6] = 216;

        $r34[7] = 246;

        $r34[8] = 248;

        $r34[9] = 305;

        $r34[10] = 308;

        $r34[11] = 318;

        $r34[12] = 321;

        $r34[13] = 328;

        $r34[14] = 330;

        $r34[15] = 382;

        $r34[16] = 384;

        $r34[17] = 451;

        $r34[18] = 461;

        $r34[19] = 496;

        $r34[20] = 500;

        $r34[21] = 501;

        $r34[22] = 506;

        $r34[23] = 535;

        $r34[24] = 592;

        $r34[25] = 680;

        $r34[26] = 699;

        $r34[27] = 705;

        $r34[28] = 904;

        $r34[29] = 906;

        $r34[30] = 910;

        $r34[31] = 929;

        $r34[32] = 931;

        $r34[33] = 974;

        $r34[34] = 976;

        $r34[35] = 982;

        $r34[36] = 994;

        $r34[37] = 1011;

        $r34[38] = 1025;

        $r34[39] = 1036;

        $r34[40] = 1038;

        $r34[41] = 1103;

        $r34[42] = 1105;

        $r34[43] = 1116;

        $r34[44] = 1118;

        $r34[45] = 1153;

        $r34[46] = 1168;

        $r34[47] = 1220;

        $r34[48] = 1223;

        $r34[49] = 1224;

        $r34[50] = 1227;

        $r34[51] = 1228;

        $r34[52] = 1232;

        $r34[53] = 1259;

        $r34[54] = 1262;

        $r34[55] = 1269;

        $r34[56] = 1272;

        $r34[57] = 1273;

        $r34[58] = 1329;

        $r34[59] = 1366;

        $r34[60] = 1377;

        $r34[61] = 1414;

        $r34[62] = 1488;

        $r34[63] = 1514;

        $r34[64] = 1520;

        $r34[65] = 1522;

        $r34[66] = 1569;

        $r34[67] = 1594;

        $r34[68] = 1601;

        $r34[69] = 1610;

        $r34[70] = 1649;

        $r34[71] = 1719;

        $r34[72] = 1722;

        $r34[73] = 1726;

        $r34[74] = 1728;

        $r34[75] = 1742;

        $r34[76] = 1744;

        $r34[77] = 1747;

        $r34[78] = 1765;

        $r34[79] = 1766;

        $r34[80] = 2309;

        $r34[81] = 2361;

        $r34[82] = 2392;

        $r34[83] = 2401;

        $r34[84] = 2437;

        $r34[85] = 2444;

        $r34[86] = 2447;

        $r34[87] = 2448;

        $r34[88] = 2451;

        $r34[89] = 2472;

        $r34[90] = 2474;

        $r34[91] = 2480;

        $r34[92] = 2486;

        $r34[93] = 2489;

        $r34[94] = 2524;

        $r34[95] = 2525;

        $r34[96] = 2527;

        $r34[97] = 2529;

        $r34[98] = 2544;

        $r34[99] = 2545;

        $r34[100] = 2565;

        $r34[101] = 2570;

        $r34[102] = 2575;

        $r34[103] = 2576;

        $r34[104] = 2579;

        $r34[105] = 2600;

        $r34[106] = 2602;

        $r34[107] = 2608;

        $r34[108] = 2610;

        $r34[109] = 2611;

        $r34[110] = 2613;

        $r34[111] = 2614;

        $r34[112] = 2616;

        $r34[113] = 2617;

        $r34[114] = 2649;

        $r34[115] = 2652;

        $r34[116] = 2674;

        $r34[117] = 2676;

        $r34[118] = 2693;

        $r34[119] = 2699;

        $r34[120] = 2703;

        $r34[121] = 2705;

        $r34[122] = 2707;

        $r34[123] = 2728;

        $r34[124] = 2730;

        $r34[125] = 2736;

        $r34[126] = 2738;

        $r34[127] = 2739;

        $r34[128] = 2741;

        $r34[129] = 2745;

        $r34[130] = 2821;

        $r34[131] = 2828;

        $r34[132] = 2831;

        $r34[133] = 2832;

        $r34[134] = 2835;

        $r34[135] = 2856;

        $r34[136] = 2858;

        $r34[137] = 2864;

        $r34[138] = 2866;

        $r34[139] = 2867;

        $r34[140] = 2870;

        $r34[141] = 2873;

        $r34[142] = 2908;

        $r34[143] = 2909;

        $r34[144] = 2911;

        $r34[145] = 2913;

        $r34[146] = 2949;

        $r34[147] = 2954;

        $r34[148] = 2958;

        $r34[149] = 2960;

        $r34[150] = 2962;

        $r34[151] = 2965;

        $r34[152] = 2969;

        $r34[153] = 2970;

        $r34[154] = 2974;

        $r34[155] = 2975;

        $r34[156] = 2979;

        $r34[157] = 2980;

        $r34[158] = 2984;

        $r34[159] = 2986;

        $r34[160] = 2990;

        $r34[161] = 2997;

        $r34[162] = 2999;

        $r34[163] = 3001;

        $r34[164] = 3077;

        $r34[165] = 3084;

        $r34[166] = 3086;

        $r34[167] = 3088;

        $r34[168] = 3090;

        $r34[169] = 3112;

        $r34[170] = 3114;

        $r34[171] = 3123;

        $r34[172] = 3125;

        $r34[173] = 3129;

        $r34[174] = 3168;

        $r34[175] = 3169;

        $r34[176] = 3205;

        $r34[177] = 3212;

        $r34[178] = 3214;

        $r34[179] = 3216;

        $r34[180] = 3218;

        $r34[181] = 3240;

        $r34[182] = 3242;

        $r34[183] = 3251;

        $r34[184] = 3253;

        $r34[185] = 3257;

        $r34[186] = 3296;

        $r34[187] = 3297;

        $r34[188] = 3333;

        $r34[189] = 3340;

        $r34[190] = 3342;

        $r34[191] = 3344;

        $r34[192] = 3346;

        $r34[193] = 3368;

        $r34[194] = 3370;

        $r34[195] = 3385;

        $r34[196] = 3424;

        $r34[197] = 3425;

        $r34[198] = 3585;

        $r34[199] = 3630;

        $r34[200] = 3634;

        $r34[201] = 3635;

        $r34[202] = 3648;

        $r34[203] = 3653;

        $r34[204] = 3713;

        $r34[205] = 3714;

        $r34[206] = 3719;

        $r34[207] = 3720;

        $r34[208] = 3732;

        $r34[209] = 3735;

        $r34[210] = 3737;

        $r34[211] = 3743;

        $r34[212] = 3745;

        $r34[213] = 3747;

        $r34[214] = 3754;

        $r34[215] = 3755;

        $r34[216] = 3757;

        $r34[217] = 3758;

        $r34[218] = 3762;

        $r34[219] = 3763;

        $r34[220] = 3776;

        $r34[221] = 3780;

        $r34[222] = 3904;

        $r34[223] = 3911;

        $r34[224] = 3913;

        $r34[225] = 3945;

        $r34[226] = 4256;

        $r34[227] = 4293;

        $r34[228] = 4304;

        $r34[229] = 4342;

        $r34[230] = 4354;

        $r34[231] = 4355;

        $r34[232] = 4357;

        $r34[233] = 4359;

        $r34[234] = 4363;

        $r34[235] = 4364;

        $r34[236] = 4366;

        $r34[237] = 4370;

        $r34[238] = 4436;

        $r34[239] = 4437;

        $r34[240] = 4447;

        $r34[241] = 4449;

        $r34[242] = 4461;

        $r34[243] = 4462;

        $r34[244] = 4466;

        $r34[245] = 4467;

        $r34[246] = 4526;

        $r34[247] = 4527;

        $r34[248] = 4535;

        $r34[249] = 4536;

        $r34[250] = 4540;

        $r34[251] = 4546;

        $r34[252] = 7680;

        $r34[253] = 7835;

        $r34[254] = 7840;

        $r34[255] = 7929;

        $r34[256] = 7936;

        $r34[257] = 7957;

        $r34[258] = 7960;

        $r34[259] = 7965;

        $r34[260] = 7968;

        $r34[261] = 8005;

        $r34[262] = 8008;

        $r34[263] = 8013;

        $r34[264] = 8016;

        $r34[265] = 8023;

        $r34[266] = 8031;

        $r34[267] = 8061;

        $r34[268] = 8064;

        $r34[269] = 8116;

        $r34[270] = 8118;

        $r34[271] = 8124;

        $r34[272] = 8130;

        $r34[273] = 8132;

        $r34[274] = 8134;

        $r34[275] = 8140;

        $r34[276] = 8144;

        $r34[277] = 8147;

        $r34[278] = 8150;

        $r34[279] = 8155;

        $r34[280] = 8160;

        $r34[281] = 8172;

        $r34[282] = 8178;

        $r34[283] = 8180;

        $r34[284] = 8182;

        $r34[285] = 8188;

        $r34[286] = 8490;

        $r34[287] = 8491;

        $r34[288] = 8576;

        $r34[289] = 8578;

        $r34[290] = 12353;

        $r34[291] = 12436;

        $r34[292] = 12449;

        $r34[293] = 12538;

        $r34[294] = 12549;

        $r34[295] = 12588;

        $r34[296] = 44032;

        $r34[297] = 55203;

        $r34[298] = 12321;

        $r34[299] = 12329;

        $r34[300] = 19968;

        $r34[301] = 40869;

        r6 = $r34;

        $r33 = newarray (int)[53];

        $r33[0] = 902;

        $r33[1] = 908;

        $r33[2] = 986;

        $r33[3] = 988;

        $r33[4] = 990;

        $r33[5] = 992;

        $r33[6] = 1369;

        $r33[7] = 1749;

        $r33[8] = 2365;

        $r33[9] = 2482;

        $r33[10] = 2654;

        $r33[11] = 2701;

        $r33[12] = 2749;

        $r33[13] = 2784;

        $r33[14] = 2877;

        $r33[15] = 2972;

        $r33[16] = 3294;

        $r33[17] = 3632;

        $r33[18] = 3716;

        $r33[19] = 3722;

        $r33[20] = 3725;

        $r33[21] = 3749;

        $r33[22] = 3751;

        $r33[23] = 3760;

        $r33[24] = 3773;

        $r33[25] = 4352;

        $r33[26] = 4361;

        $r33[27] = 4412;

        $r33[28] = 4414;

        $r33[29] = 4416;

        $r33[30] = 4428;

        $r33[31] = 4430;

        $r33[32] = 4432;

        $r33[33] = 4441;

        $r33[34] = 4451;

        $r33[35] = 4453;

        $r33[36] = 4455;

        $r33[37] = 4457;

        $r33[38] = 4469;

        $r33[39] = 4510;

        $r33[40] = 4520;

        $r33[41] = 4523;

        $r33[42] = 4538;

        $r33[43] = 4587;

        $r33[44] = 4592;

        $r33[45] = 4601;

        $r33[46] = 8025;

        $r33[47] = 8027;

        $r33[48] = 8029;

        $r33[49] = 8126;

        $r33[50] = 8486;

        $r33[51] = 8494;

        $r33[52] = 12295;

        r7 = $r33;

        $r39 = newarray (int)[132];

        $r39[0] = 768;

        $r39[1] = 837;

        $r39[2] = 864;

        $r39[3] = 865;

        $r39[4] = 1155;

        $r39[5] = 1158;

        $r39[6] = 1425;

        $r39[7] = 1441;

        $r39[8] = 1443;

        $r39[9] = 1465;

        $r39[10] = 1467;

        $r39[11] = 1469;

        $r39[12] = 1473;

        $r39[13] = 1474;

        $r39[14] = 1611;

        $r39[15] = 1618;

        $r39[16] = 1750;

        $r39[17] = 1756;

        $r39[18] = 1757;

        $r39[19] = 1759;

        $r39[20] = 1760;

        $r39[21] = 1764;

        $r39[22] = 1767;

        $r39[23] = 1768;

        $r39[24] = 1770;

        $r39[25] = 1773;

        $r39[26] = 2305;

        $r39[27] = 2307;

        $r39[28] = 2366;

        $r39[29] = 2380;

        $r39[30] = 2385;

        $r39[31] = 2388;

        $r39[32] = 2402;

        $r39[33] = 2403;

        $r39[34] = 2433;

        $r39[35] = 2435;

        $r39[36] = 2496;

        $r39[37] = 2500;

        $r39[38] = 2503;

        $r39[39] = 2504;

        $r39[40] = 2507;

        $r39[41] = 2509;

        $r39[42] = 2530;

        $r39[43] = 2531;

        $r39[44] = 2624;

        $r39[45] = 2626;

        $r39[46] = 2631;

        $r39[47] = 2632;

        $r39[48] = 2635;

        $r39[49] = 2637;

        $r39[50] = 2672;

        $r39[51] = 2673;

        $r39[52] = 2689;

        $r39[53] = 2691;

        $r39[54] = 2750;

        $r39[55] = 2757;

        $r39[56] = 2759;

        $r39[57] = 2761;

        $r39[58] = 2763;

        $r39[59] = 2765;

        $r39[60] = 2817;

        $r39[61] = 2819;

        $r39[62] = 2878;

        $r39[63] = 2883;

        $r39[64] = 2887;

        $r39[65] = 2888;

        $r39[66] = 2891;

        $r39[67] = 2893;

        $r39[68] = 2902;

        $r39[69] = 2903;

        $r39[70] = 2946;

        $r39[71] = 2947;

        $r39[72] = 3006;

        $r39[73] = 3010;

        $r39[74] = 3014;

        $r39[75] = 3016;

        $r39[76] = 3018;

        $r39[77] = 3021;

        $r39[78] = 3073;

        $r39[79] = 3075;

        $r39[80] = 3134;

        $r39[81] = 3140;

        $r39[82] = 3142;

        $r39[83] = 3144;

        $r39[84] = 3146;

        $r39[85] = 3149;

        $r39[86] = 3157;

        $r39[87] = 3158;

        $r39[88] = 3202;

        $r39[89] = 3203;

        $r39[90] = 3262;

        $r39[91] = 3268;

        $r39[92] = 3270;

        $r39[93] = 3272;

        $r39[94] = 3274;

        $r39[95] = 3277;

        $r39[96] = 3285;

        $r39[97] = 3286;

        $r39[98] = 3330;

        $r39[99] = 3331;

        $r39[100] = 3390;

        $r39[101] = 3395;

        $r39[102] = 3398;

        $r39[103] = 3400;

        $r39[104] = 3402;

        $r39[105] = 3405;

        $r39[106] = 3636;

        $r39[107] = 3642;

        $r39[108] = 3655;

        $r39[109] = 3662;

        $r39[110] = 3764;

        $r39[111] = 3769;

        $r39[112] = 3771;

        $r39[113] = 3772;

        $r39[114] = 3784;

        $r39[115] = 3789;

        $r39[116] = 3864;

        $r39[117] = 3865;

        $r39[118] = 3953;

        $r39[119] = 3972;

        $r39[120] = 3974;

        $r39[121] = 3979;

        $r39[122] = 3984;

        $r39[123] = 3989;

        $r39[124] = 3993;

        $r39[125] = 4013;

        $r39[126] = 4017;

        $r39[127] = 4023;

        $r39[128] = 8400;

        $r39[129] = 8412;

        $r39[130] = 12330;

        $r39[131] = 12335;

        r8 = $r39;

        $r40 = newarray (int)[29];

        $r40[0] = 1471;

        $r40[1] = 1476;

        $r40[2] = 1648;

        $r40[3] = 2364;

        $r40[4] = 2381;

        $r40[5] = 2492;

        $r40[6] = 2494;

        $r40[7] = 2495;

        $r40[8] = 2519;

        $r40[9] = 2562;

        $r40[10] = 2620;

        $r40[11] = 2622;

        $r40[12] = 2623;

        $r40[13] = 2748;

        $r40[14] = 2876;

        $r40[15] = 3031;

        $r40[16] = 3415;

        $r40[17] = 3633;

        $r40[18] = 3761;

        $r40[19] = 3893;

        $r40[20] = 3895;

        $r40[21] = 3897;

        $r40[22] = 3902;

        $r40[23] = 3903;

        $r40[24] = 3991;

        $r40[25] = 4025;

        $r40[26] = 8417;

        $r40[27] = 12441;

        $r40[28] = 12442;

        r9 = $r40;

        $r41 = newarray (int)[30];

        $r41[0] = 48;

        $r41[1] = 57;

        $r41[2] = 1632;

        $r41[3] = 1641;

        $r41[4] = 1776;

        $r41[5] = 1785;

        $r41[6] = 2406;

        $r41[7] = 2415;

        $r41[8] = 2534;

        $r41[9] = 2543;

        $r41[10] = 2662;

        $r41[11] = 2671;

        $r41[12] = 2790;

        $r41[13] = 2799;

        $r41[14] = 2918;

        $r41[15] = 2927;

        $r41[16] = 3047;

        $r41[17] = 3055;

        $r41[18] = 3174;

        $r41[19] = 3183;

        $r41[20] = 3302;

        $r41[21] = 3311;

        $r41[22] = 3430;

        $r41[23] = 3439;

        $r41[24] = 3664;

        $r41[25] = 3673;

        $r41[26] = 3792;

        $r41[27] = 3801;

        $r41[28] = 3872;

        $r41[29] = 3881;

        r10 = $r41;

        $r42 = newarray (int)[6];

        $r42[0] = 12337;

        $r42[1] = 12341;

        $r42[2] = 12445;

        $r42[3] = 12446;

        $r42[4] = 12540;

        $r42[5] = 12542;

        r11 = $r42;

        $r37 = newarray (int)[8];

        $r37[0] = 183;

        $r37[1] = 720;

        $r37[2] = 721;

        $r37[3] = 903;

        $r37[4] = 1600;

        $r37[5] = 3654;

        $r37[6] = 3782;

        $r37[7] = 12293;

        r12 = $r37;

        $r38 = newarray (int)[5];

        $r38[0] = 60;

        $r38[1] = 38;

        $r38[2] = 10;

        $r38[3] = 13;

        $r38[4] = 93;

        r13 = $r38;

        i0 = 0;

     label01:
        $i27 = lengthof r0;

        if i0 >= $i27 goto label04;

        i25 = r0[i0];

     label02:
        $i89 = i0 + 1;

        $i88 = r0[$i89];

        if i25 > $i88 goto label03;

        r28 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b91 = r28[i25];

        $b90 = 33 | $b91;

        $b99 = (byte) $b90;

        r28[i25] = $b99;

        i25 = i25 + 1;

        goto label02;

     label03:
        i0 = i0 + 2;

        goto label01;

     label04:
        i1 = 0;

     label05:
        $i28 = lengthof r13;

        if i1 >= $i28 goto label06;

        $r43 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i87 = r13[i1];

        $r44 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $i96 = r13[i1];

        $b98 = $r44[$i96];

        $b86 = -33 & $b98;

        $b85 = (byte) $b86;

        $r43[$i87] = $b85;

        i1 = i1 + 1;

        goto label05;

     label06:
        i3 = 0;

     label07:
        $i33 = lengthof r1;

        if i3 >= $i33 goto label08;

        r24 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        i26 = r1[i3];

        $b95 = r24[i26];

        $b94 = 2 | $b95;

        $b97 = (byte) $b94;

        r24[i26] = $b97;

        i3 = i3 + 1;

        goto label07;

     label08:
        i2 = 0;

     label09:
        $i34 = lengthof r3;

        if i2 >= $i34 goto label10;

        r25 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        i24 = r3[i2];

        $b77 = r25[i24];

        $s93 = 204 | $b77;

        $b92 = (byte) $s93;

        r25[i24] = $b92;

        i2 = i2 + 1;

        goto label09;

     label10:
        i5 = 0;

     label11:
        $i35 = lengthof r6;

        if i5 >= $i35 goto label14;

        i22 = r6[i5];

     label12:
        $i82 = i5 + 1;

        $i81 = r6[$i82];

        if i22 > $i81 goto label13;

        r26 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b80 = r26[i22];

        $s79 = 204 | $b80;

        $b78 = (byte) $s79;

        r26[i22] = $b78;

        i22 = i22 + 1;

        goto label12;

     label13:
        i5 = i5 + 2;

        goto label11;

     label14:
        i4 = 0;

     label15:
        $i36 = lengthof r7;

        if i4 >= $i36 goto label16;

        r23 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        i21 = r7[i4];

        $b69 = r23[i21];

        $s84 = 204 | $b69;

        $b83 = (byte) $s84;

        r23[i21] = $b83;

        i4 = i4 + 1;

        goto label15;

     label16:
        i7 = 0;

     label17:
        $i29 = lengthof r2;

        if i7 >= $i29 goto label18;

        r21 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        i23 = r2[i7];

        $b72 = r21[i23];

        $s71 = 136 | $b72;

        $b70 = (byte) $s71;

        r21[i23] = $b70;

        i7 = i7 + 1;

        goto label17;

     label18:
        i6 = 0;

     label19:
        $i30 = lengthof r10;

        if i6 >= $i30 goto label22;

        i20 = r10[i6];

     label20:
        $i62 = i6 + 1;

        $i76 = r10[$i62];

        if i20 > $i76 goto label21;

        r20 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b75 = r20[i20];

        $s74 = 136 | $b75;

        $b73 = (byte) $s74;

        r20[i20] = $b73;

        i20 = i20 + 1;

        goto label20;

     label21:
        i6 = i6 + 2;

        goto label19;

     label22:
        i9 = 0;

     label23:
        $i31 = lengthof r8;

        if i9 >= $i31 goto label26;

        i19 = r8[i9];

     label24:
        $i65 = i9 + 1;

        $i66 = r8[$i65];

        if i19 > $i66 goto label25;

        r22 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b63 = r22[i19];

        $s64 = 136 | $b63;

        $b61 = (byte) $s64;

        r22[i19] = $b61;

        i19 = i19 + 1;

        goto label24;

     label25:
        i9 = i9 + 2;

        goto label23;

     label26:
        i8 = 0;

     label27:
        $i32 = lengthof r9;

        if i8 >= $i32 goto label28;

        r19 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        i18 = r9[i8];

        $b54 = r19[i18];

        $s67 = 136 | $b54;

        $b68 = (byte) $s67;

        r19[i18] = $b68;

        i8 = i8 + 1;

        goto label27;

     label28:
        i11 = 0;

     label29:
        $i42 = lengthof r11;

        if i11 >= $i42 goto label32;

        i16 = r11[i11];

     label30:
        $i57 = i11 + 1;

        $i58 = r11[$i57];

        if i16 > $i58 goto label31;

        r18 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b55 = r18[i16];

        $s56 = 136 | $b55;

        $b53 = (byte) $s56;

        r18[i16] = $b53;

        i16 = i16 + 1;

        goto label30;

     label31:
        i11 = i11 + 2;

        goto label29;

     label32:
        i10 = 0;

     label33:
        $i41 = lengthof r12;

        if i10 >= $i41 goto label34;

        r17 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        i15 = r12[i10];

        $b47 = r17[i15];

        $s59 = 136 | $b47;

        $b60 = (byte) $s59;

        r17[i15] = $b60;

        i10 = i10 + 1;

        goto label33;

     label34:
        r14 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b44 = r14[58];

        $s43 = -193 & $b44;

        $b38 = (byte) $s43;

        r14[58] = $b38;

        i12 = 0;

     label35:
        $i37 = lengthof r4;

        if i12 >= $i37 goto label36;

        r15 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        i17 = r4[i12];

        $b46 = r15[i17];

        $b45 = 16 | $b46;

        $b48 = (byte) $b45;

        r15[i17] = $b48;

        i12 = i12 + 1;

        goto label35;

     label36:
        i14 = 0;

     label37:
        $i40 = lengthof r5;

        if i14 >= $i40 goto label40;

        i13 = r5[i14];

     label38:
        $i39 = i14 + 1;

        $i50 = r5[$i39];

        if i13 > $i50 goto label39;

        r16 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b49 = r16[i13];

        $b52 = 16 | $b49;

        $b51 = (byte) $b52;

        r16[i13] = $b51;

        i13 = i13 + 1;

        goto label38;

     label39:
        i14 = i14 + 2;

        goto label37;

     label40:
        return;
    }

    public void <init>()
    {
        org.apache.xml.utils.XMLChar r0;

        r0 := @this: org.apache.xml.utils.XMLChar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static char highSurrogate(int)
    {
        int i0, $i1, $i2, $i3;
        char $c4;

        i0 := @parameter0: int;

        $i1 = i0 - 65536;

        $i2 = $i1 >> 10;

        $i3 = 55296 + $i2;

        $c4 = (char) $i3;

        return $c4;
    }

    public static boolean isContent(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = 32 & $b1;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static boolean isHighSurrogate(int)
    {
        int i0;

        i0 := @parameter0: int;

        if 55296 > i0 goto label1;

        if i0 > 56319 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isInvalid(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValid(int)>(i0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isLowSurrogate(int)
    {
        int i0;

        i0 := @parameter0: int;

        if 56320 > i0 goto label1;

        if i0 > 57343 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isMarkup(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 60 goto label1;

        if i0 == 38 goto label1;

        if i0 != 37 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isNCName(int)
    {
        int i0;
        byte[] $r0;
        byte $b1;
        short $s2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $s2 = 128 & $b1;

        if $s2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isNCNameStart(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = 64 & $b1;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isName(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = 8 & $b1;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isNameStart(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = 4 & $b1;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isPubid(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = 16 & $b1;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isSpace(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = 2 & $b1;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isSupplemental(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 < 65536 goto label1;

        if i0 > 1114111 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isValid(int)
    {
        int i0;
        byte[] $r0;
        byte $b1, $b2;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xml.utils.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = 1 & $b1;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public static boolean isValidIANAEncoding(java.lang.String)
    {
        java.lang.String r0;
        int i0, i2;
        char c1, c3;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label7;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 0 goto label7;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if c1 < 65 goto label1;

        if c1 <= 90 goto label2;

     label1:
        if c1 < 97 goto label7;

        if c1 > 122 goto label7;

     label2:
        i2 = 1;

     label3:
        if i2 >= i0 goto label9;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c3 < 65 goto label4;

        if c3 <= 90 goto label8;

     label4:
        if c3 < 97 goto label5;

        if c3 <= 122 goto label8;

     label5:
        if c3 < 48 goto label6;

        if c3 <= 57 goto label8;

     label6:
        if c3 == 46 goto label8;

        if c3 == 95 goto label8;

        if c3 == 45 goto label8;

     label7:
        return 0;

     label8:
        i2 = i2 + 1;

        goto label3;

     label9:
        return 1;
    }

    public static boolean isValidJavaEncoding(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1;
        char c2;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label5;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 0 goto label5;

        i1 = 1;

     label1:
        if i1 >= i0 goto label7;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        if c2 < 65 goto label2;

        if c2 <= 90 goto label6;

     label2:
        if c2 < 97 goto label3;

        if c2 <= 122 goto label6;

     label3:
        if c2 < 48 goto label4;

        if c2 <= 57 goto label6;

     label4:
        if c2 == 46 goto label6;

        if c2 == 95 goto label6;

        if c2 == 45 goto label6;

     label5:
        return 0;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return 1;
    }

    public static boolean isValidNCName(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i3;
        char $c2, $c4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isNCNameStart(int)>($c2);

        if $z0 == 0 goto label1;

        i0 = 1;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i3 goto label4;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isNCName(int)>($c4);

        if $z1 == 0 goto label1;

        i0 = i0 + 1;

        goto label3;

     label4:
        return 1;
    }

    public static boolean isValidName(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i3;
        char $c2, $c4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isNameStart(int)>($c2);

        if $z0 == 0 goto label1;

        i0 = 1;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i3 goto label4;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isName(int)>($c4);

        if $z1 == 0 goto label1;

        i0 = i0 + 1;

        goto label3;

     label4:
        return 1;
    }

    public static boolean isValidNmtoken(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2;
        char $c3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        i0 = 0;

     label3:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i2 goto label4;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isName(int)>($c3);

        if $z0 == 0 goto label1;

        i0 = i0 + 1;

        goto label3;

     label4:
        return 1;
    }

    public static boolean isValidQName(java.lang.String)
    {
        java.lang.String r0, r1, r2;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if i0 == 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = -1 + $i1;

        if i0 != $i2 goto label2;

     label1:
        return 0;

     label2:
        if i0 <= 0 goto label3;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i3 = i0 + 1;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        $z1 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>(r2);

        if $z2 == 0 goto label1;

        return 1;

     label3:
        $z0 = staticinvoke <org.apache.xml.utils.XMLChar: boolean isValidNCName(java.lang.String)>(r0);

        return $z0;
    }

    public static char lowSurrogate(int)
    {
        int i0, $i1, $i2, $i3;
        char $c4;

        i0 := @parameter0: int;

        $i1 = i0 - 65536;

        $i2 = 1023 & $i1;

        $i3 = 56320 + $i2;

        $c4 = (char) $i3;

        return $c4;
    }

    public static int supplemental(char, char)
    {
        char c0, c1;
        int $i2, $i3, $i4, $i5, $i6;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $i2 = c0 - 55296;

        $i4 = 1024 * $i2;

        $i3 = c1 - 56320;

        $i5 = $i4 + $i3;

        $i6 = 65536 + $i5;

        return $i6;
    }
}
