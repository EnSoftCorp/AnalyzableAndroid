public class com.android.internal.telephony.gsm.SmsMessage extends com.android.internal.telephony.SmsMessageBase
{
    static final java.lang.String LOG_TAG;
    private static final boolean VDBG;
    private int mDataCodingScheme;
    private boolean mIsStatusReportMessage;
    private int mMti;
    private int mProtocolIdentifier;
    private com.android.internal.telephony.gsm.GsmSmsAddress mRecipientAddress;
    private boolean mReplyPathPresent;
    private int mStatus;
    private com.android.internal.telephony.SmsConstants$MessageClass messageClass;

    public void <init>()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke r0.<com.android.internal.telephony.SmsMessageBase: void <init>()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mReplyPathPresent> = 0;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsStatusReportMessage> = 0;

        return;
    }

    public static com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <com.android.internal.telephony.GsmAlphabet: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails countGsmSeptets(java.lang.CharSequence,boolean)>(r0, z0);

        if r1 != null goto label2;

        $r2 = new com.android.internal.telephony.GsmAlphabet$TextEncodingDetails;

        specialinvoke $r2.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: void <init>()>();

        r1 = $r2;

        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i0 = 2 * $i1;

        $i2 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitCount> = $i2;

        if i0 <= 140 goto label3;

        $i5 = i0 + 133;

        $i6 = $i5 / 134;

        r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount> = $i6;

        $i7 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        $i8 = 134 * $i7;

        $i9 = $i8 - i0;

        $i10 = $i9 / 2;

        r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitsRemaining> = $i10;

     label1:
        r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize> = 3;

     label2:
        return r1;

     label3:
        r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount> = 1;

        $i3 = 140 - i0;

        $i4 = $i3 / 2;

        r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitsRemaining> = $i4;

        goto label1;
    }

    public static com.android.internal.telephony.gsm.SmsMessage createFromEfRecord(int, byte[])
    {
        int i0, i1, $i6;
        byte[] r0, r3;
        com.android.internal.telephony.gsm.SmsMessage r1, $r4;
        java.lang.RuntimeException r2, $r5;
        byte $b2, $b3, $b4, $b5;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

     label1:
        $r4 = new com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke $r4.<com.android.internal.telephony.gsm.SmsMessage: void <init>()>();

        r1 = $r4;

        r1.<com.android.internal.telephony.gsm.SmsMessage: int mIndexOnIcc> = i0;

        $b2 = r0[0];

        $b3 = 1 & $b2;

        if $b3 != 0 goto label3;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", "SMS parsing failed: Trying to parse a free record");

     label2:
        return null;

     label3:
        $b4 = r0[0];

        $b5 = 7 & $b4;

        r1.<com.android.internal.telephony.gsm.SmsMessage: int mStatusOnIcc> = $b5;

        $i6 = lengthof r0;

        i1 = -1 + $i6;

        r3 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 1, r3, 0, i1);

        specialinvoke r1.<com.android.internal.telephony.gsm.SmsMessage: void parsePdu(byte[])>(r3);

     label4:
        return r1;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "SMS PDU parsing failed: ", r2);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public static com.android.internal.telephony.gsm.SmsMessage createFromPdu(byte[])
    {
        byte[] r0;
        com.android.internal.telephony.gsm.SmsMessage r1, $r4;
        java.lang.OutOfMemoryError r2, $r5;
        java.lang.RuntimeException r3, $r6;

        r0 := @parameter0: byte[];

     label1:
        $r4 = new com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke $r4.<com.android.internal.telephony.gsm.SmsMessage: void <init>()>();

        r1 = $r4;

        specialinvoke r1.<com.android.internal.telephony.gsm.SmsMessage: void parsePdu(byte[])>(r0);

     label2:
        return r1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "SMS PDU parsing failed: ", r3);

        return null;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "SMS PDU parsing failed with out of memory: ", r2);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.OutOfMemoryError from label1 to label2 with label4;
    }

    private static byte[] encodeUCS2(java.lang.String, byte[]) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0;
        byte[] r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15;
        byte $b4, $b10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-16be");

        if r1 == null goto label2;

        $i7 = lengthof r1;

        $i6 = lengthof r2;

        $i8 = $i7 + $i6;

        $i9 = 1 + $i8;

        r3 = newarray (byte)[$i9];

        $i11 = lengthof r1;

        $b10 = (byte) $i11;

        r3[0] = $b10;

        $i13 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 1, $i13);

        $i12 = lengthof r1;

        $i14 = 1 + $i12;

        $i15 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, $i14, $i15);

     label1:
        $i0 = lengthof r3;

        $i1 = 1 + $i0;

        r4 = newarray (byte)[$i1];

        $i2 = lengthof r3;

        $i3 = 255 & $i2;

        $b4 = (byte) $i3;

        r4[0] = $b4;

        $i5 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 1, $i5);

        return r4;

     label2:
        r3 = r2;

        goto label1;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, int, byte[], boolean)
    {
        java.lang.String r0, r1, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        byte[] r2, r5, $r12;
        boolean z0;
        com.android.internal.telephony.SmsHeader$PortAddrs r3, $r8;
        com.android.internal.telephony.SmsHeader r4, $r9;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu r6, $r10;
        java.io.ByteArrayOutputStream r7;
        java.lang.StringBuilder $r11, $r13, $r14, $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        z0 := @parameter4: boolean;

        $r8 = new com.android.internal.telephony.SmsHeader$PortAddrs;

        specialinvoke $r8.<com.android.internal.telephony.SmsHeader$PortAddrs: void <init>()>();

        r3 = $r8;

        r3.<com.android.internal.telephony.SmsHeader$PortAddrs: int destPort> = i0;

        r3.<com.android.internal.telephony.SmsHeader$PortAddrs: int origPort> = 0;

        r3.<com.android.internal.telephony.SmsHeader$PortAddrs: boolean areEightBits> = 0;

        $r9 = new com.android.internal.telephony.SmsHeader;

        specialinvoke $r9.<com.android.internal.telephony.SmsHeader: void <init>()>();

        r4 = $r9;

        r4.<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader$PortAddrs portAddrs> = r3;

        r5 = staticinvoke <com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>(r4);

        $i2 = lengthof r2;

        $i1 = lengthof r5;

        $i3 = $i2 + $i1;

        $i4 = 1 + $i3;

        if $i4 <= 140 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SMS data message may only contain ");

        $i13 = lengthof r5;

        $i12 = 140 - $i13;

        $i14 = -1 + $i12;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r15);

        return null;

     label1:
        $r10 = new com.android.internal.telephony.gsm.SmsMessage$SubmitPdu;

        specialinvoke $r10.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: void <init>()>();

        r6 = $r10;

        r7 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: java.io.ByteArrayOutputStream getSubmitPduHead(java.lang.String,java.lang.String,byte,boolean,com.android.internal.telephony.gsm.SmsMessage$SubmitPdu)>(r0, r1, 65, z0, r6);

        virtualinvoke r7.<java.io.ByteArrayOutputStream: void write(int)>(4);

        $i7 = lengthof r2;

        $i5 = lengthof r5;

        $i6 = $i7 + $i5;

        $i9 = 1 + $i6;

        virtualinvoke r7.<java.io.ByteArrayOutputStream: void write(int)>($i9);

        $i8 = lengthof r5;

        virtualinvoke r7.<java.io.ByteArrayOutputStream: void write(int)>($i8);

        $i11 = lengthof r5;

        virtualinvoke r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r5, 0, $i11);

        $i10 = lengthof r2;

        virtualinvoke r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, $i10);

        $r12 = virtualinvoke r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r6.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedMessage> = $r12;

        return r6;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>(r0, r1, r2, z0, null);

        return $r3;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean, byte[])
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        byte[] r3;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 := @parameter4: byte[];

        $r4 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)>(r0, r1, r2, z0, r3, 0, 0, 0);

        return $r4;
    }

    public static com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean, byte[], int, int, int)
    {
        java.lang.String r0, r1, r2, $r22, $r27, $r40;
        boolean z0;
        byte[] r3, r8, r9, r11, r12, $r18;
        int i0, i1, i2, $i8, $i17, $i18, $i19, $i22;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu r4, $r15;
        byte b3, $b4, $b5, $b7, $b10, $b12, $b15;
        java.io.ByteArrayOutputStream r5;
        java.io.UnsupportedEncodingException r7, r10, $r38, $r41;
        com.android.internal.telephony.SmsHeader r13, r16, $r28;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r14;
        short $s6, $s9, $s13, $s14;
        java.lang.StringBuilder $r17, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        com.android.internal.telephony.EncodeException $r39;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 := @parameter4: byte[];

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        if r2 == null goto label01;

        if r1 != null goto label02;

     label01:
        return null;

     label02:
        if i0 != 0 goto label05;

        r14 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r2, 0);

        i0 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        i1 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        i2 = r14.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        if i0 != 1 goto label05;

        if i1 != 0 goto label03;

        if i2 == 0 goto label05;

     label03:
        if r3 == null goto label10;

        r16 = staticinvoke <com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader fromByteArray(byte[])>(r3);

        $i17 = r16.<com.android.internal.telephony.SmsHeader: int languageTable>;

        if $i17 != i1 goto label04;

        $i22 = r16.<com.android.internal.telephony.SmsHeader: int languageShiftTable>;

        if $i22 == i2 goto label05;

     label04:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating language table in SMS header: ");

        $i18 = r16.<com.android.internal.telephony.SmsHeader: int languageTable>;

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i19 = r16.<com.android.internal.telephony.SmsHeader: int languageShiftTable>;

        $r31 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r40 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r40);

        r16.<com.android.internal.telephony.SmsHeader: int languageTable> = i1;

        r16.<com.android.internal.telephony.SmsHeader: int languageShiftTable> = i2;

        r3 = staticinvoke <com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>(r16);

     label05:
        $r15 = new com.android.internal.telephony.gsm.SmsMessage$SubmitPdu;

        specialinvoke $r15.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: void <init>()>();

        r4 = $r15;

        if r3 == null goto label11;

        b3 = 64;

     label06:
        $b5 = b3 | 1;

        $b4 = (byte) $b5;

        r5 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: java.io.ByteArrayOutputStream getSubmitPduHead(java.lang.String,java.lang.String,byte,boolean,com.android.internal.telephony.gsm.SmsMessage$SubmitPdu)>(r0, r1, $b4, z0, r4);

        if i0 != 1 goto label12;

     label07:
        r11 = staticinvoke <com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)>(r2, r3, i1, i2);

     label08:
        r9 = r11;

     label09:
        if i0 != 1 goto label23;

        $b12 = r9[0];

        $s13 = 255 & $b12;

        if $s13 <= 160 goto label21;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message too long (");

        $b15 = r9[0];

        $s14 = 255 & $b15;

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s14);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" septets)");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r27);

        return null;

     label10:
        $r28 = new com.android.internal.telephony.SmsHeader;

        specialinvoke $r28.<com.android.internal.telephony.SmsHeader: void <init>()>();

        r13 = $r28;

        r13.<com.android.internal.telephony.SmsHeader: int languageTable> = i1;

        r13.<com.android.internal.telephony.SmsHeader: int languageShiftTable> = i2;

        r3 = staticinvoke <com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>(r13);

        goto label05;

     label11:
        b3 = 0;

        goto label06;

     label12:
        r12 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: byte[] encodeUCS2(java.lang.String,byte[])>(r2, r3);

     label13:
        r9 = r12;

        goto label09;

     label14:
        $r38 := @caughtexception;

        r10 = $r38;

     label15:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Implausible UnsupportedEncodingException ", r10);

     label16:
        return null;

     label17:
        $r39 := @caughtexception;

     label18:
        r8 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: byte[] encodeUCS2(java.lang.String,byte[])>(r2, r3);

     label19:
        r9 = r8;

        i0 = 3;

        goto label09;

     label20:
        $r41 := @caughtexception;

        r7 = $r41;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "Implausible UnsupportedEncodingException ", r7);

        return null;

     label21:
        virtualinvoke r5.<java.io.ByteArrayOutputStream: void write(int)>(0);

     label22:
        $i8 = lengthof r9;

        virtualinvoke r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r9, 0, $i8);

        $r18 = virtualinvoke r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r4.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedMessage> = $r18;

        return r4;

     label23:
        $b7 = r9[0];

        $s6 = 255 & $b7;

        if $s6 <= 140 goto label24;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message too long (");

        $b10 = r9[0];

        $s9 = 255 & $b10;

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s9);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r22);

        return null;

     label24:
        virtualinvoke r5.<java.io.ByteArrayOutputStream: void write(int)>(8);

        goto label22;

        catch com.android.internal.telephony.EncodeException from label07 to label08 with label17;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label14;
        catch com.android.internal.telephony.EncodeException from label12 to label13 with label17;
        catch com.android.internal.telephony.EncodeException from label15 to label16 with label17;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label20;
    }

    private static java.io.ByteArrayOutputStream getSubmitPduHead(java.lang.String, java.lang.String, byte, boolean, com.android.internal.telephony.gsm.SmsMessage$SubmitPdu)
    {
        java.lang.String r0, r1;
        byte b0, b2, $b8, $b11;
        boolean z0;
        com.android.internal.telephony.gsm.SmsMessage$SubmitPdu r2;
        java.io.ByteArrayOutputStream r3, $r5;
        byte[] r4, $r6;
        int i1, $i3, $i4, $i5, $i6, $i9, $i10;
        short $s7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        b0 := @parameter2: byte;

        z0 := @parameter3: boolean;

        r2 := @parameter4: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>(int)>(180);

        r3 = $r5;

        if r0 != null goto label4;

        r2.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedScAddress> = null;

     label1:
        if z0 == 0 goto label2;

        $b11 = b0 | 32;

        b0 = (byte) $b11;

     label2:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(b0);

        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(0);

        r4 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>(r1);

        $i3 = lengthof r4;

        $i4 = -1 + $i3;

        i1 = 2 * $i4;

        $i5 = lengthof r4;

        $i6 = -1 + $i5;

        $b8 = r4[$i6];

        $s7 = 240 & $b8;

        if $s7 != 240 goto label5;

        b2 = 1;

     label3:
        $i10 = i1 - b2;

        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>($i10);

        $i9 = lengthof r4;

        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, 0, $i9);

        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(int)>(0);

        return r3;

     label4:
        $r6 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>(r0);

        r2.<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: byte[] encodedScAddress> = $r6;

        goto label1;

     label5:
        b2 = 0;

        goto label3;
    }

    public static int getTPLayerLengthForPDU(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r1, 16);

        $i3 = $i1 - $i2;

        $i4 = -1 + $i3;

        return $i4;
    }

    public static com.android.internal.telephony.gsm.SmsMessage newFromCDS(java.lang.String)
    {
        java.lang.String r0;
        com.android.internal.telephony.gsm.SmsMessage r1, $r3;
        java.lang.RuntimeException r2, $r5;
        byte[] $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r3 = new com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke $r3.<com.android.internal.telephony.gsm.SmsMessage: void <init>()>();

        r1 = $r3;

        $r4 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte[] hexStringToBytes(java.lang.String)>(r0);

        specialinvoke r1.<com.android.internal.telephony.gsm.SmsMessage: void parsePdu(byte[])>($r4);

     label2:
        return r1;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "CDS SMS PDU parsing failed: ", r2);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public static com.android.internal.telephony.gsm.SmsMessage newFromCMT(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.internal.telephony.gsm.SmsMessage r1, $r3;
        java.lang.RuntimeException r2, $r6;
        java.lang.String $r4;
        byte[] $r5;

        r0 := @parameter0: java.lang.String[];

     label1:
        $r3 = new com.android.internal.telephony.gsm.SmsMessage;

        specialinvoke $r3.<com.android.internal.telephony.gsm.SmsMessage: void <init>()>();

        r1 = $r3;

        $r4 = r0[1];

        $r5 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: byte[] hexStringToBytes(java.lang.String)>($r4);

        specialinvoke r1.<com.android.internal.telephony.gsm.SmsMessage: void parsePdu(byte[])>($r5);

     label2:
        return r1;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SmsMessage", "SMS PDU parsing failed: ", r2);

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void parsePdu(byte[])
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        byte[] r1;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r2, $r3;
        int i0, $i1, $i2;
        java.lang.String $r4, $r5;
        java.lang.RuntimeException $r6;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: byte[];

        r0.<com.android.internal.telephony.gsm.SmsMessage: byte[] mPdu> = r1;

        $r3 = new com.android.internal.telephony.gsm.SmsMessage$PduParser;

        specialinvoke $r3.<com.android.internal.telephony.gsm.SmsMessage$PduParser: void <init>(byte[])>(r1);

        r2 = $r3;

        $r4 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getSCAddress()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mScAddress> = $r4;

        $r5 = r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mScAddress>;

        if $r5 == null goto label1;

     label1:
        i0 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        $i1 = i0 & 3;

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mMti> = $i1;

        $i2 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mMti>;

        tableswitch($i2)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label3;
            default: goto label2;
        };

     label2:
        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unsupported message type");

        throw $r6;

     label3:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseSmsDeliver(com.android.internal.telephony.gsm.SmsMessage$PduParser,int)>(r2, i0);

        return;

     label4:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseSmsSubmit(com.android.internal.telephony.gsm.SmsMessage$PduParser,int)>(r2, i0);

        return;

     label5:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseSmsStatusReport(com.android.internal.telephony.gsm.SmsMessage$PduParser,int)>(r2, i0);

        return;
    }

    private void parseSmsDeliver(com.android.internal.telephony.gsm.SmsMessage$PduParser, int)
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r1;
        int i0, $i1, $i2, $i3, $i5;
        boolean z0, z1;
        com.android.internal.telephony.gsm.GsmSmsAddress $r2;
        com.android.internal.telephony.SmsAddress $r3;
        long $l4;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsMessage$PduParser;

        i0 := @parameter1: int;

        $i1 = i0 & 128;

        if $i1 != 128 goto label4;

        z0 = 1;

     label1:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mReplyPathPresent> = z0;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress> = $r2;

        $r3 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        if $r3 == null goto label2;

     label2:
        $i2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier> = $i2;

        $i3 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme> = $i3;

        $l4 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: long mScTimeMillis> = $l4;

        $i5 = i0 & 64;

        if $i5 != 64 goto label5;

        z1 = 1;

     label3:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseUserData(com.android.internal.telephony.gsm.SmsMessage$PduParser,boolean)>(r1, z1);

        return;

     label4:
        z0 = 0;

        goto label1;

     label5:
        z1 = 0;

        goto label3;
    }

    private void parseSmsStatusReport(com.android.internal.telephony.gsm.SmsMessage$PduParser, int)
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r1;
        int i0, i1, i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, $z1;
        com.android.internal.telephony.gsm.GsmSmsAddress $r2;
        long $l4;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsMessage$PduParser;

        i0 := @parameter1: int;

        z0 = 1;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsStatusReportMessage> = z0;

        $i3 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mMessageRef> = $i3;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.GsmSmsAddress mRecipientAddress> = $r2;

        $l4 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: long mScTimeMillis> = $l4;

        virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>();

        $i6 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mStatus> = $i6;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: boolean moreDataPresent()>();

        if $z1 == 0 goto label6;

        i1 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        i2 = i1;

     label1:
        $i7 = i2 & 128;

        if $i7 == 0 goto label2;

        i2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        goto label1;

     label2:
        $i9 = i1 & 120;

        if $i9 != 0 goto label6;

        $i8 = i1 & 1;

        if $i8 == 0 goto label3;

        $i14 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier> = $i14;

     label3:
        $i11 = i1 & 2;

        if $i11 == 0 goto label4;

        $i12 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme> = $i12;

     label4:
        $i10 = i1 & 4;

        if $i10 == 0 goto label6;

        $i13 = i0 & 64;

        if $i13 != 64 goto label7;

     label5:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseUserData(com.android.internal.telephony.gsm.SmsMessage$PduParser,boolean)>(r1, z0);

     label6:
        return;

     label7:
        z0 = 0;

        goto label5;
    }

    private void parseSmsSubmit(com.android.internal.telephony.gsm.SmsMessage$PduParser, int)
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, z1;
        com.android.internal.telephony.gsm.GsmSmsAddress $r2, $r3;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsMessage$PduParser;

        i0 := @parameter1: int;

        $i4 = i0 & 128;

        if $i4 != 128 goto label4;

        z0 = 1;

     label1:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mReplyPathPresent> = z0;

        $i5 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mMessageRef> = $i5;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.GsmSmsAddress mRecipientAddress> = $r2;

        $r3 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.GsmSmsAddress mRecipientAddress>;

        if $r3 == null goto label2;

     label2:
        $i6 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier> = $i6;

        $i7 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme> = $i7;

        $i8 = i0 >> 3;

        i1 = 3 & $i8;

        if i1 != 0 goto label5;

        i2 = 0;

     label3:
        i3 = i2 - 1;

        if i2 <= 0 goto label7;

        virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>();

        i2 = i3;

        goto label3;

     label4:
        z0 = 0;

        goto label1;

     label5:
        if 2 != i1 goto label6;

        i2 = 1;

        goto label3;

     label6:
        i2 = 7;

        goto label3;

     label7:
        $i9 = i0 & 64;

        if $i9 != 64 goto label9;

        z1 = 1;

     label8:
        specialinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseUserData(com.android.internal.telephony.gsm.SmsMessage$PduParser,boolean)>(r1, z1);

        return;

     label9:
        z1 = 0;

        goto label8;
    }

    private void parseUserData(com.android.internal.telephony.gsm.SmsMessage$PduParser, boolean)
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.gsm.SmsMessage$PduParser r1;
        boolean z0, z1, z2, z3, z4, z5, z6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i46, $i47, $i49, $i50, i51;
        java.lang.StringBuilder $r2, $r3, $r4, $r19, $r20, $r21, $r22, $r23, $r25, $r27, $r28, $r29, $r30, $r32, $r33;
        java.lang.String $r5, $r6, $r12, $r13, $r18, $r24, $r26, $r31, $r34;
        byte[] $r7;
        com.android.internal.telephony.SmsHeader $r8, $r16, $r17;
        com.android.internal.telephony.SmsConstants$MessageClass $r9, $r10, $r11, $r14, $r15;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsMessage$PduParser;

        z0 := @parameter1: boolean;

        z1 = 1;

        i0 = 0;

        $i4 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i6 = 128 & $i4;

        if $i6 != 0 goto label14;

        $i36 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i37 = 32 & $i36;

        if $i37 == 0 goto label07;

        z5 = z1;

     label01:
        $i42 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i41 = 16 & $i42;

        if $i41 == 0 goto label08;

        z3 = z1;

     label02:
        if z5 == 0 goto label09;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4 - Unsupported SMS data coding scheme (compression) ");

        $i49 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i50 = 255 & $i49;

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r34);

     label03:
        z6 = z1;

        i51 = (int) z6;

        if i0 != i51 goto label28;

     label04:
        i1 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: int constructUserData(boolean,boolean)>(z0, z1);

        $r7 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: byte[] getUserData()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: byte[] mUserData> = $r7;

        $r8 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.SmsHeader getUserDataHeader()>();

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsHeader mUserDataHeader> = $r8;

        tableswitch(i0)
        {
            case 0: goto label29;
            case 1: goto label30;
            case 2: goto label29;
            case 3: goto label34;
            case 4: goto label35;
            default: goto label05;
        };

     label05:
        $r6 = r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody>;

        if $r6 == null goto label06;

        virtualinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: void parseMessageBody()>();

     label06:
        if z3 != 0 goto label36;

        $r15 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass UNKNOWN>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r15;

        return;

     label07:
        z5 = 0;

        goto label01;

     label08:
        z3 = 0;

        goto label02;

     label09:
        $i44 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i43 = $i44 >> 2;

        $i40 = 3 & $i43;

        tableswitch($i40)
        {
            case 0: goto label11;
            case 1: goto label13;
            case 2: goto label12;
            case 3: goto label13;
            default: goto label10;
        };

     label10:
        i0 = 0;

        goto label03;

     label11:
        i0 = 1;

        goto label03;

     label12:
        i0 = 3;

        goto label03;

     label13:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1 - Unsupported SMS data coding scheme ");

        $i47 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i46 = 255 & $i47;

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r31);

        i0 = 2;

        goto label03;

     label14:
        $i5 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i8 = 240 & $i5;

        if $i8 != 240 goto label16;

        z3 = 1;

        $i34 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i35 = 4 & $i34;

        if $i35 != 0 goto label15;

        i0 = 1;

        goto label03;

     label15:
        i0 = 2;

        goto label03;

     label16:
        $i7 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i10 = 240 & $i7;

        if $i10 == 192 goto label17;

        $i24 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i23 = 240 & $i24;

        if $i23 == 208 goto label17;

        $i22 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i28 = 240 & $i22;

        if $i28 != 224 goto label25;

     label17:
        $i9 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i12 = 240 & $i9;

        if $i12 != 224 goto label21;

        i0 = 3;

     label18:
        $i11 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i14 = 8 & $i11;

        if $i14 != 8 goto label22;

        z2 = z1;

     label19:
        $i13 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i15 = 3 & $i13;

        if $i15 != 0 goto label24;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi> = z1;

        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiSense> = z2;

        $i21 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i25 = 240 & $i21;

        if $i25 != 192 goto label23;

        z4 = z1;

     label20:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore> = z4;

        z3 = 0;

        goto label03;

     label21:
        i0 = 1;

        goto label18;

     label22:
        z2 = 0;

        goto label19;

     label23:
        z4 = 0;

        goto label20;

     label24:
        r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi> = 0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MWI for fax, email, or other ");

        $i17 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i16 = 255 & $i17;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r5);

        z3 = 0;

        goto label03;

     label25:
        $i27 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i26 = 192 & $i27;

        if $i26 != 128 goto label27;

        $i33 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        if $i33 != 132 goto label26;

        i0 = 4;

        z3 = 0;

        goto label03;

     label26:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("5 - Unsupported SMS data coding scheme ");

        $i31 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i38 = 255 & $i31;

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r26);

        i0 = 0;

        z3 = 0;

        goto label03;

     label27:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("3 - Unsupported SMS data coding scheme ");

        $i30 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i29 = 255 & $i30;

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SmsMessage", $r24);

        i0 = 0;

        z3 = 0;

        goto label03;

     label28:
        z1 = 0;

        goto label04;

     label29:
        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = null;

        goto label05;

     label30:
        if z0 == 0 goto label33;

        $r16 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsHeader mUserDataHeader>;

        i2 = $r16.<com.android.internal.telephony.SmsHeader: int languageTable>;

     label31:
        i3 = 0;

        if z0 == 0 goto label32;

        $r17 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsHeader mUserDataHeader>;

        i3 = $r17.<com.android.internal.telephony.SmsHeader: int languageShiftTable>;

     label32:
        $r18 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM7Bit(int,int,int)>(i1, i2, i3);

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = $r18;

        goto label05;

     label33:
        i2 = 0;

        goto label31;

     label34:
        $r13 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataUCS2(int)>(i1);

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = $r13;

        goto label05;

     label35:
        $r12 = virtualinvoke r1.<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataKSC5601(int)>(i1);

        r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String mMessageBody> = $r12;

        goto label05;

     label36:
        $i19 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        $i20 = 3 & $i19;

        tableswitch($i20)
        {
            case 0: goto label38;
            case 1: goto label39;
            case 2: goto label40;
            case 3: goto label41;
            default: goto label37;
        };

     label37:
        return;

     label38:
        $r14 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_0>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r14;

        return;

     label39:
        $r10 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_1>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r10;

        return;

     label40:
        $r9 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_2>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r9;

        return;

     label41:
        $r11 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_3>;

        r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass> = $r11;

        return;
    }

    int getDataCodingScheme()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mDataCodingScheme>;

        return $i0;
    }

    public com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.SmsConstants$MessageClass $r1;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass>;

        return $r1;
    }

    public int getProtocolIdentifier()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        return $i0;
    }

    public int getStatus()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mStatus>;

        return $i0;
    }

    public boolean isCphsMwiMessage()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.SmsAddress $r1, $r3;
        com.android.internal.telephony.gsm.GsmSmsAddress $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r2 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r1;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageClear()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r4 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r3;

        $z1 = virtualinvoke $r4.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageSet()>();

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isMWIClearMessage()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean z0, $z1, $z2, $z3;
        com.android.internal.telephony.SmsAddress $r1, $r2;
        com.android.internal.telephony.gsm.GsmSmsAddress $r3;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z1 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi>;

        if $z1 == 0 goto label1;

        $z3 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiSense>;

        if $z3 != 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r3 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r2;

        $z2 = virtualinvoke $r3.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageClear()>();

        if $z2 == 0 goto label3;

        z0 = 1;

     label2:
        return z0;

     label3:
        z0 = 0;

        goto label2;
    }

    public boolean isMWISetMessage()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean z0, $z1, $z2, $z3;
        com.android.internal.telephony.SmsAddress $r1, $r2;
        com.android.internal.telephony.gsm.GsmSmsAddress $r3;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z1 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi>;

        if $z1 == 0 goto label1;

        $z3 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiSense>;

        if $z3 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsAddress mOriginatingAddress>;

        $r3 = (com.android.internal.telephony.gsm.GsmSmsAddress) $r2;

        $z2 = virtualinvoke $r3.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageSet()>();

        if $z2 == 0 goto label3;

        z0 = 1;

     label2:
        return z0;

     label3:
        z0 = 0;

        goto label2;
    }

    public boolean isMwiDontStore()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsMwi>;

        if $z0 == 0 goto label2;

        $z3 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mMwiDontStore>;

        if $z3 == 0 goto label2;

     label1:
        return 1;

     label2:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: boolean isCphsMwiMessage()>();

        if $z1 == 0 goto label3;

        $r1 = " ";

        $r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.SmsMessage: java.lang.String getMessageBody()>();

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 != 0 goto label1;

     label3:
        return 0;
    }

    public boolean isReplace()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        $i1 = 192 & $i0;

        if $i1 != 64 goto label1;

        $i2 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        $i3 = 63 & $i2;

        if $i3 <= 0 goto label1;

        $i4 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        $i5 = 63 & $i4;

        if $i5 >= 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isReplyPathPresent()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mReplyPathPresent>;

        return $z0;
    }

    public boolean isStatusReportMessage()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $z0 = r0.<com.android.internal.telephony.gsm.SmsMessage: boolean mIsStatusReportMessage>;

        return $z0;
    }

    public boolean isTypeZero()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        if $i0 != 64 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isUsimDataDownload()
    {
        com.android.internal.telephony.gsm.SmsMessage r0;
        com.android.internal.telephony.SmsConstants$MessageClass $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.gsm.SmsMessage;

        $r2 = r0.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass messageClass>;

        $r1 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_2>;

        if $r2 != $r1 goto label2;

        $i0 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        if $i0 == 127 goto label1;

        $i1 = r0.<com.android.internal.telephony.gsm.SmsMessage: int mProtocolIdentifier>;

        if $i1 != 124 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.SmsMessage: java.lang.String LOG_TAG> = "SmsMessage";

        return;
    }
}
