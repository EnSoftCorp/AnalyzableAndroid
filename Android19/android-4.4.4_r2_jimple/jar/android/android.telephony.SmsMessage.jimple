public class android.telephony.SmsMessage extends java.lang.Object
{
    public static final int ENCODING_16BIT;
    public static final int ENCODING_7BIT;
    public static final int ENCODING_8BIT;
    public static final int ENCODING_KSC5601;
    public static final int ENCODING_UNKNOWN;
    public static final java.lang.String FORMAT_3GPP;
    public static final java.lang.String FORMAT_3GPP2;
    private static final java.lang.String LOG_TAG;
    public static final int MAX_USER_DATA_BYTES;
    public static final int MAX_USER_DATA_BYTES_WITH_HEADER;
    public static final int MAX_USER_DATA_SEPTETS;
    public static final int MAX_USER_DATA_SEPTETS_WITH_HEADER;
    public com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage;

    private void <init>(com.android.internal.telephony.SmsMessageBase)
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase r1;

        r0 := @this: android.telephony.SmsMessage;

        r1 := @parameter0: com.android.internal.telephony.SmsMessageBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage> = r1;

        return;
    }

    public static int[] calculateLength(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0, $z1;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r1;
        int[] r2;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms()>();

        if $z1 == 0 goto label2;

        r1 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r0, z0);

     label1:
        r2 = newarray (int)[4];

        $i0 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        r2[0] = $i0;

        $i1 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitCount>;

        r2[1] = $i1;

        $i2 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitsRemaining>;

        r2[2] = $i2;

        $i3 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        r2[3] = $i3;

        return r2;

     label2:
        r1 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r0, z0);

        goto label1;
    }

    public static int[] calculateLength(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0;
        int[] $r1;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>(r0, z0);

        return $r1;
    }

    public static android.telephony.SmsMessage createFromEfRecord(int, byte[])
    {
        int i0;
        byte[] r0;
        com.android.internal.telephony.SmsMessageBase r1;
        boolean $z0;
        android.telephony.SmsMessage $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean isCdmaVoice()>();

        if $z0 == 0 goto label2;

        r1 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromEfRecord(int,byte[])>(i0, r0);

     label1:
        if r1 == null goto label3;

        $r2 = new android.telephony.SmsMessage;

        specialinvoke $r2.<android.telephony.SmsMessage: void <init>(com.android.internal.telephony.SmsMessageBase)>(r1);

        return $r2;

     label2:
        r1 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromEfRecord(int,byte[])>(i0, r0);

        goto label1;

     label3:
        return null;
    }

    public static android.telephony.SmsMessage createFromPdu(byte[])
    {
        byte[] r0;
        int i0;
        java.lang.String r1, r3;
        android.telephony.SmsMessage r2;
        android.telephony.TelephonyManager $r4;
        com.android.internal.telephony.SmsMessageBase $r5;

        r0 := @parameter0: byte[];

        $r4 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        i0 = virtualinvoke $r4.<android.telephony.TelephonyManager: int getCurrentPhoneType()>();

        if 2 != i0 goto label5;

        r1 = "3gpp2";

     label1:
        r2 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>(r0, r1);

        if r2 == null goto label2;

        $r5 = r2.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        if $r5 != null goto label4;

     label2:
        if 2 != i0 goto label6;

        r3 = "3gpp";

     label3:
        r2 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>(r0, r3);

     label4:
        return r2;

     label5:
        r1 = "3gpp";

        goto label1;

     label6:
        r3 = "3gpp2";

        goto label3;
    }

    public static android.telephony.SmsMessage createFromPdu(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.String r1, $r3, $r4, $r8;
        com.android.internal.telephony.SmsMessageBase r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7;
        android.telephony.SmsMessage $r9;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        $r3 = "3gpp2";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        r2 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromPdu(byte[])>(r0);

     label1:
        $r9 = new android.telephony.SmsMessage;

        specialinvoke $r9.<android.telephony.SmsMessage: void <init>(com.android.internal.telephony.SmsMessageBase)>(r2);

        return $r9;

     label2:
        $r4 = "3gpp";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        r2 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromPdu(byte[])>(r0);

        goto label1;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createFromPdu(): unsupported message format ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r8);

        return null;
    }

    public static java.util.ArrayList fragmentText(java.lang.String)
    {
        java.lang.String r0, $r14, $r15;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.util.ArrayList r2, $r3;
        boolean $z0, $z2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms()>();

        if $z0 == 0 goto label10;

        r1 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r0, 0);

     label01:
        $i5 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        if $i5 != 1 goto label14;

        $i16 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        if $i16 == 0 goto label11;

        $i20 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        if $i20 == 0 goto label11;

        i4 = 7;

     label02:
        $i22 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        if $i22 <= 1 goto label03;

        i4 = i4 + 6;

     label03:
        if i4 == 0 goto label04;

        i4 = i4 + 1;

     label04:
        i0 = 160 - i4;

     label05:
        i1 = 0;

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $r3 = new java.util.ArrayList;

        $i8 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i8);

        r2 = $r3;

     label06:
        if i1 >= i2 goto label09;

        $i7 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        if $i7 != 1 goto label17;

        $z2 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms()>();

        if $z2 == 0 goto label16;

        $i17 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        if $i17 != 1 goto label16;

        $i18 = i2 - i1;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i18);

        i3 = i1 + $i15;

     label07:
        if i3 <= i1 goto label08;

        if i3 <= i2 goto label18;

     label08:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fragmentText failed (");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SmsMessage", $r15);

     label09:
        return r2;

     label10:
        r1 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r0, 0);

        goto label01;

     label11:
        $i21 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        if $i21 != 0 goto label12;

        $i19 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        if $i19 == 0 goto label13;

     label12:
        i4 = 4;

        goto label02;

     label13:
        i4 = 0;

        goto label02;

     label14:
        $i6 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int msgCount>;

        if $i6 <= 1 goto label15;

        i0 = 134;

        goto label05;

     label15:
        i0 = 140;

        goto label05;

     label16:
        $i13 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        $i14 = r1.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        i3 = staticinvoke <com.android.internal.telephony.GsmAlphabet: int findGsmSeptetLimitIndex(java.lang.String,int,int,int,int)>(r0, i1, i0, $i13, $i14);

        goto label07;

     label17:
        $i9 = i0 / 2;

        $i10 = i2 - i1;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i10);

        i3 = i1 + $i11;

        goto label07;

     label18:
        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i3);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        i1 = i3;

        goto label06;
    }

    public static android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0, $z1;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r3;
        android.telephony.SmsMessage$SubmitPdu $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $z1 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms()>();

        if $z1 == 0 goto label2;

        r3 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>(r0, r1, r2, z0, null);

     label1:
        $r4 = new android.telephony.SmsMessage$SubmitPdu;

        specialinvoke $r4.<android.telephony.SmsMessage$SubmitPdu: void <init>(com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>(r3);

        return $r4;

     label2:
        r3 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, z0);

        goto label1;
    }

    public static android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String, java.lang.String, short, byte[], boolean)
    {
        java.lang.String r0, r1;
        short s0;
        byte[] r2;
        boolean z0, $z1;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r3;
        android.telephony.SmsMessage$SubmitPdu $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        r2 := @parameter3: byte[];

        z0 := @parameter4: boolean;

        $z1 = staticinvoke <android.telephony.SmsMessage: boolean useCdmaFormatForMoSms()>();

        if $z1 == 0 goto label2;

        r3 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r0, r1, s0, r2, z0);

     label1:
        $r4 = new android.telephony.SmsMessage$SubmitPdu;

        specialinvoke $r4.<android.telephony.SmsMessage$SubmitPdu: void <init>(com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>(r3);

        return $r4;

     label2:
        r3 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r0, r1, s0, r2, z0);

        goto label1;
    }

    public static int getTPLayerLengthForPDU(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.telephony.SmsMessage: boolean isCdmaVoice()>();

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>(r0);

        return $i1;

     label1:
        $i0 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>(r0);

        return $i0;
    }

    private static boolean isCdmaVoice()
    {
        android.telephony.TelephonyManager $r0;
        int $i0;

        $r0 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i0 = virtualinvoke $r0.<android.telephony.TelephonyManager: int getCurrentPhoneType()>();

        if 2 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static android.telephony.SmsMessage newFromCMT(java.lang.String[])
    {
        java.lang.String[] r0;
        android.telephony.SmsMessage $r1;
        com.android.internal.telephony.gsm.SmsMessage $r2;

        r0 := @parameter0: java.lang.String[];

        $r1 = new android.telephony.SmsMessage;

        $r2 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage newFromCMT(java.lang.String[])>(r0);

        specialinvoke $r1.<android.telephony.SmsMessage: void <init>(com.android.internal.telephony.SmsMessageBase)>($r2);

        return $r1;
    }

    public static android.telephony.SmsMessage newFromParcel(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.telephony.SmsMessage $r1;
        com.android.internal.telephony.cdma.SmsMessage $r2;

        r0 := @parameter0: android.os.Parcel;

        $r1 = new android.telephony.SmsMessage;

        $r2 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage newFromParcel(android.os.Parcel)>(r0);

        specialinvoke $r1.<android.telephony.SmsMessage: void <init>(com.android.internal.telephony.SmsMessageBase)>($r2);

        return $r1;
    }

    private static boolean useCdmaFormatForMoSms()
    {
        android.telephony.SmsManager $r0, $r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r3;

        $r0 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getDefault()>();

        $z0 = virtualinvoke $r0.<android.telephony.SmsManager: boolean isImsSmsSupported()>();

        if $z0 != 0 goto label1;

        $z2 = staticinvoke <android.telephony.SmsMessage: boolean isCdmaVoice()>();

        return $z2;

     label1:
        $r1 = "3gpp2";

        $r2 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getDefault()>();

        $r3 = virtualinvoke $r2.<android.telephony.SmsManager: java.lang.String getImsSmsFormat()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public java.lang.String getDisplayMessageBody()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayMessageBody()>();

        return $r2;
    }

    public java.lang.String getDisplayOriginatingAddress()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayOriginatingAddress()>();

        return $r2;
    }

    public java.lang.String getEmailBody()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailBody()>();

        return $r2;
    }

    public java.lang.String getEmailFrom()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailFrom()>();

        return $r2;
    }

    public int getIndexOnIcc()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()>();

        return $i0;
    }

    public int getIndexOnSim()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()>();

        return $i0;
    }

    public java.lang.String getMessageBody()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()>();

        return $r2;
    }

    public android.telephony.SmsMessage$MessageClass getMessageClass()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int[] $r2;
        com.android.internal.telephony.SmsConstants$MessageClass $r3;
        int $i0, $i1;
        android.telephony.SmsMessage$MessageClass $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.telephony.SmsMessage;

        $r2 = <android.telephony.SmsMessage$1: int[] $SwitchMap$com$android$internal$telephony$SmsConstants$MessageClass>;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r3 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>();

        $i0 = virtualinvoke $r3.<com.android.internal.telephony.SmsConstants$MessageClass: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        $r4 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass UNKNOWN>;

        return $r4;

     label2:
        $r8 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_0>;

        return $r8;

     label3:
        $r7 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_1>;

        return $r7;

     label4:
        $r6 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_2>;

        return $r6;

     label5:
        $r5 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_3>;

        return $r5;
    }

    public java.lang.String getOriginatingAddress()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()>();

        return $r2;
    }

    public byte[] getPdu()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        byte[] $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: byte[] getPdu()>();

        return $r2;
    }

    public int getProtocolIdentifier()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getProtocolIdentifier()>();

        return $i0;
    }

    public java.lang.String getPseudoSubject()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getPseudoSubject()>();

        return $r2;
    }

    public java.lang.String getServiceCenterAddress()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        java.lang.String $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: java.lang.String getServiceCenterAddress()>();

        return $r2;
    }

    public int getStatus()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getStatus()>();

        return $i0;
    }

    public int getStatusOnIcc()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()>();

        return $i0;
    }

    public int getStatusOnSim()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        int $i0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()>();

        return $i0;
    }

    public long getTimestampMillis()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        long $l0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $l0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: long getTimestampMillis()>();

        return $l0;
    }

    public byte[] getUserData()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        byte[] $r2;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: byte[] getUserData()>();

        return $r2;
    }

    public boolean isCphsMwiMessage()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isCphsMwiMessage()>();

        return $z0;
    }

    public boolean isEmail()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isEmail()>();

        return $z0;
    }

    public boolean isMWIClearMessage()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isMWIClearMessage()>();

        return $z0;
    }

    public boolean isMWISetMessage()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isMWISetMessage()>();

        return $z0;
    }

    public boolean isMwiDontStore()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isMwiDontStore()>();

        return $z0;
    }

    public boolean isReplace()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isReplace()>();

        return $z0;
    }

    public boolean isReplyPathPresent()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isReplyPathPresent()>();

        return $z0;
    }

    public boolean isStatusReportMessage()
    {
        android.telephony.SmsMessage r0;
        com.android.internal.telephony.SmsMessageBase $r1;
        boolean $z0;

        r0 := @this: android.telephony.SmsMessage;

        $r1 = r0.<android.telephony.SmsMessage: com.android.internal.telephony.SmsMessageBase mWrappedSmsMessage>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SmsMessageBase: boolean isStatusReportMessage()>();

        return $z0;
    }

    public static void <clinit>()
    {
        <android.telephony.SmsMessage: int MAX_USER_DATA_SEPTETS_WITH_HEADER> = 153;

        <android.telephony.SmsMessage: int MAX_USER_DATA_SEPTETS> = 160;

        <android.telephony.SmsMessage: int MAX_USER_DATA_BYTES_WITH_HEADER> = 134;

        <android.telephony.SmsMessage: int MAX_USER_DATA_BYTES> = 140;

        <android.telephony.SmsMessage: java.lang.String LOG_TAG> = "SmsMessage";

        <android.telephony.SmsMessage: java.lang.String FORMAT_3GPP2> = "3gpp2";

        <android.telephony.SmsMessage: java.lang.String FORMAT_3GPP> = "3gpp";

        <android.telephony.SmsMessage: int ENCODING_UNKNOWN> = 0;

        <android.telephony.SmsMessage: int ENCODING_KSC5601> = 4;

        <android.telephony.SmsMessage: int ENCODING_8BIT> = 2;

        <android.telephony.SmsMessage: int ENCODING_7BIT> = 1;

        <android.telephony.SmsMessage: int ENCODING_16BIT> = 3;

        return;
    }
}
