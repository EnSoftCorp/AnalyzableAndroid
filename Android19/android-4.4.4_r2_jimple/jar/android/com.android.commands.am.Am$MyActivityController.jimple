class com.android.commands.am.Am$MyActivityController extends android.app.IActivityController$Stub
{
    static final int RESULT_ANR_DIALOG;
    static final int RESULT_ANR_KILL;
    static final int RESULT_ANR_WAIT;
    static final int RESULT_CRASH_DIALOG;
    static final int RESULT_CRASH_KILL;
    static final int RESULT_DEFAULT;
    static final int RESULT_EARLY_ANR_CONTINUE;
    static final int RESULT_EARLY_ANR_KILL;
    static final int STATE_ANR;
    static final int STATE_CRASHED;
    static final int STATE_EARLY_ANR;
    static final int STATE_NORMAL;
    final java.lang.String mGdbPort;
    java.lang.Process mGdbProcess;
    java.lang.Thread mGdbThread;
    boolean mGotGdbPrint;
    int mResult;
    int mState;
    final com.android.commands.am.Am this$0;

    void <init>(com.android.commands.am.Am, java.lang.String)
    {
        com.android.commands.am.Am$MyActivityController r0;
        com.android.commands.am.Am r1;
        java.lang.String r2;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        r1 := @parameter0: com.android.commands.am.Am;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.commands.am.Am$MyActivityController: com.android.commands.am.Am this$0> = r1;

        specialinvoke r0.<android.app.IActivityController$Stub: void <init>()>();

        r0.<com.android.commands.am.Am$MyActivityController: java.lang.String mGdbPort> = r2;

        return;
    }

    public boolean activityResuming(java.lang.String)
    {
        com.android.commands.am.Am$MyActivityController r0;
        java.lang.String r1, $r7;
        java.lang.Throwable r2, $r8;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.io.PrintStream $r4;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Activity resuming: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        exitmonitor r0;

     label2:
        return 1;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean activityStarting(android.content.Intent, java.lang.String)
    {
        com.android.commands.am.Am$MyActivityController r0;
        android.content.Intent r1;
        java.lang.String r2, $r8;
        java.lang.Throwable r3, $r9;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Activity starting: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        exitmonitor r0;

     label2:
        return 1;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

     label4:
        exitmonitor r0;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean appCrashed(java.lang.String, int, java.lang.String, java.lang.String, long, java.lang.String)
    {
        com.android.commands.am.Am$MyActivityController r0;
        java.lang.String r1, r2, r3, r4, $r12, $r15, $r22, $r25, $r33;
        int i0, $i2, i3;
        long l1;
        boolean z0, z1;
        java.lang.Throwable r5, $r35;
        java.io.PrintStream $r6, $r8, $r14, $r17, $r24, $r30, $r31, $r32, $r34;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r13, $r16, $r18, $r19, $r20, $r21, $r23, $r26, $r27, $r28, $r29;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        l1 := @parameter4: long;

        r4 := @parameter5: java.lang.String;

        z0 = 1;

        entermonitor r0;

     label1:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("** ERROR: PROCESS CRASHED");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processName: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processPid: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shortMsg: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longMsg: ");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r25);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeMillis: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("stack:");

        $r31 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r31.<java.io.PrintStream: void print(java.lang.String)>(r4);

        $r32 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("#");

        $i2 = virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: int waitControllerLocked(int,int)>(i0, 1);

        z1 = z0;

        i3 = (int) z1;

        if $i2 != i3 goto label3;

     label2:
        z0 = 0;

     label3:
        exitmonitor r0;

     label4:
        return z0;

     label5:
        $r35 := @caughtexception;

        r5 = $r35;

     label6:
        exitmonitor r0;

     label7:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int appEarlyNotResponding(java.lang.String, int, java.lang.String)
    {
        com.android.commands.am.Am$MyActivityController r0;
        java.lang.String r1, r2, $r9, $r15, $r18;
        int i0, $i1;
        java.lang.Throwable r3, $r20;
        java.io.PrintStream $r4, $r6, $r11, $r17;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r19;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("** ERROR: EARLY PROCESS NOT RESPONDING");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processName: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processPid: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("annotation: ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $i1 = virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: int waitControllerLocked(int,int)>(i0, 2);

        if $i1 != 1 goto label3;

        exitmonitor r0;

     label2:
        return -1;

     label3:
        exitmonitor r0;

     label4:
        return 0;

     label5:
        $r20 := @caughtexception;

        r3 = $r20;

     label6:
        exitmonitor r0;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int appNotResponding(java.lang.String, int, java.lang.String)
    {
        com.android.commands.am.Am$MyActivityController r0;
        java.lang.String r1, r2, $r9, $r13;
        int i0, i1;
        java.lang.Throwable r3, $r18;
        java.io.PrintStream $r4, $r6, $r11, $r15, $r16, $r17;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r12, $r14;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        entermonitor r0;

     label01:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("** ERROR: PROCESS NOT RESPONDING");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processName: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processPid: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("processStats:");

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void print(java.lang.String)>(r2);

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("#");

        i1 = virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: int waitControllerLocked(int,int)>(i0, 3);

     label02:
        if i1 != 1 goto label05;

     label03:
        exitmonitor r0;

     label04:
        return -1;

     label05:
        if i1 != 1 goto label11;

     label06:
        exitmonitor r0;

     label07:
        return 1;

     label08:
        $r18 := @caughtexception;

        r3 = $r18;

     label09:
        exitmonitor r0;

     label10:
        throw r3;

     label11:
        exitmonitor r0;

     label12:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    void killGdbLocked()
    {
        com.android.commands.am.Am$MyActivityController r0;
        java.lang.Process $r1, $r5;
        java.lang.Thread $r2, $r3;
        java.io.PrintStream $r4;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        r0.<com.android.commands.am.Am$MyActivityController: boolean mGotGdbPrint> = 0;

        $r1 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.Process mGdbProcess>;

        if $r1 == null goto label1;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Stopping gdbserver");

        $r5 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.Process mGdbProcess>;

        virtualinvoke $r5.<java.lang.Process: void destroy()>();

        r0.<com.android.commands.am.Am$MyActivityController: java.lang.Process mGdbProcess> = null;

     label1:
        $r2 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.Thread mGdbThread>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.Thread mGdbThread>;

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

        r0.<com.android.commands.am.Am$MyActivityController: java.lang.Thread mGdbThread> = null;

     label2:
        return;
    }

    void printMessageForState()
    {
        com.android.commands.am.Am$MyActivityController r0;
        int $i0;
        java.io.PrintStream $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        $i0 = r0.<com.android.commands.am.Am$MyActivityController: int mState>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("(q)uit: finish monitoring");

        return;

     label2:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Monitoring activity manager...  available commands:");

        goto label1;

     label3:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Waiting after crash...  available commands:");

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("(c)ontinue: show crash dialog");

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("(k)ill: immediately kill app");

        goto label1;

     label4:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Waiting after early ANR...  available commands:");

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("(c)ontinue: standard ANR processing");

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("(k)ill: immediately kill app");

        goto label1;

     label5:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Waiting after ANR...  available commands:");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("(c)ontinue: show ANR dialog");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("(k)ill: immediately kill app");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("(w)ait: wait some more");

        goto label1;
    }

    void resumeController(int)
    {
        com.android.commands.am.Am$MyActivityController r0;
        int i0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<com.android.commands.am.Am$MyActivityController: int mState> = 0;

        r0.<com.android.commands.am.Am$MyActivityController: int mResult> = i0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void run() throws android.os.RemoteException
    {
        com.android.commands.am.Am$MyActivityController r0;
        java.lang.Throwable r1, r5, $r49, $r50;
        java.io.IOException r2, $r53;
        java.io.BufferedReader r3, $r8;
        java.lang.String r4, $r13, $r14, $r18, $r20, $r22, $r23, $r25, $r27, $r30, $r31, $r32, $r33, $r34, $r35, $r40, $r41, $r42, $r46, $r47, $r52;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        com.android.commands.am.Am $r6, $r11, $r54, $r56;
        android.app.IActivityManager $r7, $r12, $r48, $r55;
        java.io.InputStreamReader $r9;
        java.io.InputStream $r10;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r15, $r16, $r19, $r24, $r26, $r29, $r36, $r37, $r39, $r43, $r45, $r51;
        java.io.PrintStream $r17, $r21, $r28, $r38, $r44;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

     label01:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void printMessageForState()>();

        $r6 = r0.<com.android.commands.am.Am$MyActivityController: com.android.commands.am.Am this$0>;

        $r7 = staticinvoke <com.android.commands.am.Am: android.app.IActivityManager access$200(com.android.commands.am.Am)>($r6);

        interfaceinvoke $r7.<android.app.IActivityManager: void setActivityController(android.app.IActivityController)>(r0);

        r0.<com.android.commands.am.Am$MyActivityController: int mState> = 0;

        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

        $r10 = <java.lang.System: java.io.InputStream in>;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10);

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

        r3 = $r8;

     label02:
        r4 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r4 == null goto label19;

        z0 = 1;

     label04:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 > 0 goto label17;

     label05:
        z0 = 0;

     label06:
        entermonitor r0;

     label07:
        if z0 == 0 goto label09;

     label08:
        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("");

     label09:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void printMessageForState()>();

        exitmonitor r0;

     label10:
        goto label02;

     label11:
        $r49 := @caughtexception;

        r5 = $r49;

     label12:
        exitmonitor r0;

     label13:
        throw r5;

     label14:
        $r53 := @caughtexception;

        r2 = $r53;

     label15:
        virtualinvoke r2.<java.io.IOException: void printStackTrace()>();

     label16:
        $r54 = r0.<com.android.commands.am.Am$MyActivityController: com.android.commands.am.Am this$0>;

        $r48 = staticinvoke <com.android.commands.am.Am: android.app.IActivityManager access$200(com.android.commands.am.Am)>($r54);

        interfaceinvoke $r48.<android.app.IActivityManager: void setActivityController(android.app.IActivityController)>(null);

        return;

     label17:
        $r13 = "q";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label18;

        $r14 = "quit";

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label20;

     label18:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void resumeController(int)>(0);

     label19:
        $r11 = r0.<com.android.commands.am.Am$MyActivityController: com.android.commands.am.Am this$0>;

        $r12 = staticinvoke <com.android.commands.am.Am: android.app.IActivityManager access$200(com.android.commands.am.Am)>($r11);

        interfaceinvoke $r12.<android.app.IActivityManager: void setActivityController(android.app.IActivityController)>(null);

        return;

     label20:
        $i2 = r0.<com.android.commands.am.Am$MyActivityController: int mState>;

        if $i2 != 1 goto label29;

        $r41 = "c";

        $z13 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z13 != 0 goto label21;

        $r40 = "continue";

        $z15 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z15 == 0 goto label24;

     label21:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void resumeController(int)>(0);

     label22:
        goto label06;

     label23:
        $r50 := @caughtexception;

        r1 = $r50;

        $r56 = r0.<com.android.commands.am.Am$MyActivityController: com.android.commands.am.Am this$0>;

        $r55 = staticinvoke <com.android.commands.am.Am: android.app.IActivityManager access$200(com.android.commands.am.Am)>($r56);

        interfaceinvoke $r55.<android.app.IActivityManager: void setActivityController(android.app.IActivityController)>(null);

        throw r1;

     label24:
        $r46 = "k";

        $z16 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z16 != 0 goto label25;

        $r47 = "kill";

        $z14 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z14 == 0 goto label27;

     label25:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void resumeController(int)>(1);

     label26:
        goto label06;

     label27:
        $r44 = <java.lang.System: java.io.PrintStream out>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label28:
        goto label06;

     label29:
        $i1 = r0.<com.android.commands.am.Am$MyActivityController: int mState>;

        if $i1 != 3 goto label40;

        $r31 = "c";

        $z8 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z8 != 0 goto label30;

        $r30 = "continue";

        $z7 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z7 == 0 goto label32;

     label30:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void resumeController(int)>(0);

     label31:
        goto label06;

     label32:
        $r33 = "k";

        $z10 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z10 != 0 goto label33;

        $r32 = "kill";

        $z9 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z9 == 0 goto label35;

     label33:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void resumeController(int)>(1);

     label34:
        goto label06;

     label35:
        $r35 = "w";

        $z12 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z12 != 0 goto label36;

        $r34 = "wait";

        $z11 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z11 == 0 goto label38;

     label36:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void resumeController(int)>(1);

     label37:
        goto label06;

     label38:
        $r38 = <java.lang.System: java.io.PrintStream out>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r42);

     label39:
        goto label06;

     label40:
        $i3 = r0.<com.android.commands.am.Am$MyActivityController: int mState>;

        if $i3 != 2 goto label48;

        $r20 = "c";

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 != 0 goto label41;

        $r23 = "continue";

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label43;

     label41:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void resumeController(int)>(0);

     label42:
        goto label06;

     label43:
        $r22 = "k";

        $z6 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 != 0 goto label44;

        $r25 = "kill";

        $z5 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 == 0 goto label46;

     label44:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void resumeController(int)>(1);

     label45:
        goto label06;

     label46:
        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label47:
        goto label06;

     label48:
        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid command: ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label49:
        goto label06;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.io.IOException from label02 to label03 with label14;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.io.IOException from label13 to label14 with label14;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.io.IOException from label17 to label18 with label14;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.io.IOException from label18 to label19 with label14;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.io.IOException from label20 to label21 with label14;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.io.IOException from label21 to label22 with label14;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.io.IOException from label24 to label25 with label14;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.io.IOException from label25 to label26 with label14;
        catch java.lang.Throwable from label25 to label26 with label23;
        catch java.io.IOException from label27 to label28 with label14;
        catch java.lang.Throwable from label27 to label28 with label23;
        catch java.io.IOException from label29 to label30 with label14;
        catch java.lang.Throwable from label29 to label30 with label23;
        catch java.io.IOException from label30 to label31 with label14;
        catch java.lang.Throwable from label30 to label31 with label23;
        catch java.io.IOException from label32 to label33 with label14;
        catch java.lang.Throwable from label32 to label33 with label23;
        catch java.io.IOException from label33 to label34 with label14;
        catch java.lang.Throwable from label33 to label34 with label23;
        catch java.io.IOException from label35 to label36 with label14;
        catch java.lang.Throwable from label35 to label36 with label23;
        catch java.io.IOException from label36 to label37 with label14;
        catch java.lang.Throwable from label36 to label37 with label23;
        catch java.io.IOException from label38 to label39 with label14;
        catch java.lang.Throwable from label38 to label39 with label23;
        catch java.io.IOException from label40 to label41 with label14;
        catch java.lang.Throwable from label40 to label41 with label23;
        catch java.io.IOException from label41 to label42 with label14;
        catch java.lang.Throwable from label41 to label42 with label23;
        catch java.io.IOException from label43 to label44 with label14;
        catch java.lang.Throwable from label43 to label44 with label23;
        catch java.io.IOException from label44 to label45 with label14;
        catch java.lang.Throwable from label44 to label45 with label23;
        catch java.io.IOException from label46 to label47 with label14;
        catch java.lang.Throwable from label46 to label47 with label23;
        catch java.io.IOException from label48 to label49 with label14;
        catch java.lang.Throwable from label48 to label49 with label23;
    }

    public int systemNotResponding(java.lang.String)
    {
        com.android.commands.am.Am$MyActivityController r0;
        java.lang.String r1, $r8;
        java.lang.Throwable r2, $r11;
        java.io.PrintStream $r3, $r5, $r9, $r10;
        java.lang.StringBuilder $r4, $r6, $r7;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("** ERROR: PROCESS NOT RESPONDING");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("message: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("#");

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Allowing system to die.");

        exitmonitor r0;

     label2:
        return -1;

     label3:
        $r11 := @caughtexception;

        r2 = $r11;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int waitControllerLocked(int, int)
    {
        com.android.commands.am.Am$MyActivityController r0;
        int i0, i1, $i2, $i3;
        java.io.IOException r2, $r42;
        java.lang.Runtime r3;
        java.lang.String[] r4;
        java.lang.String $r6, $r11, $r12, $r19, $r20, $r22, $r26, $r30, $r31, $r34, $r36, $r45;
        java.io.PrintStream $r7, $r9, $r15, $r17, $r24, $r48;
        java.lang.StringBuilder $r8, $r10, $r13, $r14, $r16, $r18, $r21, $r23, $r25, $r27, $r28, $r29, $r32, $r33, $r41, $r46, $r47;
        java.lang.Process $r35, $r37;
        java.io.InputStream $r38;
        com.android.commands.am.Am$MyActivityController$1 $r39;
        java.io.InputStreamReader $r40;
        java.lang.InterruptedException $r43, $r49;
        java.lang.Thread $r44;

        r0 := @this: com.android.commands.am.Am$MyActivityController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r6 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.String mGdbPort>;

        if $r6 == null goto label03;

        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void killGdbLocked()>();

     label01:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting gdbserver on port ");

        $r11 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.String mGdbPort>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Do the following:");

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  adb forward tcp:");

        $r19 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.String mGdbPort>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tcp:");

        $r20 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.String mGdbPort>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  gdbclient app_process :");

        $r26 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.String mGdbPort>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r30);

        r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        r4 = newarray (java.lang.String)[4];

        r4[0] = "gdbserver";

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r31 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.String mGdbPort>;

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r4[1] = $r36;

        r4[2] = "--attach";

        $r34 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        r4[3] = $r34;

        $r35 = virtualinvoke r3.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>(r4);

        r0.<com.android.commands.am.Am$MyActivityController: java.lang.Process mGdbProcess> = $r35;

        $r39 = new com.android.commands.am.Am$MyActivityController$1;

        $r40 = new java.io.InputStreamReader;

        $r37 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.Process mGdbProcess>;

        $r38 = virtualinvoke $r37.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke $r40.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r38);

        specialinvoke $r39.<com.android.commands.am.Am$MyActivityController$1: void <init>(com.android.commands.am.Am$MyActivityController,java.io.InputStreamReader)>(r0, $r40);

        r0.<com.android.commands.am.Am$MyActivityController: java.lang.Thread mGdbThread> = $r39;

        $r44 = r0.<com.android.commands.am.Am$MyActivityController: java.lang.Thread mGdbThread>;

        virtualinvoke $r44.<java.lang.Thread: void start()>();

     label02:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(500L);

     label03:
        r0.<com.android.commands.am.Am$MyActivityController: int mState> = i1;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("");

        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void printMessageForState()>();

     label04:
        $i2 = r0.<com.android.commands.am.Am$MyActivityController: int mState>;

        if $i2 == 0 goto label09;

     label05:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label06:
        goto label04;

     label07:
        $r49 := @caughtexception;

        goto label04;

     label08:
        $r42 := @caughtexception;

        r2 = $r42;

        $r48 = <java.lang.System: java.io.PrintStream err>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting gdbserver: ");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r45);

        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void killGdbLocked()>();

        goto label03;

     label09:
        virtualinvoke r0.<com.android.commands.am.Am$MyActivityController: void killGdbLocked()>();

        $i3 = r0.<com.android.commands.am.Am$MyActivityController: int mResult>;

        return $i3;

     label10:
        $r43 := @caughtexception;

        goto label03;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.InterruptedException from label02 to label03 with label10;
        catch java.io.IOException from label02 to label03 with label08;
        catch java.lang.InterruptedException from label05 to label06 with label07;
    }

    public static void <clinit>()
    {
        <com.android.commands.am.Am$MyActivityController: int STATE_EARLY_ANR> = 2;

        <com.android.commands.am.Am$MyActivityController: int STATE_CRASHED> = 1;

        <com.android.commands.am.Am$MyActivityController: int STATE_ANR> = 3;

        <com.android.commands.am.Am$MyActivityController: int RESULT_EARLY_ANR_KILL> = 1;

        <com.android.commands.am.Am$MyActivityController: int RESULT_EARLY_ANR_CONTINUE> = 0;

        <com.android.commands.am.Am$MyActivityController: int RESULT_DEFAULT> = 0;

        <com.android.commands.am.Am$MyActivityController: int RESULT_CRASH_KILL> = 1;

        <com.android.commands.am.Am$MyActivityController: int RESULT_CRASH_DIALOG> = 0;

        <com.android.commands.am.Am$MyActivityController: int RESULT_ANR_WAIT> = 1;

        <com.android.commands.am.Am$MyActivityController: int RESULT_ANR_KILL> = 1;

        <com.android.commands.am.Am$MyActivityController: int RESULT_ANR_DIALOG> = 0;

        return;
    }
}
