class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser extends org.apache.xml.dtm.DTMAxisTraverser
{
    final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.DTMAxisTraverser: void <init>()>();

        return;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser r0;
        int i0, i1, $i2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getParent(int)>(i1);

        return $i2;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser r0;
        int i0, i1, i2, i3, i4, $i5;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r4, $r6;
        org.apache.xml.utils.SuballocatedIntVector $r3, $r5;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = -1;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i4 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i1);

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r3 = $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        i4 = virtualinvoke $r3.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i4);

        if i3 == i4 goto label2;

        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r5 = $r4.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.utils.SuballocatedIntVector m_exptype>;

        $i5 = virtualinvoke $r5.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i4);

        if $i5 != i2 goto label1;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i3 = virtualinvoke $r6.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i4);

     label2:
        return i3;
    }
}
