abstract class android.net.http.Connection extends java.lang.Object
{
    private static final int DONE;
    private static final int DRAIN;
    private static final java.lang.String HTTP_CONNECTION;
    private static final int MAX_PIPE;
    private static final int MIN_PIPE;
    private static final int READ;
    private static final int RETRY_REQUEST_LIMIT;
    private static final int SEND;
    static final int SOCKET_TIMEOUT;
    private static int STATE_CANCEL_REQUESTED;
    private static int STATE_NORMAL;
    private static final java.lang.String[] states;
    private int mActive;
    private byte[] mBuf;
    private boolean mCanPersist;
    protected android.net.http.SslCertificate mCertificate;
    android.content.Context mContext;
    org.apache.http.HttpHost mHost;
    protected android.net.http.AndroidHttpClientConnection mHttpClientConnection;
    private org.apache.http.protocol.HttpContext mHttpContext;
    android.net.http.RequestFeeder mRequestFeeder;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.net.http.Connection: int SOCKET_TIMEOUT> = 60000;

        <android.net.http.Connection: int SEND> = 0;

        <android.net.http.Connection: int RETRY_REQUEST_LIMIT> = 2;

        <android.net.http.Connection: int READ> = 1;

        <android.net.http.Connection: int MIN_PIPE> = 2;

        <android.net.http.Connection: int MAX_PIPE> = 3;

        <android.net.http.Connection: java.lang.String HTTP_CONNECTION> = "http.connection";

        <android.net.http.Connection: int DRAIN> = 2;

        <android.net.http.Connection: int DONE> = 3;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "SEND";

        $r0[1] = "READ";

        $r0[2] = "DRAIN";

        $r0[3] = "DONE";

        <android.net.http.Connection: java.lang.String[] states> = $r0;

        <android.net.http.Connection: int STATE_NORMAL> = 0;

        <android.net.http.Connection: int STATE_CANCEL_REQUESTED> = 1;

        return;
    }

    protected void <init>(android.content.Context, org.apache.http.HttpHost, android.net.http.RequestFeeder)
    {
        android.net.http.Connection r0;
        android.content.Context r1;
        org.apache.http.HttpHost r2;
        android.net.http.RequestFeeder r3;
        int $i0;
        org.apache.http.protocol.BasicHttpContext $r4;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: android.net.http.RequestFeeder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection> = null;

        r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate> = null;

        $i0 = <android.net.http.Connection: int STATE_NORMAL>;

        r0.<android.net.http.Connection: int mActive> = $i0;

        r0.<android.net.http.Connection: android.content.Context mContext> = r1;

        r0.<android.net.http.Connection: org.apache.http.HttpHost mHost> = r2;

        r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder> = r3;

        r0.<android.net.http.Connection: boolean mCanPersist> = 0;

        $r4 = new org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r4.<org.apache.http.protocol.BasicHttpContext: void <init>(org.apache.http.protocol.HttpContext)>(null);

        r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext> = $r4;

        return;
    }

    private boolean clearPipe(java.util.LinkedList)
    {
        android.net.http.Connection r0;
        java.util.LinkedList r1;
        boolean z0, $z1, $z2;
        android.net.http.RequestFeeder r2, $r6, $r8;
        java.lang.Throwable r3, $r9;
        android.net.http.Request r4;
        org.apache.http.HttpHost $r5;
        java.lang.Object $r7;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: java.util.LinkedList;

        z0 = 1;

        r2 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        entermonitor r2;

     label01:
        $z1 = virtualinvoke r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label03;

        $r7 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object removeLast()>();

        r4 = (android.net.http.Request) $r7;

        $r8 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        interfaceinvoke $r8.<android.net.http.RequestFeeder: void requeueRequest(android.net.http.Request)>(r4);

     label02:
        z0 = 0;

        goto label01;

     label03:
        if z0 == 0 goto label06;

     label04:
        $r6 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r5 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $z2 = interfaceinvoke $r6.<android.net.http.RequestFeeder: boolean haveRequest(org.apache.http.HttpHost)>($r5);

        if $z2 != 0 goto label11;

     label05:
        z0 = 1;

     label06:
        exitmonitor r2;

     label07:
        return z0;

     label08:
        $r9 := @caughtexception;

        r3 = $r9;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    static android.net.http.Connection getConnection(android.content.Context, org.apache.http.HttpHost, org.apache.http.HttpHost, android.net.http.RequestFeeder)
    {
        android.content.Context r0;
        org.apache.http.HttpHost r1, r2;
        android.net.http.RequestFeeder r3;
        java.lang.String $r4;
        boolean $z0;
        android.net.http.HttpsConnection $r5;
        android.net.http.HttpConnection $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.apache.http.HttpHost;

        r2 := @parameter2: org.apache.http.HttpHost;

        r3 := @parameter3: android.net.http.RequestFeeder;

        $r4 = virtualinvoke r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 == 0 goto label1;

        $r6 = new android.net.http.HttpConnection;

        specialinvoke $r6.<android.net.http.HttpConnection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestFeeder)>(r0, r1, r3);

        return $r6;

     label1:
        $r5 = new android.net.http.HttpsConnection;

        specialinvoke $r5.<android.net.http.HttpsConnection: void <init>(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>(r0, r1, r2, r3);

        return $r5;
    }

    private boolean httpFailure(android.net.http.Request, int, java.lang.Exception)
    {
        android.net.http.Connection r0;
        android.net.http.Request r1;
        int i0, i1, $i2;
        java.lang.Exception r2;
        boolean z0;
        java.lang.Throwable r3;
        java.lang.String r4;
        org.apache.http.protocol.HttpContext $r5;
        android.net.http.EventHandler $r7;
        android.content.Context $r8;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: android.net.http.Request;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Exception;

        z0 = 1;

        $i2 = r1.<android.net.http.Request: int mFailCount>;

        i1 = 1 + $i2;

        r1.<android.net.http.Request: int mFailCount> = i1;

        if i1 < 2 goto label2;

        z0 = 0;

        if i0 >= 0 goto label3;

        $r8 = r0.<android.net.http.Connection: android.content.Context mContext>;

        r4 = staticinvoke <android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)>(i0, $r8);

     label1:
        $r7 = r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r7.<android.net.http.EventHandler: void error(int,java.lang.String)>(i0, r4);

        virtualinvoke r1.<android.net.http.Request: void complete()>();

     label2:
        virtualinvoke r0.<android.net.http.Connection: void closeConnection()>();

        $r5 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        interfaceinvoke $r5.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("http.connection");

        return z0;

     label3:
        r3 = virtualinvoke r2.<java.lang.Exception: java.lang.Throwable getCause()>();

        if r3 == null goto label5;

        r4 = virtualinvoke r3.<java.lang.Throwable: java.lang.String toString()>();

     label4:
        goto label1;

     label5:
        r4 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        goto label4;
    }

    private boolean keepAlive(org.apache.http.HttpEntity, org.apache.http.ProtocolVersion, int, org.apache.http.protocol.HttpContext)
    {
        android.net.http.Connection r0;
        org.apache.http.HttpEntity r1;
        org.apache.http.ProtocolVersion r2;
        int i0, i3;
        org.apache.http.protocol.HttpContext r3;
        boolean z0, $z1, $z2, $z3, $z4, z5;
        org.apache.http.HttpConnection r4;
        java.lang.Object $r5;
        org.apache.http.HttpVersion $r6, $r7;
        long $l1;
        byte $b2;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: org.apache.http.HttpEntity;

        r2 := @parameter1: org.apache.http.ProtocolVersion;

        i0 := @parameter2: int;

        r3 := @parameter3: org.apache.http.protocol.HttpContext;

        z0 = 1;

        $r5 = interfaceinvoke r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.connection");

        r4 = (org.apache.http.HttpConnection) $r5;

        if r4 == null goto label2;

        $z4 = interfaceinvoke r4.<org.apache.http.HttpConnection: boolean isOpen()>();

        if $z4 != 0 goto label2;

     label1:
        return 0;

     label2:
        if r1 == null goto label3;

        $l1 = interfaceinvoke r1.<org.apache.http.HttpEntity: long getContentLength()>();

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label3;

        $z2 = interfaceinvoke r1.<org.apache.http.HttpEntity: boolean isChunked()>();

        if $z2 == 0 goto label1;

        $r7 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z3 = virtualinvoke r2.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r7);

        if $z3 != 0 goto label1;

     label3:
        z5 = z0;

        i3 = (int) z5;

        if i0 == i3 goto label1;

        if i0 != 2 goto label4;

        return z0;

     label4:
        $r6 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z1 = virtualinvoke r2.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r6);

        if $z1 != 0 goto label6;

     label5:
        return z0;

     label6:
        z0 = 0;

        goto label5;
    }

    private boolean openHttpConnection(android.net.http.Request)
    {
        android.net.http.Connection r0;
        android.net.http.Request r1;
        boolean z0;
        java.io.IOException r2, $r16;
        byte b0;
        java.lang.Exception r3;
        javax.net.ssl.SSLHandshakeException r4, $r17;
        java.lang.IllegalArgumentException r6, $r15;
        java.net.UnknownHostException r7, $r14;
        android.net.http.AndroidHttpClientConnection $r8, $r9, $r10, $r11;
        int $i2, $i3, $i4;
        org.apache.http.protocol.HttpContext $r12;
        android.net.http.RequestFeeder $r13;
        android.net.http.SSLConnectionClosedByUserException $r18;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: android.net.http.Request;

        z0 = 1;

        staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label01:
        r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate> = null;

        $r8 = virtualinvoke r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>(r1);

        r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection> = $r8;

        $r9 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        if $r9 == null goto label03;

        $r11 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        virtualinvoke $r11.<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)>(60000);

        $r12 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        $r10 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        interfaceinvoke $r12.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", $r10);

     label02:
        b0 = 0;

        r3 = null;

        goto label15;

     label03:
        r1.<android.net.http.Request: int mFailCount> = 2;

     label04:
        return 0;

     label05:
        $r14 := @caughtexception;

        r7 = $r14;

        b0 = -2;

        r3 = r7;

        goto label15;

     label06:
        $r15 := @caughtexception;

        r6 = $r15;

        b0 = -6;

        r1.<android.net.http.Request: int mFailCount> = 2;

        r3 = r6;

        goto label15;

     label07:
        $r18 := @caughtexception;

        r1.<android.net.http.Request: int mFailCount> = 2;

        return 0;

     label08:
        $r17 := @caughtexception;

        r4 = $r17;

        r1.<android.net.http.Request: int mFailCount> = 2;

        b0 = -11;

        r3 = r4;

        goto label15;

     label09:
        $r16 := @caughtexception;

        r2 = $r16;

        b0 = -6;

        r3 = r2;

        goto label15;

     label10:
        $i2 = r1.<android.net.http.Request: int mFailCount>;

        if $i2 >= 2 goto label13;

        $r13 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        interfaceinvoke $r13.<android.net.http.RequestFeeder: void requeueRequest(android.net.http.Request)>(r1);

        $i4 = r1.<android.net.http.Request: int mFailCount>;

        $i3 = 1 + $i4;

        r1.<android.net.http.Request: int mFailCount> = $i3;

     label11:
        if b0 != 0 goto label14;

     label12:
        return z0;

     label13:
        specialinvoke r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>(r1, b0, r3);

        goto label11;

     label14:
        z0 = 0;

        goto label12;

     label15:
        if b0 != 0 goto label10;

        return z0;

        catch java.net.UnknownHostException from label01 to label02 with label05;
        catch java.lang.IllegalArgumentException from label01 to label02 with label06;
        catch android.net.http.SSLConnectionClosedByUserException from label01 to label02 with label07;
        catch javax.net.ssl.SSLHandshakeException from label01 to label02 with label08;
        catch java.io.IOException from label01 to label02 with label09;
        catch java.net.UnknownHostException from label03 to label04 with label05;
        catch java.lang.IllegalArgumentException from label03 to label04 with label06;
        catch android.net.http.SSLConnectionClosedByUserException from label03 to label04 with label07;
        catch javax.net.ssl.SSLHandshakeException from label03 to label04 with label08;
        catch java.io.IOException from label03 to label04 with label09;
    }

    void cancel()
    {
        android.net.http.Connection r0;
        int $i0;

        r0 := @this: android.net.http.Connection;

        $i0 = <android.net.http.Connection: int STATE_CANCEL_REQUESTED>;

        r0.<android.net.http.Connection: int mActive> = $i0;

        virtualinvoke r0.<android.net.http.Connection: void closeConnection()>();

        return;
    }

    abstract void closeConnection();

    byte[] getBuf()
    {
        android.net.http.Connection r0;
        byte[] $r1, $r2, $r3;

        r0 := @this: android.net.http.Connection;

        $r1 = r0.<android.net.http.Connection: byte[] mBuf>;

        if $r1 != null goto label1;

        $r3 = newarray (byte)[8192];

        r0.<android.net.http.Connection: byte[] mBuf> = $r3;

     label1:
        $r2 = r0.<android.net.http.Connection: byte[] mBuf>;

        return $r2;
    }

    boolean getCanPersist()
    {
        android.net.http.Connection r0;
        boolean $z0;

        r0 := @this: android.net.http.Connection;

        $z0 = r0.<android.net.http.Connection: boolean mCanPersist>;

        return $z0;
    }

    android.net.http.SslCertificate getCertificate()
    {
        android.net.http.Connection r0;
        android.net.http.SslCertificate $r1;

        r0 := @this: android.net.http.Connection;

        $r1 = r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate>;

        return $r1;
    }

    org.apache.http.HttpHost getHost()
    {
        android.net.http.Connection r0;
        org.apache.http.HttpHost $r1;

        r0 := @this: android.net.http.Connection;

        $r1 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        return $r1;
    }

    org.apache.http.protocol.HttpContext getHttpContext()
    {
        android.net.http.Connection r0;
        org.apache.http.protocol.HttpContext $r1;

        r0 := @this: android.net.http.Connection;

        $r1 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        return $r1;
    }

    abstract java.lang.String getScheme();

    abstract android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request) throws java.io.IOException;

    void processRequests(android.net.http.Request)
    {
        android.net.http.Connection r0;
        android.net.http.Request r1, r4, r9;
        byte b0, b1, b2, b3;
        java.lang.Exception r2;
        java.util.LinkedList r3, $r12;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        int i4, $i5, $i6, $i7, $i8;
        java.lang.IllegalStateException r5, r8, $r29, $r32;
        java.io.IOException r6, r11, $r27, $r28;
        org.apache.http.ParseException r7, $r33;
        org.apache.http.HttpException r10, $r30;
        android.net.http.RequestFeeder $r14, $r24;
        org.apache.http.HttpHost $r15, $r25;
        android.net.http.AndroidHttpClientConnection $r16, $r20, $r22, $r26;
        java.lang.Object $r17;
        org.apache.http.protocol.HttpContext $r18;
        android.net.http.EventHandler $r21;
        android.net.http.SslCertificate $r23;
        java.lang.InterruptedException $r31;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: android.net.http.Request;

        b0 = 0;

        r2 = null;

        $r12 = new java.util.LinkedList;

        specialinvoke $r12.<java.util.LinkedList: void <init>()>();

        r3 = $r12;

        b1 = 2;

        b2 = 3;

        b3 = 0;

     label01:
        if b3 == 3 goto label38;

        $i5 = r0.<android.net.http.Connection: int mActive>;

        $i6 = <android.net.http.Connection: int STATE_CANCEL_REQUESTED>;

        if $i5 != $i6 goto label04;

     label02:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label03:
        $i8 = <android.net.http.Connection: int STATE_NORMAL>;

        r0.<android.net.http.Connection: int mActive> = $i8;

     label04:
        tableswitch(b3)
        {
            case 0: goto label06;
            case 1: goto label23;
            case 2: goto label23;
            default: goto label05;
        };

     label05:
        goto label01;

     label06:
        $i7 = virtualinvoke r3.<java.util.LinkedList: int size()>();

        if $i7 != b2 goto label07;

        b3 = 1;

        goto label01;

     label07:
        if r1 != null goto label09;

        $r24 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r25 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        r9 = interfaceinvoke $r24.<android.net.http.RequestFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>($r25);

     label08:
        if r9 != null goto label10;

        b3 = 2;

        goto label01;

     label09:
        r9 = r1;

        r1 = null;

        goto label08;

     label10:
        virtualinvoke r9.<android.net.http.Request: void setConnection(android.net.http.Connection)>(r0);

        $z6 = r9.<android.net.http.Request: boolean mCancelled>;

        if $z6 == 0 goto label11;

        virtualinvoke r9.<android.net.http.Request: void complete()>();

        goto label01;

     label11:
        $r20 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        if $r20 == null goto label12;

        $r26 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        $z13 = virtualinvoke $r26.<android.net.http.AndroidHttpClientConnection: boolean isOpen()>();

        if $z13 != 0 goto label13;

     label12:
        $z8 = specialinvoke r0.<android.net.http.Connection: boolean openHttpConnection(android.net.http.Request)>(r9);

        if $z8 != 0 goto label13;

        b3 = 3;

        goto label01;

     label13:
        $r21 = r9.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $r23 = r0.<android.net.http.Connection: android.net.http.SslCertificate mCertificate>;

        interfaceinvoke $r21.<android.net.http.EventHandler: void certificate(android.net.http.SslCertificate)>($r23);

     label14:
        $r22 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        virtualinvoke r9.<android.net.http.Request: void sendRequest(android.net.http.AndroidHttpClientConnection)>($r22);

     label15:
        if r2 == null goto label22;

        $z12 = specialinvoke r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>(r9, b0, r2);

        if $z12 == 0 goto label16;

        $z10 = r9.<android.net.http.Request: boolean mCancelled>;

        if $z10 != 0 goto label16;

        virtualinvoke r3.<java.util.LinkedList: void addLast(java.lang.Object)>(r9);

     label16:
        $z9 = specialinvoke r0.<android.net.http.Connection: boolean clearPipe(java.util.LinkedList)>(r3);

        if $z9 == 0 goto label21;

        b3 = 3;

     label17:
        b2 = 1;

        b1 = b2;

        r2 = null;

        goto label01;

     label18:
        $r30 := @caughtexception;

        r10 = $r30;

        r2 = r10;

        b0 = -1;

        goto label15;

     label19:
        $r27 := @caughtexception;

        r11 = $r27;

        r2 = r11;

        b0 = -7;

        goto label15;

     label20:
        $r32 := @caughtexception;

        r8 = $r32;

        r2 = r8;

        b0 = -7;

        goto label15;

     label21:
        b3 = 0;

        goto label17;

     label22:
        virtualinvoke r3.<java.util.LinkedList: void addLast(java.lang.Object)>(r9);

        $z11 = r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z11 != 0 goto label01;

        b3 = 1;

        goto label01;

     label23:
        $r14 = r0.<android.net.http.Connection: android.net.http.RequestFeeder mRequestFeeder>;

        $r15 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        $z1 = interfaceinvoke $r14.<android.net.http.RequestFeeder: boolean haveRequest(org.apache.http.HttpHost)>($r15);

        if $z1 != 0 goto label25;

        z0 = 1;

     label24:
        i4 = virtualinvoke r3.<java.util.LinkedList: int size()>();

        if b3 == 2 goto label26;

        if i4 >= b1 goto label26;

        if z0 != 0 goto label26;

        $z7 = r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z7 == 0 goto label26;

        b3 = 0;

        goto label01;

     label25:
        z0 = 0;

        goto label24;

     label26:
        if i4 != 0 goto label29;

        if z0 == 0 goto label28;

        b3 = 3;

     label27:
        goto label01;

     label28:
        b3 = 0;

        goto label27;

     label29:
        $r17 = virtualinvoke r3.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r4 = (android.net.http.Request) $r17;

     label30:
        $r16 = r0.<android.net.http.Connection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        virtualinvoke r4.<android.net.http.Request: void readResponse(android.net.http.AndroidHttpClientConnection)>($r16);

     label31:
        if r2 == null goto label33;

        $z3 = specialinvoke r0.<android.net.http.Connection: boolean httpFailure(android.net.http.Request,int,java.lang.Exception)>(r4, b0, r2);

        if $z3 == 0 goto label32;

        $z4 = r4.<android.net.http.Request: boolean mCancelled>;

        if $z4 != 0 goto label32;

        virtualinvoke r4.<android.net.http.Request: void reset()>();

        virtualinvoke r3.<java.util.LinkedList: void addFirst(java.lang.Object)>(r4);

     label32:
        r2 = null;

        r0.<android.net.http.Connection: boolean mCanPersist> = 0;

     label33:
        $z2 = r0.<android.net.http.Connection: boolean mCanPersist>;

        if $z2 != 0 goto label01;

        virtualinvoke r0.<android.net.http.Connection: void closeConnection()>();

        $r18 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        interfaceinvoke $r18.<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>("http.connection");

        specialinvoke r0.<android.net.http.Connection: boolean clearPipe(java.util.LinkedList)>(r3);

        b2 = 1;

        b1 = b2;

        b3 = 0;

        goto label01;

     label34:
        $r33 := @caughtexception;

        r7 = $r33;

        r2 = r7;

        b0 = -7;

        goto label31;

     label35:
        $r28 := @caughtexception;

        r6 = $r28;

        r2 = r6;

        b0 = -7;

        goto label31;

     label36:
        $r29 := @caughtexception;

        r5 = $r29;

        r2 = r5;

        b0 = -7;

        goto label31;

     label37:
        $r31 := @caughtexception;

        goto label03;

     label38:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label37;
        catch org.apache.http.HttpException from label14 to label15 with label18;
        catch java.io.IOException from label14 to label15 with label19;
        catch java.lang.IllegalStateException from label14 to label15 with label20;
        catch org.apache.http.ParseException from label30 to label31 with label34;
        catch java.io.IOException from label30 to label31 with label35;
        catch java.lang.IllegalStateException from label30 to label31 with label36;
    }

    void setCanPersist(org.apache.http.HttpEntity, org.apache.http.ProtocolVersion, int)
    {
        android.net.http.Connection r0;
        org.apache.http.HttpEntity r1;
        org.apache.http.ProtocolVersion r2;
        int i0;
        org.apache.http.protocol.HttpContext $r3;
        boolean $z0;

        r0 := @this: android.net.http.Connection;

        r1 := @parameter0: org.apache.http.HttpEntity;

        r2 := @parameter1: org.apache.http.ProtocolVersion;

        i0 := @parameter2: int;

        $r3 = r0.<android.net.http.Connection: org.apache.http.protocol.HttpContext mHttpContext>;

        $z0 = specialinvoke r0.<android.net.http.Connection: boolean keepAlive(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext)>(r1, r2, i0, $r3);

        r0.<android.net.http.Connection: boolean mCanPersist> = $z0;

        return;
    }

    void setCanPersist(boolean)
    {
        android.net.http.Connection r0;
        boolean z0;

        r0 := @this: android.net.http.Connection;

        z0 := @parameter0: boolean;

        r0.<android.net.http.Connection: boolean mCanPersist> = z0;

        return;
    }

    public java.lang.String toString()
    {
        android.net.http.Connection r0;
        java.lang.Throwable r1, $r4;
        java.lang.String r2;
        org.apache.http.HttpHost $r3;

        r0 := @this: android.net.http.Connection;

        entermonitor r0;

     label1:
        $r3 = r0.<android.net.http.Connection: org.apache.http.HttpHost mHost>;

        r2 = virtualinvoke $r3.<org.apache.http.HttpHost: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
