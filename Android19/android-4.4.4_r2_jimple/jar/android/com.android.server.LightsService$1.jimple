class com.android.server.LightsService$1 extends android.os.IHardwareService$Stub
{
    private static final java.lang.String FLASHLIGHT_FILE;
    final com.android.server.LightsService this$0;

    void <init>(com.android.server.LightsService)
    {
        com.android.server.LightsService$1 r0;
        com.android.server.LightsService r1;

        r0 := @this: com.android.server.LightsService$1;

        r1 := @parameter0: com.android.server.LightsService;

        r0.<com.android.server.LightsService$1: com.android.server.LightsService this$0> = r1;

        specialinvoke r0.<android.os.IHardwareService$Stub: void <init>()>();

        return;
    }

    public boolean getFlashlightEnabled()
    {
        com.android.server.LightsService$1 r0;
        java.io.FileInputStream r1, $r3;
        int i0;
        boolean z0;
        java.lang.Exception $r4;

        r0 := @this: com.android.server.LightsService$1;

     label1:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>("/sys/class/leds/spotlight/brightness");

        r1 = $r3;

        i0 = virtualinvoke r1.<java.io.FileInputStream: int read()>();

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label2:
        z0 = 0;

        if i0 == 48 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public void setFlashlightEnabled(boolean)
    {
        com.android.server.LightsService$1 r0;
        boolean z0;
        java.io.FileOutputStream r1, $r6;
        byte[] r3;
        byte b0;
        com.android.server.LightsService $r4, $r7;
        android.content.Context $r5, $r8;
        int $i1, $i2;
        java.lang.SecurityException $r9;
        java.lang.Exception $r10;

        r0 := @this: com.android.server.LightsService$1;

        z0 := @parameter0: boolean;

        $r4 = r0.<com.android.server.LightsService$1: com.android.server.LightsService this$0>;

        $r5 = staticinvoke <com.android.server.LightsService: android.content.Context access$300(com.android.server.LightsService)>($r4);

        $i1 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.FLASHLIGHT");

        if $i1 == 0 goto label1;

        $r7 = r0.<com.android.server.LightsService$1: com.android.server.LightsService this$0>;

        $r8 = staticinvoke <com.android.server.LightsService: android.content.Context access$300(com.android.server.LightsService)>($r7);

        $i2 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.HARDWARE_TEST");

        if $i2 == 0 goto label1;

        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires FLASHLIGHT or HARDWARE_TEST permission");

        throw $r9;

     label1:
        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.lang.String)>("/sys/class/leds/spotlight/brightness");

        r1 = $r6;

        r3 = newarray (byte)[2];

     label2:
        if z0 == 0 goto label5;

        b0 = 49;

     label3:
        r3[0] = b0;

        r3[1] = 10;

        virtualinvoke r1.<java.io.FileOutputStream: void write(byte[])>(r3);

        virtualinvoke r1.<java.io.FileOutputStream: void close()>();

     label4:
        return;

     label5:
        b0 = 48;

        goto label3;

     label6:
        $r10 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public static void <clinit>()
    {
        <com.android.server.LightsService$1: java.lang.String FLASHLIGHT_FILE> = "/sys/class/leds/spotlight/brightness";

        return;
    }
}
