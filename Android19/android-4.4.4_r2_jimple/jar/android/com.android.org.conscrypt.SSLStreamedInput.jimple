public class com.android.org.conscrypt.SSLStreamedInput extends com.android.org.conscrypt.SSLInputStream
{
    private java.io.InputStream in;

    public void <init>(java.io.InputStream)
    {
        com.android.org.conscrypt.SSLStreamedInput r0;
        java.io.InputStream r1;

        r0 := @this: com.android.org.conscrypt.SSLStreamedInput;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<com.android.org.conscrypt.SSLInputStream: void <init>()>();

        r0.<com.android.org.conscrypt.SSLStreamedInput: java.io.InputStream in> = r1;

        return;
    }

    public int available() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLStreamedInput r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: com.android.org.conscrypt.SSLStreamedInput;

        $r1 = r0.<com.android.org.conscrypt.SSLStreamedInput: java.io.InputStream in>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    public int read() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLStreamedInput r0;
        int i0;
        java.io.InputStream $r1;
        com.android.org.conscrypt.EndOfSourceException $r2;

        r0 := @this: com.android.org.conscrypt.SSLStreamedInput;

        $r1 = r0.<com.android.org.conscrypt.SSLStreamedInput: java.io.InputStream in>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if i0 >= 0 goto label1;

        $r2 = new com.android.org.conscrypt.EndOfSourceException;

        specialinvoke $r2.<com.android.org.conscrypt.EndOfSourceException: void <init>()>();

        throw $r2;

     label1:
        return i0;
    }
}
