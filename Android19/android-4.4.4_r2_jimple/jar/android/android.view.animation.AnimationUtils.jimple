public class android.view.animation.AnimationUtils extends java.lang.Object
{
    private static final int SEQUENTIALLY;
    private static final int TOGETHER;

    public void <init>()
    {
        android.view.animation.AnimationUtils r0;

        r0 := @this: android.view.animation.AnimationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.view.animation.Animation createAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet $r2;
        android.view.animation.Animation $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r3 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet)>(r0, r1, null, $r2);

        return $r3;
    }

    private static android.view.animation.Animation createAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.view.animation.AnimationSet, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.animation.AnimationSet r2, $r16, $r17;
        android.util.AttributeSet r3;
        android.view.animation.Animation r4;
        int i0, i1, $i2;
        java.lang.String r5, $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r6, $r9, $r11;
        java.lang.RuntimeException $r7;
        android.view.animation.RotateAnimation $r12;
        android.view.animation.TranslateAnimation $r13;
        android.view.animation.AlphaAnimation $r14;
        android.view.animation.ScaleAnimation $r15;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.view.animation.AnimationSet;

        r3 := @parameter3: android.util.AttributeSet;

        r4 = null;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label9;

     label2:
        if i1 == 1 goto label9;

        if i1 != 2 goto label1;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z0 == 0 goto label4;

        $r17 = new android.view.animation.AnimationSet;

        specialinvoke $r17.<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r17;

        $r16 = (android.view.animation.AnimationSet) r4;

        staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet)>(r0, r1, $r16, r3);

     label3:
        if r2 == null goto label1;

        virtualinvoke r2.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r4);

        goto label1;

     label4:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z1 == 0 goto label5;

        $r14 = new android.view.animation.AlphaAnimation;

        specialinvoke $r14.<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r14;

        goto label3;

     label5:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("scale");

        if $z2 == 0 goto label6;

        $r15 = new android.view.animation.ScaleAnimation;

        specialinvoke $r15.<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r15;

        goto label3;

     label6:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("rotate");

        if $z3 == 0 goto label7;

        $r12 = new android.view.animation.RotateAnimation;

        specialinvoke $r12.<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r12;

        goto label3;

     label7:
        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("translate");

        if $z4 == 0 goto label8;

        $r13 = new android.view.animation.TranslateAnimation;

        specialinvoke $r13.<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r13;

        goto label3;

     label8:
        $r7 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animation name: ");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label9:
        return r4;
    }

    private static android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.animation.Interpolator r2;
        int i0, i1, $i2;
        android.util.AttributeSet r3;
        java.lang.String r4, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r5, $r8, $r10;
        java.lang.RuntimeException $r6;
        android.view.animation.AnticipateOvershootInterpolator $r11;
        android.view.animation.BounceInterpolator $r12;
        android.view.animation.AnticipateInterpolator $r13;
        android.view.animation.OvershootInterpolator $r14;
        android.view.animation.AccelerateDecelerateInterpolator $r15;
        android.view.animation.CycleInterpolator $r16;
        android.view.animation.LinearInterpolator $r17;
        android.view.animation.DecelerateInterpolator $r18;
        android.view.animation.AccelerateInterpolator $r19;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 = null;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 != 3 goto label02;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label12;

     label02:
        if i1 == 1 goto label12;

        if i1 != 2 goto label01;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("linearInterpolator");

        if $z0 == 0 goto label03;

        $r17 = new android.view.animation.LinearInterpolator;

        specialinvoke $r17.<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r17;

        goto label01;

     label03:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("accelerateInterpolator");

        if $z1 == 0 goto label04;

        $r19 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r19.<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r19;

        goto label01;

     label04:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("decelerateInterpolator");

        if $z2 == 0 goto label05;

        $r18 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r18.<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r18;

        goto label01;

     label05:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("accelerateDecelerateInterpolator");

        if $z3 == 0 goto label06;

        $r15 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r15.<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r15;

        goto label01;

     label06:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("cycleInterpolator");

        if $z4 == 0 goto label07;

        $r16 = new android.view.animation.CycleInterpolator;

        specialinvoke $r16.<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r16;

        goto label01;

     label07:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("anticipateInterpolator");

        if $z6 == 0 goto label08;

        $r13 = new android.view.animation.AnticipateInterpolator;

        specialinvoke $r13.<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r13;

        goto label01;

     label08:
        $z5 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("overshootInterpolator");

        if $z5 == 0 goto label09;

        $r14 = new android.view.animation.OvershootInterpolator;

        specialinvoke $r14.<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r14;

        goto label01;

     label09:
        $z8 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("anticipateOvershootInterpolator");

        if $z8 == 0 goto label10;

        $r11 = new android.view.animation.AnticipateOvershootInterpolator;

        specialinvoke $r11.<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r11;

        goto label01;

     label10:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("bounceInterpolator");

        if $z7 == 0 goto label11;

        $r12 = new android.view.animation.BounceInterpolator;

        specialinvoke $r12.<android.view.animation.BounceInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r2 = $r12;

        goto label01;

     label11:
        $r6 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown interpolator name: ");

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label12:
        return r2;
    }

    private static android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet $r2;
        android.view.animation.LayoutAnimationController $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r3 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r0, r1, $r2);

        return $r3;
    }

    private static android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.view.animation.LayoutAnimationController r3, $r13;
        int i0, i1, $i2;
        java.lang.String r4, $r5, $r6, $r12;
        boolean $z0, $z1;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        android.view.animation.GridLayoutAnimationController $r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 = null;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label5;

     label2:
        if i1 == 1 goto label5;

        if i1 != 2 goto label1;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "layoutAnimation";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

        $r13 = new android.view.animation.LayoutAnimationController;

        specialinvoke $r13.<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r2);

        r3 = $r13;

        goto label1;

     label3:
        $r6 = "gridLayoutAnimation";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label4;

        $r11 = new android.view.animation.GridLayoutAnimationController;

        specialinvoke $r11.<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r2);

        r3 = $r11;

        goto label1;

     label4:
        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown layout animation name: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label5:
        return r3;
    }

    public static long currentAnimationTimeMillis()
    {
        long $l0;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        return $l0;
    }

    public static android.view.animation.Animation loadAnimation(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        java.io.IOException r2, $r9;
        android.content.res.Resources$NotFoundException r3, r6, $r10, $r17;
        java.lang.Throwable r4, $r25;
        org.xmlpull.v1.XmlPullParserException r5, $r18;
        android.view.animation.Animation r7;
        android.content.res.Resources $r8;
        java.lang.StringBuilder $r11, $r12, $r13, $r19, $r20, $r21;
        java.lang.String $r14, $r16, $r22, $r24;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = null;

     label01:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        r7 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>(r0, r1);

     label02:
        if r1 == null goto label03;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label03:
        return r7;

     label04:
        $r18 := @caughtexception;

        r5 = $r18;

     label05:
        $r17 = new android.content.res.Resources$NotFoundException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r24);

        r6 = $r17;

        virtualinvoke r6.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r5);

        throw r6;

     label06:
        $r25 := @caughtexception;

        r4 = $r25;

        if r1 == null goto label07;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label07:
        throw r4;

     label08:
        $r9 := @caughtexception;

        r2 = $r9;

     label09:
        $r10 = new android.content.res.Resources$NotFoundException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r16);

        r3 = $r10;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        throw r3;

     label10:
        nop;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label04;
        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    public static android.view.animation.Interpolator loadInterpolator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        java.io.IOException r2, $r17;
        android.content.res.Resources$NotFoundException r3, r6, $r10, $r20;
        java.lang.Throwable r4, $r18;
        org.xmlpull.v1.XmlPullParserException r5, $r9;
        android.view.animation.Interpolator r7;
        android.content.res.Resources $r8;
        java.lang.StringBuilder $r11, $r12, $r13, $r19, $r22, $r24;
        java.lang.String $r14, $r16, $r21, $r23;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = null;

     label01:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        r7 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>(r0, r1);

     label02:
        if r1 == null goto label03;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label03:
        return r7;

     label04:
        $r9 := @caughtexception;

        r5 = $r9;

     label05:
        $r10 = new android.content.res.Resources$NotFoundException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r16);

        r6 = $r10;

        virtualinvoke r6.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r5);

        throw r6;

     label06:
        $r18 := @caughtexception;

        r4 = $r18;

        if r1 == null goto label07;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label07:
        throw r4;

     label08:
        $r17 := @caughtexception;

        r2 = $r17;

     label09:
        $r20 = new android.content.res.Resources$NotFoundException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r23);

        r3 = $r20;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        throw r3;

     label10:
        nop;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label04;
        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    public static android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        java.io.IOException r2, $r17;
        android.content.res.Resources$NotFoundException r3, r6, $r12, $r20;
        java.lang.Throwable r4, $r9;
        org.xmlpull.v1.XmlPullParserException r5, $r10;
        android.view.animation.LayoutAnimationController r7;
        android.content.res.Resources $r8;
        java.lang.StringBuilder $r11, $r14, $r16, $r19, $r22, $r24;
        java.lang.String $r13, $r15, $r21, $r23;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = null;

     label01:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        r7 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>(r0, r1);

     label02:
        if r1 == null goto label03;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label03:
        return r7;

     label04:
        $r10 := @caughtexception;

        r5 = $r10;

     label05:
        $r12 = new android.content.res.Resources$NotFoundException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r15);

        r6 = $r12;

        virtualinvoke r6.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r5);

        throw r6;

     label06:
        $r9 := @caughtexception;

        r4 = $r9;

        if r1 == null goto label07;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label07:
        throw r4;

     label08:
        $r17 := @caughtexception;

        r2 = $r17;

     label09:
        $r20 = new android.content.res.Resources$NotFoundException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r23);

        r3 = $r20;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        throw r3;

     label10:
        nop;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label04;
        catch java.io.IOException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    public static android.view.animation.Animation makeInAnimation(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        android.view.animation.Animation r1;
        android.view.animation.DecelerateInterpolator $r2;
        long $l0;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432578);

     label1:
        $r2 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r2.<android.view.animation.DecelerateInterpolator: void <init>()>();

        virtualinvoke r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return r1;

     label2:
        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432660);

        goto label1;
    }

    public static android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)
    {
        android.content.Context r0;
        android.view.animation.Animation r1;
        android.view.animation.AccelerateInterpolator $r2;
        long $l0;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432659);

        $r2 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateInterpolator: void <init>()>();

        virtualinvoke r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return r1;
    }

    public static android.view.animation.Animation makeOutAnimation(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        android.view.animation.Animation r1;
        android.view.animation.AccelerateInterpolator $r2;
        long $l0;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432579);

     label1:
        $r2 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateInterpolator: void <init>()>();

        virtualinvoke r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return r1;

     label2:
        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432663);

        goto label1;
    }

    public static void <clinit>()
    {
        <android.view.animation.AnimationUtils: int SEQUENTIALLY> = 1;

        return;
    }
}
