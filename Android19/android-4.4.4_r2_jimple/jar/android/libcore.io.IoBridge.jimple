public final class libcore.io.IoBridge extends java.lang.Object
{
    public static final int JAVA_IP_MULTICAST_TTL;
    public static final int JAVA_MCAST_JOIN_GROUP;
    public static final int JAVA_MCAST_LEAVE_GROUP;

    private void <init>()
    {
        libcore.io.IoBridge r0;

        r0 := @this: libcore.io.IoBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int available(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        libcore.util.MutableInt r1, $r3;
        libcore.io.ErrnoException r2, $r5;
        int i0, i1, i2, $i3, $i5;
        libcore.io.Os $r4;
        java.io.IOException $r6;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        $r3 = new libcore.util.MutableInt;

        specialinvoke $r3.<libcore.util.MutableInt: void <init>(int)>(0);

        r1 = $r3;

        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        $i3 = <libcore.io.OsConstants: int FIONREAD>;

        interfaceinvoke $r4.<libcore.io.Os: int ioctlInt(java.io.FileDescriptor,int,libcore.util.MutableInt)>(r0, $i3, r1);

        $i5 = r1.<libcore.util.MutableInt: int value>;

        if $i5 >= 0 goto label2;

        r1.<libcore.util.MutableInt: int value> = 0;

     label2:
        i2 = r1.<libcore.util.MutableInt: int value>;

     label3:
        return i2;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        i0 = r2.<libcore.io.ErrnoException: int errno>;

        i1 = <libcore.io.OsConstants: int ENOTTY>;

        i2 = 0;

        if i0 == i1 goto label3;

        $r6 = virtualinvoke r2.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r6;

        catch libcore.io.ErrnoException from label1 to label2 with label4;
        catch libcore.io.ErrnoException from label2 to label3 with label4;
    }

    public static void bind(java.io.FileDescriptor, java.net.InetAddress, int) throws java.net.SocketException
    {
        java.io.FileDescriptor r0;
        java.net.InetAddress r1;
        int i0, $i1, $i2;
        libcore.io.ErrnoException r2, $r16;
        java.net.NetworkInterface r3;
        java.net.UnknownHostException r4, $r14;
        java.net.Inet6Address r5, $r7;
        boolean $z0;
        libcore.io.Os $r6;
        java.lang.String $r8, $r15, $r18;
        byte[] $r9;
        java.lang.StringBuilder $r10, $r12, $r13;
        java.net.SocketException $r11;
        java.lang.AssertionError $r17;
        java.net.BindException $r19;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        $z0 = r1 instanceof java.net.Inet6Address;

        if $z0 == 0 goto label3;

        $r7 = (java.net.Inet6Address) r1;

        $i1 = virtualinvoke $r7.<java.net.Inet6Address: int getScopeId()>();

        if $i1 != 0 goto label3;

        r3 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)>(r1);

        if r3 != null goto label1;

        $r11 = new java.net.SocketException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t bind to a link-local address without a scope id: ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.net.SocketException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        $r8 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostName()>();

        $r9 = virtualinvoke r1.<java.net.InetAddress: byte[] getAddress()>();

        $i2 = virtualinvoke r3.<java.net.NetworkInterface: int getIndex()>();

        r5 = staticinvoke <java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],int)>($r8, $r9, $i2);

     label2:
        r1 = r5;

     label3:
        $r6 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r6.<libcore.io.Os: void bind(java.io.FileDescriptor,java.net.InetAddress,int)>(r0, r1, i0);

     label4:
        return;

     label5:
        $r14 := @caughtexception;

        r4 = $r14;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>(r4);

        throw $r17;

     label6:
        $r16 := @caughtexception;

        r2 = $r16;

        $r19 = new java.net.BindException;

        $r18 = virtualinvoke r2.<libcore.io.ErrnoException: java.lang.String getMessage()>();

        specialinvoke $r19.<java.net.BindException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r2);

        throw $r19;

        catch java.net.UnknownHostException from label1 to label2 with label5;
        catch libcore.io.ErrnoException from label3 to label4 with label6;
    }

    private static boolean booleanFromInt(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static int booleanToInt(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void closeSocket(java.io.FileDescriptor) throws java.io.IOException
    {
        java.io.FileDescriptor r0, r1, $r3;
        int i0;
        boolean $z0;
        libcore.io.Os $r4;
        libcore.io.ErrnoException $r5;

        r0 := @parameter0: java.io.FileDescriptor;

        $z0 = virtualinvoke r0.<java.io.FileDescriptor: boolean valid()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r0.<java.io.FileDescriptor: int getInt$()>();

        virtualinvoke r0.<java.io.FileDescriptor: void setInt$(int)>(-1);

        $r3 = new java.io.FileDescriptor;

        specialinvoke $r3.<java.io.FileDescriptor: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<java.io.FileDescriptor: void setInt$(int)>(i0);

        staticinvoke <libcore.io.AsynchronousCloseMonitor: void signalBlockedThreads(java.io.FileDescriptor)>(r1);

     label2:
        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r4.<libcore.io.Os: void close(java.io.FileDescriptor)>(r1);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        return;

        catch libcore.io.ErrnoException from label2 to label3 with label4;
    }

    public static boolean connect(java.io.FileDescriptor, java.net.InetAddress, int) throws java.net.SocketException
    {
        java.io.FileDescriptor r0;
        java.net.InetAddress r1;
        int i0;
        java.net.SocketTimeoutException r2, $r3;
        boolean z0;
        java.lang.AssertionError $r4;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

     label1:
        z0 = staticinvoke <libcore.io.IoBridge: boolean connect(java.io.FileDescriptor,java.net.InetAddress,int,int)>(r0, r1, i0, 0);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2);

        throw $r4;

        catch java.net.SocketTimeoutException from label1 to label2 with label3;
    }

    public static boolean connect(java.io.FileDescriptor, java.net.InetAddress, int, int) throws java.net.SocketException, java.net.SocketTimeoutException
    {
        java.io.FileDescriptor r0;
        java.net.InetAddress r1;
        int i0, i1;
        java.io.IOException r2, $r7;
        java.net.SocketTimeoutException r3, $r6;
        java.net.SocketException r4, $r8, $r12;
        libcore.io.ErrnoException r5, $r9;
        boolean z0;
        java.net.ConnectException $r10;
        java.lang.String $r11;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

     label1:
        z0 = staticinvoke <libcore.io.IoBridge: boolean connectErrno(java.io.FileDescriptor,java.net.InetAddress,int,int)>(r0, r1, i0, i1);

     label2:
        return z0;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        $r10 = new java.net.ConnectException;

        $r11 = staticinvoke <libcore.io.IoBridge: java.lang.String connectDetail(java.net.InetAddress,int,int,libcore.io.ErrnoException)>(r1, i0, i1, r5);

        specialinvoke $r10.<java.net.ConnectException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r5);

        throw $r10;

     label4:
        $r12 := @caughtexception;

        r4 = $r12;

        throw r4;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        throw r3;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.net.SocketException;

        specialinvoke $r8.<java.net.SocketException: void <init>(java.lang.Throwable)>(r2);

        throw $r8;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
        catch java.net.SocketException from label1 to label2 with label4;
        catch java.net.SocketTimeoutException from label1 to label2 with label5;
        catch java.io.IOException from label1 to label2 with label6;
    }

    private static java.lang.String connectDetail(java.net.InetAddress, int, int, libcore.io.ErrnoException)
    {
        java.net.InetAddress r0;
        int i0, i1;
        libcore.io.ErrnoException r1;
        java.lang.String r2, $r12;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: libcore.io.ErrnoException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to connect to ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (port ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        if i1 <= 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if r1 == null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke r1.<libcore.io.ErrnoException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r2;
    }

    private static boolean connectErrno(java.io.FileDescriptor, java.net.InetAddress, int, int) throws libcore.io.ErrnoException, java.io.IOException
    {
        java.io.FileDescriptor r0;
        java.net.InetAddress r1;
        int i0, i1, i3, $i6, $i7;
        long l2, $l4, $l5, $l8, $l9;
        libcore.io.ErrnoException r2, $r5;
        libcore.io.Os $r3, $r4;
        boolean $z0;
        java.lang.String $r6;
        java.net.SocketTimeoutException $r7;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if i1 != 0 goto label1;

        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r4.<libcore.io.Os: void connect(java.io.FileDescriptor,java.net.InetAddress,int)>(r0, r1, i0);

        return 1;

     label1:
        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>(r0, 0);

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = (long) i1;

        l2 = $l4 + $l5;

     label2:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r3.<libcore.io.Os: void connect(java.io.FileDescriptor,java.net.InetAddress,int)>(r0, r1, i0);

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>(r0, 1);

     label3:
        return 1;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        $i7 = r2.<libcore.io.ErrnoException: int errno>;

        $i6 = <libcore.io.OsConstants: int EINPROGRESS>;

        if $i7 == $i6 goto label5;

        throw r2;

     label5:
        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l9 = l2 - $l8;

        i3 = (int) $l9;

        if i3 > 0 goto label6;

        $r7 = new java.net.SocketTimeoutException;

        $r6 = staticinvoke <libcore.io.IoBridge: java.lang.String connectDetail(java.net.InetAddress,int,int,libcore.io.ErrnoException)>(r1, i0, i1, null);

        specialinvoke $r7.<java.net.SocketTimeoutException: void <init>(java.lang.String)>($r6);

        throw $r7;

     label6:
        $z0 = staticinvoke <libcore.io.IoBridge: boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int)>(r0, r1, i0, i1, i3);

        if $z0 == 0 goto label5;

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>(r0, 1);

        return 1;

        catch libcore.io.ErrnoException from label2 to label3 with label4;
    }

    public static java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor) throws java.net.SocketException
    {
        java.io.FileDescriptor r0;
        libcore.io.ErrnoException r1, $r6;
        java.net.InetAddress r2;
        libcore.io.Os $r3;
        java.net.SocketAddress $r4;
        java.net.InetSocketAddress $r5;
        java.net.SocketException $r7;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r4 = interfaceinvoke $r3.<libcore.io.Os: java.net.SocketAddress getsockname(java.io.FileDescriptor)>(r0);

        $r5 = (java.net.InetSocketAddress) $r4;

        r2 = virtualinvoke $r5.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = virtualinvoke r1.<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()>();

        throw $r7;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static int getSocketLocalPort(java.io.FileDescriptor) throws java.net.SocketException
    {
        java.io.FileDescriptor r0;
        libcore.io.ErrnoException r1, $r5;
        int i0;
        libcore.io.Os $r2;
        java.net.SocketAddress $r3;
        java.net.InetSocketAddress $r4;
        java.net.SocketException $r6;

        r0 := @parameter0: java.io.FileDescriptor;

     label1:
        $r2 = <libcore.io.Libcore: libcore.io.Os os>;

        $r3 = interfaceinvoke $r2.<libcore.io.Os: java.net.SocketAddress getsockname(java.io.FileDescriptor)>(r0);

        $r4 = (java.net.InetSocketAddress) $r3;

        i0 = virtualinvoke $r4.<java.net.InetSocketAddress: int getPort()>();

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = virtualinvoke r1.<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()>();

        throw $r6;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static java.lang.Object getSocketOption(java.io.FileDescriptor, int) throws java.net.SocketException
    {
        java.io.FileDescriptor r0;
        int i0;
        libcore.io.ErrnoException r1, $r3;
        java.lang.Object r2;
        java.net.SocketException $r4;

        r0 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

     label1:
        r2 = staticinvoke <libcore.io.IoBridge: java.lang.Object getSocketOptionErrno(java.io.FileDescriptor,int)>(r0, i0);

     label2:
        return r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = virtualinvoke r1.<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()>();

        throw $r4;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    private static java.lang.Object getSocketOptionErrno(java.io.FileDescriptor, int) throws libcore.io.ErrnoException, java.net.SocketException
    {
        java.io.FileDescriptor r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        libcore.io.StructLinger r1;
        libcore.io.Os $r2, $r5, $r7, $r9, $r11, $r15, $r16, $r17, $r21, $r23, $r24, $r25, $r29, $r30;
        libcore.io.StructTimeval $r3;
        long $l3;
        java.lang.Integer $r4, $r8, $r10, $r12, $r18, $r20, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Boolean $r6, $r13, $r14, $r19, $r26, $r27, $r36;
        java.net.InetAddress $r22;
        java.lang.StringBuilder $r31, $r32, $r34;
        java.lang.String $r33;
        java.net.SocketException $r35;

        r0 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 1: goto label16;
            case 3: goto label06;
            case 4: goto label13;
            case 8: goto label08;
            case 16: goto label02;
            case 17: goto label05;
            case 18: goto label04;
            case 31: goto label03;
            case 32: goto label07;
            case 128: goto label09;
            case 4097: goto label14;
            case 4098: goto label12;
            case 4099: goto label11;
            case 4102: goto label15;
            default: goto label01;
        };

     label01:
        $r35 = new java.net.SocketException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown socket option: ");

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.net.SocketException: void <init>(java.lang.String)>($r33);

        throw $r35;

     label02:
        $r23 = <libcore.io.Libcore: libcore.io.Os os>;

        $i29 = <libcore.io.OsConstants: int IPPROTO_IP>;

        $i30 = <libcore.io.OsConstants: int IP_MULTICAST_IF>;

        $r22 = interfaceinvoke $r23.<libcore.io.Os: java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int)>(r0, $i29, $i30);

        return $r22;

     label03:
        $r16 = <libcore.io.Libcore: libcore.io.Os os>;

        $i22 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i21 = <libcore.io.OsConstants: int IPV6_MULTICAST_IF>;

        $i20 = interfaceinvoke $r16.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i22, $i21);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        return $r18;

     label04:
        $r17 = <libcore.io.Libcore: libcore.io.Os os>;

        $i23 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i24 = <libcore.io.OsConstants: int IPV6_MULTICAST_LOOP>;

        $i26 = interfaceinvoke $r17.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i23, $i24);

        $z3 = staticinvoke <libcore.io.IoBridge: boolean booleanFromInt(int)>($i26);

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        return $r19;

     label05:
        $r21 = <libcore.io.Libcore: libcore.io.Os os>;

        $i28 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i25 = <libcore.io.OsConstants: int IPV6_MULTICAST_HOPS>;

        $i27 = interfaceinvoke $r21.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i28, $i25);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        return $r20;

     label06:
        $r30 = <libcore.io.Libcore: libcore.io.Os os>;

        $i40 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i39 = <libcore.io.OsConstants: int IPV6_TCLASS>;

        $i41 = interfaceinvoke $r30.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i40, $i39);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i41);

        return $r28;

     label07:
        $r15 = <libcore.io.Libcore: libcore.io.Os os>;

        $i18 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i17 = <libcore.io.OsConstants: int SO_BROADCAST>;

        $i19 = interfaceinvoke $r15.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i18, $i17);

        $z2 = staticinvoke <libcore.io.IoBridge: boolean booleanFromInt(int)>($i19);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        return $r14;

     label08:
        $r24 = <libcore.io.Libcore: libcore.io.Os os>;

        $i32 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i33 = <libcore.io.OsConstants: int SO_KEEPALIVE>;

        $i31 = interfaceinvoke $r24.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i32, $i33);

        $z5 = staticinvoke <libcore.io.IoBridge: boolean booleanFromInt(int)>($i31);

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        return $r27;

     label09:
        $r11 = <libcore.io.Libcore: libcore.io.Os os>;

        $i14 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i15 = <libcore.io.OsConstants: int SO_LINGER>;

        r1 = interfaceinvoke $r11.<libcore.io.Os: libcore.io.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int)>(r0, $i14, $i15);

        $z1 = virtualinvoke r1.<libcore.io.StructLinger: boolean isOn()>();

        if $z1 != 0 goto label10;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r13;

     label10:
        $i16 = r1.<libcore.io.StructLinger: int l_linger>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        return $r12;

     label11:
        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $i6 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i5 = <libcore.io.OsConstants: int SO_OOBINLINE>;

        $i7 = interfaceinvoke $r5.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i6, $i5);

        $z0 = staticinvoke <libcore.io.IoBridge: boolean booleanFromInt(int)>($i7);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r6;

     label12:
        $r7 = <libcore.io.Libcore: libcore.io.Os os>;

        $i8 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i9 = <libcore.io.OsConstants: int SO_RCVBUF>;

        $i10 = interfaceinvoke $r7.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i8, $i9);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        return $r8;

     label13:
        $r25 = <libcore.io.Libcore: libcore.io.Os os>;

        $i36 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i35 = <libcore.io.OsConstants: int SO_REUSEADDR>;

        $i34 = interfaceinvoke $r25.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i36, $i35);

        $z4 = staticinvoke <libcore.io.IoBridge: boolean booleanFromInt(int)>($i34);

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r26;

     label14:
        $r9 = <libcore.io.Libcore: libcore.io.Os os>;

        $i12 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i11 = <libcore.io.OsConstants: int SO_SNDBUF>;

        $i13 = interfaceinvoke $r9.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i12, $i11);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        return $r10;

     label15:
        $r2 = <libcore.io.Libcore: libcore.io.Os os>;

        $i2 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i1 = <libcore.io.OsConstants: int SO_RCVTIMEO>;

        $r3 = interfaceinvoke $r2.<libcore.io.Os: libcore.io.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int)>(r0, $i2, $i1);

        $l3 = virtualinvoke $r3.<libcore.io.StructTimeval: long toMillis()>();

        $i4 = (int) $l3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r4;

     label16:
        $r29 = <libcore.io.Libcore: libcore.io.Os os>;

        $i38 = <libcore.io.OsConstants: int IPPROTO_TCP>;

        $i37 = <libcore.io.OsConstants: int TCP_NODELAY>;

        $i42 = interfaceinvoke $r29.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i38, $i37);

        $z6 = staticinvoke <libcore.io.IoBridge: boolean booleanFromInt(int)>($i42);

        $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        return $r36;
    }

    public static boolean isConnected(java.io.FileDescriptor, java.net.InetAddress, int, int, int) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        java.net.InetAddress r1;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        libcore.io.ErrnoException r2, $r10, $r11;
        java.lang.String r3;
        libcore.io.StructPollfd[] r4;
        libcore.io.StructPollfd $r5, $r6, $r7;
        short $s5;
        libcore.io.Os $r8, $r9;
        boolean $z0;
        java.net.ConnectException $r12;
        java.net.SocketException $r13;
        java.net.SocketTimeoutException $r14;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

     label1:
        r4 = newarray (libcore.io.StructPollfd)[1];

        $r5 = new libcore.io.StructPollfd;

        specialinvoke $r5.<libcore.io.StructPollfd: void <init>()>();

        r4[0] = $r5;

        $r6 = r4[0];

        $r6.<libcore.io.StructPollfd: java.io.FileDescriptor fd> = r0;

        $r7 = r4[0];

        $i4 = <libcore.io.OsConstants: int POLLOUT>;

        $s5 = (short) $i4;

        $r7.<libcore.io.StructPollfd: short events> = $s5;

        $r8 = <libcore.io.Libcore: libcore.io.Os os>;

        $i7 = interfaceinvoke $r8.<libcore.io.Os: int poll(libcore.io.StructPollfd[],int)>(r4, i2);

        if $i7 != 0 goto label3;

     label2:
        return 0;

     label3:
        $r9 = <libcore.io.Libcore: libcore.io.Os os>;

        $i8 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i6 = <libcore.io.OsConstants: int SO_ERROR>;

        i3 = interfaceinvoke $r9.<libcore.io.Os: int getsockoptInt(java.io.FileDescriptor,int,int)>(r0, $i8, $i6);

     label4:
        if i3 != 0 goto label5;

        return 1;

     label5:
        $r10 = new libcore.io.ErrnoException;

        specialinvoke $r10.<libcore.io.ErrnoException: void <init>(java.lang.String,int)>("isConnected", i3);

        throw $r10;

     label6:
        $r11 := @caughtexception;

        r2 = $r11;

        $z0 = virtualinvoke r0.<java.io.FileDescriptor: boolean valid()>();

        if $z0 != 0 goto label7;

        $r13 = new java.net.SocketException;

        specialinvoke $r13.<java.net.SocketException: void <init>(java.lang.String)>("Socket closed");

        throw $r13;

     label7:
        $i9 = r2.<libcore.io.ErrnoException: int errno>;

        $i10 = <libcore.io.OsConstants: int EINTR>;

        if $i9 == $i10 goto label9;

        r3 = staticinvoke <libcore.io.IoBridge: java.lang.String connectDetail(java.net.InetAddress,int,int,libcore.io.ErrnoException)>(r1, i0, i1, r2);

        $i12 = r2.<libcore.io.ErrnoException: int errno>;

        $i11 = <libcore.io.OsConstants: int ETIMEDOUT>;

        if $i12 != $i11 goto label8;

        $r14 = new java.net.SocketTimeoutException;

        specialinvoke $r14.<java.net.SocketTimeoutException: void <init>(java.lang.String,java.lang.Throwable)>(r3, r2);

        throw $r14;

     label8:
        $r12 = new java.net.ConnectException;

        specialinvoke $r12.<java.net.ConnectException: void <init>(java.lang.String,java.lang.Throwable)>(r3, r2);

        throw $r12;

     label9:
        return 0;

        catch libcore.io.ErrnoException from label1 to label2 with label6;
        catch libcore.io.ErrnoException from label3 to label4 with label6;
        catch libcore.io.ErrnoException from label5 to label6 with label6;
    }

    private static int maybeThrowAfterRecvfrom(boolean, boolean, libcore.io.ErrnoException) throws java.net.SocketException, java.net.SocketTimeoutException
    {
        boolean z0, z1;
        libcore.io.ErrnoException r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.net.SocketException $r1, $r4;
        java.net.SocketTimeoutException $r2;
        java.net.PortUnreachableException $r3;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r0 := @parameter2: libcore.io.ErrnoException;

        if z0 == 0 goto label2;

        $i5 = r0.<libcore.io.ErrnoException: int errno>;

        $i4 = <libcore.io.OsConstants: int EAGAIN>;

        if $i5 != $i4 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()>();

        throw $r4;

     label2:
        if z1 == 0 goto label3;

        $i3 = r0.<libcore.io.ErrnoException: int errno>;

        $i2 = <libcore.io.OsConstants: int ECONNREFUSED>;

        if $i3 != $i2 goto label3;

        $r3 = new java.net.PortUnreachableException;

        specialinvoke $r3.<java.net.PortUnreachableException: void <init>(java.lang.String,java.lang.Throwable)>("", r0);

        throw $r3;

     label3:
        $i1 = r0.<libcore.io.ErrnoException: int errno>;

        $i0 = <libcore.io.OsConstants: int EAGAIN>;

        if $i1 != $i0 goto label4;

        $r2 = new java.net.SocketTimeoutException;

        specialinvoke $r2.<java.net.SocketTimeoutException: void <init>(java.lang.Throwable)>(r0);

        throw $r2;

     label4:
        $r1 = virtualinvoke r0.<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()>();

        throw $r1;
    }

    private static int maybeThrowAfterSendto(boolean, libcore.io.ErrnoException) throws java.net.SocketException
    {
        boolean z0;
        libcore.io.ErrnoException r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.net.SocketException $r1;

        z0 := @parameter0: boolean;

        r0 := @parameter1: libcore.io.ErrnoException;

        if z0 == 0 goto label2;

        $i3 = r0.<libcore.io.ErrnoException: int errno>;

        $i2 = <libcore.io.OsConstants: int ECONNRESET>;

        if $i3 == $i2 goto label1;

        $i5 = r0.<libcore.io.ErrnoException: int errno>;

        $i4 = <libcore.io.OsConstants: int ECONNREFUSED>;

        if $i5 != $i4 goto label3;

     label1:
        return 0;

     label2:
        $i1 = r0.<libcore.io.ErrnoException: int errno>;

        $i0 = <libcore.io.OsConstants: int EAGAIN>;

        if $i1 == $i0 goto label1;

     label3:
        $r1 = virtualinvoke r0.<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()>();

        throw $r1;
    }

    public static java.io.FileDescriptor open(java.lang.String, int) throws java.io.FileNotFoundException
    {
        java.lang.String r0, $r13, $r15;
        int i0, $i2, $i3, $i4, $i5, $i6;
        java.io.FileDescriptor r1;
        libcore.io.ErrnoException r2, $r8, $r10;
        java.io.FileNotFoundException r3, $r9;
        short s1;
        libcore.io.Os $r5, $r6;
        boolean $z0, $z1;
        libcore.io.StructStat $r7;
        java.lang.StringBuilder $r11, $r12, $r14, $r16;
        java.io.IOException $r17;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = null;

     label1:
        $i2 = <libcore.io.OsConstants: int O_ACCMODE>;

        $i4 = i0 & $i2;

        $i3 = <libcore.io.OsConstants: int O_RDONLY>;

        if $i4 != $i3 goto label7;

     label2:
        s1 = 0;

     label3:
        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        r1 = interfaceinvoke $r5.<libcore.io.Os: java.io.FileDescriptor open(java.lang.String,int,int)>(r0, i0, s1);

        $z0 = virtualinvoke r1.<java.io.FileDescriptor: boolean valid()>();

        if $z0 == 0 goto label9;

        $r6 = <libcore.io.Libcore: libcore.io.Os os>;

        $r7 = interfaceinvoke $r6.<libcore.io.Os: libcore.io.StructStat fstat(java.io.FileDescriptor)>(r1);

        $i5 = $r7.<libcore.io.StructStat: int st_mode>;

        $z1 = staticinvoke <libcore.io.OsConstants: boolean S_ISDIR(int)>($i5);

        if $z1 == 0 goto label9;

        $r8 = new libcore.io.ErrnoException;

        $i6 = <libcore.io.OsConstants: int EISDIR>;

        specialinvoke $r8.<libcore.io.ErrnoException: void <init>(java.lang.String,int)>("open", $i6);

        throw $r8;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

        if r1 == null goto label6;

     label5:
        staticinvoke <libcore.io.IoUtils: void close(java.io.FileDescriptor)>(r1);

     label6:
        $r9 = new java.io.FileNotFoundException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke r2.<libcore.io.ErrnoException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r15);

        r3 = $r9;

        virtualinvoke r3.<java.io.FileNotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

        throw r3;

     label7:
        s1 = 384;

        goto label3;

     label8:
        $r17 := @caughtexception;

        goto label6;

     label9:
        return r1;

        catch libcore.io.ErrnoException from label1 to label2 with label4;
        catch libcore.io.ErrnoException from label3 to label4 with label4;
        catch java.io.IOException from label5 to label6 with label8;
    }

    private static int postRecvfrom(boolean, java.net.DatagramPacket, boolean, java.net.InetSocketAddress, int)
    {
        boolean z0, z1;
        java.net.DatagramPacket r0;
        java.net.InetSocketAddress r1;
        int i0, $i1;
        java.net.InetAddress $r2;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.net.DatagramPacket;

        z1 := @parameter2: boolean;

        r1 := @parameter3: java.net.InetSocketAddress;

        i0 := @parameter4: int;

        if z0 == 0 goto label2;

        if i0 != 0 goto label2;

        i0 = -1;

     label1:
        return i0;

     label2:
        if r0 == null goto label1;

        virtualinvoke r0.<java.net.DatagramPacket: void setReceivedLength(int)>(i0);

        if z1 != 0 goto label1;

        $r2 = virtualinvoke r1.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        virtualinvoke r0.<java.net.DatagramPacket: void setAddress(java.net.InetAddress)>($r2);

        $i1 = virtualinvoke r1.<java.net.InetSocketAddress: int getPort()>();

        virtualinvoke r0.<java.net.DatagramPacket: void setPort(int)>($i1);

        return i0;
    }

    public static int read(java.io.FileDescriptor, byte[], int, int) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        byte[] r1;
        int i0, i1, i2, i3, i4, i5, $i6;
        libcore.io.ErrnoException r2, $r4;
        libcore.io.Os $r3;
        java.io.IOException $r5;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i6 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i6, i0, i1);

        i2 = 0;

        if i1 != 0 goto label2;

     label1:
        return i2;

     label2:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        i5 = interfaceinvoke $r3.<libcore.io.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r0, r1, i0, i1);

     label3:
        i2 = i5;

        if i2 != 0 goto label1;

        return -1;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        i3 = r2.<libcore.io.ErrnoException: int errno>;

        i4 = <libcore.io.OsConstants: int EAGAIN>;

        i2 = 0;

        if i3 == i4 goto label1;

        $r5 = virtualinvoke r2.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r5;

        catch libcore.io.ErrnoException from label2 to label3 with label4;
    }

    public static int recvfrom(boolean, java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.DatagramPacket, boolean) throws java.io.IOException
    {
        boolean z0, z1;
        java.io.FileDescriptor r0;
        java.nio.ByteBuffer r1;
        int i0, i1, $i2, $i3;
        java.net.DatagramPacket r2;
        java.net.InetSocketAddress r3, $r6;
        libcore.io.ErrnoException r4, $r7;
        libcore.io.Os $r5;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.io.FileDescriptor;

        r1 := @parameter2: java.nio.ByteBuffer;

        i0 := @parameter3: int;

        r2 := @parameter4: java.net.DatagramPacket;

        z1 := @parameter5: boolean;

        if r2 == null goto label4;

        if z1 != 0 goto label4;

     label1:
        $r6 = new java.net.InetSocketAddress;

        specialinvoke $r6.<java.net.InetSocketAddress: void <init>()>();

        r3 = $r6;

     label2:
        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $i2 = interfaceinvoke $r5.<libcore.io.Os: int recvfrom(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetSocketAddress)>(r0, r1, i0, r3);

        i1 = staticinvoke <libcore.io.IoBridge: int postRecvfrom(boolean,java.net.DatagramPacket,boolean,java.net.InetSocketAddress,int)>(z0, r2, z1, r3, $i2);

     label3:
        return i1;

     label4:
        r3 = null;

        goto label2;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

        $i3 = staticinvoke <libcore.io.IoBridge: int maybeThrowAfterRecvfrom(boolean,boolean,libcore.io.ErrnoException)>(z0, z1, r4);

        return $i3;

        catch libcore.io.ErrnoException from label1 to label2 with label5;
        catch libcore.io.ErrnoException from label2 to label3 with label5;
    }

    public static int recvfrom(boolean, java.io.FileDescriptor, byte[], int, int, int, java.net.DatagramPacket, boolean) throws java.io.IOException
    {
        boolean z0, z1;
        java.io.FileDescriptor r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4, $i5;
        java.net.DatagramPacket r2;
        java.net.InetSocketAddress r3, $r6;
        libcore.io.ErrnoException r4, $r7;
        libcore.io.Os $r5;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.io.FileDescriptor;

        r1 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r2 := @parameter6: java.net.DatagramPacket;

        z1 := @parameter7: boolean;

        if r2 == null goto label4;

        if z1 != 0 goto label4;

     label1:
        $r6 = new java.net.InetSocketAddress;

        specialinvoke $r6.<java.net.InetSocketAddress: void <init>()>();

        r3 = $r6;

     label2:
        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $i4 = interfaceinvoke $r5.<libcore.io.Os: int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress)>(r0, r1, i0, i1, i2, r3);

        i3 = staticinvoke <libcore.io.IoBridge: int postRecvfrom(boolean,java.net.DatagramPacket,boolean,java.net.InetSocketAddress,int)>(z0, r2, z1, r3, $i4);

     label3:
        return i3;

     label4:
        r3 = null;

        goto label2;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

        $i5 = staticinvoke <libcore.io.IoBridge: int maybeThrowAfterRecvfrom(boolean,boolean,libcore.io.ErrnoException)>(z0, z1, r4);

        return $i5;

        catch libcore.io.ErrnoException from label1 to label2 with label5;
        catch libcore.io.ErrnoException from label2 to label3 with label5;
    }

    public static int sendto(java.io.FileDescriptor, java.nio.ByteBuffer, int, java.net.InetAddress, int) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        java.nio.ByteBuffer r1;
        int i0, i1, i2, $i3, $i4;
        java.net.InetAddress r2;
        boolean z0;
        libcore.io.ErrnoException r3, $r5;
        libcore.io.Os $r4;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: java.nio.ByteBuffer;

        i0 := @parameter2: int;

        r2 := @parameter3: java.net.InetAddress;

        i1 := @parameter4: int;

        if r2 == null goto label2;

        z0 = 1;

     label1:
        if z0 != 0 goto label3;

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        if $i3 != 0 goto label3;

        return 0;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        i2 = interfaceinvoke $r4.<libcore.io.Os: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)>(r0, r1, i0, r2, i1);

     label4:
        return i2;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        $i4 = staticinvoke <libcore.io.IoBridge: int maybeThrowAfterSendto(boolean,libcore.io.ErrnoException)>(z0, r3);

        return $i4;

        catch libcore.io.ErrnoException from label3 to label4 with label5;
    }

    public static int sendto(java.io.FileDescriptor, byte[], int, int, int, java.net.InetAddress, int) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        byte[] r1;
        int i0, i1, i2, i3, i4, $i5;
        java.net.InetAddress r2;
        boolean z0;
        libcore.io.ErrnoException r3, $r5;
        libcore.io.Os $r4;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: java.net.InetAddress;

        i3 := @parameter6: int;

        if r2 == null goto label2;

        z0 = 1;

     label1:
        if z0 != 0 goto label3;

        if i1 > 0 goto label3;

        return 0;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        i4 = interfaceinvoke $r4.<libcore.io.Os: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)>(r0, r1, i0, i1, i2, r2, i3);

     label4:
        return i4;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        $i5 = staticinvoke <libcore.io.IoBridge: int maybeThrowAfterSendto(boolean,libcore.io.ErrnoException)>(z0, r3);

        return $i5;

        catch libcore.io.ErrnoException from label3 to label4 with label5;
    }

    public static void setSocketOption(java.io.FileDescriptor, int, java.lang.Object) throws java.net.SocketException
    {
        java.io.FileDescriptor r0;
        int i0;
        java.lang.Object r1;
        libcore.io.ErrnoException r2, $r3;
        java.net.SocketException $r4;

        r0 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

     label1:
        staticinvoke <libcore.io.IoBridge: void setSocketOptionErrno(java.io.FileDescriptor,int,java.lang.Object)>(r0, i0, r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = virtualinvoke r2.<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()>();

        throw $r4;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    private static void setSocketOptionErrno(java.io.FileDescriptor, int, java.lang.Object) throws libcore.io.ErrnoException, java.net.SocketException
    {
        java.io.FileDescriptor r0;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56;
        java.lang.Object r1;
        libcore.io.StructGroupReq r2;
        libcore.io.StructTimeval r3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        libcore.io.StructLinger r4, $r13;
        java.lang.Integer $r5, $r10, $r11, $r15, $r19, $r21, $r28, $r30, $r38, $r39;
        long $l5;
        libcore.io.Os $r6, $r7, $r9, $r12, $r14, $r17, $r18, $r20, $r23, $r25, $r26, $r29, $r31, $r32, $r35, $r37, $r40, $r42;
        java.lang.Boolean $r8, $r16, $r24, $r27, $r33, $r36, $r41;
        java.net.InetAddress $r22;
        java.lang.UnsupportedOperationException $r34;
        java.lang.String $r43;
        java.lang.StringBuilder $r44, $r45, $r46;
        java.net.SocketException $r47;

        r0 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        lookupswitch(i0)
        {
            case 1: goto label16;
            case 3: goto label06;
            case 4: goto label13;
            case 8: goto label08;
            case 16: goto label02;
            case 17: goto label05;
            case 18: goto label04;
            case 19: goto label17;
            case 20: goto label17;
            case 31: goto label03;
            case 32: goto label07;
            case 128: goto label09;
            case 4097: goto label14;
            case 4098: goto label12;
            case 4099: goto label11;
            case 4102: goto label15;
            default: goto label01;
        };

     label01:
        $r47 = new java.net.SocketException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown socket option: ");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.net.SocketException: void <init>(java.lang.String)>($r43);

        throw $r47;

     label02:
        $r34 = new java.lang.UnsupportedOperationException;

        specialinvoke $r34.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Use IP_MULTICAST_IF2 on Android");

        throw $r34;

     label03:
        $r18 = <libcore.io.Libcore: libcore.io.Os os>;

        $i25 = <libcore.io.OsConstants: int IPPROTO_IP>;

        $i24 = <libcore.io.OsConstants: int IP_MULTICAST_IF>;

        $r19 = (java.lang.Integer) r1;

        $i27 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r18.<libcore.io.Os: void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int)>(r0, $i25, $i24, $i27);

        $r20 = <libcore.io.Libcore: libcore.io.Os os>;

        $i26 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i29 = <libcore.io.OsConstants: int IPV6_MULTICAST_IF>;

        $r21 = (java.lang.Integer) r1;

        $i28 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r20.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i26, $i29, $i28);

        return;

     label04:
        $r23 = <libcore.io.Libcore: libcore.io.Os os>;

        $i30 = <libcore.io.OsConstants: int IPPROTO_IP>;

        $i33 = <libcore.io.OsConstants: int IP_MULTICAST_LOOP>;

        $r24 = (java.lang.Boolean) r1;

        $z6 = virtualinvoke $r24.<java.lang.Boolean: boolean booleanValue()>();

        $i34 = staticinvoke <libcore.io.IoBridge: int booleanToInt(boolean)>($z6);

        interfaceinvoke $r23.<libcore.io.Os: void setsockoptByte(java.io.FileDescriptor,int,int,int)>(r0, $i30, $i33, $i34);

        $r26 = <libcore.io.Libcore: libcore.io.Os os>;

        $i31 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i32 = <libcore.io.OsConstants: int IPV6_MULTICAST_LOOP>;

        $r27 = (java.lang.Boolean) r1;

        $z5 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();

        $i37 = staticinvoke <libcore.io.IoBridge: int booleanToInt(boolean)>($z5);

        interfaceinvoke $r26.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i31, $i32, $i37);

        return;

     label05:
        $r31 = <libcore.io.Libcore: libcore.io.Os os>;

        $i38 = <libcore.io.OsConstants: int IPPROTO_IP>;

        $i35 = <libcore.io.OsConstants: int IP_MULTICAST_TTL>;

        $r30 = (java.lang.Integer) r1;

        $i36 = virtualinvoke $r30.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r31.<libcore.io.Os: void setsockoptByte(java.io.FileDescriptor,int,int,int)>(r0, $i38, $i35, $i36);

        $r29 = <libcore.io.Libcore: libcore.io.Os os>;

        $i42 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i41 = <libcore.io.OsConstants: int IPV6_MULTICAST_HOPS>;

        $r28 = (java.lang.Integer) r1;

        $i43 = virtualinvoke $r28.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r29.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i42, $i41, $i43);

        return;

     label06:
        $r40 = <libcore.io.Libcore: libcore.io.Os os>;

        $i50 = <libcore.io.OsConstants: int IPPROTO_IP>;

        $i51 = <libcore.io.OsConstants: int IP_TOS>;

        $r39 = (java.lang.Integer) r1;

        $i49 = virtualinvoke $r39.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r40.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i50, $i51, $i49);

        $r37 = <libcore.io.Libcore: libcore.io.Os os>;

        $i48 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i55 = <libcore.io.OsConstants: int IPV6_TCLASS>;

        $r38 = (java.lang.Integer) r1;

        $i56 = virtualinvoke $r38.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r37.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i48, $i55, $i56);

        return;

     label07:
        $r17 = <libcore.io.Libcore: libcore.io.Os os>;

        $i22 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i23 = <libcore.io.OsConstants: int SO_BROADCAST>;

        $r16 = (java.lang.Boolean) r1;

        $z3 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        $i21 = staticinvoke <libcore.io.IoBridge: int booleanToInt(boolean)>($z3);

        interfaceinvoke $r17.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i22, $i23, $i21);

        return;

     label08:
        $r32 = <libcore.io.Libcore: libcore.io.Os os>;

        $i40 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i39 = <libcore.io.OsConstants: int SO_KEEPALIVE>;

        $r33 = (java.lang.Boolean) r1;

        $z8 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        $i47 = staticinvoke <libcore.io.IoBridge: int booleanToInt(boolean)>($z8);

        interfaceinvoke $r32.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i40, $i39, $i47);

        return;

     label09:
        z0 = r1 instanceof java.lang.Integer;

        z1 = 0;

        i3 = 0;

        if z0 == 0 goto label10;

        z1 = 1;

        $r15 = (java.lang.Integer) r1;

        $i20 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i20, 65535);

     label10:
        $r13 = new libcore.io.StructLinger;

        $i15 = staticinvoke <libcore.io.IoBridge: int booleanToInt(boolean)>(z1);

        specialinvoke $r13.<libcore.io.StructLinger: void <init>(int,int)>($i15, i3);

        r4 = $r13;

        $r14 = <libcore.io.Libcore: libcore.io.Os os>;

        $i19 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i18 = <libcore.io.OsConstants: int SO_LINGER>;

        interfaceinvoke $r14.<libcore.io.Os: void setsockoptLinger(java.io.FileDescriptor,int,int,libcore.io.StructLinger)>(r0, $i19, $i18, r4);

        return;

     label11:
        $r7 = <libcore.io.Libcore: libcore.io.Os os>;

        $i9 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i8 = <libcore.io.OsConstants: int SO_OOBINLINE>;

        $r8 = (java.lang.Boolean) r1;

        $z2 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        $i10 = staticinvoke <libcore.io.IoBridge: int booleanToInt(boolean)>($z2);

        interfaceinvoke $r7.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i9, $i8, $i10);

        return;

     label12:
        $r9 = <libcore.io.Libcore: libcore.io.Os os>;

        $i12 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i11 = <libcore.io.OsConstants: int SO_RCVBUF>;

        $r10 = (java.lang.Integer) r1;

        $i13 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r9.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i12, $i11, $i13);

        return;

     label13:
        $r35 = <libcore.io.Libcore: libcore.io.Os os>;

        $i45 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i44 = <libcore.io.OsConstants: int SO_REUSEADDR>;

        $r36 = (java.lang.Boolean) r1;

        $z7 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>();

        $i46 = staticinvoke <libcore.io.IoBridge: int booleanToInt(boolean)>($z7);

        interfaceinvoke $r35.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i45, $i44, $i46);

        return;

     label14:
        $r12 = <libcore.io.Libcore: libcore.io.Os os>;

        $i14 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i16 = <libcore.io.OsConstants: int SO_SNDBUF>;

        $r11 = (java.lang.Integer) r1;

        $i17 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r12.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i14, $i16, $i17);

        return;

     label15:
        $r5 = (java.lang.Integer) r1;

        $i4 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $l5 = (long) $i4;

        r3 = staticinvoke <libcore.io.StructTimeval: libcore.io.StructTimeval fromMillis(long)>($l5);

        $r6 = <libcore.io.Libcore: libcore.io.Os os>;

        $i7 = <libcore.io.OsConstants: int SOL_SOCKET>;

        $i6 = <libcore.io.OsConstants: int SO_RCVTIMEO>;

        interfaceinvoke $r6.<libcore.io.Os: void setsockoptTimeval(java.io.FileDescriptor,int,int,libcore.io.StructTimeval)>(r0, $i7, $i6, r3);

        return;

     label16:
        $r42 = <libcore.io.Libcore: libcore.io.Os os>;

        $i53 = <libcore.io.OsConstants: int IPPROTO_TCP>;

        $i54 = <libcore.io.OsConstants: int TCP_NODELAY>;

        $r41 = (java.lang.Boolean) r1;

        $z9 = virtualinvoke $r41.<java.lang.Boolean: boolean booleanValue()>();

        $i52 = staticinvoke <libcore.io.IoBridge: int booleanToInt(boolean)>($z9);

        interfaceinvoke $r42.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r0, $i53, $i54, $i52);

        return;

     label17:
        r2 = (libcore.io.StructGroupReq) r1;

        $r22 = r2.<libcore.io.StructGroupReq: java.net.InetAddress gr_group>;

        $z4 = $r22 instanceof java.net.Inet4Address;

        if $z4 == 0 goto label20;

        i1 = <libcore.io.OsConstants: int IPPROTO_IP>;

     label18:
        if i0 != 19 goto label21;

        i2 = <libcore.io.OsConstants: int MCAST_JOIN_GROUP>;

     label19:
        $r25 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r25.<libcore.io.Os: void setsockoptGroupReq(java.io.FileDescriptor,int,int,libcore.io.StructGroupReq)>(r0, i1, i2, r2);

        return;

     label20:
        i1 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        goto label18;

     label21:
        i2 = <libcore.io.OsConstants: int MCAST_LEAVE_GROUP>;

        goto label19;
    }

    public static java.io.FileDescriptor socket(boolean) throws java.net.SocketException
    {
        boolean z0;
        libcore.io.ErrnoException r0, $r4;
        libcore.io.Os r1, $r3;
        int i0, i1, $i2, $i3;
        java.io.FileDescriptor r2;
        java.net.SocketException $r5;

        z0 := @parameter0: boolean;

     label01:
        r1 = <libcore.io.Libcore: libcore.io.Os os>;

        i0 = <libcore.io.OsConstants: int AF_INET6>;

     label02:
        if z0 == 0 goto label08;

     label03:
        i1 = <libcore.io.OsConstants: int SOCK_STREAM>;

     label04:
        r2 = interfaceinvoke r1.<libcore.io.Os: java.io.FileDescriptor socket(int,int,int)>(i0, i1, 0);

     label05:
        if z0 != 0 goto label11;

     label06:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $i3 = <libcore.io.OsConstants: int IPPROTO_IPV6>;

        $i2 = <libcore.io.OsConstants: int IPV6_MULTICAST_HOPS>;

        interfaceinvoke $r3.<libcore.io.Os: void setsockoptInt(java.io.FileDescriptor,int,int,int)>(r2, $i3, $i2, 1);

     label07:
        return r2;

     label08:
        i1 = <libcore.io.OsConstants: int SOCK_DGRAM>;

     label09:
        goto label04;

     label10:
        $r4 := @caughtexception;

        r0 = $r4;

        $r5 = virtualinvoke r0.<libcore.io.ErrnoException: java.net.SocketException rethrowAsSocketException()>();

        throw $r5;

     label11:
        return r2;

        catch libcore.io.ErrnoException from label01 to label02 with label10;
        catch libcore.io.ErrnoException from label03 to label04 with label10;
        catch libcore.io.ErrnoException from label04 to label05 with label10;
        catch libcore.io.ErrnoException from label06 to label07 with label10;
        catch libcore.io.ErrnoException from label08 to label09 with label10;
    }

    public static void write(java.io.FileDescriptor, byte[], int, int) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        byte[] r1;
        int i0, i1, i2, $i3;
        libcore.io.ErrnoException r2, $r4;
        libcore.io.Os $r3;
        java.io.IOException $r5;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i3 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i3, i0, i1);

        if i1 != 0 goto label2;

     label1:
        return;

     label2:
        if i1 <= 0 goto label1;

     label3:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        i2 = interfaceinvoke $r3.<libcore.io.Os: int write(java.io.FileDescriptor,byte[],int,int)>(r0, r1, i0, i1);

     label4:
        i1 = i1 - i2;

        i0 = i0 + i2;

        goto label2;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = virtualinvoke r2.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r5;

        catch libcore.io.ErrnoException from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <libcore.io.IoBridge: int JAVA_MCAST_LEAVE_GROUP> = 20;

        <libcore.io.IoBridge: int JAVA_MCAST_JOIN_GROUP> = 19;

        <libcore.io.IoBridge: int JAVA_IP_MULTICAST_TTL> = 17;

        return;
    }
}
