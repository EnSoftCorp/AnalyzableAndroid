class android.inputmethodservice.SoftInputWindow extends android.app.Dialog
{
    private final android.graphics.Rect mBounds;
    final android.view.KeyEvent$DispatcherState mDispatcherState;

    public void <init>(android.content.Context, int, android.view.KeyEvent$DispatcherState)
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.content.Context r1;
        int i0;
        android.view.KeyEvent$DispatcherState r2;
        android.graphics.Rect $r3;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.KeyEvent$DispatcherState;

        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context,int)>(r1, i0);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds> = $r3;

        r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$DispatcherState mDispatcherState> = r2;

        specialinvoke r0.<android.inputmethodservice.SoftInputWindow: void initDockWindow()>();

        return;
    }

    private void initDockWindow()
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.view.WindowManager$LayoutParams r1;
        android.view.Window $r2, $r3, $r4;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        $r2 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        r1 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r1.<android.view.WindowManager$LayoutParams: int type> = 2011;

        virtualinvoke r1.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>("InputMethod");

        r1.<android.view.WindowManager$LayoutParams: int gravity> = 80;

        r1.<android.view.WindowManager$LayoutParams: int width> = -1;

        $r3 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r1);

        $r4 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r4.<android.view.Window: void setFlags(int,int)>(264, 266);

        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.view.MotionEvent r1, r2;
        boolean z0, $z1, $z2;
        android.view.Window $r3;
        android.view.View $r4;
        android.graphics.Rect $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        $r5 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        virtualinvoke $r4.<android.view.View: void getHitRect(android.graphics.Rect)>($r5);

        $r6 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i0 = $r6.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $r7 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i1 = $r7.<android.graphics.Rect: int top>;

        $f1 = (float) $i1;

        $r8 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i2 = $r8.<android.graphics.Rect: int right>;

        $i3 = -1 + $i2;

        $f2 = (float) $i3;

        $r9 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i4 = $r9.<android.graphics.Rect: int bottom>;

        $i5 = -1 + $i4;

        $f0 = (float) $i5;

        $z1 = virtualinvoke r1.<android.view.MotionEvent: boolean isWithinBoundsNoHistory(float,float,float,float)>($f3, $f1, $f2, $f0);

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label1:
        $r10 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i6 = $r10.<android.graphics.Rect: int left>;

        $f5 = (float) $i6;

        $r11 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i7 = $r11.<android.graphics.Rect: int top>;

        $f4 = (float) $i7;

        $r12 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i8 = $r12.<android.graphics.Rect: int right>;

        $i9 = -1 + $i8;

        $f7 = (float) $i9;

        $r13 = r0.<android.inputmethodservice.SoftInputWindow: android.graphics.Rect mBounds>;

        $i11 = $r13.<android.graphics.Rect: int bottom>;

        $i10 = -1 + $i11;

        $f6 = (float) $i10;

        r2 = virtualinvoke r1.<android.view.MotionEvent: android.view.MotionEvent clampNoHistory(float,float,float,float)>($f5, $f4, $f7, $f6);

        z0 = specialinvoke r0.<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>(r2);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return z0;
    }

    public int getSize()
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.view.WindowManager$LayoutParams r1;
        android.view.Window $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        $r2 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        r1 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i0 == 48 goto label1;

        $i2 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i2 != 80 goto label2;

     label1:
        $i1 = r1.<android.view.WindowManager$LayoutParams: int height>;

        return $i1;

     label2:
        $i3 = r1.<android.view.WindowManager$LayoutParams: int width>;

        return $i3;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.inputmethodservice.SoftInputWindow r0;
        boolean z0;
        android.view.KeyEvent$DispatcherState $r1;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Dialog: void onWindowFocusChanged(boolean)>(z0);

        $r1 = r0.<android.inputmethodservice.SoftInputWindow: android.view.KeyEvent$DispatcherState mDispatcherState>;

        virtualinvoke $r1.<android.view.KeyEvent$DispatcherState: void reset()>();

        return;
    }

    public void setGravity(int)
    {
        android.inputmethodservice.SoftInputWindow r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.view.WindowManager$LayoutParams r1;
        boolean z0, z1;
        android.view.Window $r2, $r3;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        r1 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i2 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i2 == 48 goto label1;

        $i6 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i6 != 80 goto label6;

     label1:
        z0 = 1;

     label2:
        r1.<android.view.WindowManager$LayoutParams: int gravity> = i0;

        $i3 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i3 == 48 goto label3;

        $i5 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i5 != 80 goto label7;

     label3:
        z1 = 1;

     label4:
        if z0 == z1 goto label5;

        i1 = r1.<android.view.WindowManager$LayoutParams: int width>;

        $i4 = r1.<android.view.WindowManager$LayoutParams: int height>;

        r1.<android.view.WindowManager$LayoutParams: int width> = $i4;

        r1.<android.view.WindowManager$LayoutParams: int height> = i1;

        $r3 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r1);

     label5:
        return;

     label6:
        z0 = 0;

        goto label2;

     label7:
        z1 = 0;

        goto label4;
    }

    public void setSize(int)
    {
        android.inputmethodservice.SoftInputWindow r0;
        int i0, $i1, $i2;
        android.view.WindowManager$LayoutParams r1;
        android.view.Window $r2, $r3;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        r1 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i1 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i1 == 48 goto label1;

        $i2 = r1.<android.view.WindowManager$LayoutParams: int gravity>;

        if $i2 != 80 goto label3;

     label1:
        r1.<android.view.WindowManager$LayoutParams: int width> = -1;

        r1.<android.view.WindowManager$LayoutParams: int height> = i0;

     label2:
        $r3 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r1);

        return;

     label3:
        r1.<android.view.WindowManager$LayoutParams: int width> = i0;

        r1.<android.view.WindowManager$LayoutParams: int height> = -1;

        goto label2;
    }

    public void setToken(android.os.IBinder)
    {
        android.inputmethodservice.SoftInputWindow r0;
        android.os.IBinder r1;
        android.view.WindowManager$LayoutParams r2;
        android.view.Window $r3, $r4;

        r0 := @this: android.inputmethodservice.SoftInputWindow;

        r1 := @parameter0: android.os.IBinder;

        $r3 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        r2 = virtualinvoke $r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r2.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = r1;

        $r4 = virtualinvoke r0.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r4.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r2);

        return;
    }
}
