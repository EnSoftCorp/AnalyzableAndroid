public class org.apache.http.client.params.HttpClientParams extends java.lang.Object
{

    private void <init>()
    {
        org.apache.http.client.params.HttpClientParams r0;

        r0 := @this: org.apache.http.client.params.HttpClientParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        java.lang.String r1;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r3;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.cookie-policy");

        r1 = (java.lang.String) $r2;

        if r1 != null goto label2;

        r1 = "best-match";

     label2:
        return r1;
    }

    public static boolean isAuthenticating(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $z0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>("http.protocol.handle-authentication", 1);

        return $z0;
    }

    public static boolean isRedirecting(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $z0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>("http.protocol.handle-redirects", 1);

        return $z0;
    }

    public static void setAuthenticating(org.apache.http.params.HttpParams, boolean)
    {
        org.apache.http.params.HttpParams r0;
        boolean z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.handle-authentication", z0);

        return;
    }

    public static void setCookiePolicy(org.apache.http.params.HttpParams, java.lang.String)
    {
        org.apache.http.params.HttpParams r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r3;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.cookie-policy", r1);

        return;
    }

    public static void setRedirecting(org.apache.http.params.HttpParams, boolean)
    {
        org.apache.http.params.HttpParams r0;
        boolean z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.handle-redirects", z0);

        return;
    }
}
