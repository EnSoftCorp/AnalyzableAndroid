public final class org.xml.sax.helpers.XMLReaderFactory extends java.lang.Object
{
    private static final java.lang.String property;

    private void <init>()
    {
        org.xml.sax.helpers.XMLReaderFactory r0;

        r0 := @this: org.xml.sax.helpers.XMLReaderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.xml.sax.XMLReader createXMLReader() throws org.xml.sax.SAXException
    {
        java.lang.ClassLoader r0;
        java.lang.String r2, r8;
        org.xml.sax.helpers.ParserAdapter r3, $r9;
        java.io.InputStream r6, r7;
        org.xml.sax.Parser $r10;
        org.xml.sax.XMLReader $r11;
        java.io.BufferedReader $r12;
        java.nio.charset.Charset $r13;
        java.io.InputStreamReader $r14;
        java.lang.RuntimeException $r15;
        java.lang.Exception $r16, $r18;
        org.xml.sax.SAXException $r17;

        r0 = staticinvoke <org.xml.sax.helpers.NewInstance: java.lang.ClassLoader getClassLoader()>();

     label01:
        r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("org.xml.sax.driver");

     label02:
        r2 = r8;

     label03:
        if r2 != null goto label07;

        if r0 != null goto label09;

     label04:
        r6 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>("META-INF/services/org.xml.sax.driver");

     label05:
        if r6 == null goto label07;

     label06:
        $r12 = new java.io.BufferedReader;

        $r14 = new java.io.InputStreamReader;

        $r13 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r6, $r13);

        specialinvoke $r12.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);

        r2 = virtualinvoke $r12.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke r6.<java.io.InputStream: void close()>();

     label07:
        if r2 != null goto label08;

     label08:
        if r2 == null goto label11;

        $r11 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader loadClass(java.lang.ClassLoader,java.lang.String)>(r0, r2);

        return $r11;

     label09:
        r7 = virtualinvoke r0.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("META-INF/services/org.xml.sax.driver");

     label10:
        r6 = r7;

        goto label05;

     label11:
        $r9 = new org.xml.sax.helpers.ParserAdapter;

        $r10 = staticinvoke <org.xml.sax.helpers.ParserFactory: org.xml.sax.Parser makeParser()>();

        specialinvoke $r9.<org.xml.sax.helpers.ParserAdapter: void <init>(org.xml.sax.Parser)>($r10);

        r3 = $r9;

     label12:
        return r3;

     label13:
        $r18 := @caughtexception;

        $r17 = new org.xml.sax.SAXException;

        specialinvoke $r17.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Can\'t create default XMLReader; is system property org.xml.sax.driver set?");

        throw $r17;

     label14:
        $r16 := @caughtexception;

        goto label07;

     label15:
        $r15 := @caughtexception;

        r2 = null;

        goto label03;

        catch java.lang.RuntimeException from label01 to label02 with label15;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public static org.xml.sax.XMLReader createXMLReader(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String r0;
        java.lang.ClassLoader $r1;
        org.xml.sax.XMLReader $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.xml.sax.helpers.NewInstance: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader loadClass(java.lang.ClassLoader,java.lang.String)>($r1, r0);

        return $r2;
    }

    private static org.xml.sax.XMLReader loadClass(java.lang.ClassLoader, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.ClassLoader r0;
        java.lang.String r1, $r14, $r20, $r29, $r33;
        java.lang.ClassCastException r2, $r8;
        java.lang.InstantiationException r3, $r23;
        java.lang.IllegalAccessException r4, $r15;
        java.lang.ClassNotFoundException r5, $r28;
        org.xml.sax.XMLReader r6;
        java.lang.Object $r7;
        org.xml.sax.SAXException $r9, $r17, $r22, $r31;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r16, $r18, $r19, $r21, $r24, $r25, $r26, $r27, $r30, $r32, $r34, $r35;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

     label1:
        $r7 = staticinvoke <org.xml.sax.helpers.NewInstance: java.lang.Object newInstance(java.lang.ClassLoader,java.lang.String)>(r0, r1);

        r6 = (org.xml.sax.XMLReader) $r7;

     label2:
        return r6;

     label3:
        $r28 := @caughtexception;

        r5 = $r28;

        $r31 = new org.xml.sax.SAXException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SAX2 driver class ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r33, r5);

        throw $r31;

     label4:
        $r15 := @caughtexception;

        r4 = $r15;

        $r17 = new org.xml.sax.SAXException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SAX2 driver class ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found but cannot be loaded");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r20, r4);

        throw $r17;

     label5:
        $r23 := @caughtexception;

        r3 = $r23;

        $r22 = new org.xml.sax.SAXException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SAX2 driver class ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" loaded but cannot be instantiated (no empty public constructor?)");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r29, r3);

        throw $r22;

     label6:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new org.xml.sax.SAXException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SAX2 driver class ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement XMLReader");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r14, r2);

        throw $r9;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label1 to label2 with label6;
    }

    public static void <clinit>()
    {
        <org.xml.sax.helpers.XMLReaderFactory: java.lang.String property> = "org.xml.sax.driver";

        return;
    }
}
