public class org.apache.xml.serializer.ToTextStream extends org.apache.xml.serializer.ToStream
{

    public void <init>()
    {
        org.apache.xml.serializer.ToTextStream r0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void <init>()>();

        return;
    }

    public void addAttribute(java.lang.String, java.lang.String)
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2, r3, r4, r5;
        boolean z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        return;
    }

    public void addUniqueAttribute(java.lang.String, java.lang.String, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public void cdata(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        char[] r1;
        int i0, i1;
        java.io.IOException r2, $r4;
        boolean $z0;
        org.apache.xml.serializer.SerializerTrace $r3;
        org.xml.sax.SAXException $r5;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $z0 = r0.<org.apache.xml.serializer.ToTextStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean)>(r1, i0, i1, $z0);

        $r3 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r3 == null goto label2;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireCDATAEvent(char[],int,int)>(r1, i0, i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void characters(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        char[] $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r2 = r0.<org.apache.xml.serializer.ToTextStream: char[] m_charsBuff>;

        $i1 = lengthof $r2;

        if i0 <= $i1 goto label1;

        $i2 = i0 * 2;

        $i3 = 1 + $i2;

        $r5 = newarray (char)[$i3];

        r0.<org.apache.xml.serializer.ToTextStream: char[] m_charsBuff> = $r5;

     label1:
        $r3 = r0.<org.apache.xml.serializer.ToTextStream: char[] m_charsBuff>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r3, 0);

        $r4 = r0.<org.apache.xml.serializer.ToTextStream: char[] m_charsBuff>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void characters(char[],int,int)>($r4, 0, i0);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        char[] r1;
        int i0, i1;
        java.io.IOException r2, $r5;
        boolean $z0, $z1;
        org.apache.xml.serializer.SerializerTrace $r3;
        java.io.Writer $r4;
        org.xml.sax.SAXException $r6;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushPending()>();

     label1:
        $z0 = virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: boolean inTemporaryOutputState()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<org.apache.xml.serializer.ToTextStream: java.io.Writer m_writer>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

     label2:
        $r3 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r3 == null goto label7;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireCharEvent(char[],int,int)>(r1, i0, i1);

     label3:
        return;

     label4:
        $z1 = r0.<org.apache.xml.serializer.ToTextStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean)>(r1, i0, i1, $z1);

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new org.xml.sax.SAXException;

        specialinvoke $r6.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r2);

        throw $r6;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public void charactersRaw(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        char[] r1;
        int i0, i1;
        java.io.IOException r2, $r3;
        boolean $z0;
        org.xml.sax.SAXException $r4;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $z0 = r0.<org.apache.xml.serializer.ToTextStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean)>(r1, i0, i1, $z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r2);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void comment(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        char[] $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r2 = r0.<org.apache.xml.serializer.ToTextStream: char[] m_charsBuff>;

        $i1 = lengthof $r2;

        if i0 <= $i1 goto label1;

        $i2 = i0 * 2;

        $i3 = 1 + $i2;

        $r5 = newarray (char)[$i3];

        r0.<org.apache.xml.serializer.ToTextStream: char[] m_charsBuff> = $r5;

     label1:
        $r3 = r0.<org.apache.xml.serializer.ToTextStream: char[] m_charsBuff>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i0, $r3, 0);

        $r4 = r0.<org.apache.xml.serializer.ToTextStream: char[] m_charsBuff>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void comment(char[],int,int)>($r4, 0, i0);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        char[] r1;
        int i0, i1;
        org.apache.xml.serializer.SerializerTrace $r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushPending()>();

        $r2 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireCommentEvent(char[],int,int)>(r1, i0, i1);

     label1:
        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        org.apache.xml.serializer.SerializerTrace $r1;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushPending()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushWriter()>();

        $r1 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r1 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireEndDoc()>();

     label1:
        return;
    }

    public void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1;
        org.apache.xml.serializer.SerializerTrace $r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireEndElem(java.lang.String)>(r1);

     label1:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2, r3;
        org.apache.xml.serializer.SerializerTrace $r4;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r4 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireEndElem(java.lang.String)>(r3);

     label1:
        return;
    }

    public void entityReference(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1;
        org.apache.xml.serializer.SerializerTrace $r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireEntityReference(java.lang.String)>(r1);

     label1:
        return;
    }

    public void flushPending() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        boolean $z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        $z0 = r0.<org.apache.xml.serializer.ToTextStream: boolean m_needToCallStartDocument>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.ToTextStream: boolean m_needToCallStartDocument> = 0;

     label1:
        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        char[] r1;
        int i0, i1;
        java.io.IOException r2, $r3;
        boolean $z0;
        org.xml.sax.SAXException $r4;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $z0 = r0.<org.apache.xml.serializer.ToTextStream: boolean m_lineSepUse>;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean)>(r1, i0, i1, $z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r2);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void namespaceAfterStartElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;
        org.apache.xml.serializer.SerializerTrace $r3;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void flushPending()>();

        $r3 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r3 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireEscapingEvent(java.lang.String,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    protected void startDocumentInternal() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.ToTextStream: boolean m_needToCallStartDocument> = 0;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2, r3;
        boolean $z0;
        org.apache.xml.serializer.SerializerTrace $r4;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.ToTextStream: boolean m_needToCallStartDocument>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void startDocumentInternal()>();

     label1:
        $r4 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r4 == null goto label2;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireStartElem(java.lang.String)>(r3);

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void firePseudoAttributes()>();

     label2:
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.Attributes r4;
        org.apache.xml.serializer.SerializerTrace $r5;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        $r5 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r5 == null goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireStartElem(java.lang.String)>(r3);

        virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: void firePseudoAttributes()>();

     label1:
        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public boolean startPrefixMapping(java.lang.String, java.lang.String, boolean) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return 0;
    }

    void writeNormalizedChars(char[], int, int, boolean) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToTextStream r0;
        char[] r1, $r16;
        int i0, i1, i2, i3, i5, $i6;
        boolean z0, $z1, $z2;
        java.lang.String r2, r4, r5, r6, r7, $r9;
        java.io.Writer r3;
        char c4;
        org.apache.xml.serializer.EncodingInfo $r8;
        java.lang.Object[] $r10, $r13;
        org.apache.xml.serializer.utils.Messages $r11, $r14;
        java.io.PrintStream $r12, $r15;

        r0 := @this: org.apache.xml.serializer.ToTextStream;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 = virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: java.lang.String getEncoding()>();

        r3 = r0.<org.apache.xml.serializer.ToTextStream: java.io.Writer m_writer>;

        i2 = i0 + i1;

        i3 = i0;

     label1:
        if i3 >= i2 goto label8;

        c4 = r1[i3];

        if 10 != c4 goto label3;

        if z0 == 0 goto label3;

        $r16 = r0.<org.apache.xml.serializer.ToTextStream: char[] m_lineSep>;

        $i6 = r0.<org.apache.xml.serializer.ToTextStream: int m_lineSepLen>;

        virtualinvoke r3.<java.io.Writer: void write(char[],int,int)>($r16, 0, $i6);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r8 = r0.<org.apache.xml.serializer.ToTextStream: org.apache.xml.serializer.EncodingInfo m_encodingInfo>;

        $z1 = virtualinvoke $r8.<org.apache.xml.serializer.EncodingInfo: boolean isInEncoding(char)>(c4);

        if $z1 == 0 goto label4;

        virtualinvoke r3.<java.io.Writer: void write(int)>(c4);

        goto label2;

     label4:
        $z2 = staticinvoke <org.apache.xml.serializer.Encodings: boolean isHighUTF16Surrogate(char)>(c4);

        if $z2 == 0 goto label6;

        i5 = virtualinvoke r0.<org.apache.xml.serializer.ToTextStream: int writeUTF16Surrogate(char,char[],int,int)>(c4, r1, i3, i2);

        if i5 == 0 goto label5;

        r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i5);

        $r14 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r6;

        $r13[1] = r2;

        r7 = virtualinvoke $r14.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_CHARACTER", $r13);

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(r7);

     label5:
        i3 = i3 + 1;

        goto label2;

     label6:
        if r2 == null goto label7;

        virtualinvoke r3.<java.io.Writer: void write(int)>(38);

        virtualinvoke r3.<java.io.Writer: void write(int)>(35);

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(c4);

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r9);

        virtualinvoke r3.<java.io.Writer: void write(int)>(59);

        r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(c4);

        $r11 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = r4;

        $r10[1] = r2;

        r5 = virtualinvoke $r11.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_CHARACTER", $r10);

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(r5);

        goto label2;

     label7:
        virtualinvoke r3.<java.io.Writer: void write(int)>(c4);

        goto label2;

     label8:
        return;
    }
}
