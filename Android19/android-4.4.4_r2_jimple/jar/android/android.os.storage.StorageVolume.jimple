public class android.os.storage.StorageVolume extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final java.lang.String EXTRA_STORAGE_VOLUME;
    private final boolean mAllowMassStorage;
    private final int mDescriptionId;
    private final boolean mEmulated;
    private final long mMaxFileSize;
    private final int mMtpReserveSpace;
    private final android.os.UserHandle mOwner;
    private final java.io.File mPath;
    private final boolean mPrimary;
    private final boolean mRemovable;
    private java.lang.String mState;
    private int mStorageId;
    private java.lang.String mUserLabel;
    private java.lang.String mUuid;

    static void <clinit>()
    {
        android.os.storage.StorageVolume$1 $r0;

        <android.os.storage.StorageVolume: java.lang.String EXTRA_STORAGE_VOLUME> = "storage_volume";

        $r0 = new android.os.storage.StorageVolume$1;

        specialinvoke $r0.<android.os.storage.StorageVolume$1: void <init>()>();

        <android.os.storage.StorageVolume: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.os.storage.StorageVolume r0;
        android.os.Parcel r1;
        boolean z0, z1, z2, z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.io.File $r2;
        java.lang.String $r3, $r6, $r7, $r8;
        long $l7;
        android.os.UserHandle $r4;
        android.os.Parcelable $r5;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: android.os.Parcel;

        z0 = 1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.storage.StorageVolume: int mStorageId> = $i0;

        $r2 = new java.io.File;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        r0.<android.os.storage.StorageVolume: java.io.File mPath> = $r2;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.storage.StorageVolume: int mDescriptionId> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label5;

        z1 = z0;

     label1:
        r0.<android.os.storage.StorageVolume: boolean mPrimary> = z1;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label6;

        z2 = z0;

     label2:
        r0.<android.os.storage.StorageVolume: boolean mRemovable> = z2;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label7;

        z3 = z0;

     label3:
        r0.<android.os.storage.StorageVolume: boolean mEmulated> = z3;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.storage.StorageVolume: int mMtpReserveSpace> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 == 0 goto label8;

     label4:
        r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage> = z0;

        $l7 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.os.storage.StorageVolume: long mMaxFileSize> = $l7;

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r4 = (android.os.UserHandle) $r5;

        r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner> = $r4;

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.storage.StorageVolume: java.lang.String mUuid> = $r7;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.storage.StorageVolume: java.lang.String mUserLabel> = $r6;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.storage.StorageVolume: java.lang.String mState> = $r8;

        return;

     label5:
        z1 = 0;

        goto label1;

     label6:
        z2 = 0;

        goto label2;

     label7:
        z3 = 0;

        goto label3;

     label8:
        z0 = 0;

        goto label4;
    }

    void <init>(android.os.Parcel, android.os.storage.StorageVolume$1)
    {
        android.os.storage.StorageVolume r0;
        android.os.Parcel r1;
        android.os.storage.StorageVolume$1 r2;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.storage.StorageVolume$1;

        specialinvoke r0.<android.os.storage.StorageVolume: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(java.io.File, int, boolean, boolean, boolean, int, boolean, long, android.os.UserHandle)
    {
        android.os.storage.StorageVolume r0;
        java.io.File r1;
        int i0, i1;
        boolean z0, z1, z2, z3;
        long l2;
        android.os.UserHandle r2;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i1 := @parameter5: int;

        z3 := @parameter6: boolean;

        l2 := @parameter7: long;

        r2 := @parameter8: android.os.UserHandle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.storage.StorageVolume: java.io.File mPath> = r1;

        r0.<android.os.storage.StorageVolume: int mDescriptionId> = i0;

        r0.<android.os.storage.StorageVolume: boolean mPrimary> = z0;

        r0.<android.os.storage.StorageVolume: boolean mRemovable> = z1;

        r0.<android.os.storage.StorageVolume: boolean mEmulated> = z2;

        r0.<android.os.storage.StorageVolume: int mMtpReserveSpace> = i1;

        r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage> = z3;

        r0.<android.os.storage.StorageVolume: long mMaxFileSize> = l2;

        r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner> = r2;

        return;
    }

    public static android.os.storage.StorageVolume fromTemplate(android.os.storage.StorageVolume, java.io.File, android.os.UserHandle)
    {
        android.os.storage.StorageVolume r0, $r3;
        java.io.File r1;
        android.os.UserHandle r2;
        long $l0;
        boolean $z0, $z1, $z2, $z3;
        int $i1, $i2;

        r0 := @parameter0: android.os.storage.StorageVolume;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: android.os.UserHandle;

        $r3 = new android.os.storage.StorageVolume;

        $i2 = r0.<android.os.storage.StorageVolume: int mDescriptionId>;

        $z3 = r0.<android.os.storage.StorageVolume: boolean mPrimary>;

        $z2 = r0.<android.os.storage.StorageVolume: boolean mRemovable>;

        $z1 = r0.<android.os.storage.StorageVolume: boolean mEmulated>;

        $i1 = r0.<android.os.storage.StorageVolume: int mMtpReserveSpace>;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage>;

        $l0 = r0.<android.os.storage.StorageVolume: long mMaxFileSize>;

        specialinvoke $r3.<android.os.storage.StorageVolume: void <init>(java.io.File,int,boolean,boolean,boolean,int,boolean,long,android.os.UserHandle)>(r1, $i2, $z3, $z2, $z1, $i1, $z0, $l0, r2);

        return $r3;
    }

    public boolean allowMassStorage()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage>;

        return $z0;
    }

    public int describeContents()
    {
        android.os.storage.StorageVolume r0;

        r0 := @this: android.os.storage.StorageVolume;

        return 0;
    }

    public void dump(com.android.internal.util.IndentingPrintWriter)
    {
        android.os.storage.StorageVolume r0;
        com.android.internal.util.IndentingPrintWriter r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2, $r4, $r8;
        java.io.File $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Boolean $r5, $r6, $r7, $r9;
        long $l3;
        android.os.UserHandle $r10;
        java.lang.Long $r11;
        java.lang.String $r12, $r13, $r14;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: com.android.internal.util.IndentingPrintWriter;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("StorageVolume:");

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        $i0 = r0.<android.os.storage.StorageVolume: int mStorageId>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mStorageId", $r2);

        $r3 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mPath", $r3);

        $i1 = r0.<android.os.storage.StorageVolume: int mDescriptionId>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mDescriptionId", $r4);

        $z0 = r0.<android.os.storage.StorageVolume: boolean mPrimary>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mPrimary", $r5);

        $z1 = r0.<android.os.storage.StorageVolume: boolean mRemovable>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mRemovable", $r6);

        $z2 = r0.<android.os.storage.StorageVolume: boolean mEmulated>;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mEmulated", $r7);

        $i2 = r0.<android.os.storage.StorageVolume: int mMtpReserveSpace>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mMtpReserveSpace", $r8);

        $z3 = r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mAllowMassStorage", $r9);

        $l3 = r0.<android.os.storage.StorageVolume: long mMaxFileSize>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mMaxFileSize", $r11);

        $r10 = r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mOwner", $r10);

        $r13 = r0.<android.os.storage.StorageVolume: java.lang.String mUuid>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mUuid", $r13);

        $r12 = r0.<android.os.storage.StorageVolume: java.lang.String mUserLabel>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mUserLabel", $r12);

        $r14 = r0.<android.os.storage.StorageVolume: java.lang.String mState>;

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>("mState", $r14);

        virtualinvoke r1.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.os.storage.StorageVolume r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.io.File $r3, $r4, $r5;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.os.storage.StorageVolume;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        if $r3 == null goto label1;

        r2 = (android.os.storage.StorageVolume) r1;

        $r5 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        $r4 = r2.<android.os.storage.StorageVolume: java.io.File mPath>;

        $z1 = virtualinvoke $r5.<java.io.File: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label1:
        return 0;
    }

    public java.lang.String getDescription(android.content.Context)
    {
        android.os.storage.StorageVolume r0;
        android.content.Context r1;
        android.content.res.Resources $r2;
        int $i0;
        java.lang.String $r3;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = r0.<android.os.storage.StorageVolume: int mDescriptionId>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        return $r3;
    }

    public int getDescriptionId()
    {
        android.os.storage.StorageVolume r0;
        int $i0;

        r0 := @this: android.os.storage.StorageVolume;

        $i0 = r0.<android.os.storage.StorageVolume: int mDescriptionId>;

        return $i0;
    }

    public int getFatVolumeId()
    {
        android.os.storage.StorageVolume r0;
        int i0, $i1;
        java.lang.String $r2, $r3, $r4, $r5;
        java.lang.NumberFormatException $r6;

        r0 := @this: android.os.storage.StorageVolume;

        $r2 = r0.<android.os.storage.StorageVolume: java.lang.String mUuid>;

        if $r2 == null goto label1;

        $r3 = r0.<android.os.storage.StorageVolume: java.lang.String mUuid>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 == 9 goto label2;

     label1:
        return -1;

     label2:
        $r4 = r0.<android.os.storage.StorageVolume: java.lang.String mUuid>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r5, 16);

     label3:
        return i0;

     label4:
        $r6 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public long getMaxFileSize()
    {
        android.os.storage.StorageVolume r0;
        long $l0;

        r0 := @this: android.os.storage.StorageVolume;

        $l0 = r0.<android.os.storage.StorageVolume: long mMaxFileSize>;

        return $l0;
    }

    public int getMtpReserveSpace()
    {
        android.os.storage.StorageVolume r0;
        int $i0;

        r0 := @this: android.os.storage.StorageVolume;

        $i0 = r0.<android.os.storage.StorageVolume: int mMtpReserveSpace>;

        return $i0;
    }

    public android.os.UserHandle getOwner()
    {
        android.os.storage.StorageVolume r0;
        android.os.UserHandle $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner>;

        return $r1;
    }

    public java.lang.String getPath()
    {
        android.os.storage.StorageVolume r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        return $r2;
    }

    public java.io.File getPathFile()
    {
        android.os.storage.StorageVolume r0;
        java.io.File $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        return $r1;
    }

    public java.lang.String getState()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mState>;

        return $r1;
    }

    public int getStorageId()
    {
        android.os.storage.StorageVolume r0;
        int $i0;

        r0 := @this: android.os.storage.StorageVolume;

        $i0 = r0.<android.os.storage.StorageVolume: int mStorageId>;

        return $i0;
    }

    public java.lang.String getUserLabel()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mUserLabel>;

        return $r1;
    }

    public java.lang.String getUuid()
    {
        android.os.storage.StorageVolume r0;
        java.lang.String $r1;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.lang.String mUuid>;

        return $r1;
    }

    public int hashCode()
    {
        android.os.storage.StorageVolume r0;
        java.io.File $r1;
        int $i0;

        r0 := @this: android.os.storage.StorageVolume;

        $r1 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        $i0 = virtualinvoke $r1.<java.io.File: int hashCode()>();

        return $i0;
    }

    public boolean isEmulated()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mEmulated>;

        return $z0;
    }

    public boolean isPrimary()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mPrimary>;

        return $z0;
    }

    public boolean isRemovable()
    {
        android.os.storage.StorageVolume r0;
        boolean $z0;

        r0 := @this: android.os.storage.StorageVolume;

        $z0 = r0.<android.os.storage.StorageVolume: boolean mRemovable>;

        return $z0;
    }

    public void setState(java.lang.String)
    {
        android.os.storage.StorageVolume r0;
        java.lang.String r1;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: java.lang.String;

        r0.<android.os.storage.StorageVolume: java.lang.String mState> = r1;

        return;
    }

    public void setStorageId(int)
    {
        android.os.storage.StorageVolume r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.os.storage.StorageVolume;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        $i2 = $i1 << 16;

        $i3 = 1 + $i2;

        r0.<android.os.storage.StorageVolume: int mStorageId> = $i3;

        return;
    }

    public void setUserLabel(java.lang.String)
    {
        android.os.storage.StorageVolume r0;
        java.lang.String r1;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: java.lang.String;

        r0.<android.os.storage.StorageVolume: java.lang.String mUserLabel> = r1;

        return;
    }

    public void setUuid(java.lang.String)
    {
        android.os.storage.StorageVolume r0;
        java.lang.String r1;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: java.lang.String;

        r0.<android.os.storage.StorageVolume: java.lang.String mUuid> = r1;

        return;
    }

    public java.lang.String toString()
    {
        android.os.storage.StorageVolume r0;
        java.io.CharArrayWriter r1, $r2;
        com.android.internal.util.IndentingPrintWriter $r3;
        java.lang.String $r4;

        r0 := @this: android.os.storage.StorageVolume;

        $r2 = new java.io.CharArrayWriter;

        specialinvoke $r2.<java.io.CharArrayWriter: void <init>()>();

        r1 = $r2;

        $r3 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r3.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String,int)>(r1, "    ", 80);

        virtualinvoke r0.<android.os.storage.StorageVolume: void dump(com.android.internal.util.IndentingPrintWriter)>($r3);

        $r4 = virtualinvoke r1.<java.io.CharArrayWriter: java.lang.String toString()>();

        return $r4;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.storage.StorageVolume r0;
        android.os.Parcel r1;
        int i0, $i5, $i6, $i7;
        byte b1, b2, b3, b4;
        java.io.File $r2;
        java.lang.String $r3, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        android.os.UserHandle $r4;
        long $l8;

        r0 := @this: android.os.storage.StorageVolume;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        b1 = 1;

        $i5 = r0.<android.os.storage.StorageVolume: int mStorageId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r2 = r0.<android.os.storage.StorageVolume: java.io.File mPath>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i6 = r0.<android.os.storage.StorageVolume: int mDescriptionId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $z0 = r0.<android.os.storage.StorageVolume: boolean mPrimary>;

        if $z0 == 0 goto label5;

        b2 = b1;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $z1 = r0.<android.os.storage.StorageVolume: boolean mRemovable>;

        if $z1 == 0 goto label6;

        b3 = b1;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b3);

        $z2 = r0.<android.os.storage.StorageVolume: boolean mEmulated>;

        if $z2 == 0 goto label7;

        b4 = b1;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b4);

        $i7 = r0.<android.os.storage.StorageVolume: int mMtpReserveSpace>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $z3 = r0.<android.os.storage.StorageVolume: boolean mAllowMassStorage>;

        if $z3 == 0 goto label8;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        $l8 = r0.<android.os.storage.StorageVolume: long mMaxFileSize>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l8);

        $r4 = r0.<android.os.storage.StorageVolume: android.os.UserHandle mOwner>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r4, i0);

        $r6 = r0.<android.os.storage.StorageVolume: java.lang.String mUuid>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r5 = r0.<android.os.storage.StorageVolume: java.lang.String mUserLabel>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r7 = r0.<android.os.storage.StorageVolume: java.lang.String mState>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        return;

     label5:
        b2 = 0;

        goto label1;

     label6:
        b3 = 0;

        goto label2;

     label7:
        b4 = 0;

        goto label3;

     label8:
        b1 = 0;

        goto label4;
    }
}
