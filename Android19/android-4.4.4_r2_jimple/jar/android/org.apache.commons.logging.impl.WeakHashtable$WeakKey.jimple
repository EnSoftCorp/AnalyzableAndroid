final class org.apache.commons.logging.impl.WeakHashtable$WeakKey extends java.lang.ref.WeakReference
{
    private final org.apache.commons.logging.impl.WeakHashtable$Referenced referenced;

    private void <init>(java.lang.Object, java.lang.ref.ReferenceQueue, org.apache.commons.logging.impl.WeakHashtable$Referenced)
    {
        org.apache.commons.logging.impl.WeakHashtable$WeakKey r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue r2;
        org.apache.commons.logging.impl.WeakHashtable$Referenced r3;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$WeakKey;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.ref.ReferenceQueue;

        r3 := @parameter2: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        specialinvoke r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r2);

        r0.<org.apache.commons.logging.impl.WeakHashtable$WeakKey: org.apache.commons.logging.impl.WeakHashtable$Referenced referenced> = r3;

        return;
    }

    void <init>(java.lang.Object, java.lang.ref.ReferenceQueue, org.apache.commons.logging.impl.WeakHashtable$Referenced, org.apache.commons.logging.impl.WeakHashtable$1)
    {
        org.apache.commons.logging.impl.WeakHashtable$WeakKey r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue r2;
        org.apache.commons.logging.impl.WeakHashtable$Referenced r3;
        org.apache.commons.logging.impl.WeakHashtable$1 r4;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$WeakKey;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.ref.ReferenceQueue;

        r3 := @parameter2: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        r4 := @parameter3: org.apache.commons.logging.impl.WeakHashtable$1;

        specialinvoke r0.<org.apache.commons.logging.impl.WeakHashtable$WeakKey: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,org.apache.commons.logging.impl.WeakHashtable$Referenced)>(r1, r2, r3);

        return;
    }

    static org.apache.commons.logging.impl.WeakHashtable$Referenced access$400(org.apache.commons.logging.impl.WeakHashtable$WeakKey)
    {
        org.apache.commons.logging.impl.WeakHashtable$WeakKey r0;
        org.apache.commons.logging.impl.WeakHashtable$Referenced $r1;

        r0 := @parameter0: org.apache.commons.logging.impl.WeakHashtable$WeakKey;

        $r1 = specialinvoke r0.<org.apache.commons.logging.impl.WeakHashtable$WeakKey: org.apache.commons.logging.impl.WeakHashtable$Referenced getReferenced()>();

        return $r1;
    }

    private org.apache.commons.logging.impl.WeakHashtable$Referenced getReferenced()
    {
        org.apache.commons.logging.impl.WeakHashtable$WeakKey r0;
        org.apache.commons.logging.impl.WeakHashtable$Referenced $r1;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$WeakKey;

        $r1 = r0.<org.apache.commons.logging.impl.WeakHashtable$WeakKey: org.apache.commons.logging.impl.WeakHashtable$Referenced referenced>;

        return $r1;
    }
}
