class android.opengl.EGLLogWrapper extends java.lang.Object implements javax.microedition.khronos.egl.EGL11
{
    private int mArgCount;
    boolean mCheckError;
    private javax.microedition.khronos.egl.EGL10 mEgl10;
    java.io.Writer mLog;
    boolean mLogArgumentNames;

    public void <init>(javax.microedition.khronos.egl.EGL, int, java.io.Writer)
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGL r1;
        int i0, $i1, $i2;
        java.io.Writer r2;
        boolean z0, z1;
        javax.microedition.khronos.egl.EGL10 $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGL;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.Writer;

        z0 = 1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = (javax.microedition.khronos.egl.EGL10) r1;

        r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10> = $r3;

        r0.<android.opengl.EGLLogWrapper: java.io.Writer mLog> = r2;

        $i1 = i0 & 4;

        if $i1 == 0 goto label3;

        z1 = z0;

     label1:
        r0.<android.opengl.EGLLogWrapper: boolean mLogArgumentNames> = z1;

        $i2 = i0 & 1;

        if $i2 == 0 goto label4;

     label2:
        r0.<android.opengl.EGLLogWrapper: boolean mCheckError> = z0;

        return;

     label3:
        z1 = 0;

        goto label1;

     label4:
        z0 = 0;

        goto label2;
    }

    private void arg(java.lang.String, int)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r2);

        return;
    }

    private void arg(java.lang.String, java.lang.Object)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r3;
        java.lang.Object r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<android.opengl.EGLLogWrapper: java.lang.String toString(java.lang.Object)>(r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void arg(java.lang.String, java.lang.String)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, r2, $r6;
        int i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = r0.<android.opengl.EGLLogWrapper: int mArgCount>;

        $i1 = i0 + 1;

        r0.<android.opengl.EGLLogWrapper: int mArgCount> = $i1;

        if i0 <= 0 goto label1;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void log(java.lang.String)>(", ");

     label1:
        $z0 = r0.<android.opengl.EGLLogWrapper: boolean mLogArgumentNames>;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void log(java.lang.String)>($r6);

     label2:
        specialinvoke r0.<android.opengl.EGLLogWrapper: void log(java.lang.String)>(r2);

        return;
    }

    private void arg(java.lang.String, javax.microedition.khronos.egl.EGLContext)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r4;
        javax.microedition.khronos.egl.EGLContext r2, $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLContext;

        $r3 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext EGL_NO_CONTEXT>;

        if r2 != $r3 goto label1;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, "EGL10.EGL_NO_CONTEXT");

        return;

     label1:
        $r4 = specialinvoke r0.<android.opengl.EGLLogWrapper: java.lang.String toString(java.lang.Object)>(r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r4);

        return;
    }

    private void arg(java.lang.String, javax.microedition.khronos.egl.EGLDisplay)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r5;
        javax.microedition.khronos.egl.EGLDisplay r2, $r4;
        java.lang.Object $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLDisplay;

        $r3 = <javax.microedition.khronos.egl.EGL10: java.lang.Object EGL_DEFAULT_DISPLAY>;

        if r2 != $r3 goto label1;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, "EGL10.EGL_DEFAULT_DISPLAY");

        return;

     label1:
        $r4 = <android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay EGL_NO_DISPLAY>;

        if r2 != $r4 goto label2;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, "EGL10.EGL_NO_DISPLAY");

        return;

     label2:
        $r5 = specialinvoke r0.<android.opengl.EGLLogWrapper: java.lang.String toString(java.lang.Object)>(r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r5);

        return;
    }

    private void arg(java.lang.String, javax.microedition.khronos.egl.EGLSurface)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r4;
        javax.microedition.khronos.egl.EGLSurface r2, $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLSurface;

        $r3 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        if r2 != $r3 goto label1;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, "EGL10.EGL_NO_SURFACE");

        return;

     label1:
        $r4 = specialinvoke r0.<android.opengl.EGLLogWrapper: java.lang.String toString(java.lang.Object)>(r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r4);

        return;
    }

    private void arg(java.lang.String, int[])
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r3;
        int[] r2;
        int $i0;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        if r2 != null goto label1;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, "null");

        return;

     label1:
        $i0 = lengthof r2;

        $r3 = specialinvoke r0.<android.opengl.EGLLogWrapper: java.lang.String toString(int,int[],int)>($i0, r2, 0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void arg(java.lang.String, java.lang.Object[])
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r3;
        java.lang.Object[] r2;
        int $i0;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        if r2 != null goto label1;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, "null");

        return;

     label1:
        $i0 = lengthof r2;

        $r3 = specialinvoke r0.<android.opengl.EGLLogWrapper: java.lang.String toString(int,java.lang.Object[],int)>($i0, r2, 0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }

    private void begin(java.lang.String)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void log(java.lang.String)>($r5);

        r0.<android.opengl.EGLLogWrapper: int mArgCount> = 0;

        return;
    }

    private void checkError()
    {
        android.opengl.EGLLogWrapper r0;
        int i0;
        java.lang.String r1, $r5;
        javax.microedition.khronos.egl.EGL10 $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        boolean $z0;
        android.opengl.GLException $r7;

        r0 := @this: android.opengl.EGLLogWrapper;

        $r2 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        i0 = interfaceinvoke $r2.<javax.microedition.khronos.egl.EGL10: int eglGetError()>();

        if i0 == 12288 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("eglError: ");

        $r5 = staticinvoke <android.opengl.EGLLogWrapper: java.lang.String getErrorString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void logLine(java.lang.String)>(r1);

        $z0 = r0.<android.opengl.EGLLogWrapper: boolean mCheckError>;

        if $z0 == 0 goto label1;

        $r7 = new android.opengl.GLException;

        specialinvoke $r7.<android.opengl.GLException: void <init>(int,java.lang.String)>(i0, r1);

        throw $r7;

     label1:
        return;
    }

    private void end()
    {
        android.opengl.EGLLogWrapper r0;

        r0 := @this: android.opengl.EGLLogWrapper;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void log(java.lang.String)>(");\n");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void flush()>();

        return;
    }

    private void flush()
    {
        android.opengl.EGLLogWrapper r0;
        java.io.Writer $r2;
        java.io.IOException $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

     label1:
        $r2 = r0.<android.opengl.EGLLogWrapper: java.io.Writer mLog>;

        virtualinvoke $r2.<java.io.Writer: void flush()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r0.<android.opengl.EGLLogWrapper: java.io.Writer mLog> = null;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String getErrorString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 12288: goto label02;
            case 12289: goto label03;
            case 12290: goto label04;
            case 12291: goto label05;
            case 12292: goto label06;
            case 12293: goto label07;
            case 12294: goto label08;
            case 12295: goto label09;
            case 12296: goto label10;
            case 12297: goto label11;
            case 12298: goto label12;
            case 12299: goto label13;
            case 12300: goto label14;
            case 12301: goto label15;
            case 12302: goto label16;
            default: goto label01;
        };

     label01:
        $r0 = staticinvoke <android.opengl.EGLLogWrapper: java.lang.String getHex(int)>(i0);

        return $r0;

     label02:
        return "EGL_SUCCESS";

     label03:
        return "EGL_NOT_INITIALIZED";

     label04:
        return "EGL_BAD_ACCESS";

     label05:
        return "EGL_BAD_ALLOC";

     label06:
        return "EGL_BAD_ATTRIBUTE";

     label07:
        return "EGL_BAD_CONFIG";

     label08:
        return "EGL_BAD_CONTEXT";

     label09:
        return "EGL_BAD_CURRENT_SURFACE";

     label10:
        return "EGL_BAD_DISPLAY";

     label11:
        return "EGL_BAD_MATCH";

     label12:
        return "EGL_BAD_NATIVE_PIXMAP";

     label13:
        return "EGL_BAD_NATIVE_WINDOW";

     label14:
        return "EGL_BAD_PARAMETER";

     label15:
        return "EGL_BAD_SURFACE";

     label16:
        return "EGL_CONTEXT_LOST";
    }

    private static java.lang.String getHex(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String $r2, $r4;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void log(java.lang.String)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1;
        java.io.Writer $r3;
        java.io.IOException $r4;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.opengl.EGLLogWrapper: java.io.Writer mLog>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void logLine(java.lang.String)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void log(java.lang.String)>($r5);

        return;
    }

    private void returns(int)
    {
        android.opengl.EGLLogWrapper r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.opengl.EGLLogWrapper;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.String)>($r1);

        return;
    }

    private void returns(java.lang.Object)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<android.opengl.EGLLogWrapper: java.lang.String toString(java.lang.Object)>(r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.String)>($r2);

        return;
    }

    private void returns(java.lang.String)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returns ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void log(java.lang.String)>($r6);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void flush()>();

        return;
    }

    private void returns(boolean)
    {
        android.opengl.EGLLogWrapper r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @this: android.opengl.EGLLogWrapper;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.String)>($r1);

        return;
    }

    private java.lang.String toString(int, int[], int)
    {
        android.opengl.EGLLogWrapper r0;
        int i0, i1, i2, i3, i4, $i5;
        int[] r1;
        java.lang.StringBuilder r2, $r3, $r7, $r8, $r9, $r10;
        java.lang.String $r6, $r12;

        r0 := @this: android.opengl.EGLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\n");

        i2 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label5;

        i4 = i1 + i3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        if i4 < 0 goto label2;

        if i4 < i2 goto label4;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of bounds");

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i3 = i3 + 1;

        goto label1;

     label4:
        $i5 = r1[i4];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        goto label3;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String toString(int, java.lang.Object[], int)
    {
        android.opengl.EGLLogWrapper r0;
        int i0, i1, i2, i3, i4;
        java.lang.Object[] r1;
        java.lang.StringBuilder r2, $r3, $r7, $r8, $r9, $r10;
        java.lang.String $r6, $r12;
        java.lang.Object $r16;

        r0 := @this: android.opengl.EGLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{\n");

        i2 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label5;

        i4 = i1 + i3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        if i4 < 0 goto label2;

        if i4 < i2 goto label4;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of bounds");

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i3 = i3 + 1;

        goto label1;

     label4:
        $r16 = r1[i4];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        goto label3;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String toString(java.lang.Object)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return "null";

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay, int[], javax.microedition.khronos.egl.EGLConfig[], int, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        int[] r2, r4;
        javax.microedition.khronos.egl.EGLConfig[] r3;
        int i0;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r5;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: int[];

        r3 := @parameter2: javax.microedition.khronos.egl.EGLConfig[];

        i0 := @parameter3: int;

        r4 := @parameter4: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglChooseConfig");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("attrib_list", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>("config_size", i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r5 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r5.<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>(r1, r2, r3, i0, r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object[])>("configs", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("num_config", r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, java.lang.Object)
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLSurface r2;
        java.lang.Object r3;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r4;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLSurface;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglCopyBuffers");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface)>("surface", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("native_pixmap", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r4.<javax.microedition.khronos.egl.EGL10: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>(r1, r2, r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        javax.microedition.khronos.egl.EGLContext r3, r5;
        int[] r4;
        javax.microedition.khronos.egl.EGL10 $r6;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: javax.microedition.khronos.egl.EGLContext;

        r4 := @parameter3: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglCreateContext");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("config", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext)>("share_context", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("attrib_list", r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r6 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r5 = interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>(r1, r2, r3, r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>(r5);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r5;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        int[] r3;
        javax.microedition.khronos.egl.EGLSurface r4;
        javax.microedition.khronos.egl.EGL10 $r5;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglCreatePbufferSurface");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("config", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("attrib_list", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r5 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r4 = interfaceinvoke $r5.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>(r1, r2, r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>(r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r4;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        java.lang.Object r3;
        int[] r4;
        javax.microedition.khronos.egl.EGLSurface r5;
        javax.microedition.khronos.egl.EGL10 $r6;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglCreatePixmapSurface");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("config", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("native_pixmap", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("attrib_list", r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r6 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r5 = interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>(r1, r2, r3, r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>(r5);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r5;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        java.lang.Object r3;
        int[] r4;
        javax.microedition.khronos.egl.EGLSurface r5;
        javax.microedition.khronos.egl.EGL10 $r6;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglCreateWindowSurface");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("config", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("native_window", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("attrib_list", r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r6 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r5 = interfaceinvoke $r6.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>(r1, r2, r3, r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>(r5);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r5;
    }

    public boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext)
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLContext r2;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLContext;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglDestroyContext");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext)>("context", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>(r1, r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface)
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLSurface r2;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLSurface;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglDestroySurface");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface)>("surface", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>(r1, r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        int i0;
        int[] r3;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r4;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        i0 := @parameter2: int;

        r3 := @parameter3: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglGetConfigAttrib");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("config", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>("attribute", i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r4.<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>(r1, r2, i0, r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("value", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return 0;
    }

    public boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig[], int, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig[] r2;
        int i0;
        int[] r3;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r4;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig[];

        i0 := @parameter2: int;

        r3 := @parameter3: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglGetConfigs");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>("config_size", i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r4.<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>(r1, r2, i0, r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object[])>("configs", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("num_config", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLContext r1;
        javax.microedition.khronos.egl.EGL10 $r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglGetCurrentContext");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r1 = interfaceinvoke $r2.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>(r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r1;
    }

    public javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGL10 $r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglGetCurrentDisplay");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r1 = interfaceinvoke $r2.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>(r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r1;
    }

    public javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)
    {
        android.opengl.EGLLogWrapper r0;
        int i0;
        javax.microedition.khronos.egl.EGLSurface r1;
        javax.microedition.khronos.egl.EGL10 $r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglGetCurrentSurface");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>("readdraw", i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r1 = interfaceinvoke $r2.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>(i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>(r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r1;
    }

    public javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)
    {
        android.opengl.EGLLogWrapper r0;
        java.lang.Object r1;
        javax.microedition.khronos.egl.EGLDisplay r2;
        javax.microedition.khronos.egl.EGL10 $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglGetDisplay");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("native_display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r2 = interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>(r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.Object)>(r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r2;
    }

    public int eglGetError()
    {
        android.opengl.EGLLogWrapper r0;
        int i0;
        javax.microedition.khronos.egl.EGL10 $r1;
        java.lang.String $r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglGetError");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        i0 = interfaceinvoke $r1.<javax.microedition.khronos.egl.EGL10: int eglGetError()>();

        $r2 = staticinvoke <android.opengl.EGLLogWrapper: java.lang.String getErrorString(int)>(i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.String)>($r2);

        return i0;
    }

    public boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        int[] r2;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglInitialize");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>(r1, r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int[])>("major_minor", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLContext)
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLSurface r2, r3;
        javax.microedition.khronos.egl.EGLContext r4;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r5;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLSurface;

        r3 := @parameter2: javax.microedition.khronos.egl.EGLSurface;

        r4 := @parameter3: javax.microedition.khronos.egl.EGLContext;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglMakeCurrent");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface)>("draw", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface)>("read", r3);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext)>("context", r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r5 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r5.<javax.microedition.khronos.egl.EGL10: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>(r1, r2, r3, r4);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext, int, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLContext r2;
        int i0, $i1;
        int[] r3;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r4;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLContext;

        i0 := @parameter2: int;

        r3 := @parameter3: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglQueryContext");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext)>("context", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>("attribute", i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r4.<javax.microedition.khronos.egl.EGL10: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>(r1, r2, i0, r3);

        $i1 = r3[0];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(int)>($i1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay, int)
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        int i0;
        java.lang.String r2;
        javax.microedition.khronos.egl.EGL10 $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        i0 := @parameter1: int;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglQueryString");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>("name", i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        r2 = interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>(r1, i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(java.lang.String)>(r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return r2;
    }

    public boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, int, int[])
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLSurface r2;
        int i0, $i1;
        int[] r3;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r4;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLSurface;

        i0 := @parameter2: int;

        r3 := @parameter3: int[];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglQuerySurface");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface)>("surface", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>("attribute", i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r4 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r4.<javax.microedition.khronos.egl.EGL10: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>(r1, r2, i0, r3);

        $i1 = r3[0];

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(int)>($i1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglReleaseThread()
    {
        android.opengl.EGLLogWrapper r0;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r1;

        r0 := @this: android.opengl.EGLLogWrapper;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglReleaseThread");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r1.<javax.microedition.khronos.egl.EGL10: boolean eglReleaseThread()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface)
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLSurface r2;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r3;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLSurface;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglInitialize");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface)>("surface", r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r3 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r3.<javax.microedition.khronos.egl.EGL10: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>(r1, r2);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)
    {
        android.opengl.EGLLogWrapper r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglTerminate");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay)>("display", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r2.<javax.microedition.khronos.egl.EGL10: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>(r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglWaitGL()
    {
        android.opengl.EGLLogWrapper r0;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r1;

        r0 := @this: android.opengl.EGLLogWrapper;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglWaitGL");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r1 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r1.<javax.microedition.khronos.egl.EGL10: boolean eglWaitGL()>();

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }

    public boolean eglWaitNative(int, java.lang.Object)
    {
        android.opengl.EGLLogWrapper r0;
        int i0;
        java.lang.Object r1;
        boolean z0;
        javax.microedition.khronos.egl.EGL10 $r2;

        r0 := @this: android.opengl.EGLLogWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<android.opengl.EGLLogWrapper: void begin(java.lang.String)>("eglWaitNative");

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,int)>("engine", i0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void arg(java.lang.String,java.lang.Object)>("bindTarget", r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void end()>();

        $r2 = r0.<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGL10 mEgl10>;

        z0 = interfaceinvoke $r2.<javax.microedition.khronos.egl.EGL10: boolean eglWaitNative(int,java.lang.Object)>(i0, r1);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void returns(boolean)>(z0);

        specialinvoke r0.<android.opengl.EGLLogWrapper: void checkError()>();

        return z0;
    }
}
