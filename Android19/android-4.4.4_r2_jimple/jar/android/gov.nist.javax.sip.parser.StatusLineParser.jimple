public class gov.nist.javax.sip.parser.StatusLineParser extends gov.nist.javax.sip.parser.Parser
{

    public void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.StatusLineParser r0;
        gov.nist.javax.sip.parser.Lexer r1;
        gov.nist.core.LexerCore $r2;

        r0 := @this: gov.nist.javax.sip.parser.StatusLineParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.Parser: void <init>()>();

        r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer> = r1;

        $r2 = r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("status_lineLexer");

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.StatusLineParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.Lexer $r2;

        r0 := @this: gov.nist.javax.sip.parser.StatusLineParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.Parser: void <init>()>();

        $r2 = new gov.nist.javax.sip.parser.Lexer;

        specialinvoke $r2.<gov.nist.javax.sip.parser.Lexer: void <init>(java.lang.String,java.lang.String)>("status_lineLexer", r1);

        r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer> = $r2;

        return;
    }

    public gov.nist.javax.sip.header.StatusLine parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StatusLineParser r0;
        java.lang.Throwable r1, $r9;
        gov.nist.javax.sip.header.StatusLine r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.String $r4, $r7;
        gov.nist.core.LexerCore $r5, $r6, $r8;
        int $i0;

        r0 := @this: gov.nist.javax.sip.parser.StatusLineParser;

     label1:
        $z0 = <gov.nist.javax.sip.parser.StatusLineParser: boolean debug>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: void dbg_enter(java.lang.String)>("parse");

     label2:
        $r3 = new gov.nist.javax.sip.header.StatusLine;

        specialinvoke $r3.<gov.nist.javax.sip.header.StatusLine: void <init>()>();

        r2 = $r3;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: java.lang.String sipVersion()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.StatusLine: void setSipVersion(java.lang.String)>($r4);

        $r5 = r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: void SPorHT()>();

        $i0 = virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: int statusCode()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.StatusLine: void setStatusCode(int)>($i0);

        $r6 = r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void SPorHT()>();

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: java.lang.String reasonPhrase()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.StatusLine: void setReasonPhrase(java.lang.String)>($r7);

        $r8 = r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void SPorHT()>();

     label3:
        $z1 = <gov.nist.javax.sip.parser.StatusLineParser: boolean debug>;

        if $z1 == 0 goto label4;

        virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: void dbg_leave(java.lang.String)>("parse");

     label4:
        return r2;

     label5:
        $r9 := @caughtexception;

        r1 = $r9;

        $z2 = <gov.nist.javax.sip.parser.StatusLineParser: boolean debug>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: void dbg_leave(java.lang.String)>("parse");

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    protected java.lang.String reasonPhrase() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StatusLineParser r0;
        gov.nist.core.LexerCore $r1;
        java.lang.String $r2, $r3;

        r0 := @this: gov.nist.javax.sip.parser.StatusLineParser;

        $r1 = r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer>;

        $r2 = virtualinvoke $r1.<gov.nist.core.LexerCore: java.lang.String getRest()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r3;
    }

    protected int statusCode() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StatusLineParser r0;
        java.lang.String r1, $r11, $r12, $r14;
        java.lang.Throwable r2, $r5;
        java.lang.NumberFormatException r3, $r6;
        int i0, $i1;
        gov.nist.core.LexerCore $r4, $r9, $r16;
        boolean $z0, $z1, $z2;
        java.text.ParseException $r7;
        java.lang.StringBuilder $r8, $r10, $r13, $r15;

        r0 := @this: gov.nist.javax.sip.parser.StatusLineParser;

        $r4 = r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer>;

        r1 = virtualinvoke $r4.<gov.nist.core.LexerCore: java.lang.String number()>();

        $z0 = <gov.nist.javax.sip.parser.StatusLineParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: void dbg_enter(java.lang.String)>("statusCode");

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        $z1 = <gov.nist.javax.sip.parser.StatusLineParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: void dbg_leave(java.lang.String)>("statusCode");

     label3:
        return i0;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        $r7 = new java.text.ParseException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer>;

        $r11 = virtualinvoke $r9.<gov.nist.core.LexerCore: java.lang.String getBuffer()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r12 = virtualinvoke r3.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r0.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.core.LexerCore lexer>;

        $i1 = virtualinvoke $r16.<gov.nist.core.LexerCore: int getPtr()>();

        specialinvoke $r7.<java.text.ParseException: void <init>(java.lang.String,int)>($r14, $i1);

        throw $r7;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

        $z2 = <gov.nist.javax.sip.parser.StatusLineParser: boolean debug>;

        if $z2 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.StatusLineParser: void dbg_leave(java.lang.String)>("statusCode");

     label7:
        throw r2;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }
}
