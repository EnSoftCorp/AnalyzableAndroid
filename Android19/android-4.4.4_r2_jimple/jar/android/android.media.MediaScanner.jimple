public class android.media.MediaScanner extends java.lang.Object
{
    private static final java.lang.String ALARMS_DIR;
    private static final int DATE_MODIFIED_PLAYLISTS_COLUMN_INDEX;
    private static final java.lang.String DEFAULT_RINGTONE_PROPERTY_PREFIX;
    private static final boolean ENABLE_BULK_INSERTS;
    private static final int FILES_PRESCAN_DATE_MODIFIED_COLUMN_INDEX;
    private static final int FILES_PRESCAN_FORMAT_COLUMN_INDEX;
    private static final int FILES_PRESCAN_ID_COLUMN_INDEX;
    private static final int FILES_PRESCAN_PATH_COLUMN_INDEX;
    private static final java.lang.String[] FILES_PRESCAN_PROJECTION;
    private static final java.lang.String[] ID3_GENRES;
    private static final int ID_PLAYLISTS_COLUMN_INDEX;
    private static final java.lang.String[] ID_PROJECTION;
    private static final java.lang.String MUSIC_DIR;
    private static final java.lang.String NOTIFICATIONS_DIR;
    private static final int PATH_PLAYLISTS_COLUMN_INDEX;
    private static final java.lang.String[] PLAYLIST_MEMBERS_PROJECTION;
    private static final java.lang.String PODCAST_DIR;
    private static final java.lang.String RINGTONES_DIR;
    private static final java.lang.String TAG;
    private android.net.Uri mAudioUri;
    private final android.graphics.BitmapFactory$Options mBitmapOptions;
    private boolean mCaseInsensitivePaths;
    private final android.media.MediaScanner$MyMediaScannerClient mClient;
    private android.content.Context mContext;
    private java.lang.String mDefaultAlarmAlertFilename;
    private boolean mDefaultAlarmSet;
    private java.lang.String mDefaultNotificationFilename;
    private boolean mDefaultNotificationSet;
    private java.lang.String mDefaultRingtoneFilename;
    private boolean mDefaultRingtoneSet;
    private android.drm.DrmManagerClient mDrmManagerClient;
    private final boolean mExternalIsEmulated;
    private final java.lang.String mExternalStoragePath;
    private android.net.Uri mFilesUri;
    private android.net.Uri mFilesUriNoNotify;
    private android.net.Uri mImagesUri;
    private android.media.MediaInserter mMediaInserter;
    private android.content.IContentProvider mMediaProvider;
    private int mMtpObjectHandle;
    private int mNativeContext;
    private int mOriginalCount;
    private java.lang.String mPackageName;
    private java.util.ArrayList mPlayLists;
    private java.util.ArrayList mPlaylistEntries;
    private android.net.Uri mPlaylistsUri;
    private boolean mProcessGenres;
    private boolean mProcessPlaylists;
    private android.net.Uri mThumbsUri;
    private android.net.Uri mVideoUri;
    private boolean mWasEmptyPriorToScan;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2, $r3;

        <android.media.MediaScanner: java.lang.String TAG> = "MediaScanner";

        <android.media.MediaScanner: java.lang.String RINGTONES_DIR> = "/ringtones/";

        <android.media.MediaScanner: java.lang.String PODCAST_DIR> = "/podcasts/";

        <android.media.MediaScanner: int PATH_PLAYLISTS_COLUMN_INDEX> = 1;

        <android.media.MediaScanner: java.lang.String NOTIFICATIONS_DIR> = "/notifications/";

        <android.media.MediaScanner: java.lang.String MUSIC_DIR> = "/music/";

        <android.media.MediaScanner: int ID_PLAYLISTS_COLUMN_INDEX> = 0;

        <android.media.MediaScanner: int FILES_PRESCAN_PATH_COLUMN_INDEX> = 1;

        <android.media.MediaScanner: int FILES_PRESCAN_ID_COLUMN_INDEX> = 0;

        <android.media.MediaScanner: int FILES_PRESCAN_FORMAT_COLUMN_INDEX> = 2;

        <android.media.MediaScanner: int FILES_PRESCAN_DATE_MODIFIED_COLUMN_INDEX> = 3;

        <android.media.MediaScanner: boolean ENABLE_BULK_INSERTS> = 1;

        <android.media.MediaScanner: java.lang.String DEFAULT_RINGTONE_PROPERTY_PREFIX> = "ro.config.";

        <android.media.MediaScanner: int DATE_MODIFIED_PLAYLISTS_COLUMN_INDEX> = 2;

        <android.media.MediaScanner: java.lang.String ALARMS_DIR> = "/alarms/";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.MediaScanner: void native_init()>();

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "_id";

        $r0[1] = "_data";

        $r0[2] = "format";

        $r0[3] = "date_modified";

        <android.media.MediaScanner: java.lang.String[] FILES_PRESCAN_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "_id";

        <android.media.MediaScanner: java.lang.String[] ID_PROJECTION> = $r1;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "playlist_id";

        <android.media.MediaScanner: java.lang.String[] PLAYLIST_MEMBERS_PROJECTION> = $r2;

        $r3 = newarray (java.lang.String)[148];

        $r3[0] = "Blues";

        $r3[1] = "Classic Rock";

        $r3[2] = "Country";

        $r3[3] = "Dance";

        $r3[4] = "Disco";

        $r3[5] = "Funk";

        $r3[6] = "Grunge";

        $r3[7] = "Hip-Hop";

        $r3[8] = "Jazz";

        $r3[9] = "Metal";

        $r3[10] = "New Age";

        $r3[11] = "Oldies";

        $r3[12] = "Other";

        $r3[13] = "Pop";

        $r3[14] = "R&B";

        $r3[15] = "Rap";

        $r3[16] = "Reggae";

        $r3[17] = "Rock";

        $r3[18] = "Techno";

        $r3[19] = "Industrial";

        $r3[20] = "Alternative";

        $r3[21] = "Ska";

        $r3[22] = "Death Metal";

        $r3[23] = "Pranks";

        $r3[24] = "Soundtrack";

        $r3[25] = "Euro-Techno";

        $r3[26] = "Ambient";

        $r3[27] = "Trip-Hop";

        $r3[28] = "Vocal";

        $r3[29] = "Jazz+Funk";

        $r3[30] = "Fusion";

        $r3[31] = "Trance";

        $r3[32] = "Classical";

        $r3[33] = "Instrumental";

        $r3[34] = "Acid";

        $r3[35] = "House";

        $r3[36] = "Game";

        $r3[37] = "Sound Clip";

        $r3[38] = "Gospel";

        $r3[39] = "Noise";

        $r3[40] = "AlternRock";

        $r3[41] = "Bass";

        $r3[42] = "Soul";

        $r3[43] = "Punk";

        $r3[44] = "Space";

        $r3[45] = "Meditative";

        $r3[46] = "Instrumental Pop";

        $r3[47] = "Instrumental Rock";

        $r3[48] = "Ethnic";

        $r3[49] = "Gothic";

        $r3[50] = "Darkwave";

        $r3[51] = "Techno-Industrial";

        $r3[52] = "Electronic";

        $r3[53] = "Pop-Folk";

        $r3[54] = "Eurodance";

        $r3[55] = "Dream";

        $r3[56] = "Southern Rock";

        $r3[57] = "Comedy";

        $r3[58] = "Cult";

        $r3[59] = "Gangsta";

        $r3[60] = "Top 40";

        $r3[61] = "Christian Rap";

        $r3[62] = "Pop/Funk";

        $r3[63] = "Jungle";

        $r3[64] = "Native American";

        $r3[65] = "Cabaret";

        $r3[66] = "New Wave";

        $r3[67] = "Psychadelic";

        $r3[68] = "Rave";

        $r3[69] = "Showtunes";

        $r3[70] = "Trailer";

        $r3[71] = "Lo-Fi";

        $r3[72] = "Tribal";

        $r3[73] = "Acid Punk";

        $r3[74] = "Acid Jazz";

        $r3[75] = "Polka";

        $r3[76] = "Retro";

        $r3[77] = "Musical";

        $r3[78] = "Rock & Roll";

        $r3[79] = "Hard Rock";

        $r3[80] = "Folk";

        $r3[81] = "Folk-Rock";

        $r3[82] = "National Folk";

        $r3[83] = "Swing";

        $r3[84] = "Fast Fusion";

        $r3[85] = "Bebob";

        $r3[86] = "Latin";

        $r3[87] = "Revival";

        $r3[88] = "Celtic";

        $r3[89] = "Bluegrass";

        $r3[90] = "Avantgarde";

        $r3[91] = "Gothic Rock";

        $r3[92] = "Progressive Rock";

        $r3[93] = "Psychedelic Rock";

        $r3[94] = "Symphonic Rock";

        $r3[95] = "Slow Rock";

        $r3[96] = "Big Band";

        $r3[97] = "Chorus";

        $r3[98] = "Easy Listening";

        $r3[99] = "Acoustic";

        $r3[100] = "Humour";

        $r3[101] = "Speech";

        $r3[102] = "Chanson";

        $r3[103] = "Opera";

        $r3[104] = "Chamber Music";

        $r3[105] = "Sonata";

        $r3[106] = "Symphony";

        $r3[107] = "Booty Bass";

        $r3[108] = "Primus";

        $r3[109] = "Porn Groove";

        $r3[110] = "Satire";

        $r3[111] = "Slow Jam";

        $r3[112] = "Club";

        $r3[113] = "Tango";

        $r3[114] = "Samba";

        $r3[115] = "Folklore";

        $r3[116] = "Ballad";

        $r3[117] = "Power Ballad";

        $r3[118] = "Rhythmic Soul";

        $r3[119] = "Freestyle";

        $r3[120] = "Duet";

        $r3[121] = "Punk Rock";

        $r3[122] = "Drum Solo";

        $r3[123] = "A capella";

        $r3[124] = "Euro-House";

        $r3[125] = "Dance Hall";

        $r3[126] = "Goa";

        $r3[127] = "Drum & Bass";

        $r3[128] = "Club-House";

        $r3[129] = "Hardcore";

        $r3[130] = "Terror";

        $r3[131] = "Indie";

        $r3[132] = "Britpop";

        $r3[133] = null;

        $r3[134] = "Polsk Punk";

        $r3[135] = "Beat";

        $r3[136] = "Christian Gangsta";

        $r3[137] = "Heavy Metal";

        $r3[138] = "Black Metal";

        $r3[139] = "Crossover";

        $r3[140] = "Contemporary Christian";

        $r3[141] = "Christian Rock";

        $r3[142] = "Merengue";

        $r3[143] = "Salsa";

        $r3[144] = "Thrash Metal";

        $r3[145] = "Anime";

        $r3[146] = "JPop";

        $r3[147] = "Synthpop";

        <android.media.MediaScanner: java.lang.String[] ID3_GENRES> = $r3;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.media.MediaScanner r0;
        android.content.Context r1;
        android.graphics.BitmapFactory$Options $r2, $r6, $r7;
        java.util.ArrayList $r3;
        android.media.MediaScanner$MyMediaScannerClient $r4;
        java.lang.String $r5, $r9;
        java.io.File $r8;
        boolean $z0;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaScanner: boolean mWasEmptyPriorToScan> = 0;

        $r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        r0.<android.media.MediaScanner: android.graphics.BitmapFactory$Options mBitmapOptions> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries> = $r3;

        r0.<android.media.MediaScanner: android.drm.DrmManagerClient mDrmManagerClient> = null;

        $r4 = new android.media.MediaScanner$MyMediaScannerClient;

        specialinvoke $r4.<android.media.MediaScanner$MyMediaScannerClient: void <init>(android.media.MediaScanner,android.media.MediaScanner$1)>(r0, null);

        r0.<android.media.MediaScanner: android.media.MediaScanner$MyMediaScannerClient mClient> = $r4;

        specialinvoke r0.<android.media.MediaScanner: void native_setup()>();

        r0.<android.media.MediaScanner: android.content.Context mContext> = r1;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.media.MediaScanner: java.lang.String mPackageName> = $r5;

        $r6 = r0.<android.media.MediaScanner: android.graphics.BitmapFactory$Options mBitmapOptions>;

        $r6.<android.graphics.BitmapFactory$Options: int inSampleSize> = 1;

        $r7 = r0.<android.media.MediaScanner: android.graphics.BitmapFactory$Options mBitmapOptions>;

        $r7.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        specialinvoke r0.<android.media.MediaScanner: void setDefaultRingtoneFileNames()>();

        $r8 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        r0.<android.media.MediaScanner: java.lang.String mExternalStoragePath> = $r9;

        $z0 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

        r0.<android.media.MediaScanner: boolean mExternalIsEmulated> = $z0;

        return;
    }

    static boolean access$100(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.media.MediaScanner: boolean isNoMediaFile(java.lang.String)>(r0);

        return $z0;
    }

    static java.lang.String[] access$1000()
    {
        java.lang.String[] $r0;

        $r0 = <android.media.MediaScanner: java.lang.String[] ID3_GENRES>;

        return $r0;
    }

    static android.graphics.BitmapFactory$Options access$1100(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.graphics.BitmapFactory$Options $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.graphics.BitmapFactory$Options mBitmapOptions>;

        return $r1;
    }

    static android.net.Uri access$1200(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.net.Uri $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.net.Uri mFilesUri>;

        return $r1;
    }

    static android.media.MediaInserter access$1300(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.media.MediaInserter $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.media.MediaInserter mMediaInserter>;

        return $r1;
    }

    static android.net.Uri access$1400(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.net.Uri $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.net.Uri mVideoUri>;

        return $r1;
    }

    static android.net.Uri access$1500(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.net.Uri $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.net.Uri mImagesUri>;

        return $r1;
    }

    static android.net.Uri access$1600(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.net.Uri $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.net.Uri mAudioUri>;

        return $r1;
    }

    static boolean access$1700(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        boolean $z0;

        r0 := @parameter0: android.media.MediaScanner;

        $z0 = r0.<android.media.MediaScanner: boolean mWasEmptyPriorToScan>;

        return $z0;
    }

    static boolean access$1800(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        boolean $z0;

        r0 := @parameter0: android.media.MediaScanner;

        $z0 = r0.<android.media.MediaScanner: boolean mDefaultNotificationSet>;

        return $z0;
    }

    static boolean access$1802(android.media.MediaScanner, boolean)
    {
        android.media.MediaScanner r0;
        boolean z0;

        r0 := @parameter0: android.media.MediaScanner;

        z0 := @parameter1: boolean;

        r0.<android.media.MediaScanner: boolean mDefaultNotificationSet> = z0;

        return z0;
    }

    static java.lang.String access$1900(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        java.lang.String $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: java.lang.String mDefaultNotificationFilename>;

        return $r1;
    }

    static boolean access$200(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        boolean $z0;

        r0 := @parameter0: android.media.MediaScanner;

        $z0 = specialinvoke r0.<android.media.MediaScanner: boolean isDrmEnabled()>();

        return $z0;
    }

    static boolean access$2000(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        boolean $z0;

        r0 := @parameter0: android.media.MediaScanner;

        $z0 = r0.<android.media.MediaScanner: boolean mDefaultRingtoneSet>;

        return $z0;
    }

    static boolean access$2002(android.media.MediaScanner, boolean)
    {
        android.media.MediaScanner r0;
        boolean z0;

        r0 := @parameter0: android.media.MediaScanner;

        z0 := @parameter1: boolean;

        r0.<android.media.MediaScanner: boolean mDefaultRingtoneSet> = z0;

        return z0;
    }

    static java.lang.String access$2100(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        java.lang.String $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: java.lang.String mDefaultRingtoneFilename>;

        return $r1;
    }

    static boolean access$2200(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        boolean $z0;

        r0 := @parameter0: android.media.MediaScanner;

        $z0 = r0.<android.media.MediaScanner: boolean mDefaultAlarmSet>;

        return $z0;
    }

    static boolean access$2202(android.media.MediaScanner, boolean)
    {
        android.media.MediaScanner r0;
        boolean z0;

        r0 := @parameter0: android.media.MediaScanner;

        z0 := @parameter1: boolean;

        r0.<android.media.MediaScanner: boolean mDefaultAlarmSet> = z0;

        return z0;
    }

    static java.lang.String access$2300(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        java.lang.String $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: java.lang.String mDefaultAlarmAlertFilename>;

        return $r1;
    }

    static java.lang.String access$2400(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        java.lang.String $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        return $r1;
    }

    static android.content.IContentProvider access$2500(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.content.IContentProvider $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        return $r1;
    }

    static android.content.Context access$2600(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.content.Context $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.content.Context mContext>;

        return $r1;
    }

    static android.drm.DrmManagerClient access$2700(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        android.drm.DrmManagerClient $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.drm.DrmManagerClient mDrmManagerClient>;

        return $r1;
    }

    static android.drm.DrmManagerClient access$2702(android.media.MediaScanner, android.drm.DrmManagerClient)
    {
        android.media.MediaScanner r0;
        android.drm.DrmManagerClient r1;

        r0 := @parameter0: android.media.MediaScanner;

        r1 := @parameter1: android.drm.DrmManagerClient;

        r0.<android.media.MediaScanner: android.drm.DrmManagerClient mDrmManagerClient> = r1;

        return r1;
    }

    static void access$2900(android.media.MediaScanner, java.lang.String, java.lang.String)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2;

        r0 := @parameter0: android.media.MediaScanner;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.media.MediaScanner: void cachePlaylistEntry(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    static boolean access$300(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        boolean $z0;

        r0 := @parameter0: android.media.MediaScanner;

        $z0 = r0.<android.media.MediaScanner: boolean mProcessPlaylists>;

        return $z0;
    }

    static java.util.ArrayList access$400(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists>;

        return $r1;
    }

    static int access$500(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        int $i0;

        r0 := @parameter0: android.media.MediaScanner;

        $i0 = r0.<android.media.MediaScanner: int mMtpObjectHandle>;

        return $i0;
    }

    static boolean access$600(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        boolean $z0;

        r0 := @parameter0: android.media.MediaScanner;

        $z0 = r0.<android.media.MediaScanner: boolean mExternalIsEmulated>;

        return $z0;
    }

    static java.lang.String access$700(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        java.lang.String $r1;

        r0 := @parameter0: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: java.lang.String mExternalStoragePath>;

        return $r1;
    }

    static void access$800(android.media.MediaScanner, java.lang.String, java.lang.String, android.media.MediaScannerClient)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2;
        android.media.MediaScannerClient r3;

        r0 := @parameter0: android.media.MediaScanner;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.media.MediaScannerClient;

        specialinvoke r0.<android.media.MediaScanner: void processFile(java.lang.String,java.lang.String,android.media.MediaScannerClient)>(r1, r2, r3);

        return;
    }

    static boolean access$900(android.media.MediaScanner)
    {
        android.media.MediaScanner r0;
        boolean $z0;

        r0 := @parameter0: android.media.MediaScanner;

        $z0 = r0.<android.media.MediaScanner: boolean mProcessGenres>;

        return $z0;
    }

    private void cachePlaylistEntry(java.lang.String, java.lang.String)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2;
        android.media.MediaScanner$PlaylistEntry r3, $r4;
        int i0, $i4, $i5;
        char c1, c2, c3, $c6;
        boolean z0, z1, $z3;
        java.util.ArrayList $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new android.media.MediaScanner$PlaylistEntry;

        specialinvoke $r4.<android.media.MediaScanner$PlaylistEntry: void <init>(android.media.MediaScanner$1)>(null);

        r3 = $r4;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i0 <= 0 goto label2;

        $i5 = i0 - 1;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);

        $z3 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c6);

        if $z3 == 0 goto label2;

        i0 = i0 + -1;

        goto label1;

     label2:
        if i0 >= 3 goto label3;

        return;

     label3:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i4 goto label4;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label4:
        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if c1 == 47 goto label5;

        z1 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c1);

        z0 = 0;

        if z1 == 0 goto label6;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        z0 = 0;

        if c2 != 58 goto label6;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(2);

        z0 = 0;

        if c3 != 92 goto label6;

     label5:
        z0 = 1;

     label6:
        if z0 != 0 goto label7;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        r3.<android.media.MediaScanner$PlaylistEntry: java.lang.String path> = r1;

        $r5 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        return;
    }

    private boolean inScanDirectory(java.lang.String, java.lang.String[])
    {
        android.media.MediaScanner r0;
        java.lang.String r1, $r3;
        java.lang.String[] r2;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label3;

        $r3 = r2[i0];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void initialize(java.lang.String)
    {
        android.media.MediaScanner r0;
        java.lang.String r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        android.content.IContentProvider $r4;
        android.net.Uri $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14;
        android.net.Uri$Builder $r11, $r12;
        boolean $z0;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.media.MediaScanner: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke $r3.<android.content.ContentResolver: android.content.IContentProvider acquireProvider(java.lang.String)>("media");

        r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider> = $r4;

        $r5 = staticinvoke <android.provider.MediaStore$Audio$Media: android.net.Uri getContentUri(java.lang.String)>(r1);

        r0.<android.media.MediaScanner: android.net.Uri mAudioUri> = $r5;

        $r6 = staticinvoke <android.provider.MediaStore$Video$Media: android.net.Uri getContentUri(java.lang.String)>(r1);

        r0.<android.media.MediaScanner: android.net.Uri mVideoUri> = $r6;

        $r7 = staticinvoke <android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>(r1);

        r0.<android.media.MediaScanner: android.net.Uri mImagesUri> = $r7;

        $r8 = staticinvoke <android.provider.MediaStore$Images$Thumbnails: android.net.Uri getContentUri(java.lang.String)>(r1);

        r0.<android.media.MediaScanner: android.net.Uri mThumbsUri> = $r8;

        $r9 = staticinvoke <android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String)>(r1);

        r0.<android.media.MediaScanner: android.net.Uri mFilesUri> = $r9;

        $r10 = r0.<android.media.MediaScanner: android.net.Uri mFilesUri>;

        $r11 = virtualinvoke $r10.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r12 = virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("nonotify", "1");

        $r13 = virtualinvoke $r12.<android.net.Uri$Builder: android.net.Uri build()>();

        r0.<android.media.MediaScanner: android.net.Uri mFilesUriNoNotify> = $r13;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("internal");

        if $z0 != 0 goto label1;

        r0.<android.media.MediaScanner: boolean mProcessPlaylists> = 1;

        r0.<android.media.MediaScanner: boolean mProcessGenres> = 1;

        $r14 = staticinvoke <android.provider.MediaStore$Audio$Playlists: android.net.Uri getContentUri(java.lang.String)>(r1);

        r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri> = $r14;

        r0.<android.media.MediaScanner: boolean mCaseInsensitivePaths> = 1;

     label1:
        return;
    }

    private boolean isDrmEnabled()
    {
        android.media.MediaScanner r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.media.MediaScanner;

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("drm.service.enabled");

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isNoMediaFile(java.lang.String)
    {
        java.lang.String r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.io.File $r1;

        r0 := @parameter0: java.lang.String;

        z0 = 1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0);

        $z1 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label2;

        z0 = 0;

     label1:
        return z0;

     label2:
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        if i0 < 0 goto label4;

        $i2 = i0 + 2;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label4;

        $i4 = i0 + 1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>($i4, "._", 0, 2);

        if $z2 != 0 goto label1;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        $i6 = -4 + $i5;

        $z3 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(z0, $i6, ".jpg", 0, 4);

        if $z3 == 0 goto label4;

        $i7 = i0 + 1;

        $z4 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(z0, $i7, "AlbumArt_{", 0, 10);

        if $z4 != 0 goto label1;

        $i8 = i0 + 1;

        $z5 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(z0, $i8, "AlbumArt.", 0, 9);

        if $z5 != 0 goto label1;

        $i10 = virtualinvoke r0.<java.lang.String: int length()>();

        $i9 = $i10 - i0;

        i1 = -1 + $i9;

        if i1 != 17 goto label3;

        $i12 = i0 + 1;

        $z7 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(z0, $i12, "AlbumArtSmall", 0, 13);

        if $z7 != 0 goto label1;

     label3:
        if i1 != 10 goto label4;

        $i11 = i0 + 1;

        $z6 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(z0, $i11, "Folder", 0, 6);

        if $z6 != 0 goto label1;

     label4:
        return 0;
    }

    public static boolean isNoMediaPath(java.lang.String)
    {
        java.lang.String r0, $r3, $r6;
        int i0, i1, $i2;
        boolean $z0, $z1;
        java.io.File $r1;
        java.lang.StringBuilder $r2, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("/.");

        if $i2 < 0 goto label2;

        return 1;

     label2:
        i0 = 1;

     label3:
        if i0 < 0 goto label5;

        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(47, i0);

        if i1 <= i0 goto label4;

        i1 = i1 + 1;

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".nomedia");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r6);

        $z1 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label4;

        return 1;

     label4:
        i0 = i1;

        goto label3;

     label5:
        $z0 = staticinvoke <android.media.MediaScanner: boolean isNoMediaFile(java.lang.String)>(r0);

        return $z0;
    }

    private boolean matchEntries(long, java.lang.String)
    {
        android.media.MediaScanner r0;
        long l0;
        java.lang.String r1, $r6, $r7;
        int i1, i2, i3, i4, $i5;
        boolean z0, $z1;
        android.media.MediaScanner$PlaylistEntry r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: android.media.MediaScanner;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        z0 = 1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        $r4 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.media.MediaScanner$PlaylistEntry) $r5;

        $i5 = r2.<android.media.MediaScanner$PlaylistEntry: int bestmatchlevel>;

        if $i5 != 2147483647 goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = r2.<android.media.MediaScanner$PlaylistEntry: java.lang.String path>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z1 == 0 goto label4;

        r2.<android.media.MediaScanner$PlaylistEntry: long bestmatchid> = l0;

        r2.<android.media.MediaScanner$PlaylistEntry: int bestmatchlevel> = 2147483647;

        z0 = 0;

        goto label2;

     label4:
        $r7 = r2.<android.media.MediaScanner$PlaylistEntry: java.lang.String path>;

        i3 = specialinvoke r0.<android.media.MediaScanner: int matchPaths(java.lang.String,java.lang.String)>(r1, $r7);

        i4 = r2.<android.media.MediaScanner$PlaylistEntry: int bestmatchlevel>;

        z0 = 0;

        if i3 <= i4 goto label2;

        r2.<android.media.MediaScanner$PlaylistEntry: long bestmatchid> = l0;

        r2.<android.media.MediaScanner$PlaylistEntry: int bestmatchlevel> = i3;

        z0 = 0;

        goto label2;

     label5:
        return z0;
    }

    private int matchPaths(java.lang.String, java.lang.String)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16;
        boolean $z0;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i2 = virtualinvoke r2.<java.lang.String: int length()>();

     label01:
        if i1 <= 0 goto label06;

        if i2 <= 0 goto label06;

        $i12 = i1 - 1;

        i3 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int,int)>(47, $i12);

        $i13 = i2 - 1;

        i4 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int,int)>(47, $i13);

        $i14 = i1 - 1;

        i5 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int,int)>(92, $i14);

        $i15 = i2 - 1;

        i6 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int,int)>(92, $i15);

        if i3 <= i5 goto label07;

        i7 = i3;

     label02:
        if i4 <= i6 goto label08;

        i8 = i4;

     label03:
        if i7 >= 0 goto label09;

        i9 = 0;

     label04:
        if i8 >= 0 goto label10;

        i10 = 0;

     label05:
        i11 = i1 - i9;

        $i16 = i2 - i10;

        if $i16 == i11 goto label11;

     label06:
        return i0;

     label07:
        i7 = i5;

        goto label02;

     label08:
        i8 = i6;

        goto label03;

     label09:
        i9 = i7 + 1;

        goto label04;

     label10:
        i10 = i8 + 1;

        goto label05;

     label11:
        $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i9, r2, i10, i11);

        if $z0 == 0 goto label06;

        i0 = i0 + 1;

        i1 = i9 - 1;

        i2 = i10 - 1;

        goto label01;
    }

    private final native void native_finalize();

    private static final native void native_init();

    private final native void native_setup();

    private void postscan(java.lang.String[]) throws android.os.RemoteException
    {
        android.media.MediaScanner r0;
        java.lang.String[] r1;
        boolean $z0, $z1;
        int $i0;
        android.net.Uri $r2, $r3;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String[];

        $z0 = r0.<android.media.MediaScanner: boolean mProcessPlaylists>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.media.MediaScanner: void processPlayLists()>();

     label1:
        $i0 = r0.<android.media.MediaScanner: int mOriginalCount>;

        if $i0 != 0 goto label2;

        $r2 = r0.<android.media.MediaScanner: android.net.Uri mImagesUri>;

        $r3 = staticinvoke <android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>("external");

        $z1 = virtualinvoke $r2.<android.net.Uri: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.media.MediaScanner: void pruneDeadThumbnailFiles()>();

     label2:
        r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists> = null;

        r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider> = null;

        return;
    }

    private void prescan(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2, r11, r14, $r24, $r27, $r33, $r35, $r40, $r44;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7;
        java.lang.String[] r3, $r16, $r22, $r34, $r43;
        android.net.Uri$Builder r4, $r28, $r29;
        android.media.MediaScanner$MediaBulkDeleter r5, $r19;
        android.database.Cursor r6, r7, r10;
        long l0, l1;
        java.lang.Throwable r8, $r48;
        android.net.Uri r9, $r20, $r21, $r26, $r30;
        int i2, i3, $i4, $i5, $i7;
        android.media.MediaFile$MediaFileType r13;
        java.util.ArrayList $r15, $r17, $r47;
        android.content.IContentProvider $r23, $r25, $r37, $r41;
        java.lang.StringBuilder $r31, $r32, $r36;
        java.util.Locale $r38;
        libcore.io.Os $r39;
        java.io.File $r45;
        libcore.io.ErrnoException $r46;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r15 = r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists>;

        if $r15 != null goto label13;

        $r47 = new java.util.ArrayList;

        specialinvoke $r47.<java.util.ArrayList: void <init>()>();

        r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists> = $r47;

     label01:
        if r1 == null goto label14;

        r2 = "_id>? AND _data=?";

        $r43 = newarray (java.lang.String)[2];

        $r43[0] = "";

        $r43[1] = r1;

        r3 = $r43;

     label02:
        $r20 = r0.<android.media.MediaScanner: android.net.Uri mFilesUri>;

        r4 = virtualinvoke $r20.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        virtualinvoke r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("deletedata", "false");

        $r19 = new android.media.MediaScanner$MediaBulkDeleter;

        $r23 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r24 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r21 = virtualinvoke r4.<android.net.Uri$Builder: android.net.Uri build()>();

        specialinvoke $r19.<android.media.MediaScanner$MediaBulkDeleter: void <init>(android.content.IContentProvider,java.lang.String,android.net.Uri)>($r23, $r24, $r21);

        r5 = $r19;

        r6 = null;

        if z0 == 0 goto label10;

        l0 = -9223372036854775808L;

     label03:
        $r30 = r0.<android.media.MediaScanner: android.net.Uri mFilesUri>;

        $r28 = virtualinvoke $r30.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r29 = virtualinvoke $r28.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("limit", "1000");

        r9 = virtualinvoke $r29.<android.net.Uri$Builder: android.net.Uri build()>();

        r0.<android.media.MediaScanner: boolean mWasEmptyPriorToScan> = 1;

     label04:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        r3[0] = $r35;

     label05:
        if r6 == null goto label08;

     label06:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label07:
        r6 = null;

     label08:
        $r37 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r33 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r34 = <android.media.MediaScanner: java.lang.String[] FILES_PRESCAN_PROJECTION>;

        r10 = interfaceinvoke $r37.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>($r33, r9, $r34, r2, r3, "_id", null);

     label09:
        r6 = r10;

        if r6 != null goto label15;

     label10:
        if r6 == null goto label11;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label11:
        virtualinvoke r5.<android.media.MediaScanner$MediaBulkDeleter: void flush()>();

        r0.<android.media.MediaScanner: int mOriginalCount> = 0;

        $r25 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r27 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r26 = r0.<android.media.MediaScanner: android.net.Uri mImagesUri>;

        $r22 = <android.media.MediaScanner: java.lang.String[] ID_PROJECTION>;

        r7 = interfaceinvoke $r25.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>($r27, $r26, $r22, null, null, null, null);

        if r7 == null goto label12;

        $i4 = interfaceinvoke r7.<android.database.Cursor: int getCount()>();

        r0.<android.media.MediaScanner: int mOriginalCount> = $i4;

        interfaceinvoke r7.<android.database.Cursor: void close()>();

     label12:
        return;

     label13:
        $r17 = r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists>;

        virtualinvoke $r17.<java.util.ArrayList: void clear()>();

        goto label01;

     label14:
        r2 = "_id>?";

        $r16 = newarray (java.lang.String)[1];

        $r16[0] = "";

        r3 = $r16;

        goto label02;

     label15:
        $i5 = interfaceinvoke r6.<android.database.Cursor: int getCount()>();

        if $i5 == 0 goto label10;

        r0.<android.media.MediaScanner: boolean mWasEmptyPriorToScan> = 0;

     label16:
        $z4 = interfaceinvoke r6.<android.database.Cursor: boolean moveToNext()>();

        if $z4 == 0 goto label04;

        l1 = interfaceinvoke r6.<android.database.Cursor: long getLong(int)>(0);

        r11 = interfaceinvoke r6.<android.database.Cursor: java.lang.String getString(int)>(1);

        i2 = interfaceinvoke r6.<android.database.Cursor: int getInt(int)>(2);

        interfaceinvoke r6.<android.database.Cursor: long getLong(int)>(3);

     label17:
        l0 = l1;

        if r11 == null goto label16;

     label18:
        z1 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>("/");

     label19:
        if z1 == 0 goto label16;

     label20:
        $r39 = <libcore.io.Libcore: libcore.io.Os os>;

        $i7 = <libcore.io.OsConstants: int F_OK>;

        z3 = interfaceinvoke $r39.<libcore.io.Os: boolean access(java.lang.String,int)>(r11, $i7);

     label21:
        z2 = z3;

     label22:
        if z2 != 0 goto label16;

     label23:
        $z5 = staticinvoke <android.mtp.MtpConstants: boolean isAbstractObject(int)>(i2);

        if $z5 != 0 goto label16;

        r13 = staticinvoke <android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>(r11);

     label24:
        if r13 != null goto label29;

        i3 = 0;

     label25:
        $z6 = staticinvoke <android.media.MediaFile: boolean isPlayListFileType(int)>(i3);

        if $z6 != 0 goto label16;

        virtualinvoke r5.<android.media.MediaScanner$MediaBulkDeleter: void delete(long)>(l1);

        $r38 = <java.util.Locale: java.util.Locale US>;

        $r44 = virtualinvoke r11.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r38);

        $z7 = virtualinvoke $r44.<java.lang.String: boolean endsWith(java.lang.String)>("/.nomedia");

        if $z7 == 0 goto label16;

        virtualinvoke r5.<android.media.MediaScanner$MediaBulkDeleter: void flush()>();

        $r45 = new java.io.File;

        specialinvoke $r45.<java.io.File: void <init>(java.lang.String)>(r11);

        r14 = virtualinvoke $r45.<java.io.File: java.lang.String getParent()>();

        $r41 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r40 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        interfaceinvoke $r41.<android.content.IContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>($r40, "unhide", r14, null);

     label26:
        goto label16;

     label27:
        $r48 := @caughtexception;

        r8 = $r48;

        if r6 == null goto label28;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label28:
        virtualinvoke r5.<android.media.MediaScanner$MediaBulkDeleter: void flush()>();

        throw r8;

     label29:
        i3 = r13.<android.media.MediaFile$MediaFileType: int fileType>;

     label30:
        goto label25;

     label31:
        $r46 := @caughtexception;

        z2 = 0;

        goto label22;

        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label07 with label27;
        catch java.lang.Throwable from label08 to label09 with label27;
        catch java.lang.Throwable from label15 to label16 with label27;
        catch java.lang.Throwable from label16 to label17 with label27;
        catch java.lang.Throwable from label18 to label19 with label27;
        catch libcore.io.ErrnoException from label20 to label21 with label31;
        catch java.lang.Throwable from label20 to label21 with label27;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label29 to label30 with label27;
    }

    private void processCachedPlaylist(android.database.Cursor, android.content.ContentValues, android.net.Uri)
    {
        android.media.MediaScanner r0;
        android.database.Cursor r1;
        android.content.ContentValues r2;
        android.net.Uri r3;
        int i0, i1, i2, $i3;
        android.media.MediaScanner$PlaylistEntry r4;
        android.os.RemoteException r5, $r16;
        boolean $z1, $z2;
        java.util.ArrayList $r6, $r7, $r8;
        java.lang.Object $r9;
        java.lang.Integer $r10;
        long $l4, $l5;
        java.lang.String $r11, $r15;
        java.lang.Long $r12;
        android.content.IContentProvider $r14;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: android.net.Uri;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label1:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label2;

        $l5 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(0);

        $r15 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        $z2 = specialinvoke r0.<android.media.MediaScanner: boolean matchEntries(long,java.lang.String)>($l5, $r15);

        if $z2 == 0 goto label1;

     label2:
        $r6 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = 0;

        i2 = 0;

     label3:
        if i2 >= i0 goto label8;

        $r8 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (android.media.MediaScanner$PlaylistEntry) $r9;

        $i3 = r4.<android.media.MediaScanner$PlaylistEntry: int bestmatchlevel>;

        if $i3 <= 0 goto label6;

     label4:
        virtualinvoke r2.<android.content.ContentValues: void clear()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("play_order", $r10);

        $l4 = r4.<android.media.MediaScanner$PlaylistEntry: long bestmatchid>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("audio_id", $r12);

        $r14 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r11 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        interfaceinvoke $r14.<android.content.IContentProvider: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>($r11, r3, r2);

     label5:
        i1 = i1 + 1;

     label6:
        i2 = i2 + 1;

        goto label3;

     label7:
        $r16 := @caughtexception;

        r5 = $r16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "RemoteException in MediaScanner.processCachedPlaylist()", r5);

        return;

     label8:
        $r7 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        return;

        catch android.os.RemoteException from label4 to label5 with label7;
    }

    private native void processDirectory(java.lang.String, android.media.MediaScannerClient);

    private native void processFile(java.lang.String, java.lang.String, android.media.MediaScannerClient);

    private void processM3uPlayList(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues, android.database.Cursor)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2, r12;
        android.net.Uri r3;
        android.content.ContentValues r4;
        android.database.Cursor r5;
        java.io.BufferedReader r6, r13, $r16;
        java.io.File r7, $r14;
        java.lang.Throwable r8, $r22, $r26;
        java.io.IOException r9, r10, r11, r15, $r20, $r21, $r23, $r24, $r25;
        boolean z0;
        java.io.FileInputStream $r17;
        java.io.InputStreamReader $r18;
        java.util.ArrayList $r19;
        int $i0;
        char $c1;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.content.ContentValues;

        r5 := @parameter4: android.database.Cursor;

        r6 = null;

     label01:
        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>(r1);

        r7 = $r14;

        z0 = virtualinvoke r7.<java.io.File: boolean exists()>();

     label02:
        r6 = null;

        if z0 == 0 goto label11;

     label03:
        $r16 = new java.io.BufferedReader;

        $r18 = new java.io.InputStreamReader;

        $r17 = new java.io.FileInputStream;

        specialinvoke $r17.<java.io.FileInputStream: void <init>(java.io.File)>(r7);

        specialinvoke $r18.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r17);

        specialinvoke $r16.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r18, 8192);

        r13 = $r16;

     label04:
        r12 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>();

        $r19 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        virtualinvoke $r19.<java.util.ArrayList: void clear()>();

     label05:
        if r12 == null goto label09;

     label06:
        $i0 = virtualinvoke r12.<java.lang.String: int length()>();

        if $i0 <= 0 goto label07;

        $c1 = virtualinvoke r12.<java.lang.String: char charAt(int)>(0);

        if $c1 == 35 goto label07;

        specialinvoke r0.<android.media.MediaScanner: void cachePlaylistEntry(java.lang.String,java.lang.String)>(r12, r2);

     label07:
        r12 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        goto label05;

     label09:
        specialinvoke r0.<android.media.MediaScanner: void processCachedPlaylist(android.database.Cursor,android.content.ContentValues,android.net.Uri)>(r5, r4, r3);

     label10:
        r6 = r13;

     label11:
        if r6 == null goto label13;

     label12:
        virtualinvoke r6.<java.io.BufferedReader: void close()>();

     label13:
        return;

     label14:
        $r20 := @caughtexception;

        r15 = $r20;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processM3uPlayList()", r15);

        return;

     label15:
        $r21 := @caughtexception;

        r10 = $r21;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processM3uPlayList()", r10);

     label17:
        if r6 == null goto label13;

     label18:
        virtualinvoke r6.<java.io.BufferedReader: void close()>();

     label19:
        return;

     label20:
        $r24 := @caughtexception;

        r11 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processM3uPlayList()", r11);

        return;

     label21:
        $r22 := @caughtexception;

        r8 = $r22;

     label22:
        if r6 == null goto label24;

     label23:
        virtualinvoke r6.<java.io.BufferedReader: void close()>();

     label24:
        throw r8;

     label25:
        $r23 := @caughtexception;

        r9 = $r23;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processM3uPlayList()", r9);

        goto label24;

     label26:
        $r26 := @caughtexception;

        r8 = $r26;

        r6 = r13;

        goto label22;

     label27:
        $r25 := @caughtexception;

        r10 = $r25;

        r6 = r13;

        goto label16;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.io.IOException from label04 to label05 with label27;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.io.IOException from label06 to label07 with label27;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.io.IOException from label07 to label08 with label27;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.io.IOException from label09 to label10 with label27;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label23 to label24 with label25;
    }

    private void processPlayList(android.media.MediaScanner$FileEntry, android.database.Cursor) throws android.os.RemoteException
    {
        android.media.MediaScanner r0;
        android.media.MediaScanner$FileEntry r1;
        android.database.Cursor r2;
        java.lang.String r3, r5, r8, $r14, $r17, $r19, $r22;
        android.content.ContentValues r4, $r11;
        int i0, i2, i3, $i8, $i10, $i11;
        long l1, $l4;
        android.net.Uri r6, r7, r10, $r13, $r18;
        android.media.MediaFile$MediaFileType r9;
        java.lang.Long $r12;
        byte $b5;
        android.content.IContentProvider $r15, $r16, $r20;
        java.lang.IllegalArgumentException $r21;
        java.lang.StringBuilder $r23, $r24, $r25;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: android.media.MediaScanner$FileEntry;

        r2 := @parameter1: android.database.Cursor;

        r3 = r1.<android.media.MediaScanner$FileEntry: java.lang.String mPath>;

        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>()>();

        r4 = $r11;

        i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(47);

        if i0 >= 0 goto label01;

        $r21 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad path ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label01:
        l1 = r1.<android.media.MediaScanner$FileEntry: long mRowId>;

        r5 = virtualinvoke r4.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("name");

        if r5 != null goto label02;

        r5 = virtualinvoke r4.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("title");

        if r5 != null goto label02;

        i3 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(46);

        if i3 >= 0 goto label06;

        $i11 = i0 + 1;

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i11);

     label02:
        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", r5);

        $l4 = r1.<android.media.MediaScanner$FileEntry: long mLastModified>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date_modified", $r12);

        $b5 = l1 cmp 0L;

        if $b5 != 0 goto label07;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_data", r3);

        $r20 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r19 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r18 = r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri>;

        r10 = interfaceinvoke $r20.<android.content.IContentProvider: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>($r19, $r18, r4);

        staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r10);

        r7 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r10, "members");

     label03:
        $i8 = i0 + 1;

        r8 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

        r9 = staticinvoke <android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>(r3);

        if r9 != null goto label08;

        i2 = 0;

     label04:
        if i2 != 41 goto label09;

        specialinvoke r0.<android.media.MediaScanner: void processM3uPlayList(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.database.Cursor)>(r3, r8, r7, r4, r2);

     label05:
        return;

     label06:
        $i10 = i0 + 1;

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i10, i3);

        goto label02;

     label07:
        $r13 = r0.<android.media.MediaScanner: android.net.Uri mPlaylistsUri>;

        r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r13, l1);

        $r15 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r14 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        interfaceinvoke $r15.<android.content.IContentProvider: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r14, r6, r4, null, null);

        r7 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r6, "members");

        $r16 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r17 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        interfaceinvoke $r16.<android.content.IContentProvider: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>($r17, r7, null, null);

        goto label03;

     label08:
        i2 = r9.<android.media.MediaFile$MediaFileType: int fileType>;

        goto label04;

     label09:
        if i2 != 42 goto label10;

        specialinvoke r0.<android.media.MediaScanner: void processPlsPlayList(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.database.Cursor)>(r3, r8, r7, r4, r2);

        return;

     label10:
        if i2 != 43 goto label05;

        specialinvoke r0.<android.media.MediaScanner: void processWplPlayList(java.lang.String,java.lang.String,android.net.Uri,android.content.ContentValues,android.database.Cursor)>(r3, r8, r7, r4, r2);

        return;
    }

    private void processPlayLists() throws android.os.RemoteException
    {
        android.media.MediaScanner r0;
        java.util.Iterator r1;
        android.database.Cursor r2;
        java.lang.Throwable r3, $r12;
        android.media.MediaScanner$FileEntry r5;
        java.util.ArrayList $r6;
        java.lang.String[] $r7;
        android.net.Uri $r8;
        java.lang.String $r9;
        android.content.IContentProvider $r10;
        boolean $z0, $z1;
        java.lang.Object $r11;
        android.os.RemoteException $r13;

        r0 := @this: android.media.MediaScanner;

        $r6 = r0.<android.media.MediaScanner: java.util.ArrayList mPlayLists>;

        r1 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

        r2 = null;

     label1:
        $r10 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r9 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r8 = r0.<android.media.MediaScanner: android.net.Uri mFilesUri>;

        $r7 = <android.media.MediaScanner: java.lang.String[] FILES_PRESCAN_PROJECTION>;

        r2 = interfaceinvoke $r10.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>($r9, $r8, $r7, "media_type=2", null, null, null);

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.media.MediaScanner$FileEntry) $r11;

        $z1 = r5.<android.media.MediaScanner$FileEntry: boolean mLastModifiedChanged>;

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.media.MediaScanner: void processPlayList(android.media.MediaScanner$FileEntry,android.database.Cursor)>(r5, r2);

     label3:
        goto label2;

     label4:
        $r13 := @caughtexception;

        if r2 == null goto label5;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label5:
        return;

     label6:
        if r2 == null goto label5;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return;

     label7:
        $r12 := @caughtexception;

        r3 = $r12;

        if r2 == null goto label8;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label8:
        throw r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
    }

    private void processPlsPlayList(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues, android.database.Cursor)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2, r12, $r20;
        android.net.Uri r3;
        android.content.ContentValues r4;
        android.database.Cursor r5;
        java.io.BufferedReader r6, r13, $r17;
        java.io.File r7, $r15;
        java.lang.Throwable r8, $r23, $r24;
        java.io.IOException r9, r10, r11, r14, $r21, $r22, $r25, $r26, $r27;
        boolean z0, $z1;
        int i0, $i1;
        java.io.InputStreamReader $r16;
        java.io.FileInputStream $r18;
        java.util.ArrayList $r19;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.content.ContentValues;

        r5 := @parameter4: android.database.Cursor;

        r6 = null;

     label01:
        $r15 = new java.io.File;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r1);

        r7 = $r15;

        z0 = virtualinvoke r7.<java.io.File: boolean exists()>();

     label02:
        r6 = null;

        if z0 == 0 goto label13;

     label03:
        $r17 = new java.io.BufferedReader;

        $r16 = new java.io.InputStreamReader;

        $r18 = new java.io.FileInputStream;

        specialinvoke $r18.<java.io.FileInputStream: void <init>(java.io.File)>(r7);

        specialinvoke $r16.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r18);

        specialinvoke $r17.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r16, 8192);

        r13 = $r17;

     label04:
        r12 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>();

        $r19 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        virtualinvoke $r19.<java.util.ArrayList: void clear()>();

     label05:
        if r12 == null goto label11;

     label06:
        $z1 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("File");

        if $z1 == 0 goto label09;

        i0 = virtualinvoke r12.<java.lang.String: int indexOf(int)>(61);

     label07:
        if i0 <= 0 goto label09;

     label08:
        $i1 = i0 + 1;

        $r20 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i1);

        specialinvoke r0.<android.media.MediaScanner: void cachePlaylistEntry(java.lang.String,java.lang.String)>($r20, r2);

     label09:
        r12 = virtualinvoke r13.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        goto label05;

     label11:
        specialinvoke r0.<android.media.MediaScanner: void processCachedPlaylist(android.database.Cursor,android.content.ContentValues,android.net.Uri)>(r5, r4, r3);

     label12:
        r6 = r13;

     label13:
        if r6 == null goto label15;

     label14:
        virtualinvoke r6.<java.io.BufferedReader: void close()>();

     label15:
        return;

     label16:
        $r27 := @caughtexception;

        r14 = $r27;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processPlsPlayList()", r14);

        return;

     label17:
        $r26 := @caughtexception;

        r10 = $r26;

     label18:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processPlsPlayList()", r10);

     label19:
        if r6 == null goto label15;

     label20:
        virtualinvoke r6.<java.io.BufferedReader: void close()>();

     label21:
        return;

     label22:
        $r21 := @caughtexception;

        r11 = $r21;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processPlsPlayList()", r11);

        return;

     label23:
        $r24 := @caughtexception;

        r8 = $r24;

     label24:
        if r6 == null goto label26;

     label25:
        virtualinvoke r6.<java.io.BufferedReader: void close()>();

     label26:
        throw r8;

     label27:
        $r25 := @caughtexception;

        r9 = $r25;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processPlsPlayList()", r9);

        goto label26;

     label28:
        $r23 := @caughtexception;

        r8 = $r23;

        r6 = r13;

        goto label24;

     label29:
        $r22 := @caughtexception;

        r10 = $r22;

        r6 = r13;

        goto label18;

        catch java.io.IOException from label01 to label02 with label17;
        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.io.IOException from label04 to label05 with label29;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.io.IOException from label06 to label07 with label29;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.io.IOException from label08 to label09 with label29;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.io.IOException from label09 to label10 with label29;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.io.IOException from label11 to label12 with label29;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.IOException from label25 to label26 with label27;
    }

    private void processWplPlayList(java.lang.String, java.lang.String, android.net.Uri, android.content.ContentValues, android.database.Cursor)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2;
        android.net.Uri r3;
        android.content.ContentValues r4;
        android.database.Cursor r5;
        java.io.FileInputStream r6, r15, $r18;
        java.io.File r7, $r16;
        java.lang.Throwable r8, $r21, $r28;
        java.io.IOException r9, r10, r11, r13, r14, $r23, $r25, $r26, $r27, $r30, $r31;
        org.xml.sax.SAXException r12, $r24, $r29;
        boolean z0;
        java.util.ArrayList $r17;
        android.media.MediaScanner$WplHandler $r19;
        android.util.Xml$Encoding $r20;
        org.xml.sax.ContentHandler $r22;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.content.ContentValues;

        r5 := @parameter4: android.database.Cursor;

        r6 = null;

     label01:
        $r16 = new java.io.File;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>(r1);

        r7 = $r16;

        z0 = virtualinvoke r7.<java.io.File: boolean exists()>();

     label02:
        r6 = null;

        if z0 == 0 goto label06;

     label03:
        $r18 = new java.io.FileInputStream;

        specialinvoke $r18.<java.io.FileInputStream: void <init>(java.io.File)>(r7);

        r15 = $r18;

     label04:
        $r17 = r0.<android.media.MediaScanner: java.util.ArrayList mPlaylistEntries>;

        virtualinvoke $r17.<java.util.ArrayList: void clear()>();

        $r20 = staticinvoke <android.util.Xml: android.util.Xml$Encoding findEncodingByName(java.lang.String)>("UTF-8");

        $r19 = new android.media.MediaScanner$WplHandler;

        specialinvoke $r19.<android.media.MediaScanner$WplHandler: void <init>(android.media.MediaScanner,java.lang.String,android.net.Uri,android.database.Cursor)>(r0, r2, r3, r5);

        $r22 = virtualinvoke $r19.<android.media.MediaScanner$WplHandler: org.xml.sax.ContentHandler getContentHandler()>();

        staticinvoke <android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)>(r15, $r20, $r22);

        specialinvoke r0.<android.media.MediaScanner: void processCachedPlaylist(android.database.Cursor,android.content.ContentValues,android.net.Uri)>(r5, r4, r3);

     label05:
        r6 = r15;

     label06:
        if r6 == null goto label08;

     label07:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label08:
        return;

     label09:
        $r30 := @caughtexception;

        r14 = $r30;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processWplPlayList()", r14);

        return;

     label10:
        $r29 := @caughtexception;

        r12 = $r29;

     label11:
        virtualinvoke r12.<org.xml.sax.SAXException: void printStackTrace()>();

     label12:
        if r6 == null goto label08;

     label13:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label14:
        return;

     label15:
        $r23 := @caughtexception;

        r13 = $r23;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processWplPlayList()", r13);

        return;

     label16:
        $r25 := @caughtexception;

        r10 = $r25;

     label17:
        virtualinvoke r10.<java.io.IOException: void printStackTrace()>();

     label18:
        if r6 == null goto label08;

     label19:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label20:
        return;

     label21:
        $r26 := @caughtexception;

        r11 = $r26;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processWplPlayList()", r11);

        return;

     label22:
        $r28 := @caughtexception;

        r8 = $r28;

     label23:
        if r6 == null goto label25;

     label24:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

     label25:
        throw r8;

     label26:
        $r31 := @caughtexception;

        r9 = $r31;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "IOException in MediaScanner.processWplPlayList()", r9);

        goto label25;

     label27:
        $r21 := @caughtexception;

        r8 = $r21;

        r6 = r15;

        goto label23;

     label28:
        $r27 := @caughtexception;

        r10 = $r27;

        r6 = r15;

        goto label17;

     label29:
        $r24 := @caughtexception;

        r12 = $r24;

        r6 = r15;

        goto label11;

        catch org.xml.sax.SAXException from label01 to label02 with label10;
        catch java.io.IOException from label01 to label02 with label16;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch org.xml.sax.SAXException from label03 to label04 with label10;
        catch java.io.IOException from label03 to label04 with label16;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch org.xml.sax.SAXException from label04 to label05 with label29;
        catch java.io.IOException from label04 to label05 with label28;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label24 to label25 with label26;
    }

    private void pruneDeadThumbnailFiles()
    {
        android.media.MediaScanner r0;
        java.util.HashSet r1, $r8;
        java.lang.String[] r2, $r11;
        int i0, $i1;
        android.database.Cursor r4;
        java.util.Iterator r5;
        java.lang.String r6, $r13, $r16, $r22, $r23, $r28, $r30;
        java.io.File $r9, $r24;
        android.net.Uri $r10;
        android.content.IContentProvider $r12;
        java.lang.StringBuilder $r14, $r15, $r17, $r18, $r19, $r21, $r25, $r26, $r27, $r29;
        boolean $z0, $z1, $z4;
        java.lang.Object $r20;
        java.lang.SecurityException $r31;
        android.os.RemoteException $r32;

        r0 := @this: android.media.MediaScanner;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r1 = $r8;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>("/sdcard/DCIM/.thumbnails");

        r2 = virtualinvoke $r9.<java.io.File: java.lang.String[] list()>();

        if r2 != null goto label01;

        r2 = newarray (java.lang.String)[0];

     label01:
        i0 = 0;

     label02:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label03;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sdcard/DCIM/.thumbnails");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r30 = r2[i0];

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>($r28);

        i0 = i0 + 1;

        goto label02;

     label03:
        $r12 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r13 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r10 = r0.<android.media.MediaScanner: android.net.Uri mThumbsUri>;

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = "_data";

        r4 = interfaceinvoke $r12.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>($r13, $r10, $r11, null, null, null, null);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pruneDeadThumbnailFiles... ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaScanner", $r16);

     label04:
        if r4 == null goto label07;

     label05:
        $z1 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label07;

     label06:
        $r23 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke r1.<java.util.HashSet: boolean remove(java.lang.Object)>($r23);

        $z4 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z4 != 0 goto label06;

     label07:
        r5 = virtualinvoke r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r20 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r20;

     label09:
        $r24 = new java.io.File;

        specialinvoke $r24.<java.io.File: void <init>(java.lang.String)>(r6);

        virtualinvoke $r24.<java.io.File: boolean delete()>();

     label10:
        goto label08;

     label11:
        $r31 := @caughtexception;

        goto label08;

     label12:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/pruneDeadThumbnailFiles... ");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MediaScanner", $r22);

     label13:
        if r4 == null goto label15;

     label14:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label15:
        return;

     label16:
        $r32 := @caughtexception;

        return;

        catch android.os.RemoteException from label03 to label04 with label16;
        catch android.os.RemoteException from label05 to label06 with label16;
        catch android.os.RemoteException from label06 to label07 with label16;
        catch android.os.RemoteException from label07 to label08 with label16;
        catch android.os.RemoteException from label08 to label09 with label16;
        catch java.lang.SecurityException from label09 to label10 with label11;
        catch android.os.RemoteException from label09 to label10 with label16;
        catch android.os.RemoteException from label12 to label13 with label16;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    private void setDefaultRingtoneFileNames()
    {
        android.media.MediaScanner r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: android.media.MediaScanner;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.config.ringtone");

        r0.<android.media.MediaScanner: java.lang.String mDefaultRingtoneFilename> = $r1;

        $r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.config.notification_sound");

        r0.<android.media.MediaScanner: java.lang.String mDefaultNotificationFilename> = $r2;

        $r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.config.alarm_alert");

        r0.<android.media.MediaScanner: java.lang.String mDefaultAlarmAlertFilename> = $r3;

        return;
    }

    public native byte[] extractAlbumArt(java.io.FileDescriptor);

    protected void finalize()
    {
        android.media.MediaScanner r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        android.content.IContentProvider $r3;

        r0 := @this: android.media.MediaScanner;

        $r1 = r0.<android.media.MediaScanner: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        virtualinvoke $r2.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r3);

        specialinvoke r0.<android.media.MediaScanner: void native_finalize()>();

        return;
    }

    android.media.MediaScanner$FileEntry makeEntryFor(java.lang.String)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, $r10;
        android.database.Cursor r2;
        java.lang.String[] r3, $r7, $r8;
        java.lang.Throwable r4, $r14;
        long l0, $l2;
        int i1;
        android.media.MediaScanner$FileEntry r6, $r12;
        android.net.Uri $r9;
        android.content.IContentProvider $r11;
        boolean $z0;
        android.os.RemoteException $r13;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 = null;

     label1:
        $r7 = newarray (java.lang.String)[1];

        $r7[0] = r1;

        r3 = $r7;

        $r11 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r10 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r9 = r0.<android.media.MediaScanner: android.net.Uri mFilesUriNoNotify>;

        $r8 = <android.media.MediaScanner: java.lang.String[] FILES_PRESCAN_PROJECTION>;

        r2 = interfaceinvoke $r11.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>($r10, $r9, $r8, "_data=?", r3, null, null);

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label4;

        l0 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        i1 = interfaceinvoke r2.<android.database.Cursor: int getInt(int)>(2);

        $r12 = new android.media.MediaScanner$FileEntry;

        $l2 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(3);

        specialinvoke $r12.<android.media.MediaScanner$FileEntry: void <init>(long,java.lang.String,long,int)>(l0, r1, $l2, i1);

        r6 = $r12;

     label2:
        if r2 == null goto label3;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label3:
        return r6;

     label4:
        if r2 == null goto label5;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label5:
        return null;

     label6:
        $r13 := @caughtexception;

        if r2 == null goto label5;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label5;

     label7:
        $r14 := @caughtexception;

        r4 = $r14;

        if r2 == null goto label8;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label8:
        throw r4;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label7;
    }

    public void release()
    {
        android.media.MediaScanner r0;

        r0 := @this: android.media.MediaScanner;

        specialinvoke r0.<android.media.MediaScanner: void native_finalize()>();

        return;
    }

    public void scanDirectories(java.lang.String[], java.lang.String)
    {
        android.media.MediaScanner r0;
        java.lang.String[] r1;
        java.lang.String r2, $r6, $r12;
        android.os.RemoteException r3, $r11;
        java.lang.UnsupportedOperationException r4, $r14;
        android.database.SQLException r5, $r13;
        int i0, $i3;
        android.media.MediaInserter $r7, $r9;
        android.content.IContentProvider $r8;
        android.media.MediaScanner$MyMediaScannerClient $r10;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

     label1:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r0.<android.media.MediaScanner: void initialize(java.lang.String)>(r2);

        specialinvoke r0.<android.media.MediaScanner: void prescan(java.lang.String,boolean)>(null, 1);

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = new android.media.MediaInserter;

        $r8 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r6 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        specialinvoke $r7.<android.media.MediaInserter: void <init>(android.content.IContentProvider,java.lang.String,int)>($r8, $r6, 500);

        r0.<android.media.MediaScanner: android.media.MediaInserter mMediaInserter> = $r7;

     label2:
        i0 = 0;

     label3:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label5;

        $r12 = r1[i0];

        $r10 = r0.<android.media.MediaScanner: android.media.MediaScanner$MyMediaScannerClient mClient>;

        specialinvoke r0.<android.media.MediaScanner: void processDirectory(java.lang.String,android.media.MediaScannerClient)>($r12, $r10);

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        $r9 = r0.<android.media.MediaScanner: android.media.MediaInserter mMediaInserter>;

        virtualinvoke $r9.<android.media.MediaInserter: void flushAll()>();

        r0.<android.media.MediaScanner: android.media.MediaInserter mMediaInserter> = null;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r0.<android.media.MediaScanner: void postscan(java.lang.String[])>(r1);

        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label6:
        return;

     label7:
        $r13 := @caughtexception;

        r5 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "SQLException in MediaScanner.scan()", r5);

        return;

     label8:
        $r14 := @caughtexception;

        r4 = $r14;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "UnsupportedOperationException in MediaScanner.scan()", r4);

        return;

     label9:
        $r11 := @caughtexception;

        r3 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "RemoteException in MediaScanner.scan()", r3);

        return;

        catch android.database.SQLException from label1 to label2 with label7;
        catch java.lang.UnsupportedOperationException from label1 to label2 with label8;
        catch android.os.RemoteException from label1 to label2 with label9;
        catch android.database.SQLException from label3 to label4 with label7;
        catch java.lang.UnsupportedOperationException from label3 to label4 with label8;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch android.database.SQLException from label5 to label6 with label7;
        catch java.lang.UnsupportedOperationException from label5 to label6 with label8;
        catch android.os.RemoteException from label5 to label6 with label9;
    }

    public void scanMtpFile(java.lang.String, java.lang.String, int, int)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2, r9, $r19, $r22, $r25;
        int i0, i1, i2;
        android.media.MediaFile$MediaFileType r3;
        java.io.File r4, $r14;
        long l3, l4, $l5, $l6;
        android.database.Cursor r5;
        java.lang.Throwable r6, $r28;
        android.os.RemoteException r7, r12, $r27, $r29;
        android.media.MediaScanner$MyMediaScannerClient r8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.content.ContentValues r10, $r21;
        android.media.MediaScanner$FileEntry r11;
        java.lang.String[] r13, $r15;
        android.content.IContentProvider $r17, $r26;
        android.net.Uri $r18, $r24;
        java.lang.Long $r20, $r23;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.media.MediaScanner: void initialize(java.lang.String)>(r2);

        r3 = staticinvoke <android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>(r1);

        if r3 != null goto label04;

        i2 = 0;

     label01:
        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>(r1);

        r4 = $r14;

        $l5 = virtualinvoke r4.<java.io.File: long lastModified()>();

        l3 = $l5 / 1000L;

        $z2 = staticinvoke <android.media.MediaFile: boolean isAudioFileType(int)>(i2);

        if $z2 != 0 goto label06;

        $z6 = staticinvoke <android.media.MediaFile: boolean isVideoFileType(int)>(i2);

        if $z6 != 0 goto label06;

        $z7 = staticinvoke <android.media.MediaFile: boolean isImageFileType(int)>(i2);

        if $z7 != 0 goto label06;

        $z4 = staticinvoke <android.media.MediaFile: boolean isPlayListFileType(int)>(i2);

        if $z4 != 0 goto label06;

        $z5 = staticinvoke <android.media.MediaFile: boolean isDrmFileType(int)>(i2);

        if $z5 != 0 goto label06;

        $r21 = new android.content.ContentValues;

        specialinvoke $r21.<android.content.ContentValues: void <init>()>();

        r10 = $r21;

        $l6 = virtualinvoke r4.<java.io.File: long length()>();

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke r10.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_size", $r20);

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke r10.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date_modified", $r23);

     label02:
        r13 = newarray (java.lang.String)[1];

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        r13[0] = $r22;

        $r26 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r25 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r24 = staticinvoke <android.provider.MediaStore$Files: android.net.Uri getMtpObjectsUri(java.lang.String)>(r2);

        interfaceinvoke $r26.<android.content.IContentProvider: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r25, $r24, r10, "_id=?", r13);

     label03:
        return;

     label04:
        i2 = r3.<android.media.MediaFile$MediaFileType: int fileType>;

        goto label01;

     label05:
        $r29 := @caughtexception;

        r12 = $r29;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "RemoteException in scanMtpFile", r12);

        return;

     label06:
        r0.<android.media.MediaScanner: int mMtpObjectHandle> = i0;

        r5 = null;

     label07:
        $z1 = staticinvoke <android.media.MediaFile: boolean isPlayListFileType(int)>(i2);

        if $z1 == 0 goto label11;

        specialinvoke r0.<android.media.MediaScanner: void prescan(java.lang.String,boolean)>(null, 1);

        r11 = virtualinvoke r0.<android.media.MediaScanner: android.media.MediaScanner$FileEntry makeEntryFor(java.lang.String)>(r1);

     label08:
        r5 = null;

        if r11 == null goto label10;

     label09:
        $r17 = r0.<android.media.MediaScanner: android.content.IContentProvider mMediaProvider>;

        $r19 = r0.<android.media.MediaScanner: java.lang.String mPackageName>;

        $r18 = r0.<android.media.MediaScanner: android.net.Uri mFilesUri>;

        $r15 = <android.media.MediaScanner: java.lang.String[] FILES_PRESCAN_PROJECTION>;

        r5 = interfaceinvoke $r17.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>($r19, $r18, $r15, null, null, null, null);

        specialinvoke r0.<android.media.MediaScanner: void processPlayList(android.media.MediaScanner$FileEntry,android.database.Cursor)>(r11, r5);

     label10:
        r0.<android.media.MediaScanner: int mMtpObjectHandle> = 0;

        if r5 == null goto label03;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        return;

     label11:
        specialinvoke r0.<android.media.MediaScanner: void prescan(java.lang.String,boolean)>(r1, 0);

        r8 = r0.<android.media.MediaScanner: android.media.MediaScanner$MyMediaScannerClient mClient>;

        r9 = r3.<android.media.MediaFile$MediaFileType: java.lang.String mimeType>;

        l4 = virtualinvoke r4.<java.io.File: long length()>();

     label12:
        if i1 != 12289 goto label18;

        z0 = 1;

     label13:
        $z3 = staticinvoke <android.media.MediaScanner: boolean isNoMediaPath(java.lang.String)>(r1);

        virtualinvoke r8.<android.media.MediaScanner$MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>(r1, r9, l3, l4, z0, 1, $z3);

     label14:
        r5 = null;

        goto label10;

     label15:
        $r27 := @caughtexception;

        r7 = $r27;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "RemoteException in MediaScanner.scanFile()", r7);

     label17:
        r0.<android.media.MediaScanner: int mMtpObjectHandle> = 0;

        if r5 == null goto label03;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        return;

     label18:
        z0 = 0;

        goto label13;

     label19:
        $r28 := @caughtexception;

        r6 = $r28;

        r0.<android.media.MediaScanner: int mMtpObjectHandle> = 0;

        if r5 == null goto label20;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label20:
        throw r6;

        catch android.os.RemoteException from label02 to label03 with label05;
        catch android.os.RemoteException from label07 to label08 with label15;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch android.os.RemoteException from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch android.os.RemoteException from label11 to label12 with label15;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
    }

    public android.net.Uri scanSingleFile(java.lang.String, java.lang.String, java.lang.String)
    {
        android.media.MediaScanner r0;
        java.lang.String r1, r2, r3;
        android.os.RemoteException r4, $r9;
        java.io.File r5, $r7;
        long l0, $l1, $l2;
        android.net.Uri r6;
        boolean $z0, $z1;
        android.media.MediaScanner$MyMediaScannerClient $r8;

        r0 := @this: android.media.MediaScanner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

     label1:
        specialinvoke r0.<android.media.MediaScanner: void initialize(java.lang.String)>(r2);

        specialinvoke r0.<android.media.MediaScanner: void prescan(java.lang.String,boolean)>(r1, 1);

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r1);

        r5 = $r7;

        $z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

     label2:
        return null;

     label3:
        $l1 = virtualinvoke r5.<java.io.File: long lastModified()>();

        l0 = $l1 / 1000L;

        $r8 = r0.<android.media.MediaScanner: android.media.MediaScanner$MyMediaScannerClient mClient>;

        $l2 = virtualinvoke r5.<java.io.File: long length()>();

        $z1 = staticinvoke <android.media.MediaScanner: boolean isNoMediaPath(java.lang.String)>(r1);

        r6 = virtualinvoke $r8.<android.media.MediaScanner$MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>(r1, r3, l0, $l2, 0, 1, $z1);

     label4:
        return r6;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaScanner", "RemoteException in MediaScanner.scanFile()", r4);

        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public native void setLocale(java.lang.String);
}
