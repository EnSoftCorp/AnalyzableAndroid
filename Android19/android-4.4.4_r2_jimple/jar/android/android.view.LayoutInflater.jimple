public abstract class android.view.LayoutInflater extends java.lang.Object
{
    private static final java.lang.String TAG_1995;
    private static final java.lang.String TAG_INCLUDE;
    private static final java.lang.String TAG_MERGE;
    private static final java.lang.String TAG_REQUEST_FOCUS;
    static final java.lang.Class[] mConstructorSignature;
    private static final java.util.HashMap sConstructorMap;
    private final boolean DEBUG;
    final java.lang.Object[] mConstructorArgs;
    protected final android.content.Context mContext;
    private android.view.LayoutInflater$Factory mFactory;
    private android.view.LayoutInflater$Factory2 mFactory2;
    private boolean mFactorySet;
    private android.view.LayoutInflater$Filter mFilter;
    private java.util.HashMap mFilterMap;
    private android.view.LayoutInflater$Factory2 mPrivateFactory;

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        java.util.HashMap $r1;

        <android.view.LayoutInflater: java.lang.String TAG_REQUEST_FOCUS> = "requestFocus";

        <android.view.LayoutInflater: java.lang.String TAG_MERGE> = "merge";

        <android.view.LayoutInflater: java.lang.String TAG_INCLUDE> = "include";

        <android.view.LayoutInflater: java.lang.String TAG_1995> = "blink";

        $r0 = newarray (java.lang.Class)[2];

        $r0[0] = class "android/content/Context";

        $r0[1] = class "android/util/AttributeSet";

        <android.view.LayoutInflater: java.lang.Class[] mConstructorSignature> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.view.LayoutInflater: java.util.HashMap sConstructorMap> = $r1;

        return;
    }

    protected void <init>(android.content.Context)
    {
        android.view.LayoutInflater r0;
        android.content.Context r1;
        java.lang.Object[] $r2;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.LayoutInflater: boolean DEBUG> = 0;

        $r2 = newarray (java.lang.Object)[2];

        r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs> = $r2;

        r0.<android.view.LayoutInflater: android.content.Context mContext> = r1;

        return;
    }

    protected void <init>(android.view.LayoutInflater, android.content.Context)
    {
        android.view.LayoutInflater r0, r1;
        android.content.Context r2;
        java.lang.Object[] $r3;
        android.view.LayoutInflater$Factory $r4;
        android.view.LayoutInflater$Factory2 $r5, $r6;
        android.view.LayoutInflater$Filter $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.LayoutInflater: boolean DEBUG> = 0;

        $r3 = newarray (java.lang.Object)[2];

        r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs> = $r3;

        r0.<android.view.LayoutInflater: android.content.Context mContext> = r2;

        $r4 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r4;

        $r5 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2> = $r5;

        $r6 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory> = $r6;

        $r7 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter> = $r7;

        return;
    }

    private void failNotAllowed(java.lang.String, java.lang.String, android.util.AttributeSet)
    {
        android.view.LayoutInflater r0;
        java.lang.String r1, r2, $r6, $r10;
        android.util.AttributeSet r3;
        java.lang.StringBuilder r4, $r5, $r7, $r9, $r11, $r12, $r13;
        android.view.InflateException $r8;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class not allowed to be inflated ");

        if r2 == null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r8 = new android.view.InflateException;

        $r9 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.view.InflateException: void <init>(java.lang.String)>($r10);

        throw $r8;
    }

    public static android.view.LayoutInflater 'from'(android.content.Context)
    {
        android.content.Context r0;
        android.view.LayoutInflater r1;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r1 = (android.view.LayoutInflater) $r2;

        if r1 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("LayoutInflater not found.");

        throw $r3;

     label1:
        return r1;
    }

    private void parseInclude(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2, r8;
        android.util.AttributeSet r3, r6;
        int i0, i1, i2, i3, i4, i5, $i6;
        android.content.res.XmlResourceParser r4;
        java.lang.Throwable r5, r10, $r35, $r37;
        java.lang.String r7, r14, $r19, $r26, $r29, $r30;
        android.view.ViewGroup r9;
        android.view.ViewGroup$LayoutParams r12, r15;
        android.content.res.TypedArray r13;
        android.view.InflateException $r16, $r22, $r28, $r36;
        boolean $z0, $z1;
        android.content.Context $r17, $r21;
        android.content.res.Resources $r18;
        int[] $r20;
        java.lang.StringBuilder $r23, $r24, $r25, $r27, $r31, $r32, $r33;
        java.lang.RuntimeException $r34;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.util.AttributeSet;

        $z0 = r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label37;

        i0 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, "layout", 0);

        if i0 != 0 goto label02;

        r14 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "layout");

        if r14 != null goto label01;

        $r36 = new android.view.InflateException;

        specialinvoke $r36.<android.view.InflateException: void <init>(java.lang.String)>("You must specifiy a layout in the include tag: <include layout=\"@layout/layoutID\" />");

        throw $r36;

     label01:
        $r28 = new android.view.InflateException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You must specifiy a valid layout reference. The layout ID ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid.");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<android.view.InflateException: void <init>(java.lang.String)>($r30);

        throw $r28;

     label02:
        $r17 = virtualinvoke r0.<android.view.LayoutInflater: android.content.Context getContext()>();

        $r18 = virtualinvoke $r17.<android.content.Context: android.content.res.Resources getResources()>();

        r4 = virtualinvoke $r18.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>(i0);

     label03:
        r6 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r4);

     label04:
        i1 = interfaceinvoke r4.<android.content.res.XmlResourceParser: int next()>();

     label05:
        if i1 == 2 goto label06;

        if i1 != 1 goto label04;

     label06:
        if i1 == 2 goto label09;

     label07:
        $r22 = new android.view.InflateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No start tag found!");

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<android.view.InflateException: void <init>(java.lang.String)>($r29);

        throw $r22;

     label08:
        $r35 := @caughtexception;

        r5 = $r35;

        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

        throw r5;

     label09:
        r7 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r19 = "merge";

        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label14;

        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r4, r2, r6, 0);

     label10:
        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

        i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label11:
        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i4 != 3 goto label12;

        $i6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i6 <= i5 goto label13;

     label12:
        if i4 != 1 goto label11;

     label13:
        return;

     label14:
        r8 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet)>(r2, r7, r6);

        r9 = (android.view.ViewGroup) r2;

     label15:
        r15 = virtualinvoke r9.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r3);

     label16:
        if r15 == null goto label18;

     label17:
        virtualinvoke r8.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r15);

     label18:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r4, r8, r6, 1);

        $r21 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r20 = <com.android.internal.R$styleable: int[] View>;

        r13 = virtualinvoke $r21.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r3, $r20, 0, 0);

        i3 = virtualinvoke r13.<android.content.res.TypedArray: int getResourceId(int,int)>(8, -1);

        i2 = virtualinvoke r13.<android.content.res.TypedArray: int getInt(int,int)>(20, -1);

        virtualinvoke r13.<android.content.res.TypedArray: void recycle()>();

     label19:
        if i3 == -1 goto label38;

     label20:
        virtualinvoke r8.<android.view.View: void setId(int)>(i3);

     label21:
        goto label38;

     label22:
        virtualinvoke r9.<android.view.ViewGroup: void addView(android.view.View)>(r8);

     label23:
        goto label10;

     label24:
        $r34 := @caughtexception;

     label25:
        r12 = virtualinvoke r9.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r6);

     label26:
        if r12 == null goto label18;

     label27:
        virtualinvoke r8.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r12);

     label28:
        goto label18;

     label29:
        $r37 := @caughtexception;

        r10 = $r37;

        goto label30;

     label30:
        throw r10;

     label31:
        virtualinvoke r8.<android.view.View: void setVisibility(int)>(0);

     label32:
        goto label22;

     label33:
        virtualinvoke r8.<android.view.View: void setVisibility(int)>(4);

     label34:
        goto label22;

     label35:
        virtualinvoke r8.<android.view.View: void setVisibility(int)>(8);

     label36:
        goto label22;

     label37:
        $r16 = new android.view.InflateException;

        specialinvoke $r16.<android.view.InflateException: void <init>(java.lang.String)>("<include /> can only be used inside of a ViewGroup");

        throw $r16;

     label38:
        tableswitch(i2)
        {
            case 0: goto label31;
            case 1: goto label33;
            case 2: goto label35;
            default: goto label22;
        };

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.RuntimeException from label15 to label16 with label24;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label17 to label18 with label08;
        catch java.lang.Throwable from label18 to label19 with label08;
        catch java.lang.Throwable from label20 to label21 with label08;
        catch java.lang.Throwable from label22 to label23 with label08;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label27 to label28 with label08;
        catch java.lang.Throwable from label30 to label30 with label08;
        catch java.lang.Throwable from label30 to label31 with label08;
        catch java.lang.Throwable from label31 to label32 with label08;
        catch java.lang.Throwable from label33 to label34 with label08;
        catch java.lang.Throwable from label35 to label36 with label08;
    }

    private void parseRequestFocus(org.xmlpull.v1.XmlPullParser, android.view.View) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2;
        int i0, i1, $i2;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        virtualinvoke r2.<android.view.View: boolean requestFocus()>();

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label3;

     label2:
        if i1 != 1 goto label1;

     label3:
        return;
    }

    public abstract android.view.LayoutInflater cloneInContext(android.content.Context);

    public final android.view.View createView(java.lang.String, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException, android.view.InflateException
    {
        android.view.LayoutInflater r0;
        java.lang.String r1, r2, r8, r9, r19, r26, $r56, $r59, $r71, $r73, $r75, $r77;
        android.util.AttributeSet r3;
        java.lang.reflect.Constructor r4;
        java.lang.Class r5, $r36, $r43;
        java.lang.Exception r6, $r64;
        java.lang.StringBuilder r7, r14, r16, $r40, $r41, $r42, $r48, $r49, $r53, $r55, $r58, $r60, $r63, $r65, $r66, $r67, $r68, $r72, $r74, $r78, $r80, $r81, $r82, $r84;
        android.view.InflateException r10, r15, r18, $r54, $r69, $r76;
        java.lang.Throwable r11, $r61;
        java.lang.ClassNotFoundException r12, $r62;
        java.lang.ClassCastException r13, $r50;
        java.lang.NoSuchMethodException r17, $r79;
        java.lang.ClassLoader r20, r24;
        java.lang.Object[] r21;
        android.view.LayoutInflater$Filter r22, $r37, $r47, $r52;
        android.view.View r23;
        java.lang.Boolean r25, $r34, $r39;
        boolean z0, z1, $z2, $z3, $z4;
        java.util.HashMap $r27, $r30, $r35, $r45;
        java.lang.Object $r28, $r31, $r33;
        android.view.ViewStub $r29;
        android.content.Context $r32, $r44;
        java.lang.Class[] $r46;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $r27 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        $r28 = virtualinvoke $r27.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.reflect.Constructor) $r28;

        r5 = null;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, r1);

     label02:
        r5 = null;

        if r4 != null goto label13;

     label03:
        $r44 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        r20 = virtualinvoke $r44.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label04:
        r5 = null;

        if r2 == null goto label12;

     label05:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r19 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r43 = virtualinvoke r20.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r19);

        r5 = virtualinvoke $r43.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "android/view/View");

        $r47 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        if $r47 == null goto label09;

     label07:
        if r5 == null goto label09;

     label08:
        $r52 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        $z4 = interfaceinvoke $r52.<android.view.LayoutInflater$Filter: boolean onLoadClass(java.lang.Class)>(r5);

        if $z4 != 0 goto label09;

        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, r2, r3);

     label09:
        $r46 = <android.view.LayoutInflater: java.lang.Class[] mConstructorSignature>;

        r4 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r46);

        $r45 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label10:
        r21 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        r21[1] = r3;

        $r31 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r21);

        r23 = (android.view.View) $r31;

        $z2 = r23 instanceof android.view.ViewStub;

        if $z2 == 0 goto label11;

        $r29 = (android.view.ViewStub) r23;

        virtualinvoke $r29.<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)>(r0);

     label11:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        return r23;

     label12:
        r19 = r1;

        goto label06;

     label13:
        r22 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

     label14:
        r5 = null;

        if r22 == null goto label10;

     label15:
        $r30 = r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap>;

        $r33 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r25 = (java.lang.Boolean) $r33;

     label16:
        r5 = null;

        if r25 != null goto label36;

     label17:
        $r32 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        r24 = virtualinvoke $r32.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label18:
        r5 = null;

        if r2 == null goto label34;

     label19:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r26 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        $r36 = virtualinvoke r24.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r26);

        r5 = virtualinvoke $r36.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "android/view/View");

     label21:
        if r5 == null goto label35;

     label22:
        $r37 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        $z3 = interfaceinvoke $r37.<android.view.LayoutInflater$Filter: boolean onLoadClass(java.lang.Class)>(r5);

        if $z3 == 0 goto label35;

     label23:
        z0 = 1;

     label24:
        $r35 = r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap>;

        $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r39);

     label25:
        if z0 != 0 goto label10;

     label26:
        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, r2, r3);

     label27:
        goto label10;

     label28:
        $r79 := @caughtexception;

        r17 = $r79;

     label29:
        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r77 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        r16 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

     label30:
        if r2 == null goto label32;

     label31:
        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

     label32:
        $r76 = new android.view.InflateException;

        $r74 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r76.<android.view.InflateException: void <init>(java.lang.String)>($r75);

        r18 = $r76;

        virtualinvoke r18.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r17);

        throw r18;

     label33:
        $r61 := @caughtexception;

        r11 = $r61;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        throw r11;

     label34:
        r26 = r1;

        goto label20;

     label35:
        z0 = 0;

        goto label24;

     label36:
        $r34 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        z1 = virtualinvoke r25.<java.lang.Boolean: boolean equals(java.lang.Object)>($r34);

     label37:
        r5 = null;

        if z1 == 0 goto label10;

     label38:
        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, r2, r3);

     label39:
        r5 = null;

        goto label10;

     label40:
        $r50 := @caughtexception;

        r13 = $r50;

     label41:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        r14 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class is not a View ");

     label42:
        if r2 == null goto label44;

     label43:
        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

     label44:
        $r54 = new android.view.InflateException;

        $r55 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<android.view.InflateException: void <init>(java.lang.String)>($r56);

        r15 = $r54;

        virtualinvoke r15.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r13);

        throw r15;

     label45:
        $r62 := @caughtexception;

        r12 = $r62;

     label46:
        throw r12;

     label47:
        $r64 := @caughtexception;

        r6 = $r64;

     label48:
        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r73 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r72 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        r7 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

     label49:
        if r5 != null goto label51;

        r9 = "<unknown>";

     label50:
        $r69 = new android.view.InflateException;

        $r68 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<android.view.InflateException: void <init>(java.lang.String)>($r71);

        r10 = $r69;

        virtualinvoke r10.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r6);

        throw r10;

     label51:
        r8 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

     label52:
        r9 = r8;

        goto label50;

        catch java.lang.NoSuchMethodException from label01 to label02 with label28;
        catch java.lang.ClassCastException from label01 to label02 with label40;
        catch java.lang.ClassNotFoundException from label01 to label02 with label45;
        catch java.lang.Exception from label01 to label02 with label47;
        catch java.lang.Throwable from label01 to label02 with label33;
        catch java.lang.NoSuchMethodException from label03 to label04 with label28;
        catch java.lang.ClassCastException from label03 to label04 with label40;
        catch java.lang.ClassNotFoundException from label03 to label04 with label45;
        catch java.lang.Exception from label03 to label04 with label47;
        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.lang.NoSuchMethodException from label05 to label06 with label28;
        catch java.lang.ClassCastException from label05 to label06 with label40;
        catch java.lang.ClassNotFoundException from label05 to label06 with label45;
        catch java.lang.Exception from label05 to label06 with label47;
        catch java.lang.Throwable from label05 to label06 with label33;
        catch java.lang.NoSuchMethodException from label06 to label07 with label28;
        catch java.lang.ClassCastException from label06 to label07 with label40;
        catch java.lang.ClassNotFoundException from label06 to label07 with label45;
        catch java.lang.Exception from label06 to label07 with label47;
        catch java.lang.Throwable from label06 to label07 with label33;
        catch java.lang.NoSuchMethodException from label08 to label09 with label28;
        catch java.lang.ClassCastException from label08 to label09 with label40;
        catch java.lang.ClassNotFoundException from label08 to label09 with label45;
        catch java.lang.Exception from label08 to label09 with label47;
        catch java.lang.Throwable from label08 to label09 with label33;
        catch java.lang.NoSuchMethodException from label09 to label10 with label28;
        catch java.lang.ClassCastException from label09 to label10 with label40;
        catch java.lang.ClassNotFoundException from label09 to label10 with label45;
        catch java.lang.Exception from label09 to label10 with label47;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.lang.NoSuchMethodException from label10 to label11 with label28;
        catch java.lang.ClassCastException from label10 to label11 with label40;
        catch java.lang.ClassNotFoundException from label10 to label11 with label45;
        catch java.lang.Exception from label10 to label11 with label47;
        catch java.lang.Throwable from label10 to label11 with label33;
        catch java.lang.NoSuchMethodException from label13 to label14 with label28;
        catch java.lang.ClassCastException from label13 to label14 with label40;
        catch java.lang.ClassNotFoundException from label13 to label14 with label45;
        catch java.lang.Exception from label13 to label14 with label47;
        catch java.lang.Throwable from label13 to label14 with label33;
        catch java.lang.NoSuchMethodException from label15 to label16 with label28;
        catch java.lang.ClassCastException from label15 to label16 with label40;
        catch java.lang.ClassNotFoundException from label15 to label16 with label45;
        catch java.lang.Exception from label15 to label16 with label47;
        catch java.lang.Throwable from label15 to label16 with label33;
        catch java.lang.NoSuchMethodException from label17 to label18 with label28;
        catch java.lang.ClassCastException from label17 to label18 with label40;
        catch java.lang.ClassNotFoundException from label17 to label18 with label45;
        catch java.lang.Exception from label17 to label18 with label47;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.lang.NoSuchMethodException from label19 to label20 with label28;
        catch java.lang.ClassCastException from label19 to label20 with label40;
        catch java.lang.ClassNotFoundException from label19 to label20 with label45;
        catch java.lang.Exception from label19 to label20 with label47;
        catch java.lang.Throwable from label19 to label20 with label33;
        catch java.lang.NoSuchMethodException from label20 to label21 with label28;
        catch java.lang.ClassCastException from label20 to label21 with label40;
        catch java.lang.ClassNotFoundException from label20 to label21 with label45;
        catch java.lang.Exception from label20 to label21 with label47;
        catch java.lang.Throwable from label20 to label21 with label33;
        catch java.lang.NoSuchMethodException from label22 to label23 with label28;
        catch java.lang.ClassCastException from label22 to label23 with label40;
        catch java.lang.ClassNotFoundException from label22 to label23 with label45;
        catch java.lang.Exception from label22 to label23 with label47;
        catch java.lang.Throwable from label22 to label23 with label33;
        catch java.lang.NoSuchMethodException from label24 to label25 with label28;
        catch java.lang.ClassCastException from label24 to label25 with label40;
        catch java.lang.ClassNotFoundException from label24 to label25 with label45;
        catch java.lang.Exception from label24 to label25 with label47;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.lang.NoSuchMethodException from label26 to label27 with label28;
        catch java.lang.ClassCastException from label26 to label27 with label40;
        catch java.lang.ClassNotFoundException from label26 to label27 with label45;
        catch java.lang.Exception from label26 to label27 with label47;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label32 to label33 with label33;
        catch java.lang.NoSuchMethodException from label36 to label37 with label28;
        catch java.lang.ClassCastException from label36 to label37 with label40;
        catch java.lang.ClassNotFoundException from label36 to label37 with label45;
        catch java.lang.Exception from label36 to label37 with label47;
        catch java.lang.Throwable from label36 to label37 with label33;
        catch java.lang.NoSuchMethodException from label38 to label39 with label28;
        catch java.lang.ClassCastException from label38 to label39 with label40;
        catch java.lang.ClassNotFoundException from label38 to label39 with label45;
        catch java.lang.Exception from label38 to label39 with label47;
        catch java.lang.Throwable from label38 to label39 with label33;
        catch java.lang.Throwable from label41 to label42 with label33;
        catch java.lang.Throwable from label43 to label44 with label33;
        catch java.lang.Throwable from label44 to label45 with label33;
        catch java.lang.Throwable from label46 to label47 with label33;
        catch java.lang.Throwable from label48 to label49 with label33;
        catch java.lang.Throwable from label50 to label51 with label33;
        catch java.lang.Throwable from label51 to label52 with label33;
    }

    android.view.View createViewFromTag(android.view.View, java.lang.String, android.util.AttributeSet)
    {
        android.view.LayoutInflater r0;
        android.view.View r1, r9, r10, $r13;
        java.lang.String r2, $r22, $r26, $r31, $r35;
        android.util.AttributeSet r3;
        java.lang.Exception r4, $r21;
        android.view.InflateException r5, r7, r8, $r24, $r33, $r38;
        java.lang.ClassNotFoundException r6, $r32;
        boolean $z0;
        android.view.LayoutInflater$Factory2 $r11, $r15, $r16, $r20;
        android.view.LayoutInflater$Factory $r12, $r17;
        int $i0;
        android.content.Context $r14, $r18, $r19;
        java.lang.StringBuilder $r23, $r25, $r28, $r29, $r30, $r34, $r36, $r37;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("view");

        if $z0 == 0 goto label01;

        r2 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

     label01:
        $r11 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        if $r11 == null goto label06;

        $r20 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        $r19 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        r9 = interfaceinvoke $r20.<android.view.LayoutInflater$Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, $r19, r3);

     label02:
        if r9 != null goto label04;

     label03:
        $r15 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        if $r15 == null goto label04;

        $r16 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        $r14 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        r9 = interfaceinvoke $r16.<android.view.LayoutInflater$Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, $r14, r3);

     label04:
        if r9 != null goto label13;

     label05:
        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(46);

        if -1 != $i0 goto label08;

        $r13 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>(r1, r2, r3);

        return $r13;

     label06:
        $r12 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if $r12 == null goto label14;

        $r17 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        $r18 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        r9 = interfaceinvoke $r17.<android.view.LayoutInflater$Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>(r2, $r18, r3);

     label07:
        goto label02;

     label08:
        r10 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>(r2, null, r3);

     label09:
        return r10;

     label10:
        $r38 := @caughtexception;

        r8 = $r38;

        throw r8;

     label11:
        $r32 := @caughtexception;

        r6 = $r32;

        $r33 = new android.view.InflateException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<android.view.InflateException: void <init>(java.lang.String)>($r35);

        r7 = $r33;

        virtualinvoke r7.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r6);

        throw r7;

     label12:
        $r21 := @caughtexception;

        r4 = $r21;

        $r24 = new android.view.InflateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r22 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<android.view.InflateException: void <init>(java.lang.String)>($r26);

        r5 = $r24;

        virtualinvoke r5.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);

        throw r5;

     label13:
        return r9;

     label14:
        r9 = null;

        goto label02;

        catch android.view.InflateException from label01 to label02 with label10;
        catch java.lang.ClassNotFoundException from label01 to label02 with label11;
        catch java.lang.Exception from label01 to label02 with label12;
        catch android.view.InflateException from label03 to label04 with label10;
        catch java.lang.ClassNotFoundException from label03 to label04 with label11;
        catch java.lang.Exception from label03 to label04 with label12;
        catch android.view.InflateException from label05 to label06 with label10;
        catch java.lang.ClassNotFoundException from label05 to label06 with label11;
        catch java.lang.Exception from label05 to label06 with label12;
        catch android.view.InflateException from label06 to label07 with label10;
        catch java.lang.ClassNotFoundException from label06 to label07 with label11;
        catch java.lang.Exception from label06 to label07 with label12;
        catch android.view.InflateException from label08 to label09 with label10;
        catch java.lang.ClassNotFoundException from label08 to label09 with label11;
        catch java.lang.Exception from label08 to label09 with label12;
    }

    public android.content.Context getContext()
    {
        android.view.LayoutInflater r0;
        android.content.Context $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        return $r1;
    }

    public final android.view.LayoutInflater$Factory getFactory()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        return $r1;
    }

    public final android.view.LayoutInflater$Factory2 getFactory2()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory2 $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        return $r1;
    }

    public android.view.LayoutInflater$Filter getFilter()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Filter $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        return $r1;
    }

    public android.view.View inflate(int, android.view.ViewGroup)
    {
        android.view.LayoutInflater r0;
        int i0;
        android.view.ViewGroup r1;
        boolean z0;
        android.view.View $r2;

        r0 := @this: android.view.LayoutInflater;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.ViewGroup;

        if r1 == null goto label2;

        z0 = 1;

     label1:
        $r2 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i0, r1, z0);

        return $r2;

     label2:
        z0 = 0;

        goto label1;
    }

    public android.view.View inflate(int, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater r0;
        int i0;
        android.view.ViewGroup r1;
        boolean z0;
        android.content.res.XmlResourceParser r2;
        java.lang.Throwable r3, $r7;
        android.view.View r4;
        android.content.Context $r5;
        android.content.res.Resources $r6;

        r0 := @this: android.view.LayoutInflater;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.ViewGroup;

        z0 := @parameter2: boolean;

        $r5 = virtualinvoke r0.<android.view.LayoutInflater: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>(i0);

     label1:
        r4 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>(r2, r1, z0);

     label2:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        return r4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.view.View inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup)
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.ViewGroup r2;
        boolean z0;
        android.view.View $r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.ViewGroup;

        if r2 == null goto label2;

        z0 = 1;

     label1:
        $r3 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>(r1, r2, z0);

        return $r3;

     label2:
        z0 = 0;

        goto label1;
    }

    public android.view.View inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.ViewGroup r2;
        boolean z0, $z1, $z2;
        java.lang.Object[] r3, $r17, $r20, $r23, $r24, $r43, $r44;
        java.lang.Throwable r4, r10, $r45, $r51;
        android.util.AttributeSet r5;
        android.content.Context r6, $r18, $r26;
        android.view.View r7, r15, r16;
        java.io.IOException r8, $r32;
        android.view.InflateException r9, r12, $r29, $r30, $r38, $r49;
        org.xmlpull.v1.XmlPullParserException r11, $r50;
        java.lang.String r13, $r21, $r22, $r28, $r31, $r36, $r39, $r41, $r48;
        int i0;
        android.view.ViewGroup$LayoutParams r14;
        java.lang.Object $r19;
        android.view.LayoutInflater$BlinkLayout $r25;
        java.lang.StringBuilder $r27, $r33, $r34, $r35, $r37, $r40, $r42;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.ViewGroup;

        z0 := @parameter2: boolean;

        r3 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        entermonitor r3;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, "inflate");

        r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r17 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r19 = $r17[0];

        r6 = (android.content.Context) $r19;

        $r20 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r18 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r20[0] = $r18;

     label02:
        r7 = r2;

     label03:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        if i0 == 2 goto label05;

        if i0 != 1 goto label03;

     label05:
        if i0 == 2 goto label14;

     label06:
        $r30 = new android.view.InflateException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No start tag found!");

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<android.view.InflateException: void <init>(java.lang.String)>($r31);

        throw $r30;

     label07:
        $r50 := @caughtexception;

        r11 = $r50;

     label08:
        $r49 = new android.view.InflateException;

        $r48 = virtualinvoke r11.<org.xmlpull.v1.XmlPullParserException: java.lang.String getMessage()>();

        specialinvoke $r49.<android.view.InflateException: void <init>(java.lang.String)>($r48);

        r12 = $r49;

        virtualinvoke r12.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r11);

        throw r12;

     label09:
        $r45 := @caughtexception;

        r10 = $r45;

     label10:
        $r44 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r44[0] = r6;

        $r43 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r43[1] = null;

        throw r10;

     label11:
        $r51 := @caughtexception;

        r4 = $r51;

     label12:
        exitmonitor r3;

     label13:
        throw r4;

     label14:
        r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r21 = "merge";

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z1 == 0 goto label22;

     label15:
        if r2 == null goto label16;

        if z0 != 0 goto label19;

     label16:
        $r29 = new android.view.InflateException;

        specialinvoke $r29.<android.view.InflateException: void <init>(java.lang.String)>("<merge /> can be used only with a valid ViewGroup root and attachToRoot=true");

        throw $r29;

     label17:
        $r32 := @caughtexception;

        r8 = $r32;

     label18:
        $r38 = new android.view.InflateException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r41 = virtualinvoke r8.<java.io.IOException: java.lang.String getMessage()>();

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<android.view.InflateException: void <init>(java.lang.String)>($r39);

        r9 = $r38;

        virtualinvoke r9.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r8);

        throw r9;

     label19:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r1, r2, r5, 0);

     label20:
        $r23 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r23[0] = r6;

        $r24 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r24[1] = null;

        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        exitmonitor r3;

     label21:
        return r7;

     label22:
        $r22 = "blink";

        $z2 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z2 == 0 goto label31;

        $r25 = new android.view.LayoutInflater$BlinkLayout;

        $r26 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        specialinvoke $r25.<android.view.LayoutInflater$BlinkLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r26, r5);

        r15 = $r25;

     label23:
        r14 = null;

        if r2 == null goto label27;

     label24:
        r14 = virtualinvoke r2.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r5);

     label25:
        if z0 != 0 goto label27;

     label26:
        virtualinvoke r15.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r14);

     label27:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r1, r15, r5, 1);

     label28:
        if r2 == null goto label33;

        if z0 == 0 goto label33;

     label29:
        virtualinvoke r2.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r15, r14);

     label30:
        goto label33;

     label31:
        r16 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet)>(r2, r13, r5);

     label32:
        r15 = r16;

        goto label23;

     label33:
        if r2 == null goto label34;

        if z0 != 0 goto label20;

     label34:
        r7 = r15;

        goto label20;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label07;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label07;
        catch java.io.IOException from label06 to label07 with label17;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label07;
        catch java.io.IOException from label14 to label15 with label17;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label07;
        catch java.io.IOException from label16 to label17 with label17;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label18 to label19 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label07;
        catch java.io.IOException from label19 to label20 with label17;
        catch java.lang.Throwable from label19 to label20 with label09;
        catch java.lang.Throwable from label20 to label21 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label07;
        catch java.io.IOException from label22 to label23 with label17;
        catch java.lang.Throwable from label22 to label23 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label07;
        catch java.io.IOException from label24 to label25 with label17;
        catch java.lang.Throwable from label24 to label25 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label07;
        catch java.io.IOException from label26 to label27 with label17;
        catch java.lang.Throwable from label26 to label27 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label07;
        catch java.io.IOException from label27 to label28 with label17;
        catch java.lang.Throwable from label27 to label28 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label07;
        catch java.io.IOException from label29 to label30 with label17;
        catch java.lang.Throwable from label29 to label30 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label07;
        catch java.io.IOException from label31 to label32 with label17;
        catch java.lang.Throwable from label31 to label32 with label09;
    }

    protected android.view.View onCreateView(android.view.View, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException
    {
        android.view.LayoutInflater r0;
        android.view.View r1, $r4;
        java.lang.String r2;
        android.util.AttributeSet r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $r4 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>(r2, r3);

        return $r4;
    }

    protected android.view.View onCreateView(java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException
    {
        android.view.LayoutInflater r0;
        java.lang.String r1;
        android.util.AttributeSet r2;
        android.view.View $r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, "android.view.", r2);

        return $r3;
    }

    void rInflate(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2, r8;
        android.util.AttributeSet r3;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1, $i2, $i3;
        java.lang.String r4, $r11, $r12, $r13, $r14;
        android.view.LayoutInflater$BlinkLayout r5, $r15;
        android.view.ViewGroup r6, r9;
        android.view.ViewGroup$LayoutParams r7, r10;
        android.content.Context $r16;
        android.view.InflateException $r17, $r18;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.util.AttributeSet;

        z0 := @parameter3: boolean;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i0 goto label8;

     label2:
        if i1 == 1 goto label8;

        if i1 != 2 goto label1;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r11 = "requestFocus";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label3;

        specialinvoke r0.<android.view.LayoutInflater: void parseRequestFocus(org.xmlpull.v1.XmlPullParser,android.view.View)>(r1, r2);

        goto label1;

     label3:
        $r12 = "include";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label5;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 != 0 goto label4;

        $r18 = new android.view.InflateException;

        specialinvoke $r18.<android.view.InflateException: void <init>(java.lang.String)>("<include /> cannot be the root element");

        throw $r18;

     label4:
        specialinvoke r0.<android.view.LayoutInflater: void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>(r1, r2, r3);

        goto label1;

     label5:
        $r13 = "merge";

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label6;

        $r17 = new android.view.InflateException;

        specialinvoke $r17.<android.view.InflateException: void <init>(java.lang.String)>("<merge /> must be the root element");

        throw $r17;

     label6:
        $r14 = "blink";

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label7;

        $r15 = new android.view.LayoutInflater$BlinkLayout;

        $r16 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        specialinvoke $r15.<android.view.LayoutInflater$BlinkLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r16, r3);

        r5 = $r15;

        r6 = (android.view.ViewGroup) r2;

        r7 = virtualinvoke r6.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r3);

        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r1, r5, r3, 1);

        virtualinvoke r6.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r5, r7);

        goto label1;

     label7:
        r8 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet)>(r2, r4, r3);

        r9 = (android.view.ViewGroup) r2;

        r10 = virtualinvoke r9.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r3);

        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r1, r8, r3, 1);

        virtualinvoke r9.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r8, r10);

        goto label1;

     label8:
        if z0 == 0 goto label9;

        virtualinvoke r2.<android.view.View: void onFinishInflate()>();

     label9:
        return;
    }

    public void setFactory(android.view.LayoutInflater$Factory)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory r1, $r2, $r5;
        boolean $z0;
        android.view.LayoutInflater$FactoryMerger $r3;
        android.view.LayoutInflater$Factory2 $r4;
        java.lang.NullPointerException $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Factory;

        $z0 = r0.<android.view.LayoutInflater: boolean mFactorySet>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A factory has already been set on this LayoutInflater");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given factory can not be null");

        throw $r6;

     label2:
        r0.<android.view.LayoutInflater: boolean mFactorySet> = 1;

        $r2 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if $r2 != null goto label3;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = r1;

        return;

     label3:
        $r3 = new android.view.LayoutInflater$FactoryMerger;

        $r5 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        $r4 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        specialinvoke $r3.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>(r1, null, $r5, $r4);

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r3;

        return;
    }

    public void setFactory2(android.view.LayoutInflater$Factory2)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory2 r1, $r4;
        boolean $z0;
        android.view.LayoutInflater$Factory $r2, $r5;
        android.view.LayoutInflater$FactoryMerger $r3;
        java.lang.NullPointerException $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Factory2;

        $z0 = r0.<android.view.LayoutInflater: boolean mFactorySet>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A factory has already been set on this LayoutInflater");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given factory can not be null");

        throw $r6;

     label2:
        r0.<android.view.LayoutInflater: boolean mFactorySet> = 1;

        $r2 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if $r2 != null goto label3;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2> = r1;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = r1;

        return;

     label3:
        $r3 = new android.view.LayoutInflater$FactoryMerger;

        $r5 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        $r4 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        specialinvoke $r3.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>(r1, r1, $r5, $r4);

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r3;

        return;
    }

    public void setFilter(android.view.LayoutInflater$Filter)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Filter r1;
        java.util.HashMap $r2;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Filter;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter> = r1;

        if r1 == null goto label1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap> = $r2;

     label1:
        return;
    }

    public void setPrivateFactory(android.view.LayoutInflater$Factory2)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory2 r1;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Factory2;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory> = r1;

        return;
    }
}
