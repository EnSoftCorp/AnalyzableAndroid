final class android.util.MapCollections$MapIterator extends java.lang.Object implements java.util.Iterator, java.util.Map$Entry
{
    int mEnd;
    boolean mEntryValid;
    int mIndex;
    final android.util.MapCollections this$0;

    void <init>(android.util.MapCollections)
    {
        android.util.MapCollections$MapIterator r0;
        android.util.MapCollections r1;
        int $i0, $i1;

        r0 := @this: android.util.MapCollections$MapIterator;

        r1 := @parameter0: android.util.MapCollections;

        r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.MapCollections$MapIterator: boolean mEntryValid> = 0;

        $i0 = virtualinvoke r1.<android.util.MapCollections: int colGetSize()>();

        $i1 = -1 + $i0;

        r0.<android.util.MapCollections$MapIterator: int mEnd> = $i1;

        r0.<android.util.MapCollections$MapIterator: int mIndex> = -1;

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        android.util.MapCollections$MapIterator r0;
        java.lang.Object r1, $r3, $r5, $r6, $r8;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Map$Entry r2;
        int $i0, $i1, i2;
        android.util.MapCollections $r4, $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: android.util.MapCollections$MapIterator;

        r1 := @parameter0: java.lang.Object;

        z0 = 1;

        $z1 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z1 != 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r9;

     label1:
        $z2 = r1 instanceof java.util.Map$Entry;

        if $z2 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.util.Map$Entry) r1;

        $r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r5 = virtualinvoke $r4.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 0);

        $z3 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z3 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i1 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        i2 = (int) z0;

        $r8 = virtualinvoke $r7.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i1, i2);

        $z4 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r6, $r8);

        if $z4 == 0 goto label4;

     label3:
        return z0;

     label4:
        z0 = 0;

        goto label3;
    }

    public java.lang.Object getKey()
    {
        android.util.MapCollections$MapIterator r0;
        boolean $z0;
        int $i0;
        android.util.MapCollections $r1;
        java.lang.Object $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r3;

     label1:
        $r1 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 0);

        return $r2;
    }

    public java.lang.Object getValue()
    {
        android.util.MapCollections$MapIterator r0;
        boolean $z0;
        int $i0;
        android.util.MapCollections $r1;
        java.lang.Object $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r3;

     label1:
        $r1 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i0, 1);

        return $r2;
    }

    public boolean hasNext()
    {
        android.util.MapCollections$MapIterator r0;
        int $i0, $i1;

        r0 := @this: android.util.MapCollections$MapIterator;

        $i1 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mEnd>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final int hashCode()
    {
        android.util.MapCollections$MapIterator r0;
        java.lang.Object r1, r2;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;
        android.util.MapCollections $r3, $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r5;

     label1:
        $r3 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i2 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        r1 = virtualinvoke $r3.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i2, 0);

        $r4 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i3 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        r2 = virtualinvoke $r4.<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>($i3, 1);

        if r1 != null goto label4;

        i0 = 0;

     label2:
        i1 = 0;

        if r2 != null goto label5;

     label3:
        $i4 = i1 ^ i0;

        return $i4;

     label4:
        i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        goto label2;

     label5:
        i1 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        goto label3;
    }

    public volatile java.lang.Object next()
    {
        android.util.MapCollections$MapIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: android.util.MapCollections$MapIterator;

        $r1 = virtualinvoke r0.<android.util.MapCollections$MapIterator: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        android.util.MapCollections$MapIterator r0;
        int $i0, $i1;

        r0 := @this: android.util.MapCollections$MapIterator;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $i1 = 1 + $i0;

        r0.<android.util.MapCollections$MapIterator: int mIndex> = $i1;

        r0.<android.util.MapCollections$MapIterator: boolean mEntryValid> = 1;

        return r0;
    }

    public void remove()
    {
        android.util.MapCollections$MapIterator r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        android.util.MapCollections $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.util.MapCollections$MapIterator;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        virtualinvoke $r1.<android.util.MapCollections: void colRemoveAt(int)>($i0);

        $i1 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $i2 = -1 + $i1;

        r0.<android.util.MapCollections$MapIterator: int mIndex> = $i2;

        $i3 = r0.<android.util.MapCollections$MapIterator: int mEnd>;

        $i4 = -1 + $i3;

        r0.<android.util.MapCollections$MapIterator: int mEnd> = $i4;

        r0.<android.util.MapCollections$MapIterator: boolean mEntryValid> = 0;

        return;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        android.util.MapCollections$MapIterator r0;
        java.lang.Object r1, $r3;
        boolean $z0;
        int $i0;
        android.util.MapCollections $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.util.MapCollections$MapIterator;

        r1 := @parameter0: java.lang.Object;

        $z0 = r0.<android.util.MapCollections$MapIterator: boolean mEntryValid>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This container does not support retaining Map.Entry objects");

        throw $r4;

     label1:
        $r2 = r0.<android.util.MapCollections$MapIterator: android.util.MapCollections this$0>;

        $i0 = r0.<android.util.MapCollections$MapIterator: int mIndex>;

        $r3 = virtualinvoke $r2.<android.util.MapCollections: java.lang.Object colSetValue(int,java.lang.Object)>($i0, r1);

        return $r3;
    }

    public final java.lang.String toString()
    {
        android.util.MapCollections$MapIterator r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String $r7;

        r0 := @this: android.util.MapCollections$MapIterator;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<android.util.MapCollections$MapIterator: java.lang.Object getKey()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = virtualinvoke r0.<android.util.MapCollections$MapIterator: java.lang.Object getValue()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
