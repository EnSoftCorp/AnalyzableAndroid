public class com.android.internal.telephony.cdma.CDMALTEPhone extends com.android.internal.telephony.cdma.CDMAPhone
{
    private static final boolean DBG;
    static final java.lang.String LOG_LTE_TAG;
    private com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords;
    private com.android.internal.telephony.uicc.SIMRecords mSimRecords;

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2;
        com.android.internal.telephony.PhoneNotifier r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>(r1, r2, r3, 0);

        return;
    }

    private void handleSetSelectNetwork(android.os.AsyncResult)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.os.AsyncResult r1;
        com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage r2;
        android.content.SharedPreferences$Editor r3;
        java.lang.Object $r4, $r5, $r13;
        boolean $z0, $z1;
        android.os.Message $r6, $r16, $r17;
        android.content.Context $r7;
        android.content.SharedPreferences $r8;
        java.lang.String $r9, $r11;
        java.lang.Throwable $r14;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.os.AsyncResult;

        $r4 = r1.<android.os.AsyncResult: java.lang.Object userObj>;

        $z0 = $r4 instanceof com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void loge(java.lang.String)>("unexpected result from user object.");

     label1:
        return;

     label2:
        $r5 = r1.<android.os.AsyncResult: java.lang.Object userObj>;

        r2 = (com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage) $r5;

        $r6 = r2.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: android.os.Message message>;

        if $r6 == null goto label3;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("sending original message to recipient");

        $r16 = r2.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: android.os.Message message>;

        $r13 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r14 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r16, $r13, $r14);

        $r17 = r2.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: android.os.Message message>;

        virtualinvoke $r17.<android.os.Message: void sendToTarget()>();

     label3:
        $r7 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: android.content.Context getContext()>();

        $r8 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r7);

        r3 = interfaceinvoke $r8.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r9 = r2.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: java.lang.String operatorNumeric>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("network_selection_key", $r9);

        $r11 = r2.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: java.lang.String operatorAlphaLong>;

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("network_selection_name_key", $r11);

        $z1 = interfaceinvoke r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void loge(java.lang.String)>("failed to commit network selection preference");

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void dispose()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("CDMALTEPhone extends:");

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getAvailableNetworks(android.os.Message)>(r1);

        return;
    }

    public com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1, $r14;
        com.android.internal.telephony.PhoneConstants$DataState r2;
        com.android.internal.telephony.cdma.CdmaServiceStateTracker $r3, $r17;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r4, $r5;
        boolean $z0, $z1;
        int[] $r6;
        com.android.internal.telephony.DctConstants$State $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        com.android.internal.telephony.cdma.CdmaCallTracker $r13;
        com.android.internal.telephony.PhoneConstants$State $r15, $r16;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        $r3 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST>;

        if $r3 != null goto label2;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDataConnectionState apnType=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ret=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>($r14);

        return r2;

     label2:
        $r4 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z0 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isApnTypeEnabled(java.lang.String)>(r1);

        if $z0 != 0 goto label3;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label1;

     label3:
        $r6 = <com.android.internal.telephony.cdma.CDMALTEPhone$1: int[] $SwitchMap$com$android$internal$telephony$DctConstants$State>;

        $r5 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r7 = virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DcTrackerBase: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>(r1);

        $i0 = virtualinvoke $r7.<com.android.internal.telephony.DctConstants$State: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label8;
            case 7: goto label8;
            default: goto label4;
        };

     label4:
        goto label1;

     label5:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label1;

     label6:
        $r13 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT>;

        $r15 = $r13.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r16 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r15 == $r16 goto label7;

        $r17 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST>;

        $z1 = virtualinvoke $r17.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>();

        if $z1 != 0 goto label7;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState SUSPENDED>;

        goto label1;

     label7:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTED>;

        goto label1;

     label8:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTING>;

        goto label1;
    }

    public java.lang.String getDeviceSvn()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String mImeiSv>;

        return $r1;
    }

    public java.lang.String getGroupIdLevel1()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.SIMRecords $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getGid1()>();

        return $r3;

     label1:
        return "";
    }

    public java.lang.String getImei()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String mImei>;

        return $r1;
    }

    public com.android.internal.telephony.uicc.IsimRecords getIsimRecords()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.IsimUiccRecords $r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords>;

        return $r1;
    }

    public java.lang.String getMsisdn()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.SIMRecords $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getMsisdnNumber()>();

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getSubscriberId()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.SIMRecords $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getIMSI()>();

        return $r3;

     label1:
        return "";
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.os.Message r1;
        int $i0;
        java.lang.Object $r2;
        android.os.AsyncResult $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 16: goto label2;
            default: goto label1;
        };

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void handleMessage(android.os.Message)>(r1);

        return;

     label2:
        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $r3 = (android.os.AsyncResult) $r2;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void handleSetSelectNetwork(android.os.AsyncResult)>($r3);

        return;
    }

    protected void initSstIcc()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.cdma.CdmaLteServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = new com.android.internal.telephony.cdma.CdmaLteServiceStateTracker;

        specialinvoke $r1.<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMALTEPhone)>(r0);

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST> = $r1;

        return;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CDMALTEPhone", r1);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CDMALTEPhone", r1);

        return;
    }

    protected void loge(java.lang.String, java.lang.Throwable)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CDMALTEPhone", r1, r2);

        return;
    }

    protected void onUpdateIccAvailability()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1, r3;
        com.android.internal.telephony.uicc.IsimUiccRecords r2;
        com.android.internal.telephony.uicc.SIMRecords r4, $r8, $r9;
        com.android.internal.telephony.uicc.UiccController $r5, $r6, $r7;
        com.android.internal.telephony.uicc.IccRecords $r10, $r11;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r5 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r5 != null goto label1;

        return;

     label1:
        $r6 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        r1 = virtualinvoke $r6.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int)>(3);

        r2 = null;

        if r1 == null goto label2;

        $r11 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r2 = (com.android.internal.telephony.uicc.IsimUiccRecords) $r11;

     label2:
        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords> = r2;

        $r7 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        r3 = virtualinvoke $r7.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int)>(1);

        r4 = null;

        if r3 == null goto label3;

        $r10 = virtualinvoke r3.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r4 = (com.android.internal.telephony.uicc.SIMRecords) $r10;

     label3:
        $r8 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r8 == r4 goto label5;

        $r9 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r9 == null goto label4;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("Removing stale SIMRecords object.");

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords> = null;

     label4:
        if r4 == null goto label5;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("New SIMRecords found");

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords> = r4;

     label5:
        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void onUpdateIccAvailability()>();

        return;
    }

    public void removeReferences()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void removeReferences()>();

        return;
    }

    public void requestIsimAuthentication(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1;
        android.os.Message r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void requestIsimAuthentication(java.lang.String,android.os.Message)>(r1, r2);

        return;
    }

    public void selectNetworkManually(com.android.internal.telephony.OperatorInfo, android.os.Message)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.OperatorInfo r1;
        android.os.Message r2, r4;
        com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage r3, $r5;
        java.lang.String $r6, $r7, $r9;
        com.android.internal.telephony.CommandsInterface $r8;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: com.android.internal.telephony.OperatorInfo;

        r2 := @parameter1: android.os.Message;

        $r5 = new com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage;

        specialinvoke $r5.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: void <init>(com.android.internal.telephony.cdma.CDMALTEPhone$1)>(null);

        r3 = $r5;

        r3.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: android.os.Message message> = r2;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>();

        r3.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: java.lang.String operatorNumeric> = $r6;

        $r7 = virtualinvoke r1.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()>();

        r3.<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: java.lang.String operatorAlphaLong> = $r7;

        r4 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: android.os.Message obtainMessage(int,java.lang.Object)>(16, r3);

        $r8 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r9 = virtualinvoke r1.<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>();

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>($r9, r4);

        return;
    }

    public boolean updateCurrentCarrierInProvider()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.database.SQLException r1, $r16;
        android.net.Uri r2, $r6;
        android.content.ContentValues r3, $r7;
        java.lang.String r4, $r12;
        com.android.internal.telephony.uicc.SIMRecords $r5, $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        android.content.Context $r13;
        android.content.ContentResolver $r15;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r5 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r5 == null goto label5;

     label1:
        $r6 = <android.provider.Telephony$Carriers: android.net.Uri CONTENT_URI>;

        r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r6, "current");

        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>()>();

        r3 = $r7;

        $r8 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        r4 = virtualinvoke $r8.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getOperatorNumeric()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("numeric", r4);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCurrentCarrierInProvider from UICC: numeric=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>($r12);

        $r13 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: android.content.Context mContext>;

        $r15 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r15.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r2, r3);

     label2:
        return 1;

     label3:
        $r16 := @caughtexception;

        r1 = $r16;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void loge(java.lang.String,java.lang.Exception)>("Can\'t store current operator ret false", r1);

     label4:
        return 0;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("updateCurrentCarrierInProvider mIccRecords == null ret false");

        goto label4;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    boolean updateCurrentCarrierInProvider(java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1, $r7;
        boolean z0;
        com.android.internal.telephony.uicc.UiccController $r2;
        com.android.internal.telephony.uicc.UiccCardApplication $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int)>(1);

        if $r3 != null goto label2;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("updateCurrentCarrierInProvider APP_FAM_3GPP == null");

        z0 = specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>(r1);

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCurrentCarrierInProvider X retVal=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>($r7);

        return z0;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("updateCurrentCarrierInProvider not updated");

        z0 = 1;

        goto label1;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String LOG_LTE_TAG> = "CDMALTEPhone";

        <com.android.internal.telephony.cdma.CDMALTEPhone: boolean DBG> = 1;

        return;
    }
}
