public class android.widget.TextView extends android.view.View implements android.view.ViewTreeObserver$OnPreDrawListener
{
    private static final int ANIMATED_SCROLL_GAP;
    private static final int CHANGE_WATCHER_PRIORITY;
    static final boolean DEBUG_EXTRACT;
    private static final int DECIMAL;
    private static final android.text.Spanned EMPTY_SPANNED;
    private static final int EMS;
    static final int ID_COPY;
    static final int ID_CUT;
    static final int ID_PASTE;
    static final int ID_SELECT_ALL;
    static long LAST_CUT_OR_COPY_TIME;
    private static final int LINES;
    static final java.lang.String LOG_TAG;
    private static final int MARQUEE_FADE_NORMAL;
    private static final int MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS;
    private static final int MARQUEE_FADE_SWITCH_SHOW_FADE;
    private static final int MONOSPACE;
    private static final int[] MULTILINE_STATE_SET;
    private static final android.text.InputFilter[] NO_FILTERS;
    private static final int PIXELS;
    private static final int SANS;
    private static final int SERIF;
    private static final int SIGNED;
    private static final android.graphics.RectF TEMP_RECTF;
    private static final android.text.BoringLayout$Metrics UNKNOWN_BORING;
    private static final int VERY_WIDE;
    private boolean mAllowTransformationLengthChange;
    private int mAutoLinkMask;
    private android.text.BoringLayout$Metrics mBoring;
    private android.widget.TextView$BufferType mBufferType;
    private android.widget.TextView$ChangeWatcher mChangeWatcher;
    private android.widget.TextView$CharWrapper mCharWrapper;
    private int mCurHintTextColor;
    private int mCurTextColor;
    private volatile java.util.Locale mCurrentSpellCheckerLocaleCache;
    int mCursorDrawableRes;
    private int mDeferScroll;
    private int mDesiredHeightAtMeasure;
    private boolean mDispatchTemporaryDetach;
    android.widget.TextView$Drawables mDrawables;
    private android.text.Editable$Factory mEditableFactory;
    private android.widget.Editor mEditor;
    private android.text.TextUtils$TruncateAt mEllipsize;
    private android.text.InputFilter[] mFilters;
    private boolean mFreezesText;
    private int mGravity;
    int mHighlightColor;
    private final android.graphics.Paint mHighlightPaint;
    private android.graphics.Path mHighlightPath;
    private boolean mHighlightPathBogus;
    private java.lang.CharSequence mHint;
    private android.text.BoringLayout$Metrics mHintBoring;
    private android.text.Layout mHintLayout;
    private android.content.res.ColorStateList mHintTextColor;
    private boolean mHorizontallyScrolling;
    private boolean mIncludePad;
    private int mLastLayoutDirection;
    private long mLastScroll;
    private android.text.Layout mLayout;
    private android.content.res.ColorStateList mLinkTextColor;
    private boolean mLinksClickable;
    private java.util.ArrayList mListeners;
    private android.widget.TextView$Marquee mMarquee;
    private int mMarqueeFadeMode;
    private int mMarqueeRepeatLimit;
    private int mMaxMode;
    private int mMaxWidth;
    private int mMaxWidthMode;
    private int mMaximum;
    private int mMinMode;
    private int mMinWidth;
    private int mMinWidthMode;
    private int mMinimum;
    private android.text.method.MovementMethod mMovement;
    private int mOldMaxMode;
    private int mOldMaximum;
    private boolean mPreDrawRegistered;
    private boolean mPreventDefaultMovement;
    private boolean mRestartMarquee;
    private android.text.BoringLayout mSavedHintLayout;
    private android.text.BoringLayout mSavedLayout;
    private android.text.Layout mSavedMarqueeModeLayout;
    private android.widget.Scroller mScroller;
    private float mShadowDx;
    private float mShadowDy;
    private float mShadowRadius;
    private boolean mSingleLine;
    private float mSpacingAdd;
    private float mSpacingMult;
    private android.text.Spannable$Factory mSpannableFactory;
    private android.graphics.Rect mTempRect;
    private boolean mTemporaryDetach;
    private java.lang.CharSequence mText;
    private android.content.res.ColorStateList mTextColor;
    private android.text.TextDirectionHeuristic mTextDir;
    int mTextEditSuggestionItemLayout;
    private final android.text.TextPaint mTextPaint;
    int mTextSelectHandleLeftRes;
    int mTextSelectHandleRes;
    int mTextSelectHandleRightRes;
    private android.text.method.TransformationMethod mTransformation;
    private java.lang.CharSequence mTransformed;
    private boolean mUserSetTextScaleX;

    static void <clinit>()
    {
        android.graphics.Paint r0, $r5;
        android.graphics.RectF $r1;
        android.text.InputFilter[] $r2;
        android.text.SpannedString $r3;
        int[] $r4;
        android.text.BoringLayout$Metrics $r6;

        <android.widget.TextView: int VERY_WIDE> = 1048576;

        <android.widget.TextView: int SIGNED> = 2;

        <android.widget.TextView: int SERIF> = 2;

        <android.widget.TextView: int SANS> = 1;

        <android.widget.TextView: int PIXELS> = 2;

        <android.widget.TextView: int MONOSPACE> = 3;

        <android.widget.TextView: int MARQUEE_FADE_SWITCH_SHOW_FADE> = 2;

        <android.widget.TextView: int MARQUEE_FADE_SWITCH_SHOW_ELLIPSIS> = 1;

        <android.widget.TextView: int MARQUEE_FADE_NORMAL> = 0;

        <android.widget.TextView: java.lang.String LOG_TAG> = "TextView";

        <android.widget.TextView: int LINES> = 1;

        <android.widget.TextView: int ID_SELECT_ALL> = 16908319;

        <android.widget.TextView: int ID_PASTE> = 16908322;

        <android.widget.TextView: int ID_CUT> = 16908320;

        <android.widget.TextView: int ID_COPY> = 16908321;

        <android.widget.TextView: int EMS> = 1;

        <android.widget.TextView: int DECIMAL> = 4;

        <android.widget.TextView: boolean DEBUG_EXTRACT> = 0;

        <android.widget.TextView: int CHANGE_WATCHER_PRIORITY> = 100;

        <android.widget.TextView: int ANIMATED_SCROLL_GAP> = 250;

        $r1 = new android.graphics.RectF;

        specialinvoke $r1.<android.graphics.RectF: void <init>()>();

        <android.widget.TextView: android.graphics.RectF TEMP_RECTF> = $r1;

        $r2 = newarray (android.text.InputFilter)[0];

        <android.widget.TextView: android.text.InputFilter[] NO_FILTERS> = $r2;

        $r3 = new android.text.SpannedString;

        specialinvoke $r3.<android.text.SpannedString: void <init>(java.lang.CharSequence)>("");

        <android.widget.TextView: android.text.Spanned EMPTY_SPANNED> = $r3;

        $r4 = newarray (int)[1];

        $r4[0] = 16843597;

        <android.widget.TextView: int[] MULTILINE_STATE_SET> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0 = $r5;

        virtualinvoke r0.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke r0.<android.graphics.Paint: float measureText(java.lang.String)>("H");

        $r6 = new android.text.BoringLayout$Metrics;

        specialinvoke $r6.<android.text.BoringLayout$Metrics: void <init>()>();

        <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING> = $r6;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.TextView r0;
        android.content.Context r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842884);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.TextView r0;
        android.content.Context r1, $r67;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i18, i19, i20, i22, i23, i24, i25, i26, $i27, $i28, i29, i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        android.content.res.Resources r3;
        android.content.res.CompatibilityInfo r4;
        android.content.res.Resources$Theme r5;
        android.content.res.TypedArray r6, r7, r22, r25;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.lang.String r8, $r90, $r98, $r113;
        android.content.res.ColorStateList r9, r10, r11;
        java.lang.CharSequence r12, r13, r20, r21, $r102;
        android.graphics.drawable.Drawable r14, r15, r16, r17, r18, r19;
        android.widget.TextView$BufferType r23, $r41, $r84;
        android.text.method.TextKeyListener$Capitalize r24;
        short s17, s21;
        android.text.InputFilter[] r26, $r42, $r60;
        android.widget.Editor r27, r30, r34, $r53, $r54, $r56, $r62, $r64, $r68, $r69, $r71, $r72, $r73, $r74, $r76, $r77, $r83, $r85, $r87, $r88, $r91, $r92, $r93, $r96, $r101, $r104, $r105, $r107, $r108, $r109, $r110, $r112, $r114, $r121;
        java.lang.ClassNotFoundException r28, $r118;
        android.text.InputFilter$LengthFilter r29, $r63;
        java.lang.InstantiationException r31, $r123;
        java.lang.RuntimeException r32, r35, r38, $r117, $r124, $r127;
        java.lang.Class r36;
        java.lang.IllegalAccessException r37, $r126;
        org.xmlpull.v1.XmlPullParserException r39, $r122;
        java.io.IOException r40, $r125;
        android.text.Spannable$Factory $r43;
        android.text.Editable$Factory $r44;
        android.text.TextPaint $r45, $r47, $r48;
        android.util.DisplayMetrics $r46;
        int[] $r49, $r57, $r59, $r119;
        android.graphics.Paint $r50, $r52;
        android.text.method.MovementMethod $r51, $r58, $r94;
        android.text.method.TextKeyListener $r55, $r75;
        android.text.method.PasswordTransformationMethod $r61;
        android.text.method.AllCapsTransformationMethod $r65;
        android.view.ViewConfiguration $r66;
        android.text.method.KeyListener $r70, $r82, $r99, $r100;
        android.text.TextUtils$TruncateAt $r78, $r79, $r80, $r81;
        android.text.method.DialerKeyListener $r86;
        android.text.method.DigitsKeyListener $r89, $r95;
        java.lang.Object $r97;
        android.widget.Editor$InputContentType $r103, $r106, $r111, $r115, $r116;
        java.lang.IncompatibleClassChangeError $r120;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r44 = staticinvoke <android.text.Editable$Factory: android.text.Editable$Factory getInstance()>();

        r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory> = $r44;

        $r43 = staticinvoke <android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>();

        r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory> = $r43;

        r0.<android.widget.TextView: int mMarqueeRepeatLimit> = 3;

        r0.<android.widget.TextView: int mLastLayoutDirection> = -1;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

        $r41 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType> = $r41;

        r0.<android.widget.TextView: int mGravity> = 8388659;

        r0.<android.widget.TextView: boolean mLinksClickable> = 1;

        r0.<android.widget.TextView: float mSpacingMult> = 1.0F;

        r0.<android.widget.TextView: float mSpacingAdd> = 0.0F;

        r0.<android.widget.TextView: int mMaximum> = 2147483647;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        r0.<android.widget.TextView: int mMinimum> = 0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        $i27 = r0.<android.widget.TextView: int mMaximum>;

        r0.<android.widget.TextView: int mOldMaximum> = $i27;

        $i28 = r0.<android.widget.TextView: int mMaxMode>;

        r0.<android.widget.TextView: int mOldMaxMode> = $i28;

        r0.<android.widget.TextView: int mMaxWidth> = 2147483647;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        r0.<android.widget.TextView: int mMinWidth> = 0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = -1;

        r0.<android.widget.TextView: boolean mIncludePad> = 1;

        r0.<android.widget.TextView: int mDeferScroll> = -1;

        $r42 = <android.widget.TextView: android.text.InputFilter[] NO_FILTERS>;

        r0.<android.widget.TextView: android.text.InputFilter[] mFilters> = $r42;

        r0.<android.widget.TextView: int mHighlightColor> = 1714664933;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        r0.<android.widget.TextView: java.lang.CharSequence mText> = "";

        r3 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r4 = virtualinvoke r3.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $r47 = new android.text.TextPaint;

        specialinvoke $r47.<android.text.TextPaint: void <init>(int)>(1);

        r0.<android.widget.TextView: android.text.TextPaint mTextPaint> = $r47;

        $r48 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r46 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f4 = $r46.<android.util.DisplayMetrics: float density>;

        $r48.<android.text.TextPaint: float density> = $f4;

        $r45 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f3 = r4.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke $r45.<android.text.TextPaint: void setCompatibilityScaling(float)>($f3);

        $r52 = new android.graphics.Paint;

        specialinvoke $r52.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint> = $r52;

        $r50 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        $f5 = r4.<android.content.res.CompatibilityInfo: float applicationScale>;

        virtualinvoke $r50.<android.graphics.Paint: void setCompatibilityScaling(float)>($f5);

        $r51 = virtualinvoke r0.<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>();

        r0.<android.widget.TextView: android.text.method.MovementMethod mMovement> = $r51;

        r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation> = null;

        i1 = 15;

        i2 = -1;

        i3 = -1;

        r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r49 = <com.android.internal.R$styleable: int[] TextViewAppearance>;

        r6 = virtualinvoke r5.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r49, i0, 0);

        i4 = virtualinvoke r6.<android.content.res.TypedArray: int getResourceId(int,int)>(0, -1);

        virtualinvoke r6.<android.content.res.TypedArray: void recycle()>();

        r7 = null;

        if i4 == -1 goto label001;

        $r119 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r7 = virtualinvoke r5.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i4, $r119);

     label001:
        z0 = 0;

        f0 = 0.0F;

        f1 = 0.0F;

        r8 = null;

        f2 = 0.0F;

        i5 = 0;

        r9 = null;

        i6 = 0;

        r10 = null;

        r11 = null;

        if r7 == null goto label018;

        i23 = virtualinvoke r7.<android.content.res.TypedArray: int getIndexCount()>();

        i30 = 0;

     label002:
        if i30 >= i23 goto label017;

        i29 = virtualinvoke r7.<android.content.res.TypedArray: int getIndex(int)>(i30);

        tableswitch(i29)
        {
            case 0: goto label008;
            case 1: goto label009;
            case 2: goto label011;
            case 3: goto label005;
            case 4: goto label004;
            case 5: goto label006;
            case 6: goto label007;
            case 7: goto label013;
            case 8: goto label014;
            case 9: goto label015;
            case 10: goto label016;
            case 11: goto label012;
            case 12: goto label010;
            default: goto label003;
        };

     label003:
        i30 = i30 + 1;

        goto label002;

     label004:
        i6 = virtualinvoke r7.<android.content.res.TypedArray: int getColor(int,int)>(i29, i6);

        goto label003;

     label005:
        r9 = virtualinvoke r7.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i29);

        goto label003;

     label006:
        r10 = virtualinvoke r7.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i29);

        goto label003;

     label007:
        r11 = virtualinvoke r7.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i29);

        goto label003;

     label008:
        i1 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i29, i1);

        goto label003;

     label009:
        i2 = virtualinvoke r7.<android.content.res.TypedArray: int getInt(int,int)>(i29, -1);

        goto label003;

     label010:
        r8 = virtualinvoke r7.<android.content.res.TypedArray: java.lang.String getString(int)>(i29);

        goto label003;

     label011:
        i3 = virtualinvoke r7.<android.content.res.TypedArray: int getInt(int,int)>(i29, -1);

        goto label003;

     label012:
        z0 = virtualinvoke r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i29, 0);

        goto label003;

     label013:
        i5 = virtualinvoke r6.<android.content.res.TypedArray: int getInt(int,int)>(i29, 0);

        goto label003;

     label014:
        f0 = virtualinvoke r6.<android.content.res.TypedArray: float getFloat(int,float)>(i29, 0.0F);

        goto label003;

     label015:
        f1 = virtualinvoke r6.<android.content.res.TypedArray: float getFloat(int,float)>(i29, 0.0F);

        goto label003;

     label016:
        f2 = virtualinvoke r6.<android.content.res.TypedArray: float getFloat(int,float)>(i29, 0.0F);

        goto label003;

     label017:
        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

     label018:
        z1 = virtualinvoke r0.<android.widget.TextView: boolean getDefaultEditable()>();

        r12 = null;

        i7 = 0;

        r13 = null;

        z2 = 0;

        z3 = 0;

        i8 = -1;

        i9 = 0;

        z4 = 0;

        r16 = null;

        r17 = null;

        r14 = null;

        r15 = null;

        r18 = null;

        r19 = null;

        i10 = 0;

        i11 = -1;

        z5 = 0;

        i12 = -1;

        r20 = "";

        r21 = null;

        z6 = 0;

        i14 = 0;

        $r57 = <com.android.internal.R$styleable: int[] TextView>;

        r22 = virtualinvoke r5.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r57, i0, 0);

        i13 = virtualinvoke r22.<android.content.res.TypedArray: int getIndexCount()>();

        i16 = 0;

     label019:
        if i16 >= i13 goto label095;

        i26 = virtualinvoke r22.<android.content.res.TypedArray: int getIndex(int)>(i16);

        tableswitch(i26)
        {
            case 0: goto label067;
            case 1: goto label020;
            case 2: goto label072;
            case 3: goto label073;
            case 4: goto label074;
            case 5: goto label069;
            case 6: goto label068;
            case 7: goto label070;
            case 8: goto label071;
            case 9: goto label056;
            case 10: goto label051;
            case 11: goto label030;
            case 12: goto label031;
            case 13: goto label046;
            case 14: goto label040;
            case 15: goto label050;
            case 16: goto label044;
            case 17: goto label028;
            case 18: goto label053;
            case 19: goto label052;
            case 20: goto label061;
            case 21: goto label059;
            case 22: goto label039;
            case 23: goto label041;
            case 24: goto label042;
            case 25: goto label043;
            case 26: goto label045;
            case 27: goto label047;
            case 28: goto label048;
            case 29: goto label049;
            case 30: goto label054;
            case 31: goto label076;
            case 32: goto label055;
            case 33: goto label029;
            case 34: goto label058;
            case 35: goto label060;
            case 36: goto label063;
            case 37: goto label064;
            case 38: goto label065;
            case 39: goto label066;
            case 40: goto label023;
            case 41: goto label024;
            case 42: goto label025;
            case 43: goto label022;
            case 44: goto label027;
            case 45: goto label026;
            case 46: goto label021;
            case 47: goto label062;
            case 48: goto label033;
            case 49: goto label035;
            case 50: goto label032;
            case 51: goto label034;
            case 52: goto label038;
            case 53: goto label077;
            case 54: goto label078;
            case 55: goto label057;
            case 56: goto label079;
            case 57: goto label083;
            case 58: goto label084;
            case 59: goto label080;
            case 60: goto label081;
            case 61: goto label082;
            case 62: goto label089;
            case 63: goto label090;
            case 64: goto label091;
            case 65: goto label020;
            case 66: goto label020;
            case 67: goto label093;
            case 68: goto label020;
            case 69: goto label020;
            case 70: goto label088;
            case 71: goto label092;
            case 72: goto label094;
            case 73: goto label036;
            case 74: goto label037;
            case 75: goto label075;
            default: goto label020;
        };

     label020:
        i16 = i16 + 1;

        goto label019;

     label021:
        z1 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, z1);

        goto label020;

     label022:
        r12 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i26);

        goto label020;

     label023:
        i7 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, i7);

        goto label020;

     label024:
        r13 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i26);

        goto label020;

     label025:
        z2 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, z2);

        goto label020;

     label026:
        z3 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, z3);

        goto label020;

     label027:
        i8 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, i8);

        goto label020;

     label028:
        i9 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, i9);

        goto label020;

     label029:
        z4 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, z4);

        goto label020;

     label030:
        $i65 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, 0);

        r0.<android.widget.TextView: int mAutoLinkMask> = $i65;

        goto label020;

     label031:
        $z25 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, 1);

        r0.<android.widget.TextView: boolean mLinksClickable> = $z25;

        goto label020;

     label032:
        r16 = virtualinvoke r22.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i26);

        goto label020;

     label033:
        r17 = virtualinvoke r22.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i26);

        goto label020;

     label034:
        r14 = virtualinvoke r22.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i26);

        goto label020;

     label035:
        r15 = virtualinvoke r22.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i26);

        goto label020;

     label036:
        r18 = virtualinvoke r22.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i26);

        goto label020;

     label037:
        r19 = virtualinvoke r22.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(i26);

        goto label020;

     label038:
        i10 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, i10);

        goto label020;

     label039:
        $i52 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxLines(int)>($i52);

        goto label020;

     label040:
        $i60 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxHeight(int)>($i60);

        goto label020;

     label041:
        $i54 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setLines(int)>($i54);

        goto label020;

     label042:
        $i53 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setHeight(int)>($i53);

        goto label020;

     label043:
        $i56 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinLines(int)>($i56);

        goto label020;

     label044:
        $i62 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinHeight(int)>($i62);

        goto label020;

     label045:
        $i55 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxEms(int)>($i55);

        goto label020;

     label046:
        $i61 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setMaxWidth(int)>($i61);

        goto label020;

     label047:
        $i58 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setEms(int)>($i58);

        goto label020;

     label048:
        $i57 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setWidth(int)>($i57);

        goto label020;

     label049:
        $i59 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinEms(int)>($i59);

        goto label020;

     label050:
        $i63 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setMinWidth(int)>($i63);

        goto label020;

     label051:
        $i64 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, -1);

        virtualinvoke r0.<android.widget.TextView: void setGravity(int)>($i64);

        goto label020;

     label052:
        r21 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i26);

        goto label020;

     label053:
        r20 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i26);

        goto label020;

     label054:
        $z21 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, 0);

        if $z21 == 0 goto label020;

        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(1);

        goto label020;

     label055:
        z5 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, z5);

        goto label020;

     label056:
        i11 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, i11);

        goto label020;

     label057:
        $i47 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        $i48 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, $i47);

        virtualinvoke r0.<android.widget.TextView: void setMarqueeRepeatLimit(int)>($i48);

        goto label020;

     label058:
        $z22 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, 1);

        if $z22 != 0 goto label020;

        virtualinvoke r0.<android.widget.TextView: void setIncludeFontPadding(boolean)>(0);

        goto label020;

     label059:
        $z20 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, 1);

        if $z20 != 0 goto label020;

        virtualinvoke r0.<android.widget.TextView: void setCursorVisible(boolean)>(0);

        goto label020;

     label060:
        i12 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, -1);

        goto label020;

     label061:
        $f11 = virtualinvoke r22.<android.content.res.TypedArray: float getFloat(int,float)>(i26, 1.0F);

        virtualinvoke r0.<android.widget.TextView: void setTextScaleX(float)>($f11);

        goto label020;

     label062:
        $z19 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, 0);

        r0.<android.widget.TextView: boolean mFreezesText> = $z19;

        goto label020;

     label063:
        i5 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, 0);

        goto label020;

     label064:
        f0 = virtualinvoke r22.<android.content.res.TypedArray: float getFloat(int,float)>(i26, 0.0F);

        goto label020;

     label065:
        f1 = virtualinvoke r22.<android.content.res.TypedArray: float getFloat(int,float)>(i26, 0.0F);

        goto label020;

     label066:
        f2 = virtualinvoke r22.<android.content.res.TypedArray: float getFloat(int,float)>(i26, 0.0F);

        goto label020;

     label067:
        $z23 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        $z24 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, $z23);

        virtualinvoke r0.<android.widget.TextView: void setEnabled(boolean)>($z24);

        goto label020;

     label068:
        i6 = virtualinvoke r22.<android.content.res.TypedArray: int getColor(int,int)>(i26, i6);

        goto label020;

     label069:
        r9 = virtualinvoke r22.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i26);

        goto label020;

     label070:
        r10 = virtualinvoke r22.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i26);

        goto label020;

     label071:
        r11 = virtualinvoke r22.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(i26);

        goto label020;

     label072:
        i1 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, i1);

        goto label020;

     label073:
        i2 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, i2);

        goto label020;

     label074:
        i3 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, i3);

        goto label020;

     label075:
        r8 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.String getString(int)>(i26);

        goto label020;

     label076:
        z6 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, z6);

        goto label020;

     label077:
        $f7 = r0.<android.widget.TextView: float mSpacingAdd>;

        $i45 = (int) $f7;

        $i46 = virtualinvoke r22.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i26, $i45);

        $f8 = (float) $i46;

        r0.<android.widget.TextView: float mSpacingAdd> = $f8;

        goto label020;

     label078:
        $f9 = r0.<android.widget.TextView: float mSpacingMult>;

        $f10 = virtualinvoke r22.<android.content.res.TypedArray: float getFloat(int,float)>(i26, $f9);

        r0.<android.widget.TextView: float mSpacingMult> = $f10;

        goto label020;

     label079:
        i14 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, 0);

        goto label020;

     label080:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r105 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r105.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r104 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r116 = $r104.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r114 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r115 = $r114.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i51 = $r115.<android.widget.Editor$InputContentType: int imeOptions>;

        $i49 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, $i51);

        $r116.<android.widget.Editor$InputContentType: int imeOptions> = $i49;

        goto label020;

     label081:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r108 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r108.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r107 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r103 = $r107.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r102 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(i26);

        $r103.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel> = $r102;

        goto label020;

     label082:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r112 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r112.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r110 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r106 = $r110.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r109 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r111 = $r109.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i41 = $r111.<android.widget.Editor$InputContentType: int imeActionId>;

        $i40 = virtualinvoke r22.<android.content.res.TypedArray: int getInt(int,int)>(i26, $i41);

        $r106.<android.widget.Editor$InputContentType: int imeActionId> = $i40;

        goto label020;

     label083:
        $r113 = virtualinvoke r22.<android.content.res.TypedArray: java.lang.String getString(int)>(i26);

        virtualinvoke r0.<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>($r113);

        goto label020;

     label084:
        $i50 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(i26, 0);

        virtualinvoke r0.<android.widget.TextView: void setInputExtras(int)>($i50);

     label085:
        goto label020;

     label086:
        $r122 := @caughtexception;

        r39 = $r122;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Failure reading input extras", r39);

        goto label020;

     label087:
        $r125 := @caughtexception;

        r40 = $r125;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TextView", "Failure reading input extras", r40);

        goto label020;

     label088:
        $i38 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(i26, 0);

        r0.<android.widget.TextView: int mCursorDrawableRes> = $i38;

        goto label020;

     label089:
        $i44 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(i26, 0);

        r0.<android.widget.TextView: int mTextSelectHandleLeftRes> = $i44;

        goto label020;

     label090:
        $i42 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(i26, 0);

        r0.<android.widget.TextView: int mTextSelectHandleRightRes> = $i42;

        goto label020;

     label091:
        $i43 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(i26, 0);

        r0.<android.widget.TextView: int mTextSelectHandleRes> = $i43;

        goto label020;

     label092:
        $i39 = virtualinvoke r22.<android.content.res.TypedArray: int getResourceId(int,int)>(i26, 0);

        r0.<android.widget.TextView: int mTextEditSuggestionItemLayout> = $i39;

        goto label020;

     label093:
        $z18 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, 0);

        virtualinvoke r0.<android.widget.TextView: void setTextIsSelectable(boolean)>($z18);

        goto label020;

     label094:
        z0 = virtualinvoke r22.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i26, 0);

        goto label020;

     label095:
        virtualinvoke r22.<android.content.res.TypedArray: void recycle()>();

        r23 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        i15 = 4095 & i14;

        if i15 != 129 goto label121;

        z7 = 1;

     label096:
        if i15 != 225 goto label122;

        z9 = 1;

     label097:
        if i15 != 18 goto label123;

        z8 = 1;

     label098:
        if r12 == null goto label130;

     label099:
        $r98 = virtualinvoke r12.<java.lang.Object: java.lang.String toString()>();

        r36 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r98);

     label100:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r96 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r97 = virtualinvoke r36.<java.lang.Class: java.lang.Object newInstance()>();

        $r100 = (android.text.method.KeyListener) $r97;

        $r96.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r100;

     label101:
        r34 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

     label102:
        if i14 == 0 goto label127;

        i24 = i14;

     label103:
        r34.<android.widget.Editor: int mInputType> = i24;

     label104:
        $r53 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r53 == null goto label105;

        $r71 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r71.<android.widget.Editor: void adjustInputType(boolean,boolean,boolean,boolean)>(z6, z7, z9, z8);

     label105:
        if z4 == 0 goto label106;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r83 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r83.<android.widget.Editor: boolean mSelectAllOnFocus> = 1;

        $r84 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        if r23 != $r84 goto label106;

        r23 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

     label106:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r16, r17, r14, r15);

        specialinvoke r0.<android.widget.TextView: void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r18, r19);

        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablePadding(int)>(i10);

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>(z5);

        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z5, z5, z5);

        if z5 == 0 goto label107;

        $r82 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r82 != null goto label107;

        if i11 >= 0 goto label107;

        i11 = 3;

     label107:
        tableswitch(i11)
        {
            case 1: goto label160;
            case 2: goto label161;
            case 3: goto label162;
            case 4: goto label163;
            default: goto label108;
        };

     label108:
        if r9 == null goto label166;

     label109:
        virtualinvoke r0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>(r9);

        virtualinvoke r0.<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>(r10);

        virtualinvoke r0.<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>(r11);

        if i6 == 0 goto label110;

        virtualinvoke r0.<android.widget.TextView: void setHighlightColor(int)>(i6);

     label110:
        $f6 = (float) i1;

        specialinvoke r0.<android.widget.TextView: void setRawTextSize(float)>($f6);

        if z0 == 0 goto label111;

        $r65 = new android.text.method.AllCapsTransformationMethod;

        $r67 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r65.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r67);

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r65);

     label111:
        if z6 != 0 goto label112;

        if z7 != 0 goto label112;

        if z9 != 0 goto label112;

        if z8 == 0 goto label167;

     label112:
        $r61 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r61);

        i2 = 3;

     label113:
        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(r8, i2, i3);

        if i5 == 0 goto label114;

        virtualinvoke r0.<android.widget.TextView: void setShadowLayer(float,float,float,int)>(f2, f0, f1, i5);

     label114:
        if i12 < 0 goto label168;

        r26 = newarray (android.text.InputFilter)[1];

        $r63 = new android.text.InputFilter$LengthFilter;

        specialinvoke $r63.<android.text.InputFilter$LengthFilter: void <init>(int)>(i12);

        r29 = $r63;

        r26[0] = r29;

        virtualinvoke r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>(r26);

     label115:
        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r20, r23);

        if r21 == null goto label116;

        virtualinvoke r0.<android.widget.TextView: void setHint(java.lang.CharSequence)>(r21);

     label116:
        $r59 = <com.android.internal.R$styleable: int[] View>;

        r25 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r59, i0, 0);

        $r58 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r58 != null goto label117;

        $r70 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r70 == null goto label169;

     label117:
        z12 = 1;

     label118:
        z11 = z12;

        z10 = z12;

        i20 = virtualinvoke r25.<android.content.res.TypedArray: int getIndexCount()>();

        i19 = 0;

     label119:
        if i19 >= i20 goto label173;

        i18 = virtualinvoke r25.<android.content.res.TypedArray: int getIndex(int)>(i19);

        lookupswitch(i18)
        {
            case 18: goto label170;
            case 29: goto label171;
            case 30: goto label172;
            default: goto label120;
        };

     label120:
        i19 = i19 + 1;

        goto label119;

     label121:
        z7 = 0;

        goto label096;

     label122:
        z9 = 0;

        goto label097;

     label123:
        z8 = 0;

        goto label098;

     label124:
        $r118 := @caughtexception;

        r28 = $r118;

        $r117 = new java.lang.RuntimeException;

        specialinvoke $r117.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r28);

        r35 = $r117;

        throw r35;

     label125:
        $r123 := @caughtexception;

        r31 = $r123;

        $r124 = new java.lang.RuntimeException;

        specialinvoke $r124.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r31);

        r32 = $r124;

        throw r32;

     label126:
        $r126 := @caughtexception;

        r37 = $r126;

        $r127 = new java.lang.RuntimeException;

        specialinvoke $r127.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r37);

        r38 = $r127;

        throw r38;

     label127:
        $r101 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r99 = $r101.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        i25 = interfaceinvoke $r99.<android.text.method.KeyListener: int getInputType()>();

     label128:
        i24 = i25;

        goto label103;

     label129:
        $r120 := @caughtexception;

        $r121 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r121.<android.widget.Editor: int mInputType> = 1;

        goto label104;

     label130:
        if r13 == null goto label133;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r91 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r90 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        $r89 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>($r90);

        $r91.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r89;

        r27 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if i14 == 0 goto label132;

        i22 = i14;

     label131:
        r27.<android.widget.Editor: int mInputType> = i22;

        goto label104;

     label132:
        i22 = 1;

        goto label131;

     label133:
        if i14 == 0 goto label136;

        specialinvoke r0.<android.widget.TextView: void setInputType(int,boolean)>(i14, 1);

        $z17 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>(i14);

        if $z17 != 0 goto label135;

        z5 = 1;

     label134:
        goto label104;

     label135:
        z5 = 0;

        goto label134;

     label136:
        if z2 == 0 goto label137;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r87 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r86 = staticinvoke <android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>();

        $r87.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r86;

        $r85 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r85.<android.widget.Editor: int mInputType> = 3;

        goto label104;

     label137:
        if i7 == 0 goto label144;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        r30 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i34 = i7 & 2;

        if $i34 == 0 goto label142;

        z13 = 1;

     label138:
        $i37 = i7 & 4;

        if $i37 == 0 goto label143;

        z14 = 1;

     label139:
        $r95 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>(z13, z14);

        r30.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r95;

        s21 = 2;

        $i36 = i7 & 2;

        if $i36 == 0 goto label140;

        s21 = 4096 | s21;

     label140:
        $i35 = i7 & 4;

        if $i35 == 0 goto label141;

        s21 = 8192 | s21;

     label141:
        $r88 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r88.<android.widget.Editor: int mInputType> = s21;

        goto label104;

     label142:
        z13 = 0;

        goto label138;

     label143:
        z14 = 0;

        goto label139;

     label144:
        if z3 != 0 goto label145;

        if i8 == -1 goto label151;

     label145:
        s17 = 1;

        tableswitch(i8)
        {
            case 1: goto label148;
            case 2: goto label149;
            case 3: goto label150;
            default: goto label146;
        };

     label146:
        r24 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize NONE>;

     label147:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r56 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r55 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>(z3, r24);

        $r56.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r55;

        $r54 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r54.<android.widget.Editor: int mInputType> = s17;

        goto label104;

     label148:
        r24 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize SENTENCES>;

        s17 = 16384 | s17;

        goto label147;

     label149:
        r24 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize WORDS>;

        s17 = 8192 | s17;

        goto label147;

     label150:
        r24 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize CHARACTERS>;

        s17 = 4096 | s17;

        goto label147;

     label151:
        $z15 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z15 == 0 goto label153;

        $r77 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r77 == null goto label152;

        $r93 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r93.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = null;

        $r92 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r92.<android.widget.Editor: int mInputType> = 0;

     label152:
        r23 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        $r94 = staticinvoke <android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r94);

        goto label104;

     label153:
        if z1 == 0 goto label154;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r74 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r75 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        $r74.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = $r75;

        $r76 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r76.<android.widget.Editor: int mInputType> = 1;

        goto label104;

     label154:
        $r72 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r72 == null goto label155;

        $r73 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r73.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = null;

     label155:
        tableswitch(i9)
        {
            case 0: goto label157;
            case 1: goto label158;
            case 2: goto label159;
            default: goto label156;
        };

     label156:
        goto label104;

     label157:
        r23 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        goto label104;

     label158:
        r23 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label104;

     label159:
        r23 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        goto label104;

     label160:
        $r81 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r81);

        goto label108;

     label161:
        $r80 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MIDDLE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r80);

        goto label108;

     label162:
        $r79 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r79);

        goto label108;

     label163:
        $r66 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $z16 = virtualinvoke $r66.<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>();

        if $z16 == 0 goto label165;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

     label164:
        $r78 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r78);

        goto label108;

     label165:
        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

        goto label164;

     label166:
        r9 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(-16777216);

        goto label109;

     label167:
        $r62 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r62 == null goto label113;

        $r64 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i31 = $r64.<android.widget.Editor: int mInputType>;

        $i32 = 4095 & $i31;

        if $i32 != 129 goto label113;

        i2 = 3;

        goto label113;

     label168:
        $r60 = <android.widget.TextView: android.text.InputFilter[] NO_FILTERS>;

        virtualinvoke r0.<android.widget.TextView: void setFilters(android.text.InputFilter[])>($r60);

        goto label115;

     label169:
        z12 = 0;

        goto label118;

     label170:
        z12 = virtualinvoke r25.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i18, z12);

        goto label120;

     label171:
        z11 = virtualinvoke r25.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i18, z11);

        goto label120;

     label172:
        z10 = virtualinvoke r25.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i18, z10);

        goto label120;

     label173:
        virtualinvoke r25.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.widget.TextView: void setFocusable(boolean)>(z12);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(z11);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(z10);

        $r68 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r68 == null goto label174;

        $r69 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r69.<android.widget.Editor: void prepareCursorControllers()>();

     label174:
        $i33 = virtualinvoke r0.<android.widget.TextView: int getImportantForAccessibility()>();

        if $i33 != 0 goto label175;

        virtualinvoke r0.<android.widget.TextView: void setImportantForAccessibility(int)>(1);

     label175:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label084 to label085 with label086;
        catch java.io.IOException from label084 to label085 with label087;
        catch java.lang.ClassNotFoundException from label099 to label100 with label124;
        catch java.lang.InstantiationException from label100 to label101 with label125;
        catch java.lang.IllegalAccessException from label100 to label101 with label126;
        catch java.lang.IncompatibleClassChangeError from label101 to label102 with label129;
        catch java.lang.IncompatibleClassChangeError from label103 to label104 with label129;
        catch java.lang.IncompatibleClassChangeError from label127 to label128 with label129;
    }

    static android.content.Context access$1000(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        return $r1;
    }

    static void access$200(android.widget.TextView)
    {
        android.widget.TextView r0;

        r0 := @parameter0: android.widget.TextView;

        specialinvoke r0.<android.widget.TextView: void updateTextServicesLocaleLocked()>();

        return;
    }

    static android.text.Layout access$400(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        return $r1;
    }

    static android.content.Context access$500(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        return $r1;
    }

    static boolean access$600(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>(i0);

        return $z0;
    }

    static boolean access$700(android.widget.TextView)
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        return $z0;
    }

    static boolean access$800(android.widget.TextView)
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean shouldSpeakPasswordsForAccessibility()>();

        return $z0;
    }

    static void access$900(android.widget.TextView, java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    private void applySingleLine(boolean, boolean, boolean)
    {
        android.widget.TextView r0;
        boolean z0, z1, z2;
        android.text.method.SingleLineTransformationMethod $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r0.<android.widget.TextView: boolean mSingleLine> = z0;

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.widget.TextView: void setLines(int)>(1);

        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(1);

        if z1 == 0 goto label1;

        $r1 = staticinvoke <android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

     label1:
        return;

     label2:
        if z2 == 0 goto label3;

        virtualinvoke r0.<android.widget.TextView: void setMaxLines(int)>(2147483647);

     label3:
        virtualinvoke r0.<android.widget.TextView: void setHorizontallyScrolling(boolean)>(0);

        if z1 == 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

        return;
    }

    private void assumeLayout()
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        android.text.BoringLayout$Metrics $r1, $r2;

        r0 := @this: android.widget.TextView;

        $i3 = r0.<android.widget.TextView: int mRight>;

        $i2 = r0.<android.widget.TextView: int mLeft>;

        $i4 = $i3 - $i2;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i0 = $i6 - $i7;

        if i0 >= 1 goto label1;

        i0 = 0;

     label1:
        i1 = i0;

        $z0 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z0 == 0 goto label2;

        i0 = 1048576;

     label2:
        $r2 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i0, i1, $r2, $r1, i1, 0);

        return;
    }

    private boolean bringTextIntoView()
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        android.text.Layout$Alignment r2, $r3, $r4, $r5, $r6;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean isShowingHint()>();

        if $z0 == 0 goto label07;

        r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label01:
        $i10 = r0.<android.widget.TextView: int mGravity>;

        i0 = 112 & $i10;

        i1 = 0;

        if i0 != 80 goto label02;

        $i32 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        i1 = -1 + $i32;

     label02:
        r2 = virtualinvoke r1.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>(i1);

        i2 = virtualinvoke r1.<android.text.Layout: int getParagraphDirection(int)>(i1);

        $i13 = r0.<android.widget.TextView: int mRight>;

        $i11 = r0.<android.widget.TextView: int mLeft>;

        $i12 = $i13 - $i11;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i14 = $i12 - $i15;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i3 = $i14 - $i17;

        $i19 = r0.<android.widget.TextView: int mBottom>;

        $i16 = r0.<android.widget.TextView: int mTop>;

        $i18 = $i19 - $i16;

        $i21 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i20 = $i18 - $i21;

        $i22 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i4 = $i20 - $i22;

        i5 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if r2 != $r4 goto label09;

        if i2 != 1 goto label08;

        r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

     label03:
        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        if r2 != $r5 goto label14;

        $f2 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i1);

        $f6 = staticinvoke <android.util.FloatMath: float floor(float)>($f2);

        i8 = (int) $f6;

        $f7 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i1);

        $f5 = staticinvoke <android.util.FloatMath: float ceil(float)>($f7);

        i9 = (int) $f5;

        $i28 = i9 - i8;

        if $i28 >= i3 goto label12;

        $i31 = i9 + i8;

        $i29 = $i31 / 2;

        $i30 = i3 / 2;

        i6 = $i29 - $i30;

     label04:
        if i5 >= i4 goto label16;

        i7 = 0;

     label05:
        $i23 = r0.<android.widget.TextView: int mScrollX>;

        if i6 != $i23 goto label06;

        $i24 = r0.<android.widget.TextView: int mScrollY>;

        if i7 == $i24 goto label18;

     label06:
        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(i6, i7);

        return 1;

     label07:
        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        goto label01;

     label08:
        r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        goto label03;

     label09:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if r2 != $r3 goto label03;

        if i2 != 1 goto label11;

        r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

     label10:
        goto label03;

     label11:
        r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        goto label10;

     label12:
        if i2 >= 0 goto label13;

        i6 = i9 - i3;

        goto label04;

     label13:
        i6 = i8;

        goto label04;

     label14:
        $r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        if r2 != $r6 goto label15;

        $f3 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i1);

        $f4 = staticinvoke <android.util.FloatMath: float ceil(float)>($f3);

        $i27 = (int) $f4;

        i6 = $i27 - i3;

        goto label04;

     label15:
        $f0 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i1);

        $f1 = staticinvoke <android.util.FloatMath: float floor(float)>($f0);

        i6 = (int) $f1;

        goto label04;

     label16:
        $i25 = r0.<android.widget.TextView: int mGravity>;

        $i26 = 112 & $i25;

        if $i26 != 80 goto label17;

        i7 = i5 - i4;

        goto label05;

     label17:
        i7 = 0;

        goto label05;

     label18:
        return 0;
    }

    private boolean canMarquee()
    {
        android.widget.TextView r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0;
        android.text.Layout r1, $r2, $r3;
        byte b2, $b9;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TextView;

        $i4 = r0.<android.widget.TextView: int mRight>;

        $i3 = r0.<android.widget.TextView: int mLeft>;

        $i5 = $i4 - $i3;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i7 = $i5 - $i6;

        $i8 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i0 = $i7 - $i8;

        z0 = 0;

        if i0 <= 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r2.<android.text.Layout: float getLineWidth(int)>(0);

        $f1 = (float) i0;

        $b9 = $f0 cmpl $f1;

        if $b9 > 0 goto label1;

        i1 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        z0 = 0;

        if i1 == 0 goto label2;

        r1 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        z0 = 0;

        if r1 == null goto label2;

        $r3 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        $f2 = virtualinvoke $r3.<android.text.Layout: float getLineWidth(int)>(0);

        $f3 = (float) i0;

        b2 = $f2 cmpl $f3;

        z0 = 0;

        if b2 <= 0 goto label2;

     label1:
        z0 = 1;

     label2:
        return z0;
    }

    private boolean canSelectText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;
        android.widget.Editor $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = virtualinvoke $r3.<android.widget.Editor: boolean hasSelectionController()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void checkForRelayout()
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        android.view.ViewGroup$LayoutParams $r1, $r12, $r13;
        java.lang.CharSequence $r2;
        android.text.Layout $r3, $r4, $r5, $r6, $r11, $r14, $r15, $r16;
        android.text.BoringLayout$Metrics $r7, $r8;
        android.text.TextUtils$TruncateAt $r9, $r10;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i3 = $r1.<android.view.ViewGroup$LayoutParams: int width>;

        if $i3 != -2 goto label1;

        $i22 = r0.<android.widget.TextView: int mMaxWidthMode>;

        $i21 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i22 != $i21 goto label8;

        $i25 = r0.<android.widget.TextView: int mMaxWidth>;

        $i24 = r0.<android.widget.TextView: int mMinWidth>;

        if $i25 != $i24 goto label8;

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r2 == null goto label2;

        $r16 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r16 == null goto label8;

     label2:
        $i5 = r0.<android.widget.TextView: int mRight>;

        $i4 = r0.<android.widget.TextView: int mLeft>;

        $i6 = $i5 - $i4;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i10 = $i8 - $i9;

        if $i10 <= 0 goto label8;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i0 = virtualinvoke $r3.<android.text.Layout: int getHeight()>();

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i1 = virtualinvoke $r4.<android.text.Layout: int getWidth()>();

        $r6 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r6 != null goto label4;

        i2 = 0;

     label3:
        $r7 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r8 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i12 = r0.<android.widget.TextView: int mRight>;

        $i11 = r0.<android.widget.TextView: int mLeft>;

        $i13 = $i12 - $i11;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i14 = $i13 - $i15;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i16 = $i14 - $i17;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i1, i2, $r7, $r8, $i16, 0);

        $r9 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r10 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r9 == $r10 goto label7;

        $r12 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i19 = $r12.<android.view.ViewGroup$LayoutParams: int height>;

        if $i19 == -2 goto label5;

        $r13 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i23 = $r13.<android.view.ViewGroup$LayoutParams: int height>;

        if $i23 == -1 goto label5;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;

     label4:
        $r5 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        i2 = virtualinvoke $r5.<android.text.Layout: int getWidth()>();

        goto label3;

     label5:
        $r11 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i18 = virtualinvoke $r11.<android.text.Layout: int getHeight()>();

        if $i18 != i0 goto label7;

        $r14 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r14 == null goto label6;

        $r15 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $i20 = virtualinvoke $r15.<android.text.Layout: int getHeight()>();

        if $i20 != i0 goto label7;

     label6:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;

     label7:
        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;

     label8:
        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    private void checkForResize()
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.ViewGroup$LayoutParams $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        z0 = 0;

        if r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        i0 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        z0 = 0;

        if i0 != -2 goto label1;

        z0 = 1;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        $r3 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i1 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 != -2 goto label4;

        $i6 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        $i7 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        if $i6 == $i7 goto label2;

        z0 = 1;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

     label3:
        return;

     label4:
        $r4 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        $i2 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        if $i2 != -1 goto label2;

        $i3 = r0.<android.widget.TextView: int mDesiredHeightAtMeasure>;

        if $i3 < 0 goto label2;

        $i4 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        $i5 = r0.<android.widget.TextView: int mDesiredHeightAtMeasure>;

        if $i4 == $i5 goto label2;

        z0 = 1;

        goto label2;
    }

    private boolean compressText(float)
    {
        android.widget.TextView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0, $z1;
        byte $b0, $b2, $b3, $b4;
        android.text.Layout $r1, $r3;
        int $i1;
        android.text.TextPaint $r2, $r5;
        android.widget.TextView$2 $r4;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $b0 = f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i1 != 1 goto label1;

        $z1 = r0.<android.widget.TextView: boolean mUserSetTextScaleX>;

        if $z1 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f2 = virtualinvoke $r2.<android.text.TextPaint: float getTextScaleX()>();

        $b2 = $f2 cmpl 1.0F;

        if $b2 != 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f3 = virtualinvoke $r3.<android.text.Layout: float getLineWidth(int)>(0);

        $f4 = 1.0F + $f3;

        $f5 = $f4 - f0;

        f1 = $f5 / f0;

        $b4 = f1 cmpl 0.0F;

        if $b4 <= 0 goto label1;

        $b3 = f1 cmpg 0.07F;

        if $b3 > 0 goto label1;

        $r5 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f7 = 1.0F - f1;

        $f6 = $f7 - 0.005F;

        virtualinvoke $r5.<android.text.TextPaint: void setTextScaleX(float)>($f6);

        $r4 = new android.widget.TextView$2;

        specialinvoke $r4.<android.widget.TextView$2: void <init>(android.widget.TextView)>(r0);

        virtualinvoke r0.<android.widget.TextView: boolean post(java.lang.Runnable)>($r4);

        return 1;
    }

    private void convertFromViewportToContentCoordinates(android.graphics.Rect)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Rect;

        i0 = virtualinvoke r0.<android.widget.TextView: int viewportToContentHorizontalOffset()>();

        $i2 = r1.<android.graphics.Rect: int left>;

        $i3 = i0 + $i2;

        r1.<android.graphics.Rect: int left> = $i3;

        $i4 = r1.<android.graphics.Rect: int right>;

        $i5 = i0 + $i4;

        r1.<android.graphics.Rect: int right> = $i5;

        i1 = virtualinvoke r0.<android.widget.TextView: int viewportToContentVerticalOffset()>();

        $i6 = r1.<android.graphics.Rect: int top>;

        $i7 = i1 + $i6;

        r1.<android.graphics.Rect: int top> = $i7;

        $i8 = r1.<android.graphics.Rect: int bottom>;

        $i9 = i1 + $i8;

        r1.<android.graphics.Rect: int bottom> = $i9;

        return;
    }

    private void createEditorIfNeeded()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        $r2 = new android.widget.Editor;

        specialinvoke $r2.<android.widget.Editor: void <init>(android.widget.TextView)>(r0);

        r0.<android.widget.TextView: android.widget.Editor mEditor> = $r2;

     label1:
        return;
    }

    private static int desired(android.text.Layout)
    {
        android.text.Layout r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.lang.CharSequence r1;
        float f0, $f1, $f2;
        char $c7;

        r0 := @parameter0: android.text.Layout;

        i0 = virtualinvoke r0.<android.text.Layout: int getLineCount()>();

        r1 = virtualinvoke r0.<android.text.Layout: java.lang.CharSequence getText()>();

        f0 = 0.0F;

        i1 = 0;

     label1:
        $i3 = i0 - 1;

        if i1 >= $i3 goto label3;

        $i5 = virtualinvoke r0.<android.text.Layout: int getLineEnd(int)>(i1);

        $i6 = -1 + $i5;

        $c7 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i6);

        if $c7 == 10 goto label2;

        return -1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        i2 = 0;

     label4:
        if i2 >= i0 goto label5;

        $f2 = virtualinvoke r0.<android.text.Layout: float getLineWidth(int)>(i2);

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f2);

        i2 = i2 + 1;

        goto label4;

     label5:
        $f1 = staticinvoke <android.util.FloatMath: float ceil(float)>(f0);

        $i4 = (int) $f1;

        return $i4;
    }

    private int doKeyDown(int, android.view.KeyEvent, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i3, $i4, $i5, $i6;
        android.view.KeyEvent r1, r2;
        byte b1, b2;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.lang.Throwable r4, $r41;
        android.widget.Editor $r6, $r15, $r17, $r19, $r25, $r27, $r28, $r31, $r32, $r39, $r40;
        android.text.method.MovementMethod $r7, $r11, $r14;
        android.text.Layout $r8;
        android.text.Spannable $r9, $r12;
        java.lang.CharSequence $r10, $r13, $r16, $r23;
        android.text.method.KeyListener $r18, $r21, $r22;
        android.text.Editable $r20, $r24;
        android.widget.Editor$InputContentType $r26, $r30, $r34, $r35;
        android.widget.TextView$OnEditorActionListener $r29, $r33;
        android.view.ActionMode $r36;
        java.lang.AbstractMethodError $r37, $r38;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        r2 := @parameter2: android.view.KeyEvent;

        b1 = -1;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z5 != 0 goto label02;

        b1 = 0;

     label01:
        return b1;

     label02:
        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label03;

        $z17 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z17 != 0 goto label03;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 0;

     label03:
        lookupswitch(i0)
        {
            case 4: goto label13;
            case 23: goto label10;
            case 61: goto label11;
            case 66: goto label07;
            default: goto label04;
        };

     label04:
        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r6 == null goto label18;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r18 = $r17.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r18 == null goto label18;

        virtualinvoke r0.<android.widget.TextView: void resetErrorChangedFlag()>();

        z2 = 1;

        if r2 == null goto label15;

     label05:
        virtualinvoke r0.<android.widget.TextView: void beginBatchEdit()>();

        $r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r22 = $r19.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r23 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r24 = (android.text.Editable) $r23;

        z4 = interfaceinvoke $r22.<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>(r0, $r24, r2);

        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

     label06:
        z2 = 0;

        if z4 == 0 goto label14;

        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        return b1;

     label07:
        $z6 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z6 == 0 goto label04;

        $r25 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r25 == null goto label08;

        $r27 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r26 = $r27.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r26 == null goto label08;

        $r31 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r30 = $r31.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r29 = $r30.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r29 == null goto label08;

        $r28 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r34 = $r28.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r33 = $r34.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z13 = interfaceinvoke $r33.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, 0, r1);

        if $z13 == 0 goto label08;

        $r32 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r35 = $r32.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r35.<android.widget.Editor$InputContentType: boolean enterDown> = 1;

        return b1;

     label08:
        $i5 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i6 = 16 & $i5;

        if $i6 != 0 goto label09;

        $z11 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z11 == 0 goto label04;

     label09:
        $z12 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z12 == 0 goto label01;

        return 0;

     label10:
        $z18 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z18 == 0 goto label04;

        $z19 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z19 == 0 goto label04;

        return 0;

     label11:
        $z16 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z16 != 0 goto label12;

        $z14 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z14 == 0 goto label04;

     label12:
        $z15 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnTab()>();

        if $z15 == 0 goto label04;

        return 0;

     label13:
        $r39 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r39 == null goto label04;

        $r40 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r36 = $r40.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        if $r36 == null goto label04;

        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        return b1;

     label14:
        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

     label15:
        if z2 == 0 goto label18;

        virtualinvoke r0.<android.widget.TextView: void beginBatchEdit()>();

        $r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r21 = $r15.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r16 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r20 = (android.text.Editable) $r16;

        z3 = interfaceinvoke $r21.<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r20, i0, r1);

        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

        if z3 == 0 goto label18;

        return 1;

     label16:
        $r38 := @caughtexception;

        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        goto label15;

     label17:
        $r41 := @caughtexception;

        r4 = $r41;

        virtualinvoke r0.<android.widget.TextView: void endBatchEdit()>();

        throw r4;

     label18:
        $r7 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r7 == null goto label23;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r8 == null goto label23;

        z0 = 1;

        if r2 == null goto label21;

     label19:
        $r14 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r12 = (android.text.Spannable) $r13;

        z1 = interfaceinvoke $r14.<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>(r0, $r12, r2);

     label20:
        z0 = 0;

        if z1 != 0 goto label01;

     label21:
        if z0 == 0 goto label23;

        $r11 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Spannable) $r10;

        $z9 = interfaceinvoke $r11.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r9, i0, r1);

        if $z9 == 0 goto label23;

        $i4 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i4 != 0 goto label22;

        $z10 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z10 != 0 goto label22;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 1;

     label22:
        return 2;

     label23:
        $z7 = r0.<android.widget.TextView: boolean mPreventDefaultMovement>;

        if $z7 == 0 goto label25;

        $z8 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z8 != 0 goto label25;

        b2 = b1;

     label24:
        return b2;

     label25:
        b2 = 0;

        goto label24;

     label26:
        $r37 := @caughtexception;

        goto label21;

        catch java.lang.AbstractMethodError from label05 to label06 with label16;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.AbstractMethodError from label19 to label20 with label26;
    }

    private void fixFocusableAndClickableSettings()
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod $r1;
        android.widget.Editor $r2, $r3;
        android.text.method.KeyListener $r4;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r1 != null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r4 == null goto label2;

     label1:
        virtualinvoke r0.<android.widget.TextView: void setFocusable(boolean)>(1);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(1);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(1);

        return;

     label2:
        virtualinvoke r0.<android.widget.TextView: void setFocusable(boolean)>(0);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(0);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(0);

        return;
    }

    private int getBottomVerticalOffset(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.text.Layout r1, $r3;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $i4 = r0.<android.widget.TextView: int mGravity>;

        i0 = 112 & $i4;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if z0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i7 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i7 != 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label1;

        r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label1:
        i1 = 0;

        if i0 == 80 goto label2;

        i2 = specialinvoke r0.<android.widget.TextView: int getBoxHeight(android.text.Layout)>(r1);

        i3 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        i1 = 0;

        if i3 >= i2 goto label2;

        if i0 != 48 goto label3;

        i1 = i2 - i3;

     label2:
        return i1;

     label3:
        $i5 = i2 - i3;

        $i6 = $i5 >> 1;

        return $i6;
    }

    private int getBoxHeight(android.text.Layout)
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r4;
        android.graphics.Insets r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.ViewParent $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Layout;

        $r3 = r0.<android.widget.TextView: android.view.ViewParent mParent>;

        $z0 = staticinvoke <android.widget.TextView: boolean isLayoutModeOptical(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        r2 = virtualinvoke r0.<android.widget.TextView: android.graphics.Insets getOpticalInsets()>();

     label1:
        $r4 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if r1 != $r4 goto label4;

        $i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i10 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i0 = $i9 + $i10;

     label2:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getMeasuredHeight()>();

        $i5 = $i3 - i0;

        $i4 = r2.<android.graphics.Insets: int top>;

        $i7 = $i5 + $i4;

        $i6 = r2.<android.graphics.Insets: int bottom>;

        $i8 = $i7 + $i6;

        return $i8;

     label3:
        r2 = <android.graphics.Insets: android.graphics.Insets NONE>;

        goto label1;

     label4:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i0 = $i1 + $i2;

        goto label2;
    }

    private int getDesiredHeight()
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, $i1, $i2;
        android.text.Layout r1, $r2;
        android.text.TextUtils$TruncateAt $r3;

        r0 := @this: android.widget.TextView;

        z0 = 1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i0 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>($r2, z0);

        r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r3 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r3 == null goto label2;

     label1:
        $i1 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)>(r1, z0);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i1);

        return $i2;

     label2:
        z0 = 0;

        goto label1;
    }

    private int getDesiredHeight(android.text.Layout, boolean)
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        boolean z0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        android.widget.TextView$Drawables r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Layout;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<android.text.Layout: int getLineCount()>();

        $i5 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i1 = $i5 + $i6;

        i2 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i0);

        r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r2 == null goto label2;

        $i25 = r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i23 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i25);

        $i24 = r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i23, $i24);

     label2:
        i3 = i2 + i1;

        $i7 = r0.<android.widget.TextView: int mMaxMode>;

        if $i7 != 1 goto label6;

        if z0 == 0 goto label4;

        $i19 = r0.<android.widget.TextView: int mMaximum>;

        if i0 <= $i19 goto label4;

        $i18 = r0.<android.widget.TextView: int mMaximum>;

        i4 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>($i18);

        if r2 == null goto label3;

        $i20 = r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i22 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i20);

        $i21 = r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>($i22, $i21);

     label3:
        i3 = i4 + i1;

        i0 = r0.<android.widget.TextView: int mMaximum>;

     label4:
        $i10 = r0.<android.widget.TextView: int mMinMode>;

        if $i10 != 1 goto label7;

        $i12 = r0.<android.widget.TextView: int mMinimum>;

        if i0 >= $i12 goto label5;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        $i14 = r0.<android.widget.TextView: int mMinimum>;

        $i17 = $i14 - i0;

        $i16 = $i15 * $i17;

        i3 = i3 + $i16;

     label5:
        $i11 = virtualinvoke r0.<android.widget.TextView: int getSuggestedMinimumHeight()>();

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i11);

        return $i13;

     label6:
        $i8 = r0.<android.widget.TextView: int mMaximum>;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i8);

        goto label4;

     label7:
        $i9 = r0.<android.widget.TextView: int mMinimum>;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i9);

        goto label5;
    }

    private void getInterestingRect(android.graphics.Rect, int)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.text.Layout $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TextView: void convertFromViewportToContentCoordinates(android.graphics.Rect)>(r1);

        if i0 != 0 goto label1;

        $i6 = r1.<android.graphics.Rect: int top>;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i8 = $i6 - $i7;

        r1.<android.graphics.Rect: int top> = $i8;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i2 = -1 + $i1;

        if i0 != $i2 goto label2;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i5 = $i3 + $i4;

        r1.<android.graphics.Rect: int bottom> = $i5;

     label2:
        return;
    }

    private android.text.Layout$Alignment getLayoutAlignment()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.text.Layout$Alignment $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTextAlignment()>();

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label14;
            default: goto label01;
        };

     label01:
        $r1 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        return $r1;

     label02:
        $i3 = r0.<android.widget.TextView: int mGravity>;

        $i4 = 8388615 & $i3;

        lookupswitch($i4)
        {
            case 1: goto label08;
            case 3: goto label06;
            case 5: goto label07;
            case 8388611: goto label04;
            case 8388613: goto label05;
            default: goto label03;
        };

     label03:
        $r13 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        return $r13;

     label04:
        $r10 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        return $r10;

     label05:
        $r9 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        return $r9;

     label06:
        $r11 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        return $r11;

     label07:
        $r12 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        return $r12;

     label08:
        $r14 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        return $r14;

     label09:
        $r8 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        return $r8;

     label10:
        $r7 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        return $r7;

     label11:
        $r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        return $r6;

     label12:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i2 != 1 goto label13;

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        return $r5;

     label13:
        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        return $r4;

     label14:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        if $i1 != 1 goto label15;

        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_LEFT>;

        return $r3;

     label15:
        $r2 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        return $r2;
    }

    private int getOffsetAtCoordinate(int, float)
    {
        android.widget.TextView r0;
        int i0, $i1;
        float f0, f1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 = virtualinvoke r0.<android.widget.TextView: float convertToLocalHorizontalCoordinate(float)>(f0);

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $i1 = virtualinvoke $r1.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i0, f1);

        return $i1;
    }

    public static int getTextColor(android.content.Context, android.content.res.TypedArray, int)
    {
        android.content.Context r0;
        android.content.res.TypedArray r1;
        int i0, $i1;
        android.content.res.ColorStateList r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.TypedArray;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>(r0, r1);

        if r2 != null goto label1;

        return i0;

     label1:
        $i1 = virtualinvoke r2.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i1;
    }

    public static android.content.res.ColorStateList getTextColors(android.content.Context, android.content.res.TypedArray)
    {
        android.content.Context r0;
        android.content.res.TypedArray r1, r3;
        android.content.res.ColorStateList r2;
        int i0;
        int[] $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.TypedArray;

        r2 = virtualinvoke r1.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        if r2 != null goto label1;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(1, -1);

        if i0 == -1 goto label1;

        $r4 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r3 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, $r4);

        r2 = virtualinvoke r3.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label1:
        return r2;
    }

    private java.util.Locale getTextServicesLocale(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        java.util.Locale $r1, $r2, $r3;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void updateTextServicesLocaleAsync()>();

        $r1 = r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache>;

        if $r1 != null goto label1;

        if z0 != 0 goto label1;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r3;

     label1:
        $r2 = r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache>;

        return $r2;
    }

    private android.graphics.Path getUpdatedHighlightPath()
    {
        android.widget.TextView r0;
        android.graphics.Paint r1;
        int i0, i1, $i3, $i8;
        android.text.method.MovementMethod r2;
        android.graphics.Path r3, $r6, $r7, $r8, $r9, $r10, $r16, $r17, $r18, $r19;
        android.widget.Editor r4, $r12, $r13, $r21;
        boolean z0, z1, $z2, $z3, $z4;
        byte b2;
        android.graphics.Paint$Style $r5, $r14;
        android.text.Layout $r11, $r20;
        long $l4, $l5, $l6, $l7;
        java.lang.CharSequence $r15;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        r3 = null;

        if r2 == null goto label4;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z2 != 0 goto label1;

        z1 = virtualinvoke r0.<android.widget.TextView: boolean isPressed()>();

        r3 = null;

        if z1 == 0 goto label4;

     label1:
        r3 = null;

        if i0 < 0 goto label4;

        if i0 != i1 goto label5;

        r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r3 = null;

        if r4 == null goto label4;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        z0 = virtualinvoke $r12.<android.widget.Editor: boolean isCursorVisible()>();

        r3 = null;

        if z0 == 0 goto label4;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $l6 = $r13.<android.widget.Editor: long mShowCursor>;

        $l5 = $l4 - $l6;

        $l7 = $l5 % 1000L;

        b2 = $l7 cmp 500L;

        r3 = null;

        if b2 >= 0 goto label4;

        $z4 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z4 == 0 goto label3;

        $r17 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r17 != null goto label2;

        $r19 = new android.graphics.Path;

        specialinvoke $r19.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r19;

     label2:
        $r18 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r18.<android.graphics.Path: void reset()>();

        $r20 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r16 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke $r20.<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>(i0, $r16, $r15);

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r21.<android.widget.Editor: void updateCursorsPositions()>();

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label3:
        $i8 = r0.<android.widget.TextView: int mCurTextColor>;

        virtualinvoke r1.<android.graphics.Paint: void setColor(int)>($i8);

        $r14 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r14);

        r3 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

     label4:
        return r3;

     label5:
        $z3 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z3 == 0 goto label7;

        $r6 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r6 != null goto label6;

        $r10 = new android.graphics.Path;

        specialinvoke $r10.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r10;

     label6:
        $r9 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r9.<android.graphics.Path: void reset()>();

        $r11 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r8 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r11.<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>(i0, i1, $r8);

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label7:
        $i3 = r0.<android.widget.TextView: int mHighlightColor>;

        virtualinvoke r1.<android.graphics.Paint: void setColor(int)>($i3);

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r7 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        return $r7;
    }

    private boolean hasPasswordTransformationMethod()
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod $r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $z0 = $r1 instanceof android.text.method.PasswordTransformationMethod;

        return $z0;
    }

    private void invalidateCursor(int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= 0 goto label1;

        if i1 >= 0 goto label1;

        if i2 < 0 goto label2;

     label1:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, i2);

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, i2);

        virtualinvoke r0.<android.widget.TextView: void invalidateRegion(int,int,boolean)>($i4, $i6, 1);

     label2:
        return;
    }

    private static boolean isMultilineInputType(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = 131087 & i0;

        if $i1 != 131073 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isPasswordInputType(int)
    {
        int i0, i1;

        i0 := @parameter0: int;

        i1 = i0 & 4095;

        if i1 == 129 goto label1;

        if i1 == 225 goto label1;

        if i1 != 18 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean isShowingHint()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isVisiblePasswordInputType(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 4095;

        if $i1 != 145 goto label1;

        return 1;

     label1:
        return 0;
    }

    private android.text.Layout makeSingleLayout(int, android.text.BoringLayout$Metrics, int, android.text.Layout$Alignment, boolean, android.text.TextUtils$TruncateAt, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        android.text.BoringLayout$Metrics r1, r4, $r49;
        android.text.Layout$Alignment r2;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11;
        android.text.TextUtils$TruncateAt r3, r26;
        java.lang.CharSequence r5, r8, r11, r13, r16, r19, r24, r25, $r28, $r33, $r34, $r35, $r36, $r45;
        android.text.TextPaint r6, r9, r12, r15, r17, r21, r23, $r29, $r38, $r46;
        android.text.TextDirectionHeuristic r7, r10, r22, $r30, $r37, $r48;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, $f14, $f15, $f16, $f17;
        android.text.BoringLayout r14, r18, $r39, $r40, $r41, $r43, $r44;
        android.text.Layout r20;
        android.text.StaticLayout $r27, $r31, $r32, $r42;
        android.text.method.KeyListener $r47;
        android.text.DynamicLayout $r50;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.text.BoringLayout$Metrics;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.Layout$Alignment;

        z0 := @parameter4: boolean;

        r3 := @parameter5: android.text.TextUtils$TruncateAt;

        z1 := @parameter6: boolean;

        $r28 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z10 = $r28 instanceof android.text.Spannable;

        if $z10 == 0 goto label04;

        r25 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        r24 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        r23 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r22 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        f13 = r0.<android.widget.TextView: float mSpacingMult>;

        f12 = r0.<android.widget.TextView: float mSpacingAdd>;

        z8 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r47 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r47 != null goto label03;

        r26 = r3;

     label01:
        $r50 = new android.text.DynamicLayout;

        specialinvoke $r50.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r25, r24, r23, i0, r2, r22, f13, f12, z8, r26, i1);

        r20 = $r50;

     label02:
        return r20;

     label03:
        r26 = null;

        goto label01;

     label04:
        r4 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r1 != r4 goto label05;

        $r45 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r46 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r48 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r49 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring>;

        r1 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r45, $r46, $r48, $r49);

        if r1 == null goto label05;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = r1;

     label05:
        if r1 == null goto label15;

        $i6 = r1.<android.text.BoringLayout$Metrics: int width>;

        if $i6 > i0 goto label09;

        if r3 == null goto label06;

        $i10 = r1.<android.text.BoringLayout$Metrics: int width>;

        if $i10 > i1 goto label09;

     label06:
        if z1 == 0 goto label08;

        $r40 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r40 == null goto label08;

        r18 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        r19 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        r21 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        f11 = r0.<android.widget.TextView: float mSpacingMult>;

        f10 = r0.<android.widget.TextView: float mSpacingAdd>;

        z7 = r0.<android.widget.TextView: boolean mIncludePad>;

        r20 = virtualinvoke r18.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>(r19, r21, i0, r2, f11, f10, r1, z7);

     label07:
        if z1 == 0 goto label02;

        $r41 = (android.text.BoringLayout) r20;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout> = $r41;

        return r20;

     label08:
        r16 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        r17 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        f8 = r0.<android.widget.TextView: float mSpacingMult>;

        f9 = r0.<android.widget.TextView: float mSpacingAdd>;

        z6 = r0.<android.widget.TextView: boolean mIncludePad>;

        r20 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>(r16, r17, i0, r2, f8, f9, r1, z6);

        goto label07;

     label09:
        if z0 == 0 goto label11;

        $i9 = r1.<android.text.BoringLayout$Metrics: int width>;

        if $i9 > i0 goto label11;

        if z1 == 0 goto label10;

        $r43 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r43 == null goto label10;

        r14 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        r13 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        r15 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        f7 = r0.<android.widget.TextView: float mSpacingMult>;

        f6 = r0.<android.widget.TextView: float mSpacingAdd>;

        z5 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r39 = virtualinvoke r14.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>(r13, r15, i0, r2, f7, f6, r1, z5, r3, i1);

        return $r39;

     label10:
        r11 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        r12 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        f4 = r0.<android.widget.TextView: float mSpacingMult>;

        f5 = r0.<android.widget.TextView: float mSpacingAdd>;

        z4 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r44 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>(r11, r12, i0, r2, f4, f5, r1, z4, r3, i1);

        return $r44;

     label11:
        if z0 == 0 goto label14;

        r8 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r36 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        i4 = interfaceinvoke $r36.<java.lang.CharSequence: int length()>();

        r9 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r10 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        f2 = r0.<android.widget.TextView: float mSpacingMult>;

        f3 = r0.<android.widget.TextView: float mSpacingAdd>;

        z3 = r0.<android.widget.TextView: boolean mIncludePad>;

        $i8 = r0.<android.widget.TextView: int mMaxMode>;

        if $i8 != 1 goto label13;

        i5 = r0.<android.widget.TextView: int mMaximum>;

     label12:
        $r42 = new android.text.StaticLayout;

        specialinvoke $r42.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r8, 0, i4, r9, i0, r2, r10, f2, f3, z3, r3, i1, i5);

        return $r42;

     label13:
        i5 = 2147483647;

        goto label12;

     label14:
        $r32 = new android.text.StaticLayout;

        $r35 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r38 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r37 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f17 = r0.<android.widget.TextView: float mSpacingMult>;

        $f16 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z11 = r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r32.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>($r35, $r38, i0, r2, $r37, $f17, $f16, $z11);

        return $r32;

     label15:
        if z0 == 0 goto label18;

        r5 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r34 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        i2 = interfaceinvoke $r34.<java.lang.CharSequence: int length()>();

        r6 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r7 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        f0 = r0.<android.widget.TextView: float mSpacingMult>;

        f1 = r0.<android.widget.TextView: float mSpacingAdd>;

        z2 = r0.<android.widget.TextView: boolean mIncludePad>;

        $i7 = r0.<android.widget.TextView: int mMaxMode>;

        if $i7 != 1 goto label17;

        i3 = r0.<android.widget.TextView: int mMaximum>;

     label16:
        $r31 = new android.text.StaticLayout;

        specialinvoke $r31.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r5, 0, i2, r6, i0, r2, r7, f0, f1, z2, r3, i1, i3);

        return $r31;

     label17:
        i3 = 2147483647;

        goto label16;

     label18:
        $r27 = new android.text.StaticLayout;

        $r33 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r29 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r30 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $f14 = r0.<android.widget.TextView: float mSpacingMult>;

        $f15 = r0.<android.widget.TextView: float mSpacingAdd>;

        $z9 = r0.<android.widget.TextView: boolean mIncludePad>;

        specialinvoke $r27.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>($r33, $r29, i0, r2, $r30, $f14, $f15, $z9);

        return $r27;
    }

    private void nullLayouts()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2, $r6, $r9;
        boolean $z0, $z1;
        android.widget.Editor $r3, $r4;
        android.text.BoringLayout $r5, $r7, $r8, $r10;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $z0 = $r1 instanceof android.text.BoringLayout;

        if $z0 == 0 goto label1;

        $r8 = r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout>;

        if $r8 != null goto label1;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r10 = (android.text.BoringLayout) $r9;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedLayout> = $r10;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $z1 = $r2 instanceof android.text.BoringLayout;

        if $z1 == 0 goto label2;

        $r5 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r5 != null goto label2;

        $r6 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r7 = (android.text.BoringLayout) $r6;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout> = $r7;

     label2:
        r0.<android.widget.TextView: android.text.Layout mHintLayout> = null;

        r0.<android.widget.TextView: android.text.Layout mLayout> = null;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = null;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = null;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = null;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

     label3:
        return;
    }

    private void paste(int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i4, $i5, $i6;
        android.content.ClipData r1;
        boolean z0;
        java.lang.CharSequence r2, $r8, $r10, $r15, $r17;
        long l3;
        android.content.Context $r3, $r6;
        java.lang.Object $r4;
        android.content.ClipboardManager $r5;
        android.content.ClipData$Item $r7;
        android.text.Editable $r9, $r12, $r18;
        android.text.Spannable $r14;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r5 = (android.content.ClipboardManager) $r4;

        r1 = virtualinvoke $r5.<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>();

        if r1 == null goto label5;

        z0 = 0;

        i2 = 0;

     label1:
        $i4 = virtualinvoke r1.<android.content.ClipData: int getItemCount()>();

        if i2 >= $i4 goto label4;

        $r7 = virtualinvoke r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i2);

        $r6 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r2 = virtualinvoke $r7.<android.content.ClipData$Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>($r6);

        if r2 == null goto label2;

        if z0 != 0 goto label3;

        l3 = virtualinvoke r0.<android.widget.TextView: long prepareSpacesAroundPaste(int,int,java.lang.CharSequence)>(i0, i1, r2);

        i0 = staticinvoke <android.text.TextUtils: int unpackRangeStartFromLong(long)>(l3);

        i1 = staticinvoke <android.text.TextUtils: int unpackRangeEndFromLong(long)>(l3);

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r14 = (android.text.Spannable) $r15;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r14, i1);

        $r17 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r18 = (android.text.Editable) $r17;

        interfaceinvoke $r18.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i0, i1, r2);

        z0 = 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Editable) $r8;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        interfaceinvoke $r9.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i5, "\n");

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r12 = (android.text.Editable) $r10;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        interfaceinvoke $r12.<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>($i6, r2);

        goto label2;

     label4:
        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        <android.widget.TextView: long LAST_CUT_OR_COPY_TIME> = 0L;

     label5:
        return;
    }

    private void registerForPreDraw()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.view.ViewTreeObserver $r1;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mPreDrawRegistered>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawRegistered> = 1;

     label1:
        return;
    }

    private void removeIntersectingNonAdjacentSpans(int, int, java.lang.Class)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.Class r1;
        android.text.Editable r2;
        java.lang.Object[] r3;
        java.lang.CharSequence $r4, $r5;
        boolean $z0;
        java.lang.Object $r6, $r7, $r8;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r4 instanceof android.text.Editable;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        r2 = (android.text.Editable) $r5;

        r3 = interfaceinvoke r2.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, r1);

        i2 = lengthof r3;

        i3 = 0;

     label3:
        if i3 >= i2 goto label1;

        $r6 = r3[i3];

        i4 = interfaceinvoke r2.<android.text.Editable: int getSpanStart(java.lang.Object)>($r6);

        $r7 = r3[i3];

        $i5 = interfaceinvoke r2.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r7);

        if $i5 == i0 goto label1;

        if i4 == i1 goto label1;

        $r8 = r3[i3];

        interfaceinvoke r2.<android.text.Editable: void removeSpan(java.lang.Object)>($r8);

        i3 = i3 + 1;

        goto label3;
    }

    static void removeParcelableSpans(android.text.Spannable, int, int)
    {
        android.text.Spannable r0;
        int i0, i1, i2;
        java.lang.Object[] r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "android/text/ParcelableSpan");

        i2 = lengthof r1;

     label1:
        if i2 <= 0 goto label2;

        i2 = i2 + -1;

        $r2 = r1[i2];

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }

    private void restartMarqueeIfNeeded()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mRestartMarquee>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label1;

        r0.<android.widget.TextView: boolean mRestartMarquee> = 0;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

     label1:
        return;
    }

    private void sendBeforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, $i5, $i6;
        java.util.ArrayList r2, $r3;
        java.lang.Object $r4;
        android.text.TextWatcher $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r5 = (android.text.TextWatcher) $r4;

        interfaceinvoke $r5.<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        $i5 = i0 + i1;

        specialinvoke r0.<android.widget.TextView: void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class)>(i0, $i5, class "android/text/style/SpellCheckSpan");

        $i6 = i0 + i1;

        specialinvoke r0.<android.widget.TextView: void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class)>(i0, $i6, class "android/text/style/SuggestionSpan");

        return;
    }

    private void setFilters(android.text.Editable, android.text.InputFilter[])
    {
        android.widget.TextView r0;
        android.text.Editable r1;
        android.text.InputFilter[] r2, r3;
        boolean z0, z1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.widget.Editor $r4, $r5, $r7, $r9, $r12;
        android.text.InputFilter $r6, $r10, $r13;
        android.text.method.KeyListener $r8, $r11;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable;

        r2 := @parameter1: android.text.InputFilter[];

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label7;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.text.InputFilter mUndoInputFilter>;

        if $r6 == null goto label6;

        z0 = 1;

     label1:
        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r7.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        z1 = $r8 instanceof android.text.InputFilter;

        i0 = 0;

        if z0 == 0 goto label2;

        i0 = 0 + 1;

     label2:
        if z1 == 0 goto label3;

        i0 = i0 + 1;

     label3:
        if i0 <= 0 goto label7;

        $i2 = lengthof r2;

        $i3 = i0 + $i2;

        r3 = newarray (android.text.InputFilter)[$i3];

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, $i4);

        i1 = 0;

        if z0 == 0 goto label4;

        $i7 = lengthof r2;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r13 = $r12.<android.widget.Editor: android.text.InputFilter mUndoInputFilter>;

        r3[$i7] = $r13;

        i1 = 0 + 1;

     label4:
        if z1 == 0 goto label5;

        $i5 = lengthof r2;

        $i6 = i1 + $i5;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r11 = $r9.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r10 = (android.text.InputFilter) $r11;

        r3[$i6] = $r10;

     label5:
        interfaceinvoke r1.<android.text.Editable: void setFilters(android.text.InputFilter[])>(r3);

        return;

     label6:
        z0 = 0;

        goto label1;

     label7:
        interfaceinvoke r1.<android.text.Editable: void setFilters(android.text.InputFilter[])>(r2);

        return;
    }

    private void setInputType(int, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean z0, z1, z2, z3, z4;
        android.text.method.BaseKeyListener r1;
        android.text.method.TextKeyListener$Capitalize r2;
        android.widget.Editor $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 = 1;

        i1 = i0 & 15;

        z4 = z1;

        i9 = (int) z4;

        if i1 != i9 goto label08;

        $i5 = 32768 & i0;

        if $i5 == 0 goto label04;

        z3 = z1;

     label01:
        $i7 = i0 & 4096;

        if $i7 == 0 goto label05;

        r2 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize CHARACTERS>;

     label02:
        r1 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>(z3, r2);

     label03:
        virtualinvoke r0.<android.widget.TextView: void setRawInputType(int)>(i0);

        if z0 == 0 goto label19;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = r1;

        return;

     label04:
        z3 = 0;

        goto label01;

     label05:
        $i6 = i0 & 8192;

        if $i6 == 0 goto label06;

        r2 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize WORDS>;

        goto label02;

     label06:
        $i8 = i0 & 16384;

        if $i8 == 0 goto label07;

        r2 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize SENTENCES>;

        goto label02;

     label07:
        r2 = <android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize NONE>;

        goto label02;

     label08:
        if i1 != 2 goto label13;

        $i4 = i0 & 4096;

        if $i4 == 0 goto label11;

        z2 = z1;

     label09:
        $i3 = i0 & 8192;

        if $i3 == 0 goto label12;

     label10:
        r1 = staticinvoke <android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>(z2, z1);

        goto label03;

     label11:
        z2 = 0;

        goto label09;

     label12:
        z1 = 0;

        goto label10;

     label13:
        if i1 != 4 goto label17;

        $i2 = i0 & 4080;

        lookupswitch($i2)
        {
            case 16: goto label15;
            case 32: goto label16;
            default: goto label14;
        };

     label14:
        r1 = staticinvoke <android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>();

        goto label03;

     label15:
        r1 = staticinvoke <android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>();

        goto label03;

     label16:
        r1 = staticinvoke <android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>();

        goto label03;

     label17:
        if i1 != 3 goto label18;

        r1 = staticinvoke <android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>();

        goto label03;

     label18:
        r1 = staticinvoke <android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>();

        goto label03;

     label19:
        specialinvoke r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>(r1);

        return;
    }

    private void setInputTypeSingleLine(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor r1, r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i0 = $r4.<android.widget.Editor: int mInputType>;

        $i1 = 15 & $i0;

        if $i1 != 1 goto label1;

        if z0 == 0 goto label2;

        r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i4 = r2.<android.widget.Editor: int mInputType>;

        $i5 = -131073 & $i4;

        r2.<android.widget.Editor: int mInputType> = $i5;

     label1:
        return;

     label2:
        r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i2 = r1.<android.widget.Editor: int mInputType>;

        $i3 = 131072 | $i2;

        r1.<android.widget.Editor: int mInputType> = $i3;

        return;
    }

    private void setKeyListenerOnly(android.text.method.KeyListener)
    {
        android.widget.TextView r0;
        android.text.method.KeyListener r1, $r4;
        android.widget.Editor $r2, $r3, $r5;
        java.lang.CharSequence $r6, $r9, $r10;
        android.text.InputFilter[] $r7;
        android.text.Editable $r8;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.KeyListener;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 != null goto label2;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r4 == r1 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5.<android.widget.Editor: android.text.method.KeyListener mKeyListener> = r1;

        if r1 == null goto label3;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r9 instanceof android.text.Editable;

        if $z0 != 0 goto label3;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r10);

     label3:
        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = (android.text.Editable) $r6;

        $r7 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r8, $r7);

        return;
    }

    private void setPrimaryClip(android.content.ClipData)
    {
        android.widget.TextView r0;
        android.content.ClipData r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.content.ClipboardManager $r4;
        long $l0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.ClipData;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r4 = (android.content.ClipboardManager) $r3;

        virtualinvoke $r4.<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>(r1);

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        <android.widget.TextView: long LAST_CUT_OR_COPY_TIME> = $l0;

        return;
    }

    private void setRawTextSize(float)
    {
        android.widget.TextView r0;
        float f0, $f1;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextSize(float)>(f0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    private void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2;
        boolean z0;
        android.widget.TextView$Drawables r3, $r6, $r7;
        android.graphics.Rect r4;
        int[] r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.Context $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        if r1 != null goto label1;

        if r2 == null goto label7;

     label1:
        z0 = 1;

     label2:
        if z0 == 0 goto label6;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r3 != null goto label3;

        $r7 = new android.widget.TextView$Drawables;

        $r8 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r7.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r8);

        r3 = $r7;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = r3;

     label3:
        $r6 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6.<android.widget.TextView$Drawables: boolean mOverride> = 1;

        r4 = r3.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r5 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label8;

        $i5 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i4 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i5, $i4);

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r4);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = r1;

        $i6 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        r3.<android.widget.TextView$Drawables: int mDrawableSizeStart> = $i6;

        $i7 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        r3.<android.widget.TextView$Drawables: int mDrawableHeightStart> = $i7;

     label4:
        if r2 == null goto label9;

        $i0 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r4);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = r2;

        $i2 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        r3.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = $i2;

        $i3 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        r3.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = $i3;

     label5:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

     label6:
        return;

     label7:
        z0 = 0;

        goto label2;

     label8:
        r3.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r3.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

        goto label4;

     label9:
        r3.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r3.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

        goto label5;
    }

    private void setText(java.lang.CharSequence, android.widget.TextView$BufferType, boolean, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, r13, r16, $r23, $r45, $r48;
        android.widget.TextView$BufferType r2, r4, r9, r11, r12;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13;
        java.util.ArrayList r3, $r44;
        android.text.Editable r5, $r24;
        android.view.inputmethod.InputMethodManager r6;
        android.text.Spannable r7, r10, $r36;
        android.widget.TextView$ChangeWatcher[] r8;
        android.text.InputFilter r14;
        android.text.Spanned r15, $r52;
        android.text.InputFilter[] $r17, $r18, $r49;
        android.text.Editable$Factory $r19;
        android.text.method.TransformationMethod $r20, $r21, $r30, $r40;
        android.text.Layout $r22;
        android.widget.Editor $r25, $r26, $r31, $r33, $r34, $r39;
        android.widget.TextView$ChangeWatcher $r27, $r32, $r37, $r38;
        java.lang.Object[] $r28;
        android.text.method.MovementMethod $r29, $r35, $r43, $r47;
        android.text.Spannable$Factory $r41, $r46;
        android.text.method.KeyListener $r42;
        android.content.Context $r50;
        android.view.ViewConfiguration $r51;
        android.text.TextUtils$TruncateAt $r53, $r54;
        android.text.TextPaint $r55;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.TextView$BufferType;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        if r1 != null goto label01;

        r1 = "";

     label01:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isSuggestionsEnabled()>();

        if $z2 != 0 goto label02;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>(r1);

     label02:
        $z4 = r0.<android.widget.TextView: boolean mUserSetTextScaleX>;

        if $z4 != 0 goto label03;

        $r55 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r55.<android.text.TextPaint: void setTextScaleX(float)>(1.0F);

     label03:
        $z3 = r1 instanceof android.text.Spanned;

        if $z3 == 0 goto label05;

        $r52 = (android.text.Spanned) r1;

        $r53 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        $i13 = interfaceinvoke $r52.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r53);

        if $i13 < 0 goto label05;

        $r50 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r51 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r50);

        $z12 = virtualinvoke $r51.<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>();

        if $z12 == 0 goto label08;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 0;

     label04:
        $r54 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        virtualinvoke r0.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r54);

     label05:
        $r18 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        i1 = lengthof $r18;

        i2 = 0;

     label06:
        if i2 >= i1 goto label09;

        $r49 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        r14 = $r49[i2];

        i9 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r15 = <android.widget.TextView: android.text.Spanned EMPTY_SPANNED>;

        r16 = interfaceinvoke r14.<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>(r1, 0, i9, r15, 0, 0);

        if r16 == null goto label07;

        r1 = r16;

     label07:
        i2 = i2 + 1;

        goto label06;

     label08:
        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

        goto label04;

     label09:
        if z0 == 0 goto label10;

        $r45 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r45 == null goto label20;

        $r48 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r48.<java.lang.CharSequence: int length()>();

        r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i8 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>(r13, 0, i0, i8);

     label10:
        r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        z1 = 0;

        if r3 == null goto label11;

        $r44 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i7 = virtualinvoke $r44.<java.util.ArrayList: int size()>();

        z1 = 0;

        if i7 == 0 goto label11;

        z1 = 1;

     label11:
        r4 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r2 == r4 goto label12;

        $r42 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r42 != null goto label12;

        if z1 == 0 goto label21;

     label12:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r19 = r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory>;

        r5 = virtualinvoke $r19.<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>(r1);

        r1 = r5;

        $r17 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>(r5, $r17);

        r6 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r6 == null goto label13;

        virtualinvoke r6.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label13:
        $i10 = r0.<android.widget.TextView: int mAutoLinkMask>;

        if $i10 == 0 goto label17;

        r9 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r2 == r9 goto label14;

        $z7 = r1 instanceof android.text.Spannable;

        if $z7 == 0 goto label24;

     label14:
        r10 = (android.text.Spannable) r1;

     label15:
        i6 = r0.<android.widget.TextView: int mAutoLinkMask>;

        $z8 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>(r10, i6);

        if $z8 == 0 goto label17;

        r1 = r10;

        r12 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if r2 != r12 goto label25;

        r2 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

     label16:
        r0.<android.widget.TextView: java.lang.CharSequence mText> = r1;

        $z9 = r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z9 == 0 goto label17;

        $z10 = virtualinvoke r0.<android.widget.TextView: boolean textCanBeSelected()>();

        if $z10 != 0 goto label17;

        $r43 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r43);

     label17:
        r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType> = r2;

        r0.<android.widget.TextView: java.lang.CharSequence mText> = r1;

        $r20 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r20 != null goto label26;

        r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = r1;

     label18:
        i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $z5 = r1 instanceof android.text.Spannable;

        if $z5 == 0 goto label31;

        $z6 = r0.<android.widget.TextView: boolean mAllowTransformationLengthChange>;

        if $z6 != 0 goto label31;

        r7 = (android.text.Spannable) r1;

        $i11 = interfaceinvoke r7.<android.text.Spannable: int length()>();

        $r28 = interfaceinvoke r7.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i11, class "android/widget/TextView$ChangeWatcher");

        r8 = (android.widget.TextView$ChangeWatcher[]) $r28;

        i4 = lengthof r8;

        i5 = 0;

     label19:
        if i5 >= i4 goto label27;

        $r37 = r8[i5];

        interfaceinvoke r7.<android.text.Spannable: void removeSpan(java.lang.Object)>($r37);

        i5 = i5 + 1;

        goto label19;

     label20:
        $i12 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>("", 0, 0, $i12);

        goto label10;

     label21:
        r11 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        if r2 == r11 goto label22;

        $r47 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r47 == null goto label23;

     label22:
        $r46 = r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        r1 = virtualinvoke $r46.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r1);

        goto label13;

     label23:
        $z11 = r1 instanceof android.widget.TextView$CharWrapper;

        if $z11 != 0 goto label13;

        r1 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r1);

        goto label13;

     label24:
        $r41 = r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory>;

        r10 = virtualinvoke $r41.<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>(r1);

        goto label15;

     label25:
        r2 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        goto label16;

     label26:
        $r21 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r23 = interfaceinvoke $r21.<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>(r1, r0);

        r0.<android.widget.TextView: java.lang.CharSequence mTransformed> = $r23;

        goto label18;

     label27:
        $r27 = r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher>;

        if $r27 != null goto label28;

        $r38 = new android.widget.TextView$ChangeWatcher;

        specialinvoke $r38.<android.widget.TextView$ChangeWatcher: void <init>(android.widget.TextView,android.widget.TextView$1)>(r0, null);

        r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher> = $r38;

     label28:
        $r32 = r0.<android.widget.TextView: android.widget.TextView$ChangeWatcher mChangeWatcher>;

        interfaceinvoke r7.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r32, 0, i3, 6553618);

        $r31 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r31 == null goto label29;

        $r39 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r39.<android.widget.Editor: void addSpanWatchers(android.text.Spannable)>(r7);

     label29:
        $r30 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r30 == null goto label30;

        $r40 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        interfaceinvoke r7.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r40, 0, i3, 18);

     label30:
        $r29 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r29 == null goto label31;

        $r35 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r36 = (android.text.Spannable) r1;

        interfaceinvoke $r35.<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>(r0, $r36);

        $r34 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r34 == null goto label31;

        $r33 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r33.<android.widget.Editor: boolean mSelectionMoved> = 0;

     label31:
        $r22 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r22 == null goto label32;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label32:
        virtualinvoke r0.<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>(r1, 0, i0, i3);

        virtualinvoke r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>(r1, 0, i0, i3);

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(2);

        if z1 == 0 goto label33;

        $r24 = (android.text.Editable) r1;

        virtualinvoke r0.<android.widget.TextView: void sendAfterTextChanged(android.text.Editable)>($r24);

     label33:
        $r25 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r25 == null goto label34;

        $r26 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r26.<android.widget.Editor: void prepareCursorControllers()>();

     label34:
        return;
    }

    private void setTypefaceFromAttrs(java.lang.String, int, int)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        int i0, i1;
        android.graphics.Typeface r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = null;

        if r1 == null goto label1;

        r2 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r1, i1);

        if r2 == null goto label1;

        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r2);

        return;

     label1:
        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label2;
        };

     label2:
        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>(r2, i1);

        return;

     label3:
        r2 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;

        goto label2;

     label4:
        r2 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;

        goto label2;

     label5:
        r2 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        goto label2;
    }

    private boolean shouldAdvanceFocusOnEnter()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3;
        android.text.method.KeyListener $r1;
        boolean $z0;
        android.widget.Editor $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i1 = $r3.<android.widget.Editor: int mInputType>;

        $i2 = 15 & $i1;

        if $i2 != 1 goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r4.<android.widget.Editor: int mInputType>;

        i0 = 4080 & $i3;

        if i0 == 32 goto label4;

        if i0 != 48 goto label1;

     label4:
        return 1;
    }

    private boolean shouldAdvanceFocusOnTab()
    {
        android.widget.TextView r0;
        boolean z0, $z1, z2;
        int i0, $i1, $i2, $i3, i4;
        android.text.method.KeyListener $r1;
        android.widget.Editor $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        z0 = 1;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r1 == null goto label2;

        $z1 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z1 != 0 goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i1 = $r3.<android.widget.Editor: int mInputType>;

        $i2 = 15 & $i1;

        z2 = z0;

        i4 = (int) z2;

        if $i2 != i4 goto label2;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r4.<android.widget.Editor: int mInputType>;

        i0 = 4080 & $i3;

        if i0 == 262144 goto label1;

        if i0 != 131072 goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private boolean shouldSpeakPasswordsForAccessibility()
    {
        android.widget.TextView r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "speak_password", 0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void startMarquee()
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r6;
        android.text.method.KeyListener $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.TextView$Marquee $r3, $r4, $r5, $r7, $r8;

        r0 := @this: android.widget.TextView;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r2 == null goto label2;

     label1:
        return;

     label2:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i4 = $i2 - $i3;

        $f0 = (float) $i4;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean compressText(float)>($f0);

        if $z0 != 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r3 == null goto label3;

        $r8 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z4 = virtualinvoke $r8.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z4 == 0 goto label1;

     label3:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z1 != 0 goto label4;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isSelected()>();

        if $z3 == 0 goto label1;

     label4:
        $i5 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i5 != 1 goto label1;

        $z2 = specialinvoke r0.<android.widget.TextView: boolean canMarquee()>();

        if $z2 == 0 goto label1;

        $i6 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i6 != 1 goto label5;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 2;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r6 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        r0.<android.widget.TextView: android.text.Layout mLayout> = $r6;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = r1;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(1);

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label5:
        $r4 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r4 != null goto label6;

        $r7 = new android.widget.TextView$Marquee;

        specialinvoke $r7.<android.widget.TextView$Marquee: void <init>(android.widget.TextView)>(r0);

        r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee> = $r7;

     label6:
        $r5 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $i7 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        virtualinvoke $r5.<android.widget.TextView$Marquee: void start(int)>($i7);

        return;
    }

    private void startStopMarquee(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label1;

        if z0 == 0 goto label2;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

     label1:
        return;

     label2:
        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

        return;
    }

    private void stopMarquee()
    {
        android.widget.TextView r0;
        android.text.Layout r1, $r3;
        android.widget.TextView$Marquee $r2, $r4, $r5;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r2 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r4.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        virtualinvoke $r5.<android.widget.TextView$Marquee: void stop()>();

     label1:
        $i0 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i0 != 2 goto label2;

        r0.<android.widget.TextView: int mMarqueeFadeMode> = 1;

        r1 = r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout>;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = $r3;

        r0.<android.widget.TextView: android.text.Layout mLayout> = r1;

        virtualinvoke r0.<android.widget.TextView: void setHorizontalFadingEdgeEnabled(boolean)>(0);

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        return;
    }

    private void updateTextColors()
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        boolean z0;
        android.content.res.ColorStateList $r1, $r3, $r4, $r7, $r10;
        int[] $r2, $r8, $r11;
        android.widget.Editor $r5, $r6;
        java.lang.CharSequence $r9;
        android.text.TextPaint $r12, $r13;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        $r2 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        i0 = virtualinvoke $r1.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        i1 = r0.<android.widget.TextView: int mCurTextColor>;

        z0 = 0;

        if i0 == i1 goto label1;

        r0.<android.widget.TextView: int mCurTextColor> = i0;

        z0 = 1;

     label1:
        $r3 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        if $r3 == null goto label2;

        $r10 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        $r11 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        i3 = virtualinvoke $r10.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r11, 0);

        $r12 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i6 = $r12.<android.text.TextPaint: int linkColor>;

        if i3 == $i6 goto label2;

        $r13 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r13.<android.text.TextPaint: int linkColor> = i3;

        z0 = 1;

     label2:
        $r4 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r4 == null goto label3;

        $r7 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        $r8 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        i2 = virtualinvoke $r7.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r8, 0);

        $i4 = r0.<android.widget.TextView: int mCurHintTextColor>;

        if i2 == $i4 goto label3;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i5 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        if $i5 != 0 goto label3;

        r0.<android.widget.TextView: int mCurHintTextColor> = i2;

        z0 = 1;

     label3:
        if z0 == 0 goto label5;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 == null goto label4;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r6.<android.widget.Editor: void invalidateTextDisplayList()>();

     label4:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label5:
        return;
    }

    private void updateTextServicesLocaleAsync()
    {
        android.widget.TextView r0;
        android.widget.TextView$3 $r1;

        r0 := @this: android.widget.TextView;

        $r1 = new android.widget.TextView$3;

        specialinvoke $r1.<android.widget.TextView$3: void <init>(android.widget.TextView)>(r0);

        staticinvoke <android.os.AsyncTask: void execute(java.lang.Runnable)>($r1);

        return;
    }

    private void updateTextServicesLocaleLocked()
    {
        android.widget.TextView r0;
        android.view.textservice.SpellCheckerSubtype r1;
        java.util.Locale r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.view.textservice.TextServicesManager $r5;
        java.lang.String $r6;

        r0 := @this: android.widget.TextView;

        $r3 = r0.<android.widget.TextView: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("textservices");

        $r5 = (android.view.textservice.TextServicesManager) $r4;

        r1 = virtualinvoke $r5.<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>(1);

        if r1 == null goto label2;

        $r6 = virtualinvoke r1.<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>();

        r2 = staticinvoke <android.view.textservice.SpellCheckerSubtype: java.util.Locale constructLocaleFromString(java.lang.String)>($r6);

     label1:
        r0.<android.widget.TextView: java.util.Locale mCurrentSpellCheckerLocaleCache> = r2;

        return;

     label2:
        r2 = null;

        goto label1;
    }

    public void addTextChangedListener(android.text.TextWatcher)
    {
        android.widget.TextView r0;
        android.text.TextWatcher r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextWatcher;

        $r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.widget.TextView: java.util.ArrayList mListeners> = $r4;

     label1:
        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void append(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<android.widget.TextView: void append(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return;
    }

    public void append(java.lang.CharSequence, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, $r2, $r3, $r7;
        int i0, i1;
        boolean $z0;
        android.text.Editable $r4;
        android.widget.TextView$BufferType $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r7, $r6);

     label1:
        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        interfaceinvoke $r4.<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return;
    }

    public void beginBatchEdit()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void beginBatchEdit()>();

     label1:
        return;
    }

    public boolean bringPointIntoView(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i19, i20, i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79;
        android.text.Layout r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        long l18, $l52, $l53, $l54;
        int[] $r2;
        android.text.Layout$Alignment $r3;
        float $f0, $f1, $f2, $f3, $f4;
        android.widget.Scroller $r4, $r5, $r9, $r10, $r14;
        byte $b51;
        android.graphics.Rect $r6, $r7, $r8, $r11, $r12, $r13;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isLayoutRequested()>();

        if $z2 == 0 goto label02;

        r0.<android.widget.TextView: int mDeferScroll> = i0;

        z0 = 0;

     label01:
        return z0;

     label02:
        $z3 = specialinvoke r0.<android.widget.TextView: boolean isShowingHint()>();

        if $z3 == 0 goto label22;

        r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label03:
        z0 = 0;

        if r1 == null goto label01;

        i1 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r2 = <android.widget.TextView$4: int[] $SwitchMap$android$text$Layout$Alignment>;

        $r3 = virtualinvoke r1.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>(i1);

        $i23 = virtualinvoke $r3.<android.text.Layout$Alignment: int ordinal()>();

        $i24 = $r2[$i23];

        tableswitch($i24)
        {
            case 1: goto label23;
            case 2: goto label24;
            case 3: goto label25;
            case 4: goto label26;
            default: goto label04;
        };

     label04:
        i2 = 0;

     label05:
        if i2 <= 0 goto label27;

        z1 = 1;

     label06:
        $f1 = virtualinvoke r1.<android.text.Layout: float getPrimaryHorizontal(int,boolean)>(i0, z1);

        i3 = (int) $f1;

        i4 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i1);

        i5 = i1 + 1;

        i6 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i5);

        $f0 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i1);

        $f3 = staticinvoke <android.util.FloatMath: float floor(float)>($f0);

        i7 = (int) $f3;

        $f4 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i1);

        $f2 = staticinvoke <android.util.FloatMath: float ceil(float)>($f4);

        i8 = (int) $f2;

        i9 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        $i28 = r0.<android.widget.TextView: int mRight>;

        $i27 = r0.<android.widget.TextView: int mLeft>;

        $i25 = $i28 - $i27;

        $i26 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i32 = $i25 - $i26;

        $i31 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i10 = $i32 - $i31;

        $i29 = r0.<android.widget.TextView: int mBottom>;

        $i30 = r0.<android.widget.TextView: int mTop>;

        $i36 = $i29 - $i30;

        $i35 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i34 = $i36 - $i35;

        $i33 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i11 = $i34 - $i33;

        $z4 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z4 != 0 goto label07;

        $i79 = i8 - i7;

        if $i79 <= i10 goto label07;

        if i8 <= i3 goto label07;

        $i78 = i7 + i10;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i78);

     label07:
        $i39 = i6 - i4;

        i13 = $i39 / 2;

        i12 = i13;

        i15 = i11 / 4;

        if i12 <= i15 goto label08;

        i12 = i11 / 4;

     label08:
        $i38 = i10 / 4;

        if i13 <= $i38 goto label09;

        i13 = i10 / 4;

     label09:
        i14 = r0.<android.widget.TextView: int mScrollX>;

        i17 = r0.<android.widget.TextView: int mScrollY>;

        $i37 = i4 - i17;

        if $i37 >= i12 goto label10;

        i17 = i4 - i12;

     label10:
        $i42 = i6 - i17;

        $i43 = i11 - i12;

        if $i42 <= $i43 goto label11;

        $i70 = i11 - i12;

        i17 = i6 - $i70;

     label11:
        $i41 = i9 - i17;

        if $i41 >= i11 goto label12;

        i17 = i9 - i11;

     label12:
        $i40 = 0 - i17;

        if $i40 <= 0 goto label13;

        i17 = 0;

     label13:
        if i2 == 0 goto label15;

        $i74 = i3 - i14;

        if $i74 >= i13 goto label14;

        i14 = i3 - i13;

     label14:
        $i72 = i3 - i14;

        $i71 = i10 - i13;

        if $i72 <= $i71 goto label15;

        $i69 = i10 - i13;

        i14 = i3 - $i69;

     label15:
        if i2 >= 0 goto label28;

        $i76 = i7 - i14;

        if $i76 <= 0 goto label16;

        i14 = i7;

     label16:
        $i73 = i8 - i14;

        if $i73 >= i10 goto label17;

        i14 = i8 - i10;

     label17:
        $i46 = r0.<android.widget.TextView: int mScrollX>;

        if i14 != $i46 goto label18;

        i21 = r0.<android.widget.TextView: int mScrollY>;

        i22 = i17;

        z0 = 0;

        if i22 == i21 goto label20;

     label18:
        $r4 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        if $r4 != null goto label37;

        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(i14, i17);

     label19:
        z0 = 1;

     label20:
        $z6 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z6 == 0 goto label01;

        $r8 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        if $r8 != null goto label21;

        $r13 = new android.graphics.Rect;

        specialinvoke $r13.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Rect mTempRect> = $r13;

     label21:
        $r7 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $i59 = i3 - 2;

        $i60 = i3 + 2;

        virtualinvoke $r7.<android.graphics.Rect: void set(int,int,int,int)>($i59, i4, $i60, i6);

        $r6 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        specialinvoke r0.<android.widget.TextView: void getInterestingRect(android.graphics.Rect,int)>($r6, i1);

        $r12 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $i57 = r0.<android.widget.TextView: int mScrollX>;

        $i58 = r0.<android.widget.TextView: int mScrollY>;

        virtualinvoke $r12.<android.graphics.Rect: void offset(int,int)>($i57, $i58);

        $r11 = r0.<android.widget.TextView: android.graphics.Rect mTempRect>;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean requestRectangleOnScreen(android.graphics.Rect)>($r11);

        if $z7 == 0 goto label01;

        return 1;

     label22:
        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        goto label03;

     label23:
        i2 = 1;

        goto label05;

     label24:
        i2 = -1;

        goto label05;

     label25:
        i2 = virtualinvoke r1.<android.text.Layout: int getParagraphDirection(int)>(i1);

        goto label05;

     label26:
        $i77 = virtualinvoke r1.<android.text.Layout: int getParagraphDirection(int)>(i1);

        i2 = neg $i77;

        goto label05;

     label27:
        z1 = 0;

        goto label06;

     label28:
        if i2 <= 0 goto label30;

        $i64 = i8 - i14;

        if $i64 >= i10 goto label29;

        i14 = i8 - i10;

     label29:
        $i75 = i7 - i14;

        if $i75 <= 0 goto label17;

        i14 = i7;

        goto label17;

     label30:
        $i47 = i8 - i7;

        if $i47 > i10 goto label31;

        $i65 = i8 - i7;

        $i66 = i10 - $i65;

        $i63 = $i66 / 2;

        i14 = i7 - $i63;

        goto label17;

     label31:
        $i48 = i8 - i13;

        if i3 <= $i48 goto label32;

        i14 = i8 - i10;

        goto label17;

     label32:
        $i49 = i7 + i13;

        if i3 >= $i49 goto label33;

        i14 = i7;

        goto label17;

     label33:
        if i7 <= i14 goto label34;

        i14 = i7;

        goto label17;

     label34:
        i16 = i14 + i10;

        if i8 >= i16 goto label35;

        i14 = i8 - i10;

        goto label17;

     label35:
        $i50 = i3 - i14;

        if $i50 >= i13 goto label36;

        i14 = i3 - i13;

     label36:
        $i45 = i3 - i14;

        $i44 = i10 - i13;

        if $i45 <= $i44 goto label17;

        $i67 = i10 - i13;

        i14 = i3 - $i67;

        goto label17;

     label37:
        $l53 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l54 = r0.<android.widget.TextView: long mLastScroll>;

        l18 = $l53 - $l54;

        $i55 = r0.<android.widget.TextView: int mScrollX>;

        i20 = i14 - $i55;

        $i56 = r0.<android.widget.TextView: int mScrollY>;

        i19 = i17 - $i56;

        $b51 = l18 cmp 250L;

        if $b51 <= 0 goto label39;

        $r10 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i62 = r0.<android.widget.TextView: int mScrollX>;

        $i61 = r0.<android.widget.TextView: int mScrollY>;

        virtualinvoke $r10.<android.widget.Scroller: void startScroll(int,int,int,int)>($i62, $i61, i20, i19);

        $r14 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i68 = virtualinvoke $r14.<android.widget.Scroller: int getDuration()>();

        virtualinvoke r0.<android.widget.TextView: boolean awakenScrollBars(int)>($i68);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label38:
        $l52 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<android.widget.TextView: long mLastScroll> = $l52;

        goto label19;

     label39:
        $r5 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $z5 = virtualinvoke $r5.<android.widget.Scroller: boolean isFinished()>();

        if $z5 != 0 goto label40;

        $r9 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        virtualinvoke $r9.<android.widget.Scroller: void abortAnimation()>();

     label40:
        virtualinvoke r0.<android.widget.TextView: void scrollBy(int,int)>(i20, i19);

        goto label38;
    }

    boolean canCopy()
    {
        android.widget.TextView r0;
        boolean $z0, $z1;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z1 == 0 goto label1;

        return 1;
    }

    boolean canCut()
    {
        android.widget.TextView r0;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r1, $r2;
        int $i0;
        android.widget.Editor $r3, $r4;
        android.text.method.KeyListener $r5;

        r0 := @this: android.widget.TextView;

        $z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r2 instanceof android.text.Editable;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r5 == null goto label1;

        return 1;
    }

    boolean canPaste()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        boolean $z0, $z1;
        android.widget.Editor $r2, $r3;
        android.text.method.KeyListener $r4;
        int $i0, $i1;
        android.content.Context $r5;
        java.lang.Object $r6;
        android.content.ClipboardManager $r7;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r4 == null goto label1;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i1 < 0 goto label1;

        $r5 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r7 = (android.content.ClipboardManager) $r6;

        $z1 = virtualinvoke $r7.<android.content.ClipboardManager: boolean hasPrimaryClip()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void cancelLongPress()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void cancelLongPress()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mIgnoreActionUpEvent> = 1;

     label1:
        return;
    }

    public void clearComposingText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0;
        android.text.Spannable $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Spannable) $r2;

        staticinvoke <android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>($r3);

     label1:
        return;
    }

    protected int computeHorizontalScrollRange()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label2;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label1;

        $i2 = r0.<android.widget.TextView: int mGravity>;

        $i3 = 7 & $i2;

        if $i3 != 3 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r3.<android.text.Layout: float getLineWidth(int)>(0);

        $i4 = (int) $f0;

        return $i4;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();

        return $i1;

     label2:
        $i0 = specialinvoke r0.<android.view.View: int computeHorizontalScrollRange()>();

        return $i0;
    }

    public void computeScroll()
    {
        android.widget.TextView r0;
        android.widget.Scroller $r1, $r2, $r3, $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r2.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r3.<android.widget.Scroller: int getCurrX()>();

        r0.<android.widget.TextView: int mScrollX> = $i0;

        $r4 = r0.<android.widget.TextView: android.widget.Scroller mScroller>;

        $i1 = virtualinvoke $r4.<android.widget.Scroller: int getCurrY()>();

        r0.<android.widget.TextView: int mScrollY> = $i1;

        virtualinvoke r0.<android.widget.TextView: void invalidateParentCaches()>();

        virtualinvoke r0.<android.widget.TextView: void postInvalidate()>();

     label1:
        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i1 = virtualinvoke $r2.<android.text.Layout: int getHeight()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<android.view.View: int computeVerticalScrollRange()>();

        return $i0;
    }

    float convertToLocalHorizontalCoordinate(float)
    {
        android.widget.TextView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingLeft()>();

        $f2 = (float) $i0;

        $f3 = f0 - $f2;

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f3);

        $i1 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingRight()>();

        $i3 = $i1 - $i2;

        $i4 = -1 + $i3;

        $f4 = (float) $i4;

        $f5 = staticinvoke <java.lang.Math: float min(float,float)>($f4, f1);

        $i5 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        $f7 = (float) $i5;

        $f6 = $f5 + $f7;

        return $f6;
    }

    public void debug(int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.lang.String r1, r2, r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r37;
        java.lang.CharSequence $r20, $r28;
        android.text.Layout $r31, $r34, $r36;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void debug(int)>(i0);

        r1 = staticinvoke <android.widget.TextView: java.lang.String debugIndent(int)>(i0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("frame={");

        $i1 = r0.<android.widget.TextView: int mLeft>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i2 = r0.<android.widget.TextView: int mTop>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i3 = r0.<android.widget.TextView: int mRight>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i4 = r0.<android.widget.TextView: int mBottom>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} scroll={");

        $i5 = r0.<android.widget.TextView: int mScrollX>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i6 = r0.<android.widget.TextView: int mScrollY>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r20 == null goto label2;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mText=\"");

        $r28 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        r3 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r31 == null goto label1;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLayout width=");

        $r34 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i8 = virtualinvoke $r34.<android.text.Layout: int getWidth()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height=");

        $r36 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i9 = virtualinvoke $r36.<android.text.Layout: int getHeight()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        r3 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("View", r3);

        return;

     label2:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mText=NULL");

        r3 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

    protected void deleteText_internal(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1;
        android.text.Editable $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Editable) $r1;

        interfaceinvoke $r2.<android.text.Editable: android.text.Editable delete(int,int)>(i0, i1);

        return;
    }

    public boolean didTouchFocusSelect()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r2.<android.widget.Editor: boolean mTouchFocusSelected>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void dispatchFinishTemporaryDetach()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        r0.<android.widget.TextView: boolean mDispatchTemporaryDetach> = 1;

        specialinvoke r0.<android.view.View: void dispatchFinishTemporaryDetach()>();

        r0.<android.widget.TextView: boolean mDispatchTemporaryDetach> = 0;

        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int[] r2;
        android.content.res.ColorStateList $r3, $r4, $r5, $r24, $r25, $r26;
        android.graphics.drawable.Drawable $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        boolean $z0, $z2, $z4, $z6, $z8, $z9, $z11, $z13, $z14;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void drawableStateChanged()>();

        $r3 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        if $r3 == null goto label01;

        $r26 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        $z13 = virtualinvoke $r26.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z13 != 0 goto label03;

     label01:
        $r4 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r4 == null goto label02;

        $r24 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        $z14 = virtualinvoke $r24.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z14 != 0 goto label03;

     label02:
        $r5 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        if $r5 == null goto label04;

        $r25 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        $z11 = virtualinvoke $r25.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z11 == 0 goto label04;

     label03:
        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

     label04:
        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label10;

        r2 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        $r6 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r6 == null goto label05;

        $r23 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        $z9 = virtualinvoke $r23.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z9 == 0 goto label05;

        $r22 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r22.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label05:
        $r7 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r7 == null goto label06;

        $r20 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        $z8 = virtualinvoke $r20.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z8 == 0 goto label06;

        $r21 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r21.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label06:
        $r8 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r8 == null goto label07;

        $r18 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        $z6 = virtualinvoke $r18.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z6 == 0 goto label07;

        $r19 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r19.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label07:
        $r9 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r9 == null goto label08;

        $r16 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        $z4 = virtualinvoke $r16.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z4 == 0 goto label08;

        $r17 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r17.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label08:
        $r10 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r10 == null goto label09;

        $r14 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        $z2 = virtualinvoke $r14.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z2 == 0 goto label09;

        $r15 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label09:
        $r11 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r11 == null goto label10;

        $r12 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        $z0 = virtualinvoke $r12.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label10;

        $r13 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: boolean setState(int[])>(r2);

     label10:
        return;
    }

    public void endBatchEdit()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void endBatchEdit()>();

     label1:
        return;
    }

    public boolean extractText(android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.view.inputmethod.ExtractedText r2;
        android.widget.Editor $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        r2 := @parameter1: android.view.inputmethod.ExtractedText;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = virtualinvoke $r3.<android.widget.Editor: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>(r1, r2);

        return $z0;
    }

    public void findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)
    {
        android.widget.TextView r0;
        java.util.ArrayList r1;
        java.lang.CharSequence r2, $r4, $r6;
        int i0, $i1;
        java.lang.String r3, $r5, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>(r1, r2, i0);

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z2 != 0 goto label1;

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        r3 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z3 == 0 goto label1;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public int getAccessibilitySelectionEnd()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        return $i0;
    }

    public int getAccessibilitySelectionStart()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        return $i0;
    }

    public final int getAutoLinkMask()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mAutoLinkMask>;

        return $i0;
    }

    public int getBaseline()
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.text.Layout $r1, $r3;
        android.view.ViewParent $r2;
        boolean $z0;
        android.graphics.Insets $r4;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        $i8 = specialinvoke r0.<android.view.View: int getBaseline()>();

        return $i8;

     label1:
        $i2 = r0.<android.widget.TextView: int mGravity>;

        i0 = 112 & $i2;

        i1 = 0;

        if i0 == 48 goto label2;

        i1 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label2:
        $r2 = r0.<android.widget.TextView: android.view.ViewParent mParent>;

        $z0 = staticinvoke <android.widget.TextView: boolean isLayoutModeOptical(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<android.widget.TextView: android.graphics.Insets getOpticalInsets()>();

        $i7 = $r4.<android.graphics.Insets: int top>;

        i1 = i1 - $i7;

     label3:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i4 = i1 + $i3;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i5 = virtualinvoke $r3.<android.text.Layout: int getLineBaseline(int)>(0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    protected int getBottomPaddingOffset()
    {
        android.widget.TextView r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f1 = r0.<android.widget.TextView: float mShadowDy>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 + $f0;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2);

        $i0 = (int) $f3;

        return $i0;
    }

    public int getCompoundDrawablePadding()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $i0 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        return $i0;

     label1:
        return 0;
    }

    public android.graphics.drawable.Drawable[] getCompoundDrawables()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        android.graphics.drawable.Drawable[] r2, $r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r4 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        r2[0] = $r4;

        $r5 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        r2[1] = $r5;

        $r6 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        r2[2] = $r6;

        $r7 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        r2[3] = $r7;

        return r2;

     label1:
        $r3 = newarray (android.graphics.drawable.Drawable)[4];

        $r3[0] = null;

        $r3[1] = null;

        $r3[2] = null;

        $r3[3] = null;

        return $r3;
    }

    public android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        android.graphics.drawable.Drawable[] r2, $r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        r2 = newarray (android.graphics.drawable.Drawable)[4];

        $r4 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        r2[0] = $r4;

        $r5 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        r2[1] = $r5;

        $r6 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        r2[2] = $r6;

        $r7 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        r2[3] = $r7;

        return r2;

     label1:
        $r3 = newarray (android.graphics.drawable.Drawable)[4];

        $r3[0] = null;

        $r3[1] = null;

        $r3[2] = null;

        $r3[3] = null;

        return $r3;
    }

    public int getCompoundPaddingBottom()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r2 != null goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mPaddingBottom>;

        return $i0;

     label2:
        $i2 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public int getCompoundPaddingEnd()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i1;

     label2:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i2;
    }

    public int getCompoundPaddingLeft()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r2 != null goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mPaddingLeft>;

        return $i0;

     label2:
        $i2 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeLeft>;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public int getCompoundPaddingRight()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r2 != null goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mPaddingRight>;

        return $i0;

     label2:
        $i2 = r0.<android.widget.TextView: int mPaddingRight>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public int getCompoundPaddingStart()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i1;

     label2:
        $i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i2;
    }

    public int getCompoundPaddingTop()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.TextView;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 == null goto label1;

        $r2 = r1.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r2 != null goto label2;

     label1:
        $i0 = r0.<android.widget.TextView: int mPaddingTop>;

        return $i0;

     label2:
        $i2 = r0.<android.widget.TextView: int mPaddingTop>;

        $i1 = r1.<android.widget.TextView$Drawables: int mDrawablePadding>;

        $i4 = $i2 + $i1;

        $i3 = r1.<android.widget.TextView$Drawables: int mDrawableSizeTop>;

        $i5 = $i4 + $i3;

        return $i5;
    }

    public final int getCurrentHintTextColor()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r1 == null goto label1;

        $i1 = r0.<android.widget.TextView: int mCurHintTextColor>;

        return $i1;

     label1:
        $i0 = r0.<android.widget.TextView: int mCurTextColor>;

        return $i0;
    }

    public final int getCurrentTextColor()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mCurTextColor>;

        return $i0;
    }

    public android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.view.ActionMode$Callback $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.view.ActionMode$Callback mCustomSelectionActionModeCallback>;

        return $r3;
    }

    protected boolean getDefaultEditable()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 0;
    }

    protected android.text.method.MovementMethod getDefaultMovementMethod()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return null;
    }

    public android.text.Editable getEditableText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2;
        boolean $z0;
        android.text.Editable $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        return $r3;

     label1:
        return null;
    }

    public android.text.TextUtils$TruncateAt getEllipsize()
    {
        android.widget.TextView r0;
        android.text.TextUtils$TruncateAt $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        return $r1;
    }

    public java.lang.CharSequence getError()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: java.lang.CharSequence mError>;

        return $r3;
    }

    public int getExtendedPaddingBottom()
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.text.Layout $r1, $r2;

        r0 := @this: android.widget.TextView;

        $i5 = r0.<android.widget.TextView: int mMaxMode>;

        if $i5 == 1 goto label2;

        i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

     label1:
        return i1;

     label2:
        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i6 = virtualinvoke $r1.<android.text.Layout: int getLineCount()>();

        $i7 = r0.<android.widget.TextView: int mMaximum>;

        if $i6 > $i7 goto label3;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        return $i16;

     label3:
        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i8 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i9 = $i8 - i0;

        i2 = $i9 - i1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i10 = r0.<android.widget.TextView: int mMaximum>;

        i3 = virtualinvoke $r2.<android.text.Layout: int getLineTop(int)>($i10);

        if i3 >= i2 goto label1;

        $i11 = r0.<android.widget.TextView: int mGravity>;

        i4 = 112 & $i11;

        if i4 != 48 goto label4;

        $i14 = i1 + i2;

        $i17 = $i14 - i3;

        return $i17;

     label4:
        if i4 == 80 goto label1;

        $i13 = i2 - i3;

        $i12 = $i13 / 2;

        $i15 = i1 + $i12;

        return $i15;
    }

    public int getExtendedPaddingTop()
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.text.Layout $r1, $r2;

        r0 := @this: android.widget.TextView;

        $i5 = r0.<android.widget.TextView: int mMaxMode>;

        if $i5 == 1 goto label2;

        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

     label1:
        return i0;

     label2:
        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i6 = virtualinvoke $r1.<android.text.Layout: int getLineCount()>();

        $i7 = r0.<android.widget.TextView: int mMaximum>;

        if $i6 > $i7 goto label3;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        return $i16;

     label3:
        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i8 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i9 = $i8 - i0;

        i2 = $i9 - i1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i10 = r0.<android.widget.TextView: int mMaximum>;

        i3 = virtualinvoke $r2.<android.text.Layout: int getLineTop(int)>($i10);

        if i3 >= i2 goto label1;

        $i11 = r0.<android.widget.TextView: int mGravity>;

        i4 = 112 & $i11;

        if i4 == 48 goto label1;

        if i4 != 80 goto label4;

        $i14 = i0 + i2;

        $i17 = $i14 - i3;

        return $i17;

     label4:
        $i13 = i2 - i3;

        $i12 = $i13 / 2;

        $i15 = i0 + $i12;

        return $i15;
    }

    protected int getFadeHeight(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.Layout $r1, $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r2.<android.text.Layout: int getHeight()>();

        return $i0;

     label1:
        return 0;
    }

    protected int getFadeTop(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i2 = r0.<android.widget.TextView: int mGravity>;

        i0 = 112 & $i2;

        i1 = 0;

        if i0 == 48 goto label2;

        i1 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label2:
        if z0 == 0 goto label3;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getTopPaddingOffset()>();

        i1 = i1 + $i5;

     label3:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i4 = i1 + $i3;

        return $i4;
    }

    public android.text.InputFilter[] getFilters()
    {
        android.widget.TextView r0;
        android.text.InputFilter[] $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        return $r1;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        android.graphics.RectF r2, $r14, $r15, $r16;
        java.lang.Throwable r3, $r24;
        android.text.Layout $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r17, $r21, $r23;
        float $f0, $f1, $f2, $f3, $f4;
        boolean $z0;
        android.graphics.Path $r13, $r18, $r19, $r20, $r22;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Rect;

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 != null goto label01;

        specialinvoke r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r1);

        return;

     label01:
        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 >= 0 goto label02;

        specialinvoke r0.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r1);

        return;

     label02:
        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if i1 < 0 goto label03;

        if i1 < i0 goto label06;

     label03:
        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r5.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i7 = virtualinvoke $r6.<android.text.Layout: int getLineTop(int)>(i2);

        r1.<android.graphics.Rect: int top> = $i7;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i8 = virtualinvoke $r7.<android.text.Layout: int getLineBottom(int)>(i2);

        r1.<android.graphics.Rect: int bottom> = $i8;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r8.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        $i9 = (int) $f0;

        $i11 = -2 + $i9;

        r1.<android.graphics.Rect: int left> = $i11;

        $i10 = r1.<android.graphics.Rect: int left>;

        $i12 = 4 + $i10;

        r1.<android.graphics.Rect: int right> = $i12;

     label04:
        i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i4 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i13 = r0.<android.widget.TextView: int mGravity>;

        $i15 = 112 & $i13;

        if $i15 == 48 goto label05;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i4 = i4 + $i16;

     label05:
        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>(i3, i4);

        $i14 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i17 = r1.<android.graphics.Rect: int bottom>;

        $i18 = $i14 + $i17;

        r1.<android.graphics.Rect: int bottom> = $i18;

        return;

     label06:
        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i5 = virtualinvoke $r9.<android.text.Layout: int getLineForOffset(int)>(i1);

        $r11 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i6 = virtualinvoke $r11.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i20 = virtualinvoke $r10.<android.text.Layout: int getLineTop(int)>(i5);

        r1.<android.graphics.Rect: int top> = $i20;

        $r12 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i19 = virtualinvoke $r12.<android.text.Layout: int getLineBottom(int)>(i6);

        r1.<android.graphics.Rect: int bottom> = $i19;

        if i5 != i6 goto label07;

        $r21 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f3 = virtualinvoke $r21.<android.text.Layout: float getPrimaryHorizontal(int)>(i1);

        $i25 = (int) $f3;

        r1.<android.graphics.Rect: int left> = $i25;

        $r23 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f4 = virtualinvoke $r23.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        $i26 = (int) $f4;

        r1.<android.graphics.Rect: int right> = $i26;

        goto label04;

     label07:
        $z0 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label09;

        $r20 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        if $r20 != null goto label08;

        $r22 = new android.graphics.Path;

        specialinvoke $r22.<android.graphics.Path: void <init>()>();

        r0.<android.widget.TextView: android.graphics.Path mHighlightPath> = $r22;

     label08:
        $r19 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r19.<android.graphics.Path: void reset()>();

        $r17 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r18 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        virtualinvoke $r17.<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>(i1, i0, $r18);

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 0;

     label09:
        r2 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        entermonitor r2;

     label10:
        $r13 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r15 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        virtualinvoke $r13.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r15, 1);

        $r14 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f1 = $r14.<android.graphics.RectF: float left>;

        $i22 = (int) $f1;

        $i21 = -1 + $i22;

        r1.<android.graphics.Rect: int left> = $i21;

        $r16 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f2 = $r16.<android.graphics.RectF: float right>;

        $i24 = (int) $f2;

        $i23 = 1 + $i24;

        r1.<android.graphics.Rect: int right> = $i23;

        exitmonitor r2;

     label11:
        goto label04;

     label12:
        $r24 := @caughtexception;

        r3 = $r24;

     label13:
        exitmonitor r2;

     label14:
        throw r3;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean getFreezesText()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mFreezesText>;

        return $z0;
    }

    public int getGravity()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mGravity>;

        return $i0;
    }

    public int getHighlightColor()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mHighlightColor>;

        return $i0;
    }

    public java.lang.CharSequence getHint()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        return $r1;
    }

    final android.text.Layout getHintLayout()
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        return $r1;
    }

    public final android.content.res.ColorStateList getHintTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        return $r1;
    }

    public int getHorizontalOffsetForDrawables()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 0;
    }

    public boolean getHorizontallyScrolling()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        return $z0;
    }

    public int getImeActionId()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.widget.Editor$InputContentType $r3, $r5;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i0 = $r5.<android.widget.Editor$InputContentType: int imeActionId>;

        return $i0;

     label1:
        return 0;
    }

    public java.lang.CharSequence getImeActionLabel()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.widget.Editor$InputContentType $r3, $r5;
        java.lang.CharSequence $r6;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6 = $r5.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel>;

        return $r6;

     label1:
        return null;
    }

    public int getImeOptions()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.widget.Editor$InputContentType $r3, $r5;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i0 = $r5.<android.widget.Editor$InputContentType: int imeOptions>;

        return $i0;

     label1:
        return 0;
    }

    public boolean getIncludeFontPadding()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mIncludePad>;

        return $z0;
    }

    public android.os.Bundle getInputExtras(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1, $r2, $r4, $r7, $r10, $r13;
        android.widget.Editor$InputContentType $r3, $r5, $r8, $r12;
        android.os.Bundle $r6, $r9, $r11;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label2;

        if z0 != 0 goto label2;

     label1:
        return null;

     label2:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 != null goto label3;

        if z0 == 0 goto label1;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r13.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

     label3:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6 = $r5.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        if $r6 != null goto label4;

        if z0 == 0 goto label1;

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12 = $r10.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        $r12.<android.widget.Editor$InputContentType: android.os.Bundle extras> = $r11;

     label4:
        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r7.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r9 = $r8.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        return $r9;
    }

    public int getInputType()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i0 = $r2.<android.widget.Editor: int mInputType>;

        return $i0;
    }

    public java.lang.CharSequence getIterableTextForAccessibility()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r2, $r4;
        boolean $z0;
        android.widget.TextView$BufferType $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, $r3);

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        return $r2;
    }

    public android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.AccessibilityIterators$PageTextSegmentIterator r1;
        android.text.Spannable r2, $r5;
        android.widget.AccessibilityIterators$LineTextSegmentIterator r3;
        java.lang.CharSequence $r4, $r8;
        boolean $z0, $z1;
        android.view.AccessibilityIterators$TextSegmentIterator $r6;
        android.text.Layout $r7, $r9, $r10;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 4: goto label2;
            case 16: goto label3;
            default: goto label1;
        };

     label1:
        $r6 = specialinvoke r0.<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>(i0);

        return $r6;

     label2:
        $r8 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        r2 = (android.text.Spannable) $r8;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label1;

        $r9 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r9 == null goto label1;

        r3 = staticinvoke <android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()>();

        $r10 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        virtualinvoke r3.<android.widget.AccessibilityIterators$LineTextSegmentIterator: void initialize(android.text.Spannable,android.text.Layout)>(r2, $r10);

        return r3;

     label3:
        $r4 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        $r5 = (android.text.Spannable) $r4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r7 == null goto label1;

        r1 = staticinvoke <android.widget.AccessibilityIterators$PageTextSegmentIterator: android.widget.AccessibilityIterators$PageTextSegmentIterator getInstance()>();

        virtualinvoke r1.<android.widget.AccessibilityIterators$PageTextSegmentIterator: void initialize(android.widget.TextView)>(r0);

        return r1;
    }

    public final android.text.method.KeyListener getKeyListener()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.text.method.KeyListener $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        return $r3;
    }

    public final android.text.Layout getLayout()
    {
        android.widget.TextView r0;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        return $r1;
    }

    protected float getLeftFadingEdgeStrength()
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25;
        android.widget.TextView$Marquee r1, $r4, $r10;
        boolean z0, $z1;
        android.text.TextUtils$TruncateAt $r2, $r3;
        android.text.Layout $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.widget.TextView;

        $r3 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r3 != $r2 goto label3;

        $i3 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i3 == 1 goto label3;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r4 == null goto label2;

        $r10 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z1 = virtualinvoke $r10.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z1 != 0 goto label2;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        z0 = virtualinvoke r1.<android.widget.TextView$Marquee: boolean shouldDrawLeftFade()>();

        f0 = 0.0F;

        if z0 == 0 goto label1;

        $f25 = virtualinvoke r1.<android.widget.TextView$Marquee: float getScroll()>();

        $i19 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f24 = (float) $i19;

        f0 = $f25 / $f24;

     label1:
        return f0;

     label2:
        $i4 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i4 != 1 goto label3;

        i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        $i5 = r0.<android.widget.TextView: int mGravity>;

        $i6 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i5, i0);

        i1 = 7 & $i6;

        f0 = 0.0F;

        tableswitch(i1)
        {
            case 1: goto label5;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label5;
            default: goto label3;
        };

     label3:
        $f1 = specialinvoke r0.<android.view.View: float getLeftFadingEdgeStrength()>();

        return $f1;

     label4:
        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f2 = virtualinvoke $r5.<android.text.Layout: float getLineRight(int)>(0);

        $i9 = r0.<android.widget.TextView: int mRight>;

        $i7 = r0.<android.widget.TextView: int mLeft>;

        $i8 = $i9 - $i7;

        $f4 = (float) $i8;

        $f3 = $f2 - $f4;

        $i10 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $f5 = (float) $i10;

        $f6 = $f3 - $f5;

        $i11 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $f7 = (float) $i11;

        $f9 = $f6 - $f7;

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f8 = virtualinvoke $r6.<android.text.Layout: float getLineLeft(int)>(0);

        $f12 = $f9 - $f8;

        $i12 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f10 = (float) $i12;

        $f11 = $f12 / $f10;

        return $f11;

     label5:
        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r8.<android.text.Layout: int getParagraphDirection(int)>(0);

        f0 = 0.0F;

        if i2 == 1 goto label1;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f13 = virtualinvoke $r7.<android.text.Layout: float getLineRight(int)>(0);

        $i15 = r0.<android.widget.TextView: int mRight>;

        $i14 = r0.<android.widget.TextView: int mLeft>;

        $i13 = $i15 - $i14;

        $f14 = (float) $i13;

        $f17 = $f13 - $f14;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $f15 = (float) $i16;

        $f16 = $f17 - $f15;

        $i17 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $f19 = (float) $i17;

        $f18 = $f16 - $f19;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f22 = virtualinvoke $r9.<android.text.Layout: float getLineLeft(int)>(0);

        $f21 = $f18 - $f22;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f20 = (float) $i18;

        $f23 = $f21 / $f20;

        return $f23;
    }

    protected int getLeftPaddingOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i2 = $i0 - $i1;

        $f1 = r0.<android.widget.TextView: float mShadowDx>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 - $f0;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f2);

        $i3 = (int) $f3;

        $i4 = $i2 + $i3;

        return $i4;
    }

    int getLineAtCoordinate(float)
    {
        android.widget.TextView r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        $f3 = (float) $i0;

        $f4 = f0 - $f3;

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f4);

        $i1 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingBottom()>();

        $i3 = $i1 - $i2;

        $i4 = -1 + $i3;

        $f5 = (float) $i4;

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>($f5, f1);

        $i5 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        $f7 = (float) $i5;

        f2 = $f6 + $f7;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $i6 = (int) f2;

        $i7 = virtualinvoke $r1.<android.text.Layout: int getLineForVertical(int)>($i6);

        return $i7;
    }

    public int getLineBounds(int, android.graphics.Rect)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Rect r1;
        android.text.Layout $r2, $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 != null goto label2;

        if r1 == null goto label1;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

     label1:
        return 0;

     label2:
        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i1 = virtualinvoke $r3.<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>(i0, r1);

        i2 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i3 = r0.<android.widget.TextView: int mGravity>;

        $i4 = 112 & $i3;

        if $i4 == 48 goto label3;

        $i7 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i2 = i2 + $i7;

     label3:
        if r1 == null goto label4;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>($i6, i2);

     label4:
        $i5 = i1 + i2;

        return $i5;
    }

    public int getLineCount()
    {
        android.widget.TextView r0;
        android.text.Layout $r1, $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i0 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        return $i0;

     label1:
        return 0;
    }

    public int getLineHeight()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke $r1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        $f1 = (float) $i0;

        $f0 = r0.<android.widget.TextView: float mSpacingMult>;

        $f3 = $f1 * $f0;

        $f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        $f4 = $f3 + $f2;

        $i1 = staticinvoke <com.android.internal.util.FastMath: int round(float)>($f4);

        return $i1;
    }

    public float getLineSpacingExtra()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mSpacingAdd>;

        return $f0;
    }

    public float getLineSpacingMultiplier()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mSpacingMult>;

        return $f0;
    }

    public final android.content.res.ColorStateList getLinkTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor>;

        return $r1;
    }

    public final boolean getLinksClickable()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mLinksClickable>;

        return $z0;
    }

    public int getMarqueeRepeatLimit()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMarqueeRepeatLimit>;

        return $i0;
    }

    public int getMaxEms()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.TextView: int mMaxWidth>;

        return $i1;

     label1:
        return -1;
    }

    public int getMaxHeight()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxMode>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.widget.TextView: int mMaximum>;

        return $i1;

     label1:
        return -1;
    }

    public int getMaxLines()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.TextView: int mMaximum>;

        return $i1;

     label1:
        return -1;
    }

    public int getMaxWidth()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.widget.TextView: int mMaxWidth>;

        return $i1;

     label1:
        return -1;
    }

    public int getMinEms()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.TextView: int mMinWidth>;

        return $i1;

     label1:
        return -1;
    }

    public int getMinHeight()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinMode>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.widget.TextView: int mMinimum>;

        return $i1;

     label1:
        return -1;
    }

    public int getMinLines()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinMode>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.widget.TextView: int mMinimum>;

        return $i1;

     label1:
        return -1;
    }

    public int getMinWidth()
    {
        android.widget.TextView r0;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        $i0 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i0 != 2 goto label1;

        $i1 = r0.<android.widget.TextView: int mMinWidth>;

        return $i1;

     label1:
        return -1;
    }

    public final android.text.method.MovementMethod getMovementMethod()
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        return $r1;
    }

    public int getOffsetForPosition(float, float)
    {
        android.widget.TextView r0;
        float f0, f1;
        android.text.Layout $r1;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getLineAtCoordinate(float)>(f1);

        $i1 = specialinvoke r0.<android.widget.TextView: int getOffsetAtCoordinate(int,float)>($i0, f0);

        return $i1;
    }

    public android.text.TextPaint getPaint()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        return $r1;
    }

    public int getPaintFlags()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = virtualinvoke $r1.<android.text.TextPaint: int getFlags()>();

        return $i0;
    }

    public java.lang.String getPrivateImeOptions()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        android.widget.Editor$InputContentType $r3, $r5;
        java.lang.String $r6;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6 = $r5.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions>;

        return $r6;

     label1:
        return null;
    }

    protected float getRightFadingEdgeStrength()
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        android.widget.TextView$Marquee r1, $r4, $r8;
        android.text.TextUtils$TruncateAt $r2, $r3;
        android.text.Layout $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r3 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r3 != $r2 goto label3;

        $i4 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i4 == 1 goto label3;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r4 == null goto label2;

        $r8 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z0 = virtualinvoke $r8.<android.widget.TextView$Marquee: boolean isStopped()>();

        if $z0 != 0 goto label2;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f14 = virtualinvoke r1.<android.widget.TextView$Marquee: float getMaxFadeScroll()>();

        $f13 = virtualinvoke r1.<android.widget.TextView$Marquee: float getScroll()>();

        $f12 = $f14 - $f13;

        $i23 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f15 = (float) $i23;

        f0 = $f12 / $f15;

     label1:
        return f0;

     label2:
        $i5 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i5 != 1 goto label3;

        i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        $i6 = r0.<android.widget.TextView: int mGravity>;

        $i8 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i6, i0);

        i1 = 7 & $i8;

        f0 = 0.0F;

        tableswitch(i1)
        {
            case 1: goto label5;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label1;
            case 6: goto label3;
            case 7: goto label5;
            default: goto label3;
        };

     label3:
        $f1 = specialinvoke r0.<android.view.View: float getRightFadingEdgeStrength()>();

        return $f1;

     label4:
        $i10 = r0.<android.widget.TextView: int mRight>;

        $i7 = r0.<android.widget.TextView: int mLeft>;

        $i9 = $i10 - $i7;

        $i12 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i11 = $i9 - $i12;

        $i13 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i3 = $i11 - $i13;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f3 = virtualinvoke $r5.<android.text.Layout: float getLineWidth(int)>(0);

        $f2 = (float) i3;

        $f4 = $f3 - $f2;

        $i14 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f6 = (float) $i14;

        $f5 = $f4 / $f6;

        return $f5;

     label5:
        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r6.<android.text.Layout: int getParagraphDirection(int)>(0);

        f0 = 0.0F;

        if i2 == -1 goto label1;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f7 = virtualinvoke $r7.<android.text.Layout: float getLineWidth(int)>(0);

        $i16 = r0.<android.widget.TextView: int mRight>;

        $i15 = r0.<android.widget.TextView: int mLeft>;

        $i19 = $i16 - $i15;

        $i20 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i17 = $i19 - $i20;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i22 = $i17 - $i18;

        $f9 = (float) $i22;

        $f8 = $f7 - $f9;

        $i21 = virtualinvoke r0.<android.widget.TextView: int getHorizontalFadingEdgeLength()>();

        $f10 = (float) $i21;

        $f11 = $f8 / $f10;

        return $f11;
    }

    protected int getRightPaddingOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i1 = r0.<android.widget.TextView: int mPaddingRight>;

        $i2 = $i0 - $i1;

        $i3 = neg $i2;

        $f1 = r0.<android.widget.TextView: float mShadowDx>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 + $f0;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f2);

        $i4 = (int) $f3;

        $i5 = $i3 + $i4;

        return $i5;
    }

    public int getSelectionEnd()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r1);

        return $i0;
    }

    public int getSelectionStart()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r1);

        return $i0;
    }

    public int getShadowColor()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i0 = $r1.<android.text.TextPaint: int shadowColor>;

        return $i0;
    }

    public float getShadowDx()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowDx>;

        return $f0;
    }

    public float getShadowDy()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowDy>;

        return $f0;
    }

    public float getShadowRadius()
    {
        android.widget.TextView r0;
        float $f0;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        return $f0;
    }

    public final boolean getShowSoftInputOnFocus()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r2.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public java.util.Locale getSpellCheckerLocale()
    {
        android.widget.TextView r0;
        java.util.Locale $r1;

        r0 := @this: android.widget.TextView;

        $r1 = specialinvoke r0.<android.widget.TextView: java.util.Locale getTextServicesLocale(boolean)>(1);

        return $r1;
    }

    public java.lang.CharSequence getText()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        return $r1;
    }

    public final android.content.res.ColorStateList getTextColors()
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor>;

        return $r1;
    }

    android.text.TextDirectionHeuristic getTextDirectionHeuristic()
    {
        android.widget.TextView r0;
        boolean z0, $z1, z2;
        int $i0, $i1, i2;
        android.text.TextDirectionHeuristic $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.TextView;

        z0 = 1;

        $z1 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z1 == 0 goto label1;

        $r7 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r7;

     label1:
        $i0 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        z2 = z0;

        i2 = (int) z2;

        if $i0 != i2 goto label4;

     label2:
        $i1 = virtualinvoke r0.<android.widget.TextView: int getTextDirection()>();

        tableswitch($i1)
        {
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label8;
            case 5: goto label9;
            default: goto label3;
        };

     label3:
        if z0 == 0 goto label5;

        $r2 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        return $r2;

     label4:
        z0 = 0;

        goto label2;

     label5:
        $r1 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        return $r1;

     label6:
        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        return $r6;

     label7:
        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        return $r5;

     label8:
        $r4 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        return $r4;

     label9:
        $r3 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LOCALE>;

        return $r3;
    }

    public java.lang.CharSequence getTextForAccessibility()
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getHint()>();

     label1:
        return r1;
    }

    public java.util.Locale getTextLocale()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        java.util.Locale $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: java.util.Locale getTextLocale()>();

        return $r2;
    }

    public float getTextScaleX()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getTextScaleX()>();

        return $f0;
    }

    public java.util.Locale getTextServicesLocale()
    {
        android.widget.TextView r0;
        java.util.Locale $r1;

        r0 := @this: android.widget.TextView;

        $r1 = specialinvoke r0.<android.widget.TextView: java.util.Locale getTextServicesLocale(boolean)>(0);

        return $r1;
    }

    public float getTextSize()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        float $f0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f0 = virtualinvoke $r1.<android.text.TextPaint: float getTextSize()>();

        return $f0;
    }

    protected int getTopPaddingOffset()
    {
        android.widget.TextView r0;
        float $f0, $f1, $f2, $f3;
        int $i0;

        r0 := @this: android.widget.TextView;

        $f1 = r0.<android.widget.TextView: float mShadowDy>;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $f2 = $f1 - $f0;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f2);

        $i0 = (int) $f3;

        return $i0;
    }

    public int getTotalPaddingBottom()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i1 = specialinvoke r0.<android.widget.TextView: int getBottomVerticalOffset(boolean)>(1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getTotalPaddingEnd()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingEnd()>();

        return $i0;
    }

    public int getTotalPaddingLeft()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        return $i0;
    }

    public int getTotalPaddingRight()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        return $i0;
    }

    public int getTotalPaddingStart()
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingStart()>();

        return $i0;
    }

    public int getTotalPaddingTop()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i1 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public final android.text.method.TransformationMethod getTransformationMethod()
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        return $r1;
    }

    java.lang.CharSequence getTransformedText(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1, $r2, $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        $r3 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>($r2);

        return $r3;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.widget.TextView r0;
        android.text.TextPaint $r1;
        android.graphics.Typeface $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r2 = virtualinvoke $r1.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        return $r2;
    }

    public final android.content.UndoManager getUndoManager()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.content.UndoManager $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.content.UndoManager mUndoManager>;

        return $r3;
    }

    public android.text.style.URLSpan[] getUrls()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1, $r3, $r4;
        boolean $z0;
        android.text.style.URLSpan[] $r2, $r7;
        android.text.Spanned $r5;
        int $i0;
        java.lang.Object[] $r6;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spanned) $r3;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        $r6 = interfaceinvoke $r5.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/style/URLSpan");

        $r7 = (android.text.style.URLSpan[]) $r6;

        return $r7;

     label1:
        $r2 = newarray (android.text.style.URLSpan)[0];

        return $r2;
    }

    int getVerticalOffset(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.text.Layout r1, $r3;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $i4 = r0.<android.widget.TextView: int mGravity>;

        i0 = 112 & $i4;

        r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if z0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i7 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if $i7 != 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 == null goto label1;

        r1 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label1:
        i1 = 0;

        if i0 == 48 goto label2;

        i2 = specialinvoke r0.<android.widget.TextView: int getBoxHeight(android.text.Layout)>(r1);

        i3 = virtualinvoke r1.<android.text.Layout: int getHeight()>();

        i1 = 0;

        if i3 >= i2 goto label2;

        if i0 != 80 goto label3;

        i1 = i2 - i3;

     label2:
        return i1;

     label3:
        $i5 = i2 - i3;

        $i6 = $i5 >> 1;

        return $i6;
    }

    public android.text.method.WordIterator getWordIterator()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        android.text.method.WordIterator $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = virtualinvoke $r2.<android.widget.Editor: android.text.method.WordIterator getWordIterator()>();

        return $r3;

     label1:
        return null;
    }

    void handleTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.widget.Editor$InputMethodState r2;
        android.widget.Editor $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 != null goto label6;

        r2 = null;

     label1:
        if r2 == null goto label2;

        $i15 = r2.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i15 != 0 goto label3;

     label2:
        virtualinvoke r0.<android.widget.TextView: void updateAfterEdit()>();

     label3:
        if r2 == null goto label5;

        r2.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

        $i3 = r2.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i3 >= 0 goto label7;

        r2.<android.widget.Editor$InputMethodState: int mChangedStart> = i0;

        $i13 = i0 + i1;

        r2.<android.widget.Editor$InputMethodState: int mChangedEnd> = $i13;

     label4:
        $i11 = r2.<android.widget.Editor$InputMethodState: int mChangedDelta>;

        $i12 = i2 - i1;

        $i14 = $i11 + $i12;

        r2.<android.widget.Editor$InputMethodState: int mChangedDelta> = $i14;

     label5:
        virtualinvoke r0.<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        virtualinvoke r0.<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;

     label6:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r2 = $r4.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        goto label1;

     label7:
        $i4 = r2.<android.widget.Editor$InputMethodState: int mChangedStart>;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i0);

        r2.<android.widget.Editor$InputMethodState: int mChangedStart> = $i5;

        $i9 = r2.<android.widget.Editor$InputMethodState: int mChangedEnd>;

        $i7 = i0 + i1;

        $i6 = r2.<android.widget.Editor$InputMethodState: int mChangedDelta>;

        $i8 = $i7 - $i6;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8);

        r2.<android.widget.Editor$InputMethodState: int mChangedEnd> = $i10;

        goto label4;
    }

    public boolean hasOverlappingRendering()
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        java.lang.CharSequence $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.graphics.drawable.Drawable getBackground()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.graphics.drawable.Drawable getBackground()>();

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if $r4 != null goto label2;

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Spannable;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isHorizontalFadingEdgeEnabled()>();

        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean hasSelection()
    {
        android.widget.TextView r0;
        int i0, i1;

        r0 := @this: android.widget.TextView;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 < 0 goto label1;

        if i0 == i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void hideErrorIfUnchanged()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2, $r4;
        java.lang.CharSequence $r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r4.<android.widget.Editor: boolean mErrorWasChanged>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

     label1:
        return;
    }

    void invalidateCursor()
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>(i0, i0, i0);

        return;
    }

    void invalidateCursorPath()
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19;
        android.graphics.Rect r1;
        android.graphics.RectF r2, $r10, $r12, $r13, $r14, $r15;
        java.lang.Throwable r3, $r16;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22;
        boolean $z0;
        android.widget.Editor $r4, $r5, $r6;
        android.graphics.drawable.Drawable $r7;
        android.graphics.drawable.Drawable[] $r8;
        android.text.TextPaint $r9;
        android.graphics.Path $r11;
        byte $b15;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mHighlightPathBogus>;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<android.widget.TextView: void invalidateCursor()>();

     label01:
        return;

     label02:
        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i3 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i4 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i1 = $i3 + $i4;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i5 = $r4.<android.widget.Editor: int mCursorCount>;

        if $i5 != 0 goto label10;

        r2 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        entermonitor r2;

     label03:
        $r9 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f2 = virtualinvoke $r9.<android.text.TextPaint: float getStrokeWidth()>();

        f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f2);

     label04:
        $b15 = f0 cmpg 1.0F;

        if $b15 >= 0 goto label05;

        f0 = 1.0F;

     label05:
        f1 = f0 / 2.0F;

        $r11 = r0.<android.widget.TextView: android.graphics.Path mHighlightPath>;

        $r10 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        virtualinvoke $r11.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r10, 0);

        $f3 = (float) i0;

        $r12 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f5 = $r12.<android.graphics.RectF: float left>;

        $f4 = $f3 + $f5;

        $f7 = $f4 - f1;

        $f8 = staticinvoke <android.util.FloatMath: float floor(float)>($f7);

        $i16 = (int) $f8;

        $f10 = (float) i1;

        $r13 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f6 = $r13.<android.graphics.RectF: float top>;

        $f11 = $f10 + $f6;

        $f9 = $f11 - f1;

        $f14 = staticinvoke <android.util.FloatMath: float floor(float)>($f9);

        $i17 = (int) $f14;

        $f12 = (float) i0;

        $r14 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f13 = $r14.<android.graphics.RectF: float right>;

        $f17 = $f12 + $f13;

        $f16 = f1 + $f17;

        $f15 = staticinvoke <android.util.FloatMath: float ceil(float)>($f16);

        $i19 = (int) $f15;

        $f19 = (float) i1;

        $r15 = <android.widget.TextView: android.graphics.RectF TEMP_RECTF>;

        $f20 = $r15.<android.graphics.RectF: float bottom>;

        $f18 = $f19 + $f20;

        $f22 = f1 + $f18;

        $f21 = staticinvoke <android.util.FloatMath: float ceil(float)>($f22);

        $i18 = (int) $f21;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i16, $i17, $i19, $i18);

        exitmonitor r2;

     label06:
        return;

     label07:
        $r16 := @caughtexception;

        r3 = $r16;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        i2 = 0;

     label11:
        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i6 = $r5.<android.widget.Editor: int mCursorCount>;

        if i2 >= $i6 goto label01;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r8 = $r6.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r7 = $r8[i2];

        r1 = virtualinvoke $r7.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i7 = r1.<android.graphics.Rect: int left>;

        $i14 = i0 + $i7;

        $i9 = r1.<android.graphics.Rect: int top>;

        $i12 = i1 + $i9;

        $i8 = r1.<android.graphics.Rect: int right>;

        $i13 = i0 + $i8;

        $i11 = r1.<android.graphics.Rect: int bottom>;

        $i10 = i1 + $i11;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i14, $i12, $i13, $i10);

        i2 = i2 + 1;

        goto label11;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, $r4, $r5, $r6, $r7;
        android.graphics.Rect r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69;
        android.widget.TextView$Drawables r3;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label2;

        r2 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        i0 = r0.<android.widget.TextView: int mScrollX>;

        i1 = r0.<android.widget.TextView: int mScrollY>;

        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r3 == null goto label1;

        $r5 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if r1 != $r5 goto label3;

        i9 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i10 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i67 = r0.<android.widget.TextView: int mBottom>;

        $i57 = r0.<android.widget.TextView: int mTop>;

        $i66 = $i67 - $i57;

        $i69 = $i66 - i10;

        i11 = $i69 - i9;

        $i68 = r0.<android.widget.TextView: int mPaddingLeft>;

        i0 = i0 + $i68;

        $i63 = r3.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i62 = i11 - $i63;

        $i65 = $i62 / 2;

        $i64 = i9 + $i65;

        i1 = i1 + $i64;

     label1:
        $i13 = r2.<android.graphics.Rect: int left>;

        $i18 = i0 + $i13;

        $i12 = r2.<android.graphics.Rect: int top>;

        $i19 = i1 + $i12;

        $i15 = r2.<android.graphics.Rect: int right>;

        $i16 = i0 + $i15;

        $i14 = r2.<android.graphics.Rect: int bottom>;

        $i17 = i1 + $i14;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i18, $i19, $i16, $i17);

     label2:
        return;

     label3:
        $r4 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if r1 != $r4 goto label4;

        i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i7 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        $i46 = r0.<android.widget.TextView: int mBottom>;

        $i47 = r0.<android.widget.TextView: int mTop>;

        $i52 = $i46 - $i47;

        $i53 = $i52 - i7;

        i8 = $i53 - i6;

        $i55 = r0.<android.widget.TextView: int mRight>;

        $i54 = r0.<android.widget.TextView: int mLeft>;

        $i49 = $i55 - $i54;

        $i48 = r0.<android.widget.TextView: int mPaddingRight>;

        $i51 = $i49 - $i48;

        $i50 = r3.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i58 = $i51 - $i50;

        i0 = i0 + $i58;

        $i59 = r3.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i60 = i8 - $i59;

        $i61 = $i60 / 2;

        $i56 = i6 + $i61;

        i1 = i1 + $i56;

        goto label1;

     label4:
        $r7 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if r1 != $r7 goto label5;

        i4 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i5 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i36 = r0.<android.widget.TextView: int mRight>;

        $i37 = r0.<android.widget.TextView: int mLeft>;

        $i41 = $i36 - $i37;

        $i40 = $i41 - i5;

        $i38 = $i40 - i4;

        $i39 = r3.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i45 = $i38 - $i39;

        $i44 = $i45 / 2;

        $i43 = i4 + $i44;

        i0 = i0 + $i43;

        $i42 = r0.<android.widget.TextView: int mPaddingTop>;

        i1 = i1 + $i42;

        goto label1;

     label5:
        $r6 = r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if r1 != $r6 goto label1;

        i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i23 = r0.<android.widget.TextView: int mRight>;

        $i22 = r0.<android.widget.TextView: int mLeft>;

        $i20 = $i23 - $i22;

        $i21 = $i20 - i3;

        $i27 = $i21 - i2;

        $i26 = r3.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        $i24 = $i27 - $i26;

        $i25 = $i24 / 2;

        $i30 = i2 + $i25;

        i0 = i0 + $i30;

        $i28 = r0.<android.widget.TextView: int mBottom>;

        $i31 = r0.<android.widget.TextView: int mTop>;

        $i34 = $i28 - $i31;

        $i29 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i32 = $i34 - $i29;

        $i35 = r3.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i33 = $i32 - $i35;

        i1 = i1 + $i33;

        goto label1;
    }

    void invalidateRegion(int, int, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        boolean z0;
        android.graphics.Rect r1;
        android.text.Layout $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r14;
        float $f0, $f1;
        double $d0, $d1;
        android.widget.Editor $r9, $r10, $r12;
        android.graphics.drawable.Drawable[] $r11;
        android.graphics.drawable.Drawable $r13;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 != null goto label1;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;

     label1:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r2.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i3 = virtualinvoke $r4.<android.text.Layout: int getLineTop(int)>(i2);

        if i2 <= 0 goto label2;

        $r14 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i25 = i2 - 1;

        $i27 = virtualinvoke $r14.<android.text.Layout: int getLineDescent(int)>($i25);

        i3 = i3 - $i27;

     label2:
        if i0 != i1 goto label5;

        i4 = i2;

     label3:
        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i5 = virtualinvoke $r6.<android.text.Layout: int getLineBottom(int)>(i4);

        if z0 == 0 goto label6;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r9 == null goto label6;

        i12 = 0;

     label4:
        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i23 = $r12.<android.widget.Editor: int mCursorCount>;

        if i12 >= $i23 goto label6;

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r11 = $r10.<android.widget.Editor: android.graphics.drawable.Drawable[] mCursorDrawable>;

        $r13 = $r11[i12];

        r1 = virtualinvoke $r13.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i24 = r1.<android.graphics.Rect: int top>;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i24);

        $i26 = r1.<android.graphics.Rect: int bottom>;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, $i26);

        i12 = i12 + 1;

        goto label4;

     label5:
        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i4 = virtualinvoke $r5.<android.text.Layout: int getLineForOffset(int)>(i1);

        goto label3;

     label6:
        i6 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i14 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i13 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

        i7 = $i14 + $i13;

        if i2 != i4 goto label8;

        if z0 != 0 goto label8;

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = virtualinvoke $r8.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        i10 = (int) $f0;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f1 = virtualinvoke $r7.<android.text.Layout: float getPrimaryHorizontal(int)>(i1);

        $d1 = (double) $f1;

        $d0 = 1.0 + $d1;

        i11 = (int) $d0;

        i8 = i10 + i6;

        i9 = i11 + i6;

     label7:
        $i18 = r0.<android.widget.TextView: int mScrollX>;

        $i20 = i8 + $i18;

        $i19 = i7 + i3;

        $i17 = r0.<android.widget.TextView: int mScrollX>;

        $i22 = i9 + $i17;

        $i21 = i7 + i5;

        virtualinvoke r0.<android.widget.TextView: void invalidate(int,int,int,int)>($i20, $i19, $i22, $i21);

        return;

     label8:
        i8 = i6;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i9 = $i16 - $i15;

        goto label7;
    }

    public boolean isAccessibilitySelectionExtendable()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return 1;
    }

    public boolean isCursorVisible()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r2.<android.widget.Editor: boolean mCursorVisible>;

        return $z0;
    }

    boolean isInBatchEditMode()
    {
        android.widget.TextView r0;
        android.widget.Editor$InputMethodState r1;
        android.widget.Editor $r2, $r3, $r4;
        boolean $z0;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r1 = $r3.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if r1 == null goto label3;

        $i0 = r1.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i0 <= 0 goto label1;

        return 1;

     label3:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r4.<android.widget.Editor: boolean mInBatchEditControllers>;

        return $z0;
    }

    public boolean isInputMethodTarget()
    {
        android.widget.TextView r0;
        android.view.inputmethod.InputMethodManager r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isPaddingOffsetRequired()
    {
        android.widget.TextView r0;
        float $f0;
        byte $b0;
        android.widget.TextView$Drawables $r1;

        r0 := @this: android.widget.TextView;

        $f0 = r0.<android.widget.TextView: float mShadowRadius>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isSingleLine()
    {
        android.widget.TextView r0;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        return $z0;
    }

    public boolean isSuggestionsEnabled()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.Editor $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i1 = $r2.<android.widget.Editor: int mInputType>;

        $i2 = 15 & $i1;

        if $i2 != 1 goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i3 = $r3.<android.widget.Editor: int mInputType>;

        $i4 = 524288 & $i3;

        if $i4 > 0 goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i5 = $r4.<android.widget.Editor: int mInputType>;

        i0 = 4080 & $i5;

        if i0 == 0 goto label3;

        if i0 == 48 goto label3;

        if i0 == 80 goto label3;

        if i0 == 64 goto label3;

        if i0 != 160 goto label1;

     label3:
        return 1;
    }

    boolean isTextEditable()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTextSelectable()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z0 = $r2.<android.widget.Editor: boolean mTextIsSelectable>;

        return $z0;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.TextView r0;
        android.widget.TextView$Drawables $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, $r23, $r25;
        android.graphics.drawable.Drawable $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r24;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label6;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r3 = $r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r3 == null goto label1;

        $r25 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r24 = $r25.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r24.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        $r4 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r5 = $r4.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r5 == null goto label2;

        $r23 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r22 = $r23.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r22.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label2:
        $r6 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r7 = $r6.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r7 == null goto label3;

        $r21 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r20 = $r21.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label3:
        $r8 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r9 = $r8.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r9 == null goto label4;

        $r19 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r18 = $r19.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r18.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label4:
        $r10 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r11 = $r10.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r11 == null goto label5;

        $r17 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r16 = $r17.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r16.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label5:
        $r12 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r13 = $r12.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r13 == null goto label6;

        $r14 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r15 = $r14.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label6:
        return;
    }

    public int length()
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    protected void makeNewLayout(int, int, android.text.BoringLayout$Metrics, android.text.BoringLayout$Metrics, int, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.text.BoringLayout$Metrics r1, r2, r5, $r59;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, $z14, z15, $z16;
        android.text.Layout$Alignment r3, $r73, $r75;
        android.text.TextUtils$TruncateAt r4, r12, r19, r24, r28, $r32, $r33, r34, $r36, $r38, $r39, $r40, $r42, $r45, $r46, $r67, $r68;
        android.text.TextPaint r6, r11, r13, r18, r20, r25, r26, r29, $r70;
        java.lang.CharSequence r7, r9, r15, r16, r21, r22, r27, r31, $r37, $r51, $r57, $r69;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, $f16;
        android.text.TextDirectionHeuristic r8, r10, r14, r17, $r41, $r58, $r65;
        android.text.BoringLayout r23, r30, $r53, $r54, $r55, $r60, $r61, $r63, $r64;
        android.text.Layout $r35, $r43, $r62, $r66, $r72, $r74;
        android.view.ViewGroup$LayoutParams $r44;
        android.widget.Editor $r47, $r48;
        android.text.StaticLayout $r49, $r50, $r52, $r56;
        android.text.method.KeyListener $r71;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.text.BoringLayout$Metrics;

        r2 := @parameter3: android.text.BoringLayout$Metrics;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

        $i10 = r0.<android.widget.TextView: int mMaximum>;

        r0.<android.widget.TextView: int mOldMaximum> = $i10;

        $i11 = r0.<android.widget.TextView: int mMaxMode>;

        r0.<android.widget.TextView: int mOldMaxMode> = $i11;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        if i0 >= 0 goto label01;

        i0 = 0;

     label01:
        if i1 >= 0 goto label02;

        i1 = 0;

     label02:
        r3 = specialinvoke r0.<android.widget.TextView: android.text.Layout$Alignment getLayoutAlignment()>();

        $z14 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z14 == 0 goto label24;

        $r74 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r74 == null goto label24;

        $r73 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if r3 == $r73 goto label03;

        $r75 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if r3 != $r75 goto label24;

     label03:
        z1 = 1;

     label04:
        i3 = 0;

        if z1 == 0 goto label05;

        $r72 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i3 = virtualinvoke $r72.<android.text.Layout: int getParagraphDirection(int)>(0);

     label05:
        $r32 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r32 == null goto label25;

        $r71 = virtualinvoke r0.<android.widget.TextView: android.text.method.KeyListener getKeyListener()>();

        if $r71 != null goto label25;

        z2 = 1;

     label06:
        $r40 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r33 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r40 != $r33 goto label26;

        $i18 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i18 == 0 goto label26;

        z3 = 1;

     label07:
        r4 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r42 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r39 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r42 != $r39 goto label08;

        $i17 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i17 != 1 goto label08;

        r4 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END_SMALL>;

     label08:
        $r41 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        if $r41 != null goto label09;

        $r65 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r65;

     label09:
        $r36 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if r4 != $r36 goto label27;

        z4 = 1;

     label10:
        $r35 = specialinvoke r0.<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean)>(i0, r1, i2, r3, z2, r4, z4);

        r0.<android.widget.TextView: android.text.Layout mLayout> = $r35;

        if z3 == 0 goto label13;

        $r68 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r4 != $r68 goto label28;

        r34 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

     label11:
        $r67 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if r4 == $r67 goto label29;

        z15 = 1;

     label12:
        $r66 = specialinvoke r0.<android.widget.TextView: android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean)>(i0, r1, i2, r3, z2, r34, z15);

        r0.<android.widget.TextView: android.text.Layout mSavedMarqueeModeLayout> = $r66;

     label13:
        $r38 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r38 == null goto label30;

        z5 = 1;

     label14:
        r0.<android.widget.TextView: android.text.Layout mHintLayout> = null;

        $r37 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r37 == null goto label19;

        if z5 == 0 goto label15;

        i1 = i0;

     label15:
        r5 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r2 != r5 goto label16;

        $r69 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r70 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r58 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r59 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring>;

        r2 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r69, $r70, $r58, $r59);

        if r2 == null goto label16;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = r2;

     label16:
        if r2 == null goto label38;

        $i12 = r2.<android.text.BoringLayout$Metrics: int width>;

        if $i12 > i1 goto label32;

        if z5 == 0 goto label17;

        $i16 = r2.<android.text.BoringLayout$Metrics: int width>;

        if $i16 > i2 goto label32;

     label17:
        $r64 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r64 == null goto label31;

        r30 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        r31 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r29 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        f13 = r0.<android.widget.TextView: float mSpacingMult>;

        f14 = r0.<android.widget.TextView: float mSpacingAdd>;

        z12 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r60 = virtualinvoke r30.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>(r31, r29, i1, r3, f13, f14, r2, z12);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r60;

     label18:
        $r62 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        $r61 = (android.text.BoringLayout) $r62;

        r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout> = $r61;

     label19:
        if z0 != 0 goto label20;

        if z1 == 0 goto label21;

        $r43 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i5 = virtualinvoke $r43.<android.text.Layout: int getParagraphDirection(int)>(0);

        if i3 == i5 goto label21;

     label20:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

     label21:
        $r45 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r46 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r45 != $r46 goto label22;

        $f16 = (float) i2;

        $z16 = specialinvoke r0.<android.widget.TextView: boolean compressText(float)>($f16);

        if $z16 != 0 goto label22;

        $r44 = r0.<android.widget.TextView: android.view.ViewGroup$LayoutParams mLayoutParams>;

        i4 = $r44.<android.view.ViewGroup$LayoutParams: int height>;

        if i4 == -2 goto label42;

        if i4 == -1 goto label42;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

     label22:
        $r48 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r48 == null goto label23;

        $r47 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r47.<android.widget.Editor: void prepareCursorControllers()>();

     label23:
        return;

     label24:
        z1 = 0;

        goto label04;

     label25:
        z2 = 0;

        goto label06;

     label26:
        z3 = 0;

        goto label07;

     label27:
        z4 = 0;

        goto label10;

     label28:
        r34 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        goto label11;

     label29:
        z15 = 0;

        goto label12;

     label30:
        z5 = 0;

        goto label14;

     label31:
        r27 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r26 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        f12 = r0.<android.widget.TextView: float mSpacingMult>;

        f15 = r0.<android.widget.TextView: float mSpacingAdd>;

        z13 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r63 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>(r27, r26, i1, r3, f12, f15, r2, z13);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r63;

        goto label18;

     label32:
        if z5 == 0 goto label34;

        $i14 = r2.<android.text.BoringLayout$Metrics: int width>;

        if $i14 > i1 goto label34;

        $r55 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        if $r55 == null goto label33;

        r23 = r0.<android.widget.TextView: android.text.BoringLayout mSavedHintLayout>;

        r22 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r25 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        f11 = r0.<android.widget.TextView: float mSpacingMult>;

        f10 = r0.<android.widget.TextView: float mSpacingAdd>;

        z11 = r0.<android.widget.TextView: boolean mIncludePad>;

        r28 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r54 = virtualinvoke r23.<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>(r22, r25, i1, r3, f11, f10, r2, z11, r28, i2);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r54;

        goto label19;

     label33:
        r21 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r20 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        f9 = r0.<android.widget.TextView: float mSpacingMult>;

        f8 = r0.<android.widget.TextView: float mSpacingAdd>;

        z10 = r0.<android.widget.TextView: boolean mIncludePad>;

        r24 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r53 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>(r21, r20, i1, r3, f9, f8, r2, z10, r24, i2);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r53;

        goto label19;

     label34:
        if z5 == 0 goto label37;

        r16 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r57 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        i8 = interfaceinvoke $r57.<java.lang.CharSequence: int length()>();

        r18 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r17 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        f6 = r0.<android.widget.TextView: float mSpacingMult>;

        f7 = r0.<android.widget.TextView: float mSpacingAdd>;

        z9 = r0.<android.widget.TextView: boolean mIncludePad>;

        r19 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $i15 = r0.<android.widget.TextView: int mMaxMode>;

        if $i15 != 1 goto label36;

        i9 = r0.<android.widget.TextView: int mMaximum>;

     label35:
        $r56 = new android.text.StaticLayout;

        specialinvoke $r56.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r16, 0, i8, r18, i1, r3, r17, f6, f7, z9, r19, i2, i9);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r56;

        goto label19;

     label36:
        i9 = 2147483647;

        goto label35;

     label37:
        r15 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r13 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r14 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        f4 = r0.<android.widget.TextView: float mSpacingMult>;

        f5 = r0.<android.widget.TextView: float mSpacingAdd>;

        z8 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r49 = new android.text.StaticLayout;

        specialinvoke $r49.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>(r15, r13, i1, r3, r14, f4, f5, z8);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r49;

        goto label19;

     label38:
        if z5 == 0 goto label41;

        r9 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r51 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        i6 = interfaceinvoke $r51.<java.lang.CharSequence: int length()>();

        r11 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r10 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        f3 = r0.<android.widget.TextView: float mSpacingMult>;

        f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        z7 = r0.<android.widget.TextView: boolean mIncludePad>;

        r12 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $i13 = r0.<android.widget.TextView: int mMaxMode>;

        if $i13 != 1 goto label40;

        i7 = r0.<android.widget.TextView: int mMaximum>;

     label39:
        $r50 = new android.text.StaticLayout;

        specialinvoke $r50.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r9, 0, i6, r11, i1, r3, r10, f3, f2, z7, r12, i2, i7);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r50;

        goto label19;

     label40:
        i7 = 2147483647;

        goto label39;

     label41:
        r7 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r6 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        r8 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        f0 = r0.<android.widget.TextView: float mSpacingMult>;

        f1 = r0.<android.widget.TextView: float mSpacingAdd>;

        z6 = r0.<android.widget.TextView: boolean mIncludePad>;

        $r52 = new android.text.StaticLayout;

        specialinvoke $r52.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>(r7, r6, i1, r3, r8, f0, f1, z6);

        r0.<android.widget.TextView: android.text.Layout mHintLayout> = $r52;

        goto label19;

     label42:
        r0.<android.widget.TextView: boolean mRestartMarquee> = 1;

        goto label22;
    }

    public boolean moveCursorToVisibleOffset()
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        java.lang.CharSequence $r1, $r7;
        boolean $z0;
        android.text.Layout $r2, $r3, $r4, $r5, $r8, $r9, $r10;
        float $f0, $f1;
        android.text.Spannable $r6;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r1 instanceof android.text.Spannable;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        $i14 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i0 == $i14 goto label02;

        return 0;

     label02:
        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i1 = virtualinvoke $r2.<android.text.Layout: int getLineForOffset(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i2 = virtualinvoke $r3.<android.text.Layout: int getLineTop(int)>(i1);

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i15 = i1 + 1;

        i3 = virtualinvoke $r4.<android.text.Layout: int getLineTop(int)>($i15);

        $i16 = r0.<android.widget.TextView: int mBottom>;

        $i17 = r0.<android.widget.TextView: int mTop>;

        $i19 = $i16 - $i17;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i21 = $i19 - $i18;

        $i20 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        i4 = $i21 - $i20;

        $i24 = i3 - i2;

        i5 = $i24 / 2;

        $i25 = i4 / 4;

        if i5 <= $i25 goto label03;

        i5 = i4 / 4;

     label03:
        i6 = r0.<android.widget.TextView: int mScrollY>;

        $i22 = i6 + i5;

        if i2 >= $i22 goto label08;

        $r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i38 = i6 + i5;

        $i39 = i3 - i2;

        $i40 = $i38 + $i39;

        i1 = virtualinvoke $r10.<android.text.Layout: int getLineForVertical(int)>($i40);

     label04:
        $i26 = r0.<android.widget.TextView: int mRight>;

        $i29 = r0.<android.widget.TextView: int mLeft>;

        $i27 = $i26 - $i29;

        $i31 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i32 = $i27 - $i31;

        $i30 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i7 = $i32 - $i30;

        i8 = r0.<android.widget.TextView: int mScrollX>;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f0 = (float) i8;

        i9 = virtualinvoke $r5.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i1, $f0);

        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i33 = i7 + i8;

        $f1 = (float) $i33;

        i10 = virtualinvoke $r8.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i1, $f1);

        if i9 >= i10 goto label09;

        i11 = i9;

     label05:
        if i9 <= i10 goto label10;

        i12 = i9;

     label06:
        i13 = i0;

        if i13 >= i11 goto label11;

        i13 = i11;

     label07:
        if i13 == i0 goto label12;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r7;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r6, i13);

        return 1;

     label08:
        $i23 = i4 + i6;

        $i28 = $i23 - i5;

        if i3 <= $i28 goto label04;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i37 = i4 + i6;

        $i35 = $i37 - i5;

        $i36 = i3 - i2;

        $i34 = $i35 - $i36;

        i1 = virtualinvoke $r9.<android.text.Layout: int getLineForVertical(int)>($i34);

        goto label04;

     label09:
        i11 = i10;

        goto label05;

     label10:
        i12 = i10;

        goto label06;

     label11:
        if i13 <= i12 goto label07;

        i13 = i12;

        goto label07;

     label12:
        return 0;
    }

    protected void onAttachedToWindow()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        r0.<android.widget.TextView: boolean mTemporaryDetach> = 0;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onAttachedToWindow()>();

     label1:
        return;
    }

    public void onBeginBatchEdit()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return;
    }

    public boolean onCheckIsTextEditor()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;
        int $i0;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i0 = $r2.<android.widget.Editor: int mInputType>;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onCommitCompletion(android.view.inputmethod.CompletionInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.CompletionInfo r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        return;
    }

    public void onCommitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.widget.Editor $r2, $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>(r1);

     label1:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] r1, r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z0 == 0 goto label3;

        r1 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>(i0);

     label1:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z1 == 0 goto label5;

        i1 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i1 goto label5;

        $i4 = r1[i2];

        if $i4 != 16842919 goto label4;

        $i5 = i1 - 1;

        r2 = newarray (int)[$i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i2);

        $i7 = i2 + 1;

        $i6 = i1 - i2;

        $i8 = -1 + $i6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i7, r2, i2, $i8);

        return r2;

     label3:
        $i3 = i0 + 1;

        r1 = specialinvoke r0.<android.view.View: int[] onCreateDrawableState(int)>($i3);

        $r3 = <android.widget.TextView: int[] MULTILINE_STATE_SET>;

        staticinvoke <android.widget.TextView: int[] mergeDrawableStates(int[],int[])>(r1, $r3);

        goto label1;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        return r1;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.TextView r0;
        android.view.inputmethod.EditorInfo r1;
        com.android.internal.widget.EditableInputConnection r2, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.Editor $r3, $r4, $r11, $r15, $r17, $r18, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.widget.Editor$InputContentType $r5, $r12, $r13, $r19, $r20, $r22;
        android.view.View $r6, $r7;
        java.lang.CharSequence $r8, $r9, $r16;
        java.lang.String $r14;
        android.os.Bundle $r23;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z0 == 0 goto label9;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z1 == 0 goto label9;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void createInputMethodStateIfNeeded()>();

        $i0 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        r1.<android.view.inputmethod.EditorInfo: int inputType> = $i0;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r5 == null goto label7;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r12 = $r11.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i22 = $r12.<android.widget.Editor$InputContentType: int imeOptions>;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i22;

        $r15 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r13 = $r15.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r14 = $r13.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.String privateImeOptions> = $r14;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r19 = $r18.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r16 = $r19.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel> = $r16;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r22 = $r17.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $i23 = $r22.<android.widget.Editor$InputContentType: int imeActionId>;

        r1.<android.view.inputmethod.EditorInfo: int actionId> = $i23;

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r20 = $r21.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r23 = $r20.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        r1.<android.view.inputmethod.EditorInfo: android.os.Bundle extras> = $r23;

     label1:
        $r6 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(130);

        if $r6 == null goto label2;

        $i20 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i21 = 134217728 | $i20;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i21;

     label2:
        $r7 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(33);

        if $r7 == null goto label3;

        $i16 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i17 = 67108864 | $i16;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i17;

     label3:
        $i1 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = 255 & $i1;

        if $i2 != 0 goto label5;

        $i9 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i12 = 134217728 & $i9;

        if $i12 == 0 goto label8;

        $i18 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i19 = 5 | $i18;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i19;

     label4:
        $z4 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z4 != 0 goto label5;

        $i15 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i14 = 1073741824 | $i15;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i14;

     label5:
        $i3 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $z2 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>($i3);

        if $z2 == 0 goto label6;

        $i7 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i10 = 1073741824 | $i7;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i10;

     label6:
        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence hintText> = $r8;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z3 = $r9 instanceof android.text.Editable;

        if $z3 == 0 goto label9;

        $r10 = new com.android.internal.widget.EditableInputConnection;

        specialinvoke $r10.<com.android.internal.widget.EditableInputConnection: void <init>(android.widget.TextView)>(r0);

        r2 = $r10;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        r1.<android.view.inputmethod.EditorInfo: int initialSelStart> = $i4;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        r1.<android.view.inputmethod.EditorInfo: int initialSelEnd> = $i6;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        $i8 = interfaceinvoke r2.<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>($i5);

        r1.<android.view.inputmethod.EditorInfo: int initialCapsMode> = $i8;

        return r2;

     label7:
        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = 0;

        goto label1;

     label8:
        $i11 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i13 = 6 | $i11;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = $i13;

        goto label4;

     label9:
        return null;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.widget.Editor $r1, $r2;
        android.view.ViewTreeObserver $r3;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        $z0 = r0.<android.widget.TextView: boolean mPreDrawRegistered>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r3.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawRegistered> = 0;

     label1:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onDetachedFromWindow()>();

     label2:
        return;
    }

    public boolean onDragEvent(android.view.DragEvent)
    {
        android.widget.TextView r0;
        android.view.DragEvent r1;
        int i0, $i1;
        boolean z0, $z2;
        android.widget.Editor $r2, $r3, $r6, $r7;
        float $f0, $f1;
        java.lang.CharSequence $r4;
        android.text.Spannable $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.DragEvent;

        $i1 = virtualinvoke r1.<android.view.DragEvent: int getAction()>();

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label1;
            case 5: goto label5;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r6 == null goto label4;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z2 = virtualinvoke $r7.<android.widget.Editor: boolean hasInsertionController()>();

        if $z2 == 0 goto label4;

        z0 = 1;

     label3:
        return z0;

     label4:
        z0 = 0;

        goto label3;

     label5:
        virtualinvoke r0.<android.widget.TextView: boolean requestFocus()>();

        return 1;

     label6:
        $f0 = virtualinvoke r1.<android.view.DragEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.DragEvent: float getY()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spannable) $r4;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>($r5, i0);

        return 1;

     label7:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void onDrop(android.view.DragEvent)>(r1);

        return 1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.TextView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i60, $i61, $i62, $i63, $i64, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102;
        boolean z0, $z2, $z3, $z4, $z5;
        android.widget.TextView$Drawables r2;
        android.text.Layout r3, $r5, $r10, $r24;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37;
        android.graphics.Path r4;
        int[] $r6;
        android.text.TextPaint $r7, $r8;
        java.lang.CharSequence $r9, $r29;
        byte $b44;
        android.widget.Editor $r11, $r17;
        android.widget.TextView$Marquee $r12, $r19, $r20, $r21, $r22, $r23;
        android.graphics.Paint $r13, $r16, $r18;
        android.text.TextUtils$TruncateAt $r14, $r15;
        android.graphics.drawable.Drawable $r25, $r26, $r27, $r28, $r31, $r32, $r33, $r34;
        android.content.res.ColorStateList $r30;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.TextView: void restartMarqueeIfNeeded()>();

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        i2 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i3 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i4 = r0.<android.widget.TextView: int mScrollX>;

        i5 = r0.<android.widget.TextView: int mScrollY>;

        i6 = r0.<android.widget.TextView: int mRight>;

        i7 = r0.<android.widget.TextView: int mLeft>;

        i8 = r0.<android.widget.TextView: int mBottom>;

        i9 = r0.<android.widget.TextView: int mTop>;

        z0 = virtualinvoke r0.<android.widget.TextView: boolean isLayoutRtl()>();

        i10 = virtualinvoke r0.<android.widget.TextView: int getHorizontalOffsetForDrawables()>();

        if z0 == 0 goto label21;

        i11 = 0;

     label01:
        if z0 == 0 goto label22;

        i12 = i10;

     label02:
        r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r2 == null goto label06;

        $i61 = i8 - i9;

        $i57 = $i61 - i3;

        i26 = $i57 - i1;

        $i56 = i6 - i7;

        $i58 = $i56 - i2;

        i29 = $i58 - i0;

        $r25 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r25 == null goto label03;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i88 = r0.<android.widget.TextView: int mPaddingLeft>;

        $i89 = i4 + $i88;

        $i93 = i11 + $i89;

        $f36 = (float) $i93;

        $i102 = i5 + i1;

        $i94 = r2.<android.widget.TextView$Drawables: int mDrawableHeightLeft>;

        $i91 = i26 - $i94;

        $i92 = $i91 / 2;

        $i101 = $i102 + $i92;

        $f37 = (float) $i101;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f36, $f37);

        $r34 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r34.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label03:
        $r27 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r27 == null goto label04;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i76 = i4 + i6;

        $i81 = $i76 - i7;

        $i75 = r0.<android.widget.TextView: int mPaddingRight>;

        $i79 = $i81 - $i75;

        $i80 = r2.<android.widget.TextView$Drawables: int mDrawableSizeRight>;

        $i78 = $i79 - $i80;

        $i97 = $i78 - i12;

        $f35 = (float) $i97;

        $i99 = i5 + i1;

        $i98 = r2.<android.widget.TextView$Drawables: int mDrawableHeightRight>;

        $i95 = i26 - $i98;

        $i96 = $i95 / 2;

        $i100 = $i99 + $i96;

        $f34 = (float) $i100;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f35, $f34);

        $r33 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r33.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label04:
        $r26 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r26 == null goto label05;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i83 = i4 + i0;

        $i66 = r2.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i85 = i29 - $i66;

        $i84 = $i85 / 2;

        $i82 = $i83 + $i84;

        $f32 = (float) $i82;

        $i87 = r0.<android.widget.TextView: int mPaddingTop>;

        $i86 = i5 + $i87;

        $f33 = (float) $i86;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f32, $f33);

        $r32 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r32.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label05:
        $r28 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r28 == null goto label06;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i70 = i4 + i0;

        $i67 = r2.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        $i68 = i29 - $i67;

        $i69 = $i68 / 2;

        $i71 = $i70 + $i69;

        $f31 = (float) $i71;

        $i72 = i5 + i8;

        $i74 = $i72 - i9;

        $i73 = r0.<android.widget.TextView: int mPaddingBottom>;

        $i63 = $i74 - $i73;

        $i62 = r2.<android.widget.TextView$Drawables: int mDrawableSizeBottom>;

        $i64 = $i63 - $i62;

        $f30 = (float) $i64;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f31, $f30);

        $r31 = r2.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r31.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label06:
        i13 = r0.<android.widget.TextView: int mCurTextColor>;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 != null goto label07;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label07:
        r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r9 == null goto label09;

        $r29 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i60 = interfaceinvoke $r29.<java.lang.CharSequence: int length()>();

        if $i60 != 0 goto label09;

        $r30 = r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor>;

        if $r30 == null goto label08;

        i13 = r0.<android.widget.TextView: int mCurHintTextColor>;

     label08:
        r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

     label09:
        $r8 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r8.<android.text.TextPaint: void setColor(int)>(i13);

        $r7 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r6 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        $r7.<android.text.TextPaint: int[] drawableState> = $r6;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i15 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        i14 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingBottom()>();

        $i34 = r0.<android.widget.TextView: int mBottom>;

        $i30 = r0.<android.widget.TextView: int mTop>;

        $i33 = $i34 - $i30;

        $i32 = $i33 - i3;

        i17 = $i32 - i1;

        $r10 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i39 = virtualinvoke $r10.<android.text.Layout: int getHeight()>();

        i16 = $i39 - i17;

        $i40 = i0 + i4;

        f1 = (float) $i40;

        if i5 != 0 goto label23;

        f0 = 0.0F;

     label10:
        $i42 = i6 - i7;

        $i35 = $i42 - i2;

        $i36 = i4 + $i35;

        f2 = (float) $i36;

        $i37 = i8 - i9;

        i18 = i5 + $i37;

        if i5 != i16 goto label11;

        i14 = 0;

     label11:
        $i38 = i18 - i14;

        f3 = (float) $i38;

        $f9 = r0.<android.widget.TextView: float mShadowRadius>;

        $b44 = $f9 cmpl 0.0F;

        if $b44 == 0 goto label12;

        $f15 = r0.<android.widget.TextView: float mShadowDx>;

        $f16 = r0.<android.widget.TextView: float mShadowRadius>;

        $f14 = $f15 - $f16;

        $f13 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f14);

        f1 = f1 + $f13;

        $f24 = r0.<android.widget.TextView: float mShadowDx>;

        $f25 = r0.<android.widget.TextView: float mShadowRadius>;

        $f23 = $f24 + $f25;

        $f22 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f23);

        f2 = f2 + $f22;

        $f20 = r0.<android.widget.TextView: float mShadowDy>;

        $f21 = r0.<android.widget.TextView: float mShadowRadius>;

        $f19 = $f20 - $f21;

        $f18 = staticinvoke <java.lang.Math: float min(float,float)>(0.0F, $f19);

        f0 = f0 + $f18;

        $f26 = r0.<android.widget.TextView: float mShadowDy>;

        $f27 = r0.<android.widget.TextView: float mShadowRadius>;

        $f29 = $f26 + $f27;

        $f28 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f29);

        f3 = f3 + $f28;

     label12:
        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(float,float,float,float)>(f1, f0, f2, f3);

        $i45 = r0.<android.widget.TextView: int mGravity>;

        i20 = 112 & $i45;

        i19 = 0;

        i23 = 0;

        if i20 == 48 goto label13;

        i23 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i19 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(1);

     label13:
        $f8 = (float) i0;

        $i43 = i15 + i23;

        $f7 = (float) $i43;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f8, $f7);

        i24 = virtualinvoke r0.<android.widget.TextView: int getLayoutDirection()>();

        $i46 = r0.<android.widget.TextView: int mGravity>;

        i21 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i46, i24);

        $r14 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r15 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r14 != $r15 goto label17;

        $i49 = r0.<android.widget.TextView: int mMarqueeFadeMode>;

        if $i49 == 1 goto label17;

        $z4 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z4 != 0 goto label15;

        $i48 = virtualinvoke r0.<android.widget.TextView: int getLineCount()>();

        if $i48 != 1 goto label15;

        $z5 = specialinvoke r0.<android.widget.TextView: boolean canMarquee()>();

        if $z5 == 0 goto label15;

        $i54 = i21 & 7;

        if $i54 == 3 goto label15;

        $i53 = r0.<android.widget.TextView: int mRight>;

        $i52 = r0.<android.widget.TextView: int mLeft>;

        i27 = $i53 - $i52;

        $i50 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i51 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i28 = $i50 + $i51;

        $r24 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $f12 = virtualinvoke $r24.<android.text.Layout: float getLineRight(int)>(0);

        $i55 = i27 - i28;

        $f17 = (float) $i55;

        f6 = $f12 - $f17;

        if z0 == 0 goto label14;

        f6 = neg f6;

     label14:
        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(f6, 0.0F);

     label15:
        $r22 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r22 == null goto label17;

        $r23 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z3 = virtualinvoke $r23.<android.widget.TextView$Marquee: boolean isRunning()>();

        if $z3 == 0 goto label17;

        $r21 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f11 = virtualinvoke $r21.<android.widget.TextView$Marquee: float getScroll()>();

        f5 = neg $f11;

        if z0 == 0 goto label16;

        f5 = neg f5;

     label16:
        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(f5, 0.0F);

     label17:
        i22 = i19 - i23;

        r4 = specialinvoke r0.<android.widget.TextView: android.graphics.Path getUpdatedHighlightPath()>();

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r11 == null goto label24;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r18 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke $r17.<android.widget.Editor: void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)>(r1, r3, r4, $r18, i22);

     label18:
        $r12 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        if $r12 == null goto label20;

        $r19 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $z2 = virtualinvoke $r19.<android.widget.TextView$Marquee: boolean shouldDrawGhost()>();

        if $z2 == 0 goto label20;

        $r20 = r0.<android.widget.TextView: android.widget.TextView$Marquee mMarquee>;

        $f10 = virtualinvoke $r20.<android.widget.TextView$Marquee: float getGhostOffset()>();

        i25 = (int) $f10;

        if z0 == 0 goto label25;

        $i47 = neg i25;

        f4 = (float) $i47;

     label19:
        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(f4, 0.0F);

        $r16 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke r3.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>(r1, r4, $r16, i22);

     label20:
        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;

     label21:
        i11 = i10;

        goto label01;

     label22:
        i12 = 0;

        goto label02;

     label23:
        $i41 = i15 + i5;

        f0 = (float) $i41;

        goto label10;

     label24:
        $r13 = r0.<android.widget.TextView: android.graphics.Paint mHighlightPaint>;

        virtualinvoke r3.<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>(r1, r4, $r13, i22);

        goto label18;

     label25:
        f4 = (float) i25;

        goto label19;
    }

    public void onEditorAction(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor$InputContentType r1;
        android.view.ViewRootImpl r2;
        long l1, $l2;
        android.view.inputmethod.InputMethodManager r3;
        android.view.View r4, r5;
        android.widget.Editor $r6, $r7;
        android.view.KeyEvent $r8, $r9;
        android.widget.TextView$OnEditorActionListener $r10, $r14;
        boolean $z0, $z2, $z3, $z4;
        android.os.IBinder $r11;
        java.lang.IllegalStateException $r12, $r13;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r6 != null goto label3;

        r1 = null;

     label1:
        if r1 == null goto label7;

        $r10 = r1.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r10 == null goto label4;

        $r14 = r1.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z4 = interfaceinvoke $r14.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, i0, null);

        if $z4 == 0 goto label4;

     label2:
        return;

     label3:
        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r1 = $r7.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        goto label1;

     label4:
        if i0 != 5 goto label5;

        r5 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(2);

        if r5 == null goto label2;

        $z3 = virtualinvoke r5.<android.view.View: boolean requestFocus(int)>(2);

        if $z3 != 0 goto label2;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r13;

     label5:
        if i0 != 7 goto label6;

        r4 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(1);

        if r4 == null goto label2;

        $z2 = virtualinvoke r4.<android.view.View: boolean requestFocus(int)>(1);

        if $z2 != 0 goto label2;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r12;

     label6:
        if i0 != 6 goto label7;

        r3 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z0 == 0 goto label2;

        $r11 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r11, 0);

        return;

     label7:
        r2 = virtualinvoke r0.<android.widget.TextView: android.view.ViewRootImpl getViewRootImpl()>();

        if r2 == null goto label2;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r8 = new android.view.KeyEvent;

        specialinvoke $r8.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 0, 66, 0, 0, -1, 0, 22);

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>($r8);

        $r9 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r9.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>($l2, l1, 1, 66, 0, 0, -1, 0, 22);

        virtualinvoke r2.<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>($r9);

        return;
    }

    public void onEndBatchEdit()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        return;
    }

    public void onFinishTemporaryDetach()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void onFinishTemporaryDetach()>();

        $z0 = r0.<android.widget.TextView: boolean mDispatchTemporaryDetach>;

        if $z0 != 0 goto label1;

        r0.<android.widget.TextView: boolean mTemporaryDetach> = 0;

     label1:
        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mTemporaryDetach> = 0;

     label2:
        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z2;
        int i0;
        android.graphics.Rect r1;
        android.widget.Editor $r2, $r9;
        android.text.method.TransformationMethod $r3, $r5;
        java.lang.CharSequence $r4, $r6, $r7;
        android.text.Spannable $r8;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        $z1 = r0.<android.widget.TextView: boolean mTemporaryDetach>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        return;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r9.<android.widget.Editor: void onFocusChanged(boolean,int)>(z0, i0);

     label2:
        if z0 == 0 goto label3;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r6 instanceof android.text.Spannable;

        if $z2 == 0 goto label3;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = (android.text.Spannable) $r7;

        staticinvoke <android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>($r8);

     label3:
        specialinvoke r0.<android.widget.TextView: void startStopMarquee(boolean)>(z0);

        $r3 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r3 == null goto label4;

        $r5 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        interfaceinvoke $r5.<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>(r0, $r4, z0, i0, r1);

     label4:
        specialinvoke r0.<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2;
        android.text.method.MovementMethod $r3, $r8;
        java.lang.CharSequence $r4, $r6;
        android.text.Layout $r5;
        android.text.Spannable $r7;
        java.lang.AbstractMethodError $r9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r3 == null goto label4;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r4 instanceof android.text.Spannable;

        if $z2 == 0 goto label4;

        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label4;

     label1:
        $r8 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = (android.text.Spannable) $r6;

        z0 = interfaceinvoke $r8.<android.text.method.MovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, $r7, r1);

     label2:
        if z0 == 0 goto label4;

        return 1;

     label3:
        $r9 := @caughtexception;

     label4:
        $z1 = specialinvoke r0.<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r4, $r5, $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/TextView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        $z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>($z0);

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 8192 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>($r4);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>($i1);

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>($r5);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>($i2);

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i3 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>($i3);

     label1:
        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Class $r2;
        java.lang.String $r3;
        android.widget.TextView$BufferType $r4, $r5;
        android.widget.Editor $r6, $r8, $r9;
        java.lang.CharSequence $r7, $r10, $r11;
        int $i0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/TextView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>(z0);

        if z0 != 0 goto label1;

        $r10 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r10);

     label1:
        $r5 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        $r4 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        if $r5 != $r4 goto label2;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>(1);

     label2:
        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r6 == null goto label3;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $i0 = $r8.<android.widget.Editor: int mInputType>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)>($i0);

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r11 = $r9.<android.widget.Editor: java.lang.CharSequence mError>;

        if $r11 == null goto label3;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)>(1);

     label3:
        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z1 != 0 goto label4;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(256);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(512);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>(31);

     label4:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z2 == 0 goto label8;

        $z4 = specialinvoke r0.<android.widget.TextView: boolean canSelectText()>();

        if $z4 == 0 goto label5;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(131072);

     label5:
        $z5 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z5 == 0 goto label6;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(16384);

     label6:
        $z6 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z6 == 0 goto label7;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(32768);

     label7:
        $z7 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z7 == 0 goto label8;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(65536);

     label8:
        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isSingleLine()>();

        if $z3 != 0 goto label9;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>(1);

     label9:
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i1 = specialinvoke r0.<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>(i0, r1, null);

        if $i1 != 0 goto label1;

        $z0 = specialinvoke r0.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;

     label1:
        return 1;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.view.KeyEvent r1, r2, r3;
        java.lang.CharSequence $r4, $r7, $r10, $r15, $r17, $r21;
        android.text.Spannable $r5, $r9, $r12;
        android.text.method.MovementMethod $r6, $r8, $r11;
        android.widget.Editor $r13, $r18, $r23;
        android.text.Editable $r14, $r20, $r22;
        android.text.method.KeyListener $r16, $r19, $r24;
        boolean $z5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        r2 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r1, 0);

        i2 = specialinvoke r0.<android.widget.TextView: int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent)>(i0, r2, r1);

        if i2 != 0 goto label1;

        $z5 = specialinvoke r0.<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>(i0, i1, r1);

        return $z5;

     label1:
        if i2 != -1 goto label2;

        return 1;

     label2:
        i3 = i1 - 1;

        r3 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r1, 1);

        if i2 != 1 goto label6;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r16 = $r13.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r14 = (android.text.Editable) $r15;

        interfaceinvoke $r16.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r14, i0, r3);

     label3:
        i3 = i3 + -1;

        if i3 <= 0 goto label4;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r19 = $r18.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r17 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r20 = (android.text.Editable) $r17;

        interfaceinvoke $r19.<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r20, i0, r2);

        $r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r24 = $r23.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r21 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r22 = (android.text.Editable) $r21;

        interfaceinvoke $r24.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r22, i0, r3);

        goto label3;

     label4:
        virtualinvoke r0.<android.widget.TextView: void hideErrorIfUnchanged()>();

     label5:
        return 1;

     label6:
        if i2 != 2 goto label5;

        $r6 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spannable) $r4;

        interfaceinvoke $r6.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r5, i0, r3);

     label7:
        i3 = i3 + -1;

        if i3 <= 0 goto label5;

        $r8 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Spannable) $r7;

        interfaceinvoke $r8.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r9, i0, r2);

        $r11 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r12 = (android.text.Spannable) $r10;

        interfaceinvoke $r11.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r12, i0, r3);

        goto label7;
    }

    public boolean onKeyPreIme(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3;
        android.view.KeyEvent r1;
        boolean z0, $z1, $z2, $z3;
        android.view.KeyEvent$DispatcherState r2, r3;
        android.widget.Editor $r4, $r5;
        android.view.ActionMode $r6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label6;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label3;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.view.ActionMode mSelectionActionMode>;

        if $r6 == null goto label3;

        z0 = 1;

     label1:
        if z0 == 0 goto label6;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label4;

        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label4;

        r3 = virtualinvoke r0.<android.widget.TextView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r3 == null goto label2;

        virtualinvoke r3.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

     label2:
        return 1;

     label3:
        z0 = 0;

        goto label1;

     label4:
        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i2 != 1 goto label6;

        r2 = virtualinvoke r0.<android.widget.TextView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r2 == null goto label5;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void handleUpEvent(android.view.KeyEvent)>(r1);

     label5:
        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z2 == 0 goto label6;

        $z3 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z3 != 0 goto label6;

        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        return 1;

     label6:
        $z1 = specialinvoke r0.<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>(i0, r1);

        return $z1;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getMetaState()>();

        $i2 = -28673 & $i1;

        $z0 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>($i2);

        if $z0 == 0 goto label1;

        lookupswitch(i0)
        {
            case 29: goto label2;
            case 31: goto label4;
            case 50: goto label5;
            case 52: goto label3;
            default: goto label1;
        };

     label1:
        $z1 = specialinvoke r0.<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>(i0, r1);

        return $z1;

     label2:
        $z8 = specialinvoke r0.<android.widget.TextView: boolean canSelectText()>();

        if $z8 == 0 goto label1;

        $z9 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908319);

        return $z9;

     label3:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        return $z3;

     label4:
        $z6 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z6 == 0 goto label1;

        $z7 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        return $z7;

     label5:
        $z4 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z4 == 0 goto label1;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        return $z5;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4;
        android.view.KeyEvent r1;
        android.view.View r2;
        android.view.inputmethod.InputMethodManager r3, r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17, $z18, $z20, $z21, $z22;
        android.widget.Editor $r5, $r11, $r12, $r17, $r20, $r22, $r25, $r28, $r30;
        android.text.method.MovementMethod $r6, $r9, $r33;
        android.text.Layout $r7, $r34;
        java.lang.CharSequence $r8, $r15, $r32;
        android.text.Spannable $r10;
        android.text.method.KeyListener $r13, $r16;
        android.text.Editable $r14;
        android.os.IBinder $r18;
        java.lang.IllegalStateException $r19;
        android.widget.Editor$InputContentType $r21, $r23, $r24, $r27, $r29;
        android.widget.TextView$OnEditorActionListener $r26, $r31;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z0 != 0 goto label01;

        $z20 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z20;

     label01:
        $z1 = staticinvoke <android.view.KeyEvent: boolean isModifierKey(int)>(i0);

        if $z1 != 0 goto label02;

        r0.<android.widget.TextView: boolean mPreventDefaultMovement> = 0;

     label02:
        lookupswitch(i0)
        {
            case 23: goto label04;
            case 66: goto label06;
            default: goto label03;
        };

     label03:
        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 == null goto label12;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r13 = $r11.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        if $r13 == null goto label12;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r16 = $r12.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r14 = (android.text.Editable) $r15;

        $z5 = interfaceinvoke $r16.<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r0, $r14, i0, r1);

        if $z5 == 0 goto label12;

        return 1;

     label04:
        $z15 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z15 == 0 goto label05;

        $z18 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z18 != 0 goto label05;

        $r33 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r33 == null goto label05;

        $r32 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z17 = $r32 instanceof android.text.Editable;

        if $z17 == 0 goto label05;

        $r34 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r34 == null goto label05;

        $z21 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z21 == 0 goto label05;

        r4 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        virtualinvoke r0.<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>(r4);

        if r4 == null goto label05;

        $z22 = virtualinvoke r0.<android.widget.TextView: boolean getShowSoftInputOnFocus()>();

        if $z22 == 0 goto label05;

        virtualinvoke r4.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

     label05:
        $z14 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z14;

     label06:
        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z2 == 0 goto label03;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r17 == null goto label07;

        $r22 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r23 = $r22.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        if $r23 == null goto label07;

        $r20 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r21 = $r20.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r26 = $r21.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        if $r26 == null goto label07;

        $r25 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r24 = $r25.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $z13 = $r24.<android.widget.Editor$InputContentType: boolean enterDown>;

        if $z13 == 0 goto label07;

        $r30 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r29 = $r30.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r29.<android.widget.Editor$InputContentType: boolean enterDown> = 0;

        $r28 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r27 = $r28.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r31 = $r27.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener>;

        $z16 = interfaceinvoke $r31.<android.widget.TextView$OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(r0, 0, r1);

        if $z16 == 0 goto label07;

        return 1;

     label07:
        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i1 = 16 & $i2;

        if $i1 != 0 goto label08;

        $z10 = specialinvoke r0.<android.widget.TextView: boolean shouldAdvanceFocusOnEnter()>();

        if $z10 == 0 goto label11;

     label08:
        $z7 = virtualinvoke r0.<android.widget.TextView: boolean hasOnClickListeners()>();

        if $z7 != 0 goto label11;

        r2 = virtualinvoke r0.<android.widget.TextView: android.view.View focusSearch(int)>(130);

        if r2 == null goto label10;

        $z11 = virtualinvoke r2.<android.view.View: boolean requestFocus(int)>(130);

        if $z11 != 0 goto label09;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("focus search returned a view that wasn\'t able to take focus!");

        throw $r19;

     label09:
        specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return 1;

     label10:
        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i4 = 16 & $i3;

        if $i4 == 0 goto label11;

        r3 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r3 == null goto label11;

        $z9 = virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z9 == 0 goto label11;

        $r18 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r18, 0);

     label11:
        $z6 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z6;

     label12:
        $r6 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r6 == null goto label13;

        $r7 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r7 == null goto label13;

        $r9 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r10 = (android.text.Spannable) $r8;

        $z4 = interfaceinvoke $r9.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r0, $r10, i0, r1);

        if $z4 == 0 goto label13;

        return 1;

     label13:
        $z3 = specialinvoke r0.<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z3;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.TextView r0;
        boolean z0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.lang.CharSequence $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.view.View: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $i5 = r0.<android.widget.TextView: int mDeferScroll>;

        if $i5 < 0 goto label1;

        i4 = r0.<android.widget.TextView: int mDeferScroll>;

        r0.<android.widget.TextView: int mDeferScroll> = -1;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i6 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i4, $i6);

        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>($i7);

     label1:
        return;
    }

    void onLocaleChanged()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: android.text.method.WordIterator mWordIterator> = null;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69;
        android.text.BoringLayout$Metrics r1, r2, $r23, $r24, $r39, $r41;
        boolean z0, z1, z2, z3, $z4, $z5;
        android.widget.TextView$Drawables r3;
        android.text.TextDirectionHeuristic $r4, $r22, $r36, $r40;
        android.text.Layout $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r27, $r28, $r35;
        java.lang.CharSequence $r6, $r11, $r25, $r30, $r32, $r38;
        android.text.method.MovementMethod $r14;
        android.text.TextUtils$TruncateAt $r20, $r29, $r34;
        float $f0, $f1, $f2, $f3;
        android.text.TextPaint $r26, $r31, $r33, $r37;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        r1 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        r2 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r4 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        if $r4 != null goto label01;

        $r36 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r36;

     label01:
        i6 = -1;

        z0 = 0;

        if i2 != 1073741824 goto label10;

        i14 = i4;

     label02:
        $i32 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i34 = i14 - $i32;

        $i33 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        i13 = $i34 - $i33;

        i16 = i13;

        $z4 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z4 == 0 goto label03;

        i13 = 1048576;

     label03:
        i15 = i13;

        $r7 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r7 != null goto label30;

        i17 = i15;

     label04:
        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r9 != null goto label31;

        $i57 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i58 = i14 - $i57;

        $i55 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i56 = $i58 - $i55;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i13, i15, r1, r2, $i56, 0);

     label05:
        if i3 != 1073741824 goto label43;

        i18 = i5;

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = -1;

     label06:
        $i38 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingTop()>();

        $i39 = i18 - $i38;

        $i40 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingBottom()>();

        i21 = $i39 - $i40;

        $i47 = r0.<android.widget.TextView: int mMaxMode>;

        if $i47 != 1 goto label07;

        $r13 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i46 = virtualinvoke $r13.<android.text.Layout: int getLineCount()>();

        $i51 = r0.<android.widget.TextView: int mMaximum>;

        if $i46 <= $i51 goto label07;

        $r17 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i50 = r0.<android.widget.TextView: int mMaximum>;

        i20 = virtualinvoke $r17.<android.text.Layout: int getLineTop(int)>($i50);

        i21 = staticinvoke <java.lang.Math: int min(int,int)>(i21, i20);

     label07:
        $r14 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r14 != null goto label08;

        $r15 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i48 = virtualinvoke $r15.<android.text.Layout: int getWidth()>();

        if $i48 > i16 goto label08;

        $r12 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i45 = virtualinvoke $r12.<android.text.Layout: int getHeight()>();

        if $i45 <= i21 goto label44;

     label08:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

     label09:
        virtualinvoke r0.<android.widget.TextView: void setMeasuredDimension(int,int)>(i14, i18);

        return;

     label10:
        $r5 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r5 == null goto label11;

        $r34 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r34 != null goto label11;

        $r35 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i6 = staticinvoke <android.widget.TextView: int desired(android.text.Layout)>($r35);

     label11:
        if i6 >= 0 goto label25;

        $r32 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r33 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r40 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r41 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring>;

        r1 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r32, $r33, $r40, $r41);

        z0 = 0;

        if r1 == null goto label12;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mBoring> = r1;

     label12:
        if r1 == null goto label13;

        $r39 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r1 != $r39 goto label26;

     label13:
        if i6 >= 0 goto label14;

        $r38 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $r37 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f2 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>($r38, $r37);

        $f3 = staticinvoke <android.util.FloatMath: float ceil(float)>($f2);

        i6 = (int) $f3;

     label14:
        i7 = i6;

     label15:
        r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r3 == null goto label16;

        i25 = r3.<android.widget.TextView$Drawables: int mDrawableWidthTop>;

        $i69 = staticinvoke <java.lang.Math: int max(int,int)>(i7, i25);

        $i68 = r3.<android.widget.TextView$Drawables: int mDrawableWidthBottom>;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>($i69, $i68);

     label16:
        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r6 == null goto label22;

        i22 = -1;

        $r27 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r27 == null goto label17;

        $r29 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r29 != null goto label17;

        $r28 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        i22 = staticinvoke <android.widget.TextView: int desired(android.text.Layout)>($r28);

     label17:
        if i22 >= 0 goto label18;

        $r30 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r31 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r22 = r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir>;

        $r23 = r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring>;

        r2 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>($r30, $r31, $r22, $r23);

        if r2 == null goto label18;

        r0.<android.widget.TextView: android.text.BoringLayout$Metrics mHintBoring> = r2;

     label18:
        if r2 == null goto label19;

        $r24 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        if r2 != $r24 goto label27;

     label19:
        if i22 >= 0 goto label20;

        $r25 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        $r26 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>($r25, $r26);

        $f0 = staticinvoke <android.util.FloatMath: float ceil(float)>($f1);

        i22 = (int) $f0;

     label20:
        i24 = i22;

     label21:
        if i24 <= i7 goto label22;

        i7 = i24;

     label22:
        $i28 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i26 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i27 = $i28 + $i26;

        i8 = i7 + $i27;

        $i30 = r0.<android.widget.TextView: int mMaxWidthMode>;

        if $i30 != 1 goto label28;

        $i64 = r0.<android.widget.TextView: int mMaxWidth>;

        $i65 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        $i63 = $i64 * $i65;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(i8, $i63);

     label23:
        $i29 = r0.<android.widget.TextView: int mMinWidthMode>;

        if $i29 != 1 goto label29;

        $i67 = r0.<android.widget.TextView: int mMinWidth>;

        $i66 = virtualinvoke r0.<android.widget.TextView: int getLineHeight()>();

        i23 = $i67 * $i66;

        i12 = staticinvoke <java.lang.Math: int max(int,int)>(i9, i23);

     label24:
        i11 = virtualinvoke r0.<android.widget.TextView: int getSuggestedMinimumWidth()>();

        i14 = staticinvoke <java.lang.Math: int max(int,int)>(i12, i11);

        if i2 != -2147483648 goto label02;

        i14 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i14);

        goto label02;

     label25:
        z0 = 1;

        goto label12;

     label26:
        i7 = r1.<android.text.BoringLayout$Metrics: int width>;

        goto label15;

     label27:
        i24 = r2.<android.text.BoringLayout$Metrics: int width>;

        goto label21;

     label28:
        $i31 = r0.<android.widget.TextView: int mMaxWidth>;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(i8, $i31);

        goto label23;

     label29:
        i10 = r0.<android.widget.TextView: int mMinWidth>;

        i12 = staticinvoke <java.lang.Math: int max(int,int)>(i9, i10);

        goto label24;

     label30:
        $r10 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        i17 = virtualinvoke $r10.<android.text.Layout: int getWidth()>();

        goto label04;

     label31:
        $r8 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i37 = virtualinvoke $r8.<android.text.Layout: int getWidth()>();

        if $i37 != i13 goto label32;

        if i17 != i15 goto label32;

        $r19 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i52 = virtualinvoke $r19.<android.text.Layout: int getEllipsizedWidth()>();

        $i61 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i62 = i14 - $i61;

        $i59 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i60 = $i62 - $i59;

        if $i52 == $i60 goto label39;

     label32:
        z1 = 1;

     label33:
        $r11 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r11 != null goto label40;

        $r20 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r20 != null goto label40;

        $r21 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $i54 = virtualinvoke $r21.<android.text.Layout: int getWidth()>();

        if i13 <= $i54 goto label40;

        $r18 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        $z5 = $r18 instanceof android.text.BoringLayout;

        if $z5 != 0 goto label34;

        if z0 == 0 goto label40;

        if i6 < 0 goto label40;

        if i6 > i13 goto label40;

     label34:
        z3 = 1;

     label35:
        $i35 = r0.<android.widget.TextView: int mMaxMode>;

        $i36 = r0.<android.widget.TextView: int mOldMaxMode>;

        if $i35 != $i36 goto label36;

        $i53 = r0.<android.widget.TextView: int mMaximum>;

        $i49 = r0.<android.widget.TextView: int mOldMaximum>;

        if $i53 == $i49 goto label41;

     label36:
        z2 = 1;

     label37:
        if z1 != 0 goto label38;

        if z2 == 0 goto label05;

     label38:
        if z2 != 0 goto label42;

        if z3 == 0 goto label42;

        $r16 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r16.<android.text.Layout: void increaseWidthTo(int)>(i13);

        goto label05;

     label39:
        z1 = 0;

        goto label33;

     label40:
        z3 = 0;

        goto label35;

     label41:
        z2 = 0;

        goto label37;

     label42:
        $i41 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i42 = i14 - $i41;

        $i43 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i44 = $i42 - $i43;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i13, i15, r1, r2, $i44, 0);

        goto label05;

     label43:
        i19 = specialinvoke r0.<android.widget.TextView: int getDesiredHeight()>();

        i18 = i19;

        r0.<android.widget.TextView: int mDesiredHeightAtMeasure> = i19;

        if i3 != -2147483648 goto label06;

        i18 = staticinvoke <java.lang.Math: int min(int,int)>(i19, i5);

        goto label06;

     label44:
        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(0, 0);

        goto label09;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2;
        boolean $z0, $z1, $z3;
        java.util.List $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $z0 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z0 == 0 goto label1;

        $z3 = specialinvoke r0.<android.widget.TextView: boolean shouldSpeakPasswordsForAccessibility()>();

        if $z3 == 0 goto label2;

     label1:
        r2 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label2;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        return;
    }

    public boolean onPreDraw()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        android.text.Layout $r1;
        android.text.method.MovementMethod $r2;
        android.widget.Editor $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13;
        boolean $z1, $z2, $z4, $z7;
        android.view.ViewTreeObserver $r4;
        java.lang.CharSequence $r11;
        android.widget.Editor$SelectionModifierCursorController $r14, $r15;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 != null goto label1;

        specialinvoke r0.<android.widget.TextView: void assumeLayout()>();

     label1:
        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label7;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r10 == null goto label2;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r12.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        if $r14 == null goto label2;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r15 = $r13.<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController mSelectionModifierCursorController>;

        $z7 = virtualinvoke $r15.<android.widget.Editor$SelectionModifierCursorController: boolean isSelectionStartDragged()>();

        if $z7 == 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

     label2:
        if i0 >= 0 goto label3;

        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = 112 & $i1;

        if $i2 != 80 goto label3;

        $r11 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

     label3:
        if i0 < 0 goto label4;

        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>(i0);

     label4:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label5;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z4 = $r7.<android.widget.Editor: boolean mCreatedWithASelection>;

        if $z4 == 0 goto label5;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r8.<android.widget.Editor: boolean startSelectionActionMode()>();

        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9.<android.widget.Editor: boolean mCreatedWithASelection> = 0;

     label5:
        $z1 = r0 instanceof android.inputmethodservice.ExtractEditText;

        if $z1 == 0 goto label6;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean hasSelection()>();

        if $z2 == 0 goto label6;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 == null goto label6;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r6.<android.widget.Editor: boolean startSelectionActionMode()>();

     label6:
        $r4 = virtualinvoke r0.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r4.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>(r0);

        r0.<android.widget.TextView: boolean mPreDrawRegistered> = 0;

        return 1;

     label7:
        specialinvoke r0.<android.widget.TextView: boolean bringTextIntoView()>();

        goto label4;
    }

    public boolean onPrivateIMECommand(java.lang.String, android.os.Bundle)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    public void onResolveDrawables(int)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.widget.TextView$Drawables $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.TextView: int mLastLayoutDirection>;

        if $i1 != i0 goto label2;

     label1:
        return;

     label2:
        r0.<android.widget.TextView: int mLastLayoutDirection> = i0;

        $r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        virtualinvoke $r2.<android.widget.TextView$Drawables: void resolveWithLayoutDirection(int)>(i0);

        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.TextView r0;
        android.os.Parcelable r1, $r4;
        android.widget.TextView$SavedState r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        java.lang.String r3, $r20;
        boolean $z0, $z2, $z3;
        java.lang.CharSequence $r5, $r6, $r8, $r9, $r10, $r12, $r21, $r23, $r25;
        android.widget.TextView$1 $r7;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22;
        android.widget.Editor $r24;
        android.text.Spannable $r26;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof android.widget.TextView$SavedState;

        if $z0 != 0 goto label2;

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>(r1);

     label1:
        return;

     label2:
        r2 = (android.widget.TextView$SavedState) r1;

        $r4 = virtualinvoke r2.<android.widget.TextView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>($r4);

        $r5 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        if $r5 == null goto label3;

        $r25 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r25);

     label3:
        $i1 = r2.<android.widget.TextView$SavedState: int selStart>;

        if $i1 < 0 goto label6;

        $i2 = r2.<android.widget.TextView$SavedState: int selEnd>;

        if $i2 < 0 goto label6;

        $r9 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z2 = $r9 instanceof android.text.Spannable;

        if $z2 == 0 goto label6;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        $i3 = r2.<android.widget.TextView$SavedState: int selStart>;

        if $i3 > i0 goto label4;

        $i9 = r2.<android.widget.TextView$SavedState: int selEnd>;

        if $i9 <= i0 goto label7;

     label4:
        r3 = "";

        $r12 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence text>;

        if $r12 == null goto label5;

        r3 = "(restored) ";

     label5:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved cursor position ");

        $i4 = r2.<android.widget.TextView$SavedState: int selStart>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i5 = r2.<android.widget.TextView$SavedState: int selEnd>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range for ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text ");

        $r21 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextView", $r20);

     label6:
        $r6 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence error>;

        if $r6 == null goto label1;

        $r7 = new android.widget.TextView$1;

        $r8 = r2.<android.widget.TextView$SavedState: java.lang.CharSequence error>;

        specialinvoke $r7.<android.widget.TextView$1: void <init>(android.widget.TextView,java.lang.CharSequence)>(r0, $r8);

        virtualinvoke r0.<android.widget.TextView: boolean post(java.lang.Runnable)>($r7);

        return;

     label7:
        $r23 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r26 = (android.text.Spannable) $r23;

        $i8 = r2.<android.widget.TextView$SavedState: int selStart>;

        $i7 = r2.<android.widget.TextView$SavedState: int selEnd>;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r26, $i8, $i7);

        $z3 = r2.<android.widget.TextView$SavedState: boolean frozenWithFocus>;

        if $z3 == 0 goto label6;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r24 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r24.<android.widget.Editor: boolean mFrozenWithFocus> = 1;

        goto label6;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.TextView r0;
        int i0;
        android.text.TextDirectionHeuristic $r1;
        android.text.Layout $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onRtlPropertiesChanged(int)>(i0);

        $r1 = virtualinvoke r0.<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        r0.<android.widget.TextView: android.text.TextDirectionHeuristic mTextDir> = $r1;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.TextView r0;
        android.os.Parcelable r1;
        boolean z0, $z1, $z2;
        java.lang.CharSequence r2, $r6, $r7, $r9, $r10;
        int i0, i1;
        android.widget.TextView$SavedState r3, $r5;
        android.text.SpannableStringBuilder r4, $r11;
        java.lang.String $r8;
        android.widget.Editor $r12, $r13;
        android.text.style.SuggestionRangeSpan $r14;

        r0 := @this: android.widget.TextView;

        r1 = specialinvoke r0.<android.view.View: android.os.Parcelable onSaveInstanceState()>();

        z0 = r0.<android.widget.TextView: boolean mFreezesText>;

        r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = 0;

        i1 = 0;

        if r2 == null goto label2;

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if i1 >= 0 goto label1;

        if i0 < 0 goto label2;

     label1:
        z0 = 1;

     label2:
        if z0 == 0 goto label7;

        $r5 = new android.widget.TextView$SavedState;

        specialinvoke $r5.<android.widget.TextView$SavedState: void <init>(android.os.Parcelable)>(r1);

        r3 = $r5;

        r3.<android.widget.TextView$SavedState: int selStart> = i1;

        r3.<android.widget.TextView$SavedState: int selEnd> = i0;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r6 instanceof android.text.Spanned;

        if $z1 == 0 goto label6;

        $r11 = new android.text.SpannableStringBuilder;

        $r10 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke $r11.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r10);

        r4 = $r11;

        $r13 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r13 == null goto label3;

        virtualinvoke r0.<android.widget.TextView: void removeMisspelledSpans(android.text.Spannable)>(r4);

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r14 = $r12.<android.widget.Editor: android.text.style.SuggestionRangeSpan mSuggestionRangeSpan>;

        interfaceinvoke r4.<android.text.Spannable: void removeSpan(java.lang.Object)>($r14);

     label3:
        r3.<android.widget.TextView$SavedState: java.lang.CharSequence text> = r4;

     label4:
        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z2 == 0 goto label5;

        if i1 < 0 goto label5;

        if i0 < 0 goto label5;

        r3.<android.widget.TextView$SavedState: boolean frozenWithFocus> = 1;

     label5:
        $r9 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getError()>();

        r3.<android.widget.TextView$SavedState: java.lang.CharSequence error> = $r9;

        return r3;

     label6:
        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        r3.<android.widget.TextView$SavedState: java.lang.CharSequence text> = $r8;

        goto label4;

     label7:
        return r1;
    }

    public void onScreenStateChanged(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void onScreenStateChanged(int)>(i0);

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onScreenStateChanged(int)>(i0);

     label1:
        return;
    }

    protected void onScrollChanged(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onScrollChanged(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onScrollChanged()>();

     label1:
        return;
    }

    protected void onSelectionChanged(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.TextView: void sendAccessibilityEvent(int)>(8192);

        return;
    }

    public void onStartTemporaryDetach()
    {
        android.widget.TextView r0;
        boolean $z0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void onStartTemporaryDetach()>();

        $z0 = r0.<android.widget.TextView: boolean mDispatchTemporaryDetach>;

        if $z0 != 0 goto label1;

        r0.<android.widget.TextView: boolean mTemporaryDetach> = 1;

     label1:
        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mTemporaryDetach> = 1;

     label2:
        return;
    }

    protected void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public boolean onTextContextMenuItem(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        boolean z0;
        java.lang.CharSequence $r1, $r2, $r4;
        android.content.ClipData $r3, $r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        z0 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        i2 = 0;

        if z0 == 0 goto label1;

        i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i4 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i3, i4);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i3, i4);

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

     label1:
        tableswitch(i0)
        {
            case 16908319: goto label3;
            case 16908320: goto label5;
            case 16908321: goto label6;
            case 16908322: goto label4;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        virtualinvoke r0.<android.widget.TextView: boolean selectAllText()>();

        return 1;

     label4:
        specialinvoke r0.<android.widget.TextView: void paste(int,int)>(i2, i1);

        return 1;

     label5:
        $r4 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i2, i1);

        $r5 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, $r4);

        specialinvoke r0.<android.widget.TextView: void setPrimaryClip(android.content.ClipData)>($r5);

        virtualinvoke r0.<android.widget.TextView: void deleteText_internal(int,int)>(i2, i1);

        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        return 1;

     label6:
        $r2 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>(i2, i1);

        $r3 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, $r2);

        specialinvoke r0.<android.widget.TextView: void setPrimaryClip(android.content.ClipData)>($r3);

        virtualinvoke r0.<android.widget.TextView: void stopSelectionActionMode()>();

        return 1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, z1, z2, z3, z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z16;
        android.text.method.MovementMethod r2, $r6, $r18;
        android.view.inputmethod.InputMethodManager r3;
        android.text.style.ClickableSpan[] r4;
        android.widget.Editor $r5, $r7, $r10, $r11, $r19, $r20, $r21, $r22, $r23;
        java.lang.CharSequence $r8, $r12, $r15;
        android.text.Layout $r9;
        android.text.Spannable $r13, $r17;
        android.text.style.ClickableSpan $r14;
        java.lang.Object[] $r16;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 == null goto label01;

        $r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r23.<android.widget.Editor: void onTouchEvent(android.view.MotionEvent)>(r1);

     label01:
        z0 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r7 == null goto label03;

        $r22 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z15 = $r22.<android.widget.Editor: boolean mDiscardNextActionUp>;

        if $z15 == 0 goto label03;

        if i0 != 1 goto label03;

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r21.<android.widget.Editor: boolean mDiscardNextActionUp> = 0;

     label02:
        return z0;

     label03:
        if i0 != 1 goto label12;

        $r20 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r20 == null goto label04;

        $r19 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z16 = $r19.<android.widget.Editor: boolean mIgnoreActionUpEvent>;

        if $z16 != 0 goto label12;

     label04:
        $z13 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z13 == 0 goto label12;

        z1 = 1;

     label05:
        $r6 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r6 != null goto label06;

        $z14 = virtualinvoke r0.<android.widget.TextView: boolean onCheckIsTextEditor()>();

        if $z14 == 0 goto label02;

     label06:
        $z6 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z6 == 0 goto label02;

        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z7 = $r8 instanceof android.text.Spannable;

        if $z7 == 0 goto label02;

        $r9 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r9 == null goto label02;

        r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        z2 = 0;

        if r2 == null goto label07;

        $r18 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r17 = (android.text.Spannable) $r15;

        $z12 = interfaceinvoke $r18.<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, $r17, r1);

        z2 = 0 | $z12;

     label07:
        z3 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if z1 == 0 goto label08;

        $z11 = r0.<android.widget.TextView: boolean mLinksClickable>;

        if $z11 == 0 goto label08;

        $i1 = r0.<android.widget.TextView: int mAutoLinkMask>;

        if $i1 == 0 goto label08;

        if z3 == 0 goto label08;

        $r12 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r13 = (android.text.Spannable) $r12;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        $i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        $r16 = interfaceinvoke $r13.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i2, $i3, class "android/text/style/ClickableSpan");

        r4 = (android.text.style.ClickableSpan[]) $r16;

        $i4 = lengthof r4;

        if $i4 <= 0 goto label08;

        $r14 = r4[0];

        virtualinvoke $r14.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r0);

        z2 = 1;

     label08:
        if z1 == 0 goto label11;

        $z8 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z8 != 0 goto label09;

        if z3 == 0 goto label11;

     label09:
        r3 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        virtualinvoke r0.<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>(r3);

        if z3 != 0 goto label10;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z9 = $r11.<android.widget.Editor: boolean mShowSoftInputOnFocus>;

        if $z9 == 0 goto label10;

        if r3 == null goto label10;

        z5 = virtualinvoke r3.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r0, 0);

        if z5 == 0 goto label10;

     label10:
        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r10.<android.widget.Editor: void onTouchUpEvent(android.view.MotionEvent)>(r1);

        z2 = 1;

     label11:
        if z2 == 0 goto label02;

        return 1;

     label12:
        z1 = 0;

        goto label05;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.view.MotionEvent r1;
        android.text.method.MovementMethod $r2, $r7;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r3, $r5;
        android.text.Layout $r4;
        android.text.Spannable $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r3 instanceof android.text.Spannable;

        if $z1 == 0 goto label1;

        $r4 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r4 == null goto label1;

        $r7 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r6 = (android.text.Spannable) $r5;

        $z2 = interfaceinvoke $r7.<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r0, $r6, r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        android.widget.TextView r0;
        android.view.View r1;
        int i0;
        android.widget.Editor $r2, $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.View: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        if i0 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void hideControllers()>();

     label1:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.View: void onWindowFocusChanged(boolean)>(z0);

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void onWindowFocusChanged(boolean)>(z0);

     label1:
        specialinvoke r0.<android.widget.TextView: void startStopMarquee(boolean)>(z0);

        return;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.widget.TextView r0;
        int i0, i1, i2, $i3, $i4, $i5;
        android.os.Bundle r1;
        java.lang.CharSequence r2;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.text.Spannable $r3, $r6;
        android.widget.Editor $r4, $r5;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        lookupswitch(i0)
        {
            case 16384: goto label02;
            case 32768: goto label04;
            case 65536: goto label06;
            case 131072: goto label08;
            default: goto label01;
        };

     label01:
        $z12 = specialinvoke r0.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        return $z12;

     label02:
        $z8 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z8 == 0 goto label03;

        $z11 = virtualinvoke r0.<android.widget.TextView: boolean canCopy()>();

        if $z11 == 0 goto label03;

        $z10 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908321);

        if $z10 == 0 goto label03;

        return 1;

     label03:
        return 0;

     label04:
        $z7 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z7 == 0 goto label05;

        $z6 = virtualinvoke r0.<android.widget.TextView: boolean canPaste()>();

        if $z6 == 0 goto label05;

        $z9 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908322);

        if $z9 == 0 goto label05;

        return 1;

     label05:
        return 0;

     label06:
        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z3 == 0 goto label07;

        $z5 = virtualinvoke r0.<android.widget.TextView: boolean canCut()>();

        if $z5 == 0 goto label07;

        $z4 = virtualinvoke r0.<android.widget.TextView: boolean onTextContextMenuItem(int)>(16908320);

        if $z4 == 0 goto label07;

        return 1;

     label07:
        return 0;

     label08:
        $z0 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z0 == 0 goto label17;

        $z1 = specialinvoke r0.<android.widget.TextView: boolean canSelectText()>();

        if $z1 == 0 goto label17;

        r2 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        if r2 != null goto label09;

        return 0;

     label09:
        if r1 == null goto label13;

        i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_START_INT", -1);

     label10:
        if r1 == null goto label14;

        i2 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("ACTION_ARGUMENT_SELECTION_END_INT", -1);

     label11:
        $i3 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if $i3 != i1 goto label12;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        if $i5 == i2 goto label17;

     label12:
        if i1 != i2 goto label15;

        if i2 != -1 goto label15;

        $r6 = (android.text.Spannable) r2;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>($r6);

        return 1;

     label13:
        i1 = -1;

        goto label10;

     label14:
        i2 = -1;

        goto label11;

     label15:
        if i1 < 0 goto label17;

        if i1 > i2 goto label17;

        $i4 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if i2 > $i4 goto label17;

        $r3 = (android.text.Spannable) r2;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r3, i1, i2);

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label16;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: boolean startSelectionActionMode()>();

     label16:
        return 1;

     label17:
        return 0;
    }

    public boolean performLongClick()
    {
        android.widget.TextView r0;
        boolean z0, z1, $z3;
        android.widget.Editor $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        z0 = specialinvoke r0.<android.view.View: boolean performLongClick()>();

        z1 = 0;

        if z0 == 0 goto label1;

        z1 = 1;

     label1:
        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label2;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z3 = virtualinvoke $r4.<android.widget.Editor: boolean performLongClick(boolean)>(z1);

        z1 = z1 | $z3;

     label2:
        if z1 == 0 goto label3;

        virtualinvoke r0.<android.widget.TextView: boolean performHapticFeedback(int)>(0);

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label3;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3.<android.widget.Editor: boolean mDiscardNextActionUp> = 1;

     label3:
        return z1;
    }

    long prepareSpacesAroundPaste(int, int, java.lang.CharSequence)
    {
        android.widget.TextView r0;
        int i0, i1, i6, i7, i8, i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.CharSequence r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        char c2, c3, c4, c5;
        long $l11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        $i10 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i10 <= 0 goto label2;

        if i0 <= 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        $i15 = i0 - 1;

        c4 = interfaceinvoke $r4.<java.lang.CharSequence: char charAt(int)>($i15);

        c5 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(0);

        $z4 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c4);

        if $z4 == 0 goto label3;

        $z7 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c5);

        if $z7 == 0 goto label3;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i8 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        $i19 = i0 - 1;

        virtualinvoke r0.<android.widget.TextView: void deleteText_internal(int,int)>($i19, i0);

        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i18 = interfaceinvoke $r8.<java.lang.CharSequence: int length()>();

        i9 = $i18 - i8;

        i0 = i0 + i9;

        i1 = i1 + i9;

     label1:
        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i12 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        if i1 >= $i12 goto label2;

        $i13 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i14 = -1 + $i13;

        c2 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i14);

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mTransformed>;

        c3 = interfaceinvoke $r3.<java.lang.CharSequence: char charAt(int)>(i1);

        $z1 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c2);

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c3);

        if $z2 == 0 goto label4;

        $i16 = i1 + 1;

        virtualinvoke r0.<android.widget.TextView: void deleteText_internal(int,int)>(i1, $i16);

     label2:
        $l11 = staticinvoke <android.text.TextUtils: long packRangeInLong(int,int)>(i0, i1);

        return $l11;

     label3:
        $z5 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c4);

        if $z5 != 0 goto label1;

        if c4 == 10 goto label1;

        $z6 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c5);

        if $z6 != 0 goto label1;

        if c5 == 10 goto label1;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i6 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)>(i0, i0, " ");

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i17 = interfaceinvoke $r7.<java.lang.CharSequence: int length()>();

        i7 = $i17 - i6;

        i0 = i0 + i7;

        i1 = i1 + i7;

        goto label1;

     label4:
        $z0 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c2);

        if $z0 != 0 goto label2;

        if c2 == 10 goto label2;

        $z3 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c3);

        if $z3 != 0 goto label2;

        if c3 == 10 goto label2;

        virtualinvoke r0.<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)>(i1, i1, " ");

        goto label2;
    }

    void removeAdjacentSuggestionSpans(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4;
        android.text.Editable r1;
        android.text.style.SuggestionSpan[] r2;
        java.lang.CharSequence $r3, $r4;
        boolean $z0, $z1;
        java.lang.Object[] $r5;
        android.text.style.SuggestionSpan $r6, $r7, $r8;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Editable;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        r1 = (android.text.Editable) $r4;

        $r5 = interfaceinvoke r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i0, class "android/text/style/SuggestionSpan");

        r2 = (android.text.style.SuggestionSpan[]) $r5;

        i1 = lengthof r2;

        i2 = 0;

     label3:
        if i2 >= i1 goto label1;

        $r6 = r2[i2];

        i3 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r6);

        $r7 = r2[i2];

        i4 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r7);

        if i4 == i0 goto label4;

        if i3 != i0 goto label5;

     label4:
        $z1 = staticinvoke <android.widget.SpellChecker: boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int)>(r1, i0, i0, i3, i4);

        if $z1 == 0 goto label5;

        $r8 = r2[i2];

        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>($r8);

     label5:
        i2 = i2 + 1;

        goto label3;
    }

    void removeMisspelledSpans(android.text.Spannable)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.text.style.SuggestionSpan[] r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r3;
        android.text.style.SuggestionSpan $r4, $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Spannable;

        $i2 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r3 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i2, class "android/text/style/SuggestionSpan");

        r2 = (android.text.style.SuggestionSpan[]) $r3;

        i0 = 0;

     label1:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label3;

        $r4 = r2[i0];

        i1 = virtualinvoke $r4.<android.text.style.SuggestionSpan: int getFlags()>();

        $i4 = i1 & 1;

        if $i4 == 0 goto label2;

        $i5 = i1 & 2;

        if $i5 == 0 goto label2;

        $r5 = r2[i0];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>($r5);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.text.Spannable r2;
        android.text.style.SuggestionSpan[] r3;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        android.text.SpannableString $r4;
        java.lang.Object[] $r5;
        android.text.style.SuggestionSpan $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label4;

        $z1 = r1 instanceof android.text.Spannable;

        if $z1 == 0 goto label3;

        r2 = (android.text.Spannable) r1;

     label1:
        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r5 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "android/text/style/SuggestionSpan");

        r3 = (android.text.style.SuggestionSpan[]) $r5;

        i0 = 0;

     label2:
        $i2 = lengthof r3;

        if i0 >= $i2 goto label4;

        $r6 = r3[i0];

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r6);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r4 = new android.text.SpannableString;

        specialinvoke $r4.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(r1);

        r2 = $r4;

        r1 = r2;

        goto label1;

     label4:
        return r1;
    }

    public void removeTextChangedListener(android.text.TextWatcher)
    {
        android.widget.TextView r0;
        android.text.TextWatcher r1;
        int i0;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextWatcher;

        $r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label1:
        return;
    }

    protected void replaceText_internal(int, int, java.lang.CharSequence)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence r1, $r2;
        android.text.Editable $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        interfaceinvoke $r3.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i0, i1, r1);

        return;
    }

    public void resetErrorChangedFlag()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mErrorWasChanged> = 0;

     label1:
        return;
    }

    protected void resetResolvedDrawables()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        specialinvoke r0.<android.view.View: void resetResolvedDrawables()>();

        r0.<android.widget.TextView: int mLastLayoutDirection> = -1;

        return;
    }

    boolean selectAllText()
    {
        android.widget.TextView r0;
        int i0;
        java.lang.CharSequence $r1, $r2;
        android.text.Spannable $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Spannable) $r2;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r3, 0, i0);

        if i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void sendAccessibilityEvent(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 != 4096 goto label1;

        return;

     label1:
        specialinvoke r0.<android.view.View: void sendAccessibilityEvent(int)>(i0);

        return;
    }

    void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        android.view.accessibility.AccessibilityEvent r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(16);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>(i0);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setRemovedCount(int)>(i1);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setAddedCount(int)>(i2);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setBeforeText(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<android.widget.TextView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    void sendAfterTextChanged(android.text.Editable)
    {
        android.widget.TextView r0;
        android.text.Editable r1;
        java.util.ArrayList r2, $r3;
        int i0, i1;
        java.lang.Object $r4;
        android.text.TextWatcher $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (android.text.TextWatcher) $r4;

        interfaceinvoke $r5.<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void sendOnTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4;
        java.util.ArrayList r2, $r3;
        android.widget.Editor $r4, $r5;
        java.lang.Object $r6;
        android.text.TextWatcher $r7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        r2 = r0.<android.widget.TextView: java.util.ArrayList mListeners>;

        i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r7 = (android.text.TextWatcher) $r6;

        interfaceinvoke $r7.<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label3;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: void sendOnTextChanged(int,int)>(i0, i2);

     label3:
        return;
    }

    public void setAccessibilitySelection(int, int)
    {
        android.widget.TextView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.CharSequence r1;
        android.widget.Editor $r2, $r5;
        android.text.Spannable $r3, $r4;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.widget.TextView: int getAccessibilitySelectionStart()>();

        if $i2 != i0 goto label1;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getAccessibilitySelectionEnd()>();

        if $i6 != i1 goto label1;

        return;

     label1:
        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label2;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: void hideControllers()>();

     label2:
        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>();

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        if $i3 < 0 goto label3;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $i5 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i4 > $i5 goto label3;

        $r4 = (android.text.Spannable) r1;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r4, i0, i1);

        return;

     label3:
        $r3 = (android.text.Spannable) r1;

        staticinvoke <android.text.Selection: void removeSelection(android.text.Spannable)>($r3);

        return;
    }

    public void setAllCaps(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.text.method.AllCapsTransformationMethod $r1;
        android.content.Context $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new android.text.method.AllCapsTransformationMethod;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r1.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r2);

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r1);

        return;

     label1:
        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>(null);

        return;
    }

    public final void setAutoLinkMask(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mAutoLinkMask> = i0;

        return;
    }

    public void setCompoundDrawablePadding(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.TextView$Drawables r1, $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if i0 != 0 goto label2;

        if r1 == null goto label1;

        r1.<android.widget.TextView$Drawables: int mDrawablePadding> = i0;

     label1:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;

     label2:
        if r1 != null goto label3;

        $r2 = new android.widget.TextView$Drawables;

        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r3);

        r1 = $r2;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = r1;

     label3:
        r1.<android.widget.TextView$Drawables: int mDrawablePadding> = i0;

        goto label1;
    }

    public void setCompoundDrawables(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30;
        android.widget.TextView$Drawables r5, $r8, $r19;
        boolean z0;
        android.graphics.Rect r6;
        int[] r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.Context $r24;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        r5 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 != null goto label01;

        if r2 != null goto label01;

        if r3 != null goto label01;

        if r4 == null goto label05;

     label01:
        z0 = 1;

     label02:
        if z0 != 0 goto label11;

        if r5 == null goto label03;

        $i8 = r5.<android.widget.TextView$Drawables: int mDrawablePadding>;

        if $i8 != 0 goto label06;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = null;

     label03:
        if r5 == null goto label04;

        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeftInitial> = r1;

        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRightInitial> = r3;

     label04:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;

     label05:
        z0 = 0;

        goto label02;

     label06:
        $r22 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r22 == null goto label07;

        $r30 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r30.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label07:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft> = null;

        $r23 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r23 == null goto label08;

        $r29 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r29.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label08:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = null;

        $r27 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r27 == null goto label09;

        $r26 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r26.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label09:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight> = null;

        $r28 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r28 == null goto label10;

        $r25 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r25.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label10:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = null;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label03;

     label11:
        if r5 != null goto label12;

        $r19 = new android.widget.TextView$Drawables;

        $r24 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r19.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r24);

        r5 = $r19;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = r5;

     label12:
        $r8 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r8.<android.widget.TextView$Drawables: boolean mOverride> = 0;

        $r9 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r9 == r1 goto label13;

        $r21 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if $r21 == null goto label13;

        $r18 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        virtualinvoke $r18.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label13:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft> = r1;

        $r10 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r10 == r2 goto label14;

        $r16 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r16 == null goto label14;

        $r20 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label14:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = r2;

        $r11 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r11 == r3 goto label15;

        $r14 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if $r14 == null goto label15;

        $r17 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        virtualinvoke $r17.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label15:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight> = r3;

        $r12 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r12 == r4 goto label16;

        $r13 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r13 == null goto label16;

        $r15 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label16:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = r4;

        r6 = r5.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r7 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label20;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i6 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = $i6;

        $i7 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = $i7;

     label17:
        if r3 == null goto label21;

        virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i5 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeRight> = $i5;

        $i4 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableHeightRight> = $i4;

     label18:
        if r2 == null goto label22;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i2 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = $i2;

        $i3 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = $i3;

     label19:
        if r4 == null goto label23;

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i1 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = $i1;

        $i0 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = $i0;

        goto label03;

     label20:
        r5.<android.widget.TextView$Drawables: int mDrawableHeightLeft> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeLeft> = 0;

        goto label17;

     label21:
        r5.<android.widget.TextView$Drawables: int mDrawableHeightRight> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeRight> = 0;

        goto label18;

     label22:
        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        goto label19;

     label23:
        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label03;
    }

    public void setCompoundDrawablesRelative(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30;
        android.widget.TextView$Drawables r5, $r8, $r19;
        boolean z0;
        android.graphics.Rect r6;
        int[] r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.Context $r24;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        r5 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if r1 != null goto label01;

        if r2 != null goto label01;

        if r3 != null goto label01;

        if r4 == null goto label04;

     label01:
        z0 = 1;

     label02:
        if z0 != 0 goto label10;

        if r5 == null goto label03;

        $i8 = r5.<android.widget.TextView$Drawables: int mDrawablePadding>;

        if $i8 != 0 goto label05;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = null;

     label03:
        virtualinvoke r0.<android.widget.TextView: void resetResolvedDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void resolveDrawables()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        return;

     label04:
        z0 = 0;

        goto label02;

     label05:
        $r22 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r22 == null goto label06;

        $r30 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r30.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label06:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = null;

        $r23 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r23 == null goto label07;

        $r29 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r29.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label07:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = null;

        $r27 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r27 == null goto label08;

        $r26 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r26.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label08:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = null;

        $r28 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r28 == null goto label09;

        $r25 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r25.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label09:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = null;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label03;

     label10:
        if r5 != null goto label11;

        $r19 = new android.widget.TextView$Drawables;

        $r24 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r19.<android.widget.TextView$Drawables: void <init>(android.content.Context)>($r24);

        r5 = $r19;

        r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables> = r5;

     label11:
        $r8 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r8.<android.widget.TextView$Drawables: boolean mOverride> = 1;

        $r9 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r9 == r1 goto label12;

        $r21 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if $r21 == null goto label12;

        $r18 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        virtualinvoke $r18.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label12:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart> = r1;

        $r10 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r10 == r2 goto label13;

        $r16 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if $r16 == null goto label13;

        $r20 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label13:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop> = r2;

        $r11 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r11 == r3 goto label14;

        $r14 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if $r14 == null goto label14;

        $r17 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        virtualinvoke $r17.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label14:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd> = r3;

        $r12 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r12 == r4 goto label15;

        $r13 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if $r13 == null goto label15;

        $r15 = r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label15:
        r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom> = r4;

        r6 = r5.<android.widget.TextView$Drawables: android.graphics.Rect mCompoundRect>;

        r7 = virtualinvoke r0.<android.widget.TextView: int[] getDrawableState()>();

        if r1 == null goto label19;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i6 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeStart> = $i6;

        $i7 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableHeightStart> = $i7;

     label16:
        if r3 == null goto label20;

        virtualinvoke r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i5 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = $i5;

        $i4 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = $i4;

     label17:
        if r2 == null goto label21;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i2 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = $i2;

        $i3 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = $i3;

     label18:
        if r4 == null goto label22;

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r7);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>(r6);

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i1 = virtualinvoke r6.<android.graphics.Rect: int height()>();

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = $i1;

        $i0 = virtualinvoke r6.<android.graphics.Rect: int width()>();

        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = $i0;

        goto label03;

     label19:
        r5.<android.widget.TextView$Drawables: int mDrawableHeightStart> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeStart> = 0;

        goto label16;

     label20:
        r5.<android.widget.TextView$Drawables: int mDrawableHeightEnd> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeEnd> = 0;

        goto label17;

     label21:
        r5.<android.widget.TextView$Drawables: int mDrawableWidthTop> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeTop> = 0;

        goto label18;

     label22:
        r5.<android.widget.TextView$Drawables: int mDrawableWidthBottom> = 0;

        r5.<android.widget.TextView$Drawables: int mDrawableSizeBottom> = 0;

        goto label03;
    }

    public void setCompoundDrawablesRelativeWithIntrinsicBounds(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.content.res.Resources r1;
        android.graphics.drawable.Drawable r2, r3, r4, r5;
        android.content.Context $r6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r6 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r1 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        if i0 == 0 goto label5;

        r2 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

     label1:
        if i1 == 0 goto label6;

        r3 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i1);

     label2:
        if i2 == 0 goto label7;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i2);

     label3:
        r5 = null;

        if i3 == 0 goto label4;

        r5 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i3);

     label4:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r2, r3, r4, r5);

        return;

     label5:
        r2 = null;

        goto label1;

     label6:
        r3 = null;

        goto label2;

     label7:
        r4 = null;

        goto label3;
    }

    public void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        $i6 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i7 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i6, $i7);

     label1:
        if r3 == null goto label2;

        $i4 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i5 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);

     label2:
        if r2 == null goto label3;

        $i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

     label3:
        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label4:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2, r3, r4);

        return;
    }

    public void setCompoundDrawablesWithIntrinsicBounds(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        android.content.res.Resources r1;
        android.graphics.drawable.Drawable r2, r3, r4, r5;
        android.content.Context $r6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r6 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        r1 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        if i0 == 0 goto label5;

        r2 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

     label1:
        if i1 == 0 goto label6;

        r3 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i1);

     label2:
        if i2 == 0 goto label7;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i2);

     label3:
        r5 = null;

        if i3 == 0 goto label4;

        r5 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i3);

     label4:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r2, r3, r4, r5);

        return;

     label5:
        r2 = null;

        goto label1;

     label6:
        r3 = null;

        goto label2;

     label7:
        r4 = null;

        goto label3;
    }

    public void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        r4 := @parameter3: android.graphics.drawable.Drawable;

        if r1 == null goto label1;

        $i6 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i7 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i6, $i7);

     label1:
        if r3 == null goto label2;

        $i4 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i5 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i4, $i5);

     label2:
        if r2 == null goto label3;

        $i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i2, $i3);

     label3:
        if r4 == null goto label4;

        $i0 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label4:
        virtualinvoke r0.<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(r1, r2, r3, r4);

        return;
    }

    protected void setCursorPosition_internal(int, int)
    {
        android.widget.TextView r0;
        int i0, i1;
        java.lang.CharSequence $r1;
        android.text.Editable $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r2 = (android.text.Editable) $r1;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r2, i0, i1);

        return;
    }

    public void setCursorVisible(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.widget.Editor $r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 != null goto label2;

     label1:
        return;

     label2:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z1 = $r1.<android.widget.Editor: boolean mCursorVisible>;

        if $z1 == z0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: boolean mCursorVisible> = z0;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void makeBlink()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

        return;
    }

    public void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
    {
        android.widget.TextView r0;
        android.view.ActionMode$Callback r1;
        android.widget.Editor $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.ActionMode$Callback;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r2.<android.widget.Editor: android.view.ActionMode$Callback mCustomSelectionActionModeCallback> = r1;

        return;
    }

    public final void setEditableFactory(android.text.Editable$Factory)
    {
        android.widget.TextView r0;
        android.text.Editable$Factory r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Editable$Factory;

        r0.<android.widget.TextView: android.text.Editable$Factory mEditableFactory> = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public void setEllipsize(android.text.TextUtils$TruncateAt)
    {
        android.widget.TextView r0;
        android.text.TextUtils$TruncateAt r1, $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.TextUtils$TruncateAt;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        if $r2 == r1 goto label1;

        r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize> = r1;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 1;

        r0.<android.widget.TextView: int mMaxWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1, $z2;
        android.view.inputmethod.InputMethodManager r1, r2;
        android.widget.Editor $r3, $r4, $r5, $r6;
        android.os.IBinder $r7;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if z0 != $z1 goto label2;

     label1:
        return;

     label2:
        if z0 != 0 goto label3;

        r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r2 == null goto label3;

        $z2 = virtualinvoke r2.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r0);

        if $z2 == 0 goto label3;

        $r7 = virtualinvoke r0.<android.widget.TextView: android.os.IBinder getWindowToken()>();

        virtualinvoke r2.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r7, 0);

     label3:
        specialinvoke r0.<android.view.View: void setEnabled(boolean)>(z0);

        if z0 == 0 goto label4;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label4;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label4:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void invalidateTextDisplayList()>();

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r5.<android.widget.Editor: void prepareCursorControllers()>();

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r6.<android.widget.Editor: void makeBlink()>();

        return;
    }

    public void setError(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.graphics.drawable.Drawable r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        int $i0, $i1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(null, null);

        return;

     label1:
        $r3 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r4.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17302448);

        $i0 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke r0.<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(r1, r2);

        return;
    }

    public void setError(java.lang.CharSequence, android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.graphics.drawable.Drawable r2;
        android.widget.Editor $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>(r1, r2);

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        return;
    }

    public void setExtractedText(android.view.inputmethod.ExtractedText)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedText r1;
        android.text.Editable r2;
        android.text.Spannable r3;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.CharSequence $r4, $r5, $r7, $r9, $r10;
        android.widget.TextView$BufferType $r11;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedText;

        r2 = virtualinvoke r0.<android.widget.TextView: android.text.Editable getEditableText()>();

        $r4 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        if $r4 == null goto label01;

        if r2 != null goto label04;

        $r10 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $r11 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r10, $r11);

     label01:
        $r5 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        r3 = (android.text.Spannable) $r5;

        i0 = interfaceinvoke r3.<android.text.Spannable: int length()>();

        i1 = r1.<android.view.inputmethod.ExtractedText: int selectionStart>;

        if i1 >= 0 goto label08;

        i1 = 0;

     label02:
        i2 = r1.<android.view.inputmethod.ExtractedText: int selectionEnd>;

        if i2 >= 0 goto label09;

        i2 = 0;

     label03:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>(r3, i1, i2);

        $i6 = r1.<android.view.inputmethod.ExtractedText: int flags>;

        $i7 = 2 & $i6;

        if $i7 == 0 goto label10;

        staticinvoke <android.text.method.MetaKeyKeyListener: void startSelecting(android.view.View,android.text.Spannable)>(r0, r3);

        return;

     label04:
        $i8 = r1.<android.view.inputmethod.ExtractedText: int partialStartOffset>;

        if $i8 >= 0 goto label05;

        $i9 = interfaceinvoke r2.<android.text.Editable: int length()>();

        staticinvoke <android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>(r2, 0, $i9);

        $i10 = interfaceinvoke r2.<android.text.Editable: int length()>();

        $r9 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        interfaceinvoke r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(0, $i10, $r9);

        goto label01;

     label05:
        i3 = interfaceinvoke r2.<android.text.Editable: int length()>();

        i4 = r1.<android.view.inputmethod.ExtractedText: int partialStartOffset>;

        if i4 <= i3 goto label06;

        i4 = i3;

     label06:
        i5 = r1.<android.view.inputmethod.ExtractedText: int partialEndOffset>;

        if i5 <= i3 goto label07;

        i5 = i3;

     label07:
        staticinvoke <android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>(r2, i4, i5);

        $r7 = r1.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        interfaceinvoke r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i4, i5, $r7);

        goto label01;

     label08:
        if i1 <= i0 goto label02;

        i1 = i0;

        goto label02;

     label09:
        if i2 <= i0 goto label03;

        i2 = i0;

        goto label03;

     label10:
        staticinvoke <android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>(r0, r3);

        return;
    }

    public void setExtracting(android.view.inputmethod.ExtractedTextRequest)
    {
        android.widget.TextView r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        android.widget.Editor $r2, $r4, $r5;
        android.widget.Editor$InputMethodState $r3, $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        if $r3 == null goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        $r6.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtractedTextRequest> = r1;

     label1:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void hideControllers()>();

        return;
    }

    public void setFilters(android.text.InputFilter[])
    {
        android.widget.TextView r0;
        android.text.InputFilter[] r1;
        java.lang.CharSequence $r2, $r3;
        boolean $z0;
        android.text.Editable $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.InputFilter[];

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        r0.<android.widget.TextView: android.text.InputFilter[] mFilters> = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r2 instanceof android.text.Editable;

        if $z0 == 0 goto label2;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r4 = (android.text.Editable) $r3;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r4, r1);

     label2:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3;
        boolean z0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void setFrame()>();

     label1:
        specialinvoke r0.<android.widget.TextView: void restartMarqueeIfNeeded()>();

        return z0;
    }

    public void setFreezesText(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        r0.<android.widget.TextView: boolean mFreezesText> = z0;

        return;
    }

    public void setGravity(int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0;
        android.text.Layout $r1, $r2, $r3, $r4;
        android.text.BoringLayout$Metrics $r5, $r6;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i5 = i0 & 8388615;

        if $i5 != 0 goto label1;

        i0 = i0 | 8388611;

     label1:
        $i6 = i0 & 112;

        if $i6 != 0 goto label2;

        i0 = i0 | 48;

     label2:
        i1 = i0 & 8388615;

        $i7 = r0.<android.widget.TextView: int mGravity>;

        i2 = 8388615 & $i7;

        z0 = 0;

        if i1 == i2 goto label3;

        z0 = 1;

     label3:
        $i8 = r0.<android.widget.TextView: int mGravity>;

        if i0 == $i8 goto label4;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label4:
        r0.<android.widget.TextView: int mGravity> = i0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label6;

        if z0 == 0 goto label6;

        $r2 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        i3 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();

        $r3 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        if $r3 != null goto label7;

        i4 = 0;

     label5:
        $r5 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $r6 = <android.widget.TextView: android.text.BoringLayout$Metrics UNKNOWN_BORING>;

        $i10 = r0.<android.widget.TextView: int mRight>;

        $i9 = r0.<android.widget.TextView: int mLeft>;

        $i11 = $i10 - $i9;

        $i13 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i12 = $i11 - $i13;

        $i15 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i14 = $i12 - $i15;

        virtualinvoke r0.<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>(i3, i4, $r5, $r6, $i14, 1);

     label6:
        return;

     label7:
        $r4 = r0.<android.widget.TextView: android.text.Layout mHintLayout>;

        i4 = virtualinvoke $r4.<android.text.Layout: int getWidth()>();

        goto label5;
    }

    public void setHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 2;

        r0.<android.widget.TextView: int mMaxMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setHighlightColor(int)
    {
        android.widget.TextView r0;
        int i0, $i1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.TextView: int mHighlightColor>;

        if $i1 == i0 goto label1;

        r0.<android.widget.TextView: int mHighlightColor> = i0;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public final void setHint(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setHint(java.lang.CharSequence)>($r3);

        return;
    }

    public final void setHint(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, $r2, $r4, $r6, $r7;
        android.text.Layout $r3;
        int $i0, $i1;
        android.widget.Editor $r5, $r8;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = staticinvoke <android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>(r1);

        r0.<android.widget.TextView: java.lang.CharSequence mHint> = $r2;

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void checkForRelayout()>();

     label1:
        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label2;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 == null goto label3;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $i1 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i1 != 0 goto label3;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mHint>;

        if $r7 == null goto label3;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r8.<android.widget.Editor: void invalidateTextDisplayList()>();

     label3:
        return;
    }

    public final void setHintTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setHintTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.TextView: android.content.res.ColorStateList mHintTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public void setHorizontallyScrolling(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TextView: boolean mHorizontallyScrolling>;

        if $z1 == z0 goto label1;

        r0.<android.widget.TextView: boolean mHorizontallyScrolling> = z0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setImeActionLabel(java.lang.CharSequence, int)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        int i0;
        android.widget.Editor $r2, $r3, $r5;
        android.widget.Editor$InputContentType $r4, $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: java.lang.CharSequence imeActionLabel> = r1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r5.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r6.<android.widget.Editor$InputContentType: int imeActionId> = i0;

        return;
    }

    public void setImeOptions(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor $r1, $r2;
        android.widget.Editor$InputContentType $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r1.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r3 = $r2.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r3.<android.widget.Editor$InputContentType: int imeOptions> = i0;

        return;
    }

    public void setIncludeFontPadding(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TextView: boolean mIncludePad>;

        if $z1 == z0 goto label1;

        r0.<android.widget.TextView: boolean mIncludePad> = z0;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setInputExtras(int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        android.content.res.Resources $r2, $r7;
        android.widget.Editor $r3, $r4, $r8;
        android.os.Bundle $r5, $r10;
        android.widget.Editor$InputContentType $r6, $r9;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = $r4.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        $r6.<android.widget.Editor$InputContentType: android.os.Bundle extras> = $r5;

        $r7 = virtualinvoke r0.<android.widget.TextView: android.content.res.Resources getResources()>();

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = $r8.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r10 = $r9.<android.widget.Editor$InputContentType: android.os.Bundle extras>;

        virtualinvoke $r7.<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>(r1, $r10);

        return;
    }

    public void setInputType(int)
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9;
        android.text.method.TransformationMethod r1, r4;
        android.text.method.PasswordTransformationMethod r2, r5, $r8;
        android.view.inputmethod.InputMethodManager r3;
        java.lang.CharSequence $r6, $r7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        z0 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>($i1);

        $i2 = virtualinvoke r0.<android.widget.TextView: int getInputType()>();

        z1 = staticinvoke <android.widget.TextView: boolean isVisiblePasswordInputType(int)>($i2);

        specialinvoke r0.<android.widget.TextView: void setInputType(int,boolean)>(i0, 0);

        z2 = staticinvoke <android.widget.TextView: boolean isPasswordInputType(int)>(i0);

        z3 = staticinvoke <android.widget.TextView: boolean isVisiblePasswordInputType(int)>(i0);

        z4 = 0;

        if z2 == 0 goto label08;

        $r8 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r8);

        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(null, 3, 0);

     label01:
        $z7 = staticinvoke <android.widget.TextView: boolean isMultilineInputType(int)>(i0);

        if $z7 != 0 goto label12;

        z5 = 1;

     label02:
        $z9 = r0.<android.widget.TextView: boolean mSingleLine>;

        if $z9 != z5 goto label03;

        if z4 == 0 goto label05;

     label03:
        z6 = 0;

        if z2 != 0 goto label04;

        z6 = 1;

     label04:
        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z5, z6, 1);

     label05:
        $z8 = virtualinvoke r0.<android.widget.TextView: boolean isSuggestionsEnabled()>();

        if $z8 != 0 goto label06;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r7 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>($r6);

        r0.<android.widget.TextView: java.lang.CharSequence mText> = $r7;

     label06:
        r3 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r3 == null goto label07;

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label07:
        return;

     label08:
        if z3 == 0 goto label10;

        r4 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        r5 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        z4 = 0;

        if r4 != r5 goto label09;

        z4 = 1;

     label09:
        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(null, 3, 0);

        goto label01;

     label10:
        if z0 != 0 goto label11;

        z4 = 0;

        if z1 == 0 goto label01;

     label11:
        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>(null, -1, -1);

        r1 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        r2 = staticinvoke <android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>();

        z4 = 0;

        if r1 != r2 goto label01;

        z4 = 1;

        goto label01;

     label12:
        z5 = 0;

        goto label02;
    }

    public void setKeyListener(android.text.method.KeyListener)
    {
        android.widget.TextView r0;
        android.text.method.KeyListener r1, $r7;
        android.view.inputmethod.InputMethodManager r2;
        android.widget.Editor $r4, $r5, $r6, $r8, $r10;
        int $i0;
        boolean $z0;
        java.lang.IncompatibleClassChangeError $r9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.KeyListener;

        specialinvoke r0.<android.widget.TextView: void setKeyListenerOnly(android.text.method.KeyListener)>(r1);

        specialinvoke r0.<android.widget.TextView: void fixFocusableAndClickableSettings()>();

        if r1 == null goto label6;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

     label1:
        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r7 = $r6.<android.widget.Editor: android.text.method.KeyListener mKeyListener>;

        $i0 = interfaceinvoke $r7.<android.text.method.KeyListener: int getInputType()>();

        $r8.<android.widget.Editor: int mInputType> = $i0;

     label2:
        $z0 = r0.<android.widget.TextView: boolean mSingleLine>;

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>($z0);

     label3:
        r2 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r2 == null goto label4;

        virtualinvoke r2.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r0);

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        $r10 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r10.<android.widget.Editor: int mInputType> = 1;

        goto label2;

     label6:
        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r4 == null goto label3;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5.<android.widget.Editor: int mInputType> = 0;

        goto label3;

        catch java.lang.IncompatibleClassChangeError from label1 to label2 with label5;
    }

    public void setLineSpacing(float, float)
    {
        android.widget.TextView r0;
        float f0, f1, $f2, $f3;
        byte $b0, $b1;
        android.text.Layout $r1;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = r0.<android.widget.TextView: float mSpacingAdd>;

        $b0 = $f2 cmpl f0;

        if $b0 != 0 goto label1;

        $f3 = r0.<android.widget.TextView: float mSpacingMult>;

        $b1 = $f3 cmpl f1;

        if $b1 == 0 goto label2;

     label1:
        r0.<android.widget.TextView: float mSpacingAdd> = f0;

        r0.<android.widget.TextView: float mSpacingMult> = f1;

        $r1 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r1 == null goto label2;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label2:
        return;
    }

    public void setLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public final void setLinkTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setLinkTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        r0.<android.widget.TextView: android.content.res.ColorStateList mLinkTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public final void setLinksClickable(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        r0.<android.widget.TextView: boolean mLinksClickable> = z0;

        return;
    }

    public void setMarqueeRepeatLimit(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMarqueeRepeatLimit> = i0;

        return;
    }

    public void setMaxEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMaxHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMaxMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMaxLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaximum> = i0;

        r0.<android.widget.TextView: int mMaxMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMaxWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinEms(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinHeight(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinLines(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinimum> = i0;

        r0.<android.widget.TextView: int mMinMode> = 1;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setMinWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public final void setMovementMethod(android.text.method.MovementMethod)
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod r1, $r2;
        android.widget.Editor $r3, $r4;
        java.lang.CharSequence $r5, $r6;
        boolean $z0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.MovementMethod;

        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r2 == r1 goto label2;

        r0.<android.widget.TextView: android.text.method.MovementMethod mMovement> = r1;

        if r1 == null goto label1;

        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r5 instanceof android.text.Spannable;

        if $z0 != 0 goto label1;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

     label1:
        specialinvoke r0.<android.widget.TextView: void fixFocusableAndClickableSettings()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r4.<android.widget.Editor: void prepareCursorControllers()>();

     label2:
        return;
    }

    public void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)
    {
        android.widget.TextView r0;
        android.widget.TextView$OnEditorActionListener r1;
        android.widget.Editor $r2, $r3;
        android.widget.Editor$InputContentType $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.widget.TextView$OnEditorActionListener;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: android.widget.TextView$OnEditorActionListener onEditorActionListener> = r1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = r0.<android.widget.TextView: int mPaddingLeft>;

        if i0 != $i4 goto label1;

        $i5 = r0.<android.widget.TextView: int mPaddingRight>;

        if i2 != $i5 goto label1;

        $i6 = r0.<android.widget.TextView: int mPaddingTop>;

        if i1 != $i6 goto label1;

        $i7 = r0.<android.widget.TextView: int mPaddingBottom>;

        if i3 == $i7 goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

     label2:
        specialinvoke r0.<android.view.View: void setPadding(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setPaddingRelative(int, int, int, int)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = virtualinvoke r0.<android.widget.TextView: int getPaddingStart()>();

        if i0 != $i4 goto label1;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getPaddingEnd()>();

        if i2 != $i5 goto label1;

        $i6 = r0.<android.widget.TextView: int mPaddingTop>;

        if i1 != $i6 goto label1;

        $i7 = r0.<android.widget.TextView: int mPaddingBottom>;

        if i3 == $i7 goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

     label2:
        specialinvoke r0.<android.view.View: void setPaddingRelative(int,int,int,int)>(i0, i1, i2, i3);

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public void setPaintFlags(int)
    {
        android.widget.TextView r0;
        int i0, $i1;
        android.text.TextPaint $r1, $r2;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i1 = virtualinvoke $r1.<android.text.TextPaint: int getFlags()>();

        if $i1 == i0 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setFlags(int)>(i0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setPrivateImeOptions(java.lang.String)
    {
        android.widget.TextView r0;
        java.lang.String r1;
        android.widget.Editor $r2, $r3;
        android.widget.Editor$InputContentType $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void createInputContentTypeIfNeeded()>();

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4 = $r3.<android.widget.Editor: android.widget.Editor$InputContentType mInputContentType>;

        $r4.<android.widget.Editor$InputContentType: java.lang.String privateImeOptions> = r1;

        return;
    }

    public void setRawInputType(int)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 != null goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: int mInputType> = i0;

        return;
    }

    public void setScroller(android.widget.Scroller)
    {
        android.widget.TextView r0;
        android.widget.Scroller r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.widget.Scroller;

        r0.<android.widget.TextView: android.widget.Scroller mScroller> = r1;

        return;
    }

    public void setSelectAllOnFocus(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.widget.Editor $r1;
        java.lang.CharSequence $r2, $r4;
        android.widget.TextView$BufferType $r3;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: boolean mSelectAllOnFocus> = z0;

        if z0 == 0 goto label1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z1 = $r2 instanceof android.text.Spannable;

        if $z1 != 0 goto label1;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, $r3);

     label1:
        return;
    }

    public void setSelected(boolean)
    {
        android.widget.TextView r0;
        boolean z0, z1;
        android.text.TextUtils$TruncateAt $r1, $r2;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        z1 = virtualinvoke r0.<android.widget.TextView: boolean isSelected()>();

        specialinvoke r0.<android.view.View: void setSelected(boolean)>(z0);

        if z0 == z1 goto label1;

        $r2 = r0.<android.widget.TextView: android.text.TextUtils$TruncateAt mEllipsize>;

        $r1 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if $r2 != $r1 goto label1;

        if z0 == 0 goto label2;

        specialinvoke r0.<android.widget.TextView: void startMarquee()>();

     label1:
        return;

     label2:
        specialinvoke r0.<android.widget.TextView: void stopMarquee()>();

        return;
    }

    public void setShadowLayer(float, float, float, int)
    {
        android.widget.TextView r0;
        float f0, f1, f2;
        int i0;
        android.text.TextPaint $r1;
        android.widget.Editor $r2, $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        i0 := @parameter3: int;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r1.<android.text.TextPaint: void setShadowLayer(float,float,float,int)>(f0, f1, f2, i0);

        r0.<android.widget.TextView: float mShadowRadius> = f0;

        r0.<android.widget.TextView: float mShadowDx> = f1;

        r0.<android.widget.TextView: float mShadowDy> = f2;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r3.<android.widget.Editor: void invalidateTextDisplayList()>();

     label1:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    public final void setShowSoftInputOnFocus(boolean)
    {
        android.widget.TextView r0;
        boolean z0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r1.<android.widget.Editor: boolean mShowSoftInputOnFocus> = z0;

        return;
    }

    public void setSingleLine()
    {
        android.widget.TextView r0;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void setSingleLine(boolean)>(1);

        return;
    }

    public void setSingleLine(boolean)
    {
        android.widget.TextView r0;
        boolean z0;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.TextView: void setInputTypeSingleLine(boolean)>(z0);

        specialinvoke r0.<android.widget.TextView: void applySingleLine(boolean,boolean,boolean)>(z0, 1, 1);

        return;
    }

    protected void setSpan_internal(java.lang.Object, int, int, int)
    {
        android.widget.TextView r0;
        java.lang.Object r1;
        int i0, i1, i2;
        java.lang.CharSequence $r2;
        android.text.Editable $r3;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r3 = (android.text.Editable) $r2;

        interfaceinvoke $r3.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    public final void setSpannableFactory(android.text.Spannable$Factory)
    {
        android.widget.TextView r0;
        android.text.Spannable$Factory r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Spannable$Factory;

        r0.<android.widget.TextView: android.text.Spannable$Factory mSpannableFactory> = r1;

        $r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r2);

        return;
    }

    public final void setText(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        return;
    }

    public final void setText(int, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        int i0;
        android.widget.TextView$BufferType r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        java.lang.CharSequence $r4;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.TextView$BufferType;

        $r2 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r4, r1);

        return;
    }

    public final void setText(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.TextView$BufferType $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r2);

        return;
    }

    public void setText(java.lang.CharSequence, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.TextView$BufferType r2;
        android.widget.TextView$CharWrapper $r3, $r4;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.TextView$BufferType;

        specialinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>(r1, r2, 1, 0);

        $r3 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        if $r3 == null goto label1;

        $r4 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        staticinvoke <android.widget.TextView$CharWrapper: char[] access$002(android.widget.TextView$CharWrapper,char[])>($r4, null);

     label1:
        return;
    }

    public final void setText(char[], int, int)
    {
        android.widget.TextView r0;
        char[] r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.CharSequence $r8, $r13, $r15;
        android.widget.TextView$CharWrapper $r9, $r10, $r11, $r14;
        android.widget.TextView$BufferType $r12;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        $i4 = i0 + i1;

        $i3 = lengthof r1;

        if $i4 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if $r8 == null goto label5;

        $r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        i2 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        $r15 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>($r15, 0, i2, i1);

     label3:
        $r9 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        if $r9 != null goto label6;

        $r14 = new android.widget.TextView$CharWrapper;

        specialinvoke $r14.<android.widget.TextView$CharWrapper: void <init>(char[],int,int)>(r1, i0, i1);

        r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper> = $r14;

     label4:
        $r11 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        $r12 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        specialinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)>($r11, $r12, 0, i2);

        return;

     label5:
        specialinvoke r0.<android.widget.TextView: void sendBeforeTextChanged(java.lang.CharSequence,int,int,int)>("", 0, 0, i1);

        i2 = 0;

        goto label3;

     label6:
        $r10 = r0.<android.widget.TextView: android.widget.TextView$CharWrapper mCharWrapper>;

        virtualinvoke $r10.<android.widget.TextView$CharWrapper: void set(char[],int,int)>(r1, i0, i1);

        goto label4;
    }

    public void setTextAppearance(android.content.Context, int)
    {
        android.widget.TextView r0;
        android.content.Context r1, $r8;
        int i0, i1, i2, i3, $i4, $i5;
        android.content.res.TypedArray r2;
        android.content.res.ColorStateList r3, r4, r5;
        float f0, f1, $f2, $f3;
        int[] $r6;
        java.lang.String $r7;
        boolean $z0;
        android.text.method.AllCapsTransformationMethod $r9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r6 = <com.android.internal.R$styleable: int[] TextAppearance>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>(i0, $r6);

        i1 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>(4, 0);

        if i1 == 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void setHighlightColor(int)>(i1);

     label1:
        r3 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(3);

        if r3 == null goto label2;

        virtualinvoke r0.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>(r3);

     label2:
        i2 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        if i2 == 0 goto label3;

        $f2 = (float) i2;

        specialinvoke r0.<android.widget.TextView: void setRawTextSize(float)>($f2);

     label3:
        r4 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(5);

        if r4 == null goto label4;

        virtualinvoke r0.<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>(r4);

     label4:
        r5 = virtualinvoke r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>(6);

        if r5 == null goto label5;

        virtualinvoke r0.<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>(r5);

     label5:
        $r7 = virtualinvoke r2.<android.content.res.TypedArray: java.lang.String getString(int)>(12);

        $i5 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(1, -1);

        $i4 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(2, -1);

        specialinvoke r0.<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)>($r7, $i5, $i4);

        i3 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        if i3 == 0 goto label6;

        f0 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(8, 0.0F);

        f1 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(9, 0.0F);

        $f3 = virtualinvoke r2.<android.content.res.TypedArray: float getFloat(int,float)>(10, 0.0F);

        virtualinvoke r0.<android.widget.TextView: void setShadowLayer(float,float,float,int)>($f3, f0, f1, i3);

     label6:
        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 0);

        if $z0 == 0 goto label7;

        $r9 = new android.text.method.AllCapsTransformationMethod;

        $r8 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r9.<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>($r8);

        virtualinvoke r0.<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>($r9);

     label7:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void setTextColor(int)
    {
        android.widget.TextView r0;
        int i0;
        android.content.res.ColorStateList $r1;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>(i0);

        r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor> = $r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public void setTextColor(android.content.res.ColorStateList)
    {
        android.widget.TextView r0;
        android.content.res.ColorStateList r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.res.ColorStateList;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        r0.<android.widget.TextView: android.content.res.ColorStateList mTextColor> = r1;

        specialinvoke r0.<android.widget.TextView: void updateTextColors()>();

        return;
    }

    public void setTextIsSelectable(boolean)
    {
        android.widget.TextView r0;
        boolean z0, $z1;
        android.text.method.MovementMethod r1;
        java.lang.CharSequence r2;
        android.widget.TextView$BufferType r3;
        android.widget.Editor $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.TextView;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label2;

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r7 != null goto label2;

     label1:
        return;

     label2:
        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $z1 = $r4.<android.widget.Editor: boolean mTextIsSelectable>;

        if $z1 == z0 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5.<android.widget.Editor: boolean mTextIsSelectable> = z0;

        virtualinvoke r0.<android.widget.TextView: void setFocusableInTouchMode(boolean)>(z0);

        virtualinvoke r0.<android.widget.TextView: void setFocusable(boolean)>(z0);

        virtualinvoke r0.<android.widget.TextView: void setClickable(boolean)>(z0);

        virtualinvoke r0.<android.widget.TextView: void setLongClickable(boolean)>(z0);

        if z0 == 0 goto label5;

        r1 = staticinvoke <android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>();

     label3:
        virtualinvoke r0.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>(r1);

        r2 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        if z0 == 0 goto label6;

        r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;

     label4:
        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r2, r3);

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r6.<android.widget.Editor: void prepareCursorControllers()>();

        return;

     label5:
        r1 = null;

        goto label3;

     label6:
        r3 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType NORMAL>;

        goto label4;
    }

    public final void setTextKeepState(java.lang.CharSequence)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.widget.TextView$BufferType $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$BufferType mBufferType>;

        virtualinvoke r0.<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r2);

        return;
    }

    public final void setTextKeepState(java.lang.CharSequence, android.widget.TextView$BufferType)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1, $r3, $r4;
        android.widget.TextView$BufferType r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        android.text.Spannable $r5;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.widget.TextView$BufferType;

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        i1 = virtualinvoke r0.<android.widget.TextView: int getSelectionEnd()>();

        i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, r2);

        if i0 >= 0 goto label1;

        if i1 < 0 goto label2;

     label1:
        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r3 instanceof android.text.Spannable;

        if $z0 == 0 goto label2;

        $r4 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r5 = (android.text.Spannable) $r4;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int,int)>($r5, $i4, $i6);

     label2:
        return;
    }

    public void setTextLocale(java.util.Locale)
    {
        android.widget.TextView r0;
        java.util.Locale r1;
        android.text.TextPaint $r2;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextLocale(java.util.Locale)>(r1);

        return;
    }

    public void setTextScaleX(float)
    {
        android.widget.TextView r0;
        float f0, $f1;
        android.text.TextPaint $r1, $r2;
        byte $b0;
        android.text.Layout $r3;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r1.<android.text.TextPaint: float getTextScaleX()>();

        $b0 = f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.<android.widget.TextView: boolean mUserSetTextScaleX> = 1;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r2.<android.text.TextPaint: void setTextScaleX(float)>(f0);

        $r3 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setTextSize(float)
    {
        android.widget.TextView r0;
        float f0;

        r0 := @this: android.widget.TextView;

        f0 := @parameter0: float;

        virtualinvoke r0.<android.widget.TextView: void setTextSize(int,float)>(2, f0);

        return;
    }

    public void setTextSize(int, float)
    {
        android.widget.TextView r0;
        int i0;
        float f0, $f1;
        android.content.Context r1;
        android.content.res.Resources r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        r1 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        if r1 != null goto label2;

        r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

     label1:
        $r3 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(i0, f0, $r3);

        specialinvoke r0.<android.widget.TextView: void setRawTextSize(float)>($f1);

        return;

     label2:
        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        goto label1;
    }

    public final void setTransformationMethod(android.text.method.TransformationMethod)
    {
        android.widget.TextView r0;
        android.text.method.TransformationMethod r1, $r3, $r4, $r10;
        android.text.method.TransformationMethod2 r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.CharSequence $r5, $r6, $r7, $r8;
        android.text.Spannable $r9;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.method.TransformationMethod;

        $r3 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if r1 != $r3 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        if $r4 == null goto label3;

        $r7 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z6 = $r7 instanceof android.text.Spannable;

        if $z6 == 0 goto label3;

        $r8 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r9 = (android.text.Spannable) $r8;

        $r10 = r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation>;

        interfaceinvoke $r9.<android.text.Spannable: void removeSpan(java.lang.Object)>($r10);

     label3:
        r0.<android.widget.TextView: android.text.method.TransformationMethod mTransformation> = r1;

        $z1 = r1 instanceof android.text.method.TransformationMethod2;

        if $z1 == 0 goto label7;

        r2 = (android.text.method.TransformationMethod2) r1;

        $z3 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z3 != 0 goto label6;

        $r6 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z5 = $r6 instanceof android.text.Editable;

        if $z5 != 0 goto label6;

        z0 = 1;

     label4:
        r0.<android.widget.TextView: boolean mAllowTransformationLengthChange> = z0;

        $z4 = r0.<android.widget.TextView: boolean mAllowTransformationLengthChange>;

        interfaceinvoke r2.<android.text.method.TransformationMethod2: void setLengthChangesAllowed(boolean)>($z4);

     label5:
        $r5 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);

        $z2 = specialinvoke r0.<android.widget.TextView: boolean hasPasswordTransformationMethod()>();

        if $z2 == 0 goto label1;

        virtualinvoke r0.<android.widget.TextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

        return;

     label6:
        z0 = 0;

        goto label4;

     label7:
        r0.<android.widget.TextView: boolean mAllowTransformationLengthChange> = 0;

        goto label5;
    }

    public void setTypeface(android.graphics.Typeface)
    {
        android.widget.TextView r0;
        android.graphics.Typeface r1, $r3;
        android.text.TextPaint $r2, $r4;
        android.text.Layout $r6;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Typeface;

        $r2 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();

        if $r3 == r1 goto label1;

        $r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r4.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r1);

        $r6 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        if $r6 == null goto label1;

        specialinvoke r0.<android.widget.TextView: void nullLayouts()>();

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

     label1:
        return;
    }

    public void setTypeface(android.graphics.Typeface, int)
    {
        android.widget.TextView r0;
        android.graphics.Typeface r1, r2;
        int i0, i1, i2, i3, $i4, $i5;
        android.text.TextPaint r3, r4, $r5, $r6;
        boolean z0;
        float f0;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.Typeface;

        i0 := @parameter1: int;

        if i0 <= 0 goto label8;

        if r1 != null goto label5;

        r2 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>(i0);

     label1:
        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r2);

        if r2 == null goto label6;

        i1 = virtualinvoke r2.<android.graphics.Typeface: int getStyle()>();

     label2:
        $i4 = i1 ^ -1;

        i2 = i0 & $i4;

        r3 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        i3 = i2 & 1;

        z0 = 0;

        if i3 == 0 goto label3;

        z0 = 1;

     label3:
        virtualinvoke r3.<android.text.TextPaint: void setFakeBoldText(boolean)>(z0);

        r4 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        $i5 = i2 & 2;

        if $i5 == 0 goto label7;

        f0 = -0.25F;

     label4:
        virtualinvoke r4.<android.text.TextPaint: void setTextSkewX(float)>(f0);

        return;

     label5:
        r2 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>(r1, i0);

        goto label1;

     label6:
        i1 = 0;

        goto label2;

     label7:
        f0 = 0.0F;

        goto label4;

     label8:
        $r5 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r5.<android.text.TextPaint: void setFakeBoldText(boolean)>(0);

        $r6 = r0.<android.widget.TextView: android.text.TextPaint mTextPaint>;

        virtualinvoke $r6.<android.text.TextPaint: void setTextSkewX(float)>(0.0F);

        virtualinvoke r0.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>(r1);

        return;
    }

    public final void setUndoManager(android.content.UndoManager, java.lang.String)
    {
        android.widget.TextView r0;
        android.content.UndoManager r1;
        java.lang.String r2;
        android.widget.Editor $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12;
        android.content.UndoOwner $r9;
        android.widget.Editor$UndoInputFilter $r10;
        java.lang.CharSequence $r13, $r14, $r17;
        boolean $z0;
        android.text.Editable $r15;
        android.text.InputFilter[] $r16;
        android.widget.TextView$BufferType $r18;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.content.UndoManager;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label3;

        specialinvoke r0.<android.widget.TextView: void createEditorIfNeeded()>();

        $r7 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r7.<android.widget.Editor: android.content.UndoManager mUndoManager> = r1;

        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r9 = virtualinvoke r1.<android.content.UndoManager: android.content.UndoOwner getOwner(java.lang.String,java.lang.Object)>(r2, r0);

        $r8.<android.widget.Editor: android.content.UndoOwner mUndoOwner> = $r9;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r10 = new android.widget.Editor$UndoInputFilter;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        specialinvoke $r10.<android.widget.Editor$UndoInputFilter: void <init>(android.widget.Editor)>($r11);

        $r12.<android.widget.Editor: android.text.InputFilter mUndoInputFilter> = $r10;

        $r13 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z0 = $r13 instanceof android.text.Editable;

        if $z0 != 0 goto label1;

        $r17 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r18 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType EDITABLE>;

        virtualinvoke r0.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>($r17, $r18);

     label1:
        $r14 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $r15 = (android.text.Editable) $r14;

        $r16 = r0.<android.widget.TextView: android.text.InputFilter[] mFilters>;

        specialinvoke r0.<android.widget.TextView: void setFilters(android.text.Editable,android.text.InputFilter[])>($r15, $r16);

     label2:
        return;

     label3:
        $r3 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r4.<android.widget.Editor: android.content.UndoManager mUndoManager> = null;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r5.<android.widget.Editor: android.content.UndoOwner mUndoOwner> = null;

        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r6.<android.widget.Editor: android.text.InputFilter mUndoInputFilter> = null;

        return;
    }

    public void setWidth(int)
    {
        android.widget.TextView r0;
        int i0;

        r0 := @this: android.widget.TextView;

        i0 := @parameter0: int;

        r0.<android.widget.TextView: int mMinWidth> = i0;

        r0.<android.widget.TextView: int mMaxWidth> = i0;

        r0.<android.widget.TextView: int mMinWidthMode> = 2;

        r0.<android.widget.TextView: int mMaxWidthMode> = 2;

        virtualinvoke r0.<android.widget.TextView: void requestLayout()>();

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        return;
    }

    void spanChange(android.text.Spanned, java.lang.Object, int, int, int, int)
    {
        android.widget.TextView r0;
        android.text.Spanned r1;
        java.lang.Object r2, r4, $r7;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.widget.Editor$InputMethodState r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.widget.Editor $r5, $r6, $r8, $r9, $r11, $r12, $r17, $r18, $r20, $r21, $r22, $r23;
        android.widget.SpellChecker $r10, $r13;
        android.text.style.SpellCheckSpan $r14;
        android.view.inputmethod.ExtractedTextRequest $r15;
        android.text.Layout $r16, $r19;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.text.Spanned;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 = -1;

        i5 = -1;

        $r5 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r5 != null goto label23;

        r3 = null;

     label01:
        r4 = <android.text.Selection: java.lang.Object SELECTION_END>;

        z0 = 0;

        if r2 != r4 goto label03;

        z0 = 1;

        i5 = i1;

        if i0 >= 0 goto label02;

        if i1 < 0 goto label03;

     label02:
        $i16 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>($i16, i0, i1);

        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

        $r23 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r23 == null goto label03;

        $r22 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r22.<android.widget.Editor: void makeBlink()>();

     label03:
        $r7 = <android.text.Selection: java.lang.Object SELECTION_START>;

        if r2 != $r7 goto label05;

        z0 = 1;

        i4 = i1;

        if i0 >= 0 goto label04;

        if i1 < 0 goto label05;

     label04:
        $i17 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        specialinvoke r0.<android.widget.TextView: void invalidateCursor(int,int,int)>($i17, i0, i1);

     label05:
        if z0 == 0 goto label09;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $r20 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r20 == null goto label06;

        $z8 = virtualinvoke r0.<android.widget.TextView: boolean isFocused()>();

        if $z8 != 0 goto label06;

        $r21 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r21.<android.widget.Editor: boolean mSelectionMoved> = 1;

     label06:
        $i14 = interfaceinvoke r1.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r2);

        $i15 = 512 & $i14;

        if $i15 != 0 goto label09;

        if i4 >= 0 goto label07;

        i4 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

     label07:
        if i5 >= 0 goto label08;

        i5 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

     label08:
        virtualinvoke r0.<android.widget.TextView: void onSelectionChanged(int,int)>(i4, i5);

     label09:
        $z1 = r2 instanceof android.text.style.UpdateAppearance;

        if $z1 != 0 goto label10;

        $z6 = r2 instanceof android.text.style.ParagraphStyle;

        if $z6 != 0 goto label10;

        $z7 = r2 instanceof android.text.style.CharacterStyle;

        if $z7 == 0 goto label14;

     label10:
        if r3 == null goto label11;

        $i13 = r3.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i13 != 0 goto label24;

     label11:
        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

     label12:
        $r8 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r8 == null goto label14;

        if i0 < 0 goto label13;

        $r17 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r19 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r17.<android.widget.Editor: void invalidateTextDisplayList(android.text.Layout,int,int)>($r19, i0, i2);

     label13:
        if i1 < 0 goto label14;

        $r18 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r16 = r0.<android.widget.TextView: android.text.Layout mLayout>;

        virtualinvoke $r18.<android.widget.Editor: void invalidateTextDisplayList(android.text.Layout,int,int)>($r16, i1, i3);

     label14:
        $z2 = staticinvoke <android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>(r1, r2);

        if $z2 == 0 goto label17;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        if r3 == null goto label15;

        $z5 = staticinvoke <android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>(r1, r2);

        if $z5 == 0 goto label15;

        r3.<android.widget.Editor$InputMethodState: boolean mSelectionModeChanged> = 1;

     label15:
        $i11 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        if $i11 < 0 goto label17;

        if r3 == null goto label16;

        $i12 = r3.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i12 != 0 goto label25;

     label16:
        virtualinvoke r0.<android.widget.TextView: void invalidateCursor()>();

     label17:
        $z3 = r2 instanceof android.text.ParcelableSpan;

        if $z3 == 0 goto label21;

        if r3 == null goto label21;

        $r15 = r3.<android.widget.Editor$InputMethodState: android.view.inputmethod.ExtractedTextRequest mExtractedTextRequest>;

        if $r15 == null goto label21;

        $i6 = r3.<android.widget.Editor$InputMethodState: int mBatchEditNesting>;

        if $i6 == 0 goto label26;

        if i0 < 0 goto label19;

        $i10 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i10 <= i0 goto label18;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i0;

     label18:
        $i9 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i9 <= i2 goto label19;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i2;

     label19:
        if i1 < 0 goto label21;

        $i8 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i8 <= i1 goto label20;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i1;

     label20:
        $i7 = r3.<android.widget.Editor$InputMethodState: int mChangedStart>;

        if $i7 <= i3 goto label21;

        r3.<android.widget.Editor$InputMethodState: int mChangedStart> = i3;

     label21:
        $r9 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r9 == null goto label22;

        $r11 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r10 = $r11.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        if $r10 == null goto label22;

        if i1 >= 0 goto label22;

        $z4 = r2 instanceof android.text.style.SpellCheckSpan;

        if $z4 == 0 goto label22;

        $r12 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        $r13 = $r12.<android.widget.Editor: android.widget.SpellChecker mSpellChecker>;

        $r14 = (android.text.style.SpellCheckSpan) r2;

        virtualinvoke $r13.<android.widget.SpellChecker: void onSpellCheckSpanRemoved(android.text.style.SpellCheckSpan)>($r14);

     label22:
        return;

     label23:
        $r6 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        r3 = $r6.<android.widget.Editor: android.widget.Editor$InputMethodState mInputMethodState>;

        goto label01;

     label24:
        r3.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

        goto label12;

     label25:
        r3.<android.widget.Editor$InputMethodState: boolean mCursorChanged> = 1;

        goto label17;

     label26:
        r3.<android.widget.Editor$InputMethodState: boolean mContentChanged> = 1;

        goto label21;
    }

    protected void stopSelectionActionMode()
    {
        android.widget.TextView r0;
        android.widget.Editor $r1;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r1.<android.widget.Editor: void stopSelectionActionMode()>();

        return;
    }

    boolean textCanBeSelected()
    {
        android.widget.TextView r0;
        android.text.method.MovementMethod $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.CharSequence $r3;

        r0 := @this: android.widget.TextView;

        $r1 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TextView: android.text.method.MovementMethod mMovement>;

        $z0 = interfaceinvoke $r2.<android.text.method.MovementMethod: boolean canSelectArbitrarily()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean isTextEditable()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r0.<android.widget.TextView: boolean isTextSelectable()>();

        if $z2 == 0 goto label1;

        $r3 = r0.<android.widget.TextView: java.lang.CharSequence mText>;

        $z3 = $r3 instanceof android.text.Spannable;

        if $z3 == 0 goto label1;

        $z4 = virtualinvoke r0.<android.widget.TextView: boolean isEnabled()>();

        if $z4 == 0 goto label1;

     label3:
        return 1;
    }

    void updateAfterEdit()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2;
        android.widget.Editor $r1, $r2;

        r0 := @this: android.widget.TextView;

        virtualinvoke r0.<android.widget.TextView: void invalidate()>();

        i0 = virtualinvoke r0.<android.widget.TextView: int getSelectionStart()>();

        if i0 >= 0 goto label1;

        $i1 = r0.<android.widget.TextView: int mGravity>;

        $i2 = 112 & $i1;

        if $i2 != 80 goto label2;

     label1:
        specialinvoke r0.<android.widget.TextView: void registerForPreDraw()>();

     label2:
        specialinvoke r0.<android.widget.TextView: void checkForResize()>();

        if i0 < 0 goto label4;

        r0.<android.widget.TextView: boolean mHighlightPathBogus> = 1;

        $r1 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        if $r1 == null goto label3;

        $r2 = r0.<android.widget.TextView: android.widget.Editor mEditor>;

        virtualinvoke $r2.<android.widget.Editor: void makeBlink()>();

     label3:
        virtualinvoke r0.<android.widget.TextView: boolean bringPointIntoView(int)>(i0);

     label4:
        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.TextView r0;
        android.graphics.drawable.Drawable r1, $r4, $r6, $r8, $r10, $r12, $r14;
        boolean z0;
        android.widget.TextView$Drawables $r2, $r3, $r5, $r7, $r9, $r11, $r13;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        z0 = specialinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if z0 != 0 goto label3;

        $r2 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        if $r2 == null goto label3;

        $r3 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r4 = $r3.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableLeft>;

        if r1 == $r4 goto label1;

        $r5 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r6 = $r5.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableTop>;

        if r1 == $r6 goto label1;

        $r7 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r8 = $r7.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableRight>;

        if r1 == $r8 goto label1;

        $r9 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r10 = $r9.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableBottom>;

        if r1 == $r10 goto label1;

        $r11 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r12 = $r11.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableStart>;

        if r1 == $r12 goto label1;

        $r13 = r0.<android.widget.TextView: android.widget.TextView$Drawables mDrawables>;

        $r14 = $r13.<android.widget.TextView$Drawables: android.graphics.drawable.Drawable mDrawableEnd>;

        if r1 != $r14 goto label2;

     label1:
        return 1;

     label2:
        return 0;

     label3:
        return z0;
    }

    protected void viewClicked(android.view.inputmethod.InputMethodManager)
    {
        android.widget.TextView r0;
        android.view.inputmethod.InputMethodManager r1;

        r0 := @this: android.widget.TextView;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: void viewClicked(android.view.View)>(r0);

     label1:
        return;
    }

    int viewportToContentHorizontalOffset()
    {
        android.widget.TextView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.TextView;

        $i0 = virtualinvoke r0.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i1 = r0.<android.widget.TextView: int mScrollX>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    int viewportToContentVerticalOffset()
    {
        android.widget.TextView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.TextView;

        $i1 = virtualinvoke r0.<android.widget.TextView: int getExtendedPaddingTop()>();

        $i2 = r0.<android.widget.TextView: int mScrollY>;

        i0 = $i1 - $i2;

        $i3 = r0.<android.widget.TextView: int mGravity>;

        $i4 = 112 & $i3;

        if $i4 == 48 goto label1;

        $i5 = virtualinvoke r0.<android.widget.TextView: int getVerticalOffset(boolean)>(0);

        i0 = i0 + $i5;

     label1:
        return i0;
    }
}
