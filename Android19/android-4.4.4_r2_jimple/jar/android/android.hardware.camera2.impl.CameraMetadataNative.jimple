public class android.hardware.camera2.impl.CameraMetadataNative extends android.hardware.camera2.CameraMetadata implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final int NATIVE_JPEG_FORMAT;
    public static final int NUM_TYPES;
    private static final java.lang.String TAG;
    public static final int TYPE_BYTE;
    public static final int TYPE_DOUBLE;
    public static final int TYPE_FLOAT;
    public static final int TYPE_INT32;
    public static final int TYPE_INT64;
    public static final int TYPE_RATIONAL;
    private static final boolean VERBOSE;
    private static final java.util.HashMap sEnumValues;
    static java.util.HashMap sMarshalerMap;
    private long mMetadataPtr;

    static void <clinit>()
    {
        boolean $z0, $z1, $z2;
        android.hardware.camera2.impl.CameraMetadataNative$1 $r0;
        java.util.HashMap $r1, $r2;
        android.hardware.camera2.impl.MetadataMarshalRect $r3;
        android.hardware.camera2.impl.MetadataMarshalSize $r4;
        android.hardware.camera2.impl.MetadataMarshalString $r5;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_RATIONAL> = 5;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_INT64> = 3;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_INT32> = 1;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_FLOAT> = 2;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_DOUBLE> = 4;

        <android.hardware.camera2.impl.CameraMetadataNative: int TYPE_BYTE> = 0;

        <android.hardware.camera2.impl.CameraMetadataNative: java.lang.String TAG> = "CameraMetadataJV";

        <android.hardware.camera2.impl.CameraMetadataNative: int NUM_TYPES> = 6;

        <android.hardware.camera2.impl.CameraMetadataNative: int NATIVE_JPEG_FORMAT> = 33;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CameraMetadataJV", 2);

        <android.hardware.camera2.impl.CameraMetadataNative: boolean VERBOSE> = $z0;

        $r0 = new android.hardware.camera2.impl.CameraMetadataNative$1;

        specialinvoke $r0.<android.hardware.camera2.impl.CameraMetadataNative$1: void <init>()>();

        <android.hardware.camera2.impl.CameraMetadataNative: android.os.Parcelable$Creator CREATOR> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sEnumValues> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sMarshalerMap> = $r2;

        staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: void nativeClassInit()>();

        $z1 = <android.hardware.camera2.impl.CameraMetadataNative: boolean VERBOSE>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraMetadataJV", "Shall register metadata marshalers");

     label1:
        $r3 = new android.hardware.camera2.impl.MetadataMarshalRect;

        specialinvoke $r3.<android.hardware.camera2.impl.MetadataMarshalRect: void <init>()>();

        staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: void registerMarshaler(android.hardware.camera2.impl.MetadataMarshalClass)>($r3);

        $r4 = new android.hardware.camera2.impl.MetadataMarshalSize;

        specialinvoke $r4.<android.hardware.camera2.impl.MetadataMarshalSize: void <init>()>();

        staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: void registerMarshaler(android.hardware.camera2.impl.MetadataMarshalClass)>($r4);

        $r5 = new android.hardware.camera2.impl.MetadataMarshalString;

        specialinvoke $r5.<android.hardware.camera2.impl.MetadataMarshalString: void <init>()>();

        staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: void registerMarshaler(android.hardware.camera2.impl.MetadataMarshalClass)>($r5);

        $z2 = <android.hardware.camera2.impl.CameraMetadataNative: boolean VERBOSE>;

        if $z2 == 0 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraMetadataJV", "Registered metadata marshalers");

     label2:
        return;
    }

    public void <init>()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        long $l0, $l1;
        byte $b2;
        java.lang.OutOfMemoryError $r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<android.hardware.camera2.CameraMetadata: void <init>()>();

        $l0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: long nativeAllocate()>();

        r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr> = $l0;

        $l1 = r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r1 = new java.lang.OutOfMemoryError;

        specialinvoke $r1.<java.lang.OutOfMemoryError: void <init>(java.lang.String)>("Failed to allocate native CameraMetadata");

        throw $r1;

     label1:
        return;
    }

    public void <init>(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0, r1;
        long $l0, $l1;
        byte $b2;
        java.lang.OutOfMemoryError $r2;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<android.hardware.camera2.CameraMetadata: void <init>()>();

        $l0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: long nativeAllocateCopy(android.hardware.camera2.impl.CameraMetadataNative)>(r1);

        r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr> = $l0;

        $l1 = r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r2 = new java.lang.OutOfMemoryError;

        specialinvoke $r2.<java.lang.OutOfMemoryError: void <init>(java.lang.String)>("Failed to allocate native CameraMetadata");

        throw $r2;

     label1:
        return;
    }

    private void close()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeClose()>();

        r0.<android.hardware.camera2.impl.CameraMetadataNative: long mMetadataPtr> = 0L;

        return;
    }

    private android.graphics.Rect[] fixFaceRectangles()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.graphics.Rect[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.hardware.camera2.CameraMetadata$Key $r3;
        java.lang.Object $r4;
        android.graphics.Rect $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r3 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CameraMetadata$Key STATISTICS_FACE_RECTANGLES>;

        $r4 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraMetadata$Key)>($r3);

        r1 = (android.graphics.Rect[]) $r4;

        if r1 != null goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        $i1 = lengthof r1;

        r2 = newarray (android.graphics.Rect)[$i1];

        i0 = 0;

     label3:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label1;

        $r5 = new android.graphics.Rect;

        $r6 = r1[i0];

        $i10 = $r6.<android.graphics.Rect: int left>;

        $r7 = r1[i0];

        $i8 = $r7.<android.graphics.Rect: int top>;

        $r8 = r1[i0];

        $i4 = $r8.<android.graphics.Rect: int right>;

        $r9 = r1[i0];

        $i3 = $r9.<android.graphics.Rect: int left>;

        $i9 = $i4 - $i3;

        $r10 = r1[i0];

        $i7 = $r10.<android.graphics.Rect: int bottom>;

        $r11 = r1[i0];

        $i5 = $r11.<android.graphics.Rect: int top>;

        $i6 = $i7 - $i5;

        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>($i10, $i8, $i9, $i6);

        r2[i0] = $r5;

        i0 = i0 + 1;

        goto label3;
    }

    private int[] getAvailableFormats()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int[] r1;
        int i0, $i1, $i2;
        android.hardware.camera2.CameraMetadata$Key $r2;
        java.lang.Object $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraMetadata$Key SCALER_AVAILABLE_FORMATS>;

        $r3 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraMetadata$Key)>($r2);

        r1 = (int[]) $r3;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $i2 = r1[i0];

        if $i2 != 33 goto label2;

        r1[i0] = 256;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return r1;
    }

    private java.lang.Object getBase(android.hardware.camera2.CameraMetadata$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraMetadata$Key r1;
        int i0, i1;
        byte[] r2;
        java.nio.ByteBuffer $r3, $r5;
        java.nio.ByteOrder $r4;
        java.lang.Class $r6;
        java.lang.Object $r7;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraMetadata$Key;

        i0 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: int getTag()>();

        r2 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: byte[] readValues(int)>(i0);

        if r2 != null goto label1;

        return null;

     label1:
        i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int getNativeType(int)>(i0);

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        $r4 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r5 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r4);

        $r6 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: java.lang.Class getType()>();

        $r7 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object unpackSingle(java.nio.ByteBuffer,java.lang.Class,int)>($r5, $r6, i1);

        return $r7;
    }

    private static java.lang.Enum getEnumFromValue(java.lang.Class, int)
    {
        java.lang.Class r0;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        boolean z0;
        int[] r1;
        java.lang.Enum[] r2;
        java.lang.Object[] r3, $r6;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        java.lang.Integer $r7;
        java.lang.Boolean $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.String $r10;
        java.lang.Enum $r11;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        z0 = 1;

        $r4 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sEnumValues>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (int[]) $r5;

        if r1 == null goto label6;

        i1 = -1;

        i2 = 0;

     label1:
        $i4 = lengthof r1;

        if i2 >= $i4 goto label2;

        $i5 = r1[i2];

        if $i5 != i0 goto label5;

        i1 = i2;

     label2:
        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        r2 = (java.lang.Enum[]) $r6;

        if i1 < 0 goto label3;

        $i3 = lengthof r2;

        if i1 < $i3 goto label8;

     label3:
        r3 = newarray (java.lang.Object)[3];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3[0] = $r7;

        i6 = (int) z0;

        r3[i6] = r0;

        if r1 == null goto label7;

     label4:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r3[2] = $r8;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Argument \'value\' (%d) was not a valid enum value for type %s (registered? %b)", r3);

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        i1 = i0;

        goto label2;

     label7:
        z0 = 0;

        goto label4;

     label8:
        $r11 = r2[i1];

        return $r11;
    }

    private static int getEnumValue(java.lang.Enum)
    {
        java.lang.Enum r0;
        int[] r1;
        int i0;
        java.util.HashMap $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.Enum;

        $r2 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sEnumValues>;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (int[]) $r4;

        i0 = virtualinvoke r0.<java.lang.Enum: int ordinal()>();

        if r1 == null goto label1;

        i0 = r1[i0];

     label1:
        return i0;
    }

    private static java.lang.Class getExpectedType(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.lang.Class $r5, $r6, $r7, $r8, $r9;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type, can\'t map to Java type ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        $r9 = <java.lang.Byte: java.lang.Class TYPE>;

        return $r9;

     label3:
        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        return $r8;

     label4:
        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        return $r7;

     label5:
        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        return $r6;

     label6:
        $r5 = <java.lang.Double: java.lang.Class TYPE>;

        return $r5;

     label7:
        return class "android/hardware/camera2/Rational";
    }

    private android.hardware.camera2.Face[] getFaces()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        java.lang.Integer r1, $r32, $r34, $r36, $r38, $r39;
        byte[] r2;
        android.graphics.Rect[] r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i37, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50, $i52, $i54;
        int[] r4, r5;
        java.util.ArrayList r6, $r25;
        android.hardware.camera2.Face[] r7, $r19, $r40, $r45;
        android.graphics.Point r8, r9, r10, $r26, $r27, $r29;
        java.lang.Object[] r11, r12;
        java.lang.Object $r13, $r15, $r17, $r21, $r22;
        android.hardware.camera2.CameraMetadata$Key $r14, $r16, $r18, $r20, $r23;
        byte $b15, $b16, $b34, $b35, $b36, $b38;
        android.hardware.camera2.Face $r28, $r30;
        android.graphics.Rect $r31, $r33;
        java.lang.String $r35, $r37, $r41;
        java.lang.StringBuilder $r42, $r43, $r44;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $r14 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CameraMetadata$Key STATISTICS_FACE_DETECT_MODE>;

        $r13 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraMetadata$Key)>($r14);

        r1 = (java.lang.Integer) $r13;

        if r1 != null goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "Face detect mode metadata is null, assuming the mode is SIMPLE");

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

     label01:
        $r16 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CameraMetadata$Key STATISTICS_FACE_SCORES>;

        $r15 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraMetadata$Key)>($r16);

        r2 = (byte[]) $r15;

        $r18 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CameraMetadata$Key STATISTICS_FACE_RECTANGLES>;

        $r17 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraMetadata$Key)>($r18);

        r3 = (android.graphics.Rect[]) $r17;

        if r2 == null goto label02;

        if r3 != null goto label05;

     label02:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "Expect face scores and rectangles to be non-null");

        $r19 = newarray (android.hardware.camera2.Face)[0];

        return $r19;

     label03:
        $i5 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i5 != 0 goto label04;

        $r45 = newarray (android.hardware.camera2.Face)[0];

        return $r45;

     label04:
        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i4 == 1 goto label01;

        $i54 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i54 == 2 goto label01;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown face detect mode: ");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", $r41);

        $r40 = newarray (android.hardware.camera2.Face)[0];

        return $r40;

     label05:
        $i7 = lengthof r2;

        $i6 = lengthof r3;

        if $i7 == $i6 goto label06;

        r12 = newarray (java.lang.Object)[2];

        $i45 = lengthof r2;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i45);

        r12[0] = $r39;

        $i52 = lengthof r3;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i52);

        r12[1] = $r38;

        $r37 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Face score size(%d) doesn match face rectangle size(%d)!", r12);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", $r37);

     label06:
        $i10 = lengthof r2;

        $i9 = lengthof r3;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i9);

        $r20 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CameraMetadata$Key STATISTICS_FACE_IDS>;

        $r22 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraMetadata$Key)>($r20);

        r4 = (int[]) $r22;

        $r23 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CameraMetadata$Key STATISTICS_FACE_LANDMARKS>;

        $r21 = virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraMetadata$Key)>($r23);

        r5 = (int[]) $r21;

        $i11 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i11 != 2 goto label08;

        if r4 == null goto label07;

        if r5 != null goto label11;

     label07:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", "Expect face ids and landmarks to be non-null for FULL mode,fallback to SIMPLE mode");

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

     label08:
        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r6 = $r25;

        $i13 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i13 != 1 goto label14;

        i2 = 0;

     label09:
        if i2 >= i0 goto label17;

        $b34 = r2[i2];

        if $b34 > 100 goto label10;

        $b35 = r2[i2];

        if $b35 < 1 goto label10;

        $r30 = new android.hardware.camera2.Face;

        $r33 = r3[i2];

        $b36 = r2[i2];

        specialinvoke $r30.<android.hardware.camera2.Face: void <init>(android.graphics.Rect,int)>($r33, $b36);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);

     label10:
        i2 = i2 + 1;

        goto label09;

     label11:
        $i40 = lengthof r4;

        if $i40 != i0 goto label12;

        $i44 = lengthof r5;

        $i46 = i0 * 6;

        if $i44 == $i46 goto label13;

     label12:
        r11 = newarray (java.lang.Object)[3];

        $i39 = lengthof r4;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i39);

        r11[0] = $r32;

        $i43 = lengthof r5;

        $i42 = 6 * $i43;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i42);

        r11[1] = $r36;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r11[2] = $r34;

        $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Face id size(%d), or face landmark size(%d) don\'tmatch face number(%d)!", r11);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CameraMetadataJV", $r35);

     label13:
        i3 = lengthof r4;

        $i50 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i3);

        $i47 = lengthof r5;

        $i48 = $i47 / 6;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i50, $i48);

        goto label08;

     label14:
        i1 = 0;

     label15:
        if i1 >= i0 goto label17;

        $b16 = r2[i1];

        if $b16 > 100 goto label16;

        $b15 = r2[i1];

        if $b15 < 1 goto label16;

        $i14 = r4[i1];

        if $i14 < 0 goto label16;

        $r26 = new android.graphics.Point;

        $i20 = i1 * 6;

        $i23 = r5[$i20];

        $i19 = i1 * 6;

        $i18 = 1 + $i19;

        $i17 = r5[$i18];

        specialinvoke $r26.<android.graphics.Point: void <init>(int,int)>($i23, $i17);

        r8 = $r26;

        $r27 = new android.graphics.Point;

        $i22 = i1 * 6;

        $i21 = 2 + $i22;

        $i24 = r5[$i21];

        $i27 = i1 * 6;

        $i26 = 3 + $i27;

        $i25 = r5[$i26];

        specialinvoke $r27.<android.graphics.Point: void <init>(int,int)>($i24, $i25);

        r9 = $r27;

        $r29 = new android.graphics.Point;

        $i31 = i1 * 6;

        $i32 = 4 + $i31;

        $i30 = r5[$i32];

        $i33 = i1 * 6;

        $i28 = 5 + $i33;

        $i29 = r5[$i28];

        specialinvoke $r29.<android.graphics.Point: void <init>(int,int)>($i30, $i29);

        r10 = $r29;

        $r28 = new android.hardware.camera2.Face;

        $r31 = r3[i1];

        $b38 = r2[i1];

        $i37 = r4[i1];

        specialinvoke $r28.<android.hardware.camera2.Face: void <init>(android.graphics.Rect,int,int,android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r31, $b38, $i37, r8, r9, r10);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

     label16:
        i1 = i1 + 1;

        goto label15;

     label17:
        $i12 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        r7 = newarray (android.hardware.camera2.Face)[$i12];

        virtualinvoke r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r7);

        return r7;
    }

    private static android.hardware.camera2.impl.MetadataMarshalClass getMarshaler(java.lang.Class, int)
    {
        java.lang.Class r0;
        int i0;
        android.hardware.camera2.impl.MetadataMarshalClass r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.UnsupportedOperationException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r2 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sMarshalerMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (android.hardware.camera2.impl.MetadataMarshalClass) $r3;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<android.hardware.camera2.impl.MetadataMarshalClass: boolean isNativeTypeSupported(int)>(i0);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be marshalled to/from a ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label1:
        return r1;
    }

    public static int getNativeType(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int nativeGetTypeFromTag(int)>(i0);

        return $i1;
    }

    private java.lang.Object getOverride(android.hardware.camera2.CameraMetadata$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraMetadata$Key r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        android.graphics.Rect[] $r5;
        android.hardware.camera2.Face[] $r6;
        int[] $r7;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraMetadata$Key;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraMetadata$Key SCALER_AVAILABLE_FORMATS>;

        $z0 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r7 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: int[] getAvailableFormats()>();

        return $r7;

     label1:
        $r3 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CameraMetadata$Key STATISTICS_FACES>;

        $z1 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.Face[] getFaces()>();

        return $r6;

     label2:
        $r4 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CameraMetadata$Key STATISTICS_FACE_RECTANGLES>;

        $z2 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label3;

        $r5 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: android.graphics.Rect[] fixFaceRectangles()>();

        return $r5;

     label3:
        return null;
    }

    public static int getTag(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int nativeGetTagFromKey(java.lang.String)>(r0);

        return $i0;
    }

    private static int getTypeSize(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type, can\'t get size ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return 1;

     label3:
        return 4;

     label4:
        return 8;
    }

    private native long nativeAllocate();

    private native long nativeAllocateCopy(android.hardware.camera2.impl.CameraMetadataNative) throws java.lang.NullPointerException;

    private static native void nativeClassInit();

    private synchronized native void nativeClose();

    private synchronized native int nativeGetEntryCount();

    private static native int nativeGetTagFromKey(java.lang.String) throws java.lang.IllegalArgumentException;

    private static native int nativeGetTypeFromTag(int) throws java.lang.IllegalArgumentException;

    private synchronized native boolean nativeIsEmpty();

    private synchronized native void nativeReadFromParcel(android.os.Parcel);

    private synchronized native byte[] nativeReadValues(int);

    private synchronized native void nativeSwap(android.hardware.camera2.impl.CameraMetadataNative) throws java.lang.NullPointerException;

    private synchronized native void nativeWriteToParcel(android.os.Parcel);

    private synchronized native void nativeWriteValues(int, byte[]);

    private static int packArray(java.lang.Object, java.nio.ByteBuffer, java.lang.Class, int, boolean)
    {
        java.lang.Object r0, $r4;
        java.nio.ByteBuffer r1;
        java.lang.Class r2, r3;
        int i0, i1, i2, i3, $i4;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.nio.ByteBuffer;

        r2 := @parameter2: java.lang.Class;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        i1 = 0;

        i2 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class getComponentType()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i3);

        $i4 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int packSingle(java.lang.Object,java.nio.ByteBuffer,java.lang.Class,int,boolean)>($r4, r1, r3, i0, z0);

        i1 = i1 + $i4;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i1;
    }

    private static int packClass(java.lang.Object, java.nio.ByteBuffer, java.lang.Class, int, boolean)
    {
        java.lang.Object r0;
        java.nio.ByteBuffer r1;
        java.lang.Class r2;
        int i0, $i1;
        boolean z0;
        android.hardware.camera2.impl.MetadataMarshalClass r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.nio.ByteBuffer;

        r2 := @parameter2: java.lang.Class;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.MetadataMarshalClass getMarshaler(java.lang.Class,int)>(r2, i0);

        if r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r2;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unknown Key type: %s", $r5);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $i1 = interfaceinvoke r3.<android.hardware.camera2.impl.MetadataMarshalClass: int marshal(java.lang.Object,java.nio.ByteBuffer,int,boolean)>(r0, r1, i0, z0);

        return $i1;
    }

    private static int packEnum(java.lang.Enum, java.nio.ByteBuffer, java.lang.Class, int, boolean)
    {
        java.lang.Enum r0;
        java.nio.ByteBuffer r1;
        java.lang.Class r2, $r4;
        int i0, $i1, $i2;
        boolean z0;
        java.lang.Integer $r3;

        r0 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.nio.ByteBuffer;

        r2 := @parameter2: java.lang.Class;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int getEnumValue(java.lang.Enum)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $i2 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int packSingleNative(java.lang.Object,java.nio.ByteBuffer,java.lang.Class,int,boolean)>($r3, r1, $r4, i0, z0);

        return $i2;
    }

    private static int packSingle(java.lang.Object, java.nio.ByteBuffer, java.lang.Class, int, boolean)
    {
        java.lang.Object r0;
        java.nio.ByteBuffer r1;
        java.lang.Class r2;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2, $z3;
        java.lang.Enum $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.nio.ByteBuffer;

        r2 := @parameter2: java.lang.Class;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $z1 = virtualinvoke r2.<java.lang.Class: boolean isPrimitive()>();

        if $z1 != 0 goto label1;

        if r2 != class "android/hardware/camera2/Rational" goto label2;

     label1:
        $i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int packSingleNative(java.lang.Object,java.nio.ByteBuffer,java.lang.Class,int,boolean)>(r0, r1, r2, i0, z0);

        return $i1;

     label2:
        $z2 = virtualinvoke r2.<java.lang.Class: boolean isEnum()>();

        if $z2 == 0 goto label3;

        $r3 = (java.lang.Enum) r0;

        $i4 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int packEnum(java.lang.Enum,java.nio.ByteBuffer,java.lang.Class,int,boolean)>($r3, r1, r2, i0, z0);

        return $i4;

     label3:
        $z3 = virtualinvoke r2.<java.lang.Class: boolean isArray()>();

        if $z3 == 0 goto label4;

        $i3 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int packArray(java.lang.Object,java.nio.ByteBuffer,java.lang.Class,int,boolean)>(r0, r1, r2, i0, z0);

        return $i3;

     label4:
        $i2 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int packClass(java.lang.Object,java.nio.ByteBuffer,java.lang.Class,int,boolean)>(r0, r1, r2, i0, z0);

        return $i2;
    }

    private static int packSingleNative(java.lang.Object, java.nio.ByteBuffer, java.lang.Class, int, boolean)
    {
        java.lang.Object r0;
        java.nio.ByteBuffer r1;
        java.lang.Class r2, $r4, $r23, $r24, $r28;
        int i0, $i1, $i2, $i3, $i5, $i8;
        boolean z0, z1, $z2;
        android.hardware.camera2.Rational r3;
        double $d0;
        java.lang.Double $r7;
        java.lang.Long $r8;
        long $l4;
        float $f0;
        java.lang.Float $r11;
        java.lang.Integer $r12, $r26;
        java.lang.UnsupportedOperationException $r16;
        java.lang.Byte $r17;
        byte $b6, $b7, $b9;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r25;
        java.lang.String $r22;
        java.lang.Boolean $r27;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.nio.ByteBuffer;

        r2 := @parameter2: java.lang.Class;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        if z0 != 0 goto label03;

        if i0 != 0 goto label05;

        $r28 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r2 != $r28 goto label05;

        $r27 = (java.lang.Boolean) r0;

        $z2 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label04;

        z1 = 1;

     label01:
        $b9 = (byte) z1;

        r0 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b9);

     label02:
        if i0 != 0 goto label07;

        $r17 = (java.lang.Byte) r0;

        $b6 = virtualinvoke $r17.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

     label03:
        $i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int getTypeSize(int)>(i0);

        return $i1;

     label04:
        z1 = 0;

        goto label01;

     label05:
        if i0 != 0 goto label06;

        $r23 = <java.lang.Integer: java.lang.Class TYPE>;

        if r2 != $r23 goto label06;

        $r26 = (java.lang.Integer) r0;

        $i8 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        $b7 = (byte) $i8;

        r0 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b7);

        goto label02;

     label06:
        $r4 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Class getExpectedType(int)>(i0);

        if r2 == $r4 goto label02;

        $r16 = new java.lang.UnsupportedOperationException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to pack a type of ");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but we expected the type to be ");

        $r24 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Class getExpectedType(int)>(i0);

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r22);

        throw $r16;

     label07:
        if i0 != 1 goto label08;

        $r12 = (java.lang.Integer) r0;

        $i5 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i5);

        goto label03;

     label08:
        if i0 != 2 goto label09;

        $r11 = (java.lang.Float) r0;

        $f0 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

        goto label03;

     label09:
        if i0 != 3 goto label10;

        $r8 = (java.lang.Long) r0;

        $l4 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l4);

        goto label03;

     label10:
        if i0 != 4 goto label11;

        $r7 = (java.lang.Double) r0;

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d0);

        goto label03;

     label11:
        if i0 != 5 goto label03;

        r3 = (android.hardware.camera2.Rational) r0;

        $i2 = virtualinvoke r3.<android.hardware.camera2.Rational: int getNumerator()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i2);

        $i3 = virtualinvoke r3.<android.hardware.camera2.Rational: int getDenominator()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i3);

        goto label03;
    }

    public static void registerEnumValues(java.lang.Class, int[])
    {
        java.lang.Class r0;
        int[] r1;
        java.lang.Object[] $r2;
        java.lang.Enum[] $r3;
        int $i0, $i1, $i3;
        boolean $z0;
        java.util.HashMap $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r13, $r14, $r15, $r17;
        java.lang.String $r10, $r16;
        java.lang.IllegalArgumentException $r12;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: int[];

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r3 = (java.lang.Enum[]) $r2;

        $i1 = lengthof $r3;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected values array to be the same size as the enumTypes values ");

        $i3 = lengthof r1;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for type ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label1:
        $z0 = <android.hardware.camera2.impl.CameraMetadataNative: boolean VERBOSE>;

        if $z0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registered enum values for type ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraMetadataJV", $r10);

     label2:
        $r4 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sEnumValues>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    private static void registerMarshaler(android.hardware.camera2.impl.MetadataMarshalClass)
    {
        android.hardware.camera2.impl.MetadataMarshalClass r0;
        java.util.HashMap $r1;
        java.lang.Class $r2;

        r0 := @parameter0: android.hardware.camera2.impl.MetadataMarshalClass;

        $r1 = <android.hardware.camera2.impl.CameraMetadataNative: java.util.HashMap sMarshalerMap>;

        $r2 = interfaceinvoke r0.<android.hardware.camera2.impl.MetadataMarshalClass: java.lang.Class getMarshalingClass()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r0);

        return;
    }

    private boolean setAvailableFormats(int[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int[] r1, r2;
        int i0, $i1, $i2, $i3, $i4;
        android.hardware.camera2.CameraMetadata$Key $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: int[];

        if r1 != null goto label1;

        return 0;

     label1:
        $i1 = lengthof r1;

        r2 = newarray (int)[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label4;

        $i3 = r1[i0];

        r2[i0] = $i3;

        $i4 = r1[i0];

        if $i4 != 256 goto label3;

        r2[i0] = 33;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r3 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraMetadata$Key SCALER_AVAILABLE_FORMATS>;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.CameraMetadata$Key,java.lang.Object)>($r3, r2);

        return 1;
    }

    private void setBase(android.hardware.camera2.CameraMetadata$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraMetadata$Key r1;
        java.lang.Object r2;
        int i0, i1, $i2;
        byte[] r3;
        java.lang.Class $r4, $r8;
        java.nio.ByteBuffer $r5, $r7;
        java.nio.ByteOrder $r6;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraMetadata$Key;

        r2 := @parameter1: java.lang.Object;

        i0 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: int getTag()>();

        if r2 != null goto label1;

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void writeValues(int,byte[])>(i0, null);

        return;

     label1:
        i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int getNativeType(int)>(i0);

        $r4 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: java.lang.Class getType()>();

        $i2 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int packSingle(java.lang.Object,java.nio.ByteBuffer,java.lang.Class,int,boolean)>(r2, null, $r4, i1, 1);

        r3 = newarray (byte)[$i2];

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r7 = virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        $r8 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: java.lang.Class getType()>();

        staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int packSingle(java.lang.Object,java.nio.ByteBuffer,java.lang.Class,int,boolean)>(r2, $r7, $r8, i1, 0);

        virtualinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void writeValues(int,byte[])>(i0, r3);

        return;
    }

    private boolean setOverride(android.hardware.camera2.CameraMetadata$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraMetadata$Key r1, $r3;
        java.lang.Object r2;
        boolean $z0, $z1;
        int[] $r4, $r5;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraMetadata$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraMetadata$Key SCALER_AVAILABLE_FORMATS>;

        $z0 = virtualinvoke r1.<android.hardware.camera2.CameraMetadata$Key: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = (int[]) r2;

        $r5 = (int[]) $r4;

        $z1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean setAvailableFormats(int[])>($r5);

        return $z1;

     label1:
        return 0;
    }

    private static java.lang.Object unpackArray(java.nio.ByteBuffer, java.lang.Class, int)
    {
        java.nio.ByteBuffer r0;
        java.lang.Class r1, r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8;
        android.hardware.camera2.impl.MetadataMarshalClass r3;
        java.util.ArrayList r4, $r7;
        java.lang.Object r5, $r8, $r15, $r19;
        java.lang.Object[] r6, $r9, $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16;
        java.lang.String $r17, $r22;
        boolean $z0;
        java.lang.Integer $r18, $r20, $r21;

        r0 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.lang.Class;

        i0 := @parameter2: int;

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        i1 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int getTypeSize(int)>(i0);

        r3 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.MetadataMarshalClass getMarshaler(java.lang.Class,int)>(r2, i0);

        if r3 == null goto label1;

        i1 = interfaceinvoke r3.<android.hardware.camera2.impl.MetadataMarshalClass: int getNativeSize(int)>(i0);

     label1:
        if i1 == -1 goto label4;

        i3 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        i4 = i3 / i1;

        $z0 = <android.hardware.camera2.impl.CameraMetadataNative: boolean VERBOSE>;

        if $z0 == 0 goto label2;

        r6 = newarray (java.lang.Object)[4];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        r6[0] = $r18;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r6[1] = $r21;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        r6[2] = $r20;

        r6[3] = r1;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attempting to unpack array (count = %d, element size = %d, bytes remaining = %d) for type %s", r6);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraMetadataJV", $r22);

     label2:
        r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r2, i4);

        i5 = 0;

     label3:
        if i5 >= i4 goto label7;

        $r19 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object unpackSingle(java.nio.ByteBuffer,java.lang.Class,int)>(r0, r2, i0);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(r5, i5, $r19);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r4 = $r7;

        i2 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: int getTypeSize(int)>(i0);

     label5:
        $i6 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        if $i6 < i2 goto label6;

        $r15 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object unpackSingle(java.nio.ByteBuffer,java.lang.Class,int)>(r0, r2, i0);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        goto label5;

     label6:
        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r2, 0);

        $r10 = (java.lang.Object[]) $r8;

        $r9 = (java.lang.Object[]) $r10;

        r5 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r9);

     label7:
        $i7 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        if $i7 == 0 goto label8;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trailing bytes (");

        $i8 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") left over after unpacking ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CameraMetadataJV", $r17);

     label8:
        return r5;
    }

    private static java.lang.Object unpackClass(java.nio.ByteBuffer, java.lang.Class, int)
    {
        java.nio.ByteBuffer r0;
        java.lang.Class r1;
        int i0;
        android.hardware.camera2.impl.MetadataMarshalClass r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.lang.Class;

        i0 := @parameter2: int;

        r2 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.MetadataMarshalClass getMarshaler(java.lang.Class,int)>(r1, i0);

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown class type: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $r3 = interfaceinvoke r2.<android.hardware.camera2.impl.MetadataMarshalClass: java.lang.Object unmarshal(java.nio.ByteBuffer,int)>(r0, i0);

        return $r3;
    }

    private static java.lang.Enum unpackEnum(java.nio.ByteBuffer, java.lang.Class, int)
    {
        java.nio.ByteBuffer r0;
        java.lang.Class r1, $r2;
        int i0, $i1;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        java.lang.Enum $r5;

        r0 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.lang.Class;

        i0 := @parameter2: int;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object unpackSingleNative(java.nio.ByteBuffer,java.lang.Class,int)>(r0, $r2, i0);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Enum getEnumFromValue(java.lang.Class,int)>(r1, $i1);

        return $r5;
    }

    private static java.lang.Object unpackSingle(java.nio.ByteBuffer, java.lang.Class, int)
    {
        java.nio.ByteBuffer r0;
        java.lang.Class r1;
        int i0;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r3, $r4;
        java.lang.Enum $r5;

        r0 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.lang.Class;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label1;

        if r1 != class "android/hardware/camera2/Rational" goto label2;

     label1:
        $r2 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object unpackSingleNative(java.nio.ByteBuffer,java.lang.Class,int)>(r0, r1, i0);

        return $r2;

     label2:
        $z1 = virtualinvoke r1.<java.lang.Class: boolean isEnum()>();

        if $z1 == 0 goto label3;

        $r5 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Enum unpackEnum(java.nio.ByteBuffer,java.lang.Class,int)>(r0, r1, i0);

        return $r5;

     label3:
        $z2 = virtualinvoke r1.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label4;

        $r4 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object unpackArray(java.nio.ByteBuffer,java.lang.Class,int)>(r0, r1, i0);

        return $r4;

     label4:
        $r3 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object unpackClass(java.nio.ByteBuffer,java.lang.Class,int)>(r0, r1, i0);

        return $r3;
    }

    private static java.lang.Object unpackSingleNative(java.nio.ByteBuffer, java.lang.Class, int)
    {
        java.nio.ByteBuffer r0;
        java.lang.Class r1, $r9, $r14, $r19, $r22;
        int i0, $i1, $i2, $i7, i8;
        boolean z0, z1;
        java.lang.Object r2;
        java.lang.UnsupportedOperationException $r3, $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r11, $r12, $r13, $r15, $r17;
        java.lang.String $r7, $r16;
        android.hardware.camera2.Rational $r8;
        java.lang.Byte $r18, $r21;
        java.lang.Integer $r20;
        byte $b3, $b4, $b6;
        double $d0;
        float $f0;
        long $l5;

        r0 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.lang.Class;

        i0 := @parameter2: int;

        z0 = 1;

        if i0 != 0 goto label04;

        $b6 = virtualinvoke r0.<java.nio.ByteBuffer: byte get()>();

        r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b6);

     label01:
        if i0 != 0 goto label11;

        $r22 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 != $r22 goto label11;

        $r21 = (java.lang.Byte) r2;

        $b4 = virtualinvoke $r21.<java.lang.Byte: byte byteValue()>();

        if $b4 == 0 goto label10;

     label02:
        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

     label03:
        return r2;

     label04:
        z1 = z0;

        i8 = (int) z1;

        if i0 != i8 goto label05;

        $i7 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt()>();

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        goto label01;

     label05:
        if i0 != 2 goto label06;

        $f0 = virtualinvoke r0.<java.nio.ByteBuffer: float getFloat()>();

        r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label01;

     label06:
        if i0 != 3 goto label07;

        $l5 = virtualinvoke r0.<java.nio.ByteBuffer: long getLong()>();

        r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        goto label01;

     label07:
        if i0 != 4 goto label08;

        $d0 = virtualinvoke r0.<java.nio.ByteBuffer: double getDouble()>();

        r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        goto label01;

     label08:
        if i0 != 5 goto label09;

        $r8 = new android.hardware.camera2.Rational;

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt()>();

        $i2 = virtualinvoke r0.<java.nio.ByteBuffer: int getInt()>();

        specialinvoke $r8.<android.hardware.camera2.Rational: void <init>(int,int)>($i1, $i2);

        r2 = $r8;

        goto label01;

     label09:
        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type, can\'t unpack a native type ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label10:
        z0 = 0;

        goto label02;

     label11:
        if i0 != 0 goto label12;

        $r19 = <java.lang.Integer: java.lang.Class TYPE>;

        if r1 != $r19 goto label12;

        $r18 = (java.lang.Byte) r2;

        $b3 = virtualinvoke $r18.<java.lang.Byte: byte byteValue()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b3);

        return $r20;

     label12:
        $r9 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Class getExpectedType(int)>(i0);

        if r1 == $r9 goto label03;

        $r10 = new java.lang.UnsupportedOperationException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to unpack a type of ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but we expected the type to be ");

        $r14 = staticinvoke <android.hardware.camera2.impl.CameraMetadataNative: java.lang.Class getExpectedType(int)>(i0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r16);

        throw $r10;
    }

    public int describeContents()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        return 0;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

     label1:
        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object get(android.hardware.camera2.CameraMetadata$Key)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraMetadata$Key r1;
        java.lang.Object r2, $r3;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraMetadata$Key;

        r2 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getOverride(android.hardware.camera2.CameraMetadata$Key)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object getBase(android.hardware.camera2.CameraMetadata$Key)>(r1);

        return $r3;
    }

    public int getEntryCount()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int $i0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $i0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: int nativeGetEntryCount()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        boolean $z0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        $z0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean nativeIsEmpty()>();

        return $z0;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.os.Parcel r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeReadFromParcel(android.os.Parcel)>(r1);

        return;
    }

    public byte[] readValues(int)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int i0;
        byte[] $r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: byte[] nativeReadValues(int)>(i0);

        return $r1;
    }

    public void set(android.hardware.camera2.CameraMetadata$Key, java.lang.Object)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.hardware.camera2.CameraMetadata$Key r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.CameraMetadata$Key;

        r2 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: boolean setOverride(android.hardware.camera2.CameraMetadata$Key,java.lang.Object)>(r1, r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void setBase(android.hardware.camera2.CameraMetadata$Key,java.lang.Object)>(r1, r2);

        return;
    }

    public void swap(android.hardware.camera2.impl.CameraMetadataNative)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0, r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeSwap(android.hardware.camera2.impl.CameraMetadataNative)>(r1);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeWriteToParcel(android.os.Parcel)>(r1);

        return;
    }

    public void writeValues(int, byte[])
    {
        android.hardware.camera2.impl.CameraMetadataNative r0;
        int i0;
        byte[] r1;

        r0 := @this: android.hardware.camera2.impl.CameraMetadataNative;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<android.hardware.camera2.impl.CameraMetadataNative: void nativeWriteValues(int,byte[])>(i0, r1);

        return;
    }
}
