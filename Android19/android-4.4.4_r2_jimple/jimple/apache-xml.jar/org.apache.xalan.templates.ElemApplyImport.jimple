public class org.apache.xalan.templates.ElemApplyImport extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xalan.templates.ElemApplyImport r0;

        r0 := @this: org.apache.xalan.templates.ElemApplyImport;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        return;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemApplyImport r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        java.lang.Object[] r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xalan.templates.ElemApplyImport;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r2 = newarray (java.lang.Object)[2];

        $r3 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        r2[0] = $r3;

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemApplyImport: java.lang.String getNodeName()>();

        r2[1] = $r4;

        virtualinvoke r0.<org.apache.xalan.templates.ElemApplyImport: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", r2);

        return null;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemApplyImport r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        int i0;
        boolean $z0;
        org.apache.xpath.XPathContext $r2;
        org.apache.xalan.transformer.MsgMgr $r3, $r5;
        org.apache.xalan.templates.ElemTemplate $r4;

        r0 := @this: org.apache.xalan.templates.ElemApplyImport;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $z0 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: boolean currentTemplateRuleIsNull()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        virtualinvoke $r5.<org.apache.xalan.transformer.MsgMgr: void error(javax.xml.transform.SourceLocator,java.lang.String)>(r0, "ER_NO_APPLY_IMPORT_IN_FOR_EACH");

     label1:
        $r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        i0 = virtualinvoke $r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        if -1 == i0 goto label2;

        $r4 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplate getMatchedTemplate()>();

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)>(r0, $r4, i0);

        return;

     label2:
        $r3 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        virtualinvoke $r3.<org.apache.xalan.transformer.MsgMgr: void error(javax.xml.transform.SourceLocator,java.lang.String)>(r0, "ER_NULL_SOURCENODE_APPLYIMPORTS");

        return;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemApplyImport r0;

        r0 := @this: org.apache.xalan.templates.ElemApplyImport;

        return "apply-imports";
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemApplyImport r0;

        r0 := @this: org.apache.xalan.templates.ElemApplyImport;

        return 72;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemApplyImport: long serialVersionUID> = 3764728663373024038L;

        return;
    }
}
