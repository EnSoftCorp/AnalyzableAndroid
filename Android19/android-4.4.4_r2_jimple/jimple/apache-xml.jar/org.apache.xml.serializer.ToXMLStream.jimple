public class org.apache.xml.serializer.ToXMLStream extends org.apache.xml.serializer.ToStream
{
    private org.apache.xml.serializer.CharInfo m_xmlcharInfo;

    public void <init>()
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String $r1;
        org.apache.xml.serializer.CharInfo $r2, $r3;
        org.apache.xml.serializer.NamespaceMappings $r4;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void <init>()>();

        $r1 = <org.apache.xml.serializer.CharInfo: java.lang.String XML_ENTITIES_RESOURCE>;

        $r2 = staticinvoke <org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)>($r1, "xml");

        r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.CharInfo m_xmlcharInfo> = $r2;

        $r3 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.CharInfo m_xmlcharInfo>;

        r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.CharInfo m_charInfo> = $r3;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void initCDATA()>();

        $r4 = new org.apache.xml.serializer.NamespaceMappings;

        specialinvoke $r4.<org.apache.xml.serializer.NamespaceMappings: void <init>()>();

        r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.NamespaceMappings m_prefixMap> = $r4;

        return;
    }

    private java.lang.String getXMLVersion()
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1, r2;
        javax.xml.transform.ErrorListener r4;
        boolean $z0, $z1;
        java.lang.Object[] $r5;
        org.apache.xml.serializer.utils.Messages $r6;
        javax.xml.transform.Transformer $r7;
        java.io.PrintStream $r8;
        javax.xml.transform.SourceLocator $r9, $r12;
        javax.xml.transform.TransformerException $r10;
        java.lang.Exception $r11;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String getVersion()>();

        if r1 == null goto label01;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("1.0");

        if $z0 == 0 goto label02;

     label01:
        return "1.0";

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("1.1");

        if $z1 == 0 goto label03;

        return "1.1";

     label03:
        $r6 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        r2 = virtualinvoke $r6.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_XML_VERSION_NOT_SUPPORTED", $r5);

     label04:
        $r7 = specialinvoke r0.<org.apache.xml.serializer.ToStream: javax.xml.transform.Transformer getTransformer()>();

        r4 = virtualinvoke $r7.<javax.xml.transform.Transformer: javax.xml.transform.ErrorListener getErrorListener()>();

     label05:
        if r4 == null goto label08;

     label06:
        $r9 = r0.<org.apache.xml.serializer.ToXMLStream: javax.xml.transform.SourceLocator m_sourceLocator>;

        if $r9 == null goto label08;

        $r10 = new javax.xml.transform.TransformerException;

        $r12 = r0.<org.apache.xml.serializer.ToXMLStream: javax.xml.transform.SourceLocator m_sourceLocator>;

        specialinvoke $r10.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r2, $r12);

        interfaceinvoke r4.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r10);

     label07:
        return "1.0";

     label08:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r2);

     label09:
        goto label07;

     label10:
        $r11 := @caughtexception;

        goto label07;

        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private void resetToXMLStream()
    {
        org.apache.xml.serializer.ToXMLStream r0;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        return;
    }

    public void CopyFrom(org.apache.xml.serializer.ToXMLStream)
    {
        org.apache.xml.serializer.ToXMLStream r0, r1;
        java.io.Writer $r2;
        java.lang.String $r3, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xml.serializer.ToStream$BoolStack $r4;
        int $i0;
        org.apache.xml.serializer.EncodingInfo $r9;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: org.apache.xml.serializer.ToXMLStream;

        $r2 = r1.<org.apache.xml.serializer.ToXMLStream: java.io.Writer m_writer>;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void setWriter(java.io.Writer)>($r2);

        $r3 = virtualinvoke r1.<org.apache.xml.serializer.ToXMLStream: java.lang.String getEncoding()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void setEncoding(java.lang.String)>($r3);

        $z0 = virtualinvoke r1.<org.apache.xml.serializer.ToXMLStream: boolean getOmitXMLDeclaration()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void setOmitXMLDeclaration(boolean)>($z0);

        $z1 = r1.<org.apache.xml.serializer.ToXMLStream: boolean m_ispreserve>;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_ispreserve> = $z1;

        $r4 = r1.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ToStream$BoolStack m_preserves>;

        r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ToStream$BoolStack m_preserves> = $r4;

        $z2 = r1.<org.apache.xml.serializer.ToXMLStream: boolean m_isprevtext>;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_isprevtext> = $z2;

        $z3 = r1.<org.apache.xml.serializer.ToXMLStream: boolean m_doIndent>;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_doIndent> = $z3;

        $i0 = virtualinvoke r1.<org.apache.xml.serializer.ToXMLStream: int getIndentAmount()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void setIndentAmount(int)>($i0);

        $z4 = r1.<org.apache.xml.serializer.ToXMLStream: boolean m_startNewLine>;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_startNewLine> = $z4;

        $z5 = r1.<org.apache.xml.serializer.ToXMLStream: boolean m_needToOutputDocTypeDecl>;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_needToOutputDocTypeDecl> = $z5;

        $r5 = virtualinvoke r1.<org.apache.xml.serializer.ToXMLStream: java.lang.String getDoctypeSystem()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void setDoctypeSystem(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<org.apache.xml.serializer.ToXMLStream: java.lang.String getDoctypePublic()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void setDoctypePublic(java.lang.String)>($r6);

        $r7 = virtualinvoke r1.<org.apache.xml.serializer.ToXMLStream: java.lang.String getStandalone()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void setStandalone(java.lang.String)>($r7);

        $r8 = virtualinvoke r1.<org.apache.xml.serializer.ToXMLStream: java.lang.String getMediaType()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void setMediaType(java.lang.String)>($r8);

        $r9 = r1.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.EncodingInfo m_encodingInfo>;

        r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.EncodingInfo m_encodingInfo> = $r9;

        $z6 = r1.<org.apache.xml.serializer.ToXMLStream: boolean m_spaceBeforeClose>;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_spaceBeforeClose> = $z6;

        $z7 = r1.<org.apache.xml.serializer.ToXMLStream: boolean m_cdataStartCalled>;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_cdataStartCalled> = $z7;

        return;
    }

    public void addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r9;
        boolean z0, $z1, $z2, $z3, $z5;
        javax.xml.transform.TransformerException r7, $r15, $r23;
        javax.xml.transform.ErrorListener r8;
        org.apache.xml.serializer.ElemContext $r10;
        java.lang.Object[] $r11;
        org.apache.xml.serializer.utils.Messages $r12;
        javax.xml.transform.Transformer $r13;
        java.io.PrintStream $r14;
        javax.xml.transform.SourceLocator $r16, $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21;
        org.xml.sax.SAXException $r22;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        $r10 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z1 = $r10.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: boolean addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, r4, r5, z0);

        if $z2 == 0 goto label1;

        if z0 != 0 goto label1;

        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns");

        if $z3 != 0 goto label1;

        r9 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String ensureAttributesNamespaceIsDeclared(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        if r9 == null goto label1;

        if r3 == null goto label1;

        $z5 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r9);

        if $z5 != 0 goto label1;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: boolean addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, r4, r5, z0);

        return;

     label2:
        $r12 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r2;

        r6 = virtualinvoke $r12.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_POSITION", $r11);

     label3:
        $r13 = specialinvoke r0.<org.apache.xml.serializer.ToStream: javax.xml.transform.Transformer getTransformer()>();

        r8 = virtualinvoke $r13.<javax.xml.transform.Transformer: javax.xml.transform.ErrorListener getErrorListener()>();

     label4:
        if r8 == null goto label8;

     label5:
        $r16 = r0.<org.apache.xml.serializer.ToXMLStream: javax.xml.transform.SourceLocator m_sourceLocator>;

        if $r16 == null goto label8;

        $r15 = new javax.xml.transform.TransformerException;

        $r17 = r0.<org.apache.xml.serializer.ToXMLStream: javax.xml.transform.SourceLocator m_sourceLocator>;

        specialinvoke $r15.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>(r6, $r17);

        interfaceinvoke r8.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r15);

     label6:
        return;

     label7:
        $r23 := @caughtexception;

        r7 = $r23;

        $r22 = new org.xml.sax.SAXException;

        specialinvoke $r22.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r7);

        throw $r22;

     label8:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(r6);

     label9:
        return;

        catch javax.xml.transform.TransformerException from label3 to label4 with label7;
        catch javax.xml.transform.TransformerException from label5 to label6 with label7;
        catch javax.xml.transform.TransformerException from label8 to label9 with label7;
    }

    public void addUniqueAttribute(java.lang.String, java.lang.String, int) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1, r2, r4, $r7;
        int i0, $i1;
        java.io.IOException r3, $r9;
        java.io.Writer r5;
        org.apache.xml.serializer.ElemContext $r6;
        boolean $z0, $z1;
        org.apache.xml.serializer.CharInfo $r8;
        org.xml.sax.SAXException $r10;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r6 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r6.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label8;

     label1:
        r4 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String patchName(java.lang.String)>(r1);

        r5 = r0.<org.apache.xml.serializer.ToXMLStream: java.io.Writer m_writer>;

     label2:
        $i1 = i0 & 1;

        if $i1 <= 0 goto label5;

     label3:
        $r8 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.CharInfo m_xmlcharInfo>;

        $z1 = $r8.<org.apache.xml.serializer.CharInfo: boolean onlyQuotAmpLtGt>;

        if $z1 == 0 goto label5;

        virtualinvoke r5.<java.io.Writer: void write(int)>(32);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>(r4);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("=\"");

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>(r2);

        virtualinvoke r5.<java.io.Writer: void write(int)>(34);

     label4:
        return;

     label5:
        virtualinvoke r5.<java.io.Writer: void write(int)>(32);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>(r4);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("=\"");

        $r7 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String getEncoding()>();

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)>(r5, r2, $r7);

        virtualinvoke r5.<java.io.Writer: void write(int)>(34);

     label6:
        return;

     label7:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r3);

        throw $r10;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.io.IOException r1, $r3;
        boolean $z0, $z1;
        org.apache.xml.serializer.SerializerTrace $r2;
        org.xml.sax.SAXException $r4;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void flushPending()>();

        $z0 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_doIndent>;

        if $z0 == 0 goto label2;

        $z1 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_isprevtext>;

        if $z1 != 0 goto label2;

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void outputLineSep()>();

     label2:
        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void flushWriter()>();

        $r2 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r2 == null goto label3;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireEndDoc()>();

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void endElement(java.lang.String,java.lang.String,java.lang.String)>(null, null, r1);

        return;
    }

    public void endPreserving() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        boolean z0, $z1;
        org.apache.xml.serializer.ToStream$BoolStack $r1, $r2;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        $r1 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ToStream$BoolStack m_preserves>;

        $z1 = virtualinvoke $r1.<org.apache.xml.serializer.ToStream$BoolStack: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        z0 = 0;

     label1:
        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_ispreserve> = z0;

        return;

     label2:
        $r2 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ToStream$BoolStack m_preserves>;

        z0 = virtualinvoke $r2.<org.apache.xml.serializer.ToStream$BoolStack: boolean pop()>();

        goto label1;
    }

    public void entityReference(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1;
        java.io.IOException r2, $r7;
        java.io.Writer r3;
        org.apache.xml.serializer.ElemContext $r4, $r6;
        boolean $z0, $z1;
        org.apache.xml.serializer.SerializerTrace $r5;
        org.xml.sax.SAXException $r8;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z0 = $r4.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void closeStartTag()>();

        $r6 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r6.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: boolean shouldIndent()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void indent()>();

     label2:
        r3 = r0.<org.apache.xml.serializer.ToXMLStream: java.io.Writer m_writer>;

        virtualinvoke r3.<java.io.Writer: void write(int)>(38);

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.Writer: void write(int)>(59);

     label3:
        $r5 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r5 == null goto label4;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireEntityReference(java.lang.String)>(r1);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new org.xml.sax.SAXException;

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r2);

        throw $r8;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label2 to label3 with label5;
    }

    public void namespaceAfterStartElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1, r2, $r4, $r6, $r7, $r8;
        org.apache.xml.serializer.ElemContext $r3, $r5, $r9;
        boolean $z1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r4 = $r3.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementURI>;

        if $r4 != null goto label1;

        $r5 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r6 = $r5.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementName>;

        $r7 = staticinvoke <org.apache.xml.serializer.ToXMLStream: java.lang.String getPrefixPart(java.lang.String)>($r6);

        if $r7 != null goto label1;

        $r8 = "";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r9 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r9.<org.apache.xml.serializer.ElemContext: java.lang.String m_elementURI> = r2;

     label1:
        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1, r2, $r7, $r8;
        java.io.IOException r3, $r11;
        java.io.Writer r4;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xml.serializer.ElemContext $r5, $r9;
        org.apache.xml.serializer.SerializerTrace $r6;
        char $c5;
        org.xml.sax.SAXException $r10;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_inEntityRef>;

        if $z0 == 0 goto label02;

     label01:
        return;

     label02:
        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void flushPending()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.transform.disable-output-escaping");

        if $z1 == 0 goto label04;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void startNonEscaping()>();

     label03:
        $r6 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.SerializerTrace m_tracer>;

        if $r6 == null goto label01;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void fireEscapingEvent(java.lang.String,java.lang.String)>(r1, r2);

        return;

     label04:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.transform.enable-output-escaping");

        if $z2 == 0 goto label05;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void endNonEscaping()>();

        goto label03;

     label05:
        $r5 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $z3 = $r5.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen>;

        if $z3 == 0 goto label15;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void closeStartTag()>();

        $r9 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $r9.<org.apache.xml.serializer.ElemContext: boolean m_startTagOpen> = 0;

     label06:
        $z5 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: boolean shouldIndent()>();

        if $z5 == 0 goto label07;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void indent()>();

     label07:
        r4 = r0.<org.apache.xml.serializer.ToXMLStream: java.io.Writer m_writer>;

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("<?");

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>(r1);

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= 0 goto label08;

        $c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        $z6 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c5);

        if $z6 != 0 goto label08;

        virtualinvoke r4.<java.io.Writer: void write(int)>(32);

     label08:
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("?>");

     label09:
        if i0 < 0 goto label17;

        if i0 <= 0 goto label11;

     label10:
        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r8);

     label11:
        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("? >");

        $i3 = i0 + 2;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i3 >= $i2 goto label12;

        $i4 = i0 + 2;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i4);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>($r7);

     label12:
        virtualinvoke r4.<java.io.Writer: void write(int)>(63);

        virtualinvoke r4.<java.io.Writer: void write(int)>(62);

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_startNewLine> = 1;

     label13:
        goto label03;

     label14:
        $r11 := @caughtexception;

        r3 = $r11;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r3);

        throw $r10;

     label15:
        $z4 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_needToCallStartDocument>;

        if $z4 == 0 goto label06;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void startDocumentInternal()>();

     label16:
        goto label06;

     label17:
        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>(r2);

     label18:
        goto label12;

        catch java.io.IOException from label05 to label06 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.io.IOException from label11 to label12 with label14;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label15 to label16 with label14;
        catch java.io.IOException from label17 to label18 with label14;
    }

    protected boolean pushNamespace(java.lang.String, java.lang.String)
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1, r2;
        org.apache.xml.serializer.ElemContext $r4;
        int $i0;
        org.apache.xml.serializer.NamespaceMappings $r5;
        boolean $z0;
        org.xml.sax.SAXException $r6;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r5 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.NamespaceMappings m_prefixMap>;

        $r4 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ElemContext m_elemContext>;

        $i0 = $r4.<org.apache.xml.serializer.ElemContext: int m_currentElemDepth>;

        $z0 = virtualinvoke $r5.<org.apache.xml.serializer.NamespaceMappings: boolean pushNamespace(java.lang.String,java.lang.String,int)>(r1, r2, $i0);

        if $z0 == 0 goto label4;

        virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: void startPrefixMapping(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return 1;

     label3:
        $r6 := @caughtexception;

     label4:
        return 0;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public boolean reset()
    {
        org.apache.xml.serializer.ToXMLStream r0;
        boolean z0, z1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        z0 = specialinvoke r0.<org.apache.xml.serializer.ToStream: boolean reset()>();

        z1 = 0;

        if z0 == 0 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    public void startDocumentInternal() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        java.lang.String r1, r2, r3, $r6, $r7, $r10, $r11;
        java.io.IOException r4, $r15;
        java.io.Writer r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0;
        char[] $r8;
        java.lang.StringBuilder $r9, $r12, $r13, $r14;
        org.xml.sax.SAXException $r16;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        $z0 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_needToCallStartDocument>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.xml.serializer.ToStream: void startDocumentInternal()>();

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_needToCallStartDocument> = 0;

        $z1 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_inEntityRef>;

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_needToOutputDocTypeDecl> = 1;

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_startNewLine> = 0;

        r1 = specialinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String getXMLVersion()>();

        $z2 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: boolean getOmitXMLDeclaration()>();

        if $z2 != 0 goto label1;

        $r6 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String getEncoding()>();

        r2 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)>($r6);

        $z3 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_standaloneWasSpecified>;

        if $z3 == 0 goto label7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" standalone=\"");

        $r11 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String getStandalone()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r5 = r0.<org.apache.xml.serializer.ToXMLStream: java.io.Writer m_writer>;

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("<?xml version=\"");

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>(r1);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("\" encoding=\"");

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>(r2);

        virtualinvoke r5.<java.io.Writer: void write(int)>(34);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>(r3);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("?>");

        $z4 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_doIndent>;

        if $z4 == 0 goto label1;

        $z5 = r0.<org.apache.xml.serializer.ToXMLStream: boolean m_standaloneWasSpecified>;

        if $z5 != 0 goto label4;

        $r7 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String getDoctypePublic()>();

        if $r7 != null goto label4;

        $r10 = virtualinvoke r0.<org.apache.xml.serializer.ToXMLStream: java.lang.String getDoctypeSystem()>();

        if $r10 == null goto label1;

     label4:
        $r8 = r0.<org.apache.xml.serializer.ToXMLStream: char[] m_lineSep>;

        $i0 = r0.<org.apache.xml.serializer.ToXMLStream: int m_lineSepLen>;

        virtualinvoke r5.<java.io.Writer: void write(char[],int,int)>($r8, 0, $i0);

     label5:
        return;

     label6:
        $r15 := @caughtexception;

        r4 = $r15;

        $r16 = new org.xml.sax.SAXException;

        specialinvoke $r16.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r4);

        throw $r16;

     label7:
        r3 = "";

        goto label3;

        catch java.io.IOException from label3 to label4 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public void startPreserving() throws org.xml.sax.SAXException
    {
        org.apache.xml.serializer.ToXMLStream r0;
        org.apache.xml.serializer.ToStream$BoolStack $r1;

        r0 := @this: org.apache.xml.serializer.ToXMLStream;

        $r1 = r0.<org.apache.xml.serializer.ToXMLStream: org.apache.xml.serializer.ToStream$BoolStack m_preserves>;

        virtualinvoke $r1.<org.apache.xml.serializer.ToStream$BoolStack: boolean push(boolean)>(1);

        r0.<org.apache.xml.serializer.ToXMLStream: boolean m_ispreserve> = 1;

        return;
    }
}
