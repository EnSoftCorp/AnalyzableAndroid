public class org.apache.xml.utils.XMLReaderManager extends java.lang.Object
{
    private static final java.lang.String NAMESPACES_FEATURE;
    private static final java.lang.String NAMESPACE_PREFIXES_FEATURE;
    private static javax.xml.parsers.SAXParserFactory m_parserFactory;
    private static final org.apache.xml.utils.XMLReaderManager m_singletonManager;
    private java.util.Hashtable m_inUse;
    private java.lang.ThreadLocal m_readers;

    static void <clinit>()
    {
        org.apache.xml.utils.XMLReaderManager $r0;

        <org.apache.xml.utils.XMLReaderManager: java.lang.String NAMESPACE_PREFIXES_FEATURE> = "http://xml.org/sax/features/namespace-prefixes";

        <org.apache.xml.utils.XMLReaderManager: java.lang.String NAMESPACES_FEATURE> = "http://xml.org/sax/features/namespaces";

        $r0 = new org.apache.xml.utils.XMLReaderManager;

        specialinvoke $r0.<org.apache.xml.utils.XMLReaderManager: void <init>()>();

        <org.apache.xml.utils.XMLReaderManager: org.apache.xml.utils.XMLReaderManager m_singletonManager> = $r0;

        return;
    }

    private void <init>()
    {
        org.apache.xml.utils.XMLReaderManager r0;

        r0 := @this: org.apache.xml.utils.XMLReaderManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.xml.utils.XMLReaderManager getInstance()
    {
        org.apache.xml.utils.XMLReaderManager $r0;

        $r0 = <org.apache.xml.utils.XMLReaderManager: org.apache.xml.utils.XMLReaderManager m_singletonManager>;

        return $r0;
    }

    public org.xml.sax.XMLReader getXMLReader() throws org.xml.sax.SAXException
    {
        org.apache.xml.utils.XMLReaderManager r0;
        boolean z0;
        java.lang.Throwable r1, $r36;
        org.xml.sax.XMLReader r2, r11, r13;
        java.lang.Object r3, $r16;
        java.lang.Boolean r4, $r18, $r24;
        javax.xml.parsers.FactoryConfigurationError r7, $r34;
        javax.xml.parsers.ParserConfigurationException r8, r10, $r39, $r41;
        java.util.Hashtable $r14, $r21, $r22, $r23, $r28;
        java.lang.ThreadLocal $r15, $r17, $r19, $r25;
        java.lang.NoSuchMethodError $r26;
        javax.xml.parsers.SAXParserFactory $r29, $r32, $r33, $r35;
        javax.xml.parsers.SAXParser $r30;
        java.lang.Exception $r31;
        org.xml.sax.SAXException $r37, $r40, $r43;
        java.lang.String $r38;
        java.lang.AbstractMethodError $r42;

        r0 := @this: org.apache.xml.utils.XMLReaderManager;

        z0 = 1;

        entermonitor r0;

     label01:
        $r15 = r0.<org.apache.xml.utils.XMLReaderManager: java.lang.ThreadLocal m_readers>;

        if $r15 != null goto label02;

        $r25 = new java.lang.ThreadLocal;

        specialinvoke $r25.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.apache.xml.utils.XMLReaderManager: java.lang.ThreadLocal m_readers> = $r25;

     label02:
        $r14 = r0.<org.apache.xml.utils.XMLReaderManager: java.util.Hashtable m_inUse>;

        if $r14 != null goto label03;

        $r28 = new java.util.Hashtable;

        specialinvoke $r28.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xml.utils.XMLReaderManager: java.util.Hashtable m_inUse> = $r28;

     label03:
        $r17 = r0.<org.apache.xml.utils.XMLReaderManager: java.lang.ThreadLocal m_readers>;

        $r16 = virtualinvoke $r17.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (org.xml.sax.XMLReader) $r16;

     label04:
        if r2 == null goto label14;

     label05:
        if z0 == 0 goto label08;

     label06:
        $r22 = r0.<org.apache.xml.utils.XMLReaderManager: java.util.Hashtable m_inUse>;

        r3 = virtualinvoke $r22.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label07:
        if r3 != r4 goto label26;

     label08:
        r13 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

     label09:
        r2 = r13;

     label10:
        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        interfaceinvoke r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 0);

     label11:
        if z0 != 0 goto label13;

     label12:
        $r19 = r0.<org.apache.xml.utils.XMLReaderManager: java.lang.ThreadLocal m_readers>;

        virtualinvoke $r19.<java.lang.ThreadLocal: void set(java.lang.Object)>(r2);

        $r21 = r0.<org.apache.xml.utils.XMLReaderManager: java.util.Hashtable m_inUse>;

        $r18 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r21.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r18);

     label13:
        exitmonitor r0;

        return r2;

     label14:
        z0 = 0;

        goto label05;

     label15:
        $r31 := @caughtexception;

     label16:
        $r32 = <org.apache.xml.utils.XMLReaderManager: javax.xml.parsers.SAXParserFactory m_parserFactory>;

        if $r32 != null goto label17;

        $r35 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        <org.apache.xml.utils.XMLReaderManager: javax.xml.parsers.SAXParserFactory m_parserFactory> = $r35;

        $r33 = <org.apache.xml.utils.XMLReaderManager: javax.xml.parsers.SAXParserFactory m_parserFactory>;

        virtualinvoke $r33.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

     label17:
        $r29 = <org.apache.xml.utils.XMLReaderManager: javax.xml.parsers.SAXParserFactory m_parserFactory>;

        $r30 = virtualinvoke $r29.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        r11 = virtualinvoke $r30.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label18:
        r2 = r11;

        goto label10;

     label19:
        $r41 := @caughtexception;

        r10 = $r41;

     label20:
        throw r10;

     label21:
        $r39 := @caughtexception;

        r8 = $r39;

     label22:
        $r43 = new org.xml.sax.SAXException;

        specialinvoke $r43.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r43;

     label23:
        $r36 := @caughtexception;

        r1 = $r36;

        exitmonitor r0;

        throw r1;

     label24:
        $r34 := @caughtexception;

        r7 = $r34;

     label25:
        $r37 = new org.xml.sax.SAXException;

        $r38 = virtualinvoke r7.<javax.xml.parsers.FactoryConfigurationError: java.lang.String toString()>();

        specialinvoke $r37.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r38);

        throw $r37;

     label26:
        $r23 = r0.<org.apache.xml.utils.XMLReaderManager: java.util.Hashtable m_inUse>;

        $r24 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r23.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r24);

     label27:
        goto label13;

     label28:
        $r42 := @caughtexception;

        goto label11;

     label29:
        $r26 := @caughtexception;

        goto label11;

     label30:
        $r40 := @caughtexception;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Exception from label08 to label09 with label15;
        catch javax.xml.parsers.ParserConfigurationException from label08 to label09 with label21;
        catch javax.xml.parsers.FactoryConfigurationError from label08 to label09 with label24;
        catch java.lang.NoSuchMethodError from label08 to label09 with label29;
        catch java.lang.AbstractMethodError from label08 to label09 with label28;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch org.xml.sax.SAXException from label10 to label11 with label30;
        catch javax.xml.parsers.ParserConfigurationException from label10 to label11 with label21;
        catch javax.xml.parsers.FactoryConfigurationError from label10 to label11 with label24;
        catch java.lang.NoSuchMethodError from label10 to label11 with label29;
        catch java.lang.AbstractMethodError from label10 to label11 with label28;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label16 to label17 with label19;
        catch javax.xml.parsers.FactoryConfigurationError from label16 to label17 with label24;
        catch java.lang.NoSuchMethodError from label16 to label17 with label29;
        catch java.lang.AbstractMethodError from label16 to label17 with label28;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label17 to label18 with label19;
        catch javax.xml.parsers.FactoryConfigurationError from label17 to label18 with label24;
        catch java.lang.NoSuchMethodError from label17 to label18 with label29;
        catch java.lang.AbstractMethodError from label17 to label18 with label28;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch javax.xml.parsers.ParserConfigurationException from label20 to label21 with label21;
        catch javax.xml.parsers.FactoryConfigurationError from label20 to label21 with label24;
        catch java.lang.NoSuchMethodError from label20 to label21 with label29;
        catch java.lang.AbstractMethodError from label20 to label21 with label28;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label22 to label23 with label23;
        catch java.lang.Throwable from label25 to label26 with label23;
        catch java.lang.Throwable from label26 to label27 with label23;
    }

    public void releaseXMLReader(org.xml.sax.XMLReader)
    {
        org.apache.xml.utils.XMLReaderManager r0;
        org.xml.sax.XMLReader r1;
        java.lang.Throwable r2, $r7;
        java.lang.ThreadLocal $r3;
        java.lang.Object $r4;
        java.util.Hashtable $r5;

        r0 := @this: org.apache.xml.utils.XMLReaderManager;

        r1 := @parameter0: org.xml.sax.XMLReader;

        entermonitor r0;

     label1:
        $r3 = r0.<org.apache.xml.utils.XMLReaderManager: java.lang.ThreadLocal m_readers>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        if $r4 != r1 goto label4;

     label2:
        if r1 == null goto label4;

     label3:
        $r5 = r0.<org.apache.xml.utils.XMLReaderManager: java.util.Hashtable m_inUse>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
