public class org.apache.xpath.patterns.UnionPattern extends org.apache.xpath.Expression
{
    static final long serialVersionUID;
    private org.apache.xpath.patterns.StepPattern[] m_patterns;

    public void <init>()
    {
        org.apache.xpath.patterns.UnionPattern r0;

        r0 := @this: org.apache.xpath.patterns.UnionPattern;

        specialinvoke r0.<org.apache.xpath.Expression: void <init>()>();

        return;
    }

    static org.apache.xpath.patterns.StepPattern[] access$000(org.apache.xpath.patterns.UnionPattern)
    {
        org.apache.xpath.patterns.UnionPattern r0;
        org.apache.xpath.patterns.StepPattern[] $r1;

        r0 := @parameter0: org.apache.xpath.patterns.UnionPattern;

        $r1 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        return $r1;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.patterns.UnionPattern r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.XPathVisitor r2;
        int i0, i1;
        org.apache.xpath.patterns.StepPattern[] $r3, $r4, $r5;
        org.apache.xpath.patterns.UnionPattern$UnionPathPartOwner $r6;
        org.apache.xpath.patterns.StepPattern $r7;

        r0 := @this: org.apache.xpath.patterns.UnionPattern;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.XPathVisitor;

        virtualinvoke r2.<org.apache.xpath.XPathVisitor: boolean visitUnionPattern(org.apache.xpath.ExpressionOwner,org.apache.xpath.patterns.UnionPattern)>(r1, r0);

        $r3 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        $r7 = $r5[i1];

        $r6 = new org.apache.xpath.patterns.UnionPattern$UnionPathPartOwner;

        specialinvoke $r6.<org.apache.xpath.patterns.UnionPattern$UnionPathPartOwner: void <init>(org.apache.xpath.patterns.UnionPattern,int)>(r0, i1);

        virtualinvoke $r7.<org.apache.xpath.patterns.StepPattern: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r6, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean canTraverseOutsideSubtree()
    {
        org.apache.xpath.patterns.UnionPattern r0;
        int i0, i1;
        org.apache.xpath.patterns.StepPattern[] $r1, $r2, $r3;
        org.apache.xpath.patterns.StepPattern $r4;
        boolean $z0;

        r0 := @this: org.apache.xpath.patterns.UnionPattern;

        $r1 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        $r4 = $r3[i1];

        $z0 = virtualinvoke $r4.<org.apache.xpath.patterns.StepPattern: boolean canTraverseOutsideSubtree()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.patterns.UnionPattern r0, r2;
        org.apache.xpath.Expression r1;
        int i0, i1, $i2;
        boolean $z0, $z1;
        org.apache.xpath.patterns.StepPattern[] $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.xpath.patterns.StepPattern $r10, $r11;

        r0 := @this: org.apache.xpath.patterns.UnionPattern;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = virtualinvoke r0.<org.apache.xpath.patterns.UnionPattern: boolean isSameClass(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (org.apache.xpath.patterns.UnionPattern) r1;

        $r3 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        if $r3 == null goto label4;

        $r5 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        i0 = lengthof $r5;

        $r6 = r2.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        if $r6 == null goto label1;

        $r7 = r2.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        $i2 = lengthof $r7;

        if $i2 != i0 goto label1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r8 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        $r11 = $r8[i1];

        $r9 = r2.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        $r10 = $r9[i1];

        $z1 = virtualinvoke $r11.<org.apache.xpath.patterns.StepPattern: boolean deepEquals(org.apache.xpath.Expression)>($r10);

        if $z1 == 0 goto label1;

        i1 = i1 + 1;

        goto label3;

     label4:
        $r4 = r2.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        if $r4 != null goto label1;

     label5:
        return 1;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.patterns.UnionPattern r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xpath.objects.XObject r2, r3;
        int i0, i1;
        org.apache.xpath.patterns.StepPattern[] $r4, $r5;
        org.apache.xpath.patterns.StepPattern $r6;
        org.apache.xpath.objects.XNumber $r7;
        double $d0, $d1;
        byte $b2;

        r0 := @this: org.apache.xpath.patterns.UnionPattern;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 = null;

        $r4 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        i0 = lengthof $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r5 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        $r6 = $r5[i1];

        r3 = virtualinvoke $r6.<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        $r7 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if r3 == $r7 goto label2;

        if r2 != null goto label3;

        r2 = r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $d0 = virtualinvoke r3.<org.apache.xpath.objects.XObject: double num()>();

        $d1 = virtualinvoke r2.<org.apache.xpath.objects.XObject: double num()>();

        $b2 = $d0 cmpl $d1;

        if $b2 <= 0 goto label2;

        r2 = r3;

        goto label2;

     label4:
        if r2 != null goto label5;

        r2 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

     label5:
        return r2;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.patterns.UnionPattern r0;
        java.util.Vector r1;
        int i0, i1, $i2;
        org.apache.xpath.patterns.StepPattern[] $r2, $r3;
        org.apache.xpath.patterns.StepPattern $r4;

        r0 := @this: org.apache.xpath.patterns.UnionPattern;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        i1 = 0;

     label1:
        $r2 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        $i2 = lengthof $r2;

        if i1 >= $i2 goto label2;

        $r3 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<org.apache.xpath.patterns.StepPattern: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.xpath.patterns.StepPattern[] getPatterns()
    {
        org.apache.xpath.patterns.UnionPattern r0;
        org.apache.xpath.patterns.StepPattern[] $r1;

        r0 := @this: org.apache.xpath.patterns.UnionPattern;

        $r1 = r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns>;

        return $r1;
    }

    public void setPatterns(org.apache.xpath.patterns.StepPattern[])
    {
        org.apache.xpath.patterns.UnionPattern r0;
        org.apache.xpath.patterns.StepPattern[] r1;
        int i0, $i1;
        org.apache.xpath.patterns.StepPattern $r2;

        r0 := @this: org.apache.xpath.patterns.UnionPattern;

        r1 := @parameter0: org.apache.xpath.patterns.StepPattern[];

        r0.<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] m_patterns> = r1;

        if r1 == null goto label2;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r2 = r1[i0];

        virtualinvoke $r2.<org.apache.xpath.patterns.StepPattern: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.patterns.UnionPattern: long serialVersionUID> = -6670449967116905820L;

        return;
    }
}
