public class org.apache.xalan.transformer.TransformerImpl extends javax.xml.transform.Transformer implements java.lang.Runnable, org.apache.xml.dtm.DTMWSFilter, org.apache.xpath.ExtensionsProvider, org.apache.xml.serializer.SerializerTrace
{
    java.util.Stack m_attrSetStack;
    org.apache.xalan.transformer.CountersTable m_countersTable;
    org.apache.xml.utils.ObjectStack m_currentFuncResult;
    java.util.Stack m_currentMatchTemplates;
    org.apache.xml.utils.NodeVector m_currentMatchedNodes;
    org.apache.xml.utils.ObjectStack m_currentTemplateElements;
    org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull;
    private int m_doc;
    private javax.xml.transform.ErrorListener m_errorHandler;
    private java.lang.Exception m_exceptionThrown;
    private org.apache.xalan.extensions.ExtensionsTable m_extensionsTable;
    private boolean m_hasBeenReset;
    private boolean m_hasTransformThreadErrorCatcher;
    private boolean m_incremental;
    org.xml.sax.ContentHandler m_inputContentHandler;
    private org.apache.xalan.transformer.KeyManager m_keyManager;
    private java.util.Stack m_modes;
    private org.apache.xalan.transformer.MsgMgr m_msgMgr;
    private boolean m_optimizer;
    private org.xml.sax.ContentHandler m_outputContentHandler;
    private org.apache.xalan.templates.OutputProperties m_outputFormat;
    private java.io.FileOutputStream m_outputStream;
    private javax.xml.transform.Result m_outputTarget;
    private boolean m_quietConflictWarnings;
    private java.lang.Boolean m_reentryGuard;
    private org.apache.xml.serializer.SerializationHandler m_serializationHandler;
    private boolean m_shouldReset;
    private boolean m_source_location;
    private org.apache.xml.utils.ObjectPool m_stringWriterObjectPool;
    private org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot;
    private org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool;
    private org.apache.xalan.templates.OutputProperties m_textformat;
    private java.lang.Thread m_transformThread;
    private java.lang.String m_urlOfSource;
    java.util.Vector m_userParams;
    private org.apache.xpath.XPathContext m_xcontext;

    public void <init>(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xpath.XPathContext r2, $r15, $r18;
        java.lang.Boolean $r3;
        org.apache.xml.utils.ObjectPool $r4, $r5;
        org.apache.xalan.templates.OutputProperties $r6;
        org.apache.xml.utils.ObjectStack $r7, $r12;
        java.util.Stack $r8, $r14;
        org.apache.xml.utils.NodeVector $r9;
        org.apache.xalan.transformer.KeyManager $r10;
        org.apache.xml.utils.BoolStack $r11;
        org.apache.xml.utils.DefaultErrorHandler $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xml.dtm.DTMManager $r16, $r17;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<javax.xml.transform.Transformer: void <init>()>();

        $r3 = new java.lang.Boolean;

        specialinvoke $r3.<java.lang.Boolean: void <init>(boolean)>(1);

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard> = $r3;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.String m_urlOfSource> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_outputContentHandler> = null;

        $r4 = new org.apache.xml.utils.ObjectPool;

        specialinvoke $r4.<org.apache.xml.utils.ObjectPool: void <init>(java.lang.Class)>(class "org/apache/xml/serializer/ToTextStream");

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool> = $r4;

        $r5 = new org.apache.xml.utils.ObjectPool;

        specialinvoke $r5.<org.apache.xml.utils.ObjectPool: void <init>(java.lang.Class)>(class "java/io/StringWriter");

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool> = $r5;

        $r6 = new org.apache.xalan.templates.OutputProperties;

        specialinvoke $r6.<org.apache.xalan.templates.OutputProperties: void <init>(java.lang.String)>("text");

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_textformat> = $r6;

        $r7 = new org.apache.xml.utils.ObjectStack;

        specialinvoke $r7.<org.apache.xml.utils.ObjectStack: void <init>(int)>(4096);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements> = $r7;

        $r8 = new java.util.Stack;

        specialinvoke $r8.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates> = $r8;

        $r9 = new org.apache.xml.utils.NodeVector;

        specialinvoke $r9.<org.apache.xml.utils.NodeVector: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes> = $r9;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings> = 1;

        $r10 = new org.apache.xalan.transformer.KeyManager;

        specialinvoke $r10.<org.apache.xalan.transformer.KeyManager: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager m_keyManager> = $r10;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable> = null;

        $r11 = new org.apache.xml.utils.BoolStack;

        specialinvoke $r11.<org.apache.xml.utils.BoolStack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull> = $r11;

        $r12 = new org.apache.xml.utils.ObjectStack;

        specialinvoke $r12.<org.apache.xml.utils.ObjectStack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult> = $r12;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_optimizer> = 1;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_incremental> = 0;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_source_location> = 0;

        $r13 = new org.apache.xml.utils.DefaultErrorHandler;

        specialinvoke $r13.<org.apache.xml.utils.DefaultErrorHandler: void <init>(boolean)>(0);

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler> = $r13;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception m_exceptionThrown> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset> = 0;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_shouldReset> = 1;

        $r14 = new java.util.Stack;

        specialinvoke $r14.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes> = $r14;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable m_extensionsTable> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: boolean getOptimizer()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_optimizer> = $z0;

        $z2 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: boolean getIncremental()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_incremental> = $z2;

        $z1 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: boolean getSource_location()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_source_location> = $z1;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setStylesheet(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r15 = new org.apache.xpath.XPathContext;

        specialinvoke $r15.<org.apache.xpath.XPathContext: void <init>(java.lang.Object)>(r0);

        r2 = $r15;

        $z3 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_incremental>;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void setIncremental(boolean)>($z3);

        $r16 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        $z4 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_incremental>;

        virtualinvoke $r16.<org.apache.xml.dtm.DTMManager: void setIncremental(boolean)>($z4);

        $z5 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_source_location>;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void setSource_location(boolean)>($z5);

        $r17 = virtualinvoke r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        $z7 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_source_location>;

        virtualinvoke $r17.<org.apache.xml.dtm.DTMManager: void setSource_location(boolean)>($z7);

        $z6 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: boolean isSecureProcessing()>();

        if $z6 == 0 goto label1;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void setSecureProcessing(boolean)>(1);

     label1:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setXPathContext(org.apache.xpath.XPathContext)>(r2);

        $r18 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        virtualinvoke $r18.<org.apache.xpath.XPathContext: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)>(r1);

        return;
    }

    private void fatalError(java.lang.Throwable) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Throwable r1;
        boolean $z0;
        javax.xml.transform.TransformerException $r2, $r4;
        javax.xml.transform.ErrorListener $r3, $r5;
        java.lang.String $r6;
        org.apache.xml.utils.SAXSourceLocator $r7;
        org.xml.sax.SAXParseException $r8;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Throwable;

        $z0 = r1 instanceof org.xml.sax.SAXParseException;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r4 = new javax.xml.transform.TransformerException;

        $r6 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        $r7 = new org.apache.xml.utils.SAXSourceLocator;

        $r8 = (org.xml.sax.SAXParseException) r1;

        specialinvoke $r7.<org.apache.xml.utils.SAXSourceLocator: void <init>(org.xml.sax.SAXParseException)>($r8);

        specialinvoke $r4.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r6, $r7);

        interfaceinvoke $r5.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r4);

        return;

     label1:
        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r2 = new javax.xml.transform.TransformerException;

        specialinvoke $r2.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r1);

        interfaceinvoke $r3.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r2);

        return;
    }

    private void replaceOrPushUserParam(org.apache.xml.utils.QName, org.apache.xpath.objects.XObject)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.QName r1, $r9;
        org.apache.xpath.objects.XObject r2;
        int i0, $i1;
        java.util.Vector $r3, $r5, $r6, $r11;
        org.apache.xpath.Arg $r4, $r8, $r10;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: org.apache.xpath.objects.XObject;

        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r6 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r7 = virtualinvoke $r6.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r8 = (org.apache.xpath.Arg) $r7;

        $r9 = virtualinvoke $r8.<org.apache.xpath.Arg: org.apache.xml.utils.QName getQName()>();

        $z0 = virtualinvoke $r9.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r11 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r10 = new org.apache.xpath.Arg;

        specialinvoke $r10.<org.apache.xpath.Arg: void <init>(org.apache.xml.utils.QName,org.apache.xpath.objects.XObject,boolean)>(r1, r2, 1);

        virtualinvoke $r11.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r10, i0);

        return;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r4 = new org.apache.xpath.Arg;

        specialinvoke $r4.<org.apache.xpath.Arg: void <init>(org.apache.xml.utils.QName,org.apache.xpath.objects.XObject,boolean)>(r1, r2, 1);

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return;
    }

    private void resetUserParameters()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0, $i1;
        org.apache.xpath.Arg r2;
        org.apache.xml.utils.QName r3;
        java.lang.String r4, $r9;
        java.util.Vector $r5, $r6, $r7;
        java.lang.Object $r8, $r12;
        org.apache.xpath.objects.XObject $r10;
        java.util.NoSuchElementException $r11;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

     label1:
        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        if $r5 != null goto label3;

     label2:
        return;

     label3:
        $r6 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $i1 = virtualinvoke $r6.<java.util.Vector: int size()>();

        i0 = -1 + $i1;

     label4:
        if i0 < 0 goto label8;

     label5:
        $r7 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r8 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r2 = (org.apache.xpath.Arg) $r8;

        r3 = virtualinvoke r2.<org.apache.xpath.Arg: org.apache.xml.utils.QName getQName()>();

        r4 = virtualinvoke r3.<org.apache.xml.utils.QName: java.lang.String getNamespace()>();

        $r9 = virtualinvoke r3.<org.apache.xml.utils.QName: java.lang.String getLocalPart()>();

        $r10 = virtualinvoke r2.<org.apache.xpath.Arg: org.apache.xpath.objects.XObject getVal()>();

        $r12 = virtualinvoke $r10.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>($r9, r4, $r12);

     label6:
        i0 = i0 + -1;

        goto label4;

     label7:
        $r11 := @caughtexception;

     label8:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label7;
        catch java.util.NoSuchElementException from label3 to label4 with label7;
        catch java.util.NoSuchElementException from label5 to label6 with label7;
    }

    public static void runTransformThread(java.lang.Runnable)
    {
        java.lang.Runnable r0;

        r0 := @parameter0: java.lang.Runnable;

        staticinvoke <org.apache.xml.utils.ThreadControllerWrapper: java.lang.Thread runThread(java.lang.Runnable,int)>(r0, -1);

        return;
    }

    private int transformToRTF(org.apache.xalan.templates.ElemTemplateElement, org.apache.xml.dtm.DTM) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xml.dtm.DTM r2;
        org.xml.sax.ContentHandler r3;
        org.apache.xml.serializer.SerializationHandler r4, r6;
        org.apache.xml.serializer.ToXMLSAXHandler r5, $r11;
        java.lang.Throwable r7, r9, $r14, $r15;
        org.xml.sax.SAXException r8, $r13;
        int i0;
        javax.xml.transform.TransformerException $r12;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter1: org.apache.xml.dtm.DTM;

        r3 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: org.xml.sax.ContentHandler getContentHandler()>();

        r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r11 = new org.apache.xml.serializer.ToXMLSAXHandler;

        specialinvoke $r11.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>()>();

        r5 = $r11;

        virtualinvoke r5.<org.apache.xml.serializer.ToSAXHandler: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

        virtualinvoke r5.<org.apache.xml.serializer.ToSAXHandler: void setTransformer(javax.xml.transform.Transformer)>(r0);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r5;

        r6 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

     label1:
        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: void startDocument()>();

        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

     label2:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r1, 1);

        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        i0 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getDocument()>();

     label3:
        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: void endDocument()>();

     label4:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r4;

        return i0;

     label5:
        $r14 := @caughtexception;

        r9 = $r14;

     label6:
        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: void endDocument()>();

        throw r9;

     label7:
        $r13 := @caughtexception;

        r8 = $r13;

     label8:
        $r12 = new javax.xml.transform.TransformerException;

        specialinvoke $r12.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r8);

        throw $r12;

     label9:
        $r15 := @caughtexception;

        r7 = $r15;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r4;

        throw r7;

        catch org.xml.sax.SAXException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch org.xml.sax.SAXException from label3 to label4 with label7;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch org.xml.sax.SAXException from label6 to label7 with label7;
        catch java.lang.Throwable from label6 to label7 with label9;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement, org.apache.xalan.templates.ElemTemplate, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xalan.templates.ElemTemplate r2, r9, r12;
        int i0, i2, i3, $i4, $i5, $i7;
        org.apache.xml.dtm.DTM r3;
        short s1;
        boolean z0, z1, $z2, $z3;
        java.lang.Throwable r4, r8, $r34, $r40;
        org.xml.sax.SAXException r5, $r36;
        org.apache.xpath.NodeSetDTM r6, $r22;
        org.apache.xpath.XPathContext r7, $r11, $r14, $r15, $r16, $r18, $r19, $r20, $r25, $r27, $r37, $r38, $r39;
        org.apache.xml.utils.QName r10;
        org.apache.xalan.templates.StylesheetRoot $r13, $r26, $r29, $r30, $r31;
        org.apache.xpath.VariableStack $r17, $r23, $r41;
        org.apache.xml.serializer.SerializationHandler $r21, $r24;
        org.apache.xml.dtm.DTMManager $r28;
        org.apache.xalan.templates.StylesheetComposed $r32, $r33;
        javax.xml.transform.TransformerException $r35;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter1: org.apache.xalan.templates.ElemTemplate;

        i0 := @parameter2: int;

        $r11 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        r3 = virtualinvoke $r11.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        s1 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i0);

        if r1 != null goto label06;

        z0 = 0;

     label01:
        if r2 == null goto label02;

        z1 = 0;

        if z0 == 0 goto label19;

     label02:
        if z0 == 0 goto label08;

        $r33 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        $i7 = virtualinvoke $r33.<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()>();

        i2 = -1 + $i7;

        $r32 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        i3 = virtualinvoke $r32.<org.apache.xalan.templates.StylesheetComposed: int getEndImportCountComposed()>();

     label03:
        if z0 == 0 goto label09;

        if i2 != -1 goto label09;

        r2 = null;

     label04:
        z1 = 0;

        if r2 != null goto label19;

        tableswitch(s1)
        {
            case 1: goto label18;
            case 2: goto label26;
            case 3: goto label26;
            case 4: goto label26;
            case 5: goto label05;
            case 6: goto label05;
            case 7: goto label05;
            case 8: goto label05;
            case 9: goto label27;
            case 10: goto label05;
            case 11: goto label18;
            default: goto label05;
        };

     label05:
        return 0;

     label06:
        $i4 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i4 != 72 goto label07;

        z0 = 1;

        goto label01;

     label07:
        z0 = 0;

        goto label01;

     label08:
        i2 = -1;

        i3 = 0;

        goto label03;

     label09:
        r7 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

     label10:
        virtualinvoke r7.<org.apache.xpath.XPathContext: void pushNamespaceContext(org.apache.xml.utils.PrefixResolver)>(r1);

        r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.QName getMode()>();

     label11:
        if z0 == 0 goto label15;

     label12:
        $r31 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $z3 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings>;

        r9 = virtualinvoke $r31.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)>(r7, i0, r10, i2, i3, $z3, r3);

     label13:
        r2 = r9;

     label14:
        virtualinvoke r7.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        goto label04;

     label15:
        $r13 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $z2 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings>;

        r12 = virtualinvoke $r13.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)>(r7, i0, r10, $z2, r3);

     label16:
        r2 = r12;

        goto label14;

     label17:
        $r34 := @caughtexception;

        r8 = $r34;

        virtualinvoke r7.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        throw r8;

     label18:
        $r29 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r2 = virtualinvoke $r29.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRule()>();

     label19:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        $r14 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r14.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushPairCurrentMatched(org.apache.xalan.templates.ElemTemplateElement,int)>(r2, i0);

     label20:
        if z0 != 0 goto label22;

     label21:
        $r22 = new org.apache.xpath.NodeSetDTM;

        $r27 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r28 = virtualinvoke $r27.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r22.<org.apache.xpath.NodeSetDTM: void <init>(int,org.apache.xml.dtm.DTMManager)>(i0, $r28);

        r6 = $r22;

        $r25 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r25.<org.apache.xpath.XPathContext: void pushContextNodeList(org.apache.xml.dtm.DTMIterator)>(r6);

     label22:
        if z1 == 0 goto label37;

        tableswitch(s1)
        {
            case 2: goto label35;
            case 3: goto label28;
            case 4: goto label28;
            default: goto label23;
        };

     label23:
        if z1 != 0 goto label24;

        $r19 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r23 = virtualinvoke $r19.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        virtualinvoke $r23.<org.apache.xpath.VariableStack: void unlink()>();

     label24:
        $r20 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r20.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        if z0 != 0 goto label25;

        $r18 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r18.<org.apache.xpath.XPathContext: void popContextNodeList()>();

     label25:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popCurrentMatched()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        return 1;

     label26:
        $r30 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r2 = virtualinvoke $r30.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultTextRule()>();

        z1 = 1;

        goto label19;

     label27:
        $r26 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r2 = virtualinvoke $r26.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRootRule()>();

        z1 = 0;

        goto label19;

     label28:
        $r24 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        staticinvoke <org.apache.xalan.transformer.ClonerToResultTree: void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)>(i0, s1, r3, $r24, 0);

     label29:
        goto label23;

     label30:
        $r36 := @caughtexception;

        r5 = $r36;

     label31:
        $r35 = new javax.xml.transform.TransformerException;

        specialinvoke $r35.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r5);

        throw $r35;

     label32:
        $r40 := @caughtexception;

        r4 = $r40;

        if z1 != 0 goto label33;

        $r37 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r41 = virtualinvoke $r37.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        virtualinvoke $r41.<org.apache.xpath.VariableStack: void unlink()>();

     label33:
        $r39 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r39.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        if z0 != 0 goto label34;

        $r38 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r38.<org.apache.xpath.XPathContext: void popContextNodeList()>();

     label34:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popCurrentMatched()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        throw r4;

     label35:
        $r21 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        interfaceinvoke r3.<org.apache.xml.dtm.DTM: void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)>(i0, $r21, 0);

     label36:
        goto label23;

     label37:
        $r16 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r16.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>(r2);

        $r15 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r17 = virtualinvoke $r15.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $i5 = r2.<org.apache.xalan.templates.ElemTemplate: int m_frameSize>;

        virtualinvoke $r17.<org.apache.xpath.VariableStack: int link(int)>($i5);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r2, 1);

     label38:
        goto label23;

        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch org.xml.sax.SAXException from label19 to label20 with label30;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch org.xml.sax.SAXException from label21 to label22 with label30;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch org.xml.sax.SAXException from label28 to label29 with label30;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Throwable from label31 to label32 with label32;
        catch org.xml.sax.SAXException from label35 to label36 with label30;
        catch java.lang.Throwable from label35 to label36 with label32;
        catch org.xml.sax.SAXException from label37 to label38 with label30;
        catch java.lang.Throwable from label37 to label38 with label32;
    }

    public void clearParameters()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Boolean r1;
        org.apache.xpath.VariableStack r2, $r4;
        java.lang.Throwable r3, $r6;
        org.apache.xpath.XPathContext $r5;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r1;

     label1:
        $r4 = new org.apache.xpath.VariableStack;

        specialinvoke $r4.<org.apache.xpath.VariableStack: void <init>()>();

        r2 = $r4;

        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r5.<org.apache.xpath.XPathContext: void setVarStack(org.apache.xpath.VariableStack)>(r2);

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.Result r1;
        org.apache.xalan.templates.OutputProperties $r2;
        org.apache.xml.serializer.SerializationHandler $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Result;

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()>();

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)>(r1, $r2);

        return $r3;
    }

    public org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result, org.apache.xalan.templates.OutputProperties) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.Result r1;
        org.apache.xalan.templates.OutputProperties r2;
        java.lang.Object[] r3;
        javax.xml.transform.stream.StreamResult r4;
        java.io.IOException r5, $r54;
        javax.xml.transform.TransformerException r6, $r28, $r31, $r53;
        org.apache.xml.serializer.SerializationHandler r7, r10;
        java.lang.String r8, r14, r15, r18, r22, $r24, $r29, $r30, $r34, $r35, $r38;
        java.io.FileOutputStream r9, $r36, $r37;
        org.apache.xalan.templates.StylesheetRoot r11, $r52;
        org.xml.sax.ContentHandler r12;
        org.xml.sax.ext.LexicalHandler r13;
        org.apache.xml.serializer.ToXMLSAXHandler r16, $r42, $r55;
        org.apache.xalan.transformer.XalanTransformState r17, $r47;
        org.w3c.dom.Node r19, r20;
        short s0;
        org.w3c.dom.Document r21;
        org.apache.xml.utils.DOMBuilder r23, $r50, $r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Class $r25;
        java.util.Properties $r26;
        org.apache.xml.serializer.Serializer $r27;
        java.io.Writer $r32, $r41;
        java.io.OutputStream $r33, $r39;
        int $i1, $i2;
        javax.xml.transform.sax.SAXResult $r40;
        org.apache.xml.serializer.ToSAXHandler $r44;
        java.lang.IllegalArgumentException $r45;
        javax.xml.transform.dom.DOMResult $r46, $r49, $r51;
        org.apache.xalan.transformer.TransformerClient $r48;
        org.w3c.dom.DocumentFragment $r56;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Result;

        r2 := @parameter1: org.apache.xalan.templates.OutputProperties;

        $z1 = r1 instanceof javax.xml.transform.dom.DOMResult;

        if $z1 == 0 goto label08;

        $r46 = (javax.xml.transform.dom.DOMResult) r1;

        r20 = virtualinvoke $r46.<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()>();

        $r51 = (javax.xml.transform.dom.DOMResult) r1;

        r19 = virtualinvoke $r51.<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNextSibling()>();

        if r20 == null goto label06;

        s0 = interfaceinvoke r20.<org.w3c.dom.Node: short getNodeType()>();

        if 9 != s0 goto label05;

        r21 = (org.w3c.dom.Document) r20;

     label01:
        if 11 != s0 goto label07;

        $r57 = new org.apache.xml.utils.DOMBuilder;

        $r56 = (org.w3c.dom.DocumentFragment) r20;

        specialinvoke $r57.<org.apache.xml.utils.DOMBuilder: void <init>(org.w3c.dom.Document,org.w3c.dom.DocumentFragment)>(r21, $r56);

        r23 = $r57;

     label02:
        if r19 == null goto label03;

        virtualinvoke r23.<org.apache.xml.utils.DOMBuilder: void setNextSibling(org.w3c.dom.Node)>(r19);

     label03:
        r22 = virtualinvoke r2.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("encoding");

        $r55 = new org.apache.xml.serializer.ToXMLSAXHandler;

        specialinvoke $r55.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,java.lang.String)>(r23, r23, r22);

        r10 = $r55;

     label04:
        interfaceinvoke r10.<org.apache.xml.serializer.SerializationHandler: void setTransformer(javax.xml.transform.Transformer)>(r0);

        r11 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        interfaceinvoke r10.<org.apache.xml.serializer.SerializationHandler: void setSourceLocator(javax.xml.transform.SourceLocator)>(r11);

        return r10;

     label05:
        r21 = interfaceinvoke r20.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        goto label01;

     label06:
        $r52 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $z7 = virtualinvoke $r52.<org.apache.xalan.templates.StylesheetRoot: boolean isSecureProcessing()>();

        r21 = staticinvoke <org.apache.xml.utils.DOMHelper: org.w3c.dom.Document createDocument(boolean)>($z7);

        r20 = r21;

        s0 = interfaceinvoke r20.<org.w3c.dom.Node: short getNodeType()>();

        $r49 = (javax.xml.transform.dom.DOMResult) r1;

        virtualinvoke $r49.<javax.xml.transform.dom.DOMResult: void setNode(org.w3c.dom.Node)>(r20);

        goto label01;

     label07:
        $r50 = new org.apache.xml.utils.DOMBuilder;

        specialinvoke $r50.<org.apache.xml.utils.DOMBuilder: void <init>(org.w3c.dom.Document,org.w3c.dom.Node)>(r21, r20);

        r23 = $r50;

        goto label02;

     label08:
        $z0 = r1 instanceof javax.xml.transform.sax.SAXResult;

        if $z0 == 0 goto label14;

        $r40 = (javax.xml.transform.sax.SAXResult) r1;

        r12 = virtualinvoke $r40.<javax.xml.transform.sax.SAXResult: org.xml.sax.ContentHandler getHandler()>();

        if r12 != null goto label09;

        $r45 = new java.lang.IllegalArgumentException;

        specialinvoke $r45.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("handler can not be null for a SAXResult");

        throw $r45;

     label09:
        $z5 = r12 instanceof org.xml.sax.ext.LexicalHandler;

        if $z5 == 0 goto label13;

        r13 = (org.xml.sax.ext.LexicalHandler) r12;

     label10:
        r14 = virtualinvoke r2.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("encoding");

        virtualinvoke r2.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("method");

        $r42 = new org.apache.xml.serializer.ToXMLSAXHandler;

        specialinvoke $r42.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,java.lang.String)>(r12, r13, r14);

        r16 = $r42;

        virtualinvoke r16.<org.apache.xml.serializer.ToXMLSAXHandler: void setShouldOutputNSAttr(boolean)>(0);

        r10 = r16;

        r15 = virtualinvoke r2.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("doctype-public");

        r18 = virtualinvoke r2.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("doctype-system");

        if r18 == null goto label11;

        interfaceinvoke r10.<org.apache.xml.serializer.SerializationHandler: void setDoctypeSystem(java.lang.String)>(r18);

     label11:
        if r15 == null goto label12;

        interfaceinvoke r10.<org.apache.xml.serializer.SerializationHandler: void setDoctypePublic(java.lang.String)>(r15);

     label12:
        $z6 = r12 instanceof org.apache.xalan.transformer.TransformerClient;

        if $z6 == 0 goto label04;

        $r47 = new org.apache.xalan.transformer.XalanTransformState;

        specialinvoke $r47.<org.apache.xalan.transformer.XalanTransformState: void <init>()>();

        r17 = $r47;

        $r48 = (org.apache.xalan.transformer.TransformerClient) r12;

        interfaceinvoke $r48.<org.apache.xalan.transformer.TransformerClient: void setTransformState(org.apache.xalan.transformer.TransformState)>(r17);

        $r44 = (org.apache.xml.serializer.ToSAXHandler) r10;

        virtualinvoke $r44.<org.apache.xml.serializer.ToSAXHandler: void setTransformState(org.apache.xml.serializer.TransformStateSetter)>(r17);

        goto label04;

     label13:
        r13 = null;

        goto label10;

     label14:
        $z2 = r1 instanceof javax.xml.transform.stream.StreamResult;

        if $z2 == 0 goto label30;

        r4 = (javax.xml.transform.stream.StreamResult) r1;

     label15:
        $r26 = virtualinvoke r2.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        $r27 = staticinvoke <org.apache.xml.serializer.SerializerFactory: org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)>($r26);

        r7 = (org.apache.xml.serializer.SerializationHandler) $r27;

        $r32 = virtualinvoke r4.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

        if $r32 == null goto label17;

        $r41 = virtualinvoke r4.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

        interfaceinvoke r7.<org.apache.xml.serializer.SerializationHandler: void setWriter(java.io.Writer)>($r41);

     label16:
        goto label31;

     label17:
        $r33 = virtualinvoke r4.<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>();

        if $r33 == null goto label20;

        $r39 = virtualinvoke r4.<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>();

        interfaceinvoke r7.<org.apache.xml.serializer.SerializationHandler: void setOutputStream(java.io.OutputStream)>($r39);

     label18:
        goto label31;

     label19:
        $r54 := @caughtexception;

        r5 = $r54;

        $r53 = new javax.xml.transform.TransformerException;

        specialinvoke $r53.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r5);

        r6 = $r53;

        throw r6;

     label20:
        $r30 = virtualinvoke r4.<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()>();

        if $r30 == null goto label29;

        r8 = virtualinvoke r4.<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()>();

        $z3 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("file:///");

        if $z3 == 0 goto label25;

        $r38 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(8);

        $i2 = virtualinvoke $r38.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i2 <= 0 goto label23;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(8);

     label21:
        $r36 = new java.io.FileOutputStream;

        specialinvoke $r36.<java.io.FileOutputStream: void <init>(java.lang.String)>(r8);

        r9 = $r36;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream> = r9;

        $r37 = r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream>;

        interfaceinvoke r7.<org.apache.xml.serializer.SerializationHandler: void setOutputStream(java.io.OutputStream)>($r37);

     label22:
        goto label31;

     label23:
        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(7);

     label24:
        goto label21;

     label25:
        $z4 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("file:/");

        if $z4 == 0 goto label21;

        $r35 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(6);

        $i1 = virtualinvoke $r35.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i1 <= 0 goto label27;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(6);

     label26:
        goto label21;

     label27:
        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(5);

     label28:
        goto label21;

     label29:
        $r31 = new javax.xml.transform.TransformerException;

        $r34 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_OUTPUT_SPECIFIED", null);

        specialinvoke $r31.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r34);

        throw $r31;

     label30:
        r3 = newarray (java.lang.Object)[1];

        $r25 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r25.<java.lang.Class: java.lang.String getName()>();

        r3[0] = $r24;

        $r28 = new javax.xml.transform.TransformerException;

        $r29 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_TRANSFORM_TO_RESULT_TYPE", r3);

        specialinvoke $r28.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label31:
        r10 = r7;

        goto label04;

        catch java.io.IOException from label15 to label16 with label19;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label20 to label21 with label19;
        catch java.io.IOException from label21 to label22 with label19;
        catch java.io.IOException from label23 to label24 with label19;
        catch java.io.IOException from label25 to label26 with label19;
        catch java.io.IOException from label27 to label28 with label19;
        catch java.io.IOException from label29 to label30 with label19;
    }

    public boolean currentFuncResultSeen()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.ObjectStack $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult>;

        $z0 = virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: boolean empty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult>;

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object peek()>();

        if $r3 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean currentTemplateRuleIsNull()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.BoolStack $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull>;

        $z0 = virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull>;

        $z1 = virtualinvoke $r2.<org.apache.xml.utils.BoolStack: boolean peek()>();

        if $z1 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean elementAvailable(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, r2;
        org.apache.xalan.extensions.ExtensionsTable $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $z0 = virtualinvoke $r3.<org.apache.xalan.extensions.ExtensionsTable: boolean elementAvailable(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;
    }

    public void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement, org.w3c.dom.Node, org.apache.xml.utils.QName, org.xml.sax.ContentHandler) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.w3c.dom.Node r2;
        org.apache.xml.utils.QName r3;
        org.xml.sax.ContentHandler r4;
        org.apache.xpath.XPathContext r5;
        java.lang.Throwable r6, $r7;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: org.apache.xml.utils.QName;

        r4 := @parameter3: org.xml.sax.ContentHandler;

        r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        if r3 == null goto label2;

     label1:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushMode(org.apache.xml.utils.QName)>(r3);

     label2:
        $i0 = virtualinvoke r5.<org.apache.xpath.XPathContext: int getDTMHandleFromNode(org.w3c.dom.Node)>(r2);

        virtualinvoke r5.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>($i0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)>(r1, r4);

     label3:
        virtualinvoke r5.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        if r3 == null goto label4;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popMode()>();

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r6 = $r7;

        virtualinvoke r5.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        if r3 == null goto label6;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popMode()>();

     label6:
        throw r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement, org.xml.sax.ContentHandler) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.xml.sax.ContentHandler r2;
        org.apache.xml.serializer.SerializationHandler r3, $r10;
        org.xml.sax.SAXException r4, $r11;
        java.lang.Throwable r5, $r13;
        javax.xml.transform.TransformerException r6, $r12, $r14;
        boolean z0;
        org.xml.sax.ext.LexicalHandler r7;
        org.apache.xml.serializer.ToXMLSAXHandler $r8;
        java.lang.String $r9;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter1: org.xml.sax.ContentHandler;

        r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

     label01:
        interfaceinvoke r3.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        z0 = r2 instanceof org.xml.sax.ext.LexicalHandler;

     label02:
        r7 = null;

        if z0 == 0 goto label04;

     label03:
        r7 = (org.xml.sax.ext.LexicalHandler) r2;

     label04:
        $r8 = new org.apache.xml.serializer.ToXMLSAXHandler;

        $r9 = interfaceinvoke r3.<org.apache.xml.serializer.SerializationHandler: java.lang.String getEncoding()>();

        specialinvoke $r8.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,java.lang.String)>(r2, r7, $r9);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r8;

        $r10 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r10.<org.apache.xml.serializer.SerializationHandler: void setTransformer(javax.xml.transform.Transformer)>(r0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r1, 1);

     label05:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r3;

        return;

     label06:
        $r14 := @caughtexception;

        r6 = $r14;

     label07:
        throw r6;

     label08:
        $r13 := @caughtexception;

        r5 = $r13;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r3;

        throw r5;

     label09:
        $r11 := @caughtexception;

        r4 = $r11;

     label10:
        $r12 = new javax.xml.transform.TransformerException;

        specialinvoke $r12.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r4);

     label11:
        throw $r12;

        catch javax.xml.transform.TransformerException from label01 to label02 with label06;
        catch org.xml.sax.SAXException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch javax.xml.transform.TransformerException from label03 to label04 with label06;
        catch org.xml.sax.SAXException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch javax.xml.transform.TransformerException from label04 to label05 with label06;
        catch org.xml.sax.SAXException from label04 to label05 with label09;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label10 to label11 with label08;
    }

    public void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement, boolean) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1, r2;
        boolean z0, $z1, $z2;
        org.apache.xpath.XPathContext r3;
        int i0, $i1, $i2;
        java.lang.Throwable r4, r8, $r22, $r23;
        java.lang.RuntimeException r5, $r17;
        javax.xml.transform.TransformerException r6, $r21, $r25;
        char[] r7;
        org.xml.sax.SAXException r9, $r24;
        org.apache.xml.utils.ObjectStack $r10, $r11, $r12, $r14, $r19;
        org.apache.xalan.templates.ElemTextLiteral $r16;
        org.apache.xml.serializer.SerializationHandler $r18;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if r2 != null goto label01;

        return;

     label01:
        $z1 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: boolean hasTextLitOnly()>();

        if $z1 == 0 goto label07;

        $z2 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_optimizer>;

        if $z2 == 0 goto label07;

        $r16 = (org.apache.xalan.templates.ElemTextLiteral) r2;

        r7 = virtualinvoke $r16.<org.apache.xalan.templates.ElemTextLiteral: char[] getChars()>();

     label02:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        $r18 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $i2 = lengthof r7;

        interfaceinvoke $r18.<org.apache.xml.serializer.SerializationHandler: void characters(char[],int,int)>(r7, 0, $i2);

     label03:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        return;

     label04:
        $r24 := @caughtexception;

        r9 = $r24;

     label05:
        $r25 = new javax.xml.transform.TransformerException;

        specialinvoke $r25.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r9);

        throw $r25;

     label06:
        $r23 := @caughtexception;

        r8 = $r23;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        throw r8;

     label07:
        r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke r3.<org.apache.xpath.XPathContext: void pushSAXLocatorNull()>();

        $r10 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        i0 = virtualinvoke $r10.<org.apache.xml.utils.ObjectStack: int size()>();

        $r11 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r11.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(null);

     label08:
        if r2 == null goto label17;

        if z0 != 0 goto label12;

     label09:
        $i1 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i1 != 48 goto label12;

     label10:
        r2 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

     label11:
        goto label08;

     label12:
        virtualinvoke r3.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>(r2);

        $r14 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r14.<org.apache.xml.utils.ObjectStack: void setElementAt(java.lang.Object,int)>(r2, i0);

        virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: void execute(org.apache.xalan.transformer.TransformerImpl)>(r0);

     label13:
        goto label10;

     label14:
        $r17 := @caughtexception;

        r5 = $r17;

     label15:
        $r21 = new javax.xml.transform.TransformerException;

        specialinvoke $r21.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r5);

        r6 = $r21;

        virtualinvoke r6.<javax.xml.transform.TransformerException: void setLocator(javax.xml.transform.SourceLocator)>(r2);

        throw r6;

     label16:
        $r22 := @caughtexception;

        r4 = $r22;

        $r19 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r19.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        virtualinvoke r3.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        throw r4;

     label17:
        $r12 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r12.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        virtualinvoke r3.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        return;

        catch org.xml.sax.SAXException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.RuntimeException from label09 to label10 with label14;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.RuntimeException from label10 to label11 with label14;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.RuntimeException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label15 to label16 with label16;
    }

    public java.lang.Object extFunction(java.lang.String, java.lang.String, java.util.Vector, java.lang.Object) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, r2;
        java.util.Vector r3;
        java.lang.Object r4, $r8;
        org.apache.xalan.extensions.ExtensionsTable $r5;
        org.apache.xpath.XPathContext $r6;
        org.apache.xalan.extensions.ExpressionContext $r7;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Vector;

        r4 := @parameter3: java.lang.Object;

        $r5 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $r6 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r7 = virtualinvoke $r6.<org.apache.xpath.XPathContext: org.apache.xalan.extensions.ExpressionContext getExpressionContext()>();

        $r8 = virtualinvoke $r5.<org.apache.xalan.extensions.ExtensionsTable: java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)>(r1, r2, r3, r4, $r7);

        return $r8;
    }

    public java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction, java.util.Vector) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xpath.functions.FuncExtFunction r1;
        java.util.Vector r2;
        org.apache.xalan.extensions.ExtensionsTable $r3;
        org.apache.xpath.XPathContext $r4;
        org.apache.xalan.extensions.ExpressionContext $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xpath.functions.FuncExtFunction;

        r2 := @parameter1: java.util.Vector;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $r4 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xalan.extensions.ExpressionContext getExpressionContext()>();

        $r6 = virtualinvoke $r3.<org.apache.xalan.extensions.ExtensionsTable: java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)>(r1, r2, $r5);

        return $r6;
    }

    public void fireGenerateEvent(int)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        return;
    }

    public void fireGenerateEvent(int, java.lang.String)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void fireGenerateEvent(int, java.lang.String, java.lang.String)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public void fireGenerateEvent(int, java.lang.String, org.xml.sax.Attributes)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0;
        java.lang.String r1;
        org.xml.sax.Attributes r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.xml.sax.Attributes;

        return;
    }

    public void fireGenerateEvent(int, char[], int, int)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0, i1, i2;
        char[] r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: char[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public boolean functionAvailable(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, r2;
        org.apache.xalan.extensions.ExtensionsTable $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $z0 = virtualinvoke $r3.<org.apache.xalan.extensions.ExtensionsTable: boolean functionAvailable(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_outputContentHandler>;

        return $r1;
    }

    public org.apache.xml.dtm.DTMIterator getContextNodeList()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.dtm.DTMIterator r2, r3;
        org.apache.xpath.XPathContext $r4;
        java.lang.CloneNotSupportedException $r5;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

     label1:
        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        r2 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMIterator getContextNodeList()>();

     label2:
        if r2 != null goto label3;

        return null;

     label3:
        r3 = interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTMIterator cloneWithReset()>();

     label4:
        return r3;

     label5:
        $r5 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label5;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label5;
    }

    public org.apache.xalan.transformer.CountersTable getCountersTable()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.transformer.CountersTable $r1, $r2, $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xalan.transformer.CountersTable;

        specialinvoke $r3.<org.apache.xalan.transformer.CountersTable: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable> = $r3;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable>;

        return $r2;
    }

    public org.apache.xalan.templates.ElemTemplateElement getCurrentElement()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.ObjectStack $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        org.apache.xalan.templates.ElemTemplateElement $r4;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object peek()>();

        $r4 = (org.apache.xalan.templates.ElemTemplateElement) $r3;

        return $r4;

     label1:
        return null;
    }

    public int getCurrentNode()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xpath.XPathContext $r1;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $i0 = virtualinvoke $r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        return $i0;
    }

    public org.apache.xalan.templates.ElemTemplate getCurrentTemplate()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xalan.templates.ElemTemplate $r2;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplateElement getCurrentElement()>();

     label1:
        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 == 19 goto label2;

        r1 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

        goto label1;

     label2:
        $r2 = (org.apache.xalan.templates.ElemTemplate) r1;

        return $r2;
    }

    public org.apache.xml.utils.ObjectStack getCurrentTemplateElements()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.ObjectStack $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        return $r1;
    }

    public int getCurrentTemplateElementsCount()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.ObjectStack $r1;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: int size()>();

        return $i0;
    }

    public javax.xml.transform.ErrorListener getErrorListener()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.ErrorListener $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        return $r1;
    }

    public java.lang.Exception getExceptionThrown()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Exception $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception m_exceptionThrown>;

        return $r1;
    }

    public org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.extensions.ExtensionsTable $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable m_extensionsTable>;

        return $r1;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;
        org.xml.sax.SAXNotRecognizedException $r4;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/trax/features/sax/input";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r3 = "http://xml.org/trax/features/dom/input";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r4 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r4.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r1);

        throw $r4;
    }

    public boolean getIncremental()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_incremental>;

        return $z0;
    }

    public org.xml.sax.ContentHandler getInputContentHandler()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler(boolean)>(0);

        return $r1;
    }

    public org.xml.sax.ContentHandler getInputContentHandler(boolean)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;
        org.xml.sax.ContentHandler $r1, $r2;
        org.apache.xalan.transformer.TransformerHandlerImpl $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xalan.transformer.TransformerHandlerImpl;

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.String m_urlOfSource>;

        specialinvoke $r3.<org.apache.xalan.transformer.TransformerHandlerImpl: void <init>(org.apache.xalan.transformer.TransformerImpl,boolean,java.lang.String)>(r0, z0, $r4);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler> = $r3;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        return $r2;
    }

    public org.apache.xalan.transformer.KeyManager getKeyManager()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.transformer.KeyManager $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager m_keyManager>;

        return $r1;
    }

    public int getMatchedNode()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.NodeVector $r1;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.NodeVector: int peepTail()>();

        return $i0;
    }

    public org.apache.xalan.templates.ElemTemplate getMatchedTemplate()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.util.Stack $r1;
        java.lang.Object $r2;
        org.apache.xalan.templates.ElemTemplate $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.xalan.templates.ElemTemplate) $r2;

        return $r3;
    }

    public org.apache.xml.utils.QName getMode()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.util.Stack $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.apache.xml.utils.QName $r4;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.xml.utils.QName) $r3;

        return $r4;
    }

    public org.apache.xalan.transformer.MsgMgr getMsgMgr()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.transformer.MsgMgr $r1, $r2, $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr m_msgMgr>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xalan.transformer.MsgMgr;

        specialinvoke $r3.<org.apache.xalan.transformer.MsgMgr: void <init>(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr m_msgMgr> = $r3;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr m_msgMgr>;

        return $r2;
    }

    public boolean getOptimize()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_optimizer>;

        return $z0;
    }

    public org.apache.xalan.templates.OutputProperties getOutputFormat()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.OutputProperties $r1, $r2, $r4;
        org.apache.xalan.templates.StylesheetRoot $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        $r4 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.OutputProperties getOutputComposed()>();

        return $r4;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        return $r2;
    }

    public java.util.Properties getOutputProperties()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.OutputProperties $r1;
        java.util.Properties $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()>();

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.Object clone()>();

        $r4 = (java.util.Properties) $r3;

        return $r4;
    }

    public java.lang.String getOutputProperty(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, r2, $r6;
        org.apache.xalan.templates.OutputProperties $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object[] $r5;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()>();

        r2 = virtualinvoke $r3.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>(r1);

        if r2 != null goto label1;

        $z0 = staticinvoke <org.apache.xalan.templates.OutputProperties: boolean isLegalPropertyKey(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        $r6 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_OUTPUT_PROPERTY_NOT_RECOGNIZED", $r5);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        return r2;
    }

    public java.lang.String getOutputPropertyNoDefault(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, r2, $r8;
        org.apache.xalan.templates.OutputProperties $r3;
        java.util.Properties $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        java.lang.Object[] $r7;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()>();

        $r4 = virtualinvoke $r3.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.String) $r5;

        if r2 != null goto label1;

        $z0 = staticinvoke <org.apache.xalan.templates.OutputProperties: boolean isLegalPropertyKey(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r1;

        $r8 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_OUTPUT_PROPERTY_NOT_RECOGNIZED", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label1:
        return r2;
    }

    public java.lang.Object getParameter(java.lang.String)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1;
        org.apache.xml.utils.QName r3, $r10;
        int i0, $i1;
        org.apache.xpath.Arg r4;
        java.lang.Object r5, $r9;
        java.util.Vector $r6, $r7, $r8;
        boolean $z0;
        org.apache.xpath.objects.XObject $r11;
        java.util.NoSuchElementException $r12;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

     label1:
        r3 = staticinvoke <org.apache.xml.utils.QName: org.apache.xml.utils.QName getQNameFromString(java.lang.String)>(r1);

        $r6 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        if $r6 != null goto label3;

     label2:
        return null;

     label3:
        $r7 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $i1 = virtualinvoke $r7.<java.util.Vector: int size()>();

        i0 = -1 + $i1;

     label4:
        if i0 < 0 goto label9;

     label5:
        $r8 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r9 = virtualinvoke $r8.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r4 = (org.apache.xpath.Arg) $r9;

        $r10 = virtualinvoke r4.<org.apache.xpath.Arg: org.apache.xml.utils.QName getQName()>();

        $z0 = virtualinvoke $r10.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label7;

        $r11 = virtualinvoke r4.<org.apache.xpath.Arg: org.apache.xpath.objects.XObject getVal()>();

        r5 = virtualinvoke $r11.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

     label6:
        return r5;

     label7:
        i0 = i0 + -1;

        goto label4;

     label8:
        $r12 := @caughtexception;

     label9:
        return null;

        catch java.util.NoSuchElementException from label1 to label2 with label8;
        catch java.util.NoSuchElementException from label3 to label4 with label8;
        catch java.util.NoSuchElementException from label5 to label6 with label8;
    }

    public boolean getQuietConflictWarnings()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings>;

        return $z0;
    }

    public org.apache.xml.serializer.SerializationHandler getResultTreeHandler()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        return $r1;
    }

    public org.apache.xml.serializer.SerializationHandler getSerializationHandler()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        return $r1;
    }

    public short getShouldStripSpace(int, org.apache.xml.dtm.DTM)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0;
        org.apache.xml.dtm.DTM r1;
        org.apache.xalan.templates.WhiteSpaceInfo r3;
        boolean z0;
        org.apache.xpath.XPathContext $r4;
        org.apache.xalan.templates.StylesheetRoot $r5;
        javax.xml.transform.TransformerException $r6;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xml.dtm.DTM;

     label1:
        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        r3 = virtualinvoke $r5.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.WhiteSpaceInfo getWhiteSpaceInfo(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)>($r4, i0, r1);

     label2:
        if r3 != null goto label3;

        return 3;

     label3:
        z0 = virtualinvoke r3.<org.apache.xalan.templates.WhiteSpaceInfo: boolean getShouldStripSpace()>();

     label4:
        if z0 == 0 goto label5;

        return 2;

     label5:
        return 1;

     label6:
        $r6 := @caughtexception;

        return 3;

        catch javax.xml.transform.TransformerException from label1 to label2 with label6;
        catch javax.xml.transform.TransformerException from label3 to label4 with label6;
    }

    public boolean getSource_location()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_source_location>;

        return $z0;
    }

    public final org.apache.xalan.templates.StylesheetRoot getStylesheet()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.StylesheetRoot $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        return $r1;
    }

    public java.lang.Thread getTransformThread()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Thread $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread>;

        return $r1;
    }

    public javax.xml.transform.Transformer getTransformer()
    {
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        return r0;
    }

    public javax.xml.transform.URIResolver getURIResolver()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xpath.XPathContext $r1;
        org.apache.xpath.SourceTreeManager $r2;
        javax.xml.transform.URIResolver $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()>();

        $r3 = virtualinvoke $r2.<org.apache.xpath.SourceTreeManager: javax.xml.transform.URIResolver getURIResolver()>();

        return $r3;
    }

    public final org.apache.xpath.XPathContext getXPathContext()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xpath.XPathContext $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        return $r1;
    }

    public boolean hasTraceListeners()
    {
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        return 0;
    }

    public boolean hasTransformThreadErrorCatcher()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher>;

        return $z0;
    }

    public void init(org.apache.xml.serializer.ToXMLSAXHandler, javax.xml.transform.Transformer, org.xml.sax.ContentHandler)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.ToXMLSAXHandler r1;
        javax.xml.transform.Transformer r2;
        org.xml.sax.ContentHandler r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xml.serializer.ToXMLSAXHandler;

        r2 := @parameter1: javax.xml.transform.Transformer;

        r3 := @parameter2: org.xml.sax.ContentHandler;

        virtualinvoke r1.<org.apache.xml.serializer.ToXMLSAXHandler: void setTransformer(javax.xml.transform.Transformer)>(r2);

        virtualinvoke r1.<org.apache.xml.serializer.ToXMLSAXHandler: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

        return;
    }

    public boolean isRecursiveAttrSet(org.apache.xalan.templates.ElemAttributeSet)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemAttributeSet r1;
        java.util.Stack $r2, $r3, $r4, $r5;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemAttributeSet;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        if $r2 != null goto label1;

        $r5 = new java.util.Stack;

        specialinvoke $r5.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack> = $r5;

     label1:
        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        $z0 = virtualinvoke $r3.<java.util.Stack: boolean empty()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        $i0 = virtualinvoke $r4.<java.util.Stack: int search(java.lang.Object)>(r1);

        if $i0 <= -1 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.Object popCurrentFuncResult()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.ObjectStack $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        return $r2;
    }

    public void popCurrentMatched()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.util.Stack $r1;
        org.apache.xml.utils.NodeVector $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes>;

        virtualinvoke $r3.<org.apache.xml.utils.NodeVector: int pop()>();

        return;
    }

    public void popCurrentTemplateRuleIsNull()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean pop()>();

        return;
    }

    public void popElemAttributeSet()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void popElemTemplateElement()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.ObjectStack $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        return;
    }

    public void popMode()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    void postExceptionFromThread(java.lang.Exception)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Exception r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Exception;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception m_exceptionThrown> = r1;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.Vector processSortKeys(org.apache.xalan.templates.ElemForEach, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemForEach r1;
        int i0, i1, i2, $i3;
        org.apache.xpath.XPathContext r2;
        java.util.Vector r3, $r18;
        org.apache.xalan.templates.ElemSort r4;
        java.lang.String r5, r6, r7, r9;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.xalan.templates.AVT r8, $r10, $r11, $r12, $r20;
        org.apache.xalan.transformer.NodeSortKey $r13;
        org.apache.xpath.XPath $r14;
        java.lang.Object[] $r15, $r16, $r17;
        java.io.PrintStream $r19;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemForEach;

        i0 := @parameter1: int;

        r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        i1 = virtualinvoke r1.<org.apache.xalan.templates.ElemForEach: int getSortElemCount()>();

        r3 = null;

        if i1 <= 0 goto label01;

        $r18 = new java.util.Vector;

        specialinvoke $r18.<java.util.Vector: void <init>()>();

        r3 = $r18;

     label01:
        i2 = 0;

     label02:
        if i2 >= i1 goto label16;

        r4 = virtualinvoke r1.<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemSort getSortElem(int)>(i2);

        $r11 = virtualinvoke r4.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getLang()>();

        if $r11 == null goto label10;

        $r20 = virtualinvoke r4.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getLang()>();

        r5 = virtualinvoke $r20.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i0, r1);

     label03:
        $r10 = virtualinvoke r4.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getDataType()>();

        r6 = virtualinvoke $r10.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i0, r1);

        $i3 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i3 < 0 goto label11;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("TODO: Need to write the hooks for QNAME sort data type");

     label04:
        if r6 == null goto label12;

        $z11 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("number");

        if $z11 == 0 goto label12;

        z0 = 1;

     label05:
        $r12 = virtualinvoke r4.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getOrder()>();

        r7 = virtualinvoke $r12.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i0, r1);

        $z4 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ascending");

        if $z4 != 0 goto label06;

        $z8 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("descending");

        if $z8 != 0 goto label06;

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = "order";

        $r17[1] = r7;

        virtualinvoke r1.<org.apache.xalan.templates.ElemForEach: void error(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r17);

     label06:
        if r7 == null goto label13;

        $z7 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("descending");

        if $z7 == 0 goto label13;

        z1 = 1;

     label07:
        r8 = virtualinvoke r4.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getCaseOrder()>();

        if r8 == null goto label15;

        r9 = virtualinvoke r8.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i0, r1);

        $z6 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("upper-first");

        if $z6 != 0 goto label08;

        $z9 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lower-first");

        if $z9 != 0 goto label08;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = "case-order";

        $r15[1] = r9;

        virtualinvoke r1.<org.apache.xalan.templates.ElemForEach: void error(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r15);

     label08:
        if r9 == null goto label14;

        $z5 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("upper-first");

        if $z5 == 0 goto label14;

        z2 = 1;

     label09:
        $r13 = new org.apache.xalan.transformer.NodeSortKey;

        $r14 = virtualinvoke r4.<org.apache.xalan.templates.ElemSort: org.apache.xpath.XPath getSelect()>();

        specialinvoke $r13.<org.apache.xalan.transformer.NodeSortKey: void <init>(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.XPath,boolean,boolean,java.lang.String,boolean,org.apache.xml.utils.PrefixResolver)>(r0, $r14, z0, z1, r5, z2, r1);

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        i2 = i2 + 1;

        goto label02;

     label10:
        r5 = null;

        goto label03;

     label11:
        $z3 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("text");

        if $z3 != 0 goto label04;

        $z10 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("number");

        if $z10 != 0 goto label04;

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = "data-type";

        $r16[1] = r6;

        virtualinvoke r1.<org.apache.xalan.templates.ElemForEach: void error(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r16);

        goto label04;

     label12:
        z0 = 0;

        goto label05;

     label13:
        z1 = 0;

        goto label07;

     label14:
        z2 = 0;

        goto label09;

     label15:
        z2 = 0;

        goto label09;

     label16:
        return r3;
    }

    public void pushCurrentFuncResult(java.lang.Object)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Object r1;
        org.apache.xml.utils.ObjectStack $r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public void pushCurrentTemplateRuleIsNull(boolean)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean push(boolean)>(z0);

        return;
    }

    public void pushElemAttributeSet(org.apache.xalan.templates.ElemAttributeSet)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemAttributeSet r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemAttributeSet;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xml.utils.ObjectStack $r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    protected void pushGlobalVars(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0, i1, $i3;
        org.apache.xpath.VariableStack r1;
        java.util.Vector r2;
        org.apache.xalan.templates.XUnresolvedVariable r3, $r6;
        org.apache.xpath.XPathContext $r4;
        org.apache.xalan.templates.StylesheetRoot $r5;
        java.lang.Object $r7;
        org.apache.xalan.templates.ElemVariable $r8;
        org.apache.xpath.objects.XObject $r9;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        r1 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $r5 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        r2 = virtualinvoke $r5.<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getVariablesAndParamsComposed()>();

        i1 = virtualinvoke r2.<java.util.Vector: int size()>();

        virtualinvoke r1.<org.apache.xpath.VariableStack: int link(int)>(i1);

     label1:
        i1 = i1 + -1;

        if i1 < 0 goto label2;

        $r6 = new org.apache.xalan.templates.XUnresolvedVariable;

        $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r8 = (org.apache.xalan.templates.ElemVariable) $r7;

        $i3 = virtualinvoke r1.<org.apache.xpath.VariableStack: int getStackFrame()>();

        specialinvoke $r6.<org.apache.xalan.templates.XUnresolvedVariable: void <init>(org.apache.xalan.templates.ElemVariable,int,org.apache.xalan.transformer.TransformerImpl,int,int,boolean)>($r8, i0, r0, $i3, 0, 1);

        r3 = $r6;

        $r9 = virtualinvoke r1.<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject elementAt(int)>(i1);

        if $r9 != null goto label1;

        virtualinvoke r1.<org.apache.xpath.VariableStack: void setGlobalVariable(int,org.apache.xpath.objects.XObject)>(i1, r3);

        goto label1;

     label2:
        return;
    }

    public void pushMode(org.apache.xml.utils.QName)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.QName r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public void pushPairCurrentMatched(org.apache.xalan.templates.ElemTemplateElement, int)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        int i0;
        java.util.Stack $r2;
        org.apache.xml.utils.NodeVector $r4;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes>;

        virtualinvoke $r4.<org.apache.xml.utils.NodeVector: void push(int)>(i0);

        return;
    }

    public void reset()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0, $z1;
        java.io.FileOutputStream $r2, $r13;
        org.apache.xpath.XPathContext $r3, $r4, $r11;
        org.apache.xpath.VariableStack $r5;
        org.apache.xml.utils.ObjectStack $r6;
        java.util.Stack $r7;
        org.apache.xml.utils.NodeVector $r8;
        org.apache.xalan.transformer.KeyManager $r9;
        org.apache.xml.utils.BoolStack $r10;
        org.apache.xpath.SourceTreeManager $r12;
        java.io.IOException $r14;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset>;

        if $z0 != 0 goto label3;

        $z1 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_shouldReset>;

        if $z1 == 0 goto label3;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset> = 1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream>;

        if $r2 == null goto label2;

     label1:
        $r13 = r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream>;

        virtualinvoke $r13.<java.io.FileOutputStream: void close()>();

     label2:
        r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable> = null;

        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r3.<org.apache.xpath.XPathContext: void reset()>();

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        virtualinvoke $r5.<org.apache.xpath.VariableStack: void reset()>();

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void resetUserParameters()>();

        $r6 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r6.<org.apache.xml.utils.ObjectStack: void removeAllElements()>();

        $r7 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates>;

        virtualinvoke $r7.<java.util.Stack: void removeAllElements()>();

        $r8 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes>;

        virtualinvoke $r8.<org.apache.xml.utils.NodeVector: void removeAllElements()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = null;

        $r9 = new org.apache.xalan.transformer.KeyManager;

        specialinvoke $r9.<org.apache.xalan.transformer.KeyManager: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager m_keyManager> = $r9;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable> = null;

        $r10 = new org.apache.xml.utils.BoolStack;

        specialinvoke $r10.<org.apache.xml.utils.BoolStack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull> = $r10;

        r0.<org.apache.xalan.transformer.TransformerImpl: int m_doc> = -1;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread> = null;

        $r11 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r12 = virtualinvoke $r11.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()>();

        virtualinvoke $r12.<org.apache.xpath.SourceTreeManager: void reset()>();

     label3:
        return;

     label4:
        $r14 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public void run()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Throwable r1, $r17;
        java.lang.Exception r2, r3, $r7, $r13;
        int $i0;
        org.xml.sax.ContentHandler $r4, $r5, $r11, $r12, $r19, $r21;
        boolean $z0, $z1, $z2;
        org.apache.xalan.transformer.TransformerHandlerImpl $r6, $r14, $r20;
        java.lang.Thread $r8, $r16;
        java.lang.RuntimeException $r9, $r15;
        java.lang.String $r10, $r18;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset> = 0;

     label01:
        $i0 = r0.<org.apache.xalan.transformer.TransformerImpl: int m_doc>;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transformNode(int)>($i0);

     label02:
        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $z0 = $r4 instanceof org.apache.xalan.transformer.TransformerHandlerImpl;

        if $z0 == 0 goto label03;

        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $r6 = (org.apache.xalan.transformer.TransformerHandlerImpl) $r5;

        virtualinvoke $r6.<org.apache.xalan.transformer.TransformerHandlerImpl: void clearCoRoutine()>();

     label03:
        return;

     label04:
        $r7 := @caughtexception;

        r3 = $r7;

     label05:
        $r8 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread>;

        if $r8 == null goto label09;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void postExceptionFromThread(java.lang.Exception)>(r3);

     label06:
        $r11 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $z1 = $r11 instanceof org.apache.xalan.transformer.TransformerHandlerImpl;

        if $z1 == 0 goto label03;

        $r12 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $r14 = (org.apache.xalan.transformer.TransformerHandlerImpl) $r12;

        virtualinvoke $r14.<org.apache.xalan.transformer.TransformerHandlerImpl: void clearCoRoutine()>();

     label07:
        return;

     label08:
        $r13 := @caughtexception;

        r2 = $r13;

        $r16 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread>;

        if $r16 == null goto label13;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void postExceptionFromThread(java.lang.Exception)>(r2);

        return;

     label09:
        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke r3.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label10:
        $r17 := @caughtexception;

        r1 = $r17;

     label11:
        $r19 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $z2 = $r19 instanceof org.apache.xalan.transformer.TransformerHandlerImpl;

        if $z2 == 0 goto label12;

        $r21 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $r20 = (org.apache.xalan.transformer.TransformerHandlerImpl) $r21;

        virtualinvoke $r20.<org.apache.xalan.transformer.TransformerHandlerImpl: void clearCoRoutine()>();

     label12:
        throw r1;

     label13:
        $r15 = new java.lang.RuntimeException;

        $r18 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r15;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Exception from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Exception from label11 to label12 with label08;
        catch java.lang.Exception from label12 to label13 with label08;
    }

    public void runTransformThread()
    {
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        staticinvoke <org.apache.xml.utils.ThreadControllerWrapper: java.lang.Thread runThread(java.lang.Runnable,int)>(r0, -1);

        return;
    }

    public void runTransformThread(int)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0;
        java.lang.Thread $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.apache.xml.utils.ThreadControllerWrapper: java.lang.Thread runThread(java.lang.Runnable,int)>(r0, i0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setTransformThread(java.lang.Thread)>($r1);

        return;
    }

    public void setBaseURLOfSource(java.lang.String)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.String m_urlOfSource> = r1;

        return;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.xml.sax.ContentHandler r1;
        org.apache.xml.serializer.ToXMLSAXHandler r2, $r5;
        org.apache.xml.serializer.SerializationHandler $r3, $r4;
        java.lang.NullPointerException $r6;
        java.lang.String $r7;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        $r7 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NULL_CONTENT_HANDLER", null);

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label1:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_outputContentHandler> = r1;

        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if $r3 != null goto label2;

        $r5 = new org.apache.xml.serializer.ToXMLSAXHandler;

        specialinvoke $r5.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>()>();

        r2 = $r5;

        virtualinvoke r2.<org.apache.xml.serializer.ToXMLSAXHandler: void setContentHandler(org.xml.sax.ContentHandler)>(r1);

        virtualinvoke r2.<org.apache.xml.serializer.ToXMLSAXHandler: void setTransformer(javax.xml.transform.Transformer)>(r0);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r2;

        return;

     label2:
        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r4.<org.apache.xml.serializer.SerializationHandler: void setContentHandler(org.xml.sax.ContentHandler)>(r1);

        return;
    }

    public void setCurrentElement(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xml.utils.ObjectStack $r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: void setTop(java.lang.Object)>(r1);

        return;
    }

    public void setErrorListener(javax.xml.transform.ErrorListener) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.ErrorListener r1;
        java.lang.Boolean r2;
        java.lang.Throwable r3, $r6;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.ErrorListener;

        r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r2;

        if r1 != null goto label5;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NULL_ERROR_HANDLER", null);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label2:
        $r6 := @caughtexception;

        r3 = $r6;

     label3:
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler> = r1;

        exitmonitor r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void setExceptionThrown(java.lang.Exception)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Exception r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Exception;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception m_exceptionThrown> = r1;

        return;
    }

    void setExtensionsTable(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        javax.xml.transform.TransformerException r2, $r5;
        java.util.Vector $r3;
        org.apache.xalan.extensions.ExtensionsTable $r4;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

     label1:
        $r3 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getExtensions()>();

        if $r3 == null goto label2;

        $r4 = new org.apache.xalan.extensions.ExtensionsTable;

        specialinvoke $r4.<org.apache.xalan.extensions.ExtensionsTable: void <init>(org.apache.xalan.templates.StylesheetRoot)>(r1);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable m_extensionsTable> = $r4;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        virtualinvoke r2.<javax.xml.transform.TransformerException: void printStackTrace()>();

        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public void setOutputFormat(org.apache.xalan.templates.OutputProperties)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.OutputProperties r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.OutputProperties;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = r1;

        return;
    }

    public void setOutputProperties(java.util.Properties) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.util.Properties r1, $r10;
        java.lang.Boolean r2;
        java.lang.Throwable r3, $r13;
        java.lang.String r4;
        java.lang.Object $r5;
        org.apache.xalan.templates.OutputProperties $r6, $r7, $r9, $r11, $r12;
        org.apache.xalan.templates.StylesheetRoot $r8;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.util.Properties;

        r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r2;

        if r1 == null goto label12;

     label01:
        $r5 = virtualinvoke r1.<java.util.Properties: java.lang.Object get(java.lang.Object)>("method");

        r4 = (java.lang.String) $r5;

     label02:
        if r4 == null goto label07;

     label03:
        $r12 = new org.apache.xalan.templates.OutputProperties;

        specialinvoke $r12.<org.apache.xalan.templates.OutputProperties: void <init>(java.lang.String)>(r4);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = $r12;

     label04:
        $r7 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        virtualinvoke $r7.<org.apache.xalan.templates.OutputProperties: void copyFrom(java.util.Properties)>(r1);

        $r9 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        $r8 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $r10 = virtualinvoke $r8.<org.apache.xalan.templates.StylesheetRoot: java.util.Properties getOutputProperties()>();

        virtualinvoke $r9.<org.apache.xalan.templates.OutputProperties: void copyFrom(java.util.Properties)>($r10);

     label05:
        exitmonitor r2;

     label06:
        return;

     label07:
        $r6 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        if $r6 != null goto label04;

        $r11 = new org.apache.xalan.templates.OutputProperties;

        specialinvoke $r11.<org.apache.xalan.templates.OutputProperties: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = $r11;

     label08:
        goto label04;

     label09:
        $r13 := @caughtexception;

        r3 = $r13;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = null;

     label13:
        goto label05;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public void setOutputProperty(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, r2, $r9;
        java.lang.Boolean r3;
        java.lang.Throwable r4, $r13;
        org.apache.xalan.templates.OutputProperties $r5, $r6, $r11, $r14;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;
        java.lang.Object[] $r8;
        org.apache.xalan.templates.StylesheetRoot $r10;
        java.lang.Object $r12;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r3;

     label1:
        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        if $r5 != null goto label2;

        $r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        $r11 = virtualinvoke $r10.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.OutputProperties getOutputComposed()>();

        $r12 = virtualinvoke $r11.<org.apache.xalan.templates.OutputProperties: java.lang.Object clone()>();

        $r14 = (org.apache.xalan.templates.OutputProperties) $r12;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = $r14;

     label2:
        $z0 = staticinvoke <org.apache.xalan.templates.OutputProperties: boolean isLegalPropertyKey(java.lang.String)>(r1);

        if $z0 != 0 goto label6;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r1;

        $r9 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_OUTPUT_PROPERTY_NOT_RECOGNIZED", $r8);

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label3:
        $r13 := @caughtexception;

        r4 = $r13;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

     label6:
        $r6 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        virtualinvoke $r6.<org.apache.xalan.templates.OutputProperties: void setProperty(java.lang.String,java.lang.String)>(r1, r2);

        exitmonitor r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label2 to label3 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
    }

    public void setParameter(java.lang.String, java.lang.Object)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, r5, r6, $r19;
        java.lang.Object r2;
        java.util.StringTokenizer r3, $r7;
        boolean z0;
        java.util.Vector $r8, $r15;
        org.apache.xml.utils.QName $r9, $r12;
        org.apache.xpath.XPathContext $r10, $r14;
        org.apache.xpath.objects.XObject $r11, $r13;
        java.lang.Object[] $r16;
        java.lang.IllegalArgumentException $r17;
        java.util.NoSuchElementException $r18;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label01;

        $r17 = new java.lang.IllegalArgumentException;

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = r1;

        $r19 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_SET_PARAM_VALUE", $r16);

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r17;

     label01:
        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r1, "{}", 0);

        r3 = $r7;

     label02:
        r5 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

     label03:
        r6 = null;

        if z0 == 0 goto label05;

     label04:
        r6 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label05:
        $r8 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        if $r8 != null goto label06;

        $r15 = new java.util.Vector;

        specialinvoke $r15.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams> = $r15;

     label06:
        if r6 != null goto label09;

     label07:
        $r12 = new org.apache.xml.utils.QName;

        specialinvoke $r12.<org.apache.xml.utils.QName: void <init>(java.lang.String)>(r5);

        $r14 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r13 = staticinvoke <org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)>(r2, $r14);

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void replaceOrPushUserParam(org.apache.xml.utils.QName,org.apache.xpath.objects.XObject)>($r12, $r13);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>(r5, null, r2);

     label08:
        return;

     label09:
        $r9 = new org.apache.xml.utils.QName;

        specialinvoke $r9.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r5, r6);

        $r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r11 = staticinvoke <org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)>(r2, $r10);

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void replaceOrPushUserParam(org.apache.xml.utils.QName,org.apache.xpath.objects.XObject)>($r9, $r11);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>(r6, r5, r2);

     label10:
        return;

     label11:
        $r18 := @caughtexception;

        return;

        catch java.util.NoSuchElementException from label02 to label03 with label11;
        catch java.util.NoSuchElementException from label04 to label05 with label11;
        catch java.util.NoSuchElementException from label05 to label06 with label11;
        catch java.util.NoSuchElementException from label07 to label08 with label11;
        catch java.util.NoSuchElementException from label09 to label10 with label11;
    }

    public void setParameter(java.lang.String, java.lang.String, java.lang.Object)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.String r1, r2;
        java.lang.Object r3, $r13;
        org.apache.xpath.VariableStack r4;
        org.apache.xml.utils.QName r5, $r10, $r14;
        org.apache.xpath.objects.XObject r6;
        java.util.Vector r7;
        int i0, $i1;
        org.apache.xalan.templates.ElemVariable r8;
        org.apache.xpath.XPathContext $r9, $r11;
        org.apache.xalan.templates.StylesheetRoot $r12;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r9 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        r4 = virtualinvoke $r9.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $r10 = new org.apache.xml.utils.QName;

        specialinvoke $r10.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r2, r1);

        r5 = $r10;

        $r11 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        r6 = staticinvoke <org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)>(r3, $r11);

        $r12 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r7 = virtualinvoke $r12.<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getVariablesAndParamsComposed()>();

        i0 = virtualinvoke r7.<java.util.Vector: int size()>();

     label1:
        i0 = i0 + -1;

        if i0 < 0 goto label2;

        $r13 = virtualinvoke r7.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r8 = (org.apache.xalan.templates.ElemVariable) $r13;

        $i1 = virtualinvoke r8.<org.apache.xalan.templates.ElemVariable: int getXSLToken()>();

        if $i1 != 41 goto label1;

        $r14 = virtualinvoke r8.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName getName()>();

        $z0 = virtualinvoke $r14.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label1;

        virtualinvoke r4.<org.apache.xpath.VariableStack: void setGlobalVariable(int,org.apache.xpath.objects.XObject)>(i0, r6);

        goto label1;

     label2:
        return;
    }

    public void setParameters(java.util.Properties)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.util.Properties r1;
        java.util.Enumeration r2;
        java.lang.String r3, r6, r7, $r9, $r11, $r12;
        java.util.StringTokenizer r4, $r10;
        boolean $z0, $z1;
        java.lang.Object $r8;
        java.util.NoSuchElementException $r13;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.util.Properties;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void clearParameters()>();

        r2 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label08;

        $r8 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r9 = (java.lang.String) $r8;

        r3 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r9);

        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r3, "{}", 0);

        r4 = $r10;

     label02:
        r6 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label10;

        r7 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label03:
        if r7 != null goto label06;

     label04:
        $r12 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r3);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>(r6, null, $r12);

     label05:
        goto label01;

     label06:
        $r11 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r3);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>(r7, r6, $r11);

     label07:
        goto label01;

     label08:
        return;

     label09:
        $r13 := @caughtexception;

        goto label01;

     label10:
        r7 = null;

        goto label03;

        catch java.util.NoSuchElementException from label02 to label03 with label09;
        catch java.util.NoSuchElementException from label04 to label05 with label09;
        catch java.util.NoSuchElementException from label06 to label07 with label09;
    }

    public void setSerializationHandler(org.apache.xml.serializer.SerializationHandler)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r1;

        return;
    }

    public void setSourceTreeDocForThread(int)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.transformer.TransformerImpl: int m_doc> = i0;

        return;
    }

    public void setStylesheet(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot> = r1;

        return;
    }

    public void setTransformThread(java.lang.Thread)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Thread r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Thread;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread> = r1;

        return;
    }

    public void setURIResolver(javax.xml.transform.URIResolver)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.URIResolver r1;
        java.lang.Boolean r2;
        java.lang.Throwable r3, $r6;
        org.apache.xpath.XPathContext $r4;
        org.apache.xpath.SourceTreeManager $r5;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.URIResolver;

        r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r2;

     label1:
        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()>();

        virtualinvoke $r5.<org.apache.xpath.SourceTreeManager: void setURIResolver(javax.xml.transform.URIResolver)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setXPathContext(org.apache.xpath.XPathContext)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xpath.XPathContext r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext> = r1;

        return;
    }

    public void transform(javax.xml.transform.Source) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.Source r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transform(javax.xml.transform.Source,boolean)>(r1, 1);

        return;
    }

    public void transform(javax.xml.transform.Source, javax.xml.transform.Result) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.Result r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 := @parameter1: javax.xml.transform.Result;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transform(javax.xml.transform.Source,javax.xml.transform.Result,boolean)>(r1, r2, 1);

        return;
    }

    public void transform(javax.xml.transform.Source, javax.xml.transform.Result, boolean) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.Source r1;
        javax.xml.transform.Result r2;
        boolean z0;
        java.lang.Boolean r3;
        java.lang.Throwable r4, $r6;
        org.apache.xml.serializer.SerializationHandler $r5;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 := @parameter1: javax.xml.transform.Result;

        z0 := @parameter2: boolean;

        r3 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r3;

     label1:
        $r5 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result)>(r2);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setSerializationHandler(org.apache.xml.serializer.SerializationHandler)>($r5);

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = r2;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transform(javax.xml.transform.Source,boolean)>(r1, z0);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void transform(javax.xml.transform.Source, boolean) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        javax.xml.transform.Source r1, r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8;
        java.lang.Throwable r2, r12, $r65, $r69, $r71;
        org.xml.sax.SAXException r3, $r61, $r70;
        org.xml.sax.SAXParseException r4, $r74, $r75;
        org.apache.xml.utils.WrappedRuntimeException r5, $r28, $r64, $r67, $r73;
        java.lang.Exception r6, r7, r13, $r29;
        java.lang.String r8, r18, r20, r21, r22, $r41, $r43, $r56;
        org.apache.xml.dtm.DTMManager r9;
        org.apache.xml.dtm.DTM r11;
        org.w3c.dom.Node r14;
        javax.xml.parsers.DocumentBuilder r15;
        javax.xml.parsers.ParserConfigurationException r16, $r58, $r66;
        javax.xml.transform.dom.DOMSource r17, $r31, $r33;
        org.apache.xml.utils.PrefixResolver $r23;
        org.apache.xpath.XPathContext $r24, $r25, $r63;
        int $i0;
        org.apache.xml.serializer.SerializationHandler $r26, $r27;
        javax.xml.transform.TransformerException $r30, $r32, $r60;
        javax.xml.parsers.DocumentBuilderFactory $r34;
        javax.xml.transform.sax.SAXSource $r35, $r37;
        org.xml.sax.InputSource $r36;
        org.w3c.dom.Document $r38;
        java.io.InputStream $r39;
        javax.xml.transform.stream.StreamSource $r40, $r45;
        org.xml.sax.XMLReader $r42;
        java.io.Reader $r44;
        java.lang.StringBuilder $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r57;
        char $c1;
        java.lang.Class $r55;
        org.apache.xalan.templates.StylesheetRoot $r59, $r62;
        javax.xml.transform.ErrorListener $r68;
        java.lang.SecurityException $r72;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        z0 := @parameter1: boolean;

     label01:
        $r24 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r23 = virtualinvoke $r24.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        if $r23 != null goto label02;

        $r63 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r59 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        virtualinvoke $r63.<org.apache.xpath.XPathContext: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)>($r59);

     label02:
        r8 = interfaceinvoke r1.<javax.xml.transform.Source: java.lang.String getSystemId()>();

     label03:
        if r8 != null goto label05;

     label04:
        $r62 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r8 = virtualinvoke $r62.<org.apache.xalan.templates.StylesheetRoot: java.lang.String getBaseIdentifier()>();

     label05:
        if r8 != null goto label10;

        r20 = "";

     label06:
        r21 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

     label07:
        r20 = r21;

     label08:
        $r43 = <java.io.File: java.lang.String separator>;

        $z7 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>($r43);

        if $z7 == 0 goto label30;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        r22 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $c1 = <java.io.File: char separatorChar>;

        $r54 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r55 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r56 = virtualinvoke $r55.<java.lang.Class: java.lang.String getName()>();

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        r8 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setBaseURLOfSource(java.lang.String)>(r8);

        $r25 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        r9 = virtualinvoke $r25.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        $z1 = r1 instanceof javax.xml.transform.stream.StreamSource;

        if $z1 == 0 goto label11;

        $r41 = interfaceinvoke r1.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        if $r41 != null goto label11;

        $r40 = (javax.xml.transform.stream.StreamSource) r1;

        $r39 = virtualinvoke $r40.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();

        if $r39 != null goto label11;

        $r45 = (javax.xml.transform.stream.StreamSource) r1;

        $r44 = virtualinvoke $r45.<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()>();

        if $r44 == null goto label14;

     label11:
        $z2 = r1 instanceof javax.xml.transform.sax.SAXSource;

        if $z2 == 0 goto label12;

        $r37 = (javax.xml.transform.sax.SAXSource) r1;

        $r36 = virtualinvoke $r37.<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>();

        if $r36 != null goto label12;

        $r35 = (javax.xml.transform.sax.SAXSource) r1;

        $r42 = virtualinvoke $r35.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

        if $r42 == null goto label14;

     label12:
        $z3 = r1 instanceof javax.xml.transform.dom.DOMSource;

        if $z3 == 0 goto label18;

        $r31 = (javax.xml.transform.dom.DOMSource) r1;

        r14 = virtualinvoke $r31.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

     label13:
        if r14 != null goto label18;

     label14:
        $r34 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        r15 = virtualinvoke $r34.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        r18 = interfaceinvoke r1.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        $r33 = new javax.xml.transform.dom.DOMSource;

        $r38 = virtualinvoke r15.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        specialinvoke $r33.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r38);

        r17 = $r33;

     label15:
        if r18 == null goto label17;

     label16:
        interfaceinvoke r17.<javax.xml.transform.Source: void setSystemId(java.lang.String)>(r18);

     label17:
        r1 = r17;

     label18:
        r10 = r1;

     label19:
        r11 = virtualinvoke r9.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>(r10, 0, r0, 1, 1);

        interfaceinvoke r11.<org.apache.xml.dtm.DTM: void setDocumentBaseURI(java.lang.String)>(r8);

     label20:
        $i0 = interfaceinvoke r11.<org.apache.xml.dtm.DTM: int getDocument()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transformNode(int)>($i0);

     label21:
        if z0 == 0 goto label23;

     label22:
        virtualinvoke r9.<org.apache.xml.dtm.DTMManager: boolean release(org.apache.xml.dtm.DTM,boolean)>(r11, 1);

     label23:
        r13 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception getExceptionThrown()>();

     label24:
        if r13 == null goto label48;

     label25:
        $z4 = r13 instanceof javax.xml.transform.TransformerException;

        if $z4 == 0 goto label43;

        $r32 = (javax.xml.transform.TransformerException) r13;

        throw $r32;

     label26:
        $r73 := @caughtexception;

        r5 = $r73;

     label27:
        r6 = virtualinvoke r5.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

     label28:
        $z8 = r6 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z8 == 0 goto label50;

        $r64 = (org.apache.xml.utils.WrappedRuntimeException) r6;

        r7 = virtualinvoke $r64.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

     label29:
        r6 = r7;

        goto label28;

     label30:
        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:///");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        r22 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

     label31:
        goto label09;

     label32:
        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void fatalError(java.lang.Throwable)>(r16);

     label33:
        goto label18;

     label34:
        $r74 := @caughtexception;

        r4 = $r74;

     label35:
        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void fatalError(java.lang.Throwable)>(r4);

     label36:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        return;

     label37:
        $r71 := @caughtexception;

        r12 = $r71;

        if z0 == 0 goto label39;

     label38:
        virtualinvoke r9.<org.apache.xml.dtm.DTMManager: boolean release(org.apache.xml.dtm.DTM,boolean)>(r11, 1);

     label39:
        throw r12;

     label40:
        $r70 := @caughtexception;

        r3 = $r70;

     label41:
        $r68 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r60 = new javax.xml.transform.TransformerException;

        specialinvoke $r60.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r3);

        interfaceinvoke $r68.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r60);

     label42:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        return;

     label43:
        $z5 = r13 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z5 == 0 goto label45;

        $r28 = (org.apache.xml.utils.WrappedRuntimeException) r13;

        $r29 = virtualinvoke $r28.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void fatalError(java.lang.Throwable)>($r29);

     label44:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        return;

     label45:
        $r30 = new javax.xml.transform.TransformerException;

        specialinvoke $r30.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r13);

        throw $r30;

     label46:
        $r69 := @caughtexception;

        r2 = $r69;

     label47:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        throw r2;

     label48:
        $r27 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if $r27 == null goto label44;

        $r26 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r26.<org.apache.xml.serializer.SerializationHandler: void endDocument()>();

     label49:
        goto label44;

     label50:
        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void fatalError(java.lang.Throwable)>(r6);

     label51:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        return;

     label52:
        $r65 := @caughtexception;

        r2 = $r65;

        goto label47;

     label53:
        $r61 := @caughtexception;

        r3 = $r61;

        goto label41;

     label54:
        $r75 := @caughtexception;

        r4 = $r75;

        goto label35;

     label55:
        $r67 := @caughtexception;

        r5 = $r67;

        goto label27;

     label56:
        $r58 := @caughtexception;

        r16 = $r58;

        r1 = r17;

        goto label32;

     label57:
        $r72 := @caughtexception;

        goto label08;

     label58:
        $r66 := @caughtexception;

        r16 = $r66;

        goto label32;

        catch org.apache.xml.utils.WrappedRuntimeException from label01 to label02 with label26;
        catch org.xml.sax.SAXParseException from label01 to label02 with label34;
        catch org.xml.sax.SAXException from label01 to label02 with label40;
        catch java.lang.Throwable from label01 to label02 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label02 to label03 with label26;
        catch org.xml.sax.SAXParseException from label02 to label03 with label34;
        catch org.xml.sax.SAXException from label02 to label03 with label40;
        catch java.lang.Throwable from label02 to label03 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label04 to label05 with label26;
        catch org.xml.sax.SAXParseException from label04 to label05 with label34;
        catch org.xml.sax.SAXException from label04 to label05 with label40;
        catch java.lang.Throwable from label04 to label05 with label46;
        catch java.lang.SecurityException from label06 to label07 with label57;
        catch org.apache.xml.utils.WrappedRuntimeException from label06 to label07 with label26;
        catch org.xml.sax.SAXParseException from label06 to label07 with label34;
        catch org.xml.sax.SAXException from label06 to label07 with label40;
        catch java.lang.Throwable from label06 to label07 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label08 to label09 with label26;
        catch org.xml.sax.SAXParseException from label08 to label09 with label34;
        catch org.xml.sax.SAXException from label08 to label09 with label40;
        catch java.lang.Throwable from label08 to label09 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label09 to label10 with label26;
        catch org.xml.sax.SAXParseException from label09 to label10 with label34;
        catch org.xml.sax.SAXException from label09 to label10 with label40;
        catch java.lang.Throwable from label09 to label10 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label10 to label11 with label26;
        catch org.xml.sax.SAXParseException from label10 to label11 with label34;
        catch org.xml.sax.SAXException from label10 to label11 with label40;
        catch java.lang.Throwable from label10 to label11 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label11 to label12 with label26;
        catch org.xml.sax.SAXParseException from label11 to label12 with label34;
        catch org.xml.sax.SAXException from label11 to label12 with label40;
        catch java.lang.Throwable from label11 to label12 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label12 to label13 with label26;
        catch org.xml.sax.SAXParseException from label12 to label13 with label34;
        catch org.xml.sax.SAXException from label12 to label13 with label40;
        catch java.lang.Throwable from label12 to label13 with label46;
        catch javax.xml.parsers.ParserConfigurationException from label14 to label15 with label58;
        catch org.apache.xml.utils.WrappedRuntimeException from label14 to label15 with label26;
        catch org.xml.sax.SAXParseException from label14 to label15 with label34;
        catch org.xml.sax.SAXException from label14 to label15 with label40;
        catch java.lang.Throwable from label14 to label15 with label46;
        catch javax.xml.parsers.ParserConfigurationException from label16 to label17 with label56;
        catch org.apache.xml.utils.WrappedRuntimeException from label16 to label17 with label55;
        catch org.xml.sax.SAXParseException from label16 to label17 with label54;
        catch org.xml.sax.SAXException from label16 to label17 with label53;
        catch java.lang.Throwable from label16 to label17 with label52;
        catch org.apache.xml.utils.WrappedRuntimeException from label19 to label20 with label26;
        catch org.xml.sax.SAXParseException from label19 to label20 with label34;
        catch org.xml.sax.SAXException from label19 to label20 with label40;
        catch java.lang.Throwable from label19 to label20 with label46;
        catch java.lang.Throwable from label20 to label21 with label37;
        catch org.apache.xml.utils.WrappedRuntimeException from label22 to label23 with label26;
        catch org.xml.sax.SAXParseException from label22 to label23 with label34;
        catch org.xml.sax.SAXException from label22 to label23 with label40;
        catch java.lang.Throwable from label22 to label23 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label23 to label24 with label26;
        catch org.xml.sax.SAXParseException from label23 to label24 with label34;
        catch org.xml.sax.SAXException from label23 to label24 with label40;
        catch java.lang.Throwable from label23 to label24 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label25 to label26 with label26;
        catch org.xml.sax.SAXParseException from label25 to label26 with label34;
        catch org.xml.sax.SAXException from label25 to label26 with label40;
        catch java.lang.Throwable from label25 to label26 with label46;
        catch java.lang.Throwable from label27 to label28 with label46;
        catch java.lang.Throwable from label28 to label29 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label30 to label31 with label26;
        catch org.xml.sax.SAXParseException from label30 to label31 with label34;
        catch org.xml.sax.SAXException from label30 to label31 with label40;
        catch java.lang.Throwable from label30 to label31 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label32 to label33 with label26;
        catch org.xml.sax.SAXParseException from label32 to label33 with label34;
        catch org.xml.sax.SAXException from label32 to label33 with label40;
        catch java.lang.Throwable from label32 to label33 with label46;
        catch java.lang.Throwable from label35 to label36 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label38 to label39 with label26;
        catch org.xml.sax.SAXParseException from label38 to label39 with label34;
        catch org.xml.sax.SAXException from label38 to label39 with label40;
        catch java.lang.Throwable from label38 to label39 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label39 to label40 with label26;
        catch org.xml.sax.SAXParseException from label39 to label40 with label34;
        catch org.xml.sax.SAXException from label39 to label40 with label40;
        catch java.lang.Throwable from label39 to label40 with label46;
        catch java.lang.Throwable from label41 to label42 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label43 to label44 with label26;
        catch org.xml.sax.SAXParseException from label43 to label44 with label34;
        catch org.xml.sax.SAXException from label43 to label44 with label40;
        catch java.lang.Throwable from label43 to label44 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label45 to label46 with label26;
        catch org.xml.sax.SAXParseException from label45 to label46 with label34;
        catch org.xml.sax.SAXException from label45 to label46 with label40;
        catch java.lang.Throwable from label45 to label46 with label46;
        catch org.apache.xml.utils.WrappedRuntimeException from label48 to label49 with label26;
        catch org.xml.sax.SAXParseException from label48 to label49 with label34;
        catch org.xml.sax.SAXException from label48 to label49 with label40;
        catch java.lang.Throwable from label48 to label49 with label46;
        catch java.lang.Throwable from label50 to label51 with label46;
    }

    public void transformNode(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0, i1, i2, i3, i4;
        org.apache.xml.serializer.SerializationHandler r1, r6, r15, r19, $r30, $r31, $r43;
        java.lang.Throwable r2, r4, r26, $r49, $r50, $r52;
        org.apache.xpath.XPathContext r3;
        java.lang.Exception r5, r21, $r32, $r51;
        javax.xml.transform.ErrorListener r7, r9, $r35;
        javax.xml.transform.TransformerException r8, r12, r17, $r34, $r36, $r37;
        java.lang.String r10, $r39, $r41;
        org.apache.xml.utils.SAXSourceLocator r11, r16, $r33, $r45, $r46;
        org.xml.sax.SAXParseException r14, r18, $r38, $r40, $r42, $r48;
        org.apache.xalan.templates.StylesheetRoot r20, $r27;
        org.apache.xalan.templates.StylesheetComposed r22;
        org.apache.xalan.templates.Stylesheet r23;
        org.apache.xpath.axes.SelfIteratorNoPredicate r24, $r28;
        org.apache.xalan.templates.ElemTemplateElement r25;
        boolean $z1, $z2, $z3, $z4, $z5;
        org.apache.xml.utils.WrappedRuntimeException $r44;
        javax.xml.transform.SourceLocator $r47;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        $r27 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setExtensionsTable(org.apache.xalan.templates.StylesheetRoot)>($r27);

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        entermonitor r1;

     label01:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset> = 0;

        r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        virtualinvoke r3.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

     label02:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushGlobalVars(int)>(i0);

        r20 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        i2 = virtualinvoke r20.<org.apache.xalan.templates.StylesheetRoot: int getGlobalImportCount()>();

     label03:
        i1 = 0;

     label04:
        if i1 >= i2 goto label12;

     label05:
        r22 = virtualinvoke r20.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetComposed getGlobalImport(int)>(i1);

        i3 = virtualinvoke r22.<org.apache.xalan.templates.StylesheetComposed: int getIncludeCountComposed()>();

     label06:
        i4 = -1;

     label07:
        if i4 >= i3 goto label43;

     label08:
        r23 = virtualinvoke r22.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)>(i4);

        virtualinvoke r23.<org.apache.xalan.templates.Stylesheet: void runtimeInit(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r25 = virtualinvoke r23.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

     label09:
        if r25 == null goto label42;

     label10:
        virtualinvoke r25.<org.apache.xalan.templates.ElemTemplateElement: void runtimeInit(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r25 = virtualinvoke r25.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

     label11:
        goto label09;

     label12:
        $r28 = new org.apache.xpath.axes.SelfIteratorNoPredicate;

        specialinvoke $r28.<org.apache.xpath.axes.SelfIteratorNoPredicate: void <init>()>();

        r24 = $r28;

        interfaceinvoke r24.<org.apache.xml.dtm.DTMIterator: void setRoot(int,java.lang.Object)>(i0, r3);

        virtualinvoke r3.<org.apache.xpath.XPathContext: void pushContextNodeList(org.apache.xml.dtm.DTMIterator)>(r24);

     label13:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)>(null, null, i0);

     label14:
        virtualinvoke r3.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        $r31 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if $r31 == null goto label15;

        $r30 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r30.<org.apache.xml.serializer.SerializationHandler: void endDocument()>();

     label15:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

     label16:
        exitmonitor r1;

     label17:
        return;

     label18:
        $r52 := @caughtexception;

        r26 = $r52;

     label19:
        virtualinvoke r3.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        throw r26;

     label20:
        $r32 := @caughtexception;

        r5 = $r32;

     label21:
        $z2 = r5 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z2 == 0 goto label23;

        $r44 = (org.apache.xml.utils.WrappedRuntimeException) r5;

        r21 = virtualinvoke $r44.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

     label22:
        if r21 == null goto label21;

        r5 = r21;

        goto label21;

     label23:
        r6 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

     label24:
        if r6 == null goto label26;

     label25:
        $z5 = r5 instanceof org.xml.sax.SAXParseException;

        if $z5 == 0 goto label32;

        $r43 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r42 = (org.xml.sax.SAXParseException) r5;

        interfaceinvoke $r43.<org.apache.xml.serializer.SerializationHandler: void fatalError(org.xml.sax.SAXParseException)>($r42);

     label26:
        $z1 = r5 instanceof javax.xml.transform.TransformerException;

        if $z1 == 0 goto label38;

        $r35 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r36 = (javax.xml.transform.TransformerException) r5;

        interfaceinvoke $r35.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r36);

     label27:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

     label28:
        goto label16;

     label29:
        $r49 := @caughtexception;

        r2 = $r49;

     label30:
        exitmonitor r1;

     label31:
        throw r2;

     label32:
        $z4 = r5 instanceof javax.xml.transform.TransformerException;

        if $z4 == 0 goto label34;

        r17 = (javax.xml.transform.TransformerException) r5;

        $r46 = new org.apache.xml.utils.SAXSourceLocator;

        $r47 = virtualinvoke r17.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator getLocator()>();

        specialinvoke $r46.<org.apache.xml.utils.SAXSourceLocator: void <init>(javax.xml.transform.SourceLocator)>($r47);

        r16 = $r46;

        r19 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r48 = new org.xml.sax.SAXParseException;

        $r41 = virtualinvoke r17.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        specialinvoke $r48.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r41, r16, r17);

        r18 = $r48;

        interfaceinvoke r19.<org.apache.xml.serializer.SerializationHandler: void fatalError(org.xml.sax.SAXParseException)>(r18);

     label33:
        goto label26;

     label34:
        r15 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r40 = new org.xml.sax.SAXParseException;

        $r39 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r45 = new org.apache.xml.utils.SAXSourceLocator;

        specialinvoke $r45.<org.apache.xml.utils.SAXSourceLocator: void <init>()>();

        specialinvoke $r40.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r39, $r45, r5);

        r14 = $r40;

        interfaceinvoke r15.<org.apache.xml.serializer.SerializationHandler: void fatalError(org.xml.sax.SAXParseException)>(r14);

     label35:
        goto label26;

     label36:
        $r50 := @caughtexception;

        r4 = $r50;

     label37:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        throw r4;

     label38:
        $z3 = r5 instanceof org.xml.sax.SAXParseException;

        if $z3 == 0 goto label40;

        r9 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        r10 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r33 = new org.apache.xml.utils.SAXSourceLocator;

        $r38 = (org.xml.sax.SAXParseException) r5;

        specialinvoke $r33.<org.apache.xml.utils.SAXSourceLocator: void <init>(org.xml.sax.SAXParseException)>($r38);

        r11 = $r33;

        $r37 = new javax.xml.transform.TransformerException;

        specialinvoke $r37.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator,java.lang.Throwable)>(r10, r11, r5);

        r12 = $r37;

        interfaceinvoke r9.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r12);

     label39:
        goto label27;

     label40:
        r7 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r34 = new javax.xml.transform.TransformerException;

        specialinvoke $r34.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r5);

        r8 = $r34;

        interfaceinvoke r7.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r8);

     label41:
        goto label27;

     label42:
        i4 = i4 + 1;

        goto label07;

     label43:
        i1 = i1 + 1;

        goto label04;

     label44:
        $r51 := @caughtexception;

        goto label26;

        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.lang.Exception from label02 to label03 with label20;
        catch java.lang.Throwable from label02 to label03 with label36;
        catch java.lang.Exception from label05 to label06 with label20;
        catch java.lang.Throwable from label05 to label06 with label36;
        catch java.lang.Exception from label08 to label09 with label20;
        catch java.lang.Throwable from label08 to label09 with label36;
        catch java.lang.Exception from label10 to label11 with label20;
        catch java.lang.Throwable from label10 to label11 with label36;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Throwable from label12 to label13 with label36;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Throwable from label14 to label15 with label36;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Exception from label19 to label20 with label20;
        catch java.lang.Throwable from label19 to label20 with label36;
        catch java.lang.Throwable from label21 to label22 with label36;
        catch java.lang.Throwable from label23 to label24 with label36;
        catch java.lang.Exception from label25 to label26 with label44;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.lang.Throwable from label26 to label27 with label36;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
        catch java.lang.Exception from label32 to label33 with label44;
        catch java.lang.Throwable from label32 to label33 with label36;
        catch java.lang.Exception from label34 to label35 with label44;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label37 to label38 with label29;
        catch java.lang.Throwable from label38 to label39 with label36;
        catch java.lang.Throwable from label40 to label41 with label36;
    }

    public void transformNode(int, javax.xml.transform.Result) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        int i0;
        javax.xml.transform.Result r1;
        org.apache.xml.serializer.SerializationHandler $r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: javax.xml.transform.Result;

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result)>(r1);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setSerializationHandler(org.apache.xml.serializer.SerializationHandler)>($r2);

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = r1;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transformNode(int)>(i0);

        return;
    }

    public int transformToGlobalRTF(org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xpath.XPathContext $r2;
        org.apache.xml.dtm.DTM $r3;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getGlobalRTFDTM()>();

        $i0 = specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)>(r1, $r3);

        return $i0;
    }

    public int transformToRTF(org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xpath.XPathContext $r2;
        org.apache.xml.dtm.DTM $r3;
        int $i0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getRTFDTM()>();

        $i0 = specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)>(r1, $r3);

        return $i0;
    }

    public java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.ElemTemplateElement r1, r2;
        org.apache.xml.serializer.SerializationHandler r3, $r15, $r16, $r17, $r18, $r20, $r22, $r29, $r31, $r36;
        java.io.StringWriter r4;
        java.lang.Throwable r5, $r32;
        org.xml.sax.SAXException r7, $r38;
        java.lang.String r8, $r28;
        boolean $z0, $z2;
        org.apache.xml.utils.ObjectPool $r10, $r12, $r21, $r24, $r30, $r34;
        java.lang.Object $r11, $r14;
        org.apache.xml.serializer.ToTextStream $r13;
        java.lang.StringBuffer $r19, $r33;
        org.apache.xalan.templates.OutputProperties $r23;
        org.apache.xml.serializer.Serializer $r25;
        java.util.Properties $r26;
        org.apache.xalan.templates.ElemTextLiteral $r27;
        java.lang.Exception $r35, $r37;
        javax.xml.transform.TransformerException $r39;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r2 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if r2 != null goto label01;

        return "";

     label01:
        $z0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: boolean hasTextLitOnly()>();

        if $z0 == 0 goto label02;

        $z2 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_optimizer>;

        if $z2 == 0 goto label02;

        $r27 = (org.apache.xalan.templates.ElemTextLiteral) r2;

        $r28 = virtualinvoke $r27.<org.apache.xalan.templates.ElemTextLiteral: java.lang.String getNodeValue()>();

        return $r28;

     label02:
        r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r10 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool>;

        $r11 = virtualinvoke $r10.<org.apache.xml.utils.ObjectPool: java.lang.Object getInstance()>();

        r4 = (java.io.StringWriter) $r11;

        $r12 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool>;

        $r14 = virtualinvoke $r12.<org.apache.xml.utils.ObjectPool: java.lang.Object getInstance()>();

        $r13 = (org.apache.xml.serializer.ToTextStream) $r14;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r13;

        $r16 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if $r16 != null goto label03;

        $r23 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_textformat>;

        $r26 = virtualinvoke $r23.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        $r25 = staticinvoke <org.apache.xml.serializer.SerializerFactory: org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)>($r26);

        $r29 = (org.apache.xml.serializer.SerializationHandler) $r25;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r29;

     label03:
        $r15 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r15.<org.apache.xml.serializer.SerializationHandler: void setTransformer(javax.xml.transform.Transformer)>(r0);

        $r18 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r18.<org.apache.xml.serializer.SerializationHandler: void setWriter(java.io.Writer)>(r4);

     label04:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r1, 1);

        $r17 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r17.<org.apache.xml.serializer.SerializationHandler: void endDocument()>();

        r8 = virtualinvoke r4.<java.io.StringWriter: java.lang.String toString()>();

     label05:
        $r19 = virtualinvoke r4.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        virtualinvoke $r19.<java.lang.StringBuffer: void setLength(int)>(0);

     label06:
        virtualinvoke r4.<java.io.StringWriter: void close()>();

     label07:
        $r21 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool>;

        virtualinvoke $r21.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>(r4);

        $r20 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r20.<org.apache.xml.serializer.SerializationHandler: boolean reset()>();

        $r24 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool>;

        $r22 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        virtualinvoke $r24.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>($r22);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r3;

        return r8;

     label08:
        $r38 := @caughtexception;

        r7 = $r38;

     label09:
        $r39 = new javax.xml.transform.TransformerException;

        specialinvoke $r39.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r7);

        throw $r39;

     label10:
        $r32 := @caughtexception;

        r5 = $r32;

        $r33 = virtualinvoke r4.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        virtualinvoke $r33.<java.lang.StringBuffer: void setLength(int)>(0);

     label11:
        virtualinvoke r4.<java.io.StringWriter: void close()>();

     label12:
        $r30 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool>;

        virtualinvoke $r30.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>(r4);

        $r31 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r31.<org.apache.xml.serializer.SerializationHandler: boolean reset()>();

        $r34 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool>;

        $r36 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        virtualinvoke $r34.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>($r36);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r3;

        throw r5;

     label13:
        $r35 := @caughtexception;

        goto label07;

     label14:
        $r37 := @caughtexception;

        goto label12;

        catch org.xml.sax.SAXException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Exception from label11 to label12 with label14;
    }

    public void waitTransformThread() throws org.xml.sax.SAXException
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Thread r1;
        java.lang.Exception r3;
        boolean $z0;
        org.xml.sax.SAXException $r4;
        java.lang.InterruptedException $r5;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread getTransformThread()>();

        if r1 == null goto label7;

     label1:
        staticinvoke <org.apache.xml.utils.ThreadControllerWrapper: void waitThread(java.lang.Thread,java.lang.Runnable)>(r1, r0);

        $z0 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: boolean hasTransformThreadErrorCatcher()>();

        if $z0 != 0 goto label4;

        r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception getExceptionThrown()>();

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r3);

        throw $r4;

     label4:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setTransformThread(java.lang.Thread)>(null);

     label5:
        return;

     label6:
        $r5 := @caughtexception;

     label7:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label6;
        catch java.lang.InterruptedException from label3 to label4 with label6;
        catch java.lang.InterruptedException from label4 to label5 with label6;
    }
}
