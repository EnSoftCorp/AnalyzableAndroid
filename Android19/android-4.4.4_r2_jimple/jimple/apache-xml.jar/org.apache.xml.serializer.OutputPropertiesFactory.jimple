public final class org.apache.xml.serializer.OutputPropertiesFactory extends java.lang.Object
{
    private static final java.lang.Class ACCESS_CONTROLLER_CLASS;
    private static final java.lang.String PROP_DIR;
    private static final java.lang.String PROP_FILE_HTML;
    private static final java.lang.String PROP_FILE_TEXT;
    private static final java.lang.String PROP_FILE_UNKNOWN;
    private static final java.lang.String PROP_FILE_XML;
    public static final java.lang.String S_BUILTIN_EXTENSIONS_UNIVERSAL;
    private static final java.lang.String S_BUILTIN_EXTENSIONS_URL;
    public static final java.lang.String S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL;
    public static final int S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL_LEN;
    private static final java.lang.String S_BUILTIN_OLD_EXTENSIONS_URL;
    public static final java.lang.String S_KEY_CONTENT_HANDLER;
    public static final java.lang.String S_KEY_ENTITIES;
    public static final java.lang.String S_KEY_INDENT_AMOUNT;
    public static final java.lang.String S_KEY_LINE_SEPARATOR;
    public static final java.lang.String S_OMIT_META_TAG;
    public static final java.lang.String S_USE_URL_ESCAPING;
    private static final java.lang.String S_XALAN_PREFIX;
    private static final int S_XALAN_PREFIX_LEN;
    private static final java.lang.String S_XSLT_PREFIX;
    private static final int S_XSLT_PREFIX_LEN;
    private static java.util.Properties m_html_properties;
    private static java.lang.Integer m_synch_object;
    private static java.util.Properties m_text_properties;
    private static java.util.Properties m_unknown_properties;
    private static java.util.Properties m_xml_properties;

    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2, $r5, $r8;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.Class $r9;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_XSLT_PREFIX> = "xslt.output.";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_XALAN_PREFIX> = "org.apache.xslt.";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_USE_URL_ESCAPING> = "{http://xml.apache.org/xalan}use-url-escaping";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_OMIT_META_TAG> = "{http://xml.apache.org/xalan}omit-meta-tag";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_KEY_LINE_SEPARATOR> = "{http://xml.apache.org/xalan}line-separator";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_KEY_INDENT_AMOUNT> = "{http://xml.apache.org/xalan}indent-amount";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_KEY_ENTITIES> = "{http://xml.apache.org/xalan}entities";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_KEY_CONTENT_HANDLER> = "{http://xml.apache.org/xalan}content-handler";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_BUILTIN_OLD_EXTENSIONS_URL> = "http://xml.apache.org/xslt";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL> = "{http://xml.apache.org/xslt}";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_BUILTIN_EXTENSIONS_URL> = "http://xml.apache.org/xalan";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String S_BUILTIN_EXTENSIONS_UNIVERSAL> = "{http://xml.apache.org/xalan}";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_FILE_XML> = "output_xml.properties";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_FILE_UNKNOWN> = "output_unknown.properties";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_FILE_TEXT> = "output_text.properties";

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_FILE_HTML> = "output_html.properties";

        $r0 = "{http://xml.apache.org/xslt}";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: int S_BUILTIN_OLD_EXTENSIONS_UNIVERSAL_LEN> = $i0;

        $r1 = "xslt.output.";

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: int S_XSLT_PREFIX_LEN> = $i1;

        $r2 = "org.apache.xslt.";

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: int S_XALAN_PREFIX_LEN> = $i2;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(1);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Integer m_synch_object> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = <org.apache.xml.serializer.SerializerBase: java.lang.String PKG_PATH>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String PROP_DIR> = $r8;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties> = null;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_html_properties> = null;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties> = null;

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_unknown_properties> = null;

        $r9 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class findAccessControllerClass()>();

        <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class ACCESS_CONTROLLER_CLASS> = $r9;

        return;
    }

    public void <init>()
    {
        org.apache.xml.serializer.OutputPropertiesFactory r0;

        r0 := @this: org.apache.xml.serializer.OutputPropertiesFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Class findAccessControllerClass()
    {
        java.lang.Class r1;
        java.lang.Exception $r2;

     label1:
        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.security.AccessController");

     label2:
        return r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String fixupPropertyString(java.lang.String, boolean)
    {
        java.lang.String r0, r1, $r3, $r9;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r10;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("xslt.output.");

        if $z2 == 0 goto label1;

        $i3 = <org.apache.xml.serializer.OutputPropertiesFactory: int S_XSLT_PREFIX_LEN>;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("org.apache.xslt.");

        if $z1 == 0 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{http://xml.apache.org/xalan}");

        $i2 = <org.apache.xml.serializer.OutputPropertiesFactory: int S_XALAN_PREFIX_LEN>;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r0 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("\\u003a");

        if i0 <= 0 goto label3;

        $i1 = i0 + 6;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r0;
    }

    public static final java.util.Properties getDefaultMethodProperties(java.lang.String)
    {
        java.lang.String r0, r1, r7, $r16, $r28;
        java.io.IOException r2, $r26;
        java.lang.Integer r3;
        java.lang.Throwable r4, $r23;
        java.util.Properties r5, r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object[] $r24;
        org.apache.xml.serializer.utils.Messages $r25;
        org.apache.xml.serializer.utils.WrappedRuntimeException $r27;

        r0 := @parameter0: java.lang.String;

        r1 = null;

     label01:
        r3 = <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Integer m_synch_object>;

        entermonitor r3;

     label02:
        r5 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

     label03:
        r1 = null;

        if r5 != null goto label05;

        r1 = "output_xml.properties";

     label04:
        $r21 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)>("output_xml.properties", null);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties> = $r21;

     label05:
        exitmonitor r3;

     label06:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("xml");

        if $z0 == 0 goto label12;

        r6 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

     label07:
        $r8 = new java.util.Properties;

        specialinvoke $r8.<java.util.Properties: void <init>(java.util.Properties)>(r6);

        return $r8;

     label08:
        $r23 := @caughtexception;

        r4 = $r23;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

     label11:
        $r26 := @caughtexception;

        r2 = $r26;

        $r27 = new org.apache.xml.serializer.utils.WrappedRuntimeException;

        $r25 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = r1;

        $r24[1] = r0;

        $r28 = virtualinvoke $r25.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_LOAD_METHOD_PROPERTY", $r24);

        specialinvoke $r27.<org.apache.xml.serializer.utils.WrappedRuntimeException: void <init>(java.lang.String,java.lang.Exception)>($r28, r2);

        throw $r27;

     label12:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z1 == 0 goto label17;

        $r20 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_html_properties>;

        if $r20 != null goto label15;

     label13:
        r1 = "output_html.properties";

     label14:
        $r19 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

        $r22 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)>("output_html.properties", $r19);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_html_properties> = $r22;

     label15:
        r6 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_html_properties>;

     label16:
        goto label07;

     label17:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("text");

        if $z2 == 0 goto label22;

        $r13 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties>;

        if $r13 != null goto label20;

     label18:
        r1 = "output_text.properties";

     label19:
        $r12 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

        $r15 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)>("output_text.properties", $r12);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties> = $r15;

        $r14 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties>;

        $r16 = virtualinvoke $r14.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("encoding");

        if $r16 != null goto label20;

        r7 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)>(null);

        $r18 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties>;

        virtualinvoke $r18.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("encoding", r7);

     label20:
        r6 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_text_properties>;

     label21:
        goto label07;

     label22:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 == 0 goto label27;

        $r9 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_unknown_properties>;

        if $r9 != null goto label25;

     label23:
        r1 = "output_unknown.properties";

     label24:
        $r11 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

        $r10 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)>("output_unknown.properties", $r11);

        <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_unknown_properties> = $r10;

     label25:
        r6 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_unknown_properties>;

     label26:
        goto label07;

     label27:
        r6 = <org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties m_xml_properties>;

     label28:
        goto label07;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.io.IOException from label10 to label11 with label11;
        catch java.io.IOException from label12 to label13 with label11;
        catch java.io.IOException from label14 to label15 with label11;
        catch java.io.IOException from label15 to label16 with label11;
        catch java.io.IOException from label17 to label18 with label11;
        catch java.io.IOException from label19 to label20 with label11;
        catch java.io.IOException from label20 to label21 with label11;
        catch java.io.IOException from label22 to label23 with label11;
        catch java.io.IOException from label24 to label25 with label11;
        catch java.io.IOException from label25 to label26 with label11;
        catch java.io.IOException from label27 to label28 with label11;
    }

    private static java.util.Properties loadPropertiesFile(java.lang.String, java.util.Properties) throws java.io.IOException
    {
        java.lang.String r0, r11, r13, r14, r16, r17, r18, r19, $r35, $r44;
        java.util.Properties r1, r2, $r20, $r25;
        java.io.InputStream r3, r21;
        java.io.BufferedInputStream r4, r9, $r24;
        java.lang.SecurityException r5, $r30, $r40, $r42, $r46;
        java.lang.Throwable r6, $r43, $r47;
        java.io.IOException r7, $r31, $r41;
        java.lang.Class r8, $r22;
        java.util.Enumeration r10;
        java.lang.Object $r23, $r26, $r27, $r33;
        boolean $z0;
        org.apache.xml.serializer.OutputPropertiesFactory$1 $r32;
        org.apache.xml.serializer.utils.Messages $r34, $r45;
        org.apache.xml.serializer.utils.WrappedRuntimeException $r36, $r39;
        java.lang.Object[] $r37, $r38;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Properties;

        $r20 = new java.util.Properties;

        specialinvoke $r20.<java.util.Properties: void <init>(java.util.Properties)>(r1);

        r2 = $r20;

        r3 = null;

        r4 = null;

     label01:
        r8 = <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.Class ACCESS_CONTROLLER_CLASS>;

     label02:
        r4 = null;

        r3 = null;

        if r8 == null goto label19;

     label03:
        $r32 = new org.apache.xml.serializer.OutputPropertiesFactory$1;

        specialinvoke $r32.<org.apache.xml.serializer.OutputPropertiesFactory$1: void <init>(java.lang.String)>(r0);

        $r33 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r32);

        r3 = (java.io.InputStream) $r33;

     label04:
        $r24 = new java.io.BufferedInputStream;

        specialinvoke $r24.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r3);

        r9 = $r24;

     label05:
        virtualinvoke r2.<java.util.Properties: void load(java.io.InputStream)>(r9);

     label06:
        if r9 == null goto label07;

        virtualinvoke r9.<java.io.BufferedInputStream: void close()>();

     label07:
        if r3 == null goto label08;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label08:
        $r23 = virtualinvoke r2.<java.util.Properties: java.lang.Object clone()>();

        $r25 = (java.util.Properties) $r23;

        r10 = virtualinvoke $r25.<java.util.Properties: java.util.Enumeration keys()>();

     label09:
        $z0 = interfaceinvoke r10.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label35;

        $r26 = interfaceinvoke r10.<java.util.Enumeration: java.lang.Object nextElement()>();

        r11 = (java.lang.String) $r26;

     label10:
        r18 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r11);

     label11:
        r13 = r18;

     label12:
        if r13 != null goto label13;

        $r27 = virtualinvoke r2.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r11);

        r13 = (java.lang.String) $r27;

     label13:
        r14 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String fixupPropertyString(java.lang.String,boolean)>(r11, 1);

     label14:
        r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r14);

     label15:
        r17 = r19;

     label16:
        if r17 != null goto label32;

        r16 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String fixupPropertyString(java.lang.String,boolean)>(r13, 0);

     label17:
        if r11 != r14 goto label18;

        if r13 == r16 goto label09;

     label18:
        virtualinvoke r2.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r11);

        virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, r16);

        goto label09;

     label19:
        $r22 = class "org/apache/xml/serializer/OutputPropertiesFactory";

        r21 = virtualinvoke $r22.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r0);

     label20:
        r3 = r21;

        goto label04;

     label21:
        $r31 := @caughtexception;

        r7 = $r31;

     label22:
        if r1 != null goto label28;

     label23:
        throw r7;

     label24:
        $r47 := @caughtexception;

        r6 = $r47;

     label25:
        if r4 == null goto label26;

        virtualinvoke r4.<java.io.BufferedInputStream: void close()>();

     label26:
        if r3 == null goto label27;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label27:
        throw r6;

     label28:
        $r36 = new org.apache.xml.serializer.utils.WrappedRuntimeException;

        $r34 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r37 = newarray (java.lang.Object)[1];

        $r37[0] = r0;

        $r35 = virtualinvoke $r34.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_LOAD_RESOURCE", $r37);

        specialinvoke $r36.<org.apache.xml.serializer.utils.WrappedRuntimeException: void <init>(java.lang.String,java.lang.Exception)>($r35, r7);

        throw $r36;

     label29:
        if r1 != null goto label31;

     label30:
        throw r5;

     label31:
        $r39 = new org.apache.xml.serializer.utils.WrappedRuntimeException;

        $r45 = <org.apache.xml.serializer.utils.Utils: org.apache.xml.serializer.utils.Messages messages>;

        $r38 = newarray (java.lang.Object)[1];

        $r38[0] = r0;

        $r44 = virtualinvoke $r45.<org.apache.xml.serializer.utils.Messages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_LOAD_RESOURCE", $r38);

        specialinvoke $r39.<org.apache.xml.serializer.utils.WrappedRuntimeException: void <init>(java.lang.String,java.lang.Exception)>($r44, r5);

        throw $r39;

     label32:
        r16 = staticinvoke <org.apache.xml.serializer.OutputPropertiesFactory: java.lang.String fixupPropertyString(java.lang.String,boolean)>(r17, 0);

        goto label17;

     label33:
        $r30 := @caughtexception;

        r13 = null;

        goto label12;

     label34:
        $r42 := @caughtexception;

        r17 = null;

        goto label16;

     label35:
        return r2;

     label36:
        $r43 := @caughtexception;

        r6 = $r43;

        r4 = r9;

        goto label25;

     label37:
        $r40 := @caughtexception;

        r5 = $r40;

        r4 = r9;

        goto label29;

     label38:
        $r41 := @caughtexception;

        r7 = $r41;

        r4 = r9;

        goto label22;

     label39:
        $r46 := @caughtexception;

        r5 = $r46;

        r4 = null;

        goto label29;

        catch java.io.IOException from label01 to label02 with label21;
        catch java.lang.SecurityException from label01 to label02 with label39;
        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.io.IOException from label03 to label04 with label21;
        catch java.lang.SecurityException from label03 to label04 with label39;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.lang.SecurityException from label04 to label05 with label39;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch java.io.IOException from label05 to label06 with label38;
        catch java.lang.SecurityException from label05 to label06 with label37;
        catch java.lang.Throwable from label05 to label06 with label36;
        catch java.lang.SecurityException from label10 to label11 with label33;
        catch java.lang.SecurityException from label14 to label15 with label34;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.SecurityException from label19 to label20 with label39;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label28 to label29 with label24;
        catch java.lang.Throwable from label30 to label31 with label24;
        catch java.lang.Throwable from label31 to label32 with label24;
    }
}
