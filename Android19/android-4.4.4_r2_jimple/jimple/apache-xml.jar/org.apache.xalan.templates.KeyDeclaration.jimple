public class org.apache.xalan.templates.KeyDeclaration extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;
    private org.apache.xpath.XPath m_matchPattern;
    private org.apache.xml.utils.QName m_name;
    private org.apache.xpath.XPath m_use;

    public void <init>(org.apache.xalan.templates.Stylesheet, int)
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xalan.templates.Stylesheet r1;
        int i0;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        r1 := @parameter0: org.apache.xalan.templates.Stylesheet;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_matchPattern> = null;

        r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xalan.templates.ElemTemplateElement m_parentNode> = r1;

        virtualinvoke r0.<org.apache.xalan.templates.KeyDeclaration: void setUid(int)>(i0);

        return;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.util.Vector r2;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r3, $r7, $r9;
        org.apache.xpath.XPath $r4, $r5, $r6, $r8;
        int $i0, $i1;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r3 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        r2 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r4 = r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_matchPattern>;

        if $r4 == null goto label1;

        $r8 = r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_matchPattern>;

        $r9 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i1 = virtualinvoke $r9.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r8.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>(r2, $i1);

     label1:
        $r5 = r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_use>;

        if $r5 == null goto label2;

        $r6 = r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_use>;

        $r7 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i0 = virtualinvoke $r7.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r6.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>(r2, $i0);

     label2:
        return;
    }

    public org.apache.xpath.XPath getMatch()
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xpath.XPath $r1;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        $r1 = r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_matchPattern>;

        return $r1;
    }

    public org.apache.xml.utils.QName getName()
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xml.utils.QName $r1;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        $r1 = r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xml.utils.QName m_name>;

        return $r1;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.KeyDeclaration r0;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        return "key";
    }

    public org.apache.xpath.XPath getUse()
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xpath.XPath $r1;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        $r1 = r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_use>;

        return $r1;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.KeyDeclaration r0;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        return 31;
    }

    public void recompose(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: void recomposeKeys(org.apache.xalan.templates.KeyDeclaration)>(r0);

        return;
    }

    public void setMatch(org.apache.xpath.XPath)
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xpath.XPath r1;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        r1 := @parameter0: org.apache.xpath.XPath;

        r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_matchPattern> = r1;

        return;
    }

    public void setName(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xml.utils.QName r1;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xml.utils.QName m_name> = r1;

        return;
    }

    public void setUse(org.apache.xpath.XPath)
    {
        org.apache.xalan.templates.KeyDeclaration r0;
        org.apache.xpath.XPath r1;

        r0 := @this: org.apache.xalan.templates.KeyDeclaration;

        r1 := @parameter0: org.apache.xpath.XPath;

        r0.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath m_use> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.KeyDeclaration: long serialVersionUID> = 7724030248631137918L;

        return;
    }
}
