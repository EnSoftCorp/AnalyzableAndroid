public class org.apache.xml.utils.SystemIDResolver extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xml.utils.SystemIDResolver r0;

        r0 := @this: org.apache.xml.utils.SystemIDResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String getAbsolutePathFromRelativePath(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.io.File $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;
    }

    public static java.lang.String getAbsoluteURI(java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, r5, $r6, $r7, $r8, $r11, $r13;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.SecurityException $r14;

        r0 := @parameter0: java.lang.String;

        r1 = r0;

        $z0 = staticinvoke <org.apache.xml.utils.SystemIDResolver: boolean isAbsoluteURI(java.lang.String)>(r0);

        if $z0 == 0 goto label8;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

        if $z1 == 0 goto label5;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5);

        if r2 == null goto label7;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z2 == 0 goto label7;

        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("///");

        if $z3 != 0 goto label1;

        $z5 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $z5 != 0 goto label4;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(58, 5);

        if i0 <= 0 goto label4;

        $i1 = i0 - 1;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        $z4 = staticinvoke <org.apache.xml.utils.SystemIDResolver: boolean isAbsolutePath(java.lang.String)>(r3);

        if $z4 != 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $i2 = i0 - 1;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsolutePathFromRelativePath(java.lang.String)>(r3);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r1 = r5;

     label4:
        r0 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String replaceChars(java.lang.String)>(r1);

     label5:
        return r0;

     label6:
        $r14 := @caughtexception;

        return r0;

     label7:
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5);

        $r8 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURIFromRelative(java.lang.String)>($r7);

        return $r8;

     label8:
        $r6 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURIFromRelative(java.lang.String)>(r0);

        return $r6;

        catch java.lang.SecurityException from label2 to label3 with label6;
    }

    public static java.lang.String getAbsoluteURI(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        java.lang.String r0, r1, r2, $r7, $r8, $r9;
        org.apache.xml.utils.URI r3, $r5, $r6;
        org.apache.xml.utils.URI$MalformedURIException r4, $r10;
        javax.xml.transform.TransformerException $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r9 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)>(r0);

        return $r9;

     label1:
        r2 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)>(r1);

     label2:
        $r5 = new org.apache.xml.utils.URI;

        $r6 = new org.apache.xml.utils.URI;

        specialinvoke $r6.<org.apache.xml.utils.URI: void <init>(java.lang.String)>(r2);

        specialinvoke $r5.<org.apache.xml.utils.URI: void <init>(org.apache.xml.utils.URI,java.lang.String)>($r6, r0);

        r3 = $r5;

     label3:
        $r7 = virtualinvoke r3.<org.apache.xml.utils.URI: java.lang.String toString()>();

        $r8 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String replaceChars(java.lang.String)>($r7);

        return $r8;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        $r11 = new javax.xml.transform.TransformerException;

        specialinvoke $r11.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r4);

        throw $r11;

        catch org.apache.xml.utils.URI$MalformedURIException from label2 to label3 with label4;
    }

    public static java.lang.String getAbsoluteURIFromRelative(java.lang.String)
    {
        java.lang.String r0, r1, r2, r4, $r8, $r9, $r19;
        int $i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r20;
        java.lang.SecurityException $r16;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        r1 = r0;

        $z0 = staticinvoke <org.apache.xml.utils.SystemIDResolver: boolean isAbsolutePath(java.lang.String)>(r0);

        if $z0 != 0 goto label5;

     label3:
        r4 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsolutePathFromRelativePath(java.lang.String)>(r0);

     label4:
        r1 = r4;

     label5:
        if r1 == null goto label9;

        $r9 = <java.io.File: java.lang.String separator>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r9);

        if $z1 == 0 goto label8;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r2 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r8 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String replaceChars(java.lang.String)>(r2);

        return $r8;

     label7:
        $r16 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;

     label8:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:///");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label9:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

        catch java.lang.SecurityException from label3 to label4 with label7;
    }

    public static boolean isAbsolutePath(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean isAbsolute()>();

        return $z0;
    }

    public static boolean isAbsoluteURI(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, i4, $i5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.utils.SystemIDResolver: boolean isWindowsAbsolutePath(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(35);

        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);

        i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = -1 + $i5;

        if i0 <= 0 goto label3;

        i4 = i0;

     label3:
        if i1 <= 0 goto label4;

        if i1 >= i4 goto label4;

        i4 = i1;

     label4:
        if i2 <= 0 goto label5;

        if i2 >= i4 goto label5;

        i4 = i2;

     label5:
        if i3 <= 0 goto label1;

        if i3 >= i4 goto label1;

        return 1;
    }

    private static boolean isWindowsAbsolutePath(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        int $i0;
        char $c1, $c2, $c3, $c4;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.utils.SystemIDResolver: boolean isAbsolutePath(java.lang.String)>(r0);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 2 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        if $c1 != 58 goto label1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z1 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c2);

        if $z1 == 0 goto label1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        if $c3 == 92 goto label3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        if $c4 != 47 goto label1;

     label3:
        return 1;
    }

    private static java.lang.String replaceChars(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.lang.StringBuffer r1, $r2;
        int i0, i1, $i3;
        char c2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        c2 = virtualinvoke r1.<java.lang.StringBuffer: char charAt(int)>(i1);

        if c2 != 32 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: void setCharAt(int,char)>(i1, 37);

        $i3 = i1 + 1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>($i3, "20");

        i0 = i0 + 2;

        i1 = i1 + 2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if c2 != 92 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: void setCharAt(int,char)>(i1, 47);

        goto label2;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
}
