public class org.apache.xalan.templates.ElemExtensionCall extends org.apache.xalan.templates.ElemLiteralResult
{
    static final long serialVersionUID;
    org.apache.xalan.templates.ElemExtensionDecl m_decl;
    java.lang.String m_extns;
    java.lang.String m_lang;
    java.lang.String m_scriptSrc;
    java.lang.String m_srcURL;

    public void <init>()
    {
        org.apache.xalan.templates.ElemExtensionCall r0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        specialinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: void <init>()>();

        r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl m_decl> = null;

        return;
    }

    private void executeFallbacks(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xalan.templates.ElemTemplateElement r2;
        java.lang.Throwable r3, $r5;
        int $i0;
        org.apache.xalan.templates.ElemFallback $r4;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 = r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label1:
        if r2 == null goto label6;

        $i0 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 57 goto label4;

     label2:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r2);

        $r4 = (org.apache.xalan.templates.ElemFallback) r2;

        virtualinvoke $r4.<org.apache.xalan.templates.ElemFallback: void executeFallback(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label3:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

     label4:
        r2 = r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label1;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    private org.apache.xalan.templates.ElemExtensionDecl getElemExtensionDecl(org.apache.xalan.templates.StylesheetRoot, java.lang.String)
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.lang.String r2, $r6, $r7;
        int i0, i1, $i2;
        org.apache.xalan.templates.ElemTemplateElement r3;
        org.apache.xalan.templates.ElemExtensionDecl r4;
        org.apache.xalan.templates.StylesheetComposed $r5;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        r2 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: int getGlobalImportCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r5 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetComposed getGlobalImport(int)>(i1);

        r3 = virtualinvoke $r5.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

     label2:
        if r3 == null goto label4;

        $i2 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 85 != $i2 goto label3;

        r4 = (org.apache.xalan.templates.ElemExtensionDecl) r3;

        $r6 = virtualinvoke r4.<org.apache.xalan.templates.ElemExtensionDecl: java.lang.String getPrefix()>();

        $r7 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String)>($r6);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label3;

        return r4;

     label3:
        r3 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

        goto label2;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return null;
    }

    private boolean hasFallbackChildren()
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.templates.ElemTemplateElement r1;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 = r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

     label1:
        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 57 goto label2;

        return 1;

     label2:
        r1 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

        goto label1;

     label3:
        return 0;
    }

    protected boolean accept(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.XSLTVisitor: boolean visitExtensionElement(org.apache.xalan.templates.ElemExtensionCall)>(r0);

        return $z0;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.lang.String $r2, $r3, $r7;
        org.apache.xalan.templates.ElemExtensionDecl $r4, $r5;
        org.apache.xalan.extensions.ExtensionNamespacesManager $r6;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String getNamespace()>();

        r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String m_extns> = $r2;

        $r3 = r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String m_extns>;

        $r4 = specialinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl getElemExtensionDecl(org.apache.xalan.templates.StylesheetRoot,java.lang.String)>(r1, $r3);

        r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl m_decl> = $r4;

        $r5 = r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl m_decl>;

        if $r5 != null goto label1;

        $r6 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.extensions.ExtensionNamespacesManager getExtensionNamespacesManager()>();

        $r7 = r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String m_extns>;

        virtualinvoke $r6.<org.apache.xalan.extensions.ExtensionNamespacesManager: void registerExtension(java.lang.String)>($r7);

     label1:
        return;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.xml.sax.SAXException r2, $r24;
        javax.xml.transform.TransformerException r3, r6, r8, $r16, $r22, $r23, $r27, $r31, $r32;
        org.apache.xalan.extensions.ExtensionHandler r4;
        java.lang.Object[] r5, r9;
        java.lang.Exception r7, $r25;
        org.apache.xalan.templates.StylesheetRoot $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xml.serializer.SerializationHandler $r11;
        org.apache.xalan.extensions.ExtensionsTable $r12;
        java.lang.String $r13, $r15, $r17, $r19, $r20, $r21;
        org.apache.xalan.templates.Stylesheet $r14;
        javax.xml.transform.ErrorListener $r18, $r26, $r29, $r30, $r33;
        javax.xml.transform.SourceLocator $r28;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $r10 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        $z0 = virtualinvoke $r10.<org.apache.xalan.templates.StylesheetRoot: boolean isSecureProcessing()>();

        if $z0 == 0 goto label01;

        r9 = newarray (java.lang.Object)[1];

        $r20 = virtualinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String getRawName()>();

        r9[0] = $r20;

        $r22 = new javax.xml.transform.TransformerException;

        $r21 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING", r9);

        specialinvoke $r22.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r21);

        throw $r22;

     label01:
        $r11 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        interfaceinvoke $r11.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        $r12 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $r13 = r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String m_extns>;

        r4 = virtualinvoke $r12.<org.apache.xalan.extensions.ExtensionsTable: org.apache.xalan.extensions.ExtensionHandler get(java.lang.String)>($r13);

     label02:
        if r4 != null goto label08;

     label03:
        $z1 = specialinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: boolean hasFallbackChildren()>();

        if $z1 == 0 goto label05;

        specialinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label04:
        return;

     label05:
        r5 = newarray (java.lang.Object)[1];

        $r17 = virtualinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String getNodeName()>();

        r5[0] = $r17;

        $r16 = new javax.xml.transform.TransformerException;

        $r19 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CALL_TO_EXT_FAILED", r5);

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r19);

        r6 = $r16;

        $r18 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        interfaceinvoke $r18.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r6);

     label06:
        return;

     label07:
        $r32 := @caughtexception;

        r3 = $r32;

        $r33 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        interfaceinvoke $r33.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r3);

        return;

     label08:
        $r15 = virtualinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String getLocalName()>();

        $r14 = virtualinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        virtualinvoke r4.<org.apache.xalan.extensions.ExtensionHandler: void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)>($r15, r0, r1, $r14, r0);

     label09:
        return;

     label10:
        $r25 := @caughtexception;

        r7 = $r25;

     label11:
        $z2 = specialinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: boolean hasFallbackChildren()>();

        if $z2 == 0 goto label14;

        specialinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)>(r1);

     label12:
        return;

     label13:
        $r24 := @caughtexception;

        r2 = $r24;

        $r23 = new javax.xml.transform.TransformerException;

        specialinvoke $r23.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r2);

        throw $r23;

     label14:
        $z3 = r7 instanceof javax.xml.transform.TransformerException;

        if $z3 == 0 goto label17;

        r8 = (javax.xml.transform.TransformerException) r7;

        $r28 = virtualinvoke r8.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator getLocator()>();

        if $r28 != null goto label15;

        virtualinvoke r8.<javax.xml.transform.TransformerException: void setLocator(javax.xml.transform.SourceLocator)>(r0);

     label15:
        $r29 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        interfaceinvoke $r29.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r8);

     label16:
        return;

     label17:
        $z4 = r7 instanceof java.lang.RuntimeException;

        if $z4 == 0 goto label19;

        $r30 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        $r31 = new javax.xml.transform.TransformerException;

        specialinvoke $r31.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r7);

        interfaceinvoke $r30.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r31);

     label18:
        return;

     label19:
        $r26 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        $r27 = new javax.xml.transform.TransformerException;

        specialinvoke $r27.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r7);

        interfaceinvoke $r26.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r27);

     label20:
        return;

        catch javax.xml.transform.TransformerException from label01 to label02 with label07;
        catch org.xml.sax.SAXException from label01 to label02 with label13;
        catch javax.xml.transform.TransformerException from label03 to label04 with label07;
        catch org.xml.sax.SAXException from label03 to label04 with label13;
        catch javax.xml.transform.TransformerException from label05 to label06 with label07;
        catch org.xml.sax.SAXException from label05 to label06 with label13;
        catch java.lang.Exception from label08 to label09 with label10;
        catch javax.xml.transform.TransformerException from label08 to label09 with label07;
        catch org.xml.sax.SAXException from label08 to label09 with label13;
        catch javax.xml.transform.TransformerException from label11 to label12 with label07;
        catch org.xml.sax.SAXException from label11 to label12 with label13;
        catch javax.xml.transform.TransformerException from label14 to label15 with label07;
        catch org.xml.sax.SAXException from label14 to label15 with label13;
        catch javax.xml.transform.TransformerException from label15 to label16 with label07;
        catch org.xml.sax.SAXException from label15 to label16 with label13;
        catch javax.xml.transform.TransformerException from label17 to label18 with label07;
        catch org.xml.sax.SAXException from label17 to label18 with label13;
        catch javax.xml.transform.TransformerException from label19 to label20 with label07;
        catch org.xml.sax.SAXException from label19 to label20 with label13;
    }

    public java.lang.String getAttribute(java.lang.String, org.w3c.dom.Node, org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        java.lang.String r1, $r6, $r7;
        org.w3c.dom.Node r2;
        org.apache.xalan.transformer.TransformerImpl r3;
        org.apache.xalan.templates.AVT r4;
        org.apache.xpath.XPathContext r5;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Node;

        r3 := @parameter2: org.apache.xalan.transformer.TransformerImpl;

        r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.AVT getLiteralResultAttribute(java.lang.String)>(r1);

        if r4 == null goto label1;

        $r6 = virtualinvoke r4.<org.apache.xalan.templates.AVT: java.lang.String getRawName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r3.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $i0 = virtualinvoke r5.<org.apache.xpath.XPathContext: int getDTMHandleFromNode(org.w3c.dom.Node)>(r2);

        $r7 = virtualinvoke r4.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r5, $i0, r0);

        return $r7;

     label1:
        return null;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemExtensionCall r0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        return 79;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemExtensionCall: long serialVersionUID> = 3171339708500216920L;

        return;
    }
}
