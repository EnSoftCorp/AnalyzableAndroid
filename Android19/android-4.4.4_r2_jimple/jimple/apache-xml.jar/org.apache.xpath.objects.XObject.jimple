public class org.apache.xpath.objects.XObject extends org.apache.xpath.Expression implements java.io.Serializable, java.lang.Cloneable
{
    public static final int CLASS_BOOLEAN;
    public static final int CLASS_NODESET;
    public static final int CLASS_NULL;
    public static final int CLASS_NUMBER;
    public static final int CLASS_RTREEFRAG;
    public static final int CLASS_STRING;
    public static final int CLASS_UNKNOWN;
    public static final int CLASS_UNRESOLVEDVARIABLE;
    static final long serialVersionUID;
    protected java.lang.Object m_obj;

    public void <init>()
    {
        org.apache.xpath.objects.XObject r0;

        r0 := @this: org.apache.xpath.objects.XObject;

        specialinvoke r0.<org.apache.xpath.Expression: void <init>()>();

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object r1;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.Expression: void <init>()>();

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void setObject(java.lang.Object)>(r1);

        return;
    }

    public static org.apache.xpath.objects.XObject create(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.xpath.objects.XObject $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.apache.xpath.objects.XObjectFactory: org.apache.xpath.objects.XObject create(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.apache.xpath.objects.XObject create(java.lang.Object, org.apache.xpath.XPathContext)
    {
        java.lang.Object r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xpath.objects.XObject $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.apache.xpath.XPathContext;

        $r2 = staticinvoke <org.apache.xpath.objects.XObjectFactory: org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)>(r0, r1);

        return $r2;
    }

    public void allowDetachToRelease(boolean)
    {
        org.apache.xpath.objects.XObject r0;
        boolean z0;

        r0 := @this: org.apache.xpath.objects.XObject;

        z0 := @parameter0: boolean;

        return;
    }

    public void appendToFsb(org.apache.xml.utils.FastStringBuffer)
    {
        org.apache.xpath.objects.XObject r0;
        org.apache.xml.utils.FastStringBuffer r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xml.utils.FastStringBuffer;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        virtualinvoke r1.<org.apache.xml.utils.FastStringBuffer: void append(java.lang.String)>($r2);

        return;
    }

    public boolean bool() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object[] r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        r1[0] = $r2;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void error(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_NUMBER", r1);

        return 0;
    }

    public boolean boolWithSideEffects() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XObject;

        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean bool()>();

        return $z0;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.objects.XObject r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.XPathVisitor r2;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.XPathVisitor;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void assertion(boolean,java.lang.String)>(0, "callVisitors should not be called for this object!!!");

        return;
    }

    public java.lang.Object castToType(int, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        int i0;
        org.apache.xpath.XPathContext r1;
        java.lang.Object[] r2;
        java.lang.String $r3, $r4, $r6;
        org.apache.xml.dtm.DTMIterator $r5;
        java.lang.Double $r7;
        double $d0;
        java.lang.Boolean $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: org.apache.xpath.objects.XObject;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xpath.XPathContext;

        tableswitch(i0)
        {
            case 0: goto label6;
            case 1: goto label5;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label4;
            default: goto label1;
        };

     label1:
        r2 = newarray (java.lang.Object)[2];

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        r2[1] = $r4;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void error(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_TYPE", r2);

        return null;

     label2:
        $r6 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        return $r6;

     label3:
        $r7 = new java.lang.Double;

        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        specialinvoke $r7.<java.lang.Double: void <init>(double)>($d0);

        return $r7;

     label4:
        $r5 = virtualinvoke r0.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        return $r5;

     label5:
        $r8 = new java.lang.Boolean;

        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean bool()>();

        specialinvoke $r8.<java.lang.Boolean: void <init>(boolean)>($z0);

        return $r8;

     label6:
        $r9 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        return $r9;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.objects.XObject r0, $r2;
        org.apache.xpath.Expression r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean isSameClass(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = (org.apache.xpath.objects.XObject) r1;

        $z1 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>($r2);

        if $z1 == 0 goto label1;

        return 1;
    }

    public void destruct()
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.xpath.objects.XObject;

        $r1 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        if $r1 == null goto label1;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void allowDetachToRelease(boolean)>(1);

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void detach()>();

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void setObject(java.lang.Object)>(null);

     label1:
        return;
    }

    public void detach()
    {
        org.apache.xpath.objects.XObject r0;

        r0 := @this: org.apache.xpath.objects.XObject;

        return;
    }

    public void dispatchCharactersEvents(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException
    {
        org.apache.xpath.objects.XObject r0;
        org.xml.sax.ContentHandler r1;
        org.apache.xml.utils.XMLString $r2;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        interfaceinvoke $r2.<org.apache.xml.utils.XMLString: void dispatchCharactersEvents(org.xml.sax.ContentHandler)>(r1);

        return;
    }

    public boolean equals(org.apache.xpath.objects.XObject)
    {
        org.apache.xpath.objects.XObject r0, r1;
        int $i0;
        java.lang.Object $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int getType()>();

        if $i0 != 4 goto label1;

        $z1 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>(r0);

        return $z1;

     label1:
        $r2 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        $r4 = r1.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z0;

     label2:
        $r3 = r1.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        if $r3 != null goto label3;

        return 1;

     label3:
        return 0;
    }

    protected void error(java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.String r1;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void error(java.lang.String,java.lang.Object[])>(r1, null);

        return;
    }

    protected void error(java.lang.String, java.lang.Object[]) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.xpath.XPathException $r3;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new org.apache.xpath.XPathException;

        $r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>(r1, r2);

        specialinvoke $r3.<org.apache.xpath.XPathException: void <init>(java.lang.String,org.apache.xpath.ExpressionNode)>($r4, r0);

        throw $r3;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        org.apache.xpath.XPathContext r1;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        return r0;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.objects.XObject r0;
        java.util.Vector r1;
        int i0;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        return;
    }

    public org.apache.xpath.objects.XObject getFresh()
    {
        org.apache.xpath.objects.XObject r0;

        r0 := @this: org.apache.xpath.objects.XObject;

        return r0;
    }

    public int getType()
    {
        org.apache.xpath.objects.XObject r0;

        r0 := @this: org.apache.xpath.objects.XObject;

        return 0;
    }

    public java.lang.String getTypeString()
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.StringBuilder $r1, $r2, $r6, $r7;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r0 := @this: org.apache.xpath.objects.XObject;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#UNKNOWN (");

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public boolean greaterThan(org.apache.xpath.objects.XObject) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0, r1;
        int $i0;
        double $d0, $d1;
        byte $b1;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int getType()>();

        if $i0 != 4 goto label1;

        $z0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean lessThan(org.apache.xpath.objects.XObject)>(r0);

        return $z0;

     label1:
        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        $d1 = virtualinvoke r1.<org.apache.xpath.objects.XObject: double num()>();

        $b1 = $d0 cmpl $d1;

        if $b1 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean greaterThanOrEqual(org.apache.xpath.objects.XObject) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0, r1;
        int $i0;
        double $d0, $d1;
        byte $b1;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int getType()>();

        if $i0 != 4 goto label1;

        $z0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean lessThanOrEqual(org.apache.xpath.objects.XObject)>(r0);

        return $z0;

     label1:
        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        $d1 = virtualinvoke r1.<org.apache.xpath.objects.XObject: double num()>();

        $b1 = $d0 cmpl $d1;

        if $b1 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public org.apache.xml.dtm.DTMIterator iter() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object[] r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        r1[0] = $r2;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void error(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_NODELIST", r1);

        return null;
    }

    public boolean lessThan(org.apache.xpath.objects.XObject) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0, r1;
        int $i0;
        double $d0, $d1;
        byte $b1;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int getType()>();

        if $i0 != 4 goto label1;

        $z0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean greaterThan(org.apache.xpath.objects.XObject)>(r0);

        return $z0;

     label1:
        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        $d1 = virtualinvoke r1.<org.apache.xpath.objects.XObject: double num()>();

        $b1 = $d0 cmpg $d1;

        if $b1 >= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean lessThanOrEqual(org.apache.xpath.objects.XObject) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0, r1;
        int $i0;
        double $d0, $d1;
        byte $b1;
        boolean $z0;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int getType()>();

        if $i0 != 4 goto label1;

        $z0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)>(r0);

        return $z0;

     label1:
        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        $d1 = virtualinvoke r1.<org.apache.xpath.objects.XObject: double num()>();

        $b1 = $d0 cmpg $d1;

        if $b1 > 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public org.apache.xpath.NodeSetDTM mutableNodeset() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object[] r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        org.apache.xpath.NodeSetDTM $r4;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        r1[0] = $r2;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void error(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_MUTABLENODELIST", r1);

        $r3 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        $r4 = (org.apache.xpath.NodeSetDTM) $r3;

        return $r4;
    }

    public org.w3c.dom.NodeList nodelist() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object[] r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        r1[0] = $r2;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void error(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_NODELIST", r1);

        return null;
    }

    public org.w3c.dom.traversal.NodeIterator nodeset() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object[] r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        r1[0] = $r2;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void error(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_NODELIST", r1);

        return null;
    }

    public boolean notEquals(org.apache.xpath.objects.XObject) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0, r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.objects.XObject;

        $i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int getType()>();

        if $i0 != 4 goto label1;

        $z1 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean notEquals(org.apache.xpath.objects.XObject)>(r0);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>(r1);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public double num() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object[] r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        r1[0] = $r2;

        virtualinvoke r0.<org.apache.xpath.objects.XObject: void error(java.lang.String,java.lang.Object[])>("ER_CANT_CONVERT_TO_NUMBER", r1);

        return 0.0;
    }

    public double numWithSideEffects() throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XObject r0;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XObject;

        $d0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: double num()>();

        return $d0;
    }

    public java.lang.Object object()
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.xpath.objects.XObject;

        $r1 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        return $r1;
    }

    public void reset()
    {
        org.apache.xpath.objects.XObject r0;

        r0 := @this: org.apache.xpath.objects.XObject;

        return;
    }

    public int rtf()
    {
        org.apache.xpath.objects.XObject r0;

        r0 := @this: org.apache.xpath.objects.XObject;

        return -1;
    }

    public int rtf(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.objects.XObject r0;
        org.apache.xpath.XPathContext r1;
        int i0;
        org.apache.xml.dtm.DTM r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int rtf()>();

        if -1 != i0 goto label1;

        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM createDocumentFragment()>();

        $r3 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        interfaceinvoke r2.<org.apache.xml.dtm.DTM: void appendTextChild(java.lang.String)>($r3);

        i0 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getDocument()>();

     label1:
        return i0;
    }

    public org.w3c.dom.DocumentFragment rtree()
    {
        org.apache.xpath.objects.XObject r0;

        r0 := @this: org.apache.xpath.objects.XObject;

        return null;
    }

    public org.w3c.dom.DocumentFragment rtree(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.objects.XObject r0;
        org.apache.xpath.XPathContext r1;
        int i0, $i1, $i2;
        org.apache.xml.dtm.DTM r2, r3;
        org.w3c.dom.Node $r4, $r7;
        org.w3c.dom.DocumentFragment $r5, $r8;
        java.lang.String $r6;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 = virtualinvoke r0.<org.apache.xpath.objects.XObject: int rtf()>();

        if -1 != i0 goto label1;

        r3 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM createDocumentFragment()>();

        $r6 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        interfaceinvoke r3.<org.apache.xml.dtm.DTM: void appendTextChild(java.lang.String)>($r6);

        $i2 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: int getDocument()>();

        $r7 = interfaceinvoke r3.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i2);

        $r8 = (org.w3c.dom.DocumentFragment) $r7;

        return $r8;

     label1:
        r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $i1 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: int getDocument()>();

        $r4 = interfaceinvoke r2.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i1);

        $r5 = (org.w3c.dom.DocumentFragment) $r4;

        return $r5;
    }

    protected void setObject(java.lang.Object)
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object r1;

        r0 := @this: org.apache.xpath.objects.XObject;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj> = r1;

        return;
    }

    public java.lang.String str()
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xpath.objects.XObject;

        $r1 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xpath.objects.XObject: java.lang.Object m_obj>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;

     label1:
        return "";
    }

    public java.lang.String toString()
    {
        org.apache.xpath.objects.XObject r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.objects.XObject;

        $r1 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        return $r1;
    }

    public org.apache.xml.utils.XMLString xstr()
    {
        org.apache.xpath.objects.XObject r0;
        org.apache.xml.utils.XMLStringFactory $r1;
        java.lang.String $r2;
        org.apache.xml.utils.XMLString $r3;

        r0 := @this: org.apache.xpath.objects.XObject;

        $r1 = staticinvoke <org.apache.xpath.objects.XMLStringFactoryImpl: org.apache.xml.utils.XMLStringFactory getFactory()>();

        $r2 = virtualinvoke r0.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $r3 = virtualinvoke $r1.<org.apache.xml.utils.XMLStringFactory: org.apache.xml.utils.XMLString newstr(java.lang.String)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.objects.XObject: long serialVersionUID> = -821887098985662951L;

        <org.apache.xpath.objects.XObject: int CLASS_UNRESOLVEDVARIABLE> = 600;

        <org.apache.xpath.objects.XObject: int CLASS_UNKNOWN> = 0;

        <org.apache.xpath.objects.XObject: int CLASS_STRING> = 3;

        <org.apache.xpath.objects.XObject: int CLASS_RTREEFRAG> = 5;

        <org.apache.xpath.objects.XObject: int CLASS_NUMBER> = 2;

        <org.apache.xpath.objects.XObject: int CLASS_NULL> = -1;

        <org.apache.xpath.objects.XObject: int CLASS_NODESET> = 4;

        <org.apache.xpath.objects.XObject: int CLASS_BOOLEAN> = 1;

        return;
    }
}
