public class org.apache.xpath.axes.FilterExprIterator extends org.apache.xpath.axes.BasicTestIterator
{
    static final long serialVersionUID;
    private boolean m_canDetachNodeset;
    private org.apache.xpath.Expression m_expr;
    private transient org.apache.xpath.objects.XNodeSet m_exprObj;
    private boolean m_mustHardReset;

    public void <init>()
    {
        org.apache.xpath.axes.FilterExprIterator r0;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        specialinvoke r0.<org.apache.xpath.axes.BasicTestIterator: void <init>(org.apache.xml.utils.PrefixResolver)>(null);

        r0.<org.apache.xpath.axes.FilterExprIterator: boolean m_mustHardReset> = 0;

        r0.<org.apache.xpath.axes.FilterExprIterator: boolean m_canDetachNodeset> = 1;

        return;
    }

    public void <init>(org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.Expression r1;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        r1 := @parameter0: org.apache.xpath.Expression;

        specialinvoke r0.<org.apache.xpath.axes.BasicTestIterator: void <init>(org.apache.xml.utils.PrefixResolver)>(null);

        r0.<org.apache.xpath.axes.FilterExprIterator: boolean m_mustHardReset> = 0;

        r0.<org.apache.xpath.axes.FilterExprIterator: boolean m_canDetachNodeset> = 1;

        r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr> = r1;

        return;
    }

    static org.apache.xpath.Expression access$000(org.apache.xpath.axes.FilterExprIterator)
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.Expression $r1;

        r0 := @parameter0: org.apache.xpath.axes.FilterExprIterator;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        return $r1;
    }

    static org.apache.xpath.Expression access$002(org.apache.xpath.axes.FilterExprIterator, org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.Expression r1;

        r0 := @parameter0: org.apache.xpath.axes.FilterExprIterator;

        r1 := @parameter1: org.apache.xpath.Expression;

        r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr> = r1;

        return r1;
    }

    public void callPredicateVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.XPathVisitor r1;
        org.apache.xpath.axes.FilterExprIterator$filterExprOwner $r2;
        org.apache.xpath.Expression $r3;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        r1 := @parameter0: org.apache.xpath.XPathVisitor;

        $r3 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        $r2 = new org.apache.xpath.axes.FilterExprIterator$filterExprOwner;

        specialinvoke $r2.<org.apache.xpath.axes.FilterExprIterator$filterExprOwner: void <init>(org.apache.xpath.axes.FilterExprIterator)>(r0);

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r2, r1);

        specialinvoke r0.<org.apache.xpath.axes.BasicTestIterator: void callPredicateVisitors(org.apache.xpath.XPathVisitor)>(r1);

        return;
    }

    public boolean deepEquals(org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.FilterExprIterator r0, r2;
        org.apache.xpath.Expression r1, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        r1 := @parameter0: org.apache.xpath.Expression;

        $z0 = specialinvoke r0.<org.apache.xpath.axes.BasicTestIterator: boolean deepEquals(org.apache.xpath.Expression)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (org.apache.xpath.axes.FilterExprIterator) r1;

        $r4 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        $r3 = r2.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        $z1 = virtualinvoke $r4.<org.apache.xpath.Expression: boolean deepEquals(org.apache.xpath.Expression)>($r3);

        if $z1 == 0 goto label1;

        return 1;
    }

    public void detach()
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.objects.XNodeSet $r1;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        specialinvoke r0.<org.apache.xpath.axes.BasicTestIterator: void detach()>();

        $r1 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.objects.XNodeSet m_exprObj>;

        virtualinvoke $r1.<org.apache.xpath.objects.XNodeSet: void detach()>();

        r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.objects.XNodeSet m_exprObj> = null;

        return;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        java.util.Vector r1;
        int i0;
        org.apache.xpath.Expression $r2;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.axes.BasicTestIterator: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        virtualinvoke $r2.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        return;
    }

    public int getAnalysisBits()
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.Expression $r1, $r2, $r3;
        boolean $z0;
        org.apache.xpath.axes.PathComponent $r4;
        int $i0;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        $z0 = $r2 instanceof org.apache.xpath.axes.PathComponent;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        $r4 = (org.apache.xpath.axes.PathComponent) $r3;

        $i0 = interfaceinvoke $r4.<org.apache.xpath.axes.PathComponent: int getAnalysisBits()>();

        return $i0;

     label1:
        return 67108864;
    }

    public org.apache.xpath.Expression getInnerExpression()
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.Expression $r1;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        return $r1;
    }

    protected int getNextNode()
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.objects.XNodeSet $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.objects.XNodeSet m_exprObj>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $i1 = virtualinvoke $r2.<org.apache.xpath.objects.XNodeSet: int nextNode()>();

        r0.<org.apache.xpath.axes.FilterExprIterator: int m_lastFetched> = $i1;

     label1:
        $i0 = r0.<org.apache.xpath.axes.FilterExprIterator: int m_lastFetched>;

        return $i0;

     label2:
        r0.<org.apache.xpath.axes.FilterExprIterator: int m_lastFetched> = -1;

        goto label1;
    }

    public boolean isDocOrdered()
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.objects.XNodeSet $r1;
        boolean $z0;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        $r1 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.objects.XNodeSet m_exprObj>;

        $z0 = virtualinvoke $r1.<org.apache.xpath.objects.XNodeSet: boolean isDocOrdered()>();

        return $z0;
    }

    public void setInnerExpression(org.apache.xpath.Expression)
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        org.apache.xpath.Expression r1;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        r1 := @parameter0: org.apache.xpath.Expression;

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr> = r1;

        return;
    }

    public void setRoot(int, java.lang.Object)
    {
        org.apache.xpath.axes.FilterExprIterator r0;
        int i0, $i1;
        java.lang.Object r1;
        org.apache.xpath.XPathContext $r2;
        org.apache.xml.utils.PrefixResolver $r3;
        boolean $z0;
        org.apache.xpath.Expression $r4;
        org.apache.xpath.objects.XNodeSet $r5;

        r0 := @this: org.apache.xpath.axes.FilterExprIterator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.axes.BasicTestIterator: void setRoot(int,java.lang.Object)>(i0, r1);

        $r2 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.XPathContext m_execContext>;

        $r3 = virtualinvoke r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()>();

        $z0 = virtualinvoke r0.<org.apache.xpath.axes.FilterExprIterator: boolean getIsTopLevel()>();

        $i1 = r0.<org.apache.xpath.axes.FilterExprIterator: int m_stackFrame>;

        $r4 = r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression m_expr>;

        $r5 = staticinvoke <org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)>(i0, $r2, $r3, $z0, $i1, $r4);

        r0.<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.objects.XNodeSet m_exprObj> = $r5;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.FilterExprIterator: long serialVersionUID> = 2552176105165737614L;

        return;
    }
}
