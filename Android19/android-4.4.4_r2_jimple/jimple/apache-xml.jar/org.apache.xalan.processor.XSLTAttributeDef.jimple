public class org.apache.xalan.processor.XSLTAttributeDef extends java.lang.Object
{
    static final int ERROR;
    static final int FATAL;
    static final java.lang.String S_FOREIGNATTR_SETTER;
    static final int T_AVT;
    static final int T_AVT_QNAME;
    static final int T_CDATA;
    static final int T_CHAR;
    static final int T_ENUM;
    static final int T_ENUM_OR_PQNAME;
    static final int T_EXPR;
    static final int T_NCNAME;
    static final int T_NMTOKEN;
    static final int T_NUMBER;
    static final int T_PATTERN;
    static final int T_PREFIXLIST;
    static final int T_PREFIX_URLLIST;
    static final int T_QNAME;
    static final int T_QNAMES;
    static final int T_QNAMES_RESOLVE_NULL;
    static final int T_SIMPLEPATTERNLIST;
    static final int T_STRINGLIST;
    static final int T_URL;
    static final int T_YESNO;
    static final int WARNING;
    static final org.apache.xalan.processor.XSLTAttributeDef m_foreignAttr;
    private java.lang.String m_default;
    private org.apache.xml.utils.StringToIntTable m_enums;
    int m_errorType;
    private java.lang.String m_name;
    private java.lang.String m_namespace;
    private boolean m_required;
    java.lang.String m_setterString;
    private boolean m_supportsAVT;
    private int m_type;

    static void <clinit>()
    {
        org.apache.xalan.processor.XSLTAttributeDef $r0;

        <org.apache.xalan.processor.XSLTAttributeDef: int WARNING> = 2;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_YESNO> = 8;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_URL> = 2;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_STRINGLIST> = 14;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_SIMPLEPATTERNLIST> = 12;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_QNAMES_RESOLVE_NULL> = 19;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_QNAMES> = 10;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_QNAME> = 9;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_PREFIX_URLLIST> = 15;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_PREFIXLIST> = 20;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_PATTERN> = 4;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_NUMBER> = 7;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_NMTOKEN> = 13;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_NCNAME> = 17;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_EXPR> = 5;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_ENUM_OR_PQNAME> = 16;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_ENUM> = 11;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_CHAR> = 6;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_CDATA> = 1;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_AVT_QNAME> = 18;

        <org.apache.xalan.processor.XSLTAttributeDef: int T_AVT> = 3;

        <org.apache.xalan.processor.XSLTAttributeDef: java.lang.String S_FOREIGNATTR_SETTER> = "setForeignAttr";

        <org.apache.xalan.processor.XSLTAttributeDef: int FATAL> = 0;

        <org.apache.xalan.processor.XSLTAttributeDef: int ERROR> = 1;

        $r0 = new org.apache.xalan.processor.XSLTAttributeDef;

        specialinvoke $r0.<org.apache.xalan.processor.XSLTAttributeDef: void <init>(java.lang.String,java.lang.String,int,boolean,boolean,int)>("*", "*", 1, 0, 0, 2);

        <org.apache.xalan.processor.XSLTAttributeDef: org.apache.xalan.processor.XSLTAttributeDef m_foreignAttr> = $r0;

        return;
    }

    void <init>(java.lang.String, java.lang.String, int, boolean, int, java.lang.String)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r2, r3;
        int i0, i1;
        boolean z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = i0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = 0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_default> = r3;

        return;
    }

    void <init>(java.lang.String, java.lang.String, int, boolean, boolean, int)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r2;
        int i0, i1;
        boolean z0, z1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        i1 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = i0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = z0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i1;

        return;
    }

    void <init>(java.lang.String, java.lang.String, boolean, boolean, boolean, int, java.lang.String, int, java.lang.String, int)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r2, r3, r4;
        boolean z0, z1, z2;
        int i0, i1, i2;
        byte b3;
        org.apache.xml.utils.StringToIntTable $r5, $r6, $r7;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        r3 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        r4 := @parameter8: java.lang.String;

        i2 := @parameter9: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        if z2 == 0 goto label2;

        b3 = 16;

     label1:
        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = b3;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = z0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i0;

        $r5 = new org.apache.xml.utils.StringToIntTable;

        specialinvoke $r5.<org.apache.xml.utils.StringToIntTable: void <init>(int)>(2);

        r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums> = $r5;

        $r6 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r6.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r3, i1);

        $r7 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r7.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r4, i2);

        return;

     label2:
        b3 = 11;

        goto label1;
    }

    void <init>(java.lang.String, java.lang.String, boolean, boolean, boolean, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r2, r3, r4, r5;
        boolean z0, z1, z2;
        int i0, i1, i2, i3;
        byte b4;
        org.apache.xml.utils.StringToIntTable $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        r3 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        r4 := @parameter8: java.lang.String;

        i2 := @parameter9: int;

        r5 := @parameter10: java.lang.String;

        i3 := @parameter11: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        if z2 == 0 goto label2;

        b4 = 16;

     label1:
        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = b4;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = z0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i0;

        $r6 = new org.apache.xml.utils.StringToIntTable;

        specialinvoke $r6.<org.apache.xml.utils.StringToIntTable: void <init>(int)>(3);

        r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums> = $r6;

        $r7 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r7.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r3, i1);

        $r9 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r9.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r4, i2);

        $r8 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r8.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r5, i3);

        return;

     label2:
        b4 = 11;

        goto label1;
    }

    void <init>(java.lang.String, java.lang.String, boolean, boolean, boolean, int, java.lang.String, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1, r2, r3, r4, r5, r6;
        boolean z0, z1, z2;
        int i0, i1, i2, i3, i4;
        byte b5;
        org.apache.xml.utils.StringToIntTable $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        r3 := @parameter6: java.lang.String;

        i1 := @parameter7: int;

        r4 := @parameter8: java.lang.String;

        i2 := @parameter9: int;

        r5 := @parameter10: java.lang.String;

        i3 := @parameter11: int;

        r6 := @parameter12: java.lang.String;

        i4 := @parameter13: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = 2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = null;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace> = r1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name> = r2;

        if z2 == 0 goto label2;

        b5 = 16;

     label1:
        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type> = b5;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required> = z0;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT> = z1;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType> = i0;

        $r8 = new org.apache.xml.utils.StringToIntTable;

        specialinvoke $r8.<org.apache.xml.utils.StringToIntTable: void <init>(int)>(4);

        r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums> = $r8;

        $r7 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r7.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r3, i1);

        $r10 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r10.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r4, i2);

        $r9 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r9.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r5, i3);

        $r11 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        virtualinvoke $r11.<org.apache.xml.utils.StringToIntTable: void put(java.lang.String,int)>(r6, i4);

        return;

     label2:
        b5 = 11;

        goto label1;
    }

    private int getEnum(java.lang.String)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1;
        org.apache.xml.utils.StringToIntTable $r2;
        int $i0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        $i0 = virtualinvoke $r2.<org.apache.xml.utils.StringToIntTable: int get(java.lang.String)>(r1);

        return $i0;
    }

    private java.lang.String[] getEnumNames()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xml.utils.StringToIntTable $r1;
        java.lang.String[] $r2;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringToIntTable m_enums>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.StringToIntTable: java.lang.String[] keys()>();

        return $r2;
    }

    private java.lang.StringBuffer getListOfEnums()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.StringBuffer r1, $r3;
        java.lang.String[] r2;
        int i0, $i1;
        java.lang.String $r4;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r1 = $r3;

        r2 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String[] getEnumNames()>();

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label3;

        if i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label2:
        $r4 = r2[i0];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i0 = i0 + 1;

        goto label1;

     label3:
        return r1;
    }

    private java.lang.Class getPrimativeClass(java.lang.Object)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.Object r1;
        java.lang.Class r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.xpath.XPath;

        if $z0 == 0 goto label2;

        r2 = class "org/apache/xpath/XPath";

     label1:
        return r2;

     label2:
        r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if r2 != class "java/lang/Double" goto label3;

        r2 = <java.lang.Double: java.lang.Class TYPE>;

     label3:
        if r2 != class "java/lang/Float" goto label4;

        $r9 = <java.lang.Float: java.lang.Class TYPE>;

        return $r9;

     label4:
        if r2 != class "java/lang/Boolean" goto label5;

        $r8 = <java.lang.Boolean: java.lang.Class TYPE>;

        return $r8;

     label5:
        if r2 != class "java/lang/Byte" goto label6;

        $r7 = <java.lang.Byte: java.lang.Class TYPE>;

        return $r7;

     label6:
        if r2 != class "java/lang/Character" goto label7;

        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        return $r6;

     label7:
        if r2 != class "java/lang/Short" goto label8;

        $r5 = <java.lang.Short: java.lang.Class TYPE>;

        return $r5;

     label8:
        if r2 != class "java/lang/Integer" goto label9;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        return $r4;

     label9:
        if r2 != class "java/lang/Long" goto label1;

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        return $r3;
    }

    private void handleError(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.Object[], java.lang.Exception) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        java.lang.Exception r4;
        int $i0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r4 := @parameter3: java.lang.Exception;

        $i0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: int getErrorType()>();

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>(r2, r3, r4);

        return;

     label3:
        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void warn(java.lang.String,java.lang.Object[])>(r2, r3);

        return;
    }

    private java.lang.Boolean processYESNO(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object[] r6;
        java.lang.Boolean $r7;
        int i0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        z0 = 1;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        if $z1 != 0 goto label1;

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("no");

        if $z3 != 0 goto label1;

        r6 = newarray (java.lang.Object)[2];

        r6[0] = r3;

        i0 = (int) 1;

        r6[i0] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_BOOLEAN", r6, null);

        return null;

     label1:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        if $z2 == 0 goto label3;

     label2:
        $r7 = new java.lang.Boolean;

        specialinvoke $r7.<java.lang.Boolean: void <init>(boolean)>(z0);

        return $r7;

     label3:
        z0 = 0;

        goto label2;
    }

    java.lang.String getDefault()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_default>;

        return $r1;
    }

    int getErrorType()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        int $i0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $i0 = r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_errorType>;

        return $i0;
    }

    java.lang.String getName()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        return $r1;
    }

    java.lang.String getNamespace()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r1 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace>;

        return $r1;
    }

    boolean getRequired()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $z0 = r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_required>;

        return $z0;
    }

    public java.lang.String getSetterMethodName()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0, $r4;
        java.lang.StringBuffer r1, $r6;
        int i0, i1;
        char c2, $c3;
        java.lang.String $r2, $r3, $r5, $r8, $r9, $r10, $r11, $r13, $r14, $r15;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $r2 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString>;

        if $r2 != null goto label8;

        $r4 = <org.apache.xalan.processor.XSLTAttributeDef: org.apache.xalan.processor.XSLTAttributeDef m_foreignAttr>;

        if $r4 != r0 goto label1;

        return "setForeignAttr";

     label1:
        $r5 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z0 == 0 goto label2;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = "addLiteralResultAttribute";

        $r15 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString>;

        return $r15;

     label2:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        r1 = $r6;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("set");

        $r8 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace>;

        if $r8 == null goto label3;

        $r14 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_namespace>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/XML/1998/namespace");

        if $z1 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Xml");

     label3:
        $r9 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        i1 = 0;

     label4:
        if i1 >= i0 goto label7;

        $r10 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        c2 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(i1);

        if 45 != c2 goto label6;

        i1 = i1 + 1;

        $r13 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_name>;

        $c3 = virtualinvoke $r13.<java.lang.String: char charAt(int)>(i1);

        c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3);

     label5:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2);

        i1 = i1 + 1;

        goto label4;

     label6:
        if i1 != 0 goto label5;

        c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c2);

        goto label5;

     label7:
        $r11 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString> = $r11;

     label8:
        $r3 = r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_setterString>;

        return $r3;
    }

    boolean getSupportsAVT()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $z0 = r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean m_supportsAVT>;

        return $z0;
    }

    int getType()
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        int $i0;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        $i0 = r0.<org.apache.xalan.processor.XSLTAttributeDef: int m_type>;

        return $i0;
    }

    org.apache.xalan.templates.AVT processAVT(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.AVT r7, $r9;
        javax.xml.transform.TransformerException r8, $r10;
        org.xml.sax.SAXException $r11;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r9 = new org.apache.xalan.templates.AVT;

        specialinvoke $r9.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r7 = $r9;

     label2:
        return r7;

     label3:
        $r10 := @caughtexception;

        r8 = $r10;

        $r11 = new org.xml.sax.SAXException;

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r11;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    java.lang.Object processAVT_QNAME(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, r9, r10, $r13;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.AVT r7, $r11;
        javax.xml.transform.TransformerException r8, $r14, $r16;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r12, $r15;
        org.xml.sax.SAXException $r17;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label01:
        $r11 = new org.apache.xalan.templates.AVT;

        specialinvoke $r11.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r7 = $r11;

     label02:
        $z0 = virtualinvoke r7.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z0 == 0 goto label15;

        i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(58);

     label03:
        if i0 < 0 goto label16;

     label04:
        $r13 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $z2 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidNCName(java.lang.String)>($r13);

        if $z2 != 0 goto label16;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = r3;

        $r15[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_QNAME", $r15, null);

     label05:
        return null;

     label06:
        if r10 == null goto label08;

     label07:
        $i2 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i2 == 0 goto label08;

        $z1 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidNCName(java.lang.String)>(r10);

        if $z1 != 0 goto label15;

     label08:
        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r3;

        $r12[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_QNAME", $r12, null);

     label09:
        return null;

     label10:
        $i1 = i0 + 1;

        r9 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i1);

     label11:
        r10 = r9;

        goto label06;

     label12:
        $r16 := @caughtexception;

        r8 = $r16;

     label13:
        $r17 = new org.xml.sax.SAXException;

        specialinvoke $r17.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r17;

     label14:
        $r14 := @caughtexception;

        r8 = $r14;

        goto label13;

     label15:
        return r7;

     label16:
        if i0 >= 0 goto label10;

        r10 = r5;

        goto label06;

        catch javax.xml.transform.TransformerException from label01 to label02 with label12;
        catch javax.xml.transform.TransformerException from label02 to label03 with label14;
        catch javax.xml.transform.TransformerException from label04 to label05 with label14;
        catch javax.xml.transform.TransformerException from label07 to label08 with label14;
        catch javax.xml.transform.TransformerException from label08 to label09 with label14;
        catch javax.xml.transform.TransformerException from label10 to label11 with label14;
    }

    java.lang.Object processCDATA(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.AVT r7, $r9;
        javax.xml.transform.TransformerException r8, $r10;
        boolean $z0;
        org.xml.sax.SAXException $r11;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label4;

     label1:
        $r9 = new org.apache.xalan.templates.AVT;

        specialinvoke $r9.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r7 = $r9;

     label2:
        return r7;

     label3:
        $r10 := @caughtexception;

        r8 = $r10;

        $r11 = new org.xml.sax.SAXException;

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r11;

     label4:
        return r5;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    java.lang.Object processCHAR(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.AVT r7, $r11;
        javax.xml.transform.TransformerException r8, $r14;
        boolean $z0, $z1;
        int $i0, $i2;
        java.lang.Character $r9;
        char $c1;
        java.lang.Object[] $r10, $r12;
        org.xml.sax.SAXException $r13;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label5;

     label1:
        $r11 = new org.apache.xalan.templates.AVT;

        specialinvoke $r11.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r7 = $r11;

        $z1 = virtualinvoke r7.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z1 == 0 goto label3;

        $i2 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i2 == 1 goto label3;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r3;

        $r12[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_TCHAR", $r12, null);

     label2:
        r7 = null;

     label3:
        return r7;

     label4:
        $r14 := @caughtexception;

        r8 = $r14;

        $r13 = new org.xml.sax.SAXException;

        specialinvoke $r13.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r13;

     label5:
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 == 1 goto label6;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = r3;

        $r10[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_TCHAR", $r10, null);

        return null;

     label6:
        $r9 = new java.lang.Character;

        $c1 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);

        specialinvoke $r9.<java.lang.Character: void <init>(char)>($c1);

        return $r9;

        catch javax.xml.transform.TransformerException from label1 to label2 with label4;
    }

    java.lang.Object processENUM(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, $r12;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.AVT r7, $r13;
        int i0;
        java.lang.StringBuffer r8;
        java.lang.Object[] r9;
        javax.xml.transform.TransformerException r10, $r15, $r16;
        boolean z0, $z1, $z2;
        java.lang.Integer $r11;
        org.xml.sax.SAXException $r14;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z1 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z1 == 0 goto label06;

     label01:
        $r13 = new org.apache.xalan.templates.AVT;

        specialinvoke $r13.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r7 = $r13;

     label02:
        z0 = virtualinvoke r7.<org.apache.xalan.templates.AVT: boolean isSimple()>();

     label03:
        if z0 != 0 goto label07;

        return r7;

     label04:
        $r16 := @caughtexception;

        r10 = $r16;

     label05:
        $r14 = new org.xml.sax.SAXException;

        specialinvoke $r14.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r10);

        throw $r14;

     label06:
        r7 = null;

     label07:
        i0 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: int getEnum(java.lang.String)>(r5);

        if i0 != -10000 goto label08;

        r8 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()>();

        r9 = newarray (java.lang.Object)[3];

        r9[0] = r3;

        r9[1] = r5;

        $r12 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();

        r9[2] = $r12;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_ENUM", r9, null);

        return null;

     label08:
        $z2 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z2 == 0 goto label09;

        return r7;

     label09:
        $r11 = new java.lang.Integer;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(i0);

        return $r11;

     label10:
        $r15 := @caughtexception;

        r10 = $r15;

        goto label05;

        catch javax.xml.transform.TransformerException from label01 to label02 with label04;
        catch javax.xml.transform.TransformerException from label02 to label03 with label10;
    }

    java.lang.Object processENUM_OR_PQNAME(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, $r20, $r23, $r28, $r31;
        org.apache.xalan.templates.ElemTemplateElement r6;
        boolean z0, z1;
        java.io.Serializable r7;
        int i0;
        org.apache.xml.utils.QName r8, $r19;
        java.lang.RuntimeException r9, $r29;
        java.lang.StringBuffer r10, r13, r14;
        java.lang.Object[] r11, r15, r16;
        java.lang.IllegalArgumentException r12, $r25;
        javax.xml.transform.TransformerException r17, $r26;
        org.apache.xalan.templates.AVT r18, $r22;
        java.lang.Integer $r24;
        org.xml.sax.SAXException $r27;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        r7 = null;

        if z0 == 0 goto label04;

     label01:
        $r22 = new org.apache.xalan.templates.AVT;

        specialinvoke $r22.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r18 = $r22;

        z1 = virtualinvoke r18.<org.apache.xalan.templates.AVT: boolean isSimple()>();

     label02:
        if z1 != 0 goto label03;

        return r18;

     label03:
        r7 = r18;

     label04:
        i0 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: int getEnum(java.lang.String)>(r5);

        if i0 == -10000 goto label07;

        if r7 != null goto label05;

        $r24 = new java.lang.Integer;

        specialinvoke $r24.<java.lang.Integer: void <init>(int)>(i0);

        r7 = $r24;

     label05:
        return r7;

     label06:
        $r26 := @caughtexception;

        r17 = $r26;

        $r27 = new org.xml.sax.SAXException;

        specialinvoke $r27.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r17);

        throw $r27;

     label07:
        $r19 = new org.apache.xml.utils.QName;

        specialinvoke $r19.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,boolean)>(r5, r1, 1);

        r8 = $r19;

     label08:
        if r7 != null goto label09;

        r7 = r8;

     label09:
        $r20 = virtualinvoke r8.<org.apache.xml.utils.QName: java.lang.String getPrefix()>();

        if $r20 != null goto label05;

        r14 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()>();

        virtualinvoke r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <qname-but-not-ncname>");

        r16 = newarray (java.lang.Object)[3];

        r16[0] = r3;

        r16[1] = r5;

        $r23 = virtualinvoke r14.<java.lang.StringBuffer: java.lang.String toString()>();

        r16[2] = $r23;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_ENUM", r16, null);

     label10:
        return null;

     label11:
        $r25 := @caughtexception;

        r12 = $r25;

        r13 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()>();

        virtualinvoke r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <qname-but-not-ncname>");

        r15 = newarray (java.lang.Object)[3];

        r15[0] = r3;

        r15[1] = r5;

        $r28 = virtualinvoke r13.<java.lang.StringBuffer: java.lang.String toString()>();

        r15[2] = $r28;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_ENUM", r15, r12);

        return null;

     label12:
        $r29 := @caughtexception;

        r9 = $r29;

        r10 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()>();

        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <qname-but-not-ncname>");

        r11 = newarray (java.lang.Object)[3];

        r11[0] = r3;

        r11[1] = r5;

        $r31 = virtualinvoke r10.<java.lang.StringBuffer: java.lang.String toString()>();

        r11[2] = $r31;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_ENUM", r11, r9);

        return null;

        catch javax.xml.transform.TransformerException from label01 to label02 with label06;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.RuntimeException from label07 to label08 with label12;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
        catch java.lang.RuntimeException from label09 to label10 with label12;
    }

    java.lang.Object processEXPR(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        javax.xml.transform.TransformerException r7, $r9;
        org.apache.xpath.XPath r8;
        org.xml.sax.SAXException $r10;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        r8 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r5, r6);

     label2:
        return r8;

     label3:
        $r9 := @caughtexception;

        r7 = $r9;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r7);

        throw $r10;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    java.lang.Object processNCNAME(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.AVT r7, $r10;
        javax.xml.transform.TransformerException r8, $r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object[] $r9, $r11;
        org.xml.sax.SAXException $r12;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label7;

     label1:
        $r10 = new org.apache.xalan.templates.AVT;

        specialinvoke $r10.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r7 = $r10;

     label2:
        $z2 = virtualinvoke r7.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z2 == 0 goto label4;

        $z3 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidNCName(java.lang.String)>(r5);

        if $z3 != 0 goto label4;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r3;

        $r11[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_NCNAME", $r11, null);

     label3:
        r7 = null;

     label4:
        return r7;

     label5:
        $r14 := @caughtexception;

        r8 = $r14;

     label6:
        $r12 = new org.xml.sax.SAXException;

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r12;

     label7:
        $z1 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidNCName(java.lang.String)>(r5);

        if $z1 != 0 goto label8;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r3;

        $r9[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_NCNAME", $r9, null);

        return null;

     label8:
        return r5;

     label9:
        $r13 := @caughtexception;

        r8 = $r13;

        goto label6;

        catch javax.xml.transform.TransformerException from label1 to label2 with label5;
        catch javax.xml.transform.TransformerException from label2 to label3 with label9;
    }

    java.lang.Object processNMTOKEN(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.AVT r7, $r10;
        javax.xml.transform.TransformerException r8, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object[] $r9, $r11;
        org.xml.sax.SAXException $r12;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label5;

     label1:
        $r10 = new org.apache.xalan.templates.AVT;

        specialinvoke $r10.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r7 = $r10;

        $z2 = virtualinvoke r7.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z2 == 0 goto label3;

        $z3 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidNmtoken(java.lang.String)>(r5);

        if $z3 != 0 goto label3;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r3;

        $r11[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_NMTOKEN", $r11, null);

     label2:
        r7 = null;

     label3:
        return r7;

     label4:
        $r13 := @caughtexception;

        r8 = $r13;

        $r12 = new org.xml.sax.SAXException;

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r12;

     label5:
        $z1 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidNmtoken(java.lang.String)>(r5);

        if $z1 != 0 goto label6;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r3;

        $r9[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_NMTOKEN", $r9, null);

        return null;

     label6:
        return r5;

        catch javax.xml.transform.TransformerException from label1 to label2 with label4;
    }

    java.lang.Object processNUMBER(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        java.lang.NumberFormatException r7, r11, $r13, $r17, $r19;
        java.lang.Double r8;
        org.apache.xalan.templates.AVT r9, $r12;
        javax.xml.transform.TransformerException r10, $r15, $r21;
        boolean $z0, $z1;
        java.lang.Object[] $r16, $r20;
        org.xml.sax.SAXException $r18;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label08;

     label01:
        $r12 = new org.apache.xalan.templates.AVT;

        specialinvoke $r12.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r9 = $r12;

     label02:
        $z1 = virtualinvoke r9.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z1 == 0 goto label03;

        staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r5);

     label03:
        return r9;

     label04:
        $r21 := @caughtexception;

        r10 = $r21;

     label05:
        $r18 = new org.xml.sax.SAXException;

        specialinvoke $r18.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r10);

        throw $r18;

     label06:
        $r19 := @caughtexception;

        r11 = $r19;

     label07:
        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = r3;

        $r16[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_NUMBER", $r16, r11);

        return null;

     label08:
        r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r5);

     label09:
        return r8;

     label10:
        $r17 := @caughtexception;

        r7 = $r17;

        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = r3;

        $r20[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_NUMBER", $r20, r7);

        return null;

     label11:
        $r13 := @caughtexception;

        r11 = $r13;

        goto label07;

     label12:
        $r15 := @caughtexception;

        r10 = $r15;

        goto label05;

        catch javax.xml.transform.TransformerException from label01 to label02 with label04;
        catch java.lang.NumberFormatException from label01 to label02 with label06;
        catch javax.xml.transform.TransformerException from label02 to label03 with label12;
        catch java.lang.NumberFormatException from label02 to label03 with label11;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    java.lang.Object processPATTERN(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        javax.xml.transform.TransformerException r7, $r9;
        org.apache.xpath.XPath r8;
        org.xml.sax.SAXException $r10;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        r8 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createMatchPatternXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r5, r6);

     label2:
        return r8;

     label3:
        $r9 := @caughtexception;

        r7 = $r9;

        $r10 = new org.xml.sax.SAXException;

        specialinvoke $r10.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r7);

        throw $r10;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    org.apache.xml.utils.StringVector processPREFIX_LIST(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, r8, r9, $r14;
        java.util.StringTokenizer r6, $r10;
        int i0, i1;
        org.apache.xml.utils.StringVector r7, $r11;
        boolean $z0;
        java.lang.Object[] $r12;
        org.xml.sax.SAXException $r13;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r5, " \t\n\r\f");

        r6 = $r10;

        i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>();

        $r11 = new org.apache.xml.utils.StringVector;

        specialinvoke $r11.<org.apache.xml.utils.StringVector: void <init>(int)>(i0);

        r7 = $r11;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r8 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r9 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)>(r8);

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("#default");

        if $z0 != 0 goto label2;

        if r9 == null goto label3;

     label2:
        virtualinvoke r7.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>(r8);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r13 = new org.xml.sax.SAXException;

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r8;

        $r14 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANT_RESOLVE_NSPREFIX", $r12);

        specialinvoke $r13.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label4:
        return r7;
    }

    org.apache.xml.utils.StringVector processPREFIX_URLLIST(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, r8, r9, $r13;
        java.util.StringTokenizer r6, $r10;
        int i0, i1;
        org.apache.xml.utils.StringVector r7, $r11;
        org.xml.sax.SAXException $r12;
        java.lang.Object[] $r14;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r5, " \t\n\r\f");

        r6 = $r10;

        i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>();

        $r11 = new org.apache.xml.utils.StringVector;

        specialinvoke $r11.<org.apache.xml.utils.StringVector: void <init>(int)>(i0);

        r7 = $r11;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r8 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r9 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)>(r8);

        if r9 == null goto label2;

        virtualinvoke r7.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>(r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r12 = new org.xml.sax.SAXException;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r8;

        $r13 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANT_RESOLVE_NSPREFIX", $r14);

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label3:
        return r7;
    }

    java.lang.Object processQNAME(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xml.utils.QName r7, $r10;
        java.lang.RuntimeException r8, $r13;
        java.lang.IllegalArgumentException r9, $r11;
        java.lang.Object[] $r12, $r14;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r10 = new org.apache.xml.utils.QName;

        specialinvoke $r10.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,boolean)>(r5, r1, 1);

        r7 = $r10;

     label2:
        return r7;

     label3:
        $r11 := @caughtexception;

        r9 = $r11;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r3;

        $r12[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_QNAME", $r12, r9);

        return null;

     label4:
        $r13 := @caughtexception;

        r8 = $r13;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r3;

        $r14[1] = r5;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "INVALID_QNAME", $r14, r8);

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    java.util.Vector processQNAMES(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, $r11;
        java.util.StringTokenizer r6, $r8;
        int i0, i1;
        java.util.Vector r7, $r9;
        org.apache.xml.utils.QName $r10;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r5, " \t\n\r\f");

        r6 = $r8;

        i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>();

        $r9 = new java.util.Vector;

        specialinvoke $r9.<java.util.Vector: void <init>(int)>(i0);

        r7 = $r9;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r10 = new org.apache.xml.utils.QName;

        $r11 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        specialinvoke $r10.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver)>($r11, r1);

        virtualinvoke r7.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r7;
    }

    final java.util.Vector processQNAMESRNU(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, r8, r9;
        java.util.StringTokenizer r6, $r10;
        int i0, i1, $i2;
        java.util.Vector r7, $r11;
        org.apache.xml.utils.QName $r12, $r13;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r5, " \t\n\r\f");

        r6 = $r10;

        i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>();

        $r11 = new java.util.Vector;

        specialinvoke $r11.<java.util.Vector: void <init>(int)>(i0);

        r7 = $r11;

        r8 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)>("");

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r9 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i2 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(58);

        if $i2 != -1 goto label3;

        $r12 = new org.apache.xml.utils.QName;

        specialinvoke $r12.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r8, r9);

        virtualinvoke r7.<java.util.Vector: void addElement(java.lang.Object)>($r12);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r13 = new org.apache.xml.utils.QName;

        specialinvoke $r13.<org.apache.xml.utils.QName: void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver)>(r9, r1);

        virtualinvoke r7.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        goto label2;

     label4:
        return r7;
    }

    java.util.Vector processSIMPLEPATTERNLIST(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, $r12;
        org.apache.xalan.templates.ElemTemplateElement r6;
        java.util.StringTokenizer r7, $r10;
        javax.xml.transform.TransformerException r8, $r13;
        int i0, i1;
        java.util.Vector r9, $r11;
        org.apache.xpath.XPath $r14;
        org.xml.sax.SAXException $r15;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

     label1:
        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r5, " \t\n\r\f");

        r7 = $r10;

        i0 = virtualinvoke r7.<java.util.StringTokenizer: int countTokens()>();

        $r11 = new java.util.Vector;

        specialinvoke $r11.<java.util.Vector: void <init>(int)>(i0);

        r9 = $r11;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label7;

     label4:
        $r12 = virtualinvoke r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r14 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xpath.XPath createMatchPatternXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>($r12, r6);

        virtualinvoke r9.<java.util.Vector: void addElement(java.lang.Object)>($r14);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        $r13 := @caughtexception;

        r8 = $r13;

        $r15 = new org.xml.sax.SAXException;

        specialinvoke $r15.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r15;

     label7:
        return r9;

        catch javax.xml.transform.TransformerException from label1 to label2 with label6;
        catch javax.xml.transform.TransformerException from label4 to label5 with label6;
    }

    org.apache.xml.utils.StringVector processSTRINGLIST(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, $r10;
        java.util.StringTokenizer r6, $r8;
        int i0, i1;
        org.apache.xml.utils.StringVector r7, $r9;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r5, " \t\n\r\f");

        r6 = $r8;

        i0 = virtualinvoke r6.<java.util.StringTokenizer: int countTokens()>();

        $r9 = new org.apache.xml.utils.StringVector;

        specialinvoke $r9.<org.apache.xml.utils.StringVector: void <init>(int)>(i0);

        r7 = $r9;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r10 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke r7.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r7;
    }

    java.lang.Object processURL(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.AVT r7, $r9;
        javax.xml.transform.TransformerException r8, $r10;
        boolean $z0;
        org.xml.sax.SAXException $r11;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()>();

        if $z0 == 0 goto label4;

     label1:
        $r9 = new org.apache.xalan.templates.AVT;

        specialinvoke $r9.<org.apache.xalan.templates.AVT: void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        r7 = $r9;

     label2:
        return r7;

     label3:
        $r10 := @caughtexception;

        r8 = $r10;

        $r11 = new org.xml.sax.SAXException;

        specialinvoke $r11.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r8);

        throw $r11;

     label4:
        return r5;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        int $i0;
        org.apache.xml.utils.StringVector $r7, $r12, $r13;
        java.util.Vector $r8, $r16, $r18;
        java.lang.Object $r9, $r10, $r11, $r14, $r15, $r17, $r19, $r21, $r22, $r24, $r25, $r26;
        java.lang.Boolean $r20;
        org.apache.xalan.templates.AVT $r23;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $i0 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: int getType()>();

        tableswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label14;
            case 3: goto label02;
            case 4: goto label08;
            case 5: goto label06;
            case 6: goto label04;
            case 7: goto label09;
            case 8: goto label15;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label05;
            case 12: goto label13;
            case 13: goto label07;
            case 14: goto label16;
            case 15: goto label17;
            case 16: goto label18;
            case 17: goto label19;
            case 18: goto label20;
            case 19: goto label12;
            case 20: goto label21;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        $r23 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xalan.templates.AVT processAVT(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r23;

     label03:
        $r25 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processCDATA(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r25;

     label04:
        $r22 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processCHAR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r22;

     label05:
        $r15 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processENUM(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r15;

     label06:
        $r21 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processEXPR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r21;

     label07:
        $r14 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processNMTOKEN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r14;

     label08:
        $r24 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processPATTERN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r24;

     label09:
        $r19 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processNUMBER(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r19;

     label10:
        $r17 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r17;

     label11:
        $r18 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.util.Vector processQNAMES(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return $r18;

     label12:
        $r8 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.util.Vector processQNAMESRNU(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return $r8;

     label13:
        $r16 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.util.Vector processSIMPLEPATTERNLIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r16;

     label14:
        $r26 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processURL(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r26;

     label15:
        $r20 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Boolean processYESNO(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return $r20;

     label16:
        $r13 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringVector processSTRINGLIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return $r13;

     label17:
        $r12 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringVector processPREFIX_URLLIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return $r12;

     label18:
        $r11 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processENUM_OR_PQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r11;

     label19:
        $r10 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processNCNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r10;

     label20:
        $r9 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processAVT_QNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

        return $r9;

     label21:
        $r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: org.apache.xml.utils.StringVector processPREFIX_LIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return $r7;
    }

    boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4, r5, r7, $r35;
        org.apache.xalan.templates.ElemTemplateElement r6;
        java.lang.reflect.InvocationTargetException r8, $r36;
        java.lang.Object[] r9, r15, $r23, $r28, $r33, $r34;
        java.lang.IllegalAccessException r10, $r32;
        java.lang.NoSuchMethodException r11, $r27, $r29;
        java.lang.Class r12, $r21, $r22, $r25, $r30, $r31;
        java.lang.Class[] r13, r18, $r24;
        java.lang.reflect.Method r14, r19, r20;
        java.lang.Object r16;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: org.apache.xalan.templates.ElemTemplateElement;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 != 0 goto label01;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z0 == 0 goto label02;

     label01:
        return 1;

     label02:
        r7 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getSetterMethodName()>();

        if r7 == null goto label21;

     label03:
        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("setForeignAttr");

        if $z2 == 0 goto label08;

     label04:
        if r2 != null goto label05;

        r2 = "";

     label05:
        r12 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = newarray (java.lang.Class)[4];

        $r24[0] = r12;

        $r24[1] = r12;

        $r24[2] = r12;

        $r24[3] = r12;

        r13 = $r24;

        $r25 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        r14 = virtualinvoke $r25.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r7, r13);

        $r28 = newarray (java.lang.Object)[4];

        $r28[0] = r2;

        $r28[1] = r3;

        $r28[2] = r4;

        $r28[3] = r5;

        r15 = $r28;

     label06:
        virtualinvoke r14.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r6, r15);

     label07:
        goto label21;

     label08:
        r16 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, r2, r3, r4, r5, r6);

     label09:
        if r16 != null goto label10;

        return 0;

     label10:
        r18 = newarray (java.lang.Class)[1];

        $r22 = specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class getPrimativeClass(java.lang.Object)>(r16);

        r18[0] = $r22;

     label11:
        $r21 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        r19 = virtualinvoke $r21.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r7, r18);

     label12:
        r14 = r19;

     label13:
        $r23 = newarray (java.lang.Object)[1];

        $r23[0] = r16;

        r15 = $r23;

     label14:
        goto label06;

     label15:
        $r27 := @caughtexception;

     label16:
        $r30 = virtualinvoke r16.<java.lang.Object: java.lang.Class getClass()>();

        r18[0] = $r30;

        $r31 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        r20 = virtualinvoke $r31.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r7, r18);

     label17:
        r14 = r20;

        goto label13;

     label18:
        $r29 := @caughtexception;

        r11 = $r29;

        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("setForeignAttr");

        if $z3 != 0 goto label21;

        $r34 = newarray (java.lang.Object)[1];

        $r34[0] = r7;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>("ER_FAILED_CALLING_METHOD", $r34, r11);

        return 0;

     label19:
        $r32 := @caughtexception;

        r10 = $r32;

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = r7;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void error(java.lang.String,java.lang.Object[],java.lang.Exception)>("ER_FAILED_CALLING_METHOD", $r33, r10);

        return 0;

     label20:
        $r36 := @caughtexception;

        r8 = $r36;

        r9 = newarray (java.lang.Object)[2];

        r9[0] = "name";

        $r35 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()>();

        r9[1] = $r35;

        specialinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)>(r1, "WG_ILLEGAL_ATTRIBUTE_VALUE", r9, r8);

        return 0;

     label21:
        return 1;

        catch java.lang.NoSuchMethodException from label03 to label04 with label18;
        catch java.lang.IllegalAccessException from label03 to label04 with label19;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label20;
        catch java.lang.NoSuchMethodException from label05 to label06 with label18;
        catch java.lang.IllegalAccessException from label05 to label06 with label19;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label20;
        catch java.lang.NoSuchMethodException from label06 to label07 with label18;
        catch java.lang.IllegalAccessException from label06 to label07 with label19;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label20;
        catch java.lang.NoSuchMethodException from label08 to label09 with label18;
        catch java.lang.IllegalAccessException from label08 to label09 with label19;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label20;
        catch java.lang.NoSuchMethodException from label10 to label11 with label18;
        catch java.lang.IllegalAccessException from label10 to label11 with label19;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label20;
        catch java.lang.NoSuchMethodException from label11 to label12 with label15;
        catch java.lang.IllegalAccessException from label11 to label12 with label19;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label20;
        catch java.lang.NoSuchMethodException from label13 to label14 with label18;
        catch java.lang.IllegalAccessException from label13 to label14 with label19;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label20;
        catch java.lang.NoSuchMethodException from label16 to label17 with label18;
        catch java.lang.IllegalAccessException from label16 to label17 with label19;
        catch java.lang.reflect.InvocationTargetException from label16 to label17 with label20;
    }

    void setDefAttrValue(org.apache.xalan.processor.StylesheetHandler, org.apache.xalan.templates.ElemTemplateElement) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        org.apache.xalan.templates.ElemTemplateElement r2;
        java.lang.String $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        $r3 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getNamespace()>();

        $r4 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()>();

        $r6 = virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getDefault()>();

        virtualinvoke r0.<org.apache.xalan.processor.XSLTAttributeDef: boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)>(r1, $r3, $r4, $r5, $r6, r2);

        return;
    }

    void setDefault(java.lang.String)
    {
        org.apache.xalan.processor.XSLTAttributeDef r0;
        java.lang.String r1;

        r0 := @this: org.apache.xalan.processor.XSLTAttributeDef;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String m_default> = r1;

        return;
    }
}
