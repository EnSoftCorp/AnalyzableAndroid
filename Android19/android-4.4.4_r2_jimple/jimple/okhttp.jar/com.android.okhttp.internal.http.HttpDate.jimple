final class com.android.okhttp.internal.http.HttpDate extends java.lang.Object
{
    private static final java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS;
    private static final java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS;
    private static final java.lang.ThreadLocal STANDARD_DATE_FORMAT;

    static void <clinit>()
    {
        com.android.okhttp.internal.http.HttpDate$1 $r0;
        java.lang.String[] $r1, $r2;
        int $i0;
        java.text.DateFormat[] $r3;

        $r0 = new com.android.okhttp.internal.http.HttpDate$1;

        specialinvoke $r0.<com.android.okhttp.internal.http.HttpDate$1: void <init>()>();

        <com.android.okhttp.internal.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT> = $r0;

        $r1 = newarray (java.lang.String)[14];

        $r1[0] = "EEEE, dd-MMM-yy HH:mm:ss zzz";

        $r1[1] = "EEE MMM d HH:mm:ss yyyy";

        $r1[2] = "EEE, dd-MMM-yyyy HH:mm:ss z";

        $r1[3] = "EEE, dd-MMM-yyyy HH-mm-ss z";

        $r1[4] = "EEE, dd MMM yy HH:mm:ss z";

        $r1[5] = "EEE dd-MMM-yyyy HH:mm:ss z";

        $r1[6] = "EEE dd MMM yyyy HH:mm:ss z";

        $r1[7] = "EEE dd-MMM-yyyy HH-mm-ss z";

        $r1[8] = "EEE dd-MMM-yy HH:mm:ss z";

        $r1[9] = "EEE dd MMM yy HH:mm:ss z";

        $r1[10] = "EEE,dd-MMM-yy HH:mm:ss z";

        $r1[11] = "EEE,dd-MMM-yyyy HH:mm:ss z";

        $r1[12] = "EEE, dd-MM-yyyy HH:mm:ss z";

        $r1[13] = "EEE MMM d yyyy HH:mm:ss z";

        <com.android.okhttp.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS> = $r1;

        $r2 = <com.android.okhttp.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS>;

        $i0 = lengthof $r2;

        $r3 = newarray (java.text.DateFormat)[$i0];

        <com.android.okhttp.internal.http.HttpDate: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS> = $r3;

        return;
    }

    private void <init>()
    {
        com.android.okhttp.internal.http.HttpDate r0;

        r0 := @this: com.android.okhttp.internal.http.HttpDate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String format(java.util.Date)
    {
        java.util.Date r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        java.text.DateFormat $r3;
        java.lang.String $r4;

        r0 := @parameter0: java.util.Date;

        $r1 = <com.android.okhttp.internal.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.text.DateFormat) $r2;

        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r0);

        return $r4;
    }

    public static java.util.Date parse(java.lang.String)
    {
        java.lang.String r0, $r18;
        java.lang.String[] r2, $r12, $r16;
        int i0, i1;
        java.lang.Throwable r3, $r19;
        java.text.DateFormat r4, $r10;
        java.util.Date r6, r7;
        java.lang.ThreadLocal $r8;
        java.lang.Object $r9;
        java.text.ParseException $r11, $r20;
        java.text.DateFormat[] $r13, $r17;
        java.text.SimpleDateFormat $r14;
        java.util.Locale $r15;

        r0 := @parameter0: java.lang.String;

     label01:
        $r8 = <com.android.okhttp.internal.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT>;

        $r9 = virtualinvoke $r8.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r10 = (java.text.DateFormat) $r9;

        r7 = virtualinvoke $r10.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r0);

     label02:
        return r7;

     label03:
        $r11 := @caughtexception;

        r2 = <com.android.okhttp.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS>;

        entermonitor r2;

        i0 = 0;

     label04:
        $r12 = <com.android.okhttp.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS>;

        i1 = lengthof $r12;

     label05:
        if i0 >= i1 goto label16;

     label06:
        $r13 = <com.android.okhttp.internal.http.HttpDate: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS>;

        r4 = $r13[i0];

     label07:
        if r4 != null goto label09;

     label08:
        $r14 = new java.text.SimpleDateFormat;

        $r16 = <com.android.okhttp.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS>;

        $r18 = $r16[i0];

        $r15 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>($r18, $r15);

        r4 = $r14;

        $r17 = <com.android.okhttp.internal.http.HttpDate: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS>;

        $r17[i0] = r4;

     label09:
        r6 = virtualinvoke r4.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r0);

     label10:
        exitmonitor r2;

     label11:
        return r6;

     label12:
        $r19 := @caughtexception;

        r3 = $r19;

     label13:
        exitmonitor r2;

     label14:
        throw r3;

     label15:
        $r20 := @caughtexception;

        i0 = i0 + 1;

        goto label05;

     label16:
        exitmonitor r2;

     label17:
        return null;

        catch java.text.ParseException from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.text.ParseException from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label12;
    }
}
