public final class javax.obex.ObexHelper extends java.lang.Object
{
    public static final int BASE_PACKET_LENGTH;
    public static final int MAX_CLIENT_PACKET_SIZE;
    public static final int MAX_PACKET_SIZE_INT;
    public static final int OBEX_AUTH_REALM_CHARSET_ASCII;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_1;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_2;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_3;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_4;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_5;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_6;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_7;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_8;
    public static final int OBEX_AUTH_REALM_CHARSET_ISO_8859_9;
    public static final int OBEX_AUTH_REALM_CHARSET_UNICODE;
    public static final int OBEX_OPCODE_ABORT;
    public static final int OBEX_OPCODE_CONNECT;
    public static final int OBEX_OPCODE_DISCONNECT;
    public static final int OBEX_OPCODE_GET;
    public static final int OBEX_OPCODE_GET_FINAL;
    public static final int OBEX_OPCODE_PUT;
    public static final int OBEX_OPCODE_PUT_FINAL;
    public static final int OBEX_OPCODE_RESERVED;
    public static final int OBEX_OPCODE_RESERVED_FINAL;
    public static final int OBEX_OPCODE_SETPATH;

    private void <init>()
    {
        javax.obex.ObexHelper r0;

        r0 := @this: javax.obex.ObexHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] computeAuthenticationChallenge(byte[], java.lang.String, boolean, boolean) throws java.io.IOException
    {
        byte[] r0, r2, $r3;
        java.lang.String r1;
        boolean z0, z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8;
        byte $b6, $b7, $b9, $b10, $b11, $b12, $b13;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i0 = lengthof r0;

        if $i0 == 16 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Nonce must be 16 bytes long");

        throw $r5;

     label1:
        if r1 != null goto label5;

        r2 = newarray (byte)[21];

     label2:
        r2[0] = 0;

        r2[1] = 16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 2, 16);

        r2[18] = 1;

        r2[19] = 1;

        r2[20] = 0;

        if z0 != 0 goto label3;

        $b12 = r2[20];

        $b11 = 2 | $b12;

        $b13 = (byte) $b11;

        r2[20] = $b13;

     label3:
        if z1 == 0 goto label4;

        $b7 = r2[20];

        $b10 = 1 | $b7;

        $b9 = (byte) $b10;

        r2[20] = $b9;

     label4:
        return r2;

     label5:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 < 255 goto label6;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Realm must be less then 255 bytes");

        throw $r4;

     label6:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = 24 + $i2;

        r2 = newarray (byte)[$i3];

        r2[21] = 2;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = 1 + $i4;

        $b6 = (byte) $i5;

        r2[22] = $b6;

        r2[23] = 1;

        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO8859_1");

        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 24, $i8);

        goto label2;
    }

    public static byte[] computeMd5Hash(byte[])
    {
        byte[] r0, r2;
        java.security.NoSuchAlgorithmException r1, $r4;
        java.security.MessageDigest $r3;
        java.lang.RuntimeException $r5;

        r0 := @parameter0: byte[];

     label1:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>(r0);

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static byte[] convertToByteArray(long)
    {
        long l0, $l1, $l2, $l5, $l6, $l9, $l10, $l13;
        byte[] r0;
        int $i3, $i7, $i11, $i15;
        byte $b4, $b8, $b12, $b14;

        l0 := @parameter0: long;

        r0 = newarray (byte)[4];

        $l1 = l0 >> 24;

        $l2 = 255L & $l1;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        r0[0] = $b4;

        $l5 = l0 >> 16;

        $l6 = 255L & $l5;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        r0[1] = $b8;

        $l9 = l0 >> 8;

        $l10 = 255L & $l9;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        r0[2] = $b12;

        $l13 = 255L & l0;

        $i15 = (int) $l13;

        $b14 = (byte) $i15;

        r0[3] = $b14;

        return r0;
    }

    public static long convertToLong(byte[])
    {
        byte[] r0;
        long l0, l1, l3, $l8;
        int i2, $i4, $i7;
        byte $b5, $b6;

        r0 := @parameter0: byte[];

        l0 = 0L;

        l1 = 0L;

        $i4 = lengthof r0;

        i2 = -1 + $i4;

     label1:
        if i2 < 0 goto label3;

        $b5 = r0[i2];

        l3 = (long) $b5;

        $b6 = l3 cmp 0L;

        if $b6 >= 0 goto label2;

        l3 = l3 + 256L;

     label2:
        $i7 = (int) l1;

        $l8 = l3 << $i7;

        l0 = l0 | $l8;

        l1 = l1 + 8L;

        i2 = i2 + -1;

        goto label1;

     label3:
        return l0;
    }

    public static java.lang.String convertToUnicode(byte[], boolean)
    {
        byte[] r0;
        boolean z0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        char[] r1;
        java.lang.String $r2, $r3;
        char $c12;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        if r0 == null goto label1;

        $i5 = lengthof r0;

        if $i5 != 0 goto label2;

     label1:
        return null;

     label2:
        i0 = lengthof r0;

        $i6 = i0 % 2;

        if $i6 == 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Byte array not of a valid form");

        throw $r4;

     label3:
        i1 = i0 >> 1;

        if z0 == 0 goto label4;

        i1 = i1 + -1;

     label4:
        r1 = newarray (char)[i1];

        i2 = 0;

     label5:
        if i2 >= i1 goto label9;

        $i7 = i2 * 2;

        i3 = r0[$i7];

        $i8 = i2 * 2;

        $i9 = 1 + $i8;

        i4 = r0[$i9];

        if i3 >= 0 goto label6;

        i3 = i3 + 256;

     label6:
        if i4 >= 0 goto label7;

        i4 = i4 + 256;

     label7:
        if i3 != 0 goto label8;

        if i4 != 0 goto label8;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i2);

        return $r3;

     label8:
        $i10 = i3 << 8;

        $i11 = i4 | $i10;

        $c12 = (char) $i11;

        r1[i2] = $c12;

        i2 = i2 + 1;

        goto label5;

     label9:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    public static byte[] convertToUnicodeByteArray(java.lang.String)
    {
        java.lang.String r0;
        char[] r1;
        byte[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12, $i13, $i16;
        char $c9, $c10, $c15;
        byte $b11, $b14;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i1 = lengthof r1;

        $i2 = 2 * $i1;

        $i3 = 2 + $i2;

        r2 = newarray (byte)[$i3];

        i0 = 0;

     label2:
        $i4 = lengthof r1;

        if i0 >= $i4 goto label3;

        $i13 = i0 * 2;

        $c9 = r1[i0];

        $c10 = $c9 >> 8;

        $b11 = (byte) $c10;

        r2[$i13] = $b11;

        $i12 = i0 * 2;

        $i16 = 1 + $i12;

        $c15 = r1[i0];

        $b14 = (byte) $c15;

        r2[$i16] = $b14;

        i0 = i0 + 1;

        goto label2;

     label3:
        $i5 = lengthof r2;

        $i6 = -2 + $i5;

        r2[$i6] = 0;

        $i7 = lengthof r2;

        $i8 = -1 + $i7;

        r2[$i8] = 0;

        return r2;
    }

    public static byte[] createHeader(javax.obex.HeaderSet, boolean)
    {
        javax.obex.HeaderSet r0;
        boolean z0, $z1;
        byte[] r1, r6, r10, r13, r19, r21, r23, r24, r25, r26, r27, r28, r29, r35, $r40, $r44, $r46, $r48, $r50, $r52, $r53, $r55, $r56, $r57, $r58, $r60, $r63, $r65, $r66, $r79, $r88, $r90;
        java.io.ByteArrayOutputStream r2, $r32;
        java.lang.Throwable r3, $r95, $r97;
        java.lang.Long r8, r15, r34;
        java.lang.String r9, r11, r20, r30, $r71, $r74;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, $i21, $i22, $i23, $i24, $i25, $i27, $i29, $i30, $i31, $i33, $i35, $i37, $i38, $i40, $i42, $i44, $i46, $i48, $i49, $i50, $i51, $i53, $i54, $i55, $i56, $i57, $i59, $i61, $i62, $i63, $i65, $i67, $i68, $i70, $i71, $i72, $i73, $i75, $i77, $i78, $i80, $i82, $i84, $i86, $i88, $i90, $i91, $i92, $i95, $i96, $i97, $i100, $i101, $i102, $i103, $i104, $i106, $i108, $i112, $i114, $i115, $i116, $i118, $i120;
        java.io.UnsupportedEncodingException r12, r18, $r91, $r92;
        java.util.Calendar r14, r22;
        java.lang.StringBuffer r17, $r67;
        java.lang.Byte r33;
        java.lang.Object $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r45, $r47, $r49, $r51, $r54, $r59, $r61, $r62, $r64, $r89;
        byte $b26, $b28, $b32, $b34, $b36, $b39, $b41, $b43, $b47, $b52, $b58, $b60, $b64, $b66, $b69, $b74, $b76, $b79, $b81, $b83, $b85, $b87, $b89, $b98, $b99, $b107, $b109, $b111, $b113, $b117, $b119;
        long $l45, $l93, $l94, $l105, $l110;
        java.util.Date $r70;
        java.util.TimeZone $r72;
        java.io.IOException $r87, $r94;
        java.lang.Exception $r93, $r96, $r99;

        r0 := @parameter0: javax.obex.HeaderSet;

        z0 := @parameter1: boolean;

        r1 = newarray (byte)[2];

        $r32 = new java.io.ByteArrayOutputStream;

        specialinvoke $r32.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r32;

     label001:
        $r40 = r0.<javax.obex.HeaderSet: byte[] mConnectionID>;

        if $r40 == null goto label002;

        $r89 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(70);

        if $r89 != null goto label002;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(-53);

        $r88 = r0.<javax.obex.HeaderSet: byte[] mConnectionID>;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r88);

     label002:
        $r41 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(192);

        r8 = (java.lang.Long) $r41;

     label003:
        if r8 == null goto label007;

     label004:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(-64);

        $l110 = virtualinvoke r8.<java.lang.Long: long longValue()>();

        $r90 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>($l110);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r90);

     label005:
        if z0 == 0 goto label007;

     label006:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(192, null);

     label007:
        $r42 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(1);

        r9 = (java.lang.String) $r42;

     label008:
        if r9 == null goto label012;

     label009:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(1);

        r10 = staticinvoke <javax.obex.ObexHelper: byte[] convertToUnicodeByteArray(java.lang.String)>(r9);

        $i116 = lengthof r10;

        i0 = 3 + $i116;

        $i115 = i0 >> 8;

        $i114 = 255 & $i115;

        $b113 = (byte) $i114;

        r1[0] = $b113;

        $i112 = i0 & 255;

        $b111 = (byte) $i112;

        r1[1] = $b111;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r10);

     label010:
        if z0 == 0 goto label012;

     label011:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(1, null);

     label012:
        $r43 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(66);

        r11 = (java.lang.String) $r43;

     label013:
        if r11 == null goto label019;

     label014:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(66);

     label015:
        r13 = virtualinvoke r11.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO8859_1");

     label016:
        $i103 = lengthof r13;

        i1 = 4 + $i103;

        $i104 = i1 >> 8;

        $i120 = 255 & $i104;

        $b119 = (byte) $i120;

        r1[0] = $b119;

        $i118 = i1 & 255;

        $b117 = (byte) $i118;

        r1[1] = $b117;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r13);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(0);

     label017:
        if z0 == 0 goto label019;

     label018:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(66, null);

     label019:
        $r36 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(195);

        r15 = (java.lang.Long) $r36;

     label020:
        if r15 == null goto label024;

     label021:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(-61);

        $l105 = virtualinvoke r15.<java.lang.Long: long longValue()>();

        $r79 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>($l105);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r79);

     label022:
        if z0 == 0 goto label024;

     label023:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(195, null);

     label024:
        $r37 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(68);

        r14 = (java.util.Calendar) $r37;

     label025:
        if r14 == null goto label058;

     label026:
        $r67 = new java.lang.StringBuffer;

        specialinvoke $r67.<java.lang.StringBuffer: void <init>()>();

        r17 = $r67;

     label027:
        i3 = virtualinvoke r14.<java.util.Calendar: int get(int)>(1);

     label028:
        i2 = i3;

     label029:
        if i2 >= 1000 goto label038;

     label030:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label031:
        i2 = i2 * 10;

        goto label029;

     label032:
        $r92 := @caughtexception;

        r12 = $r92;

     label033:
        throw r12;

     label034:
        $r87 := @caughtexception;

     label035:
        r6 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label036:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>();

     label037:
        return r6;

     label038:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        i4 = virtualinvoke r14.<java.util.Calendar: int get(int)>(2);

     label039:
        if i4 >= 10 goto label041;

     label040:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label041:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i4);

        i5 = virtualinvoke r14.<java.util.Calendar: int get(int)>(5);

     label042:
        if i5 >= 10 goto label044;

     label043:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label044:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i5);

        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T");

        i6 = virtualinvoke r14.<java.util.Calendar: int get(int)>(11);

     label045:
        if i6 >= 10 goto label047;

     label046:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label047:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i6);

        i8 = virtualinvoke r14.<java.util.Calendar: int get(int)>(12);

     label048:
        if i8 >= 10 goto label050;

     label049:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label050:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i8);

        i7 = virtualinvoke r14.<java.util.Calendar: int get(int)>(13);

     label051:
        if i7 >= 10 goto label053;

     label052:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label053:
        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i7);

        $r72 = virtualinvoke r14.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $r74 = virtualinvoke $r72.<java.util.TimeZone: java.lang.String getID()>();

        $z1 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>("UTC");

        if $z1 == 0 goto label054;

        virtualinvoke r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Z");

     label054:
        $r71 = virtualinvoke r17.<java.lang.StringBuffer: java.lang.String toString()>();

        r19 = virtualinvoke $r71.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO8859_1");

     label055:
        $i102 = lengthof r19;

        i9 = 3 + $i102;

        $i101 = i9 >> 8;

        $i106 = 255 & $i101;

        $b107 = (byte) $i106;

        r1[0] = $b107;

        $i108 = i9 & 255;

        $b109 = (byte) $i108;

        r1[1] = $b109;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(68);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r19);

     label056:
        if z0 == 0 goto label058;

     label057:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(68, null);

     label058:
        $r38 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(196);

        r22 = (java.util.Calendar) $r38;

     label059:
        if r22 == null goto label063;

     label060:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(196);

        $r70 = virtualinvoke r22.<java.util.Calendar: java.util.Date getTime()>();

        $l93 = virtualinvoke $r70.<java.util.Date: long getTime()>();

        $l94 = $l93 / 1000L;

        $r66 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>($l94);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r66);

     label061:
        if z0 == 0 goto label063;

     label062:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(196, null);

     label063:
        $r39 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(5);

        r20 = (java.lang.String) $r39;

     label064:
        if r20 == null goto label068;

     label065:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(5);

        r21 = staticinvoke <javax.obex.ObexHelper: byte[] convertToUnicodeByteArray(java.lang.String)>(r20);

        $i97 = lengthof r21;

        i11 = 3 + $i97;

        $i95 = i11 >> 8;

        $i96 = 255 & $i95;

        $b99 = (byte) $i96;

        r1[0] = $b99;

        $i100 = i11 & 255;

        $b98 = (byte) $i100;

        r1[1] = $b98;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r21);

     label066:
        if z0 == 0 goto label068;

     label067:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(5, null);

     label068:
        $r49 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(70);

        $r48 = (byte[]) $r49;

        r24 = (byte[]) $r48;

     label069:
        if r24 == null goto label073;

     label070:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(70);

        $i78 = lengthof r24;

        i10 = 3 + $i78;

        $i77 = i10 >> 8;

        $i84 = 255 & $i77;

        $b83 = (byte) $i84;

        r1[0] = $b83;

        $i82 = i10 & 255;

        $b81 = (byte) $i82;

        r1[1] = $b81;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r24);

     label071:
        if z0 == 0 goto label073;

     label072:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(70, null);

     label073:
        $r51 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(71);

        $r50 = (byte[]) $r51;

        r23 = (byte[]) $r50;

     label074:
        if r23 == null goto label078;

     label075:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(71);

        $i92 = lengthof r23;

        i13 = 3 + $i92;

        $i91 = i13 >> 8;

        $i90 = 255 & $i91;

        $b89 = (byte) $i90;

        r1[0] = $b89;

        $i80 = i13 & 255;

        $b79 = (byte) $i80;

        r1[1] = $b79;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r23);

     label076:
        if z0 == 0 goto label078;

     label077:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(71, null);

     label078:
        $r45 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(74);

        $r44 = (byte[]) $r45;

        r26 = (byte[]) $r44;

     label079:
        if r26 == null goto label083;

     label080:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(74);

        $i67 = lengthof r26;

        i12 = 3 + $i67;

        $i68 = i12 >> 8;

        $i88 = 255 & $i68;

        $b87 = (byte) $i88;

        r1[0] = $b87;

        $i86 = i12 & 255;

        $b85 = (byte) $i86;

        r1[1] = $b85;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r26);

     label081:
        if z0 == 0 goto label083;

     label082:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(74, null);

     label083:
        $r47 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(76);

        $r46 = (byte[]) $r47;

        r25 = (byte[]) $r46;

     label084:
        if r25 == null goto label088;

     label085:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(76);

        $i61 = lengthof r25;

        i16 = 3 + $i61;

        $i62 = i16 >> 8;

        $i63 = 255 & $i62;

        $b64 = (byte) $i63;

        r1[0] = $b64;

        $i65 = i16 & 255;

        $b66 = (byte) $i65;

        r1[1] = $b66;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r25);

     label086:
        if z0 == 0 goto label088;

     label087:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(76, null);

     label088:
        $r54 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(79);

        $r53 = (byte[]) $r54;

        r27 = (byte[]) $r53;

     label089:
        if r27 == null goto label136;

     label090:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(79);

        $i71 = lengthof r27;

        i15 = 3 + $i71;

        $i72 = i15 >> 8;

        $i73 = 255 & $i72;

        $b74 = (byte) $i73;

        r1[0] = $b74;

        $i75 = i15 & 255;

        $b76 = (byte) $i75;

        r1[1] = $b76;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r27);

     label091:
        if z0 == 0 goto label136;

     label092:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(79, null);

     label093:
        goto label136;

     label094:
        if i14 >= 16 goto label119;

     label095:
        $i30 = i14 + 48;

        $r59 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i30);

        r30 = (java.lang.String) $r59;

     label096:
        if r30 == null goto label100;

     label097:
        $b47 = (byte) i14;

        $i46 = 48 + $b47;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i46);

        r29 = staticinvoke <javax.obex.ObexHelper: byte[] convertToUnicodeByteArray(java.lang.String)>(r30);

        $i48 = lengthof r29;

        i17 = 3 + $i48;

        $i50 = i17 >> 8;

        $i49 = 255 & $i50;

        $b52 = (byte) $i49;

        r1[0] = $b52;

        $i51 = i17 & 255;

        $b69 = (byte) $i51;

        r1[1] = $b69;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r29);

     label098:
        if z0 == 0 goto label100;

     label099:
        $i70 = i14 + 48;

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i70, null);

     label100:
        $i29 = i14 + 112;

        $r64 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i29);

        $r63 = (byte[]) $r64;

        r28 = (byte[]) $r63;

     label101:
        if r28 == null goto label105;

     label102:
        $b39 = (byte) i14;

        $i54 = 112 + $b39;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i54);

        $i53 = lengthof r28;

        i20 = 3 + $i53;

        $i56 = i20 >> 8;

        $i55 = 255 & $i56;

        $b58 = (byte) $i55;

        r1[0] = $b58;

        $i57 = i20 & 255;

        $b60 = (byte) $i57;

        r1[1] = $b60;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r28);

     label103:
        if z0 == 0 goto label105;

     label104:
        $i59 = i14 + 112;

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i59, null);

     label105:
        $i38 = i14 + 176;

        $r62 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i38);

        r33 = (java.lang.Byte) $r62;

     label106:
        if r33 == null goto label110;

     label107:
        $b43 = (byte) i14;

        $i42 = 176 + $b43;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i42);

        $b41 = virtualinvoke r33.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($b41);

     label108:
        if z0 == 0 goto label110;

     label109:
        $i40 = i14 + 176;

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i40, null);

     label110:
        $i37 = i14 + 240;

        $r61 = virtualinvoke r0.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i37);

        r34 = (java.lang.Long) $r61;

     label111:
        if r34 == null goto label115;

     label112:
        $b36 = (byte) i14;

        $i35 = 240 + $b36;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($i35);

        $l45 = virtualinvoke r34.<java.lang.Long: long longValue()>();

        $r65 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>($l45);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r65);

     label113:
        if z0 == 0 goto label115;

     label114:
        $i44 = i14 + 240;

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i44, null);

     label115:
        i14 = i14 + 1;

        goto label094;

     label116:
        $r91 := @caughtexception;

        r18 = $r91;

     label117:
        throw r18;

     label118:
        $r94 := @caughtexception;

        goto label035;

     label119:
        $r56 = r0.<javax.obex.HeaderSet: byte[] mAuthChall>;

        if $r56 == null goto label122;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(77);

        $r58 = r0.<javax.obex.HeaderSet: byte[] mAuthChall>;

        $i23 = lengthof $r58;

        i19 = 3 + $i23;

        $i24 = i19 >> 8;

        $i33 = 255 & $i24;

        $b34 = (byte) $i33;

        r1[0] = $b34;

        $i31 = i19 & 255;

        $b32 = (byte) $i31;

        r1[1] = $b32;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        $r60 = r0.<javax.obex.HeaderSet: byte[] mAuthChall>;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r60);

     label120:
        if z0 == 0 goto label122;

     label121:
        r0.<javax.obex.HeaderSet: byte[] mAuthChall> = null;

     label122:
        $r55 = r0.<javax.obex.HeaderSet: byte[] mAuthResp>;

        if $r55 == null goto label125;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(78);

        $r52 = r0.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i22 = lengthof $r52;

        i18 = 3 + $i22;

        $i21 = i18 >> 8;

        $i27 = 255 & $i21;

        $b28 = (byte) $i27;

        r1[0] = $b28;

        $i25 = i18 & 255;

        $b26 = (byte) $i25;

        r1[1] = $b26;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r1);

        $r57 = r0.<javax.obex.HeaderSet: byte[] mAuthResp>;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r57);

     label123:
        if z0 == 0 goto label125;

     label124:
        r0.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

     label125:
        r35 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label126:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>();

     label127:
        return r35;

     label128:
        $r93 := @caughtexception;

        return r35;

     label129:
        $r97 := @caughtexception;

        r3 = $r97;

     label130:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label131:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>();

     label132:
        throw r3;

     label133:
        $r96 := @caughtexception;

        return r6;

     label134:
        $r99 := @caughtexception;

        goto label132;

     label135:
        $r95 := @caughtexception;

        r3 = $r95;

        goto label130;

     label136:
        i14 = 0;

        goto label094;

        catch java.io.IOException from label001 to label002 with label034;
        catch java.lang.Throwable from label001 to label002 with label129;
        catch java.io.IOException from label002 to label003 with label034;
        catch java.lang.Throwable from label002 to label003 with label129;
        catch java.io.IOException from label004 to label005 with label034;
        catch java.lang.Throwable from label004 to label005 with label129;
        catch java.io.IOException from label006 to label007 with label034;
        catch java.lang.Throwable from label006 to label007 with label129;
        catch java.io.IOException from label007 to label008 with label034;
        catch java.lang.Throwable from label007 to label008 with label129;
        catch java.io.IOException from label009 to label010 with label034;
        catch java.lang.Throwable from label009 to label010 with label129;
        catch java.io.IOException from label011 to label012 with label034;
        catch java.lang.Throwable from label011 to label012 with label129;
        catch java.io.IOException from label012 to label013 with label034;
        catch java.lang.Throwable from label012 to label013 with label129;
        catch java.io.IOException from label014 to label015 with label034;
        catch java.lang.Throwable from label014 to label015 with label129;
        catch java.io.UnsupportedEncodingException from label015 to label016 with label032;
        catch java.io.IOException from label015 to label016 with label034;
        catch java.lang.Throwable from label015 to label016 with label129;
        catch java.io.IOException from label016 to label017 with label034;
        catch java.lang.Throwable from label016 to label017 with label129;
        catch java.io.IOException from label018 to label019 with label034;
        catch java.lang.Throwable from label018 to label019 with label129;
        catch java.io.IOException from label019 to label020 with label034;
        catch java.lang.Throwable from label019 to label020 with label129;
        catch java.io.IOException from label021 to label022 with label034;
        catch java.lang.Throwable from label021 to label022 with label129;
        catch java.io.IOException from label023 to label024 with label034;
        catch java.lang.Throwable from label023 to label024 with label129;
        catch java.io.IOException from label024 to label025 with label034;
        catch java.lang.Throwable from label024 to label025 with label129;
        catch java.io.IOException from label026 to label027 with label034;
        catch java.lang.Throwable from label026 to label027 with label129;
        catch java.io.IOException from label027 to label028 with label118;
        catch java.lang.Throwable from label027 to label028 with label135;
        catch java.io.IOException from label030 to label031 with label118;
        catch java.lang.Throwable from label030 to label031 with label135;
        catch java.io.IOException from label033 to label034 with label034;
        catch java.lang.Throwable from label033 to label034 with label129;
        catch java.lang.Exception from label036 to label037 with label133;
        catch java.io.IOException from label038 to label039 with label118;
        catch java.lang.Throwable from label038 to label039 with label135;
        catch java.io.IOException from label040 to label041 with label118;
        catch java.lang.Throwable from label040 to label041 with label135;
        catch java.io.IOException from label041 to label042 with label118;
        catch java.lang.Throwable from label041 to label042 with label135;
        catch java.io.IOException from label043 to label044 with label118;
        catch java.lang.Throwable from label043 to label044 with label135;
        catch java.io.IOException from label044 to label045 with label118;
        catch java.lang.Throwable from label044 to label045 with label135;
        catch java.io.IOException from label046 to label047 with label118;
        catch java.lang.Throwable from label046 to label047 with label135;
        catch java.io.IOException from label047 to label048 with label118;
        catch java.lang.Throwable from label047 to label048 with label135;
        catch java.io.IOException from label049 to label050 with label118;
        catch java.lang.Throwable from label049 to label050 with label135;
        catch java.io.IOException from label050 to label051 with label118;
        catch java.lang.Throwable from label050 to label051 with label135;
        catch java.io.IOException from label052 to label053 with label118;
        catch java.lang.Throwable from label052 to label053 with label135;
        catch java.io.IOException from label053 to label054 with label118;
        catch java.lang.Throwable from label053 to label054 with label135;
        catch java.io.UnsupportedEncodingException from label054 to label055 with label116;
        catch java.io.IOException from label054 to label055 with label118;
        catch java.lang.Throwable from label054 to label055 with label135;
        catch java.io.IOException from label055 to label056 with label118;
        catch java.lang.Throwable from label055 to label056 with label135;
        catch java.io.IOException from label057 to label058 with label118;
        catch java.lang.Throwable from label057 to label058 with label135;
        catch java.io.IOException from label058 to label059 with label034;
        catch java.lang.Throwable from label058 to label059 with label129;
        catch java.io.IOException from label060 to label061 with label034;
        catch java.lang.Throwable from label060 to label061 with label129;
        catch java.io.IOException from label062 to label063 with label034;
        catch java.lang.Throwable from label062 to label063 with label129;
        catch java.io.IOException from label063 to label064 with label034;
        catch java.lang.Throwable from label063 to label064 with label129;
        catch java.io.IOException from label065 to label066 with label034;
        catch java.lang.Throwable from label065 to label066 with label129;
        catch java.io.IOException from label067 to label068 with label034;
        catch java.lang.Throwable from label067 to label068 with label129;
        catch java.io.IOException from label068 to label069 with label034;
        catch java.lang.Throwable from label068 to label069 with label129;
        catch java.io.IOException from label070 to label071 with label034;
        catch java.lang.Throwable from label070 to label071 with label129;
        catch java.io.IOException from label072 to label073 with label034;
        catch java.lang.Throwable from label072 to label073 with label129;
        catch java.io.IOException from label073 to label074 with label034;
        catch java.lang.Throwable from label073 to label074 with label129;
        catch java.io.IOException from label075 to label076 with label034;
        catch java.lang.Throwable from label075 to label076 with label129;
        catch java.io.IOException from label077 to label078 with label034;
        catch java.lang.Throwable from label077 to label078 with label129;
        catch java.io.IOException from label078 to label079 with label034;
        catch java.lang.Throwable from label078 to label079 with label129;
        catch java.io.IOException from label080 to label081 with label034;
        catch java.lang.Throwable from label080 to label081 with label129;
        catch java.io.IOException from label082 to label083 with label034;
        catch java.lang.Throwable from label082 to label083 with label129;
        catch java.io.IOException from label083 to label084 with label034;
        catch java.lang.Throwable from label083 to label084 with label129;
        catch java.io.IOException from label085 to label086 with label034;
        catch java.lang.Throwable from label085 to label086 with label129;
        catch java.io.IOException from label087 to label088 with label034;
        catch java.lang.Throwable from label087 to label088 with label129;
        catch java.io.IOException from label088 to label089 with label034;
        catch java.lang.Throwable from label088 to label089 with label129;
        catch java.io.IOException from label090 to label091 with label034;
        catch java.lang.Throwable from label090 to label091 with label129;
        catch java.io.IOException from label092 to label093 with label034;
        catch java.lang.Throwable from label092 to label093 with label129;
        catch java.io.IOException from label095 to label096 with label034;
        catch java.lang.Throwable from label095 to label096 with label129;
        catch java.io.IOException from label097 to label098 with label034;
        catch java.lang.Throwable from label097 to label098 with label129;
        catch java.io.IOException from label099 to label100 with label034;
        catch java.lang.Throwable from label099 to label100 with label129;
        catch java.io.IOException from label100 to label101 with label034;
        catch java.lang.Throwable from label100 to label101 with label129;
        catch java.io.IOException from label102 to label103 with label034;
        catch java.lang.Throwable from label102 to label103 with label129;
        catch java.io.IOException from label104 to label105 with label034;
        catch java.lang.Throwable from label104 to label105 with label129;
        catch java.io.IOException from label105 to label106 with label034;
        catch java.lang.Throwable from label105 to label106 with label129;
        catch java.io.IOException from label107 to label108 with label034;
        catch java.lang.Throwable from label107 to label108 with label129;
        catch java.io.IOException from label109 to label110 with label034;
        catch java.lang.Throwable from label109 to label110 with label129;
        catch java.io.IOException from label110 to label111 with label034;
        catch java.lang.Throwable from label110 to label111 with label129;
        catch java.io.IOException from label112 to label113 with label034;
        catch java.lang.Throwable from label112 to label113 with label129;
        catch java.io.IOException from label114 to label115 with label034;
        catch java.lang.Throwable from label114 to label115 with label129;
        catch java.io.IOException from label117 to label118 with label118;
        catch java.lang.Throwable from label117 to label118 with label135;
        catch java.io.IOException from label119 to label120 with label034;
        catch java.lang.Throwable from label119 to label120 with label129;
        catch java.io.IOException from label121 to label122 with label034;
        catch java.lang.Throwable from label121 to label122 with label129;
        catch java.io.IOException from label122 to label123 with label034;
        catch java.lang.Throwable from label122 to label123 with label129;
        catch java.io.IOException from label124 to label125 with label034;
        catch java.lang.Throwable from label124 to label125 with label129;
        catch java.lang.Exception from label126 to label127 with label128;
        catch java.lang.Exception from label131 to label132 with label134;
    }

    public static int findHeaderEnd(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i18, $i19, $i21, $i22;
        byte $b16, $b17, $b20, $b23, $b24, $b25;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

        i3 = -1;

        i4 = i0;

     label01:
        if i2 >= i1 goto label12;

        $i14 = lengthof r0;

        if i4 >= $i14 goto label12;

        $b16 = r0[i4];

        if $b16 >= 0 goto label07;

        $b25 = r0[i4];

        i5 = 256 + $b25;

     label02:
        i3 = i2;

        $i15 = i5 & 192;

        lookupswitch($i15)
        {
            case 0: goto label04;
            case 64: goto label04;
            case 128: goto label10;
            case 192: goto label11;
            default: goto label03;
        };

     label03:
        goto label01;

     label04:
        i6 = i4 + 1;

        $b17 = r0[i6];

        if $b17 >= 0 goto label08;

        $b23 = r0[i6];

        i7 = 256 + $b23;

     label05:
        i8 = i7 << 8;

        i9 = i6 + 1;

        $b20 = r0[i9];

        if $b20 >= 0 goto label09;

        $b24 = r0[i9];

        i10 = 256 + $b24;

     label06:
        $i19 = i8 + i10;

        i11 = -3 + $i19;

        $i22 = i9 + 1;

        i4 = i11 + $i22;

        $i21 = i11 + 3;

        i2 = i2 + $i21;

        goto label01;

     label07:
        i5 = r0[i4];

        goto label02;

     label08:
        i7 = r0[i6];

        goto label05;

     label09:
        i10 = r0[i9];

        goto label06;

     label10:
        $i18 = i4 + 1;

        i4 = 1 + $i18;

        i2 = i2 + 2;

        goto label01;

     label11:
        i4 = i4 + 5;

        i2 = i2 + 5;

        goto label01;

     label12:
        if i3 != 0 goto label14;

        if i2 >= i1 goto label13;

        $i13 = lengthof r0;

        return $i13;

     label13:
        return -1;

     label14:
        $i12 = i3 + i0;

        return $i12;
    }

    public static int findTag(byte, byte[])
    {
        byte b0, $b4, $b6;
        byte[] r0;
        int i1, $i2, $i3, $i5, $i8;
        short $s7;

        b0 := @parameter0: byte;

        r0 := @parameter1: byte[];

        if r0 != null goto label2;

        i1 = -1;

     label1:
        return i1;

     label2:
        i1 = 0;

     label3:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label4;

        $b4 = r0[i1];

        if $b4 == b0 goto label4;

        $i5 = i1 + 1;

        $b6 = r0[$i5];

        $s7 = 255 & $b6;

        $i8 = 2 + $s7;

        i1 = i1 + $i8;

        goto label3;

     label4:
        $i3 = lengthof r0;

        if i1 < $i3 goto label1;

        return -1;
    }

    public static byte[] getTagValue(byte, byte[])
    {
        byte b0, $b4;
        byte[] r0, r1;
        int i1, i2, $i5;
        short s3;

        b0 := @parameter0: byte;

        r0 := @parameter1: byte[];

        i1 = staticinvoke <javax.obex.ObexHelper: int findTag(byte,byte[])>(b0, r0);

        if i1 != -1 goto label1;

        return null;

     label1:
        i2 = i1 + 1;

        $b4 = r0[i2];

        s3 = 255 & $b4;

        r1 = newarray (byte)[s3];

        $i5 = i2 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i5, r1, 0, s3);

        return r1;
    }

    public static byte[] updateHeaderSet(javax.obex.HeaderSet, byte[]) throws java.io.IOException
    {
        javax.obex.HeaderSet r0;
        byte[] r1, r2, r4, r9, $r14, $r16, $r18, $r19, $r20, $r21;
        int i0, i2, i3, i4, i5, i6, i7, i8, $i9, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i32, $i34, $i35, $i36;
        short s1, $s10, $s16, $s19, $s31;
        java.util.Calendar r5, r10;
        boolean z0;
        java.lang.String r8, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32;
        java.io.UnsupportedEncodingException r11, r12, $r34, $r37;
        byte $b11, $b15, $b17, $b18, $b22, $b33;
        java.util.Date $r13;
        long $l12, $l13, $l14;
        java.lang.Long $r15;
        java.lang.Byte $r17;
        char $c29;
        java.util.TimeZone $r27;
        java.io.IOException $r33, $r35, $r38;
        java.lang.Exception $r36, $r39;

        r0 := @parameter0: javax.obex.HeaderSet;

        r1 := @parameter1: byte[];

        i0 = 0;

        r2 = null;

     label01:
        $i9 = lengthof r1;

        if i0 >= $i9 goto label50;

        $b11 = r1[i0];

        s1 = 255 & $b11;

     label02:
        $s10 = s1 & 192;

        lookupswitch($s10)
        {
            case 0: goto label03;
            case 64: goto label03;
            case 128: goto label36;
            case 192: goto label39;
            default: goto label52;
        };

     label03:
        z0 = 1;

        i4 = i0 + 1;

     label04:
        $b18 = r1[i4];

        $s16 = 255 & $b18;

        i5 = $s16 << 8;

     label05:
        i6 = i4 + 1;

     label06:
        $b17 = r1[i6];

        $s19 = 255 & $b17;

        $i20 = i5 + $s19;

        i8 = -3 + $i20;

     label07:
        i7 = i6 + 1;

     label08:
        r9 = newarray (byte)[i8];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i7, r9, 0, i8);

     label09:
        if i8 == 0 goto label53;

        if i8 <= 0 goto label54;

     label10:
        $i32 = i8 - 1;

        $b33 = r9[$i32];

        if $b33 == 0 goto label54;

     label11:
        goto label53;

     label12:
        $s31 = s1 & 192;

        if $s31 != 0 goto label34;

     label13:
        $r31 = staticinvoke <javax.obex.ObexHelper: java.lang.String convertToUnicode(byte[],boolean)>(r9, 1);

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r31);

     label14:
        i0 = i7 + i8;

        goto label01;

     label15:
        if z0 != 0 goto label21;

     label16:
        $r32 = new java.lang.String;

        $i36 = lengthof r9;

        specialinvoke $r32.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r9, 0, $i36, "ISO8859_1");

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r32);

     label17:
        goto label14;

     label18:
        $r37 := @caughtexception;

        r12 = $r37;

     label19:
        throw r12;

     label20:
        $r33 := @caughtexception;

        $r35 = new java.io.IOException;

        specialinvoke $r35.<java.io.IOException: void <init>(java.lang.String)>("Header was not formatted properly");

        throw $r35;

     label21:
        $r28 = new java.lang.String;

        $i34 = lengthof r9;

        $i35 = -1 + $i34;

        specialinvoke $r28.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r9, 0, $i35, "ISO8859_1");

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r28);

     label22:
        goto label14;

     label23:
        $r20 = newarray (byte)[i8];

        r0.<javax.obex.HeaderSet: byte[] mAuthChall> = $r20;

        $r21 = r0.<javax.obex.HeaderSet: byte[] mAuthChall>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i7, $r21, 0, i8);

     label24:
        goto label14;

     label25:
        $r18 = newarray (byte)[i8];

        r0.<javax.obex.HeaderSet: byte[] mAuthResp> = $r18;

        $r19 = r0.<javax.obex.HeaderSet: byte[] mAuthResp>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i7, $r19, 0, i8);

     label26:
        goto label14;

     label27:
        $i21 = i8 + 1;

        r2 = newarray (byte)[$i21];

        $b22 = (byte) s1;

        r2[0] = $b22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i7, r2, 1, i8);

     label28:
        goto label14;

     label29:
        $r22 = new java.lang.String;

        specialinvoke $r22.<java.lang.String: void <init>(byte[],java.lang.String)>(r9, "ISO8859_1");

        r8 = $r22;

        r10 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i23 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i23 != 16 goto label30;

        $c29 = virtualinvoke r8.<java.lang.String: char charAt(int)>(15);

        if $c29 != 90 goto label30;

        $r27 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke r10.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r27);

     label30:
        $r24 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        virtualinvoke r10.<java.util.Calendar: void set(int,int)>(1, $i24);

        $r23 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        $i26 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23);

        virtualinvoke r10.<java.util.Calendar: void set(int,int)>(2, $i26);

        $r25 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(6, 8);

        $i25 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        virtualinvoke r10.<java.util.Calendar: void set(int,int)>(5, $i25);

        $r26 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(9, 11);

        $i27 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        virtualinvoke r10.<java.util.Calendar: void set(int,int)>(11, $i27);

        $r29 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(11, 13);

        $i30 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r29);

        virtualinvoke r10.<java.util.Calendar: void set(int,int)>(12, $i30);

        $r30 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(13, 15);

        $i28 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r30);

        virtualinvoke r10.<java.util.Calendar: void set(int,int)>(13, $i28);

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(68, r10);

     label31:
        goto label14;

     label32:
        $r34 := @caughtexception;

        r11 = $r34;

     label33:
        throw r11;

     label34:
        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, r9);

     label35:
        goto label14;

     label36:
        i3 = i0 + 1;

     label37:
        $b15 = r1[i3];

        $r17 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b15);

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r17);

     label38:
        i0 = i3 + 1;

        goto label01;

     label39:
        i2 = i0 + 1;

     label40:
        r4 = newarray (byte)[4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, r4, 0, 4);

     label41:
        if s1 == 196 goto label48;

        if s1 != 203 goto label44;

     label42:
        $r16 = newarray (byte)[4];

        r0.<javax.obex.HeaderSet: byte[] mConnectionID> = $r16;

        $r14 = r0.<javax.obex.HeaderSet: byte[] mConnectionID>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, $r14, 0, 4);

     label43:
        goto label55;

     label44:
        $l13 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>(r4);

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l13);

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(s1, $r15);

     label45:
        goto label55;

     label46:
        $r39 := @caughtexception;

     label47:
        $r38 = new java.io.IOException;

        specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>("Header was not formatted properly");

        throw $r38;

     label48:
        r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r13 = new java.util.Date;

        $l12 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>(r4);

        $l14 = 1000L * $l12;

        specialinvoke $r13.<java.util.Date: void <init>(long)>($l14);

        virtualinvoke r5.<java.util.Calendar: void setTime(java.util.Date)>($r13);

        virtualinvoke r0.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>(196, r5);

     label49:
        goto label55;

     label50:
        return r2;

     label51:
        $r36 := @caughtexception;

        goto label38;

     label52:
        goto label01;

     label53:
        z0 = 0;

     label54:
        tableswitch(s1)
        {
            case 66: goto label15;
            case 67: goto label12;
            case 68: goto label29;
            case 69: goto label12;
            case 70: goto label12;
            case 71: goto label12;
            case 72: goto label27;
            case 73: goto label27;
            case 74: goto label12;
            case 75: goto label12;
            case 76: goto label12;
            case 77: goto label23;
            case 78: goto label25;
            default: goto label12;
        };

     label55:
        i0 = i2 + 4;

        goto label01;

        catch java.io.IOException from label01 to label02 with label20;
        catch java.io.IOException from label04 to label05 with label20;
        catch java.io.IOException from label06 to label07 with label20;
        catch java.io.IOException from label08 to label09 with label20;
        catch java.io.IOException from label10 to label11 with label20;
        catch java.io.IOException from label13 to label14 with label20;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label18;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.io.IOException from label19 to label20 with label20;
        catch java.io.UnsupportedEncodingException from label21 to label22 with label18;
        catch java.io.IOException from label21 to label22 with label20;
        catch java.io.IOException from label23 to label24 with label20;
        catch java.io.IOException from label25 to label26 with label20;
        catch java.io.IOException from label27 to label28 with label20;
        catch java.io.UnsupportedEncodingException from label29 to label30 with label32;
        catch java.io.IOException from label29 to label30 with label20;
        catch java.io.UnsupportedEncodingException from label30 to label31 with label32;
        catch java.io.IOException from label30 to label31 with label20;
        catch java.io.IOException from label33 to label34 with label20;
        catch java.io.IOException from label34 to label35 with label20;
        catch java.lang.Exception from label37 to label38 with label51;
        catch java.io.IOException from label37 to label38 with label20;
        catch java.io.IOException from label40 to label41 with label20;
        catch java.lang.Exception from label42 to label43 with label46;
        catch java.io.IOException from label42 to label43 with label20;
        catch java.lang.Exception from label44 to label45 with label46;
        catch java.io.IOException from label44 to label45 with label20;
        catch java.io.IOException from label47 to label48 with label20;
        catch java.lang.Exception from label48 to label49 with label46;
        catch java.io.IOException from label48 to label49 with label20;
    }

    public static void <clinit>()
    {
        <javax.obex.ObexHelper: int OBEX_OPCODE_SETPATH> = 133;

        <javax.obex.ObexHelper: int OBEX_OPCODE_RESERVED_FINAL> = 132;

        <javax.obex.ObexHelper: int OBEX_OPCODE_RESERVED> = 4;

        <javax.obex.ObexHelper: int OBEX_OPCODE_PUT_FINAL> = 130;

        <javax.obex.ObexHelper: int OBEX_OPCODE_PUT> = 2;

        <javax.obex.ObexHelper: int OBEX_OPCODE_GET_FINAL> = 131;

        <javax.obex.ObexHelper: int OBEX_OPCODE_GET> = 3;

        <javax.obex.ObexHelper: int OBEX_OPCODE_DISCONNECT> = 129;

        <javax.obex.ObexHelper: int OBEX_OPCODE_CONNECT> = 128;

        <javax.obex.ObexHelper: int OBEX_OPCODE_ABORT> = 255;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_UNICODE> = 255;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_9> = 9;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_8> = 8;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_7> = 7;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_6> = 6;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_5> = 5;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_4> = 4;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_3> = 3;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_2> = 2;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ISO_8859_1> = 1;

        <javax.obex.ObexHelper: int OBEX_AUTH_REALM_CHARSET_ASCII> = 0;

        <javax.obex.ObexHelper: int MAX_PACKET_SIZE_INT> = 65534;

        <javax.obex.ObexHelper: int MAX_CLIENT_PACKET_SIZE> = 64512;

        <javax.obex.ObexHelper: int BASE_PACKET_LENGTH> = 3;

        return;
    }
}
