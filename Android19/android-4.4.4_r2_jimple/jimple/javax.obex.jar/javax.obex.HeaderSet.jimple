public final class javax.obex.HeaderSet extends java.lang.Object
{
    public static final int APPLICATION_PARAMETER;
    public static final int AUTH_CHALLENGE;
    public static final int AUTH_RESPONSE;
    public static final int BODY;
    public static final int CONNECTION_ID;
    public static final int COUNT;
    public static final int DESCRIPTION;
    public static final int END_OF_BODY;
    public static final int HTTP;
    public static final int LENGTH;
    public static final int NAME;
    public static final int OBJECT_CLASS;
    public static final int TARGET;
    public static final int TIME_4_BYTE;
    public static final int TIME_ISO_8601;
    public static final int TYPE;
    public static final int WHO;
    private byte[] mAppParam;
    public byte[] mAuthChall;
    public byte[] mAuthResp;
    private java.util.Calendar mByteTime;
    private java.lang.Byte[] mByteUserDefined;
    public byte[] mConnectionID;
    private java.lang.Long mCount;
    private java.lang.String mDescription;
    private byte[] mHttpHeader;
    private java.lang.Long[] mIntegerUserDefined;
    private java.util.Calendar mIsoTime;
    private java.lang.Long mLength;
    private java.lang.String mName;
    private byte[] mObjectClass;
    private final java.security.SecureRandom mRandom;
    private byte[][] mSequenceUserDefined;
    private byte[] mTarget;
    private java.lang.String mType;
    private java.lang.String[] mUnicodeUserDefined;
    private byte[] mWho;
    byte[] nonce;
    public int responseCode;

    public void <init>()
    {
        javax.obex.HeaderSet r0;
        java.lang.String[] $r1;
        byte[][] $r2;
        java.lang.Byte[] $r3;
        java.lang.Long[] $r4;
        java.security.SecureRandom $r5;

        r0 := @this: javax.obex.HeaderSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.String)[16];

        r0.<javax.obex.HeaderSet: java.lang.String[] mUnicodeUserDefined> = $r1;

        $r2 = newarray (byte[])[16];

        r0.<javax.obex.HeaderSet: byte[][] mSequenceUserDefined> = $r2;

        $r3 = newarray (java.lang.Byte)[16];

        r0.<javax.obex.HeaderSet: java.lang.Byte[] mByteUserDefined> = $r3;

        $r4 = newarray (java.lang.Long)[16];

        r0.<javax.obex.HeaderSet: java.lang.Long[] mIntegerUserDefined> = $r4;

        r0.<javax.obex.HeaderSet: int responseCode> = -1;

        $r5 = new java.security.SecureRandom;

        specialinvoke $r5.<java.security.SecureRandom: void <init>()>();

        r0.<javax.obex.HeaderSet: java.security.SecureRandom mRandom> = $r5;

        return;
    }

    public void createAuthenticationChallenge(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        javax.obex.HeaderSet r0;
        java.lang.String r1;
        boolean z0, z1;
        int i0, $i1;
        byte[] $r2, $r3, $r4, $r6;
        java.security.SecureRandom $r5;
        byte $b2;

        r0 := @this: javax.obex.HeaderSet;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = newarray (byte)[16];

        r0.<javax.obex.HeaderSet: byte[] nonce> = $r2;

        i0 = 0;

     label1:
        if i0 >= 16 goto label2;

        $r6 = r0.<javax.obex.HeaderSet: byte[] nonce>;

        $r5 = r0.<javax.obex.HeaderSet: java.security.SecureRandom mRandom>;

        $i1 = virtualinvoke $r5.<java.security.SecureRandom: int nextInt()>();

        $b2 = (byte) $i1;

        $r6[i0] = $b2;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = r0.<javax.obex.HeaderSet: byte[] nonce>;

        $r4 = staticinvoke <javax.obex.ObexHelper: byte[] computeAuthenticationChallenge(byte[],java.lang.String,boolean,boolean)>($r3, r1, z1, z0);

        r0.<javax.obex.HeaderSet: byte[] mAuthChall> = $r4;

        return;
    }

    public java.lang.Object getHeader(int) throws java.io.IOException
    {
        javax.obex.HeaderSet r0;
        int i0, $i1, $i2, $i3, $i4;
        byte[] $r1, $r5, $r6, $r7, $r8, $r9, $r20;
        java.util.Calendar $r2, $r10;
        java.lang.Long $r3, $r4, $r16;
        java.lang.String $r11, $r12, $r13, $r21;
        java.lang.IllegalArgumentException $r14;
        java.lang.Long[] $r15;
        java.lang.Byte $r17;
        java.lang.Byte[] $r18;
        byte[][] $r19;
        java.lang.String[] $r22;

        r0 := @this: javax.obex.HeaderSet;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label03;
            case 5: goto label08;
            case 66: goto label04;
            case 68: goto label06;
            case 70: goto label09;
            case 71: goto label10;
            case 74: goto label11;
            case 76: goto label14;
            case 79: goto label13;
            case 192: goto label02;
            case 195: goto label05;
            case 196: goto label07;
            case 203: goto label12;
            default: goto label01;
        };

     label01:
        if i0 < 48 goto label15;

        if i0 > 63 goto label15;

        $r22 = r0.<javax.obex.HeaderSet: java.lang.String[] mUnicodeUserDefined>;

        $i4 = i0 - 48;

        $r21 = $r22[$i4];

        return $r21;

     label02:
        $r4 = r0.<javax.obex.HeaderSet: java.lang.Long mCount>;

        return $r4;

     label03:
        $r13 = r0.<javax.obex.HeaderSet: java.lang.String mName>;

        return $r13;

     label04:
        $r11 = r0.<javax.obex.HeaderSet: java.lang.String mType>;

        return $r11;

     label05:
        $r3 = r0.<javax.obex.HeaderSet: java.lang.Long mLength>;

        return $r3;

     label06:
        $r10 = r0.<javax.obex.HeaderSet: java.util.Calendar mIsoTime>;

        return $r10;

     label07:
        $r2 = r0.<javax.obex.HeaderSet: java.util.Calendar mByteTime>;

        return $r2;

     label08:
        $r12 = r0.<javax.obex.HeaderSet: java.lang.String mDescription>;

        return $r12;

     label09:
        $r9 = r0.<javax.obex.HeaderSet: byte[] mTarget>;

        return $r9;

     label10:
        $r8 = r0.<javax.obex.HeaderSet: byte[] mHttpHeader>;

        return $r8;

     label11:
        $r7 = r0.<javax.obex.HeaderSet: byte[] mWho>;

        return $r7;

     label12:
        $r1 = r0.<javax.obex.HeaderSet: byte[] mConnectionID>;

        return $r1;

     label13:
        $r5 = r0.<javax.obex.HeaderSet: byte[] mObjectClass>;

        return $r5;

     label14:
        $r6 = r0.<javax.obex.HeaderSet: byte[] mAppParam>;

        return $r6;

     label15:
        if i0 < 112 goto label16;

        if i0 > 127 goto label16;

        $r19 = r0.<javax.obex.HeaderSet: byte[][] mSequenceUserDefined>;

        $i3 = i0 - 112;

        $r20 = $r19[$i3];

        return $r20;

     label16:
        if i0 < 176 goto label17;

        if i0 > 191 goto label17;

        $r18 = r0.<javax.obex.HeaderSet: java.lang.Byte[] mByteUserDefined>;

        $i2 = i0 - 176;

        $r17 = $r18[$i2];

        return $r17;

     label17:
        if i0 < 240 goto label18;

        if i0 > 255 goto label18;

        $r15 = r0.<javax.obex.HeaderSet: java.lang.Long[] mIntegerUserDefined>;

        $i1 = i0 - 240;

        $r16 = $r15[$i1];

        return $r16;

     label18:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Header Identifier");

        throw $r14;
    }

    public int[] getHeaderList() throws java.io.IOException
    {
        javax.obex.HeaderSet r0;
        java.io.ByteArrayOutputStream r1, $r4;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13;
        byte[] r2, $r11, $r13, $r14, $r15, $r16, $r24;
        int[] r3;
        java.lang.Long $r5, $r8, $r18;
        java.lang.String $r6, $r7, $r12, $r23;
        java.util.Calendar $r9, $r10;
        short $s8;
        byte $b9;
        java.lang.Long[] $r17;
        byte[][] $r19;
        java.lang.Byte[] $r20;
        java.lang.Byte $r21;
        java.lang.String[] $r22;

        r0 := @this: javax.obex.HeaderSet;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r4;

        $r5 = r0.<javax.obex.HeaderSet: java.lang.Long mCount>;

        if $r5 == null goto label01;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(192);

     label01:
        $r6 = r0.<javax.obex.HeaderSet: java.lang.String mName>;

        if $r6 == null goto label02;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(1);

     label02:
        $r7 = r0.<javax.obex.HeaderSet: java.lang.String mType>;

        if $r7 == null goto label03;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(66);

     label03:
        $r8 = r0.<javax.obex.HeaderSet: java.lang.Long mLength>;

        if $r8 == null goto label04;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(195);

     label04:
        $r9 = r0.<javax.obex.HeaderSet: java.util.Calendar mIsoTime>;

        if $r9 == null goto label05;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(68);

     label05:
        $r10 = r0.<javax.obex.HeaderSet: java.util.Calendar mByteTime>;

        if $r10 == null goto label06;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(196);

     label06:
        $r12 = r0.<javax.obex.HeaderSet: java.lang.String mDescription>;

        if $r12 == null goto label07;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(5);

     label07:
        $r11 = r0.<javax.obex.HeaderSet: byte[] mTarget>;

        if $r11 == null goto label08;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(70);

     label08:
        $r14 = r0.<javax.obex.HeaderSet: byte[] mHttpHeader>;

        if $r14 == null goto label09;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(71);

     label09:
        $r13 = r0.<javax.obex.HeaderSet: byte[] mWho>;

        if $r13 == null goto label10;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(74);

     label10:
        $r16 = r0.<javax.obex.HeaderSet: byte[] mAppParam>;

        if $r16 == null goto label11;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(76);

     label11:
        $r15 = r0.<javax.obex.HeaderSet: byte[] mObjectClass>;

        if $r15 == null goto label12;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(79);

     label12:
        i0 = 48;

     label13:
        if i0 >= 64 goto label15;

        $r22 = r0.<javax.obex.HeaderSet: java.lang.String[] mUnicodeUserDefined>;

        $i13 = i0 - 48;

        $r23 = $r22[$i13];

        if $r23 == null goto label14;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i0);

     label14:
        i0 = i0 + 1;

        goto label13;

     label15:
        i1 = 112;

     label16:
        if i1 >= 128 goto label18;

        $r19 = r0.<javax.obex.HeaderSet: byte[][] mSequenceUserDefined>;

        $i12 = i1 - 112;

        $r24 = $r19[$i12];

        if $r24 == null goto label17;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i1);

     label17:
        i1 = i1 + 1;

        goto label16;

     label18:
        i2 = 176;

     label19:
        if i2 >= 192 goto label21;

        $r20 = r0.<javax.obex.HeaderSet: java.lang.Byte[] mByteUserDefined>;

        $i11 = i2 - 176;

        $r21 = $r20[$i11];

        if $r21 == null goto label20;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i2);

     label20:
        i2 = i2 + 1;

        goto label19;

     label21:
        i3 = 240;

     label22:
        if i3 >= 256 goto label24;

        $r17 = r0.<javax.obex.HeaderSet: java.lang.Long[] mIntegerUserDefined>;

        $i10 = i3 - 240;

        $r18 = $r17[$i10];

        if $r18 == null goto label23;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i3);

     label23:
        i3 = i3 + 1;

        goto label22;

     label24:
        r2 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

        if r2 == null goto label25;

        $i5 = lengthof r2;

        if $i5 != 0 goto label27;

     label25:
        r3 = null;

     label26:
        return r3;

     label27:
        $i7 = lengthof r2;

        r3 = newarray (int)[$i7];

        i4 = 0;

     label28:
        $i6 = lengthof r2;

        if i4 >= $i6 goto label26;

        $b9 = r2[i4];

        $s8 = 255 & $b9;

        r3[i4] = $s8;

        i4 = i4 + 1;

        goto label28;
    }

    public int getResponseCode() throws java.io.IOException
    {
        javax.obex.HeaderSet r0;
        int $i0, $i1;
        java.io.IOException $r1;

        r0 := @this: javax.obex.HeaderSet;

        $i0 = r0.<javax.obex.HeaderSet: int responseCode>;

        if $i0 != -1 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("May not be called on a server");

        throw $r1;

     label1:
        $i1 = r0.<javax.obex.HeaderSet: int responseCode>;

        return $i1;
    }

    public void setHeader(int, java.lang.Object)
    {
        javax.obex.HeaderSet r0;
        int i0, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        java.lang.Object r1;
        long l1, l2, l3;
        java.util.Calendar $r2, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.IllegalArgumentException $r3, $r5, $r6, $r9, $r10, $r19, $r24, $r28, $r33, $r42, $r44, $r46, $r47, $r48, $r50, $r53, $r55, $r56, $r66, $r70;
        java.lang.Long $r4, $r7, $r8, $r11, $r49, $r52;
        byte $b4, $b5, $b6, $b7, $b19, $b20;
        byte[] $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r62, $r63, $r64, $r67, $r68;
        java.lang.String $r41, $r43, $r51, $r72;
        java.lang.Long[] $r54, $r59;
        java.lang.Byte[] $r57;
        java.lang.Byte $r58;
        byte[][] $r60, $r61, $r65, $r69;
        java.lang.String[] $r71;

        r0 := @this: javax.obex.HeaderSet;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        lookupswitch(i0)
        {
            case 1: goto label07;
            case 5: goto label20;
            case 66: goto label09;
            case 68: goto label16;
            case 70: goto label22;
            case 71: goto label25;
            case 74: goto label28;
            case 76: goto label34;
            case 79: goto label31;
            case 192: goto label02;
            case 195: goto label11;
            case 196: goto label18;
            default: goto label01;
        };

     label01:
        if i0 < 48 goto label38;

        if i0 > 63 goto label38;

        if r1 == null goto label37;

        $z15 = r1 instanceof java.lang.String;

        if $z15 != 0 goto label37;

        $r70 = new java.lang.IllegalArgumentException;

        specialinvoke $r70.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unicode String User Defined must be a String");

        throw $r70;

     label02:
        $z2 = r1 instanceof java.lang.Long;

        if $z2 != 0 goto label04;

        if r1 != null goto label03;

        r0.<javax.obex.HeaderSet: java.lang.Long mCount> = null;

        return;

     label03:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Count must be a Long");

        throw $r10;

     label04:
        $r8 = (java.lang.Long) r1;

        l2 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $b6 = l2 cmp 0L;

        if $b6 < 0 goto label05;

        $b7 = l2 cmp 4294967295L;

        if $b7 <= 0 goto label06;

     label05:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Count must be between 0 and 0xFFFFFFFF");

        throw $r9;

     label06:
        $r11 = (java.lang.Long) r1;

        r0.<javax.obex.HeaderSet: java.lang.Long mCount> = $r11;

        return;

     label07:
        if r1 == null goto label08;

        $z12 = r1 instanceof java.lang.String;

        if $z12 != 0 goto label08;

        $r48 = new java.lang.IllegalArgumentException;

        specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name must be a String");

        throw $r48;

     label08:
        $r51 = (java.lang.String) r1;

        r0.<javax.obex.HeaderSet: java.lang.String mName> = $r51;

        return;

     label09:
        if r1 == null goto label10;

        $z8 = r1 instanceof java.lang.String;

        if $z8 != 0 goto label10;

        $r42 = new java.lang.IllegalArgumentException;

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type must be a String");

        throw $r42;

     label10:
        $r41 = (java.lang.String) r1;

        r0.<javax.obex.HeaderSet: java.lang.String mType> = $r41;

        return;

     label11:
        $z1 = r1 instanceof java.lang.Long;

        if $z1 != 0 goto label13;

        if r1 != null goto label12;

        r0.<javax.obex.HeaderSet: java.lang.Long mLength> = null;

        return;

     label12:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length must be a Long");

        throw $r6;

     label13:
        $r4 = (java.lang.Long) r1;

        l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $b4 = l1 cmp 0L;

        if $b4 < 0 goto label14;

        $b5 = l1 cmp 4294967295L;

        if $b5 <= 0 goto label15;

     label14:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length must be between 0 and 0xFFFFFFFF");

        throw $r5;

     label15:
        $r7 = (java.lang.Long) r1;

        r0.<javax.obex.HeaderSet: java.lang.Long mLength> = $r7;

        return;

     label16:
        if r1 == null goto label17;

        $z9 = r1 instanceof java.util.Calendar;

        if $z9 != 0 goto label17;

        $r46 = new java.lang.IllegalArgumentException;

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time ISO 8601 must be a Calendar");

        throw $r46;

     label17:
        $r45 = (java.util.Calendar) r1;

        r0.<javax.obex.HeaderSet: java.util.Calendar mIsoTime> = $r45;

        return;

     label18:
        if r1 == null goto label19;

        $z0 = r1 instanceof java.util.Calendar;

        if $z0 != 0 goto label19;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time 4 Byte must be a Calendar");

        throw $r3;

     label19:
        $r2 = (java.util.Calendar) r1;

        r0.<javax.obex.HeaderSet: java.util.Calendar mByteTime> = $r2;

        return;

     label20:
        if r1 == null goto label21;

        $z11 = r1 instanceof java.lang.String;

        if $z11 != 0 goto label21;

        $r50 = new java.lang.IllegalArgumentException;

        specialinvoke $r50.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Description must be a String");

        throw $r50;

     label21:
        $r43 = (java.lang.String) r1;

        r0.<javax.obex.HeaderSet: java.lang.String mDescription> = $r43;

        return;

     label22:
        if r1 != null goto label23;

        r0.<javax.obex.HeaderSet: byte[] mTarget> = null;

        return;

     label23:
        $z7 = r1 instanceof byte[];

        if $z7 != 0 goto label24;

        $r44 = new java.lang.IllegalArgumentException;

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target must be a byte array");

        throw $r44;

     label24:
        $r39 = (byte[]) r1;

        $r40 = (byte[]) $r39;

        $i17 = lengthof $r40;

        $r36 = newarray (byte)[$i17];

        r0.<javax.obex.HeaderSet: byte[] mTarget> = $r36;

        $r38 = r0.<javax.obex.HeaderSet: byte[] mTarget>;

        $r37 = r0.<javax.obex.HeaderSet: byte[] mTarget>;

        $i16 = lengthof $r37;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r38, 0, $i16);

        return;

     label25:
        if r1 != null goto label26;

        r0.<javax.obex.HeaderSet: byte[] mHttpHeader> = null;

        return;

     label26:
        $z6 = r1 instanceof byte[];

        if $z6 != 0 goto label27;

        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP must be a byte array");

        throw $r33;

     label27:
        $r32 = (byte[]) r1;

        $r31 = (byte[]) $r32;

        $i14 = lengthof $r31;

        $r30 = newarray (byte)[$i14];

        r0.<javax.obex.HeaderSet: byte[] mHttpHeader> = $r30;

        $r34 = r0.<javax.obex.HeaderSet: byte[] mHttpHeader>;

        $r35 = r0.<javax.obex.HeaderSet: byte[] mHttpHeader>;

        $i15 = lengthof $r35;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r34, 0, $i15);

        return;

     label28:
        if r1 != null goto label29;

        r0.<javax.obex.HeaderSet: byte[] mWho> = null;

        return;

     label29:
        $z5 = r1 instanceof byte[];

        if $z5 != 0 goto label30;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("WHO must be a byte array");

        throw $r28;

     label30:
        $r22 = (byte[]) r1;

        $r27 = (byte[]) $r22;

        $i12 = lengthof $r27;

        $r26 = newarray (byte)[$i12];

        r0.<javax.obex.HeaderSet: byte[] mWho> = $r26;

        $r29 = r0.<javax.obex.HeaderSet: byte[] mWho>;

        $r25 = r0.<javax.obex.HeaderSet: byte[] mWho>;

        $i13 = lengthof $r25;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r29, 0, $i13);

        return;

     label31:
        if r1 != null goto label32;

        r0.<javax.obex.HeaderSet: byte[] mObjectClass> = null;

        return;

     label32:
        $z3 = r1 instanceof byte[];

        if $z3 != 0 goto label33;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Object Class must be a byte array");

        throw $r19;

     label33:
        $r12 = (byte[]) r1;

        $r13 = (byte[]) $r12;

        $i8 = lengthof $r13;

        $r15 = newarray (byte)[$i8];

        r0.<javax.obex.HeaderSet: byte[] mObjectClass> = $r15;

        $r14 = r0.<javax.obex.HeaderSet: byte[] mObjectClass>;

        $r16 = r0.<javax.obex.HeaderSet: byte[] mObjectClass>;

        $i9 = lengthof $r16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r14, 0, $i9);

        return;

     label34:
        if r1 != null goto label35;

        r0.<javax.obex.HeaderSet: byte[] mAppParam> = null;

        return;

     label35:
        $z4 = r1 instanceof byte[];

        if $z4 != 0 goto label36;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Application Parameter must be a byte array");

        throw $r24;

     label36:
        $r17 = (byte[]) r1;

        $r18 = (byte[]) $r17;

        $i11 = lengthof $r18;

        $r21 = newarray (byte)[$i11];

        r0.<javax.obex.HeaderSet: byte[] mAppParam> = $r21;

        $r23 = r0.<javax.obex.HeaderSet: byte[] mAppParam>;

        $r20 = r0.<javax.obex.HeaderSet: byte[] mAppParam>;

        $i10 = lengthof $r20;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r23, 0, $i10);

        return;

     label37:
        $r71 = r0.<javax.obex.HeaderSet: java.lang.String[] mUnicodeUserDefined>;

        $i29 = i0 - 48;

        $r72 = (java.lang.String) r1;

        $r71[$i29] = $r72;

        return;

     label38:
        if i0 < 112 goto label41;

        if i0 > 127 goto label41;

        if r1 != null goto label39;

        $r65 = r0.<javax.obex.HeaderSet: byte[][] mSequenceUserDefined>;

        $i26 = i0 - 112;

        $r65[$i26] = null;

        return;

     label39:
        $z13 = r1 instanceof byte[];

        if $z13 != 0 goto label40;

        $r66 = new java.lang.IllegalArgumentException;

        specialinvoke $r66.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Byte Sequence User Defined must be a byte array");

        throw $r66;

     label40:
        $r61 = r0.<javax.obex.HeaderSet: byte[][] mSequenceUserDefined>;

        $i24 = i0 - 112;

        $r63 = (byte[]) r1;

        $r64 = (byte[]) $r63;

        $i25 = lengthof $r64;

        $r62 = newarray (byte)[$i25];

        $r61[$i24] = $r62;

        $r60 = r0.<javax.obex.HeaderSet: byte[][] mSequenceUserDefined>;

        $i23 = i0 - 112;

        $r67 = $r60[$i23];

        $r69 = r0.<javax.obex.HeaderSet: byte[][] mSequenceUserDefined>;

        $i28 = i0 - 112;

        $r68 = $r69[$i28];

        $i27 = lengthof $r68;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r67, 0, $i27);

        return;

     label41:
        if i0 < 176 goto label43;

        if i0 > 191 goto label43;

        if r1 == null goto label42;

        $z14 = r1 instanceof java.lang.Byte;

        if $z14 != 0 goto label42;

        $r56 = new java.lang.IllegalArgumentException;

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ByteUser Defined must be a Byte");

        throw $r56;

     label42:
        $r57 = r0.<javax.obex.HeaderSet: java.lang.Byte[] mByteUserDefined>;

        $i21 = i0 - 176;

        $r58 = (java.lang.Byte) r1;

        $r57[$i21] = $r58;

        return;

     label43:
        if i0 < 240 goto label48;

        if i0 > 255 goto label48;

        $z10 = r1 instanceof java.lang.Long;

        if $z10 != 0 goto label45;

        if r1 != null goto label44;

        $r59 = r0.<javax.obex.HeaderSet: java.lang.Long[] mIntegerUserDefined>;

        $i22 = i0 - 240;

        $r59[$i22] = null;

        return;

     label44:
        $r53 = new java.lang.IllegalArgumentException;

        specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Integer User Defined must be a Long");

        throw $r53;

     label45:
        $r49 = (java.lang.Long) r1;

        l3 = virtualinvoke $r49.<java.lang.Long: long longValue()>();

        $b19 = l3 cmp 0L;

        if $b19 < 0 goto label46;

        $b20 = l3 cmp 4294967295L;

        if $b20 <= 0 goto label47;

     label46:
        $r55 = new java.lang.IllegalArgumentException;

        specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Integer User Defined must be between 0 and 0xFFFFFFFF");

        throw $r55;

     label47:
        $r54 = r0.<javax.obex.HeaderSet: java.lang.Long[] mIntegerUserDefined>;

        $i18 = i0 - 240;

        $r52 = (java.lang.Long) r1;

        $r54[$i18] = $r52;

        return;

     label48:
        $r47 = new java.lang.IllegalArgumentException;

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Header Identifier");

        throw $r47;
    }

    public static void <clinit>()
    {
        <javax.obex.HeaderSet: int WHO> = 74;

        <javax.obex.HeaderSet: int TYPE> = 66;

        <javax.obex.HeaderSet: int TIME_ISO_8601> = 68;

        <javax.obex.HeaderSet: int TIME_4_BYTE> = 196;

        <javax.obex.HeaderSet: int TARGET> = 70;

        <javax.obex.HeaderSet: int OBJECT_CLASS> = 79;

        <javax.obex.HeaderSet: int NAME> = 1;

        <javax.obex.HeaderSet: int LENGTH> = 195;

        <javax.obex.HeaderSet: int HTTP> = 71;

        <javax.obex.HeaderSet: int END_OF_BODY> = 73;

        <javax.obex.HeaderSet: int DESCRIPTION> = 5;

        <javax.obex.HeaderSet: int COUNT> = 192;

        <javax.obex.HeaderSet: int CONNECTION_ID> = 203;

        <javax.obex.HeaderSet: int BODY> = 72;

        <javax.obex.HeaderSet: int AUTH_RESPONSE> = 78;

        <javax.obex.HeaderSet: int AUTH_CHALLENGE> = 77;

        <javax.obex.HeaderSet: int APPLICATION_PARAMETER> = 76;

        return;
    }
}
