public class com.android.commands.monkey.MonkeySourceNetworkViews$GetAccessibilityIds extends java.lang.Object implements com.android.commands.monkey.MonkeySourceNetworkViews$ViewIntrospectionCommand
{

    public void <init>()
    {
        com.android.commands.monkey.MonkeySourceNetworkViews$GetAccessibilityIds r0;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetworkViews$GetAccessibilityIds;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn query(android.view.accessibility.AccessibilityNodeInfo, java.util.List)
    {
        com.android.commands.monkey.MonkeySourceNetworkViews$GetAccessibilityIds r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.util.List r2;
        java.lang.reflect.Field r5;
        int i0, $i1, $i2;
        com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn $r6, $r10, $r16, $r18;
        java.lang.Class $r7;
        java.lang.Object $r8;
        java.lang.Integer $r9;
        java.lang.StringBuilder $r11, $r12, $r13, $r15;
        java.lang.String $r14;
        java.lang.NoSuchFieldException $r17;
        java.lang.IllegalAccessException $r19;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetworkViews$GetAccessibilityIds;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: java.util.List;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 != 0 goto label5;

     label1:
        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r5 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mAccessibilityViewId");

        virtualinvoke r5.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r8 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        $r9 = (java.lang.Integer) $r8;

        i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

     label2:
        $r10 = new com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $i2 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: void <init>(boolean,java.lang.String)>(1, $r14);

        return $r10;

     label3:
        $r17 := @caughtexception;

        $r16 = new com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn;

        specialinvoke $r16.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: void <init>(boolean,java.lang.String)>(0, "Node with given ID does not exist");

        return $r16;

     label4:
        $r19 := @caughtexception;

        $r18 = new com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn;

        specialinvoke $r18.<com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn: void <init>(boolean,java.lang.String)>(0, "Access exception");

        return $r18;

     label5:
        $r6 = <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn EARG>;

        return $r6;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }
}
