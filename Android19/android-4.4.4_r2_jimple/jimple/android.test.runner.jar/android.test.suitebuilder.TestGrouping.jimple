public class android.test.suitebuilder.TestGrouping extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    public static final java.util.Comparator SORT_BY_FULLY_QUALIFIED_NAME;
    public static final java.util.Comparator SORT_BY_SIMPLE_NAME;
    private java.lang.ClassLoader classLoader;
    protected java.lang.String firstIncludedPackage;
    java.util.SortedSet testCaseClasses;

    static void <clinit>()
    {
        android.test.suitebuilder.TestGrouping$SortBySimpleName $r0;
        android.test.suitebuilder.TestGrouping$SortByFullyQualifiedName $r1;

        <android.test.suitebuilder.TestGrouping: java.lang.String LOG_TAG> = "TestGrouping";

        $r0 = new android.test.suitebuilder.TestGrouping$SortBySimpleName;

        specialinvoke $r0.<android.test.suitebuilder.TestGrouping$SortBySimpleName: void <init>(android.test.suitebuilder.TestGrouping$1)>(null);

        <android.test.suitebuilder.TestGrouping: java.util.Comparator SORT_BY_SIMPLE_NAME> = $r0;

        $r1 = new android.test.suitebuilder.TestGrouping$SortByFullyQualifiedName;

        specialinvoke $r1.<android.test.suitebuilder.TestGrouping$SortByFullyQualifiedName: void <init>(android.test.suitebuilder.TestGrouping$1)>(null);

        <android.test.suitebuilder.TestGrouping: java.util.Comparator SORT_BY_FULLY_QUALIFIED_NAME> = $r1;

        return;
    }

    public void <init>(java.util.Comparator)
    {
        android.test.suitebuilder.TestGrouping r0;
        java.util.Comparator r1;
        java.util.TreeSet $r2;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.test.suitebuilder.TestGrouping: java.lang.String firstIncludedPackage> = null;

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>(java.util.Comparator)>(r1);

        r0.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses> = $r2;

        return;
    }

    private java.util.List select(java.util.Collection, com.android.internal.util.Predicate)
    {
        android.test.suitebuilder.TestGrouping r0;
        java.util.Collection r1;
        com.android.internal.util.Predicate r2;
        java.util.ArrayList r3, $r6;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z0, $z1;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: com.android.internal.util.Predicate;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r2.<com.android.internal.util.Predicate: boolean apply(java.lang.Object)>(r5);

        if $z1 == 0 goto label1;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        return r3;
    }

    private java.util.List selectTestClasses(java.util.Set)
    {
        android.test.suitebuilder.TestGrouping r0;
        java.util.Set r1;
        java.util.ArrayList r2, r9;
        java.util.Iterator r3;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.Class $r8;
        android.test.suitebuilder.TestGrouping$TestCasePredicate r10;
        com.android.internal.util.Predicate r11;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.util.Set;

        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r2 = r9;

        r10 = new android.test.suitebuilder.TestGrouping$TestCasePredicate;

        specialinvoke r10.<android.test.suitebuilder.TestGrouping$TestCasePredicate: void <init>(android.test.suitebuilder.TestGrouping$1)>(null);

        r11 = (com.android.internal.util.Predicate) r10;

        $r6 = specialinvoke r0.<android.test.suitebuilder.TestGrouping: java.util.List select(java.util.Collection,com.android.internal.util.Predicate)>(r1, r11);

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Class) $r7;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return r2;
    }

    private java.util.List testCaseClassesInPackage(java.lang.String)
    {
        android.test.suitebuilder.TestGrouping r0;
        java.lang.String r1;
        java.lang.ClassLoader $r2;
        android.test.ClassPathPackageInfoSource $r3;
        android.test.ClassPathPackageInfo $r4;
        java.util.Set $r5;
        java.util.List $r6;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.test.suitebuilder.TestGrouping: java.lang.ClassLoader classLoader>;

        $r3 = staticinvoke <android.test.PackageInfoSources: android.test.ClassPathPackageInfoSource forClassPath(java.lang.ClassLoader)>($r2);

        $r4 = virtualinvoke $r3.<android.test.ClassPathPackageInfoSource: android.test.ClassPathPackageInfo getPackageInfo(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<android.test.ClassPathPackageInfo: java.util.Set getTopLevelClassesRecursive()>();

        $r6 = specialinvoke r0.<android.test.suitebuilder.TestGrouping: java.util.List selectTestClasses(java.util.Set)>($r5);

        return $r6;
    }

    public transient android.test.suitebuilder.TestGrouping addPackagesRecursive(java.lang.String[])
    {
        android.test.suitebuilder.TestGrouping r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String r2, $r5, $r10;
        java.util.List r3;
        boolean $z0;
        java.util.SortedSet $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.lang.String[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        r3 = specialinvoke r0.<android.test.suitebuilder.TestGrouping: java.util.List testCaseClassesInPackage(java.lang.String)>(r2);

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Package: \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' could not be found or has no tests");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TestGrouping", $r10);

     label2:
        $r4 = r0.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        interfaceinvoke $r4.<java.util.SortedSet: boolean addAll(java.util.Collection)>(r3);

        $r5 = r0.<android.test.suitebuilder.TestGrouping: java.lang.String firstIncludedPackage>;

        if $r5 != null goto label3;

        r0.<android.test.suitebuilder.TestGrouping: java.lang.String firstIncludedPackage> = r2;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r0;
    }

    public boolean equals(java.lang.Object)
    {
        android.test.suitebuilder.TestGrouping r0, r4;
        java.lang.Object r1;
        boolean z0, z1, $z2;
        java.lang.Class r2, r3;
        java.util.SortedSet $r5, $r6, $r7, $r9;
        java.util.Comparator $r8, $r10;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        if r1 == null goto label1;

        r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        z0 = 0;

        if r2 != r3 goto label1;

        r4 = (android.test.suitebuilder.TestGrouping) r1;

        $r6 = r0.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        $r5 = r4.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        z0 = 0;

        if z1 == 0 goto label1;

        $r7 = r0.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        $r8 = interfaceinvoke $r7.<java.util.SortedSet: java.util.Comparator comparator()>();

        $r9 = r4.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        $r10 = interfaceinvoke $r9.<java.util.SortedSet: java.util.Comparator comparator()>();

        $z2 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        return $z2;
    }

    public java.lang.String getFirstIncludedPackage()
    {
        android.test.suitebuilder.TestGrouping r0;
        java.lang.String $r1;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        $r1 = r0.<android.test.suitebuilder.TestGrouping: java.lang.String firstIncludedPackage>;

        return $r1;
    }

    java.util.SortedSet getTestCaseClasses()
    {
        android.test.suitebuilder.TestGrouping r0;
        java.util.SortedSet $r1;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        $r1 = r0.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        return $r1;
    }

    protected java.util.List getTestMethods(java.lang.Class)
    {
        android.test.suitebuilder.TestGrouping r0;
        java.lang.Class r1;
        java.lang.reflect.Method[] $r2;
        java.util.List $r3, $r5;
        android.test.suitebuilder.TestGrouping$TestMethodPredicate r6;
        com.android.internal.util.Predicate r7;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        r6 = new android.test.suitebuilder.TestGrouping$TestMethodPredicate;

        specialinvoke r6.<android.test.suitebuilder.TestGrouping$TestMethodPredicate: void <init>(android.test.suitebuilder.TestGrouping$1)>(null);

        r7 = (com.android.internal.util.Predicate) r6;

        $r5 = specialinvoke r0.<android.test.suitebuilder.TestGrouping: java.util.List select(java.util.Collection,com.android.internal.util.Predicate)>($r3, r7);

        return $r5;
    }

    public java.util.List getTests()
    {
        android.test.suitebuilder.TestGrouping r0;
        java.util.ArrayList r1, $r5;
        java.util.Iterator r2, r4;
        java.lang.Class r3;
        java.util.SortedSet $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r10;
        java.util.List $r8;
        android.test.suitebuilder.TestMethod $r9;
        java.lang.reflect.Method $r11;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        r2 = interfaceinvoke $r6.<java.util.SortedSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Class) $r7;

        $r8 = virtualinvoke r0.<android.test.suitebuilder.TestGrouping: java.util.List getTestMethods(java.lang.Class)>(r3);

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label1;

        $r9 = new android.test.suitebuilder.TestMethod;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.reflect.Method) $r10;

        specialinvoke $r9.<android.test.suitebuilder.TestMethod: void <init>(java.lang.reflect.Method,java.lang.Class)>($r11, r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        return r1;
    }

    public int hashCode()
    {
        android.test.suitebuilder.TestGrouping r0;
        java.util.SortedSet $r1;
        int $i0;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        $r1 = r0.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public transient android.test.suitebuilder.TestGrouping removePackagesRecursive(java.lang.String[])
    {
        android.test.suitebuilder.TestGrouping r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String r2;
        java.util.SortedSet $r3;
        java.util.List $r4;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.lang.String[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r3 = r0.<android.test.suitebuilder.TestGrouping: java.util.SortedSet testCaseClasses>;

        $r4 = specialinvoke r0.<android.test.suitebuilder.TestGrouping: java.util.List testCaseClassesInPackage(java.lang.String)>(r2);

        interfaceinvoke $r3.<java.util.SortedSet: boolean removeAll(java.util.Collection)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public void setClassLoader(java.lang.ClassLoader)
    {
        android.test.suitebuilder.TestGrouping r0;
        java.lang.ClassLoader r1;

        r0 := @this: android.test.suitebuilder.TestGrouping;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<android.test.suitebuilder.TestGrouping: java.lang.ClassLoader classLoader> = r1;

        return;
    }
}
