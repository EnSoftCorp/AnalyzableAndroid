public class android.test.mock.MockIContentProvider extends java.lang.Object implements android.content.IContentProvider
{

    public void <init>()
    {
        android.test.mock.MockIContentProvider r0;

        r0 := @this: android.test.mock.MockIContentProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.content.ContentProviderResult[] applyBatch(java.lang.String, java.util.ArrayList)
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r3;
    }

    public android.os.IBinder asBinder()
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.test.mock.MockIContentProvider;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r1;
    }

    public int bulkInsert(java.lang.String, android.net.Uri, android.content.ContentValues[])
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.content.ContentValues[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues[];

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r4;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1, r2, r3;
        android.os.Bundle r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r5;
    }

    public android.net.Uri canonicalize(java.lang.String, android.net.Uri) throws android.os.RemoteException
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1;
        android.net.Uri r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r3;
    }

    public android.os.ICancellationSignal createCancellationSignal() throws android.os.RemoteException
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.test.mock.MockIContentProvider;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r1;
    }

    public int delete(java.lang.String, android.net.Uri, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        java.lang.String[] r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r5;
    }

    public java.lang.String[] getStreamTypes(android.net.Uri, java.lang.String) throws android.os.RemoteException
    {
        android.test.mock.MockIContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r3;
    }

    public java.lang.String getType(android.net.Uri)
    {
        android.test.mock.MockIContentProvider r0;
        android.net.Uri r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r2;
    }

    public android.net.Uri insert(java.lang.String, android.net.Uri, android.content.ContentValues) throws android.os.RemoteException
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.content.ContentValues r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r4;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(java.lang.String, android.net.Uri, java.lang.String, android.os.ICancellationSignal)
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        android.os.ICancellationSignal r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.ICancellationSignal;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r5;
    }

    public android.os.ParcelFileDescriptor openFile(java.lang.String, android.net.Uri, java.lang.String, android.os.ICancellationSignal)
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        android.os.ICancellationSignal r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.ICancellationSignal;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r5;
    }

    public android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String, android.net.Uri, java.lang.String, android.os.Bundle, android.os.ICancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        android.os.Bundle r4;
        android.os.ICancellationSignal r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.os.ICancellationSignal;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r6;
    }

    public android.database.Cursor query(java.lang.String, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.ICancellationSignal)
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1, r4, r6;
        android.net.Uri r2;
        java.lang.String[] r3, r5;
        android.os.ICancellationSignal r7;
        java.lang.UnsupportedOperationException $r8;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: android.os.ICancellationSignal;

        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r8;
    }

    public android.content.EntityIterator queryEntities(android.net.Uri, java.lang.String, java.lang.String[], java.lang.String)
    {
        android.test.mock.MockIContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2, r4;
        java.lang.String[] r3;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r5;
    }

    public android.net.Uri uncanonicalize(java.lang.String, android.net.Uri) throws android.os.RemoteException
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1;
        android.net.Uri r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r3;
    }

    public int update(java.lang.String, android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.test.mock.MockIContentProvider r0;
        java.lang.String r1, r4;
        android.net.Uri r2;
        android.content.ContentValues r3;
        java.lang.String[] r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: android.test.mock.MockIContentProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unimplemented mock method");

        throw $r6;
    }
}
