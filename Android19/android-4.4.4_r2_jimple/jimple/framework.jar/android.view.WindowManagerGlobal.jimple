public final class android.view.WindowManagerGlobal extends java.lang.Object
{
    public static final int ADD_APP_EXITING;
    public static final int ADD_BAD_APP_TOKEN;
    public static final int ADD_BAD_SUBWINDOW_TOKEN;
    public static final int ADD_DUPLICATE_ADD;
    public static final int ADD_FLAG_APP_VISIBLE;
    public static final int ADD_FLAG_IN_TOUCH_MODE;
    public static final int ADD_INVALID_DISPLAY;
    public static final int ADD_MULTIPLE_SINGLETON;
    public static final int ADD_NOT_APP_TOKEN;
    public static final int ADD_OKAY;
    public static final int ADD_PERMISSION_DENIED;
    public static final int ADD_STARTING_NOT_NEEDED;
    public static final int RELAYOUT_DEFER_SURFACE_DESTROY;
    public static final int RELAYOUT_INSETS_PENDING;
    public static final int RELAYOUT_RES_ANIMATING;
    public static final int RELAYOUT_RES_FIRST_TIME;
    public static final int RELAYOUT_RES_IN_TOUCH_MODE;
    public static final int RELAYOUT_RES_SURFACE_CHANGED;
    private static final java.lang.String TAG;
    private static android.view.WindowManagerGlobal sDefaultWindowManager;
    private static android.view.IWindowManager sWindowManagerService;
    private static android.view.IWindowSession sWindowSession;
    private final android.util.ArraySet mDyingViews;
    private final java.lang.Object mLock;
    private boolean mNeedsEglTerminate;
    private final java.util.ArrayList mParams;
    private final java.util.ArrayList mRoots;
    private java.lang.Runnable mSystemPropertyUpdater;
    private final java.util.ArrayList mViews;

    private void <init>()
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2, $r3, $r4;
        android.util.ArraySet $r5;

        r0 := @this: android.view.WindowManagerGlobal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.view.WindowManagerGlobal: java.lang.Object mLock> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams> = $r4;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        r0.<android.view.WindowManagerGlobal: android.util.ArraySet mDyingViews> = $r5;

        return;
    }

    static java.lang.Object access$000(android.view.WindowManagerGlobal)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.view.WindowManagerGlobal;

        $r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        return $r1;
    }

    static java.util.ArrayList access$100(android.view.WindowManagerGlobal)
    {
        android.view.WindowManagerGlobal r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.view.WindowManagerGlobal;

        $r1 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        return $r1;
    }

    private int findViewLocked(android.view.View, boolean)
    {
        android.view.WindowManagerGlobal r0;
        android.view.View r1;
        boolean z0;
        int i0;
        java.util.ArrayList $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        if i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not attached to window manager");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        return i0;
    }

    public static android.view.WindowManagerGlobal getInstance()
    {
        java.lang.Throwable r0, $r4;
        android.view.WindowManagerGlobal r1, $r2, $r3;

        entermonitor class "android/view/WindowManagerGlobal";

     label1:
        $r2 = <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal sDefaultWindowManager>;

        if $r2 != null goto label2;

        $r3 = new android.view.WindowManagerGlobal;

        specialinvoke $r3.<android.view.WindowManagerGlobal: void <init>()>();

        <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal sDefaultWindowManager> = $r3;

     label2:
        r1 = <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal sDefaultWindowManager>;

        exitmonitor class "android/view/WindowManagerGlobal";

     label3:
        return r1;

     label4:
        $r4 := @caughtexception;

        r0 = $r4;

     label5:
        exitmonitor class "android/view/WindowManagerGlobal";

     label6:
        throw r0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static android.view.IWindowManager getWindowManagerService()
    {
        java.lang.Throwable r0, $r5;
        android.view.IWindowManager r1, $r2, $r4;
        android.os.IBinder $r3;

        entermonitor class "android/view/WindowManagerGlobal";

     label1:
        $r2 = <android.view.WindowManagerGlobal: android.view.IWindowManager sWindowManagerService>;

        if $r2 != null goto label2;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r4 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r3);

        <android.view.WindowManagerGlobal: android.view.IWindowManager sWindowManagerService> = $r4;

     label2:
        r1 = <android.view.WindowManagerGlobal: android.view.IWindowManager sWindowManagerService>;

        exitmonitor class "android/view/WindowManagerGlobal";

     label3:
        return r1;

     label4:
        $r5 := @caughtexception;

        r0 = $r5;

     label5:
        exitmonitor class "android/view/WindowManagerGlobal";

     label6:
        throw r0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private static java.lang.String getWindowName(android.view.ViewRootImpl)
    {
        android.view.ViewRootImpl r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8, $r9, $r11;
        android.view.WindowManager$LayoutParams $r2;
        java.lang.CharSequence $r3;
        java.lang.Class $r6;
        java.lang.String $r7, $r10, $r12;
        int $i0;

        r0 := @parameter0: android.view.ViewRootImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<android.view.ViewRootImpl: android.view.WindowManager$LayoutParams mWindowAttributes>;

        $r3 = virtualinvoke $r2.<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static android.view.IWindowSession getWindowSession()
    {
        java.lang.Throwable r0, $r9;
        android.view.IWindowSession r1, r2, $r8;
        android.os.RemoteException r3, $r10;
        android.view.inputmethod.InputMethodManager r4;
        android.view.IWindowManager r5;
        com.android.internal.view.IInputMethodClient $r6;
        com.android.internal.view.IInputContext $r7;
        float $f0;

        entermonitor class "android/view/WindowManagerGlobal";

     label01:
        r1 = <android.view.WindowManagerGlobal: android.view.IWindowSession sWindowSession>;

     label02:
        if r1 != null goto label04;

     label03:
        r4 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance()>();

        r5 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        $r6 = virtualinvoke r4.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()>();

        $r7 = virtualinvoke r4.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()>();

        $r8 = interfaceinvoke r5.<android.view.IWindowManager: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>($r6, $r7);

        <android.view.WindowManagerGlobal: android.view.IWindowSession sWindowSession> = $r8;

        $f0 = interfaceinvoke r5.<android.view.IWindowManager: float getAnimationScale(int)>(2);

        staticinvoke <android.animation.ValueAnimator: void setDurationScale(float)>($f0);

     label04:
        r2 = <android.view.WindowManagerGlobal: android.view.IWindowSession sWindowSession>;

        exitmonitor class "android/view/WindowManagerGlobal";

     label05:
        return r2;

     label06:
        $r10 := @caughtexception;

        r3 = $r10;

     label07:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Failed to open window session", r3);

     label08:
        goto label04;

     label09:
        $r9 := @caughtexception;

        r0 = $r9;

     label10:
        exitmonitor class "android/view/WindowManagerGlobal";

     label11:
        throw r0;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public static android.view.IWindowSession peekWindowSession()
    {
        java.lang.Throwable r0, $r2;
        android.view.IWindowSession r1;

        entermonitor class "android/view/WindowManagerGlobal";

     label1:
        r1 = <android.view.WindowManagerGlobal: android.view.IWindowSession sWindowSession>;

        exitmonitor class "android/view/WindowManagerGlobal";

     label2:
        return r1;

     label3:
        $r2 := @caughtexception;

        r0 = $r2;

     label4:
        exitmonitor class "android/view/WindowManagerGlobal";

     label5:
        throw r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void removeViewLocked(int, boolean)
    {
        android.view.WindowManagerGlobal r0;
        int i0;
        boolean z0, z1;
        android.view.ViewRootImpl r1;
        android.view.View r2, $r8;
        android.view.inputmethod.InputMethodManager r3;
        java.util.ArrayList $r4, $r7;
        java.lang.Object $r5, $r9;
        android.util.ArraySet $r6;
        android.os.IBinder $r10;

        r0 := @this: android.view.WindowManagerGlobal;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (android.view.ViewRootImpl) $r5;

        r2 = virtualinvoke r1.<android.view.ViewRootImpl: android.view.View getView()>();

        if r2 == null goto label1;

        r3 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance()>();

        if r3 == null goto label1;

        $r7 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (android.view.View) $r9;

        $r10 = virtualinvoke $r8.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: void windowDismissed(android.os.IBinder)>($r10);

     label1:
        z1 = virtualinvoke r1.<android.view.ViewRootImpl: boolean die(boolean)>(z0);

        if r2 == null goto label2;

        virtualinvoke r2.<android.view.View: void assignParent(android.view.ViewParent)>(null);

        if z1 == 0 goto label2;

        $r6 = r0.<android.view.WindowManagerGlobal: android.util.ArraySet mDyingViews>;

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>(r2);

     label2:
        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams, android.view.Display, android.view.Window)
    {
        android.view.WindowManagerGlobal r0;
        android.view.View r1, r8;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Display r3;
        android.view.Window r4;
        android.view.WindowManager$LayoutParams r5;
        java.lang.Object r6, r10, $r20, $r28, $r35;
        java.lang.Throwable r7, r12, $r42, $r43;
        int i0, i1, i2, i3, i4, i5;
        android.view.ViewRootImpl r9, $r15, $r21, $r34;
        java.lang.RuntimeException r11, $r45;
        boolean $z0, $z4;
        java.lang.Runnable $r13, $r40;
        android.content.Context $r14;
        java.util.ArrayList $r16, $r17, $r18, $r19, $r22, $r24, $r36;
        android.os.IBinder $r23, $r26;
        android.view.ViewRootImpl$W $r25;
        java.lang.IllegalStateException $r27;
        android.util.ArraySet $r29;
        java.lang.StringBuilder $r30, $r31, $r32, $r33;
        java.lang.String $r37;
        java.lang.IllegalArgumentException $r38, $r39, $r44;
        android.view.WindowManagerGlobal$1 $r41;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        r3 := @parameter2: android.view.Display;

        r4 := @parameter3: android.view.Window;

        if r1 != null goto label01;

        $r44 = new java.lang.IllegalArgumentException;

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("view must not be null");

        throw $r44;

     label01:
        if r3 != null goto label02;

        $r38 = new java.lang.IllegalArgumentException;

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("display must not be null");

        throw $r38;

     label02:
        $z0 = r2 instanceof android.view.WindowManager$LayoutParams;

        if $z0 != 0 goto label03;

        $r39 = new java.lang.IllegalArgumentException;

        specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Params must be WindowManager.LayoutParams");

        throw $r39;

     label03:
        r5 = (android.view.WindowManager$LayoutParams) r2;

        if r4 == null goto label04;

        virtualinvoke r4.<android.view.Window: void adjustLayoutParamsForSubWindow(android.view.WindowManager$LayoutParams)>(r5);

     label04:
        r6 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r6;

     label05:
        $r13 = r0.<android.view.WindowManagerGlobal: java.lang.Runnable mSystemPropertyUpdater>;

        if $r13 != null goto label06;

        $r41 = new android.view.WindowManagerGlobal$1;

        specialinvoke $r41.<android.view.WindowManagerGlobal$1: void <init>(android.view.WindowManagerGlobal)>(r0);

        r0.<android.view.WindowManagerGlobal: java.lang.Runnable mSystemPropertyUpdater> = $r41;

        $r40 = r0.<android.view.WindowManagerGlobal: java.lang.Runnable mSystemPropertyUpdater>;

        staticinvoke <android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>($r40);

     label06:
        i0 = specialinvoke r0.<android.view.WindowManagerGlobal: int findViewLocked(android.view.View,boolean)>(r1, 0);

     label07:
        if i0 < 0 goto label09;

     label08:
        $r29 = r0.<android.view.WindowManagerGlobal: android.util.ArraySet mDyingViews>;

        $z4 = virtualinvoke $r29.<android.util.ArraySet: boolean contains(java.lang.Object)>(r1);

        if $z4 == 0 goto label18;

        $r36 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r35 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r34 = (android.view.ViewRootImpl) $r35;

        virtualinvoke $r34.<android.view.ViewRootImpl: void doDie()>();

     label09:
        i1 = r5.<android.view.WindowManager$LayoutParams: int type>;

     label10:
        r8 = null;

        if i1 < 1000 goto label22;

     label11:
        i2 = r5.<android.view.WindowManager$LayoutParams: int type>;

     label12:
        r8 = null;

        if i2 > 1999 goto label22;

     label13:
        $r18 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i3 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

     label14:
        i4 = 0;

     label15:
        if i4 >= i3 goto label22;

     label16:
        $r22 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r20 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r21 = (android.view.ViewRootImpl) $r20;

        $r25 = $r21.<android.view.ViewRootImpl: android.view.ViewRootImpl$W mWindow>;

        $r26 = virtualinvoke $r25.<android.view.ViewRootImpl$W: android.os.IBinder asBinder()>();

        $r23 = r5.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r26 != $r23 goto label34;

        $r24 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $r28 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r8 = (android.view.View) $r28;

     label17:
        goto label34;

     label18:
        $r27 = new java.lang.IllegalStateException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has already been added to the window manager.");

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r37);

        throw $r27;

     label19:
        $r43 := @caughtexception;

        r7 = $r43;

     label20:
        exitmonitor r6;

     label21:
        throw r7;

     label22:
        $r15 = new android.view.ViewRootImpl;

        $r14 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        specialinvoke $r15.<android.view.ViewRootImpl: void <init>(android.content.Context,android.view.Display)>($r14, r3);

        r9 = $r15;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        $r16 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r17 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        $r19 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        exitmonitor r6;

     label23:
        virtualinvoke r9.<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View)>(r1, r5, r8);

     label24:
        return;

     label25:
        $r45 := @caughtexception;

        r11 = $r45;

        r10 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r10;

     label26:
        i5 = specialinvoke r0.<android.view.WindowManagerGlobal: int findViewLocked(android.view.View,boolean)>(r1, 0);

     label27:
        if i5 < 0 goto label29;

     label28:
        specialinvoke r0.<android.view.WindowManagerGlobal: void removeViewLocked(int,boolean)>(i5, 1);

     label29:
        exitmonitor r10;

     label30:
        throw r11;

     label31:
        $r42 := @caughtexception;

        r12 = $r42;

     label32:
        exitmonitor r10;

     label33:
        throw r12;

     label34:
        i4 = i4 + 1;

        goto label15;

        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label22 to label23 with label19;
        catch java.lang.RuntimeException from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label28 to label29 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public void changeCanvasOpacity(android.os.IBinder, boolean)
    {
        android.view.WindowManagerGlobal r0;
        android.os.IBinder r1, $r8;
        boolean z0;
        java.lang.Object r2, $r6, $r11;
        java.lang.Throwable r3, $r12;
        int i0, $i1;
        java.util.ArrayList $r4, $r5, $r9;
        android.view.WindowManager$LayoutParams $r7;
        android.view.ViewRootImpl $r10;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        if r1 != null goto label01;

        return;

     label01:
        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label03:
        if i0 < 0 goto label10;

     label04:
        $r5 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (android.view.WindowManager$LayoutParams) $r6;

        $r8 = $r7.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r8 != r1 goto label09;

        $r9 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (android.view.ViewRootImpl) $r11;

        virtualinvoke $r10.<android.view.ViewRootImpl: void changeCanvasOpacity(boolean)>(z0);

        exitmonitor r2;

     label05:
        return;

     label06:
        $r12 := @caughtexception;

        r3 = $r12;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        i0 = i0 + -1;

        goto label03;

     label10:
        exitmonitor r2;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
    }

    public void closeAll(android.os.IBinder, java.lang.String, java.lang.String)
    {
        android.view.WindowManagerGlobal r0;
        android.os.IBinder r1, $r26;
        java.lang.String r2, r3, $r19;
        java.lang.Object r4, $r10, $r25;
        java.lang.Throwable r5, $r27;
        int i0, i1;
        android.view.ViewRootImpl r6;
        android.view.WindowLeaked r7, $r12, $r22;
        java.util.ArrayList $r8, $r9, $r23;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r17, $r20;
        android.view.View $r18;
        java.lang.StackTraceElement[] $r21;
        android.view.WindowManager$LayoutParams $r24;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r4;

     label01:
        $r8 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label10;

        if r1 == null goto label05;

     label04:
        $r23 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $r25 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r24 = (android.view.WindowManager$LayoutParams) $r25;

        $r26 = $r24.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r26 != r1 goto label15;

     label05:
        $r9 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (android.view.ViewRootImpl) $r10;

     label06:
        if r2 == null goto label08;

     label07:
        $r12 = new android.view.WindowLeaked;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has leaked window ");

        $r18 = virtualinvoke r6.<android.view.ViewRootImpl: android.view.View getView()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that was originally added here");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<android.view.WindowLeaked: void <init>(java.lang.String)>($r19);

        r7 = $r12;

        $r22 = virtualinvoke r6.<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()>();

        $r21 = virtualinvoke $r22.<android.view.WindowLeaked: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r7.<android.view.WindowLeaked: void setStackTrace(java.lang.StackTraceElement[])>($r21);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "", r7);

     label08:
        specialinvoke r0.<android.view.WindowManagerGlobal: void removeViewLocked(int,boolean)>(i1, 0);

     label09:
        goto label15;

     label10:
        exitmonitor r4;

     label11:
        return;

     label12:
        $r27 := @caughtexception;

        r5 = $r27;

     label13:
        exitmonitor r4;

     label14:
        throw r5;

     label15:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void doRemoveView(android.view.ViewRootImpl)
    {
        android.view.WindowManagerGlobal r0;
        android.view.ViewRootImpl r1;
        java.lang.Object r2, $r10;
        java.lang.Throwable r3, $r13;
        int i0;
        android.view.View r4;
        java.util.ArrayList $r5, $r6, $r8, $r11;
        android.util.ArraySet $r12;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.view.ViewRootImpl;

        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r5 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

     label2:
        if i0 < 0 goto label4;

     label3:
        $r6 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r8 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r11 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        r4 = (android.view.View) $r10;

        $r12 = r0.<android.view.WindowManagerGlobal: android.util.ArraySet mDyingViews>;

        virtualinvoke $r12.<android.util.ArraySet: boolean remove(java.lang.Object)>(r4);

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r13 := @caughtexception;

        r3 = $r13;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void dumpGfxInfo(java.io.FileDescriptor)
    {
        android.view.WindowManagerGlobal r0;
        java.io.FileDescriptor r1;
        com.android.internal.util.FastPrintWriter r2, r47;
        java.lang.Throwable r3, r5, $r40, $r41;
        java.lang.Object r4, $r26, $r35;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        android.view.ViewRootImpl r6, r9;
        android.view.HardwareRenderer r7, r12;
        int[] r8;
        java.lang.Object[] r10, r13, r14, r15, r16, $r30, $r36;
        java.lang.String r11, $r42;
        java.util.ArrayList $r19, $r27, $r39;
        java.lang.Integer $r20, $r23, $r28;
        float $f0, $f1, $f2, $f3;
        java.lang.Float $r24, $r29;
        android.view.View$AttachInfo $r31, $r45;
        android.view.View $r32, $r44;
        long $l9;
        java.lang.Long $r37;
        java.io.FileOutputStream r46;
        java.io.PrintWriter r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: java.io.FileDescriptor;

        r47 = new com.android.internal.util.FastPrintWriter;

        r46 = new java.io.FileOutputStream;

        specialinvoke r46.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        specialinvoke r47.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>(r46);

        r2 = r47;

     label01:
        r4 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r4;

     label02:
        $r19 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        r48 = (java.io.PrintWriter) r2;

        virtualinvoke r48.<java.io.PrintWriter: void println(java.lang.String)>("Profile data in ms:");

     label03:
        i1 = 0;

     label04:
        if i1 >= i0 goto label09;

     label05:
        $r39 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r35 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (android.view.ViewRootImpl) $r35;

        $r36 = newarray (java.lang.Object)[1];

        $r42 = staticinvoke <android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>(r6);

        $r36[0] = $r42;

        r49 = (java.io.PrintWriter) r2;

        virtualinvoke r49.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("\n\t%s", $r36);

        $r44 = virtualinvoke r6.<android.view.ViewRootImpl: android.view.View getView()>();

        $r45 = $r44.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r7 = $r45.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

     label06:
        if r7 == null goto label25;

     label07:
        r50 = (java.io.PrintWriter) r2;

        virtualinvoke r7.<android.view.HardwareRenderer: void dumpGfxInfo(java.io.PrintWriter)>(r50);

     label08:
        goto label25;

     label09:
        r51 = (java.io.PrintWriter) r2;

        virtualinvoke r51.<java.io.PrintWriter: void println(java.lang.String)>("\nView hierarchy:\n");

     label10:
        i2 = 0;

        i3 = 0;

     label11:
        r8 = newarray (int)[2];

     label12:
        i4 = 0;

     label13:
        if i4 >= i0 goto label19;

     label14:
        $r27 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r26 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r9 = (android.view.ViewRootImpl) $r26;

        virtualinvoke r9.<android.view.ViewRootImpl: void dumpGfxInfo(int[])>(r8);

        r11 = staticinvoke <android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>(r9);

        r10 = newarray (java.lang.Object)[3];

        r10[0] = r11;

        $i6 = r8[0];

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        r10[1] = $r28;

        $i5 = r8[1];

        $f3 = (float) $i5;

        $f2 = $f3 / 1024.0F;

        $r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        r10[2] = $r29;

        r52 = (java.io.PrintWriter) r2;

        virtualinvoke r52.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("  %s\n  %d views, %.2f kB of display lists", r10);

        $r32 = virtualinvoke r9.<android.view.ViewRootImpl: android.view.View getView()>();

        $r31 = $r32.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        r12 = $r31.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

     label15:
        if r12 == null goto label17;

     label16:
        r13 = newarray (java.lang.Object)[1];

        $l9 = virtualinvoke r12.<android.view.HardwareRenderer: long getFrameCount()>();

        $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);

        r13[0] = $r37;

        r53 = (java.io.PrintWriter) r2;

        virtualinvoke r53.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(", %d frames rendered", r13);

     label17:
        $r30 = newarray (java.lang.Object)[0];

        r54 = (java.io.PrintWriter) r2;

        virtualinvoke r54.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("\n\n", $r30);

        $i8 = r8[0];

        i2 = i2 + $i8;

        $i7 = r8[1];

        i3 = i3 + $i7;

     label18:
        i4 = i4 + 1;

        goto label13;

     label19:
        r14 = newarray (java.lang.Object)[1];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r14[0] = $r20;

        r55 = (java.io.PrintWriter) r2;

        virtualinvoke r55.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("\nTotal ViewRootImpl: %d\n", r14);

        r15 = newarray (java.lang.Object)[1];

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r15[0] = $r23;

        r56 = (java.io.PrintWriter) r2;

        virtualinvoke r56.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Total Views:        %d\n", r15);

        r16 = newarray (java.lang.Object)[1];

        $f0 = (float) i3;

        $f1 = $f0 / 1024.0F;

        $r24 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        r16[0] = $r24;

        r57 = (java.io.PrintWriter) r2;

        virtualinvoke r57.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Total DisplayList:  %.2f kB\n\n", r16);

        exitmonitor r4;

     label20:
        r58 = (java.io.PrintWriter) r2;

        virtualinvoke r58.<java.io.PrintWriter: void flush()>();

        return;

     label21:
        $r41 := @caughtexception;

        r5 = $r41;

     label22:
        exitmonitor r4;

     label23:
        throw r5;

     label24:
        $r40 := @caughtexception;

        r3 = $r40;

        r59 = (java.io.PrintWriter) r2;

        virtualinvoke r59.<java.io.PrintWriter: void flush()>();

        throw r3;

     label25:
        i1 = i1 + 1;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label21;
        catch java.lang.Throwable from label23 to label24 with label24;
    }

    public void endTrimMemory()
    {
        android.view.WindowManagerGlobal r0;
        boolean $z0;

        r0 := @this: android.view.WindowManagerGlobal;

        staticinvoke <android.view.HardwareRenderer: void endTrimMemory()>();

        $z0 = r0.<android.view.WindowManagerGlobal: boolean mNeedsEglTerminate>;

        if $z0 == 0 goto label1;

        staticinvoke <android.opengl.ManagedEGLContext: boolean doTerminate()>();

        r0.<android.view.WindowManagerGlobal: boolean mNeedsEglTerminate> = 0;

     label1:
        return;
    }

    public android.view.View getRootView(java.lang.String)
    {
        android.view.WindowManagerGlobal r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, $r8;
        java.lang.Throwable r3, $r10;
        int i0, $i1;
        android.view.ViewRootImpl r4;
        android.view.View r5;
        java.util.ArrayList $r6, $r7;
        boolean $z0;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r6 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label02:
        if i0 < 0 goto label05;

     label03:
        $r7 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (android.view.ViewRootImpl) $r8;

        $r9 = staticinvoke <android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>(r4);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label10;

        r5 = virtualinvoke r4.<android.view.ViewRootImpl: android.view.View getView()>();

        exitmonitor r2;

     label04:
        return r5;

     label05:
        exitmonitor r2;

     label06:
        return null;

     label07:
        $r10 := @caughtexception;

        r3 = $r10;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        i0 = i0 + -1;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public java.lang.String[] getViewRootNames()
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r6;
        java.lang.Throwable r2, $r9;
        int i0, i1;
        java.lang.String[] r3;
        java.util.ArrayList $r4, $r5;
        android.view.ViewRootImpl $r7;
        java.lang.String $r8;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r3 = newarray (java.lang.String)[i0];

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r5 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.view.ViewRootImpl) $r6;

        $r8 = staticinvoke <android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)>($r7);

        r3[i1] = $r8;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        return r3;

     label08:
        $r9 := @caughtexception;

        r2 = $r9;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void removeView(android.view.View, boolean)
    {
        android.view.WindowManagerGlobal r0;
        android.view.View r1, r4;
        boolean z0;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r16;
        int i0;
        java.util.ArrayList $r5;
        android.view.ViewRootImpl $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;
        java.lang.String $r13;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("view must not be null");

        throw $r15;

     label1:
        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        i0 = specialinvoke r0.<android.view.WindowManagerGlobal: int findViewLocked(android.view.View,boolean)>(r1, 1);

        $r5 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (android.view.ViewRootImpl) $r6;

        r4 = virtualinvoke $r7.<android.view.ViewRootImpl: android.view.View getView()>();

        specialinvoke r0.<android.view.WindowManagerGlobal: void removeViewLocked(int,boolean)>(i0, z0);

     label3:
        if r4 != r1 goto label6;

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling with view ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the ViewAncestor is attached to ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label7:
        $r16 := @caughtexception;

        r3 = $r16;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void reportNewConfiguration(android.content.res.Configuration)
    {
        android.view.WindowManagerGlobal r0;
        android.content.res.Configuration r1, r4, $r6;
        java.lang.Object r2, $r8;
        java.lang.Throwable r3, $r10, $r11;
        int i0, i1;
        java.util.ArrayList $r5, $r7;
        android.view.ViewRootImpl $r9;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.content.res.Configuration;

        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r6 = new android.content.res.Configuration;

        specialinvoke $r6.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r1);

        r4 = $r6;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r7 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (android.view.ViewRootImpl) $r8;

        virtualinvoke $r9.<android.view.ViewRootImpl: void requestUpdateConfiguration(android.content.res.Configuration)>(r4);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r11 := @caughtexception;

        r3 = $r11;

        goto label09;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void setStoppedState(android.os.IBinder, boolean)
    {
        android.view.WindowManagerGlobal r0;
        android.os.IBinder r1, $r10;
        boolean z0;
        java.lang.Object r2, $r6, $r9;
        java.lang.Throwable r3, $r12;
        int i0, i1;
        java.util.ArrayList $r4, $r5, $r8;
        android.view.ViewRootImpl $r7;
        android.view.WindowManager$LayoutParams $r11;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mViews>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label07;

        if r1 == null goto label05;

     label04:
        $r8 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r11 = (android.view.WindowManager$LayoutParams) $r9;

        $r10 = $r11.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if $r10 != r1 goto label12;

     label05:
        $r5 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (android.view.ViewRootImpl) $r6;

        virtualinvoke $r7.<android.view.ViewRootImpl: void setStopped(boolean)>(z0);

     label06:
        goto label12;

     label07:
        exitmonitor r2;

     label08:
        return;

     label09:
        $r12 := @caughtexception;

        r3 = $r12;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void startTrimMemory(int)
    {
        android.view.WindowManagerGlobal r0;
        int i0, i1, $i2;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, $r7;
        boolean $z0, $z1;
        java.util.ArrayList $r3, $r4;
        android.view.ViewRootImpl $r6;

        r0 := @this: android.view.WindowManagerGlobal;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.view.HardwareRenderer: boolean isAvailable()>();

        if $z0 == 0 goto label08;

        if i0 >= 80 goto label01;

        if i0 < 60 goto label12;

        $z1 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z1 != 0 goto label12;

     label01:
        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label02:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label03:
        if i1 < 0 goto label06;

     label04:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (android.view.ViewRootImpl) $r5;

        virtualinvoke $r6.<android.view.ViewRootImpl: void destroyHardwareResources()>();

     label05:
        i1 = i1 + -1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        r0.<android.view.WindowManagerGlobal: boolean mNeedsEglTerminate> = 1;

        staticinvoke <android.view.HardwareRenderer: void startTrimMemory(int)>(80);

     label08:
        return;

     label09:
        $r7 := @caughtexception;

        r2 = $r7;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

     label12:
        staticinvoke <android.view.HardwareRenderer: void startTrimMemory(int)>(i0);

        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void trimLocalMemory()
    {
        android.view.WindowManagerGlobal r0;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, $r7;
        int i0, $i1;
        java.util.ArrayList $r3, $r4;
        android.view.ViewRootImpl $r6;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label2:
        if i0 < 0 goto label5;

     label3:
        $r4 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (android.view.ViewRootImpl) $r5;

        virtualinvoke $r6.<android.view.ViewRootImpl: void destroyHardwareLayers()>();

     label4:
        i0 = i0 + -1;

        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r7 := @caughtexception;

        r2 = $r7;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void updateViewLayout(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.WindowManagerGlobal r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.WindowManager$LayoutParams r3;
        java.lang.Object r4, $r8;
        java.lang.Throwable r5, $r13;
        int i0;
        android.view.ViewRootImpl r6;
        boolean $z0;
        java.util.ArrayList $r7, $r9, $r11;
        java.lang.IllegalArgumentException $r12, $r14;

        r0 := @this: android.view.WindowManagerGlobal;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        if r1 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("view must not be null");

        throw $r14;

     label1:
        $z0 = r2 instanceof android.view.WindowManager$LayoutParams;

        if $z0 != 0 goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Params must be WindowManager.LayoutParams");

        throw $r12;

     label2:
        r3 = (android.view.WindowManager$LayoutParams) r2;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        r4 = r0.<android.view.WindowManagerGlobal: java.lang.Object mLock>;

        entermonitor r4;

     label3:
        i0 = specialinvoke r0.<android.view.WindowManagerGlobal: int findViewLocked(android.view.View,boolean)>(r1, 1);

        $r7 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mRoots>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r6 = (android.view.ViewRootImpl) $r8;

        $r9 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r11 = r0.<android.view.WindowManagerGlobal: java.util.ArrayList mParams>;

        virtualinvoke $r11.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r3);

        virtualinvoke r6.<android.view.ViewRootImpl: void setLayoutParams(android.view.WindowManager$LayoutParams,boolean)>(r3, 0);

        exitmonitor r4;

     label4:
        return;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

     label6:
        exitmonitor r4;

     label7:
        throw r5;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static void <clinit>()
    {
        <android.view.WindowManagerGlobal: java.lang.String TAG> = "WindowManager";

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_SURFACE_CHANGED> = 4;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_IN_TOUCH_MODE> = 1;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_FIRST_TIME> = 2;

        <android.view.WindowManagerGlobal: int RELAYOUT_RES_ANIMATING> = 8;

        <android.view.WindowManagerGlobal: int RELAYOUT_INSETS_PENDING> = 1;

        <android.view.WindowManagerGlobal: int RELAYOUT_DEFER_SURFACE_DESTROY> = 2;

        <android.view.WindowManagerGlobal: int ADD_STARTING_NOT_NEEDED> = -6;

        <android.view.WindowManagerGlobal: int ADD_PERMISSION_DENIED> = -8;

        <android.view.WindowManagerGlobal: int ADD_OKAY> = 0;

        <android.view.WindowManagerGlobal: int ADD_NOT_APP_TOKEN> = -3;

        <android.view.WindowManagerGlobal: int ADD_MULTIPLE_SINGLETON> = -7;

        <android.view.WindowManagerGlobal: int ADD_INVALID_DISPLAY> = -9;

        <android.view.WindowManagerGlobal: int ADD_FLAG_IN_TOUCH_MODE> = 1;

        <android.view.WindowManagerGlobal: int ADD_FLAG_APP_VISIBLE> = 2;

        <android.view.WindowManagerGlobal: int ADD_DUPLICATE_ADD> = -5;

        <android.view.WindowManagerGlobal: int ADD_BAD_SUBWINDOW_TOKEN> = -2;

        <android.view.WindowManagerGlobal: int ADD_BAD_APP_TOKEN> = -1;

        <android.view.WindowManagerGlobal: int ADD_APP_EXITING> = -4;

        return;
    }
}
