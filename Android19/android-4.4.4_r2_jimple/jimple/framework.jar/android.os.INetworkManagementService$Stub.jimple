public abstract class android.os.INetworkManagementService$Stub extends android.os.Binder implements android.os.INetworkManagementService
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addIdleTimer;
    static final int TRANSACTION_addRoute;
    static final int TRANSACTION_addSecondaryRoute;
    static final int TRANSACTION_attachPppd;
    static final int TRANSACTION_clearDnsInterfaceForPid;
    static final int TRANSACTION_clearDnsInterfaceForUidRange;
    static final int TRANSACTION_clearDnsInterfaceMaps;
    static final int TRANSACTION_clearHostExemption;
    static final int TRANSACTION_clearInterfaceAddresses;
    static final int TRANSACTION_clearMarkedForwarding;
    static final int TRANSACTION_clearMarkedForwardingRoute;
    static final int TRANSACTION_clearUidRangeRoute;
    static final int TRANSACTION_detachPppd;
    static final int TRANSACTION_disableIpv6;
    static final int TRANSACTION_disableNat;
    static final int TRANSACTION_enableIpv6;
    static final int TRANSACTION_enableNat;
    static final int TRANSACTION_flushDefaultDnsCache;
    static final int TRANSACTION_flushInterfaceDnsCache;
    static final int TRANSACTION_getDnsForwarders;
    static final int TRANSACTION_getInterfaceConfig;
    static final int TRANSACTION_getIpForwardingEnabled;
    static final int TRANSACTION_getMarkForProtect;
    static final int TRANSACTION_getMarkForUid;
    static final int TRANSACTION_getNetworkStatsDetail;
    static final int TRANSACTION_getNetworkStatsSummaryDev;
    static final int TRANSACTION_getNetworkStatsSummaryXt;
    static final int TRANSACTION_getNetworkStatsTethering;
    static final int TRANSACTION_getNetworkStatsUidDetail;
    static final int TRANSACTION_getRoutes;
    static final int TRANSACTION_isBandwidthControlEnabled;
    static final int TRANSACTION_isClatdStarted;
    static final int TRANSACTION_isFirewallEnabled;
    static final int TRANSACTION_isTetheringStarted;
    static final int TRANSACTION_listInterfaces;
    static final int TRANSACTION_listTetheredInterfaces;
    static final int TRANSACTION_listTtys;
    static final int TRANSACTION_registerObserver;
    static final int TRANSACTION_removeIdleTimer;
    static final int TRANSACTION_removeInterfaceAlert;
    static final int TRANSACTION_removeInterfaceQuota;
    static final int TRANSACTION_removeRoute;
    static final int TRANSACTION_removeSecondaryRoute;
    static final int TRANSACTION_setAccessPoint;
    static final int TRANSACTION_setDefaultInterfaceForDns;
    static final int TRANSACTION_setDnsForwarders;
    static final int TRANSACTION_setDnsInterfaceForPid;
    static final int TRANSACTION_setDnsInterfaceForUidRange;
    static final int TRANSACTION_setDnsServersForInterface;
    static final int TRANSACTION_setFirewallEgressDestRule;
    static final int TRANSACTION_setFirewallEgressSourceRule;
    static final int TRANSACTION_setFirewallEnabled;
    static final int TRANSACTION_setFirewallInterfaceRule;
    static final int TRANSACTION_setFirewallUidRule;
    static final int TRANSACTION_setGlobalAlert;
    static final int TRANSACTION_setHostExemption;
    static final int TRANSACTION_setInterfaceAlert;
    static final int TRANSACTION_setInterfaceConfig;
    static final int TRANSACTION_setInterfaceDown;
    static final int TRANSACTION_setInterfaceIpv6PrivacyExtensions;
    static final int TRANSACTION_setInterfaceQuota;
    static final int TRANSACTION_setInterfaceUp;
    static final int TRANSACTION_setIpForwardingEnabled;
    static final int TRANSACTION_setMarkedForwarding;
    static final int TRANSACTION_setMarkedForwardingRoute;
    static final int TRANSACTION_setMtu;
    static final int TRANSACTION_setUidNetworkRules;
    static final int TRANSACTION_setUidRangeRoute;
    static final int TRANSACTION_shutdown;
    static final int TRANSACTION_startAccessPoint;
    static final int TRANSACTION_startClatd;
    static final int TRANSACTION_startTethering;
    static final int TRANSACTION_stopAccessPoint;
    static final int TRANSACTION_stopClatd;
    static final int TRANSACTION_stopTethering;
    static final int TRANSACTION_tetherInterface;
    static final int TRANSACTION_unregisterObserver;
    static final int TRANSACTION_untetherInterface;
    static final int TRANSACTION_wifiFirmwareReload;

    public void <init>()
    {
        android.os.INetworkManagementService$Stub r0;

        r0 := @this: android.os.INetworkManagementService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.os.INetworkManagementService");

        return;
    }

    public static android.os.INetworkManagementService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.os.INetworkManagementService$Stub$Proxy $r2;
        boolean $z0;
        android.os.INetworkManagementService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.os.INetworkManagementService");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.os.INetworkManagementService;

        if $z0 == 0 goto label2;

        $r3 = (android.os.INetworkManagementService) r1;

        return $r3;

     label2:
        $r2 = new android.os.INetworkManagementService$Stub$Proxy;

        specialinvoke $r2.<android.os.INetworkManagementService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.os.INetworkManagementService$Stub r0;

        r0 := @this: android.os.INetworkManagementService$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.os.INetworkManagementService$Stub r0;
        int i0, i1, i3, i4, i5, i6, i8, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47;
        android.os.Parcel r1, r2;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, $z13;
        byte b2, b7, b9, b10, b11;
        android.net.LinkAddress r3, r4;
        java.lang.String r5, r7, r9, r10, r11, r22, r25, r27, r28, r31, r34, $r35, $r36, $r38, $r39, $r48, $r49, $r50, $r51, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r69, $r70, $r72, $r73, $r74, $r75, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r91, $r92, $r93, $r94, $r95, $r96, $r99, $r107;
        android.net.RouteInfo r6, r8, r23, r24, r26, r30;
        android.net.NetworkStats r12, r13, r14, r15, r16;
        java.lang.String[] r17, r18, r21, r37, $r52, $r76, $r90;
        android.net.wifi.WifiConfiguration r19, r20;
        android.net.RouteInfo[] r29;
        android.net.InterfaceConfiguration r32, r33;
        android.os.Parcelable$Creator $r40, $r42, $r45, $r47, $r68, $r71, $r87, $r89, $r97, $r100, $r106;
        java.lang.Object $r41, $r43, $r44, $r46, $r65, $r67, $r86, $r88, $r98, $r101, $r108;
        long $l34, $l35, $l36;
        android.net.INetworkManagementEventObserver $r102, $r104;
        android.os.IBinder $r103, $r105;

        r0 := @this: android.os.INetworkManagementService$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label003;
            case 2: goto label004;
            case 3: goto label005;
            case 4: goto label006;
            case 5: goto label009;
            case 6: goto label012;
            case 7: goto label013;
            case 8: goto label014;
            case 9: goto label015;
            case 10: goto label018;
            case 11: goto label019;
            case 12: goto label020;
            case 13: goto label021;
            case 14: goto label024;
            case 15: goto label027;
            case 16: goto label030;
            case 17: goto label033;
            case 18: goto label034;
            case 19: goto label035;
            case 20: goto label038;
            case 21: goto label041;
            case 22: goto label042;
            case 23: goto label043;
            case 24: goto label046;
            case 25: goto label047;
            case 26: goto label048;
            case 27: goto label049;
            case 28: goto label050;
            case 29: goto label051;
            case 30: goto label052;
            case 31: goto label053;
            case 32: goto label054;
            case 33: goto label055;
            case 34: goto label056;
            case 35: goto label057;
            case 36: goto label060;
            case 37: goto label061;
            case 38: goto label064;
            case 39: goto label067;
            case 40: goto label070;
            case 41: goto label073;
            case 42: goto label076;
            case 43: goto label079;
            case 44: goto label080;
            case 45: goto label081;
            case 46: goto label082;
            case 47: goto label083;
            case 48: goto label084;
            case 49: goto label087;
            case 50: goto label090;
            case 51: goto label091;
            case 52: goto label092;
            case 53: goto label093;
            case 54: goto label094;
            case 55: goto label095;
            case 56: goto label096;
            case 57: goto label099;
            case 58: goto label102;
            case 59: goto label105;
            case 60: goto label108;
            case 61: goto label111;
            case 62: goto label114;
            case 63: goto label115;
            case 64: goto label116;
            case 65: goto label117;
            case 66: goto label118;
            case 67: goto label119;
            case 68: goto label120;
            case 69: goto label123;
            case 70: goto label126;
            case 71: goto label129;
            case 72: goto label132;
            case 73: goto label133;
            case 74: goto label134;
            case 75: goto label135;
            case 76: goto label136;
            case 77: goto label137;
            case 78: goto label138;
            case 79: goto label139;
            case 1598968902: goto label002;
            default: goto label001;
        };

     label001:
        $z13 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z13;

     label002:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.os.INetworkManagementService");

        return 1;

     label003:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r103 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r102 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>($r103);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void registerObserver(android.net.INetworkManagementEventObserver)>($r102);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label004:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r105 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r104 = staticinvoke <android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>($r105);

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void unregisterObserver(android.net.INetworkManagementEventObserver)>($r104);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label005:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r37 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] listInterfaces()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r37);

        return 1;

     label006:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r107 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r32 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>($r107);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r32 == null goto label008;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r32.<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label007:
        return 1;

     label008:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label007;

     label009:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r34 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i47 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i47 == 0 goto label011;

        $r106 = <android.net.InterfaceConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r108 = interfaceinvoke $r106.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r33 = (android.net.InterfaceConfiguration) $r108;

     label010:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>(r34, r33);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label011:
        r33 = null;

        goto label010;

     label012:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r94 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearInterfaceAddresses(java.lang.String)>($r94);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label013:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r96 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceDown(java.lang.String)>($r96);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label014:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r95 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceUp(java.lang.String)>($r95);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label015:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r28 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i45 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i45 == 0 goto label017;

        z12 = 1;

     label016:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>(r28, z12);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label017:
        z12 = 0;

        goto label016;

     label018:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r93 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void disableIpv6(java.lang.String)>($r93);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label019:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r92 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void enableIpv6(java.lang.String)>($r92);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label020:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r99 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r29 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.RouteInfo[] getRoutes(java.lang.String)>($r99);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r29, 1);

        return 1;

     label021:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r31 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i46 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i46 == 0 goto label023;

        $r100 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r101 = interfaceinvoke $r100.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r30 = (android.net.RouteInfo) $r101;

     label022:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addRoute(java.lang.String,android.net.RouteInfo)>(r31, r30);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label023:
        r30 = null;

        goto label022;

     label024:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r25 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i41 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i41 == 0 goto label026;

        $r97 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r98 = interfaceinvoke $r97.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r24 = (android.net.RouteInfo) $r98;

     label025:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeRoute(java.lang.String,android.net.RouteInfo)>(r25, r24);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label026:
        r24 = null;

        goto label025;

     label027:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r27 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i40 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i40 == 0 goto label029;

        $r89 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r88 = interfaceinvoke $r89.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r26 = (android.net.RouteInfo) $r88;

     label028:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addSecondaryRoute(java.lang.String,android.net.RouteInfo)>(r27, r26);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label029:
        r26 = null;

        goto label028;

     label030:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r22 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i43 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i43 == 0 goto label032;

        $r87 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r86 = interfaceinvoke $r87.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r23 = (android.net.RouteInfo) $r86;

     label031:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeSecondaryRoute(java.lang.String,android.net.RouteInfo)>(r22, r23);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label032:
        r23 = null;

        goto label031;

     label033:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r91 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i44 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setMtu(java.lang.String,int)>($r91, $i44);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label034:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void shutdown()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label035:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z11 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean getIpForwardingEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z11 == 0 goto label037;

        b11 = 1;

     label036:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b11);

        return 1;

     label037:
        b11 = 0;

        goto label036;

     label038:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i42 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i42 == 0 goto label040;

        z9 = 1;

     label039:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setIpForwardingEnabled(boolean)>(z9);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label040:
        z9 = 0;

        goto label039;

     label041:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r90 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startTethering(java.lang.String[])>($r90);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label042:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void stopTethering()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label043:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z10 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isTetheringStarted()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z10 == 0 goto label045;

        b10 = 1;

     label044:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b10);

        return 1;

     label045:
        b10 = 0;

        goto label044;

     label046:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r78 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void tetherInterface(java.lang.String)>($r78);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label047:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r77 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void untetherInterface(java.lang.String)>($r77);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label048:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r21 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] listTetheredInterfaces()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r21);

        return 1;

     label049:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r76 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDnsForwarders(java.lang.String[])>($r76);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label050:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r18 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] getDnsForwarders()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r18);

        return 1;

     label051:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r74 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r75 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void enableNat(java.lang.String,java.lang.String)>($r74, $r75);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label052:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r85 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r73 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void disableNat(java.lang.String,java.lang.String)>($r85, $r73);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label053:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r17 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: java.lang.String[] listTtys()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r17);

        return 1;

     label054:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r80 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r81 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r82 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r83 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r84 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r80, $r81, $r82, $r83, $r84);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label055:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r79 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void detachPppd(java.lang.String)>($r79);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label056:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r70 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r69 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void wifiFirmwareReload(java.lang.String,java.lang.String)>($r70, $r69);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label057:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i37 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i37 == 0 goto label059;

        $r68 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r67 = interfaceinvoke $r68.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r20 = (android.net.wifi.WifiConfiguration) $r67;

     label058:
        $r66 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>(r20, $r66);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label059:
        r20 = null;

        goto label058;

     label060:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r64 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void stopAccessPoint(java.lang.String)>($r64);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label061:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i39 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i39 == 0 goto label063;

        $r71 = <android.net.wifi.WifiConfiguration: android.os.Parcelable$Creator CREATOR>;

        $r65 = interfaceinvoke $r71.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r19 = (android.net.wifi.WifiConfiguration) $r65;

     label062:
        $r72 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>(r19, $r72);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label063:
        r19 = null;

        goto label062;

     label064:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r14 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsSummaryDev()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r14 == null goto label066;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r14.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label065:
        return 1;

     label066:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label065;

     label067:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r13 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsSummaryXt()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r13 == null goto label069;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r13.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label068:
        return 1;

     label069:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label068;

     label070:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r16 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsDetail()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r16 == null goto label072;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r16.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label071:
        return 1;

     label072:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label071;

     label073:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i38 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r15 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsUidDetail(int)>($i38);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r15 == null goto label075;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r15.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label074:
        return 1;

     label075:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label074;

     label076:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r12 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: android.net.NetworkStats getNetworkStatsTethering()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r12 == null goto label078;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r12.<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label077:
        return 1;

     label078:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label077;

     label079:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r60 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $l34 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceQuota(java.lang.String,long)>($r60, $l34);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label080:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r61 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceQuota(java.lang.String)>($r61);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label081:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r62 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $l35 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setInterfaceAlert(java.lang.String,long)>($r62, $l35);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label082:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r63 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeInterfaceAlert(java.lang.String)>($r63);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label083:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $l36 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setGlobalAlert(long)>($l36);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label084:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i32 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i32 == 0 goto label086;

        z8 = 1;

     label085:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setUidNetworkRules(int,boolean)>(i8, z8);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label086:
        z8 = 0;

        goto label085;

     label087:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z6 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isBandwidthControlEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z6 == 0 goto label089;

        b9 = 1;

     label088:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b9);

        return 1;

     label089:
        b9 = 0;

        goto label088;

     label090:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r57 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i33 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r56 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void addIdleTimer(java.lang.String,int,java.lang.String)>($r57, $i33, $r56);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label091:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r58 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void removeIdleTimer(java.lang.String)>($r58);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label092:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r59 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDefaultInterfaceForDns(java.lang.String)>($r59);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label093:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r55 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r52 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] createStringArray()>();

        $r53 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDnsServersForInterface(java.lang.String,java.lang.String[],java.lang.String)>($r55, $r52, $r53);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label094:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void flushDefaultDnsCache()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label095:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r54 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void flushInterfaceDnsCache(java.lang.String)>($r54);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label096:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i30 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i30 == 0 goto label098;

        z7 = 1;

     label097:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallEnabled(boolean)>(z7);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label098:
        z7 = 0;

        goto label097;

     label099:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z5 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isFirewallEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z5 == 0 goto label101;

        b7 = 1;

     label100:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b7);

        return 1;

     label101:
        b7 = 0;

        goto label100;

     label102:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i31 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i31 == 0 goto label104;

        z4 = 1;

     label103:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallInterfaceRule(java.lang.String,boolean)>(r11, z4);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label104:
        z4 = 0;

        goto label103;

     label105:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i26 == 0 goto label107;

        z3 = 1;

     label106:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallEgressSourceRule(java.lang.String,boolean)>(r10, z3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label107:
        z3 = 0;

        goto label106;

     label108:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i27 == 0 goto label110;

        z2 = 1;

     label109:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallEgressDestRule(java.lang.String,int,boolean)>(r9, i6, z2);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label110:
        z2 = 0;

        goto label109;

     label111:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i28 == 0 goto label113;

        z1 = 1;

     label112:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setFirewallUidRule(int,boolean)>(i5, z1);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label113:
        z1 = 0;

        goto label112;

     label114:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r48 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i29 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setUidRangeRoute(java.lang.String,int,int)>($r48, $i25, $i29);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label115:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r50 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearUidRangeRoute(java.lang.String,int,int)>($r50, $i24, $i23);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label116:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r51 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setMarkedForwarding(java.lang.String)>($r51);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label117:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r49 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearMarkedForwarding(java.lang.String)>($r49);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label118:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i4 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: int getMarkForUid(int)>($i21);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i4);

        return 1;

     label119:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        i3 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: int getMarkForProtect()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        return 1;

     label120:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i22 == 0 goto label122;

        $r45 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r44 = interfaceinvoke $r45.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r8 = (android.net.RouteInfo) $r44;

     label121:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setMarkedForwardingRoute(java.lang.String,android.net.RouteInfo)>(r7, r8);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label122:
        r8 = null;

        goto label121;

     label123:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i18 == 0 goto label125;

        $r47 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        $r46 = interfaceinvoke $r47.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r6 = (android.net.RouteInfo) $r46;

     label124:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearMarkedForwardingRoute(java.lang.String,android.net.RouteInfo)>(r5, r6);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label125:
        r6 = null;

        goto label124;

     label126:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i20 == 0 goto label128;

        $r40 = <android.net.LinkAddress: android.os.Parcelable$Creator CREATOR>;

        $r41 = interfaceinvoke $r40.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r4 = (android.net.LinkAddress) $r41;

     label127:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setHostExemption(android.net.LinkAddress)>(r4);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label128:
        r4 = null;

        goto label127;

     label129:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i19 == 0 goto label131;

        $r42 = <android.net.LinkAddress: android.os.Parcelable$Creator CREATOR>;

        $r43 = interfaceinvoke $r42.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r3 = (android.net.LinkAddress) $r43;

     label130:
        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearHostExemption(android.net.LinkAddress)>(r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label131:
        r3 = null;

        goto label130;

     label132:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r38 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDnsInterfaceForPid(java.lang.String,int)>($r38, $i14);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label133:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearDnsInterfaceForPid(int)>($i13);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label134:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r39 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void setDnsInterfaceForUidRange(java.lang.String,int,int)>($r39, $i17, $i12);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label135:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r35 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearDnsInterfaceForUidRange(java.lang.String,int,int)>($r35, $i15, $i16);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label136:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void clearDnsInterfaceMaps()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label137:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        $r36 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void startClatd(java.lang.String)>($r36);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label138:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        virtualinvoke r0.<android.os.INetworkManagementService$Stub: void stopClatd()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label139:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.os.INetworkManagementService");

        z0 = virtualinvoke r0.<android.os.INetworkManagementService$Stub: boolean isClatdStarted()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z0 == 0 goto label141;

        b2 = 1;

     label140:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

        return 1;

     label141:
        b2 = 0;

        goto label140;
    }

    public static void <clinit>()
    {
        <android.os.INetworkManagementService$Stub: int TRANSACTION_wifiFirmwareReload> = 34;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_untetherInterface> = 25;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_unregisterObserver> = 2;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_tetherInterface> = 24;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopTethering> = 22;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopClatd> = 78;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_stopAccessPoint> = 36;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startTethering> = 21;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startClatd> = 77;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_startAccessPoint> = 35;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_shutdown> = 18;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setUidRangeRoute> = 62;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setUidNetworkRules> = 48;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setMtu> = 17;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setMarkedForwardingRoute> = 68;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setMarkedForwarding> = 64;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setIpForwardingEnabled> = 20;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceUp> = 8;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceQuota> = 43;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceIpv6PrivacyExtensions> = 9;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceDown> = 7;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceConfig> = 5;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setInterfaceAlert> = 45;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setHostExemption> = 70;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setGlobalAlert> = 47;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallUidRule> = 61;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallInterfaceRule> = 58;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEnabled> = 56;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEgressSourceRule> = 59;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setFirewallEgressDestRule> = 60;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsServersForInterface> = 53;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsInterfaceForUidRange> = 74;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsInterfaceForPid> = 72;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDnsForwarders> = 27;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setDefaultInterfaceForDns> = 52;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_setAccessPoint> = 37;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeSecondaryRoute> = 16;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeRoute> = 14;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceQuota> = 44;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeInterfaceAlert> = 46;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_removeIdleTimer> = 51;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_registerObserver> = 1;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listTtys> = 31;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listTetheredInterfaces> = 26;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_listInterfaces> = 3;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isTetheringStarted> = 23;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isFirewallEnabled> = 57;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isClatdStarted> = 79;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_isBandwidthControlEnabled> = 49;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getRoutes> = 12;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsUidDetail> = 41;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsTethering> = 42;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsSummaryXt> = 39;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsSummaryDev> = 38;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getNetworkStatsDetail> = 40;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getMarkForUid> = 66;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getMarkForProtect> = 67;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getIpForwardingEnabled> = 19;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getInterfaceConfig> = 4;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_getDnsForwarders> = 28;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_flushInterfaceDnsCache> = 55;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_flushDefaultDnsCache> = 54;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_enableNat> = 29;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_enableIpv6> = 11;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_disableNat> = 30;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_disableIpv6> = 10;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_detachPppd> = 33;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearUidRangeRoute> = 63;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearMarkedForwardingRoute> = 69;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearMarkedForwarding> = 65;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearInterfaceAddresses> = 6;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearHostExemption> = 71;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearDnsInterfaceMaps> = 76;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearDnsInterfaceForUidRange> = 75;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_clearDnsInterfaceForPid> = 73;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_attachPppd> = 32;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addSecondaryRoute> = 15;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addRoute> = 13;

        <android.os.INetworkManagementService$Stub: int TRANSACTION_addIdleTimer> = 50;

        <android.os.INetworkManagementService$Stub: java.lang.String DESCRIPTOR> = "android.os.INetworkManagementService";

        return;
    }
}
