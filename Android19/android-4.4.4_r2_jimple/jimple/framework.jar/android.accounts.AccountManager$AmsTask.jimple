abstract class android.accounts.AccountManager$AmsTask extends java.util.concurrent.FutureTask implements android.accounts.AccountManagerFuture
{
    final android.app.Activity mActivity;
    final android.accounts.AccountManagerCallback mCallback;
    final android.os.Handler mHandler;
    final android.accounts.IAccountManagerResponse mResponse;
    final android.accounts.AccountManager this$0;

    public void <init>(android.accounts.AccountManager, android.app.Activity, android.os.Handler, android.accounts.AccountManagerCallback)
    {
        android.accounts.AccountManager$AmsTask r0;
        android.accounts.AccountManager r1;
        android.app.Activity r2;
        android.os.Handler r3;
        android.accounts.AccountManagerCallback r4;
        android.accounts.AccountManager$AmsTask$1 $r5;
        android.accounts.AccountManager$AmsTask$Response $r6;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        r1 := @parameter0: android.accounts.AccountManager;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.os.Handler;

        r4 := @parameter3: android.accounts.AccountManagerCallback;

        r0.<android.accounts.AccountManager$AmsTask: android.accounts.AccountManager this$0> = r1;

        $r5 = new android.accounts.AccountManager$AmsTask$1;

        specialinvoke $r5.<android.accounts.AccountManager$AmsTask$1: void <init>(android.accounts.AccountManager)>(r1);

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r5);

        r0.<android.accounts.AccountManager$AmsTask: android.os.Handler mHandler> = r3;

        r0.<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerCallback mCallback> = r4;

        r0.<android.accounts.AccountManager$AmsTask: android.app.Activity mActivity> = r2;

        $r6 = new android.accounts.AccountManager$AmsTask$Response;

        specialinvoke $r6.<android.accounts.AccountManager$AmsTask$Response: void <init>(android.accounts.AccountManager$AmsTask,android.accounts.AccountManager$1)>(r0, null);

        r0.<android.accounts.AccountManager$AmsTask: android.accounts.IAccountManagerResponse mResponse> = $r6;

        return;
    }

    static void access$500(android.accounts.AccountManager$AmsTask, java.lang.Throwable)
    {
        android.accounts.AccountManager$AmsTask r0;
        java.lang.Throwable r1;

        r0 := @parameter0: android.accounts.AccountManager$AmsTask;

        r1 := @parameter1: java.lang.Throwable;

        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: void setException(java.lang.Throwable)>(r1);

        return;
    }

    private android.os.Bundle internalGetResult(java.lang.Long, java.util.concurrent.TimeUnit) throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException
    {
        android.accounts.AccountManager$AmsTask r0;
        java.lang.Long r1;
        java.util.concurrent.TimeUnit r2;
        java.util.concurrent.ExecutionException r3, $r14;
        java.lang.Throwable r4, r5, $r26;
        android.os.Bundle r9, r10;
        boolean $z0, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r11, $r12;
        long $l0;
        android.accounts.AccountManager $r13;
        java.lang.IllegalStateException $r15;
        java.lang.RuntimeException $r16;
        java.lang.Error $r17;
        java.io.IOException $r18;
        java.lang.InterruptedException $r19;
        android.accounts.AuthenticatorException $r20, $r21;
        java.util.concurrent.CancellationException $r22;
        android.accounts.OperationCanceledException $r23, $r24;
        java.util.concurrent.TimeoutException $r25;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        r1 := @parameter0: java.lang.Long;

        r2 := @parameter1: java.util.concurrent.TimeUnit;

        $z0 = virtualinvoke r0.<android.accounts.AccountManager$AmsTask: boolean isDone()>();

        if $z0 != 0 goto label01;

        $r13 = r0.<android.accounts.AccountManager$AmsTask: android.accounts.AccountManager this$0>;

        staticinvoke <android.accounts.AccountManager: void access$200(android.accounts.AccountManager)>($r13);

     label01:
        if r1 != null goto label04;

     label02:
        $r12 = virtualinvoke r0.<android.accounts.AccountManager$AmsTask: java.lang.Object get()>();

        r10 = (android.os.Bundle) $r12;

     label03:
        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: boolean cancel(boolean)>(1);

        return r10;

     label04:
        $l0 = virtualinvoke r1.<java.lang.Long: long longValue()>();

        $r11 = virtualinvoke r0.<android.accounts.AccountManager$AmsTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, r2);

        r9 = (android.os.Bundle) $r11;

     label05:
        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: boolean cancel(boolean)>(1);

        return r9;

     label06:
        $r22 := @caughtexception;

     label07:
        $r23 = new android.accounts.OperationCanceledException;

        specialinvoke $r23.<android.accounts.OperationCanceledException: void <init>()>();

        throw $r23;

     label08:
        $r26 := @caughtexception;

        r5 = $r26;

        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: boolean cancel(boolean)>(1);

        throw r5;

     label09:
        $r25 := @caughtexception;

        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: boolean cancel(boolean)>(1);

     label10:
        $r24 = new android.accounts.OperationCanceledException;

        specialinvoke $r24.<android.accounts.OperationCanceledException: void <init>()>();

        throw $r24;

     label11:
        $r19 := @caughtexception;

        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: boolean cancel(boolean)>(1);

        goto label10;

     label12:
        $r14 := @caughtexception;

        r3 = $r14;

     label13:
        r4 = virtualinvoke r3.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $z4 = r4 instanceof java.io.IOException;

        if $z4 == 0 goto label14;

        $r18 = (java.io.IOException) r4;

        throw $r18;

     label14:
        $z3 = r4 instanceof java.lang.UnsupportedOperationException;

        if $z3 == 0 goto label15;

        $r21 = new android.accounts.AuthenticatorException;

        specialinvoke $r21.<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>(r4);

        throw $r21;

     label15:
        $z6 = r4 instanceof android.accounts.AuthenticatorException;

        if $z6 == 0 goto label16;

        $r20 = (android.accounts.AuthenticatorException) r4;

        throw $r20;

     label16:
        $z5 = r4 instanceof java.lang.RuntimeException;

        if $z5 == 0 goto label17;

        $r16 = (java.lang.RuntimeException) r4;

        throw $r16;

     label17:
        $z7 = r4 instanceof java.lang.Error;

        if $z7 == 0 goto label18;

        $r17 = (java.lang.Error) r4;

        throw $r17;

     label18:
        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r4);

     label19:
        throw $r15;

        catch java.util.concurrent.CancellationException from label02 to label03 with label06;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label09;
        catch java.lang.InterruptedException from label02 to label03 with label11;
        catch java.util.concurrent.ExecutionException from label02 to label03 with label12;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.util.concurrent.CancellationException from label04 to label05 with label06;
        catch java.util.concurrent.TimeoutException from label04 to label05 with label09;
        catch java.lang.InterruptedException from label04 to label05 with label11;
        catch java.util.concurrent.ExecutionException from label04 to label05 with label12;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
        catch java.lang.Throwable from label16 to label17 with label08;
        catch java.lang.Throwable from label17 to label18 with label08;
        catch java.lang.Throwable from label18 to label19 with label08;
    }

    public abstract void doWork() throws android.os.RemoteException;

    protected void done()
    {
        android.accounts.AccountManager$AmsTask r0;
        android.accounts.AccountManagerCallback $r1, $r2;
        android.os.Handler $r3;
        android.accounts.AccountManager $r4;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        $r1 = r0.<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerCallback mCallback>;

        if $r1 == null goto label1;

        $r4 = r0.<android.accounts.AccountManager$AmsTask: android.accounts.AccountManager this$0>;

        $r3 = r0.<android.accounts.AccountManager$AmsTask: android.os.Handler mHandler>;

        $r2 = r0.<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerCallback mCallback>;

        staticinvoke <android.accounts.AccountManager: void access$300(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>($r4, $r3, $r2, r0);

     label1:
        return;
    }

    public android.os.Bundle getResult() throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException
    {
        android.accounts.AccountManager$AmsTask r0;
        android.os.Bundle $r1;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        $r1 = specialinvoke r0.<android.accounts.AccountManager$AmsTask: android.os.Bundle internalGetResult(java.lang.Long,java.util.concurrent.TimeUnit)>(null, null);

        return $r1;
    }

    public android.os.Bundle getResult(long, java.util.concurrent.TimeUnit) throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException
    {
        android.accounts.AccountManager$AmsTask r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.lang.Long $r2;
        android.os.Bundle $r3;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3 = specialinvoke r0.<android.accounts.AccountManager$AmsTask: android.os.Bundle internalGetResult(java.lang.Long,java.util.concurrent.TimeUnit)>($r2, r1);

        return $r3;
    }

    public volatile java.lang.Object getResult() throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException
    {
        android.accounts.AccountManager$AmsTask r0;
        android.os.Bundle $r1;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        $r1 = virtualinvoke r0.<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult()>();

        return $r1;
    }

    public volatile java.lang.Object getResult(long, java.util.concurrent.TimeUnit) throws android.accounts.OperationCanceledException, java.io.IOException, android.accounts.AuthenticatorException
    {
        android.accounts.AccountManager$AmsTask r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        android.os.Bundle $r2;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke r0.<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $r2;
    }

    protected void set(android.os.Bundle)
    {
        android.accounts.AccountManager$AmsTask r0;
        android.os.Bundle r1;
        java.lang.Exception $r2;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        $r2 = new java.lang.Exception;

        specialinvoke $r2.<java.lang.Exception: void <init>()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountManager", "the bundle must not be null", $r2);

     label1:
        specialinvoke r0.<java.util.concurrent.FutureTask: void set(java.lang.Object)>(r1);

        return;
    }

    protected volatile void set(java.lang.Object)
    {
        android.accounts.AccountManager$AmsTask r0;
        java.lang.Object r1;
        android.os.Bundle $r2;

        r0 := @this: android.accounts.AccountManager$AmsTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.os.Bundle) r1;

        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: void set(android.os.Bundle)>($r2);

        return;
    }

    public final android.accounts.AccountManagerFuture start()
    {
        android.accounts.AccountManager$AmsTask r0;
        android.os.RemoteException r1, $r2;

        r0 := @this: android.accounts.AccountManager$AmsTask;

     label1:
        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: void doWork()>();

     label2:
        return r0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        virtualinvoke r0.<android.accounts.AccountManager$AmsTask: void setException(java.lang.Throwable)>(r1);

        return r0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
