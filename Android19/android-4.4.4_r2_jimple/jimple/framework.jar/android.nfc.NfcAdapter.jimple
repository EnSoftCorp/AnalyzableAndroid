public final class android.nfc.NfcAdapter extends java.lang.Object
{
    public static final java.lang.String ACTION_ADAPTER_STATE_CHANGED;
    public static final java.lang.String ACTION_HANDOVER_TRANSFER_DONE;
    public static final java.lang.String ACTION_HANDOVER_TRANSFER_STARTED;
    public static final java.lang.String ACTION_NDEF_DISCOVERED;
    public static final java.lang.String ACTION_TAG_DISCOVERED;
    public static final java.lang.String ACTION_TAG_LEFT_FIELD;
    public static final java.lang.String ACTION_TECH_DISCOVERED;
    public static final java.lang.String EXTRA_ADAPTER_STATE;
    public static final java.lang.String EXTRA_HANDOVER_TRANSFER_STATUS;
    public static final java.lang.String EXTRA_HANDOVER_TRANSFER_URI;
    public static final java.lang.String EXTRA_ID;
    public static final java.lang.String EXTRA_NDEF_MESSAGES;
    public static final java.lang.String EXTRA_READER_PRESENCE_CHECK_DELAY;
    public static final java.lang.String EXTRA_TAG;
    public static final int FLAG_NDEF_PUSH_NO_CONFIRM;
    public static final int FLAG_READER_NFC_A;
    public static final int FLAG_READER_NFC_B;
    public static final int FLAG_READER_NFC_BARCODE;
    public static final int FLAG_READER_NFC_F;
    public static final int FLAG_READER_NFC_V;
    public static final int FLAG_READER_NO_PLATFORM_SOUNDS;
    public static final int FLAG_READER_SKIP_NDEF_CHECK;
    public static final int HANDOVER_TRANSFER_STATUS_FAILURE;
    public static final int HANDOVER_TRANSFER_STATUS_SUCCESS;
    public static final int STATE_OFF;
    public static final int STATE_ON;
    public static final int STATE_TURNING_OFF;
    public static final int STATE_TURNING_ON;
    static final java.lang.String TAG;
    static android.nfc.INfcCardEmulation sCardEmulationService;
    static boolean sIsInitialized;
    static java.util.HashMap sNfcAdapters;
    static android.nfc.NfcAdapter sNullContextNfcAdapter;
    static android.nfc.INfcAdapter sService;
    static android.nfc.INfcTag sTagService;
    final android.content.Context mContext;
    android.app.OnActivityPausedListener mForegroundDispatchListener;
    final android.nfc.NfcActivityManager mNfcActivityManager;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <android.nfc.NfcAdapter: java.lang.String TAG> = "NFC";

        <android.nfc.NfcAdapter: int STATE_TURNING_ON> = 2;

        <android.nfc.NfcAdapter: int STATE_TURNING_OFF> = 4;

        <android.nfc.NfcAdapter: int STATE_ON> = 3;

        <android.nfc.NfcAdapter: int STATE_OFF> = 1;

        <android.nfc.NfcAdapter: int HANDOVER_TRANSFER_STATUS_SUCCESS> = 0;

        <android.nfc.NfcAdapter: int HANDOVER_TRANSFER_STATUS_FAILURE> = 1;

        <android.nfc.NfcAdapter: int FLAG_READER_SKIP_NDEF_CHECK> = 128;

        <android.nfc.NfcAdapter: int FLAG_READER_NO_PLATFORM_SOUNDS> = 256;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_V> = 8;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_F> = 4;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_BARCODE> = 16;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_B> = 2;

        <android.nfc.NfcAdapter: int FLAG_READER_NFC_A> = 1;

        <android.nfc.NfcAdapter: int FLAG_NDEF_PUSH_NO_CONFIRM> = 1;

        <android.nfc.NfcAdapter: java.lang.String EXTRA_TAG> = "android.nfc.extra.TAG";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_READER_PRESENCE_CHECK_DELAY> = "presence";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_NDEF_MESSAGES> = "android.nfc.extra.NDEF_MESSAGES";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_ID> = "android.nfc.extra.ID";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_HANDOVER_TRANSFER_URI> = "android.nfc.extra.HANDOVER_TRANSFER_URI";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_HANDOVER_TRANSFER_STATUS> = "android.nfc.extra.HANDOVER_TRANSFER_STATUS";

        <android.nfc.NfcAdapter: java.lang.String EXTRA_ADAPTER_STATE> = "android.nfc.extra.ADAPTER_STATE";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TECH_DISCOVERED> = "android.nfc.action.TECH_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TAG_LEFT_FIELD> = "android.nfc.action.TAG_LOST";

        <android.nfc.NfcAdapter: java.lang.String ACTION_TAG_DISCOVERED> = "android.nfc.action.TAG_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_NDEF_DISCOVERED> = "android.nfc.action.NDEF_DISCOVERED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_HANDOVER_TRANSFER_STARTED> = "android.nfc.action.HANDOVER_TRANSFER_STARTED";

        <android.nfc.NfcAdapter: java.lang.String ACTION_HANDOVER_TRANSFER_DONE> = "android.nfc.action.HANDOVER_TRANSFER_DONE";

        <android.nfc.NfcAdapter: java.lang.String ACTION_ADAPTER_STATE_CHANGED> = "android.nfc.action.ADAPTER_STATE_CHANGED";

        <android.nfc.NfcAdapter: boolean sIsInitialized> = 0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters> = $r0;

        return;
    }

    void <init>(android.content.Context)
    {
        android.nfc.NfcAdapter r0;
        android.content.Context r1;
        android.nfc.NfcAdapter$1 $r2;
        android.nfc.NfcActivityManager $r3;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.nfc.NfcAdapter$1;

        specialinvoke $r2.<android.nfc.NfcAdapter$1: void <init>(android.nfc.NfcAdapter)>(r0);

        r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener> = $r2;

        r0.<android.nfc.NfcAdapter: android.content.Context mContext> = r1;

        $r3 = new android.nfc.NfcActivityManager;

        specialinvoke $r3.<android.nfc.NfcActivityManager: void <init>(android.nfc.NfcAdapter)>(r0);

        r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager> = $r3;

        return;
    }

    public static android.nfc.NfcAdapter getDefaultAdapter()
    {
        java.lang.Exception $r0;
        android.nfc.NfcAdapter $r1;

        $r0 = new java.lang.Exception;

        specialinvoke $r0.<java.lang.Exception: void <init>()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "WARNING: NfcAdapter.getDefaultAdapter() is deprecated, use NfcAdapter.getDefaultAdapter(Context) instead", $r0);

        $r1 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)>(null);

        return $r1;
    }

    public static android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)
    {
        android.content.Context r0, r1;
        android.nfc.NfcManager r2;
        java.lang.Object $r3;
        android.nfc.NfcAdapter $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @parameter0: android.content.Context;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context cannot be null");

        throw $r6;

     label1:
        r1 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        if r1 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context not associated with any application (using a mock context?)");

        throw $r5;

     label2:
        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("nfc");

        r2 = (android.nfc.NfcManager) $r3;

        if r2 != null goto label3;

        return null;

     label3:
        $r4 = virtualinvoke r2.<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>();

        return $r4;
    }

    public static android.nfc.NfcAdapter getNfcAdapter(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Throwable r1, $r24;
        android.nfc.NfcAdapter r2, $r7, $r10, $r11;
        boolean $z0, $z1;
        java.util.HashMap $r5, $r8;
        java.lang.Object $r6;
        android.nfc.INfcAdapter $r12, $r13, $r15, $r17;
        android.nfc.INfcTag $r14;
        android.nfc.INfcCardEmulation $r16;
        java.lang.UnsupportedOperationException $r18, $r19, $r22, $r23;
        android.os.RemoteException $r20, $r21;

        r0 := @parameter0: android.content.Context;

        entermonitor class "android/nfc/NfcAdapter";

     label01:
        $z0 = <android.nfc.NfcAdapter: boolean sIsInitialized>;

        if $z0 != 0 goto label07;

        $z1 = staticinvoke <android.nfc.NfcAdapter: boolean hasNfcFeature()>();

        if $z1 != 0 goto label03;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("NFC", "this device does not have NFC support");

        $r19 = new java.lang.UnsupportedOperationException;

        specialinvoke $r19.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r19;

     label02:
        $r24 := @caughtexception;

        r1 = $r24;

        exitmonitor class "android/nfc/NfcAdapter";

        throw r1;

     label03:
        $r13 = staticinvoke <android.nfc.NfcAdapter: android.nfc.INfcAdapter getServiceInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService> = $r13;

        $r12 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        if $r12 != null goto label04;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC service");

        $r18 = new java.lang.UnsupportedOperationException;

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r18;

     label04:
        $r15 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r14 = interfaceinvoke $r15.<android.nfc.INfcAdapter: android.nfc.INfcTag getNfcTagInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService> = $r14;

     label05:
        $r17 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r16 = interfaceinvoke $r17.<android.nfc.INfcAdapter: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService> = $r16;

     label06:
        <android.nfc.NfcAdapter: boolean sIsInitialized> = 1;

     label07:
        if r0 != null goto label15;

     label08:
        $r10 = <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter>;

        if $r10 != null goto label09;

        $r11 = new android.nfc.NfcAdapter;

        specialinvoke $r11.<android.nfc.NfcAdapter: void <init>(android.content.Context)>(null);

        <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter> = $r11;

     label09:
        r2 = <android.nfc.NfcAdapter: android.nfc.NfcAdapter sNullContextNfcAdapter>;

     label10:
        exitmonitor class "android/nfc/NfcAdapter";

        return r2;

     label11:
        $r20 := @caughtexception;

     label12:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC Tag service");

        $r22 = new java.lang.UnsupportedOperationException;

        specialinvoke $r22.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r22;

     label13:
        $r21 := @caughtexception;

     label14:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve card emulation service");

        $r23 = new java.lang.UnsupportedOperationException;

        specialinvoke $r23.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r23;

     label15:
        $r5 = <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r2 = (android.nfc.NfcAdapter) $r6;

     label16:
        if r2 != null goto label10;

     label17:
        $r7 = new android.nfc.NfcAdapter;

        specialinvoke $r7.<android.nfc.NfcAdapter: void <init>(android.content.Context)>(r0);

        r2 = $r7;

        $r8 = <android.nfc.NfcAdapter: java.util.HashMap sNfcAdapters>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

     label18:
        goto label10;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch android.os.RemoteException from label04 to label05 with label11;
        catch java.lang.Throwable from label04 to label05 with label02;
        catch android.os.RemoteException from label05 to label06 with label13;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label06 to label07 with label02;
        catch java.lang.Throwable from label08 to label09 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label12 to label13 with label02;
        catch java.lang.Throwable from label14 to label15 with label02;
        catch java.lang.Throwable from label15 to label16 with label02;
        catch java.lang.Throwable from label17 to label18 with label02;
    }

    private static android.nfc.INfcAdapter getServiceInterface()
    {
        android.os.IBinder r0;
        android.nfc.INfcAdapter $r1;

        r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("nfc");

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.nfc.INfcAdapter$Stub: android.nfc.INfcAdapter asInterface(android.os.IBinder)>(r0);

        return $r1;
    }

    private static boolean hasNfcFeature()
    {
        android.content.pm.IPackageManager r0;
        android.os.RemoteException r1, $r2;
        boolean z0;

        r0 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        if r0 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "Cannot get package manager, assuming no NFC feature");

        return 0;

     label1:
        z0 = interfaceinvoke r0.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.nfc");

     label2:
        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Package manager query failed, assuming no NFC feature", r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void attemptDeadServiceRecovery(java.lang.Exception)
    {
        android.nfc.NfcAdapter r0;
        java.lang.Exception r1;
        android.nfc.INfcAdapter r2;
        android.nfc.INfcTag $r5;
        android.nfc.INfcCardEmulation $r6;
        android.os.RemoteException $r7, $r8;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: java.lang.Exception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "NFC service dead - attempting to recover", r1);

        r2 = staticinvoke <android.nfc.NfcAdapter: android.nfc.INfcAdapter getServiceInterface()>();

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC service during service recovery");

        return;

     label1:
        <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService> = r2;

     label2:
        $r5 = interfaceinvoke r2.<android.nfc.INfcAdapter: android.nfc.INfcTag getNfcTagInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService> = $r5;

     label3:
        $r6 = interfaceinvoke r2.<android.nfc.INfcAdapter: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>();

        <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService> = $r6;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC card emulation service during service recovery");

        return;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NFC", "could not retrieve NFC tag service during service recovery");

        return;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public boolean disable()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean disable(boolean)>(1);

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disableForegroundDispatch(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.app.ActivityThread $r2;
        android.app.OnActivityPausedListener $r3;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        $r2 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r3 = r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener>;

        virtualinvoke $r2.<android.app.ActivityThread: void unregisterOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>(r1, $r3);

        virtualinvoke r0.<android.nfc.NfcAdapter: void disableForegroundDispatchInternal(android.app.Activity,boolean)>(r1, 0);

        return;
    }

    void disableForegroundDispatchInternal(android.app.Activity, boolean)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        boolean z0, $z1;
        android.os.RemoteException r2, $r5;
        android.nfc.INfcAdapter $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        z0 := @parameter1: boolean;

     label1:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r3.<android.nfc.INfcAdapter: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>(null, null, null);

     label2:
        if z0 != 0 goto label5;

     label3:
        $z1 = virtualinvoke r1.<android.app.Activity: boolean isResumed()>();

        if $z1 != 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You must disable foreground dispatching while your activity is still resumed");

        throw $r4;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r2);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void disableForegroundNdefPush(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.nfc.NfcActivityManager $r2, $r3, $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        virtualinvoke r0.<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>(r1);

        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r1, null, 0);

        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r1, null, 0);

        $r4 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r4.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r1, null);

        return;
    }

    public boolean disableNdefPush()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean disableNdefPush()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disableReaderMode(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.nfc.NfcActivityManager $r2;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        $r2 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r2.<android.nfc.NfcActivityManager: void disableReaderMode(android.app.Activity)>(r1);

        return;
    }

    public void dispatch(android.nfc.Tag)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.Tag r1;
        android.os.RemoteException r2, $r5;
        android.nfc.INfcAdapter $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.Tag;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("tag cannot be null");

        throw $r4;

     label1:
        $r3 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r3.<android.nfc.INfcAdapter: void dispatch(android.nfc.Tag)>(r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enable()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean enable()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enableForegroundDispatch(android.app.Activity, android.app.PendingIntent, android.content.IntentFilter[], java.lang.String[][])
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.app.PendingIntent r2;
        android.content.IntentFilter[] r3;
        java.lang.String[][] r4;
        android.nfc.TechListParcel r5, $r11;
        android.os.RemoteException r6, $r13;
        int i0;
        java.lang.NullPointerException $r7;
        boolean $z0;
        android.app.ActivityThread $r8;
        android.app.OnActivityPausedListener $r9;
        android.nfc.INfcAdapter $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: android.content.IntentFilter[];

        r4 := @parameter3: java.lang.String[][];

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>()>();

        throw $r7;

     label2:
        $z0 = virtualinvoke r1.<android.app.Activity: boolean isResumed()>();

        if $z0 != 0 goto label3;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Foreground dispatch can only be enabled when your activity is resumed");

        throw $r12;

     label3:
        r5 = null;

        if r4 == null goto label7;

     label4:
        i0 = lengthof r4;

     label5:
        r5 = null;

        if i0 <= 0 goto label7;

     label6:
        $r11 = new android.nfc.TechListParcel;

        specialinvoke $r11.<android.nfc.TechListParcel: void <init>(java.lang.String[][])>(r4);

        r5 = $r11;

     label7:
        $r8 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        $r9 = r0.<android.nfc.NfcAdapter: android.app.OnActivityPausedListener mForegroundDispatchListener>;

        virtualinvoke $r8.<android.app.ActivityThread: void registerOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>(r1, $r9);

        $r10 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r10.<android.nfc.INfcAdapter: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>(r2, r3, r5);

     label8:
        return;

     label9:
        $r13 := @caughtexception;

        r6 = $r13;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r6);

        return;

        catch android.os.RemoteException from label4 to label5 with label9;
        catch android.os.RemoteException from label6 to label7 with label9;
        catch android.os.RemoteException from label7 to label8 with label9;
    }

    public void enableForegroundNdefPush(android.app.Activity, android.nfc.NdefMessage)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.nfc.NdefMessage r2;
        java.lang.NullPointerException $r3;
        android.nfc.NfcActivityManager $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.nfc.NdefMessage;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label2:
        virtualinvoke r0.<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>(r1);

        $r4 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r4.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r1, r2, 0);

        return;
    }

    public boolean enableNdefPush()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean enableNdefPush()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void enableReaderMode(android.app.Activity, android.nfc.NfcAdapter$ReaderCallback, int, android.os.Bundle)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        android.nfc.NfcAdapter$ReaderCallback r2;
        int i0;
        android.os.Bundle r3;
        android.nfc.NfcActivityManager $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.nfc.NfcAdapter$ReaderCallback;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r4 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r4.<android.nfc.NfcActivityManager: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter$ReaderCallback,int,android.os.Bundle)>(r1, r2, i0, r3);

        return;
    }

    void enforceResumed(android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.app.Activity r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.app.Activity;

        $z0 = virtualinvoke r1.<android.app.Activity: boolean isResumed()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("API cannot be called while activity is paused");

        throw $r2;

     label1:
        return;
    }

    public int getAdapterState()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        int i0;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        i0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: int getState()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.nfc.INfcCardEmulation getCardEmulationService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcCardEmulation $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcCardEmulation sCardEmulationService>;

        return $r1;
    }

    public android.content.Context getContext()
    {
        android.nfc.NfcAdapter r0;
        android.content.Context $r1;

        r0 := @this: android.nfc.NfcAdapter;

        $r1 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        return $r1;
    }

    public android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r8;
        android.nfc.INfcAdapterExtras r2;
        android.content.Context $r3, $r4;
        android.nfc.INfcAdapter $r5;
        java.lang.String $r6;
        java.lang.UnsupportedOperationException $r7;

        r0 := @this: android.nfc.NfcAdapter;

        $r3 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        if $r3 != null goto label1;

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("You need a context on NfcAdapter to use the  NFC extras APIs");

        throw $r7;

     label1:
        $r5 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        $r4 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        $r6 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        r2 = interfaceinvoke $r5.<android.nfc.INfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>($r6);

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    int getSdkVersion()
    {
        android.nfc.NfcAdapter r0;
        android.content.Context $r1, $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0;

        r0 := @this: android.nfc.NfcAdapter;

        $r1 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        if $r1 != null goto label1;

        return 9;

     label1:
        $r2 = r0.<android.nfc.NfcAdapter: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        return $i0;
    }

    public android.nfc.INfcAdapter getService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcAdapter $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        return $r1;
    }

    public android.nfc.INfcTag getTagService()
    {
        android.nfc.NfcAdapter r0;
        android.nfc.INfcTag $r1;

        r0 := @this: android.nfc.NfcAdapter;

        virtualinvoke r0.<android.nfc.NfcAdapter: boolean isEnabled()>();

        $r1 = <android.nfc.NfcAdapter: android.nfc.INfcTag sTagService>;

        return $r1;
    }

    public boolean isEnabled()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        int i0;
        boolean z0;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        i0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: int getState()>();

     label2:
        z0 = 0;

        if i0 != 3 goto label3;

        z0 = 1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean isNdefPushEnabled()
    {
        android.nfc.NfcAdapter r0;
        android.os.RemoteException r1, $r3;
        boolean z0;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        z0 = interfaceinvoke $r2.<android.nfc.INfcAdapter: boolean isNdefPushEnabled()>();

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setBeamPushUris(android.net.Uri[], android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.net.Uri[] r1;
        android.app.Activity r2;
        int i0, i1;
        android.net.Uri r3;
        java.lang.String r4;
        android.nfc.NfcActivityManager $r5;
        java.lang.IllegalArgumentException $r6;
        boolean $z0, $z1;
        java.lang.NullPointerException $r7, $r8;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.net.Uri[];

        r2 := @parameter1: android.app.Activity;

        if r2 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r8;

     label1:
        if r1 == null goto label6;

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        r3 = r1[i1];

        if r3 != null goto label3;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Uri not allowed to be null");

        throw $r7;

     label3:
        r4 = virtualinvoke r3.<android.net.Uri: java.lang.String getScheme()>();

        if r4 == null goto label4;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("content");

        if $z1 != 0 goto label5;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI needs to have either scheme file or scheme content");

        throw $r6;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        $r5 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r5.<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])>(r2, r1);

        return;
    }

    public void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback, android.app.Activity)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$CreateBeamUrisCallback r1;
        android.app.Activity r2;
        android.nfc.NfcActivityManager $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$CreateBeamUrisCallback;

        r2 := @parameter1: android.app.Activity;

        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r4;

     label1:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)>(r2, r1);

        return;
    }

    public void setNdefPushMessage(android.nfc.NdefMessage, android.app.Activity, int)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NdefMessage r1;
        android.app.Activity r2;
        int i0;
        android.nfc.NfcActivityManager $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NdefMessage;

        r2 := @parameter1: android.app.Activity;

        i0 := @parameter2: int;

        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r4;

     label1:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r2, r1, i0);

        return;
    }

    public transient void setNdefPushMessage(android.nfc.NdefMessage, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NdefMessage r1;
        android.app.Activity r2, r4;
        android.app.Activity[] r3;
        int i0, i1, i2;
        java.lang.IllegalStateException r5, $r10;
        android.nfc.NfcActivityManager $r6, $r7;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NdefMessage;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.app.Activity[];

        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

        if r2 != null goto label04;

     label01:
        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r9;

     label02:
        $r10 := @caughtexception;

        r5 = $r10;

        if i0 >= 16 goto label12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", r5);

     label03:
        return;

     label04:
        $r6 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r6.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r2, r1, 0);

        i1 = lengthof r3;

     label05:
        i2 = 0;

     label06:
        if i2 >= i1 goto label03;

     label07:
        r4 = r3[i2];

     label08:
        if r4 != null goto label10;

     label09:
        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw $r8;

     label10:
        $r7 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r7.<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>(r4, r1, 0);

     label11:
        i2 = i2 + 1;

        goto label06;

     label12:
        throw r5;

        catch java.lang.IllegalStateException from label01 to label02 with label02;
        catch java.lang.IllegalStateException from label04 to label05 with label02;
        catch java.lang.IllegalStateException from label07 to label08 with label02;
        catch java.lang.IllegalStateException from label09 to label10 with label02;
        catch java.lang.IllegalStateException from label10 to label11 with label02;
    }

    public void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback, android.app.Activity, int)
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$CreateNdefMessageCallback r1;
        android.app.Activity r2;
        int i0;
        android.nfc.NfcActivityManager $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$CreateNdefMessageCallback;

        r2 := @parameter1: android.app.Activity;

        i0 := @parameter2: int;

        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r4;

     label1:
        $r3 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r3.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r2, r1, i0);

        return;
    }

    public transient void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$CreateNdefMessageCallback r1;
        android.app.Activity r2, r4;
        android.app.Activity[] r3;
        int i0, i1, i2;
        java.lang.IllegalStateException r5, $r10;
        android.nfc.NfcActivityManager $r6, $r7;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$CreateNdefMessageCallback;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.app.Activity[];

        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

        if r2 != null goto label04;

     label01:
        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r9;

     label02:
        $r10 := @caughtexception;

        r5 = $r10;

        if i0 >= 16 goto label12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", r5);

     label03:
        return;

     label04:
        $r6 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r6.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r2, r1, 0);

        i1 = lengthof r3;

     label05:
        i2 = 0;

     label06:
        if i2 >= i1 goto label03;

     label07:
        r4 = r3[i2];

     label08:
        if r4 != null goto label10;

     label09:
        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw $r8;

     label10:
        $r7 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r7.<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback,int)>(r4, r1, 0);

     label11:
        i2 = i2 + 1;

        goto label06;

     label12:
        throw r5;

        catch java.lang.IllegalStateException from label01 to label02 with label02;
        catch java.lang.IllegalStateException from label04 to label05 with label02;
        catch java.lang.IllegalStateException from label07 to label08 with label02;
        catch java.lang.IllegalStateException from label09 to label10 with label02;
        catch java.lang.IllegalStateException from label10 to label11 with label02;
    }

    public transient void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback, android.app.Activity, android.app.Activity[])
    {
        android.nfc.NfcAdapter r0;
        android.nfc.NfcAdapter$OnNdefPushCompleteCallback r1;
        android.app.Activity r2, r4;
        android.app.Activity[] r3;
        int i0, i1, i2;
        java.lang.IllegalStateException r5, $r10;
        android.nfc.NfcActivityManager $r6, $r7;
        java.lang.NullPointerException $r8, $r9;

        r0 := @this: android.nfc.NfcAdapter;

        r1 := @parameter0: android.nfc.NfcAdapter$OnNdefPushCompleteCallback;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.app.Activity[];

        i0 = virtualinvoke r0.<android.nfc.NfcAdapter: int getSdkVersion()>();

        if r2 != null goto label04;

     label01:
        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("activity cannot be null");

        throw $r9;

     label02:
        $r10 := @caughtexception;

        r5 = $r10;

        if i0 >= 16 goto label12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NFC", "Cannot call API with Activity that has already been destroyed", r5);

     label03:
        return;

     label04:
        $r6 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r6.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r2, r1);

        i1 = lengthof r3;

     label05:
        i2 = 0;

     label06:
        if i2 >= i1 goto label03;

     label07:
        r4 = r3[i2];

     label08:
        if r4 != null goto label10;

     label09:
        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("activities cannot contain null");

        throw $r8;

     label10:
        $r7 = r0.<android.nfc.NfcAdapter: android.nfc.NfcActivityManager mNfcActivityManager>;

        virtualinvoke $r7.<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>(r4, r1);

     label11:
        i2 = i2 + 1;

        goto label06;

     label12:
        throw r5;

        catch java.lang.IllegalStateException from label01 to label02 with label02;
        catch java.lang.IllegalStateException from label04 to label05 with label02;
        catch java.lang.IllegalStateException from label07 to label08 with label02;
        catch java.lang.IllegalStateException from label09 to label10 with label02;
        catch java.lang.IllegalStateException from label10 to label11 with label02;
    }

    public void setP2pModes(int, int)
    {
        android.nfc.NfcAdapter r0;
        int i0, i1;
        android.os.RemoteException r1, $r3;
        android.nfc.INfcAdapter $r2;

        r0 := @this: android.nfc.NfcAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = <android.nfc.NfcAdapter: android.nfc.INfcAdapter sService>;

        interfaceinvoke $r2.<android.nfc.INfcAdapter: void setP2pModes(int,int)>(i0, i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        virtualinvoke r0.<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>(r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
