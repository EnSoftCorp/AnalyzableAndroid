public class android.os.Process extends java.lang.Object
{
    public static final java.lang.String ANDROID_SHARED_MEDIA;
    public static final int BLUETOOTH_UID;
    public static final int DRM_UID;
    public static final int FIRST_APPLICATION_UID;
    public static final int FIRST_ISOLATED_UID;
    public static final int FIRST_SHARED_APPLICATION_GID;
    public static final java.lang.String GOOGLE_SHARED_APP_CONTENT;
    public static final int LAST_APPLICATION_UID;
    public static final int LAST_ISOLATED_UID;
    public static final int LAST_SHARED_APPLICATION_GID;
    private static final java.lang.String LOG_TAG;
    public static final int LOG_UID;
    public static final int MEDIA_RW_GID;
    public static final int MEDIA_UID;
    public static final int NFC_UID;
    public static final int PACKAGE_INFO_GID;
    public static final int PHONE_UID;
    public static final int PROC_COMBINE;
    public static final int PROC_OUT_FLOAT;
    public static final int PROC_OUT_LONG;
    public static final int PROC_OUT_STRING;
    public static final int PROC_PARENS;
    public static final int PROC_QUOTES;
    public static final int PROC_SPACE_TERM;
    public static final int PROC_TAB_TERM;
    public static final int PROC_TERM_MASK;
    public static final int PROC_ZERO_TERM;
    public static final int SCHED_BATCH;
    public static final int SCHED_FIFO;
    public static final int SCHED_IDLE;
    public static final int SCHED_OTHER;
    public static final int SCHED_RR;
    public static final int SHELL_UID;
    public static final int SIGNAL_KILL;
    public static final int SIGNAL_QUIT;
    public static final int SIGNAL_USR1;
    public static final int SYSTEM_UID;
    public static final int THREAD_GROUP_AUDIO_APP;
    public static final int THREAD_GROUP_AUDIO_SYS;
    public static final int THREAD_GROUP_BG_NONINTERACTIVE;
    public static final int THREAD_GROUP_DEFAULT;
    private static final int THREAD_GROUP_FOREGROUND;
    public static final int THREAD_GROUP_SYSTEM;
    public static final int THREAD_PRIORITY_AUDIO;
    public static final int THREAD_PRIORITY_BACKGROUND;
    public static final int THREAD_PRIORITY_DEFAULT;
    public static final int THREAD_PRIORITY_DISPLAY;
    public static final int THREAD_PRIORITY_FOREGROUND;
    public static final int THREAD_PRIORITY_LESS_FAVORABLE;
    public static final int THREAD_PRIORITY_LOWEST;
    public static final int THREAD_PRIORITY_MORE_FAVORABLE;
    public static final int THREAD_PRIORITY_URGENT_AUDIO;
    public static final int THREAD_PRIORITY_URGENT_DISPLAY;
    public static final int VPN_UID;
    public static final int WIFI_UID;
    static final int ZYGOTE_RETRY_MILLIS;
    private static final java.lang.String ZYGOTE_SOCKET;
    static boolean sPreviousZygoteOpenFailed;
    static java.io.DataInputStream sZygoteInputStream;
    static android.net.LocalSocket sZygoteSocket;
    static java.io.BufferedWriter sZygoteWriter;

    public void <init>()
    {
        android.os.Process r0;

        r0 := @this: android.os.Process;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final native long getElapsedCpuTime();

    public static final native long getFreeMemory();

    public static final native int getGidForName(java.lang.String);

    public static final int getParentPid(int)
    {
        int i0, $i2;
        java.lang.String[] r0, $r2;
        long[] r1, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        long $l1;

        i0 := @parameter0: int;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "PPid:";

        r0 = $r2;

        $r3 = newarray (long)[1];

        $r3[0] = -1L;

        r1 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/status");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Process: void readProcLines(java.lang.String,java.lang.String[],long[])>($r8, r0, r1);

        $l1 = r1[0];

        $i2 = (int) $l1;

        return $i2;
    }

    public static final native int[] getPids(java.lang.String, int[]);

    public static final native int[] getPidsForCommands(java.lang.String[]);

    public static final native int getProcessGroup(int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native long getPss(int);

    public static final int getThreadGroupLeader(int)
    {
        int i0, $i2;
        java.lang.String[] r0, $r2;
        long[] r1, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        long $l1;

        i0 := @parameter0: int;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "Tgid:";

        r0 = $r2;

        $r3 = newarray (long)[1];

        $r3[0] = -1L;

        r1 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/status");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Process: void readProcLines(java.lang.String,java.lang.String[],long[])>($r8, r0, r1);

        $l1 = r1[0];

        $i2 = (int) $l1;

        return $i2;
    }

    public static final native int getThreadPriority(int) throws java.lang.IllegalArgumentException;

    public static final native long getTotalMemory();

    public static final native int getUidForName(java.lang.String);

    public static final int getUidForPid(int)
    {
        int i0, $i2;
        java.lang.String[] r0, $r2;
        long[] r1, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        long $l1;

        i0 := @parameter0: int;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "Uid:";

        r0 = $r2;

        $r3 = newarray (long)[1];

        $r3[0] = -1L;

        r1 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/status");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.Process: void readProcLines(java.lang.String,java.lang.String[],long[])>($r8, r0, r1);

        $l1 = r1[0];

        $i2 = (int) $l1;

        return $i2;
    }

    public static final boolean isIsolated()
    {
        int i0, $i1;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        if i0 < 99000 goto label1;

        if i0 > 99999 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final void killProcess(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <android.os.Process: void sendSignal(int,int)>(i0, 9);

        return;
    }

    public static final void killProcessQuiet(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <android.os.Process: void sendSignalQuiet(int,int)>(i0, 9);

        return;
    }

    public static final int myPid()
    {
        libcore.io.Os $r0;
        int $i0;

        $r0 = <libcore.io.Libcore: libcore.io.Os os>;

        $i0 = interfaceinvoke $r0.<libcore.io.Os: int getpid()>();

        return $i0;
    }

    public static final int myPpid()
    {
        libcore.io.Os $r0;
        int $i0;

        $r0 = <libcore.io.Libcore: libcore.io.Os os>;

        $i0 = interfaceinvoke $r0.<libcore.io.Os: int getppid()>();

        return $i0;
    }

    public static final int myTid()
    {
        libcore.io.Os $r0;
        int $i0;

        $r0 = <libcore.io.Libcore: libcore.io.Os os>;

        $i0 = interfaceinvoke $r0.<libcore.io.Os: int gettid()>();

        return $i0;
    }

    public static final int myUid()
    {
        libcore.io.Os $r0;
        int $i0;

        $r0 = <libcore.io.Libcore: libcore.io.Os os>;

        $i0 = interfaceinvoke $r0.<libcore.io.Os: int getuid()>();

        return $i0;
    }

    public static final android.os.UserHandle myUserHandle()
    {
        android.os.UserHandle $r0;
        int $i0, $i1;

        $r0 = new android.os.UserHandle;

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        specialinvoke $r0.<android.os.UserHandle: void <init>(int)>($i1);

        return $r0;
    }

    private static void openZygoteSocketIfNeeded() throws android.os.ZygoteStartFailedEx
    {
        byte b0;
        int i1, $i2;
        java.io.IOException r1, $r17, $r20;
        boolean $z0;
        android.net.LocalSocket $r3, $r4, $r6, $r9, $r10, $r14, $r19, $r21;
        android.os.ZygoteStartFailedEx $r5;
        android.net.LocalSocketAddress $r7;
        android.net.LocalSocketAddress$Namespace $r8;
        java.io.DataInputStream $r11;
        java.io.BufferedWriter $r12;
        java.io.InputStream $r13;
        java.io.OutputStreamWriter $r15;
        java.io.OutputStream $r16;
        java.lang.InterruptedException $r18;

        $z0 = <android.os.Process: boolean sPreviousZygoteOpenFailed>;

        if $z0 == 0 goto label06;

        b0 = 0;

     label01:
        i1 = 0;

     label02:
        $r3 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        if $r3 != null goto label05;

        $i2 = b0 + 1;

        if i1 >= $i2 goto label05;

        if i1 <= 0 goto label04;

     label03:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Zygote not up yet, sleeping...");

        staticinvoke <java.lang.Thread: void sleep(long)>(500L);

     label04:
        $r6 = new android.net.LocalSocket;

        specialinvoke $r6.<android.net.LocalSocket: void <init>()>();

        <android.os.Process: android.net.LocalSocket sZygoteSocket> = $r6;

        $r9 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        $r7 = new android.net.LocalSocketAddress;

        $r8 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r7.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("zygote", $r8);

        virtualinvoke $r9.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>($r7);

        $r11 = new java.io.DataInputStream;

        $r10 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        $r13 = virtualinvoke $r10.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        specialinvoke $r11.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r13);

        <android.os.Process: java.io.DataInputStream sZygoteInputStream> = $r11;

        $r12 = new java.io.BufferedWriter;

        $r15 = new java.io.OutputStreamWriter;

        $r14 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        $r16 = virtualinvoke $r14.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r15.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r16);

        specialinvoke $r12.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r15, 256);

        <android.os.Process: java.io.BufferedWriter sZygoteWriter> = $r12;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Process: zygote socket opened");

        <android.os.Process: boolean sPreviousZygoteOpenFailed> = 0;

     label05:
        $r4 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        if $r4 != null goto label11;

        <android.os.Process: boolean sPreviousZygoteOpenFailed> = 1;

        $r5 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r5.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("connect failed");

        throw $r5;

     label06:
        b0 = 10;

        goto label01;

     label07:
        $r20 := @caughtexception;

        $r19 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        if $r19 == null goto label09;

     label08:
        $r21 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        virtualinvoke $r21.<android.net.LocalSocket: void close()>();

     label09:
        <android.os.Process: android.net.LocalSocket sZygoteSocket> = null;

        i1 = i1 + 1;

        goto label02;

     label10:
        $r17 := @caughtexception;

        r1 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Process", "I/O exception on close after exception", r1);

        goto label09;

     label11:
        return;

     label12:
        $r18 := @caughtexception;

        goto label04;

        catch java.lang.InterruptedException from label03 to label04 with label12;
        catch java.io.IOException from label04 to label05 with label07;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public static final native boolean parseProcLine(byte[], int, int, int[], java.lang.String[], long[], float[]);

    public static final native boolean readProcFile(java.lang.String, int[], java.lang.String[], long[], float[]);

    public static final native void readProcLines(java.lang.String, java.lang.String[], long[]);

    public static final native void sendSignal(int, int);

    public static final native void sendSignalQuiet(int, int);

    public static final native void setArgV0(java.lang.String);

    public static final native void setCanSelfBackground(boolean);

    public static final native int setGid(int);

    public static final native boolean setOomAdj(int, int);

    public static final native void setProcessGroup(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native boolean setSwappiness(int, boolean);

    public static final native void setThreadGroup(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native void setThreadPriority(int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native void setThreadPriority(int, int) throws java.lang.IllegalArgumentException, java.lang.SecurityException;

    public static final native void setThreadScheduler(int, int, int) throws java.lang.IllegalArgumentException;

    public static final native int setUid(int);

    public static final android.os.Process$ProcessStartResult start(java.lang.String, java.lang.String, int, int, int[], int, int, int, java.lang.String, java.lang.String[])
    {
        java.lang.String r0, r1, r3;
        int i0, i1, i2, i3, i4;
        int[] r2;
        java.lang.String[] r4;
        android.os.ZygoteStartFailedEx r5, $r7;
        android.os.Process$ProcessStartResult r6;
        java.lang.RuntimeException $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: int[];

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: java.lang.String[];

     label1:
        r6 = staticinvoke <android.os.Process: android.os.Process$ProcessStartResult startViaZygote(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String[])>(r0, r1, i0, i1, r2, i2, i3, i4, r3, r4);

     label2:
        return r6;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Process", "Starting VM process through Zygote failed");

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Starting VM process through Zygote failed", r5);

        throw $r8;

        catch android.os.ZygoteStartFailedEx from label1 to label2 with label3;
    }

    private static android.os.Process$ProcessStartResult startViaZygote(java.lang.String, java.lang.String, int, int, int[], int, int, int, java.lang.String, java.lang.String[]) throws android.os.ZygoteStartFailedEx
    {
        java.lang.String r0, r1, r3, $r11, $r17, $r19, $r22, $r23, $r27, $r35;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        int[] r2;
        java.lang.String[] r4;
        java.util.ArrayList r5, $r8;
        java.lang.Throwable r6, $r36;
        java.lang.StringBuilder r7, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r21, $r24, $r25, $r26, $r28, $r29, $r30, $r31;
        android.os.Process$ProcessStartResult r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: int[];

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        r4 := @parameter9: java.lang.String[];

        entermonitor class "android/os/Process";

     label01:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r5 = $r8;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("--runtime-init");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setuid=");

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setgid=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

     label02:
        $i9 = i2 & 16;

        if $i9 == 0 goto label04;

     label03:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("--enable-jni-logging");

     label04:
        $i10 = i2 & 8;

        if $i10 == 0 goto label06;

     label05:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("--enable-safemode");

     label06:
        $i13 = i2 & 1;

        if $i13 == 0 goto label08;

     label07:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("--enable-debugger");

     label08:
        $i12 = i2 & 2;

        if $i12 == 0 goto label10;

     label09:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("--enable-checkjni");

     label10:
        $i11 = i2 & 4;

        if $i11 == 0 goto label12;

     label11:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("--enable-assert");

     label12:
        if i3 != 2 goto label22;

     label13:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-multiuser");

     label14:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--target-sdk-version=");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label15:
        if r2 == null goto label29;

     label16:
        $i14 = lengthof r2;

        if $i14 <= 0 goto label29;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        r7 = $r28;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--setgroups=");

        i6 = lengthof r2;

     label17:
        i5 = 0;

     label18:
        if i5 >= i6 goto label28;

        if i5 == 0 goto label20;

     label19:
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label20:
        $i15 = r2[i5];

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

     label21:
        i5 = i5 + 1;

        goto label18;

     label22:
        if i3 != 3 goto label14;

     label23:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>("--mount-external-multiuser-all");

     label24:
        goto label14;

     label25:
        $r36 := @caughtexception;

        r6 = $r36;

     label26:
        exitmonitor class "android/os/Process";

     label27:
        throw r6;

     label28:
        $r35 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r35);

     label29:
        if r1 == null goto label31;

     label30:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--nice-name=");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

     label31:
        if r3 == null goto label33;

     label32:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--seinfo=");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

     label33:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label34:
        if r4 == null goto label40;

     label35:
        i8 = lengthof r4;

     label36:
        i7 = 0;

     label37:
        if i7 >= i8 goto label40;

     label38:
        $r22 = r4[i7];

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label39:
        i7 = i7 + 1;

        goto label37;

     label40:
        r9 = staticinvoke <android.os.Process: android.os.Process$ProcessStartResult zygoteSendArgsAndGetResult(java.util.ArrayList)>(r5);

        exitmonitor class "android/os/Process";

     label41:
        return r9;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label28 to label29 with label25;
        catch java.lang.Throwable from label30 to label31 with label25;
        catch java.lang.Throwable from label32 to label33 with label25;
        catch java.lang.Throwable from label33 to label34 with label25;
        catch java.lang.Throwable from label35 to label36 with label25;
        catch java.lang.Throwable from label38 to label39 with label25;
        catch java.lang.Throwable from label40 to label41 with label25;
    }

    public static final boolean supportsProcesses()
    {
        return 1;
    }

    private static android.os.Process$ProcessStartResult zygoteSendArgsAndGetResult(java.util.ArrayList) throws android.os.ZygoteStartFailedEx
    {
        java.util.ArrayList r0;
        java.io.IOException r1, r2, $r18, $r21;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r3, $r6;
        android.os.Process$ProcessStartResult r4, $r9;
        java.io.BufferedWriter $r5, $r7, $r8, $r14, $r16;
        java.io.DataInputStream $r10, $r11;
        boolean $z0;
        java.lang.Object $r12;
        android.os.ZygoteStartFailedEx $r13, $r15, $r20;
        android.net.LocalSocket $r17, $r19;

        r0 := @parameter0: java.util.ArrayList;

        staticinvoke <android.os.Process: void openZygoteSocketIfNeeded()>();

     label01:
        $r5 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

        $i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r5.<java.io.BufferedWriter: void write(java.lang.String)>($r6);

        $r7 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

        virtualinvoke $r7.<java.io.BufferedWriter: void newLine()>();

        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label10;

     label04:
        $r12 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (java.lang.String) $r12;

        $i5 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(10);

        if $i5 < 0 goto label08;

        $r15 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r15.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("embedded newlines not allowed");

        throw $r15;

     label05:
        $r18 := @caughtexception;

        r1 = $r18;

     label06:
        $r17 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        if $r17 == null goto label07;

        $r19 = <android.os.Process: android.net.LocalSocket sZygoteSocket>;

        virtualinvoke $r19.<android.net.LocalSocket: void close()>();

     label07:
        <android.os.Process: android.net.LocalSocket sZygoteSocket> = null;

        $r20 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r20.<android.os.ZygoteStartFailedEx: void <init>(java.lang.Throwable)>(r1);

        throw $r20;

     label08:
        $r14 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

        virtualinvoke $r14.<java.io.BufferedWriter: void write(java.lang.String)>(r3);

        $r16 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

        virtualinvoke $r16.<java.io.BufferedWriter: void newLine()>();

     label09:
        i1 = i1 + 1;

        goto label03;

     label10:
        $r8 = <android.os.Process: java.io.BufferedWriter sZygoteWriter>;

        virtualinvoke $r8.<java.io.BufferedWriter: void flush()>();

        $r9 = new android.os.Process$ProcessStartResult;

        specialinvoke $r9.<android.os.Process$ProcessStartResult: void <init>()>();

        r4 = $r9;

        $r10 = <android.os.Process: java.io.DataInputStream sZygoteInputStream>;

        $i4 = virtualinvoke $r10.<java.io.DataInputStream: int readInt()>();

        r4.<android.os.Process$ProcessStartResult: int pid> = $i4;

        $i3 = r4.<android.os.Process$ProcessStartResult: int pid>;

        if $i3 >= 0 goto label11;

        $r13 = new android.os.ZygoteStartFailedEx;

        specialinvoke $r13.<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>("fork() failed");

        throw $r13;

     label11:
        $r11 = <android.os.Process: java.io.DataInputStream sZygoteInputStream>;

        $z0 = virtualinvoke $r11.<java.io.DataInputStream: boolean readBoolean()>();

        r4.<android.os.Process$ProcessStartResult: boolean usingWrapper> = $z0;

     label12:
        return r4;

     label13:
        $r21 := @caughtexception;

        r2 = $r21;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Process", "I/O exception on routine close", r2);

        goto label07;

        catch java.io.IOException from label01 to label02 with label05;
        catch java.io.IOException from label04 to label05 with label05;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.io.IOException from label08 to label09 with label05;
        catch java.io.IOException from label10 to label11 with label05;
        catch java.io.IOException from label11 to label12 with label05;
    }

    public static void <clinit>()
    {
        <android.os.Process: java.lang.String ZYGOTE_SOCKET> = "zygote";

        <android.os.Process: int ZYGOTE_RETRY_MILLIS> = 500;

        <android.os.Process: int WIFI_UID> = 1010;

        <android.os.Process: int VPN_UID> = 1016;

        <android.os.Process: int THREAD_PRIORITY_URGENT_DISPLAY> = -8;

        <android.os.Process: int THREAD_PRIORITY_URGENT_AUDIO> = -19;

        <android.os.Process: int THREAD_PRIORITY_MORE_FAVORABLE> = -1;

        <android.os.Process: int THREAD_PRIORITY_LOWEST> = 19;

        <android.os.Process: int THREAD_PRIORITY_LESS_FAVORABLE> = 1;

        <android.os.Process: int THREAD_PRIORITY_FOREGROUND> = -2;

        <android.os.Process: int THREAD_PRIORITY_DISPLAY> = -4;

        <android.os.Process: int THREAD_PRIORITY_DEFAULT> = 0;

        <android.os.Process: int THREAD_PRIORITY_BACKGROUND> = 10;

        <android.os.Process: int THREAD_PRIORITY_AUDIO> = -16;

        <android.os.Process: int THREAD_GROUP_SYSTEM> = 2;

        <android.os.Process: int THREAD_GROUP_FOREGROUND> = 1;

        <android.os.Process: int THREAD_GROUP_DEFAULT> = -1;

        <android.os.Process: int THREAD_GROUP_BG_NONINTERACTIVE> = 0;

        <android.os.Process: int THREAD_GROUP_AUDIO_SYS> = 4;

        <android.os.Process: int THREAD_GROUP_AUDIO_APP> = 3;

        <android.os.Process: int SYSTEM_UID> = 1000;

        <android.os.Process: int SIGNAL_USR1> = 10;

        <android.os.Process: int SIGNAL_QUIT> = 3;

        <android.os.Process: int SIGNAL_KILL> = 9;

        <android.os.Process: int SHELL_UID> = 2000;

        <android.os.Process: int SCHED_RR> = 2;

        <android.os.Process: int SCHED_OTHER> = 0;

        <android.os.Process: int SCHED_IDLE> = 5;

        <android.os.Process: int SCHED_FIFO> = 1;

        <android.os.Process: int SCHED_BATCH> = 3;

        <android.os.Process: int PROC_ZERO_TERM> = 0;

        <android.os.Process: int PROC_TERM_MASK> = 255;

        <android.os.Process: int PROC_TAB_TERM> = 9;

        <android.os.Process: int PROC_SPACE_TERM> = 32;

        <android.os.Process: int PROC_QUOTES> = 1024;

        <android.os.Process: int PROC_PARENS> = 512;

        <android.os.Process: int PROC_OUT_STRING> = 4096;

        <android.os.Process: int PROC_OUT_LONG> = 8192;

        <android.os.Process: int PROC_OUT_FLOAT> = 16384;

        <android.os.Process: int PROC_COMBINE> = 256;

        <android.os.Process: int PHONE_UID> = 1001;

        <android.os.Process: int PACKAGE_INFO_GID> = 1032;

        <android.os.Process: int NFC_UID> = 1027;

        <android.os.Process: int MEDIA_UID> = 1013;

        <android.os.Process: int MEDIA_RW_GID> = 1023;

        <android.os.Process: int LOG_UID> = 1007;

        <android.os.Process: java.lang.String LOG_TAG> = "Process";

        <android.os.Process: int LAST_SHARED_APPLICATION_GID> = 59999;

        <android.os.Process: int LAST_ISOLATED_UID> = 99999;

        <android.os.Process: int LAST_APPLICATION_UID> = 19999;

        <android.os.Process: java.lang.String GOOGLE_SHARED_APP_CONTENT> = "com.google.process.content";

        <android.os.Process: int FIRST_SHARED_APPLICATION_GID> = 50000;

        <android.os.Process: int FIRST_ISOLATED_UID> = 99000;

        <android.os.Process: int FIRST_APPLICATION_UID> = 10000;

        <android.os.Process: int DRM_UID> = 1019;

        <android.os.Process: int BLUETOOTH_UID> = 1002;

        <android.os.Process: java.lang.String ANDROID_SHARED_MEDIA> = "com.android.process.media";

        return;
    }
}
