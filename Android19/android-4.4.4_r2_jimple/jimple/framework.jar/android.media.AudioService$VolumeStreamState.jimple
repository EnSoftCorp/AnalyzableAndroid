public class android.media.AudioService$VolumeStreamState extends java.lang.Object
{
    private java.util.ArrayList mDeathHandlers;
    private final java.util.concurrent.ConcurrentHashMap mIndex;
    private int mIndexMax;
    private final int mStreamType;
    private java.lang.String mVolumeIndexSettingName;
    final android.media.AudioService this$0;

    private void <init>(android.media.AudioService, java.lang.String, int)
    {
        android.media.AudioService$VolumeStreamState r0;
        android.media.AudioService r1;
        java.lang.String r2;
        int i0, $i1, $i2, $i4, $i5;
        java.util.concurrent.ConcurrentHashMap $r3;
        int[] $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.media.AudioService;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(8, 0.75F, 4);

        r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex> = $r3;

        r0.<android.media.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName> = r2;

        r0.<android.media.AudioService$VolumeStreamState: int mStreamType> = i0;

        $r4 = staticinvoke <android.media.AudioService: int[] access$3300()>();

        $i1 = $r4[i0];

        r0.<android.media.AudioService$VolumeStreamState: int mIndexMax> = $i1;

        $i2 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        staticinvoke <android.media.AudioSystem: int initStreamVolume(int,int,int)>(i0, 0, $i2);

        $i4 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $i5 = 10 * $i4;

        r0.<android.media.AudioService$VolumeStreamState: int mIndexMax> = $i5;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers> = $r5;

        virtualinvoke r0.<android.media.AudioService$VolumeStreamState: void readSettings()>();

        return;
    }

    void <init>(android.media.AudioService, java.lang.String, int, android.media.AudioService$1)
    {
        android.media.AudioService$VolumeStreamState r0;
        android.media.AudioService r1;
        java.lang.String r2;
        int i0;
        android.media.AudioService$1 r3;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.media.AudioService;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.media.AudioService$1;

        specialinvoke r0.<android.media.AudioService$VolumeStreamState: void <init>(android.media.AudioService,java.lang.String,int)>(r1, r2, i0);

        return;
    }

    static java.util.ArrayList access$1700(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $r1 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        return $r1;
    }

    static boolean access$300(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        boolean $z0;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $z0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: boolean isMuted()>();

        return $z0;
    }

    static int access$4200(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        return $i0;
    }

    static void access$500(android.media.AudioService$VolumeStreamState, java.io.PrintWriter)
    {
        android.media.AudioService$VolumeStreamState r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<android.media.AudioService$VolumeStreamState: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    static int access$5500(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        return $i0;
    }

    static java.util.concurrent.ConcurrentHashMap access$900(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $r1 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        return $r1;
    }

    private void dump(java.io.PrintWriter)
    {
        android.media.AudioService$VolumeStreamState r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r8, $r14;
        java.lang.StringBuilder $r7, $r11, $r12, $r15, $r17;
        java.lang.Integer $r9, $r13;
        java.lang.String $r10, $r16;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Mute count: ");

        $i0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: int muteCount()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Current: ");

        $r4 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.Integer) $r8;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.Integer) $r14;

        $i3 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i2 = 5 + $i3;

        $i4 = $i2 / 10;

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        goto label1;

     label2:
        return;
    }

    private android.media.AudioService$VolumeStreamState$VolumeDeathHandler getDeathHandler(android.os.IBinder, boolean)
    {
        android.media.AudioService$VolumeStreamState r0;
        android.os.IBinder r1, $r8;
        boolean z0;
        int i0, i1;
        android.media.AudioService$VolumeStreamState$VolumeDeathHandler r2, r3, $r5;
        java.util.ArrayList $r4, $r6;
        java.lang.Object $r7;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r4 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.media.AudioService$VolumeStreamState$VolumeDeathHandler) $r7;

        $r8 = staticinvoke <android.media.AudioService$VolumeStreamState$VolumeDeathHandler: android.os.IBinder access$4300(android.media.AudioService$VolumeStreamState$VolumeDeathHandler)>(r3);

        if r1 != $r8 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label5;

        $r5 = new android.media.AudioService$VolumeStreamState$VolumeDeathHandler;

        specialinvoke $r5.<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: void <init>(android.media.AudioService$VolumeStreamState,android.os.IBinder)>(r0, r1);

        r2 = $r5;

     label4:
        return r2;

     label5:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioService", "stream was not muted by this client");

        r2 = null;

        goto label4;
    }

    private int getValidIndex(int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, $i1, $i2;
        android.media.AudioService $r1;
        boolean $z0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        if i0 >= 0 goto label2;

        i0 = 0;

     label1:
        return i0;

     label2:
        $r1 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $z0 = staticinvoke <android.media.AudioService: boolean access$3400(android.media.AudioService)>($r1);

        if $z0 != 0 goto label3;

        $i2 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        if i0 <= $i2 goto label1;

     label3:
        $i1 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        return $i1;
    }

    private boolean isMuted()
    {
        android.media.AudioService$VolumeStreamState r0;
        java.lang.Throwable r1, $r2;
        int i0;
        boolean z0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        entermonitor r0;

     label1:
        i0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: int muteCount()>();

     label2:
        if i0 == 0 goto label4;

        z0 = 1;

     label3:
        exitmonitor r0;

        return z0;

     label4:
        z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    private int muteCount()
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, i1, i2, i3;
        java.lang.Throwable r1, $r6;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        android.media.AudioService$VolumeStreamState$VolumeDeathHandler $r5;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        entermonitor r0;

        i0 = 0;

     label1:
        $r2 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label2:
        i2 = 0;

     label3:
        if i2 >= i1 goto label6;

     label4:
        $r3 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r5 = (android.media.AudioService$VolumeStreamState$VolumeDeathHandler) $r4;

        i3 = staticinvoke <android.media.AudioService$VolumeStreamState$VolumeDeathHandler: int access$1800(android.media.AudioService$VolumeStreamState$VolumeDeathHandler)>($r5);

     label5:
        i0 = i0 + i3;

        i2 = i2 + 1;

        goto label3;

     label6:
        exitmonitor r0;

        return i0;

     label7:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public boolean adjustIndex(int, int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(i1);

        $i3 = i0 + $i2;

        $z0 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int)>($i3, i1);

        return $z0;
    }

    public void applyAllVolumes()
    {
        android.media.AudioService$VolumeStreamState r0;
        java.lang.Throwable r1, $r12;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        boolean $z0, $z1, $z2, $z3;
        java.util.concurrent.ConcurrentHashMap $r4;
        java.util.Set $r5;
        java.lang.Object $r6, $r7, $r9;
        java.lang.Integer $r8, $r10;
        android.media.AudioService $r11;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        entermonitor r0;

     label01:
        $z0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: boolean isMuted()>();

        if $z0 == 0 goto label11;

     label02:
        i0 = 0;

     label03:
        $i5 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        staticinvoke <android.media.AudioSystem: int setStreamVolumeIndex(int,int,int)>($i5, i0, 1073741824);

        $r4 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.Integer) $r6;

        i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label05:
        if i1 == 1073741824 goto label04;

     label06:
        $z2 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: boolean isMuted()>();

        if $z2 == 0 goto label13;

     label07:
        i2 = 0;

     label08:
        $i9 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        staticinvoke <android.media.AudioSystem: int setStreamVolumeIndex(int,int,int)>($i9, i2, i1);

     label09:
        goto label04;

     label10:
        $r12 := @caughtexception;

        r1 = $r12;

        exitmonitor r0;

        throw r1;

     label11:
        $i3 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(1073741824);

        $i4 = 5 + $i3;

        i0 = $i4 / 10;

     label12:
        goto label03;

     label13:
        $i7 = i1 & 896;

        if $i7 == 0 goto label16;

     label14:
        $r11 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $z3 = staticinvoke <android.media.AudioService: boolean access$3800(android.media.AudioService)>($r11);

        if $z3 == 0 goto label16;

        $i11 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $i13 = 5 + $i11;

        i2 = $i13 / 10;

     label15:
        goto label08;

     label16:
        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.Integer) $r9;

        $i8 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $i10 = 5 + $i8;

        i2 = $i10 / 10;

     label17:
        goto label08;

     label18:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label14 to label15 with label10;
        catch java.lang.Throwable from label16 to label17 with label10;
    }

    public void applyDeviceVolume(int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8;
        boolean $z0, $z1;
        android.media.AudioService $r1;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: boolean isMuted()>();

        if $z0 == 0 goto label2;

        i1 = 0;

     label1:
        $i5 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        staticinvoke <android.media.AudioSystem: int setStreamVolumeIndex(int,int,int)>($i5, i1, i0);

        return;

     label2:
        $i2 = i0 & 896;

        if $i2 == 0 goto label3;

        $r1 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $z1 = staticinvoke <android.media.AudioService: boolean access$3800(android.media.AudioService)>($r1);

        if $z1 == 0 goto label3;

        $i7 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $i8 = 5 + $i7;

        i1 = $i8 / 10;

        goto label1;

     label3:
        $i3 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(i0);

        $i4 = 5 + $i3;

        i1 = $i4 / 10;

        goto label1;
    }

    public int getIndex(int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, i1;
        java.lang.Throwable r1, $r9;
        java.lang.Integer r2, $r4, $r7;
        java.util.concurrent.ConcurrentHashMap $r3, $r6;
        java.lang.Object $r5, $r8;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r3 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (java.lang.Integer) $r5;

     label2:
        if r2 != null goto label4;

     label3:
        $r6 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);

        $r8 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r7);

        r2 = (java.lang.Integer) $r8;

     label4:
        i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

     label5:
        exitmonitor r0;

        return i1;

     label6:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int getMaxIndex()
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        return $i0;
    }

    public java.lang.String getSettingNameForDevice(int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0;
        java.lang.String r1, r2, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        r1 = r0.<android.media.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName>;

        r2 = staticinvoke <android.media.AudioSystem: java.lang.String getDeviceName(int)>(i0);

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int getStreamType()
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        return $i0;
    }

    public void mute(android.os.IBinder, boolean)
    {
        android.media.AudioService$VolumeStreamState r0;
        android.os.IBinder r1;
        boolean z0;
        java.lang.Throwable r2, $r8;
        android.media.AudioService$VolumeStreamState$VolumeDeathHandler r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        int $i0;
        java.lang.String $r7;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        r3 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService$VolumeStreamState$VolumeDeathHandler getDeathHandler(android.os.IBinder,boolean)>(r1, z0);

     label2:
        if r3 != null goto label5;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get client death handler for stream: ");

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioService", $r7);

     label4:
        exitmonitor r0;

        return;

     label5:
        virtualinvoke r3.<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: void mute(boolean)>(z0);

     label6:
        goto label4;

     label7:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void readSettings()
    {
        android.media.AudioService$VolumeStreamState r0;
        java.lang.Throwable r1, r3, $r29, $r32;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Boolean r2, $r11;
        java.lang.String r4;
        java.util.concurrent.ConcurrentHashMap r5, $r12, $r21, $r27;
        java.lang.Integer r6, $r13, $r14, $r20, $r23, $r25, $r26, $r31;
        boolean $z0, $z1;
        android.media.AudioService $r7, $r9, $r10, $r16, $r19;
        int[] $r8, $r18, $r28;
        android.content.ContentResolver $r17;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        entermonitor r0;

     label01:
        $r7 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $z0 = staticinvoke <android.media.AudioService: boolean access$3400(android.media.AudioService)>($r7);

        if $z0 == 0 goto label03;

        $r27 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);

        $i19 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        virtualinvoke $r27.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r31);

     label02:
        exitmonitor r0;

        return;

     label03:
        $i8 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if $i8 == 1 goto label04;

        $i10 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if $i10 != 7 goto label28;

     label04:
        $r8 = <android.media.AudioManager: int[] DEFAULT_STREAM_VOLUME>;

        $i7 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $i9 = $r8[$i7];

        i0 = 10 * $i9;

        $r9 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        r2 = staticinvoke <android.media.AudioService: java.lang.Boolean access$3500(android.media.AudioService)>($r9);

        entermonitor r2;

     label05:
        $r10 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r11 = staticinvoke <android.media.AudioService: java.lang.Boolean access$3500(android.media.AudioService)>($r10);

        $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label06;

        i0 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

     label06:
        exitmonitor r2;

     label07:
        $r12 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r12.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

     label08:
        goto label02;

     label09:
        $r29 := @caughtexception;

        r1 = $r29;

        exitmonitor r0;

        throw r1;

     label10:
        $r32 := @caughtexception;

        r3 = $r32;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        $i12 = i3 ^ -1;

        i1 = i1 & $i12;

     label14:
        r4 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: java.lang.String getSettingNameForDevice(int)>(i3);

     label15:
        if i3 != 1073741824 goto label31;

     label16:
        $r28 = <android.media.AudioManager: int[] DEFAULT_STREAM_VOLUME>;

        $i18 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        i4 = $r28[$i18];

     label17:
        $r16 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r17 = staticinvoke <android.media.AudioService: android.content.ContentResolver access$3600(android.media.AudioService)>($r16);

        i5 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r17, r4, i4, -2);

     label18:
        if i5 == -1 goto label30;

     label19:
        $r19 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r18 = staticinvoke <android.media.AudioService: int[] access$3700(android.media.AudioService)>($r19);

        $i13 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $i15 = $r18[$i13];

        if $i15 != 3 goto label26;

     label20:
        $i16 = i3 & 31744;

        if $i16 == 0 goto label26;

     label21:
        r5 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

     label22:
        if i5 == 0 goto label32;

     label23:
        i6 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

     label24:
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        virtualinvoke r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r25);

     label25:
        goto label30;

     label26:
        $r21 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $i14 = i5 * 10;

        $i17 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: int getValidIndex(int)>($i14);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        virtualinvoke $r21.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r23);

     label27:
        goto label30;

     label28:
        i1 = 1073807359;

        i2 = 0;

     label29:
        if i1 == 0 goto label02;

        i3 = 1 << i2;

        $i11 = i3 & i1;

        if $i11 != 0 goto label13;

     label30:
        i2 = i2 + 1;

        goto label29;

     label31:
        i4 = -1;

        goto label17;

     label32:
        i6 = 0;

        goto label24;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label17 to label18 with label09;
        catch java.lang.Throwable from label19 to label20 with label09;
        catch java.lang.Throwable from label21 to label22 with label09;
        catch java.lang.Throwable from label23 to label24 with label09;
        catch java.lang.Throwable from label24 to label25 with label09;
        catch java.lang.Throwable from label26 to label27 with label09;
    }

    public void setAllIndexes(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0, r1;
        java.lang.Throwable r2, $r21;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.util.Iterator r3, r4;
        java.util.Map$Entry r5, $r17;
        android.media.AudioService $r6, $r16;
        java.util.concurrent.ConcurrentHashMap $r7, $r9;
        java.util.Set $r8, $r10;
        boolean $z0, $z1;
        java.lang.Object $r11, $r12, $r15, $r19;
        java.lang.Integer $r13, $r14, $r18;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.media.AudioService$VolumeStreamState;

        entermonitor r0;

     label1:
        i0 = virtualinvoke r1.<android.media.AudioService$VolumeStreamState: int getStreamType()>();

        i1 = virtualinvoke r1.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(1073741824);

        $r6 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i5 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        i2 = staticinvoke <android.media.AudioService: int access$4000(android.media.AudioService,int,int,int)>($r6, i1, i0, $i5);

        $r7 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r8 = virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r19 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.util.Map$Entry) $r19;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r17.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r18);

     label3:
        goto label2;

     label4:
        $r21 := @caughtexception;

        r2 = $r21;

        exitmonitor r0;

        throw r2;

     label5:
        $r9 = r1.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r12;

        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.Integer) $r11;

        i3 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.Integer) $r15;

        i4 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $r16 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i7 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $i6 = staticinvoke <android.media.AudioService: int access$4000(android.media.AudioService,int,int,int)>($r16, i4, i0, $i7);

        virtualinvoke r0.<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int)>($i6, i3);

     label7:
        goto label6;

     label8:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    public void setAllIndexesToMax()
    {
        android.media.AudioService$VolumeStreamState r0;
        java.lang.Throwable r1, $r9;
        java.util.Iterator r2;
        java.util.concurrent.ConcurrentHashMap $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        int $i0;
        java.util.Map$Entry $r6;
        java.lang.Integer $r7;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        entermonitor r0;

     label1:
        $r3 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r7);

     label3:
        goto label2;

     label4:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

     label5:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean setIndex(int, int)
    {
        android.media.AudioService$VolumeStreamState r0, $r16, $r17;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, z1, $z3;
        java.lang.Throwable r1, r3, $r22, $r23;
        java.lang.Boolean r2, $r20;
        android.media.AudioService $r4, $r9, $r10, $r12, $r13, $r14, $r19, $r21;
        java.util.concurrent.ConcurrentHashMap $r5;
        java.lang.Integer $r6, $r7;
        int[] $r11;
        android.media.AudioService$VolumeStreamState[] $r15, $r18;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 1;

        entermonitor r0;

     label01:
        i2 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(i1);

        i3 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: int getValidIndex(int)>(i0);

        $r4 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        r2 = staticinvoke <android.media.AudioService: java.lang.Boolean access$3500(android.media.AudioService)>($r4);

        entermonitor r2;

     label02:
        $i6 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if $i6 != 7 goto label03;

        $r21 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r20 = staticinvoke <android.media.AudioService: java.lang.Boolean access$3500(android.media.AudioService)>($r21);

        $z3 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label03;

        i3 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

     label03:
        exitmonitor r2;

     label04:
        $r5 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r6);

     label05:
        if i2 == i3 goto label19;

     label06:
        $r9 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i7 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $i8 = staticinvoke <android.media.AudioService: int access$3900(android.media.AudioService,int)>($r9, $i7);

        if i1 != $i8 goto label18;

     label07:
        z1 = 1;

     label08:
        $i10 = staticinvoke <android.media.AudioSystem: int getNumStreamTypes()>();

        i4 = -1 + $i10;

     label09:
        if i4 < 0 goto label20;

     label10:
        $i9 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if i4 == $i9 goto label13;

        $r10 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r11 = staticinvoke <android.media.AudioService: int[] access$3700(android.media.AudioService)>($r10);

        $i12 = $r11[i4];

        $i11 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if $i12 != $i11 goto label13;

        $r13 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i13 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        i5 = staticinvoke <android.media.AudioService: int access$4000(android.media.AudioService,int,int,int)>($r13, i3, $i13, i4);

        $r12 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r15 = staticinvoke <android.media.AudioService: android.media.AudioService$VolumeStreamState[] access$4100(android.media.AudioService)>($r12);

        $r16 = $r15[i4];

        virtualinvoke $r16.<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int)>(i5, i1);

     label11:
        if z1 == 0 goto label13;

     label12:
        $r14 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r18 = staticinvoke <android.media.AudioService: android.media.AudioService$VolumeStreamState[] access$4100(android.media.AudioService)>($r14);

        $r17 = $r18[i4];

        $r19 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i14 = staticinvoke <android.media.AudioService: int access$3900(android.media.AudioService,int)>($r19, i4);

        virtualinvoke $r17.<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int)>(i5, $i14);

     label13:
        i4 = i4 + -1;

        goto label09;

     label14:
        $r22 := @caughtexception;

        r3 = $r22;

     label15:
        exitmonitor r2;

     label16:
        throw r3;

     label17:
        $r23 := @caughtexception;

        r1 = $r23;

        exitmonitor r0;

        throw r1;

     label18:
        z1 = 0;

        goto label08;

     label19:
        z0 = 0;

     label20:
        exitmonitor r0;

        return z0;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label16 to label17 with label17;
    }
}
