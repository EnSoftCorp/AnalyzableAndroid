class android.net.wifi.WifiApConfigStore extends com.android.internal.util.StateMachine
{
    private static final java.lang.String AP_CONFIG_FILE;
    private static final int AP_CONFIG_FILE_VERSION;
    private static final java.lang.String TAG;
    private com.android.internal.util.State mActiveState;
    private android.content.Context mContext;
    private com.android.internal.util.State mDefaultState;
    private com.android.internal.util.State mInactiveState;
    private com.android.internal.util.AsyncChannel mReplyChannel;
    private android.net.wifi.WifiConfiguration mWifiApConfig;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r2, $r3;
        java.io.File $r1;
        java.lang.String $r4;

        <android.net.wifi.WifiApConfigStore: java.lang.String TAG> = "WifiApConfigStore";

        <android.net.wifi.WifiApConfigStore: int AP_CONFIG_FILE_VERSION> = 1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/misc/wifi/softap.conf");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <android.net.wifi.WifiApConfigStore: java.lang.String AP_CONFIG_FILE> = $r4;

        return;
    }

    void <init>(android.content.Context, android.os.Handler)
    {
        android.net.wifi.WifiApConfigStore r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.os.Looper $r3;
        android.net.wifi.WifiApConfigStore$DefaultState $r4;
        android.net.wifi.WifiApConfigStore$InactiveState $r5;
        android.net.wifi.WifiApConfigStore$ActiveState $r6;
        com.android.internal.util.AsyncChannel $r7;
        com.android.internal.util.State $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: android.net.wifi.WifiApConfigStore;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        $r3 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r0.<com.android.internal.util.StateMachine: void <init>(java.lang.String,android.os.Looper)>("WifiApConfigStore", $r3);

        $r4 = new android.net.wifi.WifiApConfigStore$DefaultState;

        specialinvoke $r4.<android.net.wifi.WifiApConfigStore$DefaultState: void <init>(android.net.wifi.WifiApConfigStore)>(r0);

        r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mDefaultState> = $r4;

        $r5 = new android.net.wifi.WifiApConfigStore$InactiveState;

        specialinvoke $r5.<android.net.wifi.WifiApConfigStore$InactiveState: void <init>(android.net.wifi.WifiApConfigStore)>(r0);

        r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mInactiveState> = $r5;

        $r6 = new android.net.wifi.WifiApConfigStore$ActiveState;

        specialinvoke $r6.<android.net.wifi.WifiApConfigStore$ActiveState: void <init>(android.net.wifi.WifiApConfigStore)>(r0);

        r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mActiveState> = $r6;

        r0.<android.net.wifi.WifiApConfigStore: android.net.wifi.WifiConfiguration mWifiApConfig> = null;

        $r7 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r7.<com.android.internal.util.AsyncChannel: void <init>()>();

        r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.AsyncChannel mReplyChannel> = $r7;

        r0.<android.net.wifi.WifiApConfigStore: android.content.Context mContext> = r1;

        $r8 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<android.net.wifi.WifiApConfigStore: void addState(com.android.internal.util.State)>($r8);

        $r10 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mInactiveState>;

        $r9 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<android.net.wifi.WifiApConfigStore: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r10, $r9);

        $r12 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mActiveState>;

        $r11 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<android.net.wifi.WifiApConfigStore: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r12, $r11);

        $r13 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mInactiveState>;

        virtualinvoke r0.<android.net.wifi.WifiApConfigStore: void setInitialState(com.android.internal.util.State)>($r13);

        return;
    }

    static android.net.wifi.WifiConfiguration access$000(android.net.wifi.WifiApConfigStore)
    {
        android.net.wifi.WifiApConfigStore r0;
        android.net.wifi.WifiConfiguration $r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        $r1 = r0.<android.net.wifi.WifiApConfigStore: android.net.wifi.WifiConfiguration mWifiApConfig>;

        return $r1;
    }

    static android.net.wifi.WifiConfiguration access$002(android.net.wifi.WifiApConfigStore, android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiApConfigStore r0;
        android.net.wifi.WifiConfiguration r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        r1 := @parameter1: android.net.wifi.WifiConfiguration;

        r0.<android.net.wifi.WifiApConfigStore: android.net.wifi.WifiConfiguration mWifiApConfig> = r1;

        return r1;
    }

    static com.android.internal.util.AsyncChannel access$100(android.net.wifi.WifiApConfigStore)
    {
        android.net.wifi.WifiApConfigStore r0;
        com.android.internal.util.AsyncChannel $r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        $r1 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.AsyncChannel mReplyChannel>;

        return $r1;
    }

    static com.android.internal.util.State access$200(android.net.wifi.WifiApConfigStore)
    {
        android.net.wifi.WifiApConfigStore r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        $r1 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mActiveState>;

        return $r1;
    }

    static void access$300(android.net.wifi.WifiApConfigStore, com.android.internal.util.IState)
    {
        android.net.wifi.WifiApConfigStore r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiApConfigStore: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$400(android.net.wifi.WifiApConfigStore, android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiApConfigStore r0;
        android.net.wifi.WifiConfiguration r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        r1 := @parameter1: android.net.wifi.WifiConfiguration;

        specialinvoke r0.<android.net.wifi.WifiApConfigStore: void writeApConfiguration(android.net.wifi.WifiConfiguration)>(r1);

        return;
    }

    static void access$500(android.net.wifi.WifiApConfigStore, android.os.Message)
    {
        android.net.wifi.WifiApConfigStore r0;
        android.os.Message r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<android.net.wifi.WifiApConfigStore: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static com.android.internal.util.State access$600(android.net.wifi.WifiApConfigStore)
    {
        android.net.wifi.WifiApConfigStore r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        $r1 = r0.<android.net.wifi.WifiApConfigStore: com.android.internal.util.State mInactiveState>;

        return $r1;
    }

    static void access$700(android.net.wifi.WifiApConfigStore, com.android.internal.util.IState)
    {
        android.net.wifi.WifiApConfigStore r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: android.net.wifi.WifiApConfigStore;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<android.net.wifi.WifiApConfigStore: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    public static android.net.wifi.WifiApConfigStore makeWifiApConfigStore(android.content.Context, android.os.Handler)
    {
        android.content.Context r0;
        android.os.Handler r1;
        android.net.wifi.WifiApConfigStore r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        $r3 = new android.net.wifi.WifiApConfigStore;

        specialinvoke $r3.<android.net.wifi.WifiApConfigStore: void <init>(android.content.Context,android.os.Handler)>(r0, r1);

        r2 = $r3;

        virtualinvoke r2.<android.net.wifi.WifiApConfigStore: void start()>();

        return r2;
    }

    private void setDefaultApConfiguration()
    {
        android.net.wifi.WifiApConfigStore r0;
        android.net.wifi.WifiConfiguration r1, $r3;
        java.lang.String r2, $r5, $r9, $r11, $r13;
        android.content.Context $r4;
        java.util.BitSet $r6;
        java.util.UUID $r7;
        java.lang.StringBuilder $r8, $r10, $r12;

        r0 := @this: android.net.wifi.WifiApConfigStore;

        $r3 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r3.<android.net.wifi.WifiConfiguration: void <init>()>();

        r1 = $r3;

        $r4 = r0.<android.net.wifi.WifiApConfigStore: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(17040438);

        r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = $r5;

        $r6 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        virtualinvoke $r6.<java.util.BitSet: void set(int)>(4);

        $r7 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r2 = virtualinvoke $r7.<java.util.UUID: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 8);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(9, 13);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey> = $r13;

        virtualinvoke r0.<android.net.wifi.WifiApConfigStore: void sendMessage(int,java.lang.Object)>(131097, r1);

        return;
    }

    private void writeApConfiguration(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiApConfigStore r0;
        android.net.wifi.WifiConfiguration r1;
        java.io.DataOutputStream r2, r3, $r9;
        java.io.IOException r4, $r15, $r18, $r22, $r23, $r25;
        java.lang.Throwable r5, $r16, $r24;
        int i0;
        java.io.BufferedOutputStream $r10;
        java.io.FileOutputStream $r11;
        java.lang.String $r12, $r13, $r14, $r20;
        java.lang.StringBuilder $r17, $r19, $r21;

        r0 := @this: android.net.wifi.WifiApConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        r2 = null;

     label01:
        $r9 = new java.io.DataOutputStream;

        $r10 = new java.io.BufferedOutputStream;

        $r11 = new java.io.FileOutputStream;

        $r12 = <android.net.wifi.WifiApConfigStore: java.lang.String AP_CONFIG_FILE>;

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.lang.String)>($r12);

        specialinvoke $r10.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r11);

        specialinvoke $r9.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r10);

        r3 = $r9;

     label02:
        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(1);

        $r13 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r13);

        i0 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: int getAuthType()>();

        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(i0);

     label03:
        if i0 == 0 goto label05;

     label04:
        $r14 = r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r14);

     label05:
        if r3 == null goto label22;

     label06:
        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

     label07:
        return;

     label08:
        $r22 := @caughtexception;

        return;

     label09:
        $r18 := @caughtexception;

        r4 = $r18;

     label10:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing hotspot configuration");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiApConfigStore", $r20);

     label11:
        if r2 == null goto label07;

     label12:
        virtualinvoke r2.<java.io.DataOutputStream: void close()>();

     label13:
        return;

     label14:
        $r23 := @caughtexception;

        return;

     label15:
        $r24 := @caughtexception;

        r5 = $r24;

     label16:
        if r2 == null goto label18;

     label17:
        virtualinvoke r2.<java.io.DataOutputStream: void close()>();

     label18:
        throw r5;

     label19:
        $r15 := @caughtexception;

        goto label18;

     label20:
        $r16 := @caughtexception;

        r5 = $r16;

        r2 = r3;

        goto label16;

     label21:
        $r25 := @caughtexception;

        r4 = $r25;

        r2 = r3;

        goto label10;

     label22:
        return;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.io.IOException from label02 to label03 with label21;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label17 to label18 with label19;
    }

    android.os.Messenger getMessenger()
    {
        android.net.wifi.WifiApConfigStore r0;
        android.os.Messenger $r1;
        android.os.Handler $r2;

        r0 := @this: android.net.wifi.WifiApConfigStore;

        $r1 = new android.os.Messenger;

        $r2 = virtualinvoke r0.<android.net.wifi.WifiApConfigStore: android.os.Handler getHandler()>();

        specialinvoke $r1.<android.os.Messenger: void <init>(android.os.Handler)>($r2);

        return $r1;
    }

    void loadApConfiguration()
    {
        android.net.wifi.WifiApConfigStore r0;
        java.io.DataInputStream r1, r3, $r12;
        android.net.wifi.WifiConfiguration r2, $r11;
        java.lang.Throwable r5, $r19, $r22;
        int i0, $i1;
        java.io.BufferedInputStream $r13;
        java.lang.String $r14, $r16, $r18;
        java.io.FileInputStream $r15;
        java.util.BitSet $r17;
        java.io.IOException $r20, $r21, $r23, $r24, $r25, $r26;

        r0 := @this: android.net.wifi.WifiApConfigStore;

        r1 = null;

     label01:
        $r11 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r11.<android.net.wifi.WifiConfiguration: void <init>()>();

        r2 = $r11;

        $r12 = new java.io.DataInputStream;

        $r13 = new java.io.BufferedInputStream;

        $r15 = new java.io.FileInputStream;

        $r14 = <android.net.wifi.WifiApConfigStore: java.lang.String AP_CONFIG_FILE>;

        specialinvoke $r15.<java.io.FileInputStream: void <init>(java.lang.String)>($r14);

        specialinvoke $r13.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r15);

        specialinvoke $r12.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r13);

        r3 = $r12;

     label02:
        $i1 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if $i1 == 1 goto label06;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiApConfigStore", "Bad version on hotspot configuration file, set defaults");

        specialinvoke r0.<android.net.wifi.WifiApConfigStore: void setDefaultApConfiguration()>();

     label03:
        if r3 == null goto label05;

     label04:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

     label05:
        return;

     label06:
        $r16 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r2.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = $r16;

        i0 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        $r17 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        virtualinvoke $r17.<java.util.BitSet: void set(int)>(i0);

     label07:
        if i0 == 0 goto label09;

     label08:
        $r18 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r2.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey> = $r18;

     label09:
        r0.<android.net.wifi.WifiApConfigStore: android.net.wifi.WifiConfiguration mWifiApConfig> = r2;

     label10:
        if r3 == null goto label28;

     label11:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

     label12:
        return;

     label13:
        $r23 := @caughtexception;

        return;

     label14:
        $r25 := @caughtexception;

     label15:
        specialinvoke r0.<android.net.wifi.WifiApConfigStore: void setDefaultApConfiguration()>();

     label16:
        if r1 == null goto label05;

     label17:
        virtualinvoke r1.<java.io.DataInputStream: void close()>();

     label18:
        return;

     label19:
        $r21 := @caughtexception;

        return;

     label20:
        $r22 := @caughtexception;

        r5 = $r22;

     label21:
        if r1 == null goto label23;

     label22:
        virtualinvoke r1.<java.io.DataInputStream: void close()>();

     label23:
        throw r5;

     label24:
        $r26 := @caughtexception;

        goto label05;

     label25:
        $r24 := @caughtexception;

        goto label23;

     label26:
        $r19 := @caughtexception;

        r5 = $r19;

        r1 = r3;

        goto label21;

     label27:
        $r20 := @caughtexception;

        r1 = r3;

        goto label15;

     label28:
        return;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.io.IOException from label02 to label03 with label27;
        catch java.lang.Throwable from label02 to label03 with label26;
        catch java.io.IOException from label04 to label05 with label24;
        catch java.io.IOException from label06 to label07 with label27;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.io.IOException from label08 to label09 with label27;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.io.IOException from label09 to label10 with label27;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label22 to label23 with label25;
    }
}
