public class android.animation.ValueAnimator extends android.animation.Animator
{
    public static final int INFINITE;
    public static final int RESTART;
    public static final int REVERSE;
    static final int RUNNING;
    static final int SEEKED;
    static final int STOPPED;
    protected static java.lang.ThreadLocal sAnimationHandler;
    private static final android.animation.TimeInterpolator sDefaultInterpolator;
    private static float sDurationScale;
    private float mCurrentFraction;
    private int mCurrentIteration;
    private long mDelayStartTime;
    private long mDuration;
    boolean mInitialized;
    private android.animation.TimeInterpolator mInterpolator;
    private long mPauseTime;
    private boolean mPlayingBackwards;
    int mPlayingState;
    private int mRepeatCount;
    private int mRepeatMode;
    private boolean mResumed;
    private boolean mRunning;
    long mSeekTime;
    private long mStartDelay;
    private boolean mStartListenersCalled;
    long mStartTime;
    private boolean mStarted;
    private boolean mStartedDelay;
    private long mUnscaledDuration;
    private long mUnscaledStartDelay;
    private java.util.ArrayList mUpdateListeners;
    android.animation.PropertyValuesHolder[] mValues;
    java.util.HashMap mValuesMap;

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;
        android.view.animation.AccelerateDecelerateInterpolator $r1;

        <android.animation.ValueAnimator: int SEEKED> = 2;

        <android.animation.ValueAnimator: int RUNNING> = 1;

        <android.animation.ValueAnimator: int REVERSE> = 2;

        <android.animation.ValueAnimator: int RESTART> = 1;

        <android.animation.ValueAnimator: int INFINITE> = -1;

        <android.animation.ValueAnimator: float sDurationScale> = 1.0F;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <android.animation.ValueAnimator: java.lang.ThreadLocal sAnimationHandler> = $r0;

        $r1 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r1.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        <android.animation.ValueAnimator: android.animation.TimeInterpolator sDefaultInterpolator> = $r1;

        return;
    }

    public void <init>()
    {
        android.animation.ValueAnimator r0;
        float $f0, $f1;
        long $l0;
        android.animation.TimeInterpolator $r1;

        r0 := @this: android.animation.ValueAnimator;

        specialinvoke r0.<android.animation.Animator: void <init>()>();

        r0.<android.animation.ValueAnimator: long mSeekTime> = -1L;

        r0.<android.animation.ValueAnimator: boolean mResumed> = 0;

        r0.<android.animation.ValueAnimator: boolean mPlayingBackwards> = 0;

        r0.<android.animation.ValueAnimator: int mCurrentIteration> = 0;

        r0.<android.animation.ValueAnimator: float mCurrentFraction> = 0.0F;

        r0.<android.animation.ValueAnimator: boolean mStartedDelay> = 0;

        r0.<android.animation.ValueAnimator: int mPlayingState> = 0;

        r0.<android.animation.ValueAnimator: boolean mRunning> = 0;

        r0.<android.animation.ValueAnimator: boolean mStarted> = 0;

        r0.<android.animation.ValueAnimator: boolean mStartListenersCalled> = 0;

        r0.<android.animation.ValueAnimator: boolean mInitialized> = 0;

        $f0 = <android.animation.ValueAnimator: float sDurationScale>;

        $f1 = 300.0F * $f0;

        $l0 = (long) $f1;

        r0.<android.animation.ValueAnimator: long mDuration> = $l0;

        r0.<android.animation.ValueAnimator: long mUnscaledDuration> = 300L;

        r0.<android.animation.ValueAnimator: long mStartDelay> = 0L;

        r0.<android.animation.ValueAnimator: long mUnscaledStartDelay> = 0L;

        r0.<android.animation.ValueAnimator: int mRepeatCount> = 0;

        r0.<android.animation.ValueAnimator: int mRepeatMode> = 1;

        $r1 = <android.animation.ValueAnimator: android.animation.TimeInterpolator sDefaultInterpolator>;

        r0.<android.animation.ValueAnimator: android.animation.TimeInterpolator mInterpolator> = $r1;

        r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners> = null;

        return;
    }

    static long access$000(android.animation.ValueAnimator)
    {
        android.animation.ValueAnimator r0;
        long $l0;

        r0 := @parameter0: android.animation.ValueAnimator;

        $l0 = r0.<android.animation.ValueAnimator: long mStartDelay>;

        return $l0;
    }

    static void access$100(android.animation.ValueAnimator, android.animation.ValueAnimator$AnimationHandler)
    {
        android.animation.ValueAnimator r0;
        android.animation.ValueAnimator$AnimationHandler r1;

        r0 := @parameter0: android.animation.ValueAnimator;

        r1 := @parameter1: android.animation.ValueAnimator$AnimationHandler;

        specialinvoke r0.<android.animation.ValueAnimator: void startAnimation(android.animation.ValueAnimator$AnimationHandler)>(r1);

        return;
    }

    static boolean access$200(android.animation.ValueAnimator, long)
    {
        android.animation.ValueAnimator r0;
        long l0;
        boolean $z0;

        r0 := @parameter0: android.animation.ValueAnimator;

        l0 := @parameter1: long;

        $z0 = specialinvoke r0.<android.animation.ValueAnimator: boolean delayedAnimationFrame(long)>(l0);

        return $z0;
    }

    static boolean access$302(android.animation.ValueAnimator, boolean)
    {
        android.animation.ValueAnimator r0;
        boolean z0;

        r0 := @parameter0: android.animation.ValueAnimator;

        z0 := @parameter1: boolean;

        r0.<android.animation.ValueAnimator: boolean mRunning> = z0;

        return z0;
    }

    static void access$400(android.animation.ValueAnimator, android.animation.ValueAnimator$AnimationHandler)
    {
        android.animation.ValueAnimator r0;
        android.animation.ValueAnimator$AnimationHandler r1;

        r0 := @parameter0: android.animation.ValueAnimator;

        r1 := @parameter1: android.animation.ValueAnimator$AnimationHandler;

        specialinvoke r0.<android.animation.ValueAnimator: void endAnimation(android.animation.ValueAnimator$AnimationHandler)>(r1);

        return;
    }

    public static void clearAllAnimations()
    {
        android.animation.ValueAnimator$AnimationHandler r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        java.util.ArrayList $r3, $r4, $r5;

        $r1 = <android.animation.ValueAnimator: java.lang.ThreadLocal sAnimationHandler>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r0 = (android.animation.ValueAnimator$AnimationHandler) $r2;

        if r0 == null goto label1;

        $r3 = r0.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mAnimations>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r4 = r0.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mDelayedAnims>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

     label1:
        return;
    }

    private boolean delayedAnimationFrame(long)
    {
        android.animation.ValueAnimator r0;
        long l0, l1, $l2, $l3, $l5, $l6, $l7, $l8, $l10, $l11, $l12, $l13, $l15;
        boolean $z0, $z1, $z2;
        byte $b4, $b9, $b14;

        r0 := @this: android.animation.ValueAnimator;

        l0 := @parameter0: long;

        $z0 = r0.<android.animation.ValueAnimator: boolean mStartedDelay>;

        if $z0 != 0 goto label2;

        r0.<android.animation.ValueAnimator: boolean mStartedDelay> = 1;

        r0.<android.animation.ValueAnimator: long mDelayStartTime> = l0;

     label1:
        return 0;

     label2:
        $z1 = r0.<android.animation.ValueAnimator: boolean mPaused>;

        if $z1 == 0 goto label3;

        $l15 = r0.<android.animation.ValueAnimator: long mPauseTime>;

        $b14 = $l15 cmp 0L;

        if $b14 >= 0 goto label1;

        r0.<android.animation.ValueAnimator: long mPauseTime> = l0;

        return 0;

     label3:
        $z2 = r0.<android.animation.ValueAnimator: boolean mResumed>;

        if $z2 == 0 goto label4;

        r0.<android.animation.ValueAnimator: boolean mResumed> = 0;

        $l8 = r0.<android.animation.ValueAnimator: long mPauseTime>;

        $b9 = $l8 cmp 0L;

        if $b9 <= 0 goto label4;

        $l13 = r0.<android.animation.ValueAnimator: long mDelayStartTime>;

        $l11 = r0.<android.animation.ValueAnimator: long mPauseTime>;

        $l10 = l0 - $l11;

        $l12 = $l13 + $l10;

        r0.<android.animation.ValueAnimator: long mDelayStartTime> = $l12;

     label4:
        $l2 = r0.<android.animation.ValueAnimator: long mDelayStartTime>;

        l1 = l0 - $l2;

        $l3 = r0.<android.animation.ValueAnimator: long mStartDelay>;

        $b4 = l1 cmp $l3;

        if $b4 <= 0 goto label1;

        $l5 = r0.<android.animation.ValueAnimator: long mStartDelay>;

        $l6 = l1 - $l5;

        $l7 = l0 - $l6;

        r0.<android.animation.ValueAnimator: long mStartTime> = $l7;

        r0.<android.animation.ValueAnimator: int mPlayingState> = 1;

        return 1;
    }

    private void endAnimation(android.animation.ValueAnimator$AnimationHandler)
    {
        android.animation.ValueAnimator r0;
        android.animation.ValueAnimator$AnimationHandler r1;
        java.util.ArrayList r2, $r3, $r4, $r5, $r6, $r8;
        int i0, i1, $i2;
        boolean $z3, $z4, $z5, $z6;
        java.lang.String $r7;
        java.lang.Object $r9, $r11;
        android.animation.Animator$AnimatorListener $r10;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: android.animation.ValueAnimator$AnimationHandler;

        $r3 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mAnimations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        $r4 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        $r5 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mDelayedAnims>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        r0.<android.animation.ValueAnimator: int mPlayingState> = 0;

        r0.<android.animation.ValueAnimator: boolean mPaused> = 0;

        $z3 = r0.<android.animation.ValueAnimator: boolean mStarted>;

        if $z3 != 0 goto label1;

        $z6 = r0.<android.animation.ValueAnimator: boolean mRunning>;

        if $z6 == 0 goto label4;

     label1:
        $r6 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        if $r6 == null goto label4;

        $z5 = r0.<android.animation.ValueAnimator: boolean mRunning>;

        if $z5 != 0 goto label2;

        specialinvoke r0.<android.animation.ValueAnimator: void notifyStartListeners()>();

     label2:
        $r8 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object clone()>();

        r2 = (java.util.ArrayList) $r9;

        i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r10 = (android.animation.Animator$AnimatorListener) $r11;

        interfaceinvoke $r10.<android.animation.Animator$AnimatorListener: void onAnimationEnd(android.animation.Animator)>(r0);

        i1 = i1 + 1;

        goto label3;

     label4:
        r0.<android.animation.ValueAnimator: boolean mRunning> = 0;

        r0.<android.animation.ValueAnimator: boolean mStarted> = 0;

        r0.<android.animation.ValueAnimator: boolean mStartListenersCalled> = 0;

        r0.<android.animation.ValueAnimator: boolean mPlayingBackwards> = 0;

        $z4 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(8L);

        if $z4 == 0 goto label5;

        $r7 = virtualinvoke r0.<android.animation.ValueAnimator: java.lang.String getNameForTrace()>();

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(8L, $r7, $i2);

     label5:
        return;
    }

    public static int getCurrentAnimationsCount()
    {
        android.animation.ValueAnimator$AnimationHandler r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        java.util.ArrayList $r3;
        int $i0;

        $r1 = <android.animation.ValueAnimator: java.lang.ThreadLocal sAnimationHandler>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r0 = (android.animation.ValueAnimator$AnimationHandler) $r2;

        if r0 == null goto label1;

        $r3 = r0.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mAnimations>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        return $i0;

     label1:
        return 0;
    }

    public static float getDurationScale()
    {
        float $f0;

        $f0 = <android.animation.ValueAnimator: float sDurationScale>;

        return $f0;
    }

    public static long getFrameDelay()
    {
        long $l0;

        $l0 = staticinvoke <android.view.Choreographer: long getFrameDelay()>();

        return $l0;
    }

    private static android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler()
    {
        android.animation.ValueAnimator$AnimationHandler r0, $r3;
        java.lang.ThreadLocal $r1, $r4;
        java.lang.Object $r2;

        $r1 = <android.animation.ValueAnimator: java.lang.ThreadLocal sAnimationHandler>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r0 = (android.animation.ValueAnimator$AnimationHandler) $r2;

        if r0 != null goto label1;

        $r3 = new android.animation.ValueAnimator$AnimationHandler;

        specialinvoke $r3.<android.animation.ValueAnimator$AnimationHandler: void <init>(android.animation.ValueAnimator$1)>(null);

        r0 = $r3;

        $r4 = <android.animation.ValueAnimator: java.lang.ThreadLocal sAnimationHandler>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>(r0);

     label1:
        return r0;
    }

    private void notifyStartListeners()
    {
        android.animation.ValueAnimator r0;
        java.util.ArrayList r1, $r2, $r3;
        int i0, i1;
        boolean $z0;
        java.lang.Object $r4, $r5;
        android.animation.Animator$AnimatorListener $r6;

        r0 := @this: android.animation.ValueAnimator;

        $r2 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        if $r2 == null goto label2;

        $z0 = r0.<android.animation.ValueAnimator: boolean mStartListenersCalled>;

        if $z0 != 0 goto label2;

        $r3 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        r1 = (java.util.ArrayList) $r4;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (android.animation.Animator$AnimatorListener) $r5;

        interfaceinvoke $r6.<android.animation.Animator$AnimatorListener: void onAnimationStart(android.animation.Animator)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.animation.ValueAnimator: boolean mStartListenersCalled> = 1;

        return;
    }

    public static transient android.animation.ValueAnimator ofFloat(float[])
    {
        float[] r0;
        android.animation.ValueAnimator r1, $r2;

        r0 := @parameter0: float[];

        $r2 = new android.animation.ValueAnimator;

        specialinvoke $r2.<android.animation.ValueAnimator: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.animation.ValueAnimator: void setFloatValues(float[])>(r0);

        return r1;
    }

    public static transient android.animation.ValueAnimator ofInt(int[])
    {
        int[] r0;
        android.animation.ValueAnimator r1, $r2;

        r0 := @parameter0: int[];

        $r2 = new android.animation.ValueAnimator;

        specialinvoke $r2.<android.animation.ValueAnimator: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.animation.ValueAnimator: void setIntValues(int[])>(r0);

        return r1;
    }

    public static transient android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator, java.lang.Object[])
    {
        android.animation.TypeEvaluator r0;
        java.lang.Object[] r1;
        android.animation.ValueAnimator r2, $r3;

        r0 := @parameter0: android.animation.TypeEvaluator;

        r1 := @parameter1: java.lang.Object[];

        $r3 = new android.animation.ValueAnimator;

        specialinvoke $r3.<android.animation.ValueAnimator: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>(r1);

        virtualinvoke r2.<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>(r0);

        return r2;
    }

    public static transient android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])
    {
        android.animation.PropertyValuesHolder[] r0;
        android.animation.ValueAnimator r1, $r2;

        r0 := @parameter0: android.animation.PropertyValuesHolder[];

        $r2 = new android.animation.ValueAnimator;

        specialinvoke $r2.<android.animation.ValueAnimator: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>(r0);

        return r1;
    }

    public static void setDurationScale(float)
    {
        float f0;

        f0 := @parameter0: float;

        <android.animation.ValueAnimator: float sDurationScale> = f0;

        return;
    }

    public static void setFrameDelay(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <android.view.Choreographer: void setFrameDelay(long)>(l0);

        return;
    }

    private void start(boolean)
    {
        android.animation.ValueAnimator r0;
        boolean z0;
        android.animation.ValueAnimator$AnimationHandler r1;
        android.os.Looper $r2;
        java.util.ArrayList $r3;
        long $l0;
        byte $b1;
        android.util.AndroidRuntimeException $r4;

        r0 := @this: android.animation.ValueAnimator;

        z0 := @parameter0: boolean;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r2 != null goto label1;

        $r4 = new android.util.AndroidRuntimeException;

        specialinvoke $r4.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Animators may only be run on Looper threads");

        throw $r4;

     label1:
        r0.<android.animation.ValueAnimator: boolean mPlayingBackwards> = z0;

        r0.<android.animation.ValueAnimator: int mCurrentIteration> = 0;

        r0.<android.animation.ValueAnimator: int mPlayingState> = 0;

        r0.<android.animation.ValueAnimator: boolean mStarted> = 1;

        r0.<android.animation.ValueAnimator: boolean mStartedDelay> = 0;

        r0.<android.animation.ValueAnimator: boolean mPaused> = 0;

        r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler()>();

        $r3 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mPendingAnimations>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $l0 = r0.<android.animation.ValueAnimator: long mStartDelay>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        virtualinvoke r0.<android.animation.ValueAnimator: void setCurrentPlayTime(long)>(0L);

        r0.<android.animation.ValueAnimator: int mPlayingState> = 0;

        r0.<android.animation.ValueAnimator: boolean mRunning> = 1;

        specialinvoke r0.<android.animation.ValueAnimator: void notifyStartListeners()>();

     label2:
        virtualinvoke r1.<android.animation.ValueAnimator$AnimationHandler: void start()>();

        return;
    }

    private void startAnimation(android.animation.ValueAnimator$AnimationHandler)
    {
        android.animation.ValueAnimator r0;
        android.animation.ValueAnimator$AnimationHandler r1;
        boolean $z0;
        java.util.ArrayList $r2, $r3;
        long $l0;
        byte $b1;
        java.lang.String $r4;
        int $i2;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: android.animation.ValueAnimator$AnimationHandler;

        $z0 = staticinvoke <android.os.Trace: boolean isTagEnabled(long)>(8L);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<android.animation.ValueAnimator: java.lang.String getNameForTrace()>();

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        staticinvoke <android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>(8L, $r4, $i2);

     label1:
        virtualinvoke r0.<android.animation.ValueAnimator: void initAnimation()>();

        $r2 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mAnimations>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $l0 = r0.<android.animation.ValueAnimator: long mStartDelay>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $r3 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        if $r3 == null goto label2;

        specialinvoke r0.<android.animation.ValueAnimator: void notifyStartListeners()>();

     label2:
        return;
    }

    public void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
    {
        android.animation.ValueAnimator r0;
        android.animation.ValueAnimator$AnimatorUpdateListener r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: android.animation.ValueAnimator$AnimatorUpdateListener;

        $r2 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners> = $r4;

     label1:
        $r3 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void animateValue(float)
    {
        android.animation.ValueAnimator r0;
        float f0, f1;
        int i0, i1, i2, i3;
        android.animation.TimeInterpolator $r1;
        android.animation.PropertyValuesHolder[] $r2, $r9;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;
        android.animation.ValueAnimator$AnimatorUpdateListener $r7;
        android.animation.PropertyValuesHolder $r8;

        r0 := @this: android.animation.ValueAnimator;

        f0 := @parameter0: float;

        $r1 = r0.<android.animation.ValueAnimator: android.animation.TimeInterpolator mInterpolator>;

        f1 = interfaceinvoke $r1.<android.animation.TimeInterpolator: float getInterpolation(float)>(f0);

        r0.<android.animation.ValueAnimator: float mCurrentFraction> = f1;

        $r2 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r9 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r8 = $r9[i1];

        virtualinvoke $r8.<android.animation.PropertyValuesHolder: void calculateValue(float)>(f1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        if $r3 == null goto label4;

        $r4 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $r5 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (android.animation.ValueAnimator$AnimatorUpdateListener) $r6;

        interfaceinvoke $r7.<android.animation.ValueAnimator$AnimatorUpdateListener: void onAnimationUpdate(android.animation.ValueAnimator)>(r0);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    boolean animationFrame(long)
    {
        android.animation.ValueAnimator r0;
        long l0, $l5, $l13, $l14, $l15, $l17, $l18, $l19;
        float f0, $f1, $f2;
        byte b1, $b6;
        boolean z0, z1, $z2, $z3;
        int i2, i3, $i4, $i7, $i8, $i9, $i10, $i11, $i12, $i16;
        java.util.ArrayList $r1, $r2, $r4;
        java.lang.Object $r3;
        android.animation.Animator$AnimatorListener $r5;

        r0 := @this: android.animation.ValueAnimator;

        l0 := @parameter0: long;

        $i4 = r0.<android.animation.ValueAnimator: int mPlayingState>;

        tableswitch($i4)
        {
            case 1: goto label02;
            case 2: goto label02;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $l5 = r0.<android.animation.ValueAnimator: long mDuration>;

        $b6 = $l5 cmp 0L;

        if $b6 <= 0 goto label06;

        $l17 = r0.<android.animation.ValueAnimator: long mStartTime>;

        $l18 = l0 - $l17;

        $f2 = (float) $l18;

        $l19 = r0.<android.animation.ValueAnimator: long mDuration>;

        $f1 = (float) $l19;

        f0 = $f2 / $f1;

     label03:
        b1 = f0 cmpl 1.0F;

        z0 = 0;

        if b1 < 0 goto label10;

        $i8 = r0.<android.animation.ValueAnimator: int mCurrentIteration>;

        $i7 = r0.<android.animation.ValueAnimator: int mRepeatCount>;

        if $i8 < $i7 goto label04;

        $i16 = r0.<android.animation.ValueAnimator: int mRepeatCount>;

        if $i16 != -1 goto label13;

     label04:
        $r1 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        if $r1 == null goto label07;

        $r2 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label05:
        if i3 >= i2 goto label07;

        $r4 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        $r3 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r5 = (android.animation.Animator$AnimatorListener) $r3;

        interfaceinvoke $r5.<android.animation.Animator$AnimatorListener: void onAnimationRepeat(android.animation.Animator)>(r0);

        i3 = i3 + 1;

        goto label05;

     label06:
        f0 = 1.0F;

        goto label03;

     label07:
        $i10 = r0.<android.animation.ValueAnimator: int mRepeatMode>;

        if $i10 != 2 goto label09;

        $z3 = r0.<android.animation.ValueAnimator: boolean mPlayingBackwards>;

        if $z3 != 0 goto label12;

        z1 = 1;

     label08:
        r0.<android.animation.ValueAnimator: boolean mPlayingBackwards> = z1;

     label09:
        $i12 = r0.<android.animation.ValueAnimator: int mCurrentIteration>;

        $i9 = (int) f0;

        $i11 = $i12 + $i9;

        r0.<android.animation.ValueAnimator: int mCurrentIteration> = $i11;

        f0 = f0 % 1.0F;

        $l13 = r0.<android.animation.ValueAnimator: long mStartTime>;

        $l14 = r0.<android.animation.ValueAnimator: long mDuration>;

        $l15 = $l13 + $l14;

        r0.<android.animation.ValueAnimator: long mStartTime> = $l15;

     label10:
        $z2 = r0.<android.animation.ValueAnimator: boolean mPlayingBackwards>;

        if $z2 == 0 goto label11;

        f0 = 1.0F - f0;

     label11:
        virtualinvoke r0.<android.animation.ValueAnimator: void animateValue(float)>(f0);

        return z0;

     label12:
        z1 = 0;

        goto label08;

     label13:
        z0 = 1;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(f0, 1.0F);

        goto label10;
    }

    public void cancel()
    {
        android.animation.ValueAnimator r0;
        android.animation.ValueAnimator$AnimationHandler r1;
        java.util.Iterator r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList $r3, $r4, $r6, $r9, $r10;
        java.lang.Object $r5, $r7;
        android.animation.Animator$AnimatorListener $r8;

        r0 := @this: android.animation.ValueAnimator;

        r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler()>();

        $i0 = r0.<android.animation.ValueAnimator: int mPlayingState>;

        if $i0 != 0 goto label1;

        $r9 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mPendingAnimations>;

        $z4 = virtualinvoke $r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z4 != 0 goto label1;

        $r10 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mDelayedAnims>;

        $z5 = virtualinvoke $r10.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z5 == 0 goto label6;

     label1:
        $z0 = r0.<android.animation.ValueAnimator: boolean mStarted>;

        if $z0 != 0 goto label2;

        $z3 = r0.<android.animation.ValueAnimator: boolean mRunning>;

        if $z3 == 0 goto label5;

     label2:
        $r3 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        if $r3 == null goto label5;

        $z1 = r0.<android.animation.ValueAnimator: boolean mRunning>;

        if $z1 != 0 goto label3;

        specialinvoke r0.<android.animation.ValueAnimator: void notifyStartListeners()>();

     label3:
        $r4 = r0.<android.animation.ValueAnimator: java.util.ArrayList mListeners>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object clone()>();

        $r6 = (java.util.ArrayList) $r5;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.animation.Animator$AnimatorListener) $r7;

        interfaceinvoke $r8.<android.animation.Animator$AnimatorListener: void onAnimationCancel(android.animation.Animator)>(r0);

        goto label4;

     label5:
        specialinvoke r0.<android.animation.ValueAnimator: void endAnimation(android.animation.ValueAnimator$AnimationHandler)>(r1);

     label6:
        return;
    }

    public volatile android.animation.Animator clone()
    {
        android.animation.ValueAnimator r0, $r1;

        r0 := @this: android.animation.ValueAnimator;

        $r1 = virtualinvoke r0.<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>();

        return $r1;
    }

    public android.animation.ValueAnimator clone()
    {
        android.animation.ValueAnimator r0, r1;
        android.animation.PropertyValuesHolder[] r2, $r7, $r11;
        int i0, i1, i2, i3;
        android.animation.PropertyValuesHolder r3, $r9;
        java.util.ArrayList r4, $r6, $r14, $r16;
        android.animation.Animator $r5;
        java.util.HashMap $r8, $r10;
        java.lang.String $r13;
        java.lang.Object $r15;

        r0 := @this: android.animation.ValueAnimator;

        $r5 = specialinvoke r0.<android.animation.Animator: android.animation.Animator clone()>();

        r1 = (android.animation.ValueAnimator) $r5;

        $r6 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        if $r6 == null goto label2;

        r4 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r1.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners> = $r14;

        i2 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r16 = r1.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        $r15 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        i3 = i3 + 1;

        goto label1;

     label2:
        r1.<android.animation.ValueAnimator: long mSeekTime> = -1L;

        r1.<android.animation.ValueAnimator: boolean mPlayingBackwards> = 0;

        r1.<android.animation.ValueAnimator: int mCurrentIteration> = 0;

        r1.<android.animation.ValueAnimator: boolean mInitialized> = 0;

        r1.<android.animation.ValueAnimator: int mPlayingState> = 0;

        r1.<android.animation.ValueAnimator: boolean mStartedDelay> = 0;

        r2 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        if r2 == null goto label4;

        i0 = lengthof r2;

        $r7 = newarray (android.animation.PropertyValuesHolder)[i0];

        r1.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>(int)>(i0);

        r1.<android.animation.ValueAnimator: java.util.HashMap mValuesMap> = $r8;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r9 = r2[i1];

        r3 = virtualinvoke $r9.<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>();

        $r11 = r1.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r11[i1] = r3;

        $r10 = r1.<android.animation.ValueAnimator: java.util.HashMap mValuesMap>;

        $r13 = virtualinvoke r3.<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>();

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r3);

        i1 = i1 + 1;

        goto label3;

     label4:
        return r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        android.animation.ValueAnimator r0, $r1;

        r0 := @this: android.animation.ValueAnimator;

        $r1 = virtualinvoke r0.<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>();

        return $r1;
    }

    final boolean doAnimationFrame(long)
    {
        android.animation.ValueAnimator r0;
        long l0, $l2, $l3, $l4, $l6, $l7, $l8, $l9, $l10, $l11, $l13, $l15;
        int $i1;
        boolean $z0, $z1, $z2;
        byte $b5, $b12, $b14;

        r0 := @this: android.animation.ValueAnimator;

        l0 := @parameter0: long;

        $i1 = r0.<android.animation.ValueAnimator: int mPlayingState>;

        if $i1 != 0 goto label1;

        r0.<android.animation.ValueAnimator: int mPlayingState> = 1;

        $l11 = r0.<android.animation.ValueAnimator: long mSeekTime>;

        $b14 = $l11 cmp 0L;

        if $b14 >= 0 goto label3;

        r0.<android.animation.ValueAnimator: long mStartTime> = l0;

     label1:
        $z0 = r0.<android.animation.ValueAnimator: boolean mPaused>;

        if $z0 == 0 goto label4;

        $l10 = r0.<android.animation.ValueAnimator: long mPauseTime>;

        $b12 = $l10 cmp 0L;

        if $b12 >= 0 goto label2;

        r0.<android.animation.ValueAnimator: long mPauseTime> = l0;

     label2:
        return 0;

     label3:
        $l13 = r0.<android.animation.ValueAnimator: long mSeekTime>;

        $l15 = l0 - $l13;

        r0.<android.animation.ValueAnimator: long mStartTime> = $l15;

        r0.<android.animation.ValueAnimator: long mSeekTime> = -1L;

        goto label1;

     label4:
        $z1 = r0.<android.animation.ValueAnimator: boolean mResumed>;

        if $z1 == 0 goto label5;

        r0.<android.animation.ValueAnimator: boolean mResumed> = 0;

        $l4 = r0.<android.animation.ValueAnimator: long mPauseTime>;

        $b5 = $l4 cmp 0L;

        if $b5 <= 0 goto label5;

        $l8 = r0.<android.animation.ValueAnimator: long mStartTime>;

        $l6 = r0.<android.animation.ValueAnimator: long mPauseTime>;

        $l7 = l0 - $l6;

        $l9 = $l8 + $l7;

        r0.<android.animation.ValueAnimator: long mStartTime> = $l9;

     label5:
        $l2 = r0.<android.animation.ValueAnimator: long mStartTime>;

        $l3 = staticinvoke <java.lang.Math: long max(long,long)>(l0, $l2);

        $z2 = virtualinvoke r0.<android.animation.ValueAnimator: boolean animationFrame(long)>($l3);

        return $z2;
    }

    public void end()
    {
        android.animation.ValueAnimator r0;
        android.animation.ValueAnimator$AnimationHandler r1;
        float f0;
        java.util.ArrayList $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.animation.ValueAnimator;

        r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler()>();

        $r2 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mAnimations>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label3;

        $r3 = r1.<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList mPendingAnimations>;

        $z3 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z3 != 0 goto label3;

        r0.<android.animation.ValueAnimator: boolean mStartedDelay> = 0;

        specialinvoke r0.<android.animation.ValueAnimator: void startAnimation(android.animation.ValueAnimator$AnimationHandler)>(r1);

        r0.<android.animation.ValueAnimator: boolean mStarted> = 1;

     label1:
        $z2 = r0.<android.animation.ValueAnimator: boolean mPlayingBackwards>;

        if $z2 == 0 goto label4;

        f0 = 0.0F;

     label2:
        virtualinvoke r0.<android.animation.ValueAnimator: void animateValue(float)>(f0);

        specialinvoke r0.<android.animation.ValueAnimator: void endAnimation(android.animation.ValueAnimator$AnimationHandler)>(r1);

        return;

     label3:
        $z1 = r0.<android.animation.ValueAnimator: boolean mInitialized>;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.animation.ValueAnimator: void initAnimation()>();

        goto label1;

     label4:
        f0 = 1.0F;

        goto label2;
    }

    public float getAnimatedFraction()
    {
        android.animation.ValueAnimator r0;
        float $f0;

        r0 := @this: android.animation.ValueAnimator;

        $f0 = r0.<android.animation.ValueAnimator: float mCurrentFraction>;

        return $f0;
    }

    public java.lang.Object getAnimatedValue()
    {
        android.animation.ValueAnimator r0;
        android.animation.PropertyValuesHolder[] $r1, $r2, $r3;
        int $i0;
        android.animation.PropertyValuesHolder $r4;
        java.lang.Object $r5;

        r0 := @this: android.animation.ValueAnimator;

        $r1 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        if $r1 == null goto label1;

        $r2 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $r3 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r4 = $r3[0];

        $r5 = virtualinvoke $r4.<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>();

        return $r5;

     label1:
        return null;
    }

    public java.lang.Object getAnimatedValue(java.lang.String)
    {
        android.animation.ValueAnimator r0;
        java.lang.String r1;
        android.animation.PropertyValuesHolder r2;
        java.util.HashMap $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.animation.ValueAnimator: java.util.HashMap mValuesMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.animation.PropertyValuesHolder) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>();

        return $r5;

     label1:
        return null;
    }

    public long getCurrentPlayTime()
    {
        android.animation.ValueAnimator r0;
        boolean $z0;
        int $i0;
        long $l1, $l2, $l3;

        r0 := @this: android.animation.ValueAnimator;

        $z0 = r0.<android.animation.ValueAnimator: boolean mInitialized>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.animation.ValueAnimator: int mPlayingState>;

        if $i0 != 0 goto label2;

     label1:
        return 0L;

     label2:
        $l1 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l2 = r0.<android.animation.ValueAnimator: long mStartTime>;

        $l3 = $l1 - $l2;

        return $l3;
    }

    public long getDuration()
    {
        android.animation.ValueAnimator r0;
        long $l0;

        r0 := @this: android.animation.ValueAnimator;

        $l0 = r0.<android.animation.ValueAnimator: long mUnscaledDuration>;

        return $l0;
    }

    public android.animation.TimeInterpolator getInterpolator()
    {
        android.animation.ValueAnimator r0;
        android.animation.TimeInterpolator $r1;

        r0 := @this: android.animation.ValueAnimator;

        $r1 = r0.<android.animation.ValueAnimator: android.animation.TimeInterpolator mInterpolator>;

        return $r1;
    }

    java.lang.String getNameForTrace()
    {
        android.animation.ValueAnimator r0;

        r0 := @this: android.animation.ValueAnimator;

        return "animator";
    }

    public int getRepeatCount()
    {
        android.animation.ValueAnimator r0;
        int $i0;

        r0 := @this: android.animation.ValueAnimator;

        $i0 = r0.<android.animation.ValueAnimator: int mRepeatCount>;

        return $i0;
    }

    public int getRepeatMode()
    {
        android.animation.ValueAnimator r0;
        int $i0;

        r0 := @this: android.animation.ValueAnimator;

        $i0 = r0.<android.animation.ValueAnimator: int mRepeatMode>;

        return $i0;
    }

    public long getStartDelay()
    {
        android.animation.ValueAnimator r0;
        long $l0;

        r0 := @this: android.animation.ValueAnimator;

        $l0 = r0.<android.animation.ValueAnimator: long mUnscaledStartDelay>;

        return $l0;
    }

    public android.animation.PropertyValuesHolder[] getValues()
    {
        android.animation.ValueAnimator r0;
        android.animation.PropertyValuesHolder[] $r1;

        r0 := @this: android.animation.ValueAnimator;

        $r1 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        return $r1;
    }

    void initAnimation()
    {
        android.animation.ValueAnimator r0;
        int i0, i1;
        boolean $z0;
        android.animation.PropertyValuesHolder[] $r1, $r2;
        android.animation.PropertyValuesHolder $r3;

        r0 := @this: android.animation.ValueAnimator;

        $z0 = r0.<android.animation.ValueAnimator: boolean mInitialized>;

        if $z0 != 0 goto label3;

        $r1 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r3 = $r2[i1];

        virtualinvoke $r3.<android.animation.PropertyValuesHolder: void init()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.animation.ValueAnimator: boolean mInitialized> = 1;

     label3:
        return;
    }

    public boolean isRunning()
    {
        android.animation.ValueAnimator r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.animation.ValueAnimator;

        $i0 = r0.<android.animation.ValueAnimator: int mPlayingState>;

        if $i0 == 1 goto label1;

        $z0 = r0.<android.animation.ValueAnimator: boolean mRunning>;

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isStarted()
    {
        android.animation.ValueAnimator r0;
        boolean $z0;

        r0 := @this: android.animation.ValueAnimator;

        $z0 = r0.<android.animation.ValueAnimator: boolean mStarted>;

        return $z0;
    }

    public void pause()
    {
        android.animation.ValueAnimator r0;
        boolean z0, $z1;

        r0 := @this: android.animation.ValueAnimator;

        z0 = r0.<android.animation.ValueAnimator: boolean mPaused>;

        specialinvoke r0.<android.animation.Animator: void pause()>();

        if z0 != 0 goto label1;

        $z1 = r0.<android.animation.ValueAnimator: boolean mPaused>;

        if $z1 == 0 goto label1;

        r0.<android.animation.ValueAnimator: long mPauseTime> = -1L;

        r0.<android.animation.ValueAnimator: boolean mResumed> = 0;

     label1:
        return;
    }

    public void removeAllUpdateListeners()
    {
        android.animation.ValueAnimator r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: android.animation.ValueAnimator;

        $r1 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners> = null;

        return;
    }

    public void removeUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
    {
        android.animation.ValueAnimator r0;
        android.animation.ValueAnimator$AnimatorUpdateListener r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: android.animation.ValueAnimator$AnimatorUpdateListener;

        $r2 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        r0.<android.animation.ValueAnimator: java.util.ArrayList mUpdateListeners> = null;

        return;
    }

    public void resume()
    {
        android.animation.ValueAnimator r0;
        boolean $z0;

        r0 := @this: android.animation.ValueAnimator;

        $z0 = r0.<android.animation.ValueAnimator: boolean mPaused>;

        if $z0 == 0 goto label1;

        r0.<android.animation.ValueAnimator: boolean mResumed> = 1;

     label1:
        specialinvoke r0.<android.animation.Animator: void resume()>();

        return;
    }

    public void reverse()
    {
        android.animation.ValueAnimator r0;
        boolean z0, $z1, $z2;
        long l0, l1, $l3, $l4, $l5, $l6;
        int $i2;

        r0 := @this: android.animation.ValueAnimator;

        $z1 = r0.<android.animation.ValueAnimator: boolean mPlayingBackwards>;

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        r0.<android.animation.ValueAnimator: boolean mPlayingBackwards> = z0;

        $i2 = r0.<android.animation.ValueAnimator: int mPlayingState>;

        if $i2 != 1 goto label3;

        l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l3 = r0.<android.animation.ValueAnimator: long mStartTime>;

        l1 = l0 - $l3;

        $l4 = r0.<android.animation.ValueAnimator: long mDuration>;

        $l5 = $l4 - l1;

        $l6 = l0 - $l5;

        r0.<android.animation.ValueAnimator: long mStartTime> = $l6;

        return;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $z2 = r0.<android.animation.ValueAnimator: boolean mStarted>;

        if $z2 == 0 goto label4;

        virtualinvoke r0.<android.animation.ValueAnimator: void end()>();

        return;

     label4:
        specialinvoke r0.<android.animation.ValueAnimator: void start(boolean)>(1);

        return;
    }

    public void setCurrentPlayTime(long)
    {
        android.animation.ValueAnimator r0;
        long l0, l1, $l3;
        int $i2;

        r0 := @this: android.animation.ValueAnimator;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.animation.ValueAnimator: void initAnimation()>();

        l1 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $i2 = r0.<android.animation.ValueAnimator: int mPlayingState>;

        if $i2 == 1 goto label1;

        r0.<android.animation.ValueAnimator: long mSeekTime> = l0;

        r0.<android.animation.ValueAnimator: int mPlayingState> = 2;

     label1:
        $l3 = l1 - l0;

        r0.<android.animation.ValueAnimator: long mStartTime> = $l3;

        virtualinvoke r0.<android.animation.ValueAnimator: boolean doAnimationFrame(long)>(l1);

        return;
    }

    public volatile android.animation.Animator setDuration(long)
    {
        android.animation.ValueAnimator r0, $r1;
        long l0;

        r0 := @this: android.animation.ValueAnimator;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l0);

        return $r1;
    }

    public android.animation.ValueAnimator setDuration(long)
    {
        android.animation.ValueAnimator r0;
        long l0, $l2;
        byte $b1;
        float $f0, $f1, $f2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.animation.ValueAnimator;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animators cannot have negative duration: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<android.animation.ValueAnimator: long mUnscaledDuration> = l0;

        $f1 = (float) l0;

        $f0 = <android.animation.ValueAnimator: float sDurationScale>;

        $f2 = $f1 * $f0;

        $l2 = (long) $f2;

        r0.<android.animation.ValueAnimator: long mDuration> = $l2;

        return r0;
    }

    public void setEvaluator(android.animation.TypeEvaluator)
    {
        android.animation.ValueAnimator r0;
        android.animation.TypeEvaluator r1;
        android.animation.PropertyValuesHolder[] $r2, $r3, $r4;
        int $i0;
        android.animation.PropertyValuesHolder $r5;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: android.animation.TypeEvaluator;

        if r1 == null goto label1;

        $r2 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        if $r2 == null goto label1;

        $r3 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label1;

        $r4 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r5 = $r4[0];

        virtualinvoke $r5.<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>(r1);

     label1:
        return;
    }

    public transient void setFloatValues(float[])
    {
        android.animation.ValueAnimator r0;
        float[] r1;
        android.animation.PropertyValuesHolder[] r2, $r3, $r5, $r6;
        int $i0, $i1;
        android.animation.PropertyValuesHolder $r4, $r7;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: float[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        if $r3 == null goto label3;

        $r5 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $i1 = lengthof $r5;

        if $i1 != 0 goto label5;

     label3:
        r2 = newarray (android.animation.PropertyValuesHolder)[1];

        $r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("", r1);

        r2[0] = $r4;

        virtualinvoke r0.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>(r2);

     label4:
        r0.<android.animation.ValueAnimator: boolean mInitialized> = 0;

        return;

     label5:
        $r6 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r7 = $r6[0];

        virtualinvoke $r7.<android.animation.PropertyValuesHolder: void setFloatValues(float[])>(r1);

        goto label4;
    }

    public transient void setIntValues(int[])
    {
        android.animation.ValueAnimator r0;
        int[] r1;
        android.animation.PropertyValuesHolder[] r2, $r3, $r5, $r6;
        int $i0, $i1;
        android.animation.PropertyValuesHolder $r4, $r7;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: int[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        if $r3 == null goto label3;

        $r5 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $i1 = lengthof $r5;

        if $i1 != 0 goto label5;

     label3:
        r2 = newarray (android.animation.PropertyValuesHolder)[1];

        $r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>("", r1);

        r2[0] = $r4;

        virtualinvoke r0.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>(r2);

     label4:
        r0.<android.animation.ValueAnimator: boolean mInitialized> = 0;

        return;

     label5:
        $r6 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r7 = $r6[0];

        virtualinvoke $r7.<android.animation.PropertyValuesHolder: void setIntValues(int[])>(r1);

        goto label4;
    }

    public void setInterpolator(android.animation.TimeInterpolator)
    {
        android.animation.ValueAnimator r0;
        android.animation.TimeInterpolator r1;
        android.view.animation.LinearInterpolator $r2;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: android.animation.TimeInterpolator;

        if r1 == null goto label1;

        r0.<android.animation.ValueAnimator: android.animation.TimeInterpolator mInterpolator> = r1;

        return;

     label1:
        $r2 = new android.view.animation.LinearInterpolator;

        specialinvoke $r2.<android.view.animation.LinearInterpolator: void <init>()>();

        r0.<android.animation.ValueAnimator: android.animation.TimeInterpolator mInterpolator> = $r2;

        return;
    }

    public transient void setObjectValues(java.lang.Object[])
    {
        android.animation.ValueAnimator r0;
        java.lang.Object[] r1;
        android.animation.PropertyValuesHolder[] r2, $r3, $r5, $r6;
        int $i0, $i1;
        android.animation.PropertyValuesHolder $r4, $r7;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: java.lang.Object[];

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        if $r3 == null goto label3;

        $r5 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $i1 = lengthof $r5;

        if $i1 != 0 goto label5;

     label3:
        r2 = newarray (android.animation.PropertyValuesHolder)[1];

        $r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>("", null, r1);

        r2[0] = $r4;

        virtualinvoke r0.<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>(r2);

     label4:
        r0.<android.animation.ValueAnimator: boolean mInitialized> = 0;

        return;

     label5:
        $r6 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r7 = $r6[0];

        virtualinvoke $r7.<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>(r1);

        goto label4;
    }

    public void setRepeatCount(int)
    {
        android.animation.ValueAnimator r0;
        int i0;

        r0 := @this: android.animation.ValueAnimator;

        i0 := @parameter0: int;

        r0.<android.animation.ValueAnimator: int mRepeatCount> = i0;

        return;
    }

    public void setRepeatMode(int)
    {
        android.animation.ValueAnimator r0;
        int i0;

        r0 := @this: android.animation.ValueAnimator;

        i0 := @parameter0: int;

        r0.<android.animation.ValueAnimator: int mRepeatMode> = i0;

        return;
    }

    public void setStartDelay(long)
    {
        android.animation.ValueAnimator r0;
        long l0, $l1;
        float $f0, $f1, $f2;

        r0 := @this: android.animation.ValueAnimator;

        l0 := @parameter0: long;

        $f1 = (float) l0;

        $f0 = <android.animation.ValueAnimator: float sDurationScale>;

        $f2 = $f1 * $f0;

        $l1 = (long) $f2;

        r0.<android.animation.ValueAnimator: long mStartDelay> = $l1;

        r0.<android.animation.ValueAnimator: long mUnscaledStartDelay> = l0;

        return;
    }

    public transient void setValues(android.animation.PropertyValuesHolder[])
    {
        android.animation.ValueAnimator r0;
        android.animation.PropertyValuesHolder[] r1;
        int i0, i1;
        android.animation.PropertyValuesHolder r2;
        java.util.HashMap $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.animation.ValueAnimator;

        r1 := @parameter0: android.animation.PropertyValuesHolder[];

        i0 = lengthof r1;

        r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues> = r1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(i0);

        r0.<android.animation.ValueAnimator: java.util.HashMap mValuesMap> = $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r4 = r0.<android.animation.ValueAnimator: java.util.HashMap mValuesMap>;

        $r5 = virtualinvoke r2.<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>();

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.animation.ValueAnimator: boolean mInitialized> = 0;

        return;
    }

    public void start()
    {
        android.animation.ValueAnimator r0;

        r0 := @this: android.animation.ValueAnimator;

        specialinvoke r0.<android.animation.ValueAnimator: void start(boolean)>(0);

        return;
    }

    public java.lang.String toString()
    {
        android.animation.ValueAnimator r0;
        java.lang.String r1, $r4, $r12;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r5, $r8, $r9, $r10, $r14;
        android.animation.PropertyValuesHolder[] $r6, $r7, $r11;
        android.animation.PropertyValuesHolder $r13;

        r0 := @this: android.animation.ValueAnimator;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ValueAnimator@");

        $i1 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        if $r6 == null goto label2;

        i0 = 0;

     label1:
        $r7 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $i2 = lengthof $r7;

        if i0 >= $i2 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ");

        $r11 = r0.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] mValues>;

        $r13 = $r11[i0];

        $r12 = virtualinvoke $r13.<android.animation.PropertyValuesHolder: java.lang.String toString()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }
}
