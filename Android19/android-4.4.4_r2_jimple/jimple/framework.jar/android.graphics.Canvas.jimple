public class android.graphics.Canvas extends java.lang.Object
{
    public static final int ALL_SAVE_FLAG;
    public static final int CLIP_SAVE_FLAG;
    public static final int CLIP_TO_LAYER_SAVE_FLAG;
    public static final int DIRECTION_LTR;
    public static final int DIRECTION_RTL;
    public static final int FULL_COLOR_LAYER_SAVE_FLAG;
    public static final int HAS_ALPHA_LAYER_SAVE_FLAG;
    public static final int MATRIX_SAVE_FLAG;
    private static final int MAXMIMUM_BITMAP_SIZE;
    private android.graphics.Bitmap mBitmap;
    protected int mDensity;
    private android.graphics.DrawFilter mDrawFilter;
    private final android.graphics.Canvas$CanvasFinalizer mFinalizer;
    public int mNativeCanvas;
    protected int mScreenDensity;
    private int mSurfaceFormat;

    public void <init>()
    {
        android.graphics.Canvas r0;
        boolean $z0;
        int $i0, $i1;
        android.graphics.Canvas$CanvasFinalizer $r1;

        r0 := @this: android.graphics.Canvas;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.Canvas: int mDensity> = 0;

        r0.<android.graphics.Canvas: int mScreenDensity> = 0;

        $z0 = virtualinvoke r0.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        if $z0 != 0 goto label1;

        $i0 = staticinvoke <android.graphics.Canvas: int initRaster(int)>(0);

        r0.<android.graphics.Canvas: int mNativeCanvas> = $i0;

        $r1 = new android.graphics.Canvas$CanvasFinalizer;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        specialinvoke $r1.<android.graphics.Canvas$CanvasFinalizer: void <init>(int)>($i1);

        r0.<android.graphics.Canvas: android.graphics.Canvas$CanvasFinalizer mFinalizer> = $r1;

        return;

     label1:
        r0.<android.graphics.Canvas: android.graphics.Canvas$CanvasFinalizer mFinalizer> = null;

        return;
    }

    public void <init>(int)
    {
        android.graphics.Canvas r0;
        int i0, $i1, $i2;
        android.graphics.Canvas$CanvasFinalizer $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.Canvas: int mDensity> = 0;

        r0.<android.graphics.Canvas: int mScreenDensity> = 0;

        if i0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        r0.<android.graphics.Canvas: int mNativeCanvas> = i0;

        $r1 = new android.graphics.Canvas$CanvasFinalizer;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        specialinvoke $r1.<android.graphics.Canvas$CanvasFinalizer: void <init>(int)>($i1);

        r0.<android.graphics.Canvas: android.graphics.Canvas$CanvasFinalizer mFinalizer> = $r1;

        $i2 = staticinvoke <android.graphics.Bitmap: int getDefaultDensity()>();

        r0.<android.graphics.Canvas: int mDensity> = $i2;

        return;
    }

    public void <init>(android.graphics.Bitmap)
    {
        android.graphics.Canvas r0;
        android.graphics.Bitmap r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas$CanvasFinalizer $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.Canvas: int mDensity> = 0;

        r0.<android.graphics.Canvas: int mScreenDensity> = 0;

        $z0 = virtualinvoke r1.<android.graphics.Bitmap: boolean isMutable()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Immutable bitmap passed to Canvas constructor");

        throw $r3;

     label1:
        staticinvoke <android.graphics.Canvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r1);

        $i0 = virtualinvoke r1.<android.graphics.Bitmap: int ni()>();

        $i1 = staticinvoke <android.graphics.Canvas: int initRaster(int)>($i0);

        r0.<android.graphics.Canvas: int mNativeCanvas> = $i1;

        $r2 = new android.graphics.Canvas$CanvasFinalizer;

        $i2 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        specialinvoke $r2.<android.graphics.Canvas$CanvasFinalizer: void <init>(int)>($i2);

        r0.<android.graphics.Canvas: android.graphics.Canvas$CanvasFinalizer mFinalizer> = $r2;

        r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap> = r1;

        $i3 = r1.<android.graphics.Bitmap: int mDensity>;

        r0.<android.graphics.Canvas: int mDensity> = $i3;

        return;
    }

    static void access$000(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <android.graphics.Canvas: void finalizer(int)>(i0);

        return;
    }

    protected static void checkRange(int, int, int)
    {
        int i0, i1, i2, $i3, $i4;
        java.lang.ArrayIndexOutOfBoundsException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i1 | i2;

        if $i3 < 0 goto label1;

        $i4 = i1 + i2;

        if $i4 <= i0 goto label2;

     label1:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label2:
        return;
    }

    private static native void copyNativeCanvasState(int, int);

    private static native void finalizer(int);

    public static native void freeCaches();

    public static native void freeTextLayoutCaches();

    private static native int initRaster(int);

    private static native void nativeDrawBitmapMatrix(int, int, int, int);

    private static native void nativeDrawBitmapMesh(int, int, int, int, float[], int, int[], int, int);

    private static native void nativeDrawVertices(int, int, int, float[], int, float[], int, int[], int, short[], int, int, int);

    private static native void nativeSetDrawFilter(int, int);

    private static native boolean native_clipPath(int, int, int);

    private static native boolean native_clipRect(int, float, float, float, float, int);

    private static native boolean native_clipRegion(int, int, int);

    private static native void native_concat(int, int);

    private static native void native_drawARGB(int, int, int, int, int);

    private static native void native_drawArc(int, android.graphics.RectF, float, float, boolean, int);

    private native void native_drawBitmap(int, int, float, float, int, int, int, int);

    private static native void native_drawBitmap(int, int, android.graphics.Rect, android.graphics.Rect, int, int, int);

    private native void native_drawBitmap(int, int, android.graphics.Rect, android.graphics.RectF, int, int, int);

    private static native void native_drawBitmap(int, int[], int, int, float, float, int, int, boolean, int);

    private static native void native_drawCircle(int, float, float, float, int);

    private static native void native_drawColor(int, int);

    private static native void native_drawColor(int, int, int);

    private static native void native_drawLine(int, float, float, float, float, int);

    private static native void native_drawOval(int, android.graphics.RectF, int);

    private static native void native_drawPaint(int, int);

    private static native void native_drawPath(int, int, int);

    private static native void native_drawPosText(int, java.lang.String, float[], int);

    private static native void native_drawPosText(int, char[], int, int, float[], int);

    private static native void native_drawRGB(int, int, int, int);

    private static native void native_drawRect(int, float, float, float, float, int);

    private static native void native_drawRect(int, android.graphics.RectF, int);

    private static native void native_drawRoundRect(int, android.graphics.RectF, float, float, int);

    private static native void native_drawText(int, java.lang.String, int, int, float, float, int, int);

    private static native void native_drawText(int, char[], int, int, float, float, int, int);

    private static native void native_drawTextOnPath(int, java.lang.String, int, float, float, int, int);

    private static native void native_drawTextOnPath(int, char[], int, int, int, float, float, int, int);

    private static native void native_drawTextRun(int, java.lang.String, int, int, int, int, float, float, int, int);

    private static native void native_drawTextRun(int, char[], int, int, int, int, float, float, int, int);

    private static native void native_getCTM(int, int);

    private static native boolean native_getClipBounds(int, android.graphics.Rect);

    private static native boolean native_quickReject(int, float, float, float, float);

    private static native boolean native_quickReject(int, int);

    private static native boolean native_quickReject(int, android.graphics.RectF);

    private static native int native_saveLayer(int, float, float, float, float, int, int);

    private static native int native_saveLayer(int, android.graphics.RectF, int, int);

    private static native int native_saveLayerAlpha(int, float, float, float, float, int, int);

    private static native int native_saveLayerAlpha(int, android.graphics.RectF, int, int);

    private static native void native_setMatrix(int, int);

    private void safeCanvasSwap(int, boolean)
    {
        android.graphics.Canvas r0;
        int i0, i1, $i3;
        boolean z0;
        android.graphics.Canvas$CanvasFinalizer $r1;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        r0.<android.graphics.Canvas: int mNativeCanvas> = i0;

        $r1 = r0.<android.graphics.Canvas: android.graphics.Canvas$CanvasFinalizer mFinalizer>;

        staticinvoke <android.graphics.Canvas$CanvasFinalizer: int access$102(android.graphics.Canvas$CanvasFinalizer,int)>($r1, i0);

        if z0 == 0 goto label1;

        $i3 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void copyNativeCanvasState(int,int)>(i1, $i3);

     label1:
        staticinvoke <android.graphics.Canvas: void finalizer(int)>(i1);

        return;
    }

    protected static void throwIfCannotDraw(android.graphics.Bitmap)
    {
        android.graphics.Bitmap r0;
        boolean $z0, $z1, $z2;
        android.graphics.Bitmap$Config $r1, $r2;
        java.lang.RuntimeException $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11;
        java.lang.String $r7, $r12;

        r0 := @parameter0: android.graphics.Bitmap;

        $z0 = virtualinvoke r0.<android.graphics.Bitmap: boolean isRecycled()>();

        if $z0 == 0 goto label1;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canvas: trying to use a recycled bitmap ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $z1 = virtualinvoke r0.<android.graphics.Bitmap: boolean isPremultiplied()>();

        if $z1 != 0 goto label2;

        $r1 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        if $r1 != $r2 goto label2;

        $z2 = virtualinvoke r0.<android.graphics.Bitmap: boolean hasAlpha()>();

        if $z2 == 0 goto label2;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canvas: trying to use a non-premultiplied bitmap ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        return;
    }

    public boolean clipPath(android.graphics.Path)
    {
        android.graphics.Canvas r0;
        android.graphics.Path r1;
        android.graphics.Region$Op $r2;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Path;

        $r2 = <android.graphics.Region$Op: android.graphics.Region$Op INTERSECT>;

        $z0 = virtualinvoke r0.<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>(r1, $r2);

        return $z0;
    }

    public boolean clipPath(android.graphics.Path, android.graphics.Region$Op)
    {
        android.graphics.Canvas r0;
        android.graphics.Path r1;
        android.graphics.Region$Op r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Path;

        r2 := @parameter1: android.graphics.Region$Op;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke r1.<android.graphics.Path: int ni()>();

        $i2 = r2.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipPath(int,int,int)>($i0, $i1, $i2);

        return $z0;
    }

    public native boolean clipRect(float, float, float, float);

    public boolean clipRect(float, float, float, float, android.graphics.Region$Op)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2, f3;
        android.graphics.Region$Op r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.Region$Op;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r1.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipRect(int,float,float,float,float,int)>($i1, f0, f1, f2, f3, $i0);

        return $z0;
    }

    public native boolean clipRect(int, int, int, int);

    public native boolean clipRect(android.graphics.Rect);

    public boolean clipRect(android.graphics.Rect, android.graphics.Region$Op)
    {
        android.graphics.Canvas r0;
        android.graphics.Rect r1;
        android.graphics.Region$Op r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Region$Op;

        $i5 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r1.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $i1 = r1.<android.graphics.Rect: int top>;

        $f2 = (float) $i1;

        $i2 = r1.<android.graphics.Rect: int right>;

        $f1 = (float) $i2;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i3;

        $i4 = r2.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipRect(int,float,float,float,float,int)>($i5, $f3, $f2, $f1, $f0, $i4);

        return $z0;
    }

    public native boolean clipRect(android.graphics.RectF);

    public boolean clipRect(android.graphics.RectF, android.graphics.Region$Op)
    {
        android.graphics.Canvas r0;
        android.graphics.RectF r1;
        android.graphics.Region$Op r2;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.Region$Op;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $f3 = r1.<android.graphics.RectF: float left>;

        $f2 = r1.<android.graphics.RectF: float top>;

        $f1 = r1.<android.graphics.RectF: float right>;

        $f0 = r1.<android.graphics.RectF: float bottom>;

        $i0 = r2.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipRect(int,float,float,float,float,int)>($i1, $f3, $f2, $f1, $f0, $i0);

        return $z0;
    }

    public boolean clipRegion(android.graphics.Region)
    {
        android.graphics.Canvas r0;
        android.graphics.Region r1;
        android.graphics.Region$Op $r2;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Region;

        $r2 = <android.graphics.Region$Op: android.graphics.Region$Op INTERSECT>;

        $z0 = virtualinvoke r0.<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region$Op)>(r1, $r2);

        return $z0;
    }

    public boolean clipRegion(android.graphics.Region, android.graphics.Region$Op)
    {
        android.graphics.Canvas r0;
        android.graphics.Region r1;
        android.graphics.Region$Op r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Region;

        r2 := @parameter1: android.graphics.Region$Op;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke r1.<android.graphics.Region: int ni()>();

        $i2 = r2.<android.graphics.Region$Op: int nativeInt>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_clipRegion(int,int,int)>($i0, $i1, $i2);

        return $z0;
    }

    public void concat(android.graphics.Matrix)
    {
        android.graphics.Canvas r0;
        android.graphics.Matrix r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Matrix;

        if r1 == null goto label1;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r1.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Canvas: void native_concat(int,int)>($i1, $i0);

     label1:
        return;
    }

    public void drawARGB(int, int, int, int)
    {
        android.graphics.Canvas r0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void native_drawARGB(int,int,int,int,int)>($i4, i0, i1, i2, i3);

        return;
    }

    public void drawArc(android.graphics.RectF, float, float, boolean, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.RectF r1;
        float f0, f1;
        boolean z0;
        android.graphics.Paint r2;
        int $i0, $i1;
        java.lang.NullPointerException $r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.RectF;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        r2 := @parameter4: android.graphics.Paint;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawArc(int,android.graphics.RectF,float,float,boolean,int)>($i1, r1, f0, f1, z0, $i0);

        return;
    }

    public void drawBitmap(android.graphics.Bitmap, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Bitmap r1;
        float f0, f1;
        android.graphics.Paint r2;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Bitmap;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: android.graphics.Paint;

        staticinvoke <android.graphics.Canvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r1);

        i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        i1 = virtualinvoke r1.<android.graphics.Bitmap: int ni()>();

        if r2 == null goto label2;

        i2 = r2.<android.graphics.Paint: int mNativePaint>;

     label1:
        $i5 = r0.<android.graphics.Canvas: int mDensity>;

        $i4 = r0.<android.graphics.Canvas: int mScreenDensity>;

        $i3 = r1.<android.graphics.Bitmap: int mDensity>;

        specialinvoke r0.<android.graphics.Canvas: void native_drawBitmap(int,int,float,float,int,int,int,int)>(i0, i1, f0, f1, i2, $i5, $i4, $i3);

        return;

     label2:
        i2 = 0;

        goto label1;
    }

    public void drawBitmap(android.graphics.Bitmap, android.graphics.Matrix, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Bitmap r1;
        android.graphics.Matrix r2;
        android.graphics.Paint r3;
        int i0, i1, i2, i3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Matrix;

        r3 := @parameter2: android.graphics.Paint;

        i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        i1 = virtualinvoke r1.<android.graphics.Bitmap: int ni()>();

        i2 = virtualinvoke r2.<android.graphics.Matrix: int ni()>();

        if r3 == null goto label2;

        i3 = r3.<android.graphics.Paint: int mNativePaint>;

     label1:
        staticinvoke <android.graphics.Canvas: void nativeDrawBitmapMatrix(int,int,int,int)>(i0, i1, i2, i3);

        return;

     label2:
        i3 = 0;

        goto label1;
    }

    public void drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Bitmap r1;
        android.graphics.Rect r2, r3;
        android.graphics.Paint r4;
        int i0, i1, i2, $i3, $i4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Paint;

        if r3 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        staticinvoke <android.graphics.Canvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r1);

        i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        i1 = virtualinvoke r1.<android.graphics.Bitmap: int ni()>();

        if r4 == null goto label3;

        i2 = r4.<android.graphics.Paint: int mNativePaint>;

     label2:
        $i4 = r0.<android.graphics.Canvas: int mScreenDensity>;

        $i3 = r1.<android.graphics.Bitmap: int mDensity>;

        staticinvoke <android.graphics.Canvas: void native_drawBitmap(int,int,android.graphics.Rect,android.graphics.Rect,int,int,int)>(i0, i1, r2, r3, i2, $i4, $i3);

        return;

     label3:
        i2 = 0;

        goto label2;
    }

    public void drawBitmap(android.graphics.Bitmap, android.graphics.Rect, android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Bitmap r1;
        android.graphics.Rect r2;
        android.graphics.RectF r3;
        android.graphics.Paint r4;
        int i0, i1, i2, $i3, $i4;
        java.lang.NullPointerException $r5;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.RectF;

        r4 := @parameter3: android.graphics.Paint;

        if r3 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        staticinvoke <android.graphics.Canvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r1);

        i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        i1 = virtualinvoke r1.<android.graphics.Bitmap: int ni()>();

        if r4 == null goto label3;

        i2 = r4.<android.graphics.Paint: int mNativePaint>;

     label2:
        $i4 = r0.<android.graphics.Canvas: int mScreenDensity>;

        $i3 = r1.<android.graphics.Bitmap: int mDensity>;

        specialinvoke r0.<android.graphics.Canvas: void native_drawBitmap(int,int,android.graphics.Rect,android.graphics.RectF,int,int,int)>(i0, i1, r2, r3, i2, $i4, $i3);

        return;

     label3:
        i2 = 0;

        goto label2;
    }

    public void drawBitmap(int[], int, int, float, float, int, int, boolean, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        int[] r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12;
        float f0, f1;
        boolean z0;
        android.graphics.Paint r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        java.lang.IllegalArgumentException $r4, $r5, $r6;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        z0 := @parameter7: boolean;

        r2 := @parameter8: android.graphics.Paint;

        if i2 >= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("width must be >= 0");

        throw $r6;

     label1:
        if i3 >= 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("height must be >= 0");

        throw $r4;

     label2:
        $i8 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        if $i8 >= i2 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("abs(stride) must be >= width");

        throw $r5;

     label3:
        $i9 = i3 - 1;

        $i10 = i1 * $i9;

        i4 = i0 + $i10;

        i5 = lengthof r1;

        if i0 < 0 goto label4;

        $i12 = i0 + i2;

        if $i12 > i5 goto label4;

        if i4 < 0 goto label4;

        $i11 = i4 + i2;

        if $i11 <= i5 goto label5;

     label4:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label5:
        if i2 == 0 goto label6;

        if i3 != 0 goto label7;

     label6:
        return;

     label7:
        i6 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        if r2 == null goto label9;

        i7 = r2.<android.graphics.Paint: int mNativePaint>;

     label8:
        staticinvoke <android.graphics.Canvas: void native_drawBitmap(int,int[],int,int,float,float,int,int,boolean,int)>(i6, r1, i0, i1, f0, f1, i2, i3, z0, i7);

        return;

     label9:
        i7 = 0;

        goto label8;
    }

    public void drawBitmap(int[], int, int, int, int, int, int, boolean, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        int[] r1;
        int i0, i1, i2, i3, i4, i5;
        boolean z0;
        android.graphics.Paint r2;
        float $f0, $f1;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        z0 := @parameter7: boolean;

        r2 := @parameter8: android.graphics.Paint;

        $f1 = (float) i2;

        $f0 = (float) i3;

        virtualinvoke r0.<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>(r1, i0, i1, $f1, $f0, i4, i5, z0, r2);

        return;
    }

    public void drawBitmapMesh(android.graphics.Bitmap, int, int, float[], int, int[], int, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Bitmap r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        float[] r2;
        int[] r3;
        android.graphics.Paint r4;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: float[];

        i2 := @parameter4: int;

        r3 := @parameter5: int[];

        i3 := @parameter6: int;

        r4 := @parameter7: android.graphics.Paint;

        $i8 = i0 | i1;

        $i9 = i2 | $i8;

        $i10 = i3 | $i9;

        if $i10 >= 0 goto label1;

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        if i0 == 0 goto label2;

        if i1 != 0 goto label3;

     label2:
        return;

     label3:
        $i11 = i0 + 1;

        $i12 = i1 + 1;

        i4 = $i11 * $i12;

        $i13 = lengthof r2;

        $i14 = i4 * 2;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i13, i2, $i14);

        if r3 == null goto label4;

        $i15 = lengthof r3;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i15, i3, i4);

     label4:
        i5 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        i6 = virtualinvoke r1.<android.graphics.Bitmap: int ni()>();

        if r4 == null goto label6;

        i7 = r4.<android.graphics.Paint: int mNativePaint>;

     label5:
        staticinvoke <android.graphics.Canvas: void nativeDrawBitmapMesh(int,int,int,int,float[],int,int[],int,int)>(i5, i6, i0, i1, r2, i2, r3, i3, i7);

        return;

     label6:
        i7 = 0;

        goto label5;
    }

    public void drawCircle(float, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2;
        android.graphics.Paint r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r1 := @parameter3: android.graphics.Paint;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawCircle(int,float,float,float,int)>($i1, f0, f1, f2, $i0);

        return;
    }

    public void drawColor(int)
    {
        android.graphics.Canvas r0;
        int i0, $i1;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void native_drawColor(int,int)>($i1, i0);

        return;
    }

    public void drawColor(int, android.graphics.PorterDuff$Mode)
    {
        android.graphics.Canvas r0;
        int i0, $i1, $i2;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $i2 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = r1.<android.graphics.PorterDuff$Mode: int nativeInt>;

        staticinvoke <android.graphics.Canvas: void native_drawColor(int,int,int)>($i2, i0, $i1);

        return;
    }

    public void drawLine(float, float, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2, f3;
        android.graphics.Paint r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.Paint;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawLine(int,float,float,float,float,int)>($i1, f0, f1, f2, f3, $i0);

        return;
    }

    public native void drawLines(float[], int, int, android.graphics.Paint);

    public void drawLines(float[], android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        float[] r1;
        android.graphics.Paint r2;
        int $i0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: float[];

        r2 := @parameter1: android.graphics.Paint;

        $i0 = lengthof r1;

        virtualinvoke r0.<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>(r1, 0, $i0, r2);

        return;
    }

    public void drawOval(android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.RectF r1;
        android.graphics.Paint r2;
        int $i0, $i1;
        java.lang.NullPointerException $r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.Paint;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawOval(int,android.graphics.RectF,int)>($i1, r1, $i0);

        return;
    }

    public void drawPaint(android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Paint r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Paint;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawPaint(int,int)>($i1, $i0);

        return;
    }

    public void drawPatch(android.graphics.NinePatch, android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.NinePatch r1;
        android.graphics.Rect r2;
        android.graphics.Paint r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.NinePatch;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Paint;

        virtualinvoke r1.<android.graphics.NinePatch: void drawSoftware(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>(r0, r2, r3);

        return;
    }

    public void drawPatch(android.graphics.NinePatch, android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.NinePatch r1;
        android.graphics.RectF r2;
        android.graphics.Paint r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.NinePatch;

        r2 := @parameter1: android.graphics.RectF;

        r3 := @parameter2: android.graphics.Paint;

        virtualinvoke r1.<android.graphics.NinePatch: void drawSoftware(android.graphics.Canvas,android.graphics.RectF,android.graphics.Paint)>(r0, r2, r3);

        return;
    }

    public void drawPath(android.graphics.Path, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Path r1;
        android.graphics.Paint r2;
        int $i0, $i1, $i2;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Path;

        r2 := @parameter1: android.graphics.Paint;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke r1.<android.graphics.Path: int ni()>();

        $i2 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawPath(int,int,int)>($i0, $i1, $i2);

        return;
    }

    public void drawPicture(android.graphics.Picture)
    {
        android.graphics.Canvas r0;
        android.graphics.Picture r1;
        int i0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Picture;

        virtualinvoke r1.<android.graphics.Picture: void endRecording()>();

        i0 = virtualinvoke r0.<android.graphics.Canvas: int save()>();

        virtualinvoke r1.<android.graphics.Picture: void draw(android.graphics.Canvas)>(r0);

        virtualinvoke r0.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        return;
    }

    public void drawPicture(android.graphics.Picture, android.graphics.Rect)
    {
        android.graphics.Canvas r0;
        android.graphics.Picture r1;
        android.graphics.Rect r2;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Picture;

        r2 := @parameter1: android.graphics.Rect;

        virtualinvoke r0.<android.graphics.Canvas: int save()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $f1 = (float) $i1;

        $i2 = r2.<android.graphics.Rect: int top>;

        $f0 = (float) $i2;

        virtualinvoke r0.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $i3 = virtualinvoke r1.<android.graphics.Picture: int getWidth()>();

        if $i3 <= 0 goto label1;

        $i4 = virtualinvoke r1.<android.graphics.Picture: int getHeight()>();

        if $i4 <= 0 goto label1;

        $i5 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $f2 = (float) $i5;

        $i6 = virtualinvoke r1.<android.graphics.Picture: int getWidth()>();

        $f3 = (float) $i6;

        $f4 = $f2 / $f3;

        $i7 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $f5 = (float) $i7;

        $i8 = virtualinvoke r1.<android.graphics.Picture: int getHeight()>();

        $f7 = (float) $i8;

        $f6 = $f5 / $f7;

        virtualinvoke r0.<android.graphics.Canvas: void scale(float,float)>($f4, $f6);

     label1:
        virtualinvoke r0.<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>(r1);

        virtualinvoke r0.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void drawPicture(android.graphics.Picture, android.graphics.RectF)
    {
        android.graphics.Canvas r0;
        android.graphics.Picture r1;
        android.graphics.RectF r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int $i1, $i2, $i3, $i4;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Picture;

        r2 := @parameter1: android.graphics.RectF;

        virtualinvoke r0.<android.graphics.Canvas: int save()>();

        $f1 = r2.<android.graphics.RectF: float left>;

        $f0 = r2.<android.graphics.RectF: float top>;

        virtualinvoke r0.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $i1 = virtualinvoke r1.<android.graphics.Picture: int getWidth()>();

        if $i1 <= 0 goto label1;

        $i2 = virtualinvoke r1.<android.graphics.Picture: int getHeight()>();

        if $i2 <= 0 goto label1;

        $f2 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        $i3 = virtualinvoke r1.<android.graphics.Picture: int getWidth()>();

        $f3 = (float) $i3;

        $f4 = $f2 / $f3;

        $f5 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        $i4 = virtualinvoke r1.<android.graphics.Picture: int getHeight()>();

        $f6 = (float) $i4;

        $f7 = $f5 / $f6;

        virtualinvoke r0.<android.graphics.Canvas: void scale(float,float)>($f4, $f7);

     label1:
        virtualinvoke r0.<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>(r1);

        virtualinvoke r0.<android.graphics.Canvas: void restore()>();

        return;
    }

    public native void drawPoint(float, float, android.graphics.Paint);

    public native void drawPoints(float[], int, int, android.graphics.Paint);

    public void drawPoints(float[], android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        float[] r1;
        android.graphics.Paint r2;
        int $i0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: float[];

        r2 := @parameter1: android.graphics.Paint;

        $i0 = lengthof r1;

        virtualinvoke r0.<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>(r1, 0, $i0, r2);

        return;
    }

    public void drawPosText(java.lang.String, float[], android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        java.lang.String r1;
        float[] r2;
        android.graphics.Paint r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        r3 := @parameter2: android.graphics.Paint;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = 2 * $i0;

        $i1 = lengthof r2;

        if $i2 <= $i1 goto label1;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label1:
        $i4 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i3 = r3.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawPosText(int,java.lang.String,float[],int)>($i4, r1, r2, $i3);

        return;
    }

    public void drawPosText(char[], int, int, float[], android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float[] r2;
        android.graphics.Paint r3;
        java.lang.IndexOutOfBoundsException $r4;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: float[];

        r3 := @parameter4: android.graphics.Paint;

        if i0 < 0 goto label1;

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 > $i2 goto label1;

        $i5 = i1 * 2;

        $i4 = lengthof r2;

        if $i5 <= $i4 goto label2;

     label1:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label2:
        $i7 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i6 = r3.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawPosText(int,char[],int,int,float[],int)>($i7, r1, i0, i1, r2, $i6);

        return;
    }

    public void drawRGB(int, int, int)
    {
        android.graphics.Canvas r0;
        int i0, i1, i2, $i3;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void native_drawRGB(int,int,int,int)>($i3, i0, i1, i2);

        return;
    }

    public void drawRect(float, float, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2, f3;
        android.graphics.Paint r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.Paint;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawRect(int,float,float,float,float,int)>($i1, f0, f1, f2, f3, $i0);

        return;
    }

    public void drawRect(android.graphics.Rect, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Rect r1;
        android.graphics.Paint r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Paint;

        $i0 = r1.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $i1 = r1.<android.graphics.Rect: int top>;

        $f2 = (float) $i1;

        $i2 = r1.<android.graphics.Rect: int right>;

        $f1 = (float) $i2;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i3;

        virtualinvoke r0.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f3, $f2, $f1, $f0, r2);

        return;
    }

    public void drawRect(android.graphics.RectF, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.RectF r1;
        android.graphics.Paint r2;
        int $i0, $i1;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.Paint;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawRect(int,android.graphics.RectF,int)>($i1, r1, $i0);

        return;
    }

    public void drawRoundRect(android.graphics.RectF, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.RectF r1;
        float f0, f1;
        android.graphics.Paint r2;
        int $i0, $i1;
        java.lang.NullPointerException $r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.RectF;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: android.graphics.Paint;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawRoundRect(int,android.graphics.RectF,float,float,int)>($i1, r1, f0, f1, $i0);

        return;
    }

    public void drawText(java.lang.CharSequence, int, int, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float f0, f1;
        android.graphics.Paint r2;
        char[] r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r4;
        android.text.GraphicsOperations $r5;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Paint;

        $z0 = r1 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof android.text.SpannedString;

        if $z1 != 0 goto label1;

        $z2 = r1 instanceof android.text.SpannableString;

        if $z2 == 0 goto label2;

     label1:
        $i2 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i4 = r2.<android.graphics.Paint: int mBidiFlags>;

        $i3 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawText(int,java.lang.String,int,int,float,float,int,int)>($i2, $r4, i0, i1, f0, f1, $i4, $i3);

        return;

     label2:
        $z3 = r1 instanceof android.text.GraphicsOperations;

        if $z3 == 0 goto label3;

        $r5 = (android.text.GraphicsOperations) r1;

        interfaceinvoke $r5.<android.text.GraphicsOperations: void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)>(r0, i0, i1, f0, f1, r2);

        return;

     label3:
        $i5 = i1 - i0;

        r3 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>($i5);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i0, i1, r3, 0);

        $i8 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i9 = i1 - i0;

        $i6 = r2.<android.graphics.Paint: int mBidiFlags>;

        $i7 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawText(int,char[],int,int,float,float,int,int)>($i8, r3, 0, $i9, f0, f1, $i6, $i7);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r3);

        return;
    }

    public void drawText(java.lang.String, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        java.lang.String r1;
        float f0, f1;
        android.graphics.Paint r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: android.graphics.Paint;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = r2.<android.graphics.Paint: int mBidiFlags>;

        $i2 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawText(int,java.lang.String,int,int,float,float,int,int)>($i0, r1, 0, $i1, f0, f1, $i3, $i2);

        return;
    }

    public void drawText(java.lang.String, int, int, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        float f0, f1;
        android.graphics.Paint r2;
        java.lang.IndexOutOfBoundsException $r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Paint;

        $i3 = i0 | i1;

        $i2 = i1 - i0;

        $i4 = $i3 | $i2;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i5 - i1;

        $i7 = $i4 | $i6;

        if $i7 >= 0 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i10 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i9 = r2.<android.graphics.Paint: int mBidiFlags>;

        $i8 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawText(int,java.lang.String,int,int,float,float,int,int)>($i10, r1, i0, i1, f0, f1, $i9, $i8);

        return;
    }

    public void drawText(char[], int, int, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float f0, f1;
        android.graphics.Paint r2;
        java.lang.IndexOutOfBoundsException $r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Paint;

        $i3 = i0 | i1;

        $i2 = i0 + i1;

        $i7 = $i3 | $i2;

        $i4 = lengthof r1;

        $i5 = $i4 - i0;

        $i6 = $i5 - i1;

        $i8 = $i7 | $i6;

        if $i8 >= 0 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i11 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i10 = r2.<android.graphics.Paint: int mBidiFlags>;

        $i9 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawText(int,char[],int,int,float,float,int,int)>($i11, r1, i0, i1, f0, f1, $i10, $i9);

        return;
    }

    public void drawTextOnPath(java.lang.String, android.graphics.Path, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        java.lang.String r1;
        android.graphics.Path r2;
        float f0, f1;
        android.graphics.Paint r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.graphics.Path;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        r3 := @parameter4: android.graphics.Paint;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i2 = virtualinvoke r2.<android.graphics.Path: int ni()>();

        $i4 = r3.<android.graphics.Paint: int mBidiFlags>;

        $i3 = r3.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawTextOnPath(int,java.lang.String,int,float,float,int,int)>($i1, r1, $i2, f0, f1, $i4, $i3);

     label1:
        return;
    }

    public void drawTextOnPath(char[], int, int, android.graphics.Path, float, float, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Path r2;
        float f0, f1;
        android.graphics.Paint r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Path;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        r3 := @parameter6: android.graphics.Paint;

        if i0 < 0 goto label1;

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label2;

     label1:
        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label2:
        $i4 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i5 = virtualinvoke r2.<android.graphics.Path: int ni()>();

        $i7 = r3.<android.graphics.Paint: int mBidiFlags>;

        $i6 = r3.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawTextOnPath(int,char[],int,int,int,float,float,int,int)>($i4, r1, i0, i1, $i5, f0, f1, $i7, $i6);

        return;
    }

    public void drawTextRun(java.lang.CharSequence, int, int, int, int, float, float, int, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        float f0, f1;
        android.graphics.Paint r2;
        byte b5;
        char[] r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r4;
        android.text.GraphicsOperations $r5;
        java.lang.NullPointerException $r6, $r8;
        java.lang.IndexOutOfBoundsException $r7;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        i4 := @parameter7: int;

        r2 := @parameter8: android.graphics.Paint;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("text is null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("paint is null");

        throw $r8;

     label2:
        $i9 = i0 | i1;

        $i8 = i1 - i0;

        $i11 = $i9 | $i8;

        $i10 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i13 = $i10 - i1;

        $i12 = $i11 | $i13;

        if $i12 >= 0 goto label3;

        $r7 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r7;

     label3:
        if i4 != 0 goto label6;

        b5 = 0;

     label4:
        $z0 = r1 instanceof java.lang.String;

        if $z0 != 0 goto label5;

        $z2 = r1 instanceof android.text.SpannedString;

        if $z2 != 0 goto label5;

        $z1 = r1 instanceof android.text.SpannableString;

        if $z1 == 0 goto label7;

     label5:
        $i14 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i15 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawTextRun(int,java.lang.String,int,int,int,int,float,float,int,int)>($i14, $r4, i0, i1, i2, i3, f0, f1, b5, $i15);

        return;

     label6:
        b5 = 1;

        goto label4;

     label7:
        $z3 = r1 instanceof android.text.GraphicsOperations;

        if $z3 == 0 goto label8;

        $r5 = (android.text.GraphicsOperations) r1;

        interfaceinvoke $r5.<android.text.GraphicsOperations: void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,int,android.graphics.Paint)>(r0, i0, i1, i2, i3, f0, f1, b5, r2);

        return;

     label8:
        i6 = i3 - i2;

        i7 = i1 - i0;

        r3 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>(i6);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i2, i3, r3, 0);

        $i18 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i16 = i0 - i2;

        $i17 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawTextRun(int,char[],int,int,int,int,float,float,int,int)>($i18, r3, $i16, i7, 0, i6, f0, f1, b5, $i17);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r3);

        return;
    }

    public void drawTextRun(char[], int, int, int, int, float, float, int, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        char[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float f0, f1;
        android.graphics.Paint r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6;
        java.lang.NullPointerException $r8, $r10;
        java.lang.IndexOutOfBoundsException $r9;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        i4 := @parameter7: int;

        r2 := @parameter8: android.graphics.Paint;

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("text is null");

        throw $r10;

     label1:
        if r2 != null goto label2;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("paint is null");

        throw $r8;

     label2:
        $i8 = i0 | i1;

        $i5 = lengthof r1;

        $i6 = $i5 - i0;

        $i7 = $i6 - i1;

        $i9 = $i8 | $i7;

        if $i9 >= 0 goto label3;

        $r9 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r9.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r9;

     label3:
        if i4 == 0 goto label4;

        if i4 == 1 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown dir: ");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r3;

     label4:
        $i11 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i10 = r2.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void native_drawTextRun(int,char[],int,int,int,int,float,float,int,int)>($i11, r1, i0, i1, i2, i3, f0, f1, i4, $i10);

        return;
    }

    public void drawVertices(android.graphics.Canvas$VertexMode, int, float[], int, float[], int, int[], int, short[], int, int, android.graphics.Paint)
    {
        android.graphics.Canvas r0;
        android.graphics.Canvas$VertexMode r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float[] r2, r3;
        int[] r4;
        short[] r5;
        android.graphics.Paint r6;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Canvas$VertexMode;

        i0 := @parameter1: int;

        r2 := @parameter2: float[];

        i1 := @parameter3: int;

        r3 := @parameter4: float[];

        i2 := @parameter5: int;

        r4 := @parameter6: int[];

        i3 := @parameter7: int;

        r5 := @parameter8: short[];

        i4 := @parameter9: int;

        i5 := @parameter10: int;

        r6 := @parameter11: android.graphics.Paint;

        $i6 = lengthof r2;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i6, i1, i0);

        if r3 == null goto label1;

        $i13 = lengthof r3;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i13, i2, i0);

     label1:
        if r4 == null goto label2;

        $i11 = lengthof r4;

        $i12 = i0 / 2;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i11, i3, $i12);

     label2:
        if r5 == null goto label3;

        $i9 = lengthof r5;

        staticinvoke <android.graphics.Canvas: void checkRange(int,int,int)>($i9, i4, i5);

     label3:
        $i10 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i8 = r1.<android.graphics.Canvas$VertexMode: int nativeInt>;

        $i7 = r6.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Canvas: void nativeDrawVertices(int,int,int,float[],int,float[],int,int[],int,short[],int,int,int)>($i10, $i8, i0, r2, i1, r3, i2, r4, i3, r5, i4, i5, $i7);

        return;
    }

    public final android.graphics.Rect getClipBounds()
    {
        android.graphics.Canvas r0;
        android.graphics.Rect r1, $r2;

        r0 := @this: android.graphics.Canvas;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>(r1);

        return r1;
    }

    public boolean getClipBounds(android.graphics.Rect)
    {
        android.graphics.Canvas r0;
        android.graphics.Rect r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Rect;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_getClipBounds(int,android.graphics.Rect)>($i0, r1);

        return $z0;
    }

    public int getDensity()
    {
        android.graphics.Canvas r0;
        int $i0;

        r0 := @this: android.graphics.Canvas;

        $i0 = r0.<android.graphics.Canvas: int mDensity>;

        return $i0;
    }

    public android.graphics.DrawFilter getDrawFilter()
    {
        android.graphics.Canvas r0;
        android.graphics.DrawFilter $r1;

        r0 := @this: android.graphics.Canvas;

        $r1 = r0.<android.graphics.Canvas: android.graphics.DrawFilter mDrawFilter>;

        return $r1;
    }

    protected javax.microedition.khronos.opengles.GL getGL()
    {
        android.graphics.Canvas r0;

        r0 := @this: android.graphics.Canvas;

        return null;
    }

    public native int getHeight();

    public final android.graphics.Matrix getMatrix()
    {
        android.graphics.Canvas r0;
        android.graphics.Matrix r1, $r2;

        r0 := @this: android.graphics.Canvas;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>(r1);

        return r1;
    }

    public void getMatrix(android.graphics.Matrix)
    {
        android.graphics.Canvas r0;
        android.graphics.Matrix r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Matrix;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r1.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.graphics.Canvas: void native_getCTM(int,int)>($i1, $i0);

        return;
    }

    public int getMaximumBitmapHeight()
    {
        android.graphics.Canvas r0;

        r0 := @this: android.graphics.Canvas;

        return 32766;
    }

    public int getMaximumBitmapWidth()
    {
        android.graphics.Canvas r0;

        r0 := @this: android.graphics.Canvas;

        return 32766;
    }

    public int getNativeCanvas()
    {
        android.graphics.Canvas r0;
        int $i0;

        r0 := @this: android.graphics.Canvas;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        return $i0;
    }

    public native int getSaveCount();

    public native int getWidth();

    public boolean isHardwareAccelerated()
    {
        android.graphics.Canvas r0;

        r0 := @this: android.graphics.Canvas;

        return 0;
    }

    public native boolean isOpaque();

    public boolean quickReject(float, float, float, float, android.graphics.Canvas$EdgeType)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2, f3;
        android.graphics.Canvas$EdgeType r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.Canvas$EdgeType;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_quickReject(int,float,float,float,float)>($i0, f0, f1, f2, f3);

        return $z0;
    }

    public boolean quickReject(android.graphics.Path, android.graphics.Canvas$EdgeType)
    {
        android.graphics.Canvas r0;
        android.graphics.Path r1;
        android.graphics.Canvas$EdgeType r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Path;

        r2 := @parameter1: android.graphics.Canvas$EdgeType;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i1 = virtualinvoke r1.<android.graphics.Path: int ni()>();

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_quickReject(int,int)>($i0, $i1);

        return $z0;
    }

    public boolean quickReject(android.graphics.RectF, android.graphics.Canvas$EdgeType)
    {
        android.graphics.Canvas r0;
        android.graphics.RectF r1;
        android.graphics.Canvas$EdgeType r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.Canvas$EdgeType;

        $i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $z0 = staticinvoke <android.graphics.Canvas: boolean native_quickReject(int,android.graphics.RectF)>($i0, r1);

        return $z0;
    }

    public void release()
    {
        android.graphics.Canvas r0;
        android.graphics.Canvas$CanvasFinalizer $r1;

        r0 := @this: android.graphics.Canvas;

        $r1 = r0.<android.graphics.Canvas: android.graphics.Canvas$CanvasFinalizer mFinalizer>;

        virtualinvoke $r1.<android.graphics.Canvas$CanvasFinalizer: void dispose()>();

        return;
    }

    public native void restore();

    public native void restoreToCount(int);

    public native void rotate(float);

    public final void rotate(float, float, float)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2, $f3, $f4;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        virtualinvoke r0.<android.graphics.Canvas: void translate(float,float)>(f1, f2);

        virtualinvoke r0.<android.graphics.Canvas: void rotate(float)>(f0);

        $f4 = neg f1;

        $f3 = neg f2;

        virtualinvoke r0.<android.graphics.Canvas: void translate(float,float)>($f4, $f3);

        return;
    }

    public native int save();

    public native int save(int);

    public int saveLayer(float, float, float, float, android.graphics.Paint, int)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2, f3;
        android.graphics.Paint r1;
        int i0, i1, i2, $i3;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: android.graphics.Paint;

        i0 := @parameter5: int;

        i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        if r1 == null goto label2;

        i2 = r1.<android.graphics.Paint: int mNativePaint>;

     label1:
        $i3 = staticinvoke <android.graphics.Canvas: int native_saveLayer(int,float,float,float,float,int,int)>(i1, f0, f1, f2, f3, i2, i0);

        return $i3;

     label2:
        i2 = 0;

        goto label1;
    }

    public int saveLayer(android.graphics.RectF, android.graphics.Paint, int)
    {
        android.graphics.Canvas r0;
        android.graphics.RectF r1;
        android.graphics.Paint r2;
        int i0, i1, i2, $i3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.RectF;

        r2 := @parameter1: android.graphics.Paint;

        i0 := @parameter2: int;

        i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        if r2 == null goto label2;

        i2 = r2.<android.graphics.Paint: int mNativePaint>;

     label1:
        $i3 = staticinvoke <android.graphics.Canvas: int native_saveLayer(int,android.graphics.RectF,int,int)>(i1, r1, i2, i0);

        return $i3;

     label2:
        i2 = 0;

        goto label1;
    }

    public int saveLayerAlpha(float, float, float, float, int, int)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2, f3;
        int i0, i1, $i2, $i3;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $i2 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i3 = staticinvoke <android.graphics.Canvas: int native_saveLayerAlpha(int,float,float,float,float,int,int)>($i2, f0, f1, f2, f3, i0, i1);

        return $i3;
    }

    public int saveLayerAlpha(android.graphics.RectF, int, int)
    {
        android.graphics.Canvas r0;
        android.graphics.RectF r1;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.RectF;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0);

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(255, $i3);

        $i4 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        $i5 = staticinvoke <android.graphics.Canvas: int native_saveLayerAlpha(int,android.graphics.RectF,int,int)>($i4, r1, i2, i1);

        return $i5;
    }

    public native void scale(float, float);

    public final void scale(float, float, float, float)
    {
        android.graphics.Canvas r0;
        float f0, f1, f2, f3, $f4, $f5;

        r0 := @this: android.graphics.Canvas;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        virtualinvoke r0.<android.graphics.Canvas: void translate(float,float)>(f2, f3);

        virtualinvoke r0.<android.graphics.Canvas: void scale(float,float)>(f0, f1);

        $f5 = neg f2;

        $f4 = neg f3;

        virtualinvoke r0.<android.graphics.Canvas: void translate(float,float)>($f5, $f4);

        return;
    }

    public void setBitmap(android.graphics.Bitmap)
    {
        android.graphics.Canvas r0;
        android.graphics.Bitmap r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Bitmap;

        $z0 = virtualinvoke r0.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t set a bitmap device on a GL canvas");

        throw $r3;

     label1:
        if r1 != null goto label3;

        $i3 = staticinvoke <android.graphics.Canvas: int initRaster(int)>(0);

        specialinvoke r0.<android.graphics.Canvas: void safeCanvasSwap(int,boolean)>($i3, 0);

        r0.<android.graphics.Canvas: int mDensity> = 0;

     label2:
        r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap> = r1;

        return;

     label3:
        $z1 = virtualinvoke r1.<android.graphics.Bitmap: boolean isMutable()>();

        if $z1 != 0 goto label4;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label4:
        staticinvoke <android.graphics.Canvas: void throwIfCannotDraw(android.graphics.Bitmap)>(r1);

        $i0 = virtualinvoke r1.<android.graphics.Bitmap: int ni()>();

        $i1 = staticinvoke <android.graphics.Canvas: int initRaster(int)>($i0);

        specialinvoke r0.<android.graphics.Canvas: void safeCanvasSwap(int,boolean)>($i1, 1);

        $i2 = r1.<android.graphics.Bitmap: int mDensity>;

        r0.<android.graphics.Canvas: int mDensity> = $i2;

        goto label2;
    }

    public void setDensity(int)
    {
        android.graphics.Canvas r0;
        int i0;
        android.graphics.Bitmap $r1, $r2;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap>;

        if $r1 == null goto label1;

        $r2 = r0.<android.graphics.Canvas: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r2.<android.graphics.Bitmap: void setDensity(int)>(i0);

     label1:
        r0.<android.graphics.Canvas: int mDensity> = i0;

        return;
    }

    public void setDrawFilter(android.graphics.DrawFilter)
    {
        android.graphics.Canvas r0;
        android.graphics.DrawFilter r1;
        int i0, $i1;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.DrawFilter;

        i0 = 0;

        if r1 == null goto label1;

        i0 = r1.<android.graphics.DrawFilter: int mNativeInt>;

     label1:
        r0.<android.graphics.Canvas: android.graphics.DrawFilter mDrawFilter> = r1;

        $i1 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        staticinvoke <android.graphics.Canvas: void nativeSetDrawFilter(int,int)>($i1, i0);

        return;
    }

    public void setMatrix(android.graphics.Matrix)
    {
        android.graphics.Canvas r0;
        android.graphics.Matrix r1;
        int i0, i1;

        r0 := @this: android.graphics.Canvas;

        r1 := @parameter0: android.graphics.Matrix;

        i0 = r0.<android.graphics.Canvas: int mNativeCanvas>;

        if r1 != null goto label2;

        i1 = 0;

     label1:
        staticinvoke <android.graphics.Canvas: void native_setMatrix(int,int)>(i0, i1);

        return;

     label2:
        i1 = r1.<android.graphics.Matrix: int native_instance>;

        goto label1;
    }

    public void setScreenDensity(int)
    {
        android.graphics.Canvas r0;
        int i0;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        r0.<android.graphics.Canvas: int mScreenDensity> = i0;

        return;
    }

    public void setViewport(int, int)
    {
        android.graphics.Canvas r0;
        int i0, i1;

        r0 := @this: android.graphics.Canvas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public native void skew(float, float);

    public native void translate(float, float);

    public static void <clinit>()
    {
        <android.graphics.Canvas: int MAXMIMUM_BITMAP_SIZE> = 32766;

        <android.graphics.Canvas: int MATRIX_SAVE_FLAG> = 1;

        <android.graphics.Canvas: int HAS_ALPHA_LAYER_SAVE_FLAG> = 4;

        <android.graphics.Canvas: int FULL_COLOR_LAYER_SAVE_FLAG> = 8;

        <android.graphics.Canvas: int DIRECTION_RTL> = 1;

        <android.graphics.Canvas: int DIRECTION_LTR> = 0;

        <android.graphics.Canvas: int CLIP_TO_LAYER_SAVE_FLAG> = 16;

        <android.graphics.Canvas: int CLIP_SAVE_FLAG> = 2;

        <android.graphics.Canvas: int ALL_SAVE_FLAG> = 31;

        return;
    }
}
