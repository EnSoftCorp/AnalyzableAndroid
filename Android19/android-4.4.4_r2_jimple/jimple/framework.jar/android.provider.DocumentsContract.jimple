public final class android.provider.DocumentsContract extends java.lang.Object
{
    public static final java.lang.String ACTION_MANAGE_DOCUMENT;
    public static final java.lang.String ACTION_MANAGE_ROOT;
    public static final java.lang.String EXTRA_ERROR;
    public static final java.lang.String EXTRA_INFO;
    public static final java.lang.String EXTRA_LOADING;
    public static final java.lang.String EXTRA_ORIENTATION;
    public static final java.lang.String EXTRA_PACKAGE_NAME;
    public static final java.lang.String EXTRA_SHOW_ADVANCED;
    public static final java.lang.String EXTRA_THUMBNAIL_SIZE;
    public static final java.lang.String METHOD_CREATE_DOCUMENT;
    public static final java.lang.String METHOD_DELETE_DOCUMENT;
    private static final java.lang.String PARAM_MANAGE;
    private static final java.lang.String PARAM_QUERY;
    private static final java.lang.String PATH_CHILDREN;
    private static final java.lang.String PATH_DOCUMENT;
    private static final java.lang.String PATH_RECENT;
    private static final java.lang.String PATH_ROOT;
    private static final java.lang.String PATH_SEARCH;
    public static final java.lang.String PROVIDER_INTERFACE;
    private static final java.lang.String TAG;
    private static final int THUMBNAIL_BUFFER_SIZE;

    private void <init>()
    {
        android.provider.DocumentsContract r0;

        r0 := @this: android.provider.DocumentsContract;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri buildChildDocumentsUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6, $r7;
        android.net.Uri $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("document");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("children");

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r8;
    }

    public static android.net.Uri buildDocumentUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6;
        android.net.Uri $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("document");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    public static android.net.Uri buildRecentDocumentsUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6, $r7;
        android.net.Uri $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("root");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("recent");

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r8;
    }

    public static android.net.Uri buildRootUri(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        android.net.Uri$Builder $r2, $r3, $r4, $r5, $r6;
        android.net.Uri $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("root");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    public static android.net.Uri buildRootsUri(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri$Builder $r1, $r2, $r3, $r4;
        android.net.Uri $r5;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.net.Uri$Builder;

        specialinvoke $r1.<android.net.Uri$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("root");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public static android.net.Uri buildSearchDocumentsUri(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        android.net.Uri$Builder $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        android.net.Uri $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new android.net.Uri$Builder;

        specialinvoke $r3.<android.net.Uri$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("root");

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("search");

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("query", r2);

        $r10 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r10;
    }

    public static android.net.Uri createDocument(android.content.ContentProviderClient, android.net.Uri, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1, $r10;
        java.lang.String r2, r3, $r7, $r8, $r9;
        android.os.Bundle r4, r5, $r6;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r4 = $r6;

        $r7 = staticinvoke <android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>(r1);

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("document_id", $r7);

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("mime_type", r2);

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("_display_name", r3);

        r5 = virtualinvoke r0.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("android:createDocument", null, r4);

        $r8 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r9 = virtualinvoke r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("document_id");

        $r10 = staticinvoke <android.provider.DocumentsContract: android.net.Uri buildDocumentUri(java.lang.String,java.lang.String)>($r8, $r9);

        return $r10;
    }

    public static android.net.Uri createDocument(android.content.ContentResolver, android.net.Uri, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r7;
        java.lang.String r2, r3, $r8;
        android.content.ContentProviderClient r4;
        java.lang.Throwable r5, $r9;
        java.lang.Exception r6, $r10;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r8 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>($r8);

     label1:
        r7 = staticinvoke <android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentProviderClient,android.net.Uri,java.lang.String,java.lang.String)>(r4, r1, r2, r3);

     label2:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        return r7;

     label3:
        $r10 := @caughtexception;

        r6 = $r10;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Documents", "Failed to create document", r6);

     label5:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        return null;

     label6:
        $r9 := @caughtexception;

        r5 = $r9;

        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        throw r5;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void deleteDocument(android.content.ContentProviderClient, android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        android.os.Bundle r2, $r3;
        java.lang.String $r4;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: android.net.Uri;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        $r4 = staticinvoke <android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>(r1);

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("document_id", $r4);

        virtualinvoke r0.<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>("android:deleteDocument", null, r2);

        return;
    }

    public static boolean deleteDocument(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.content.ContentProviderClient r2;
        java.lang.Throwable r3, $r7;
        java.lang.Exception r4, $r6;
        java.lang.String $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>($r5);

     label1:
        staticinvoke <android.provider.DocumentsContract: void deleteDocument(android.content.ContentProviderClient,android.net.Uri)>(r2, r1);

     label2:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r2);

        return 1;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Documents", "Failed to delete document", r4);

     label5:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r2);

        return 0;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r2);

        throw r3;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static java.lang.String getDocumentId(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.List r1;
        int $i0;
        java.lang.String $r2, $r5, $r10, $r15;
        java.lang.Object $r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r6, $r11;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r14;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 2 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a document: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        $r2 = "document";

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a document: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public static android.graphics.Bitmap getDocumentThumbnail(android.content.ContentProviderClient, android.net.Uri, android.graphics.Point, android.os.CancellationSignal) throws android.os.RemoteException, java.io.IOException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        android.graphics.Point r2;
        android.os.CancellationSignal r3;
        android.os.Bundle r4, r13, $r16;
        android.content.res.AssetFileDescriptor r5;
        java.lang.Throwable r6, $r24;
        java.io.FileDescriptor r7;
        long l0;
        java.io.BufferedInputStream r8, $r25;
        java.io.FileInputStream r10, $r26;
        android.graphics.BitmapFactory$Options r11, $r19;
        int i1, i2, i3, i4, i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16;
        android.graphics.Bitmap r12, r14;
        android.graphics.Matrix r15, $r22;
        libcore.io.ErrnoException r17, $r27, $r29;
        libcore.io.Os $r18, $r21;
        float $f0, $f1, $f2;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.graphics.Point;

        r3 := @parameter3: android.os.CancellationSignal;

        $r16 = new android.os.Bundle;

        specialinvoke $r16.<android.os.Bundle: void <init>()>();

        r4 = $r16;

        virtualinvoke r4.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("thumbnail_size", r2);

        r5 = null;

     label01:
        r5 = virtualinvoke r0.<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r1, "image/*", r4, r3);

        r7 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        l0 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

     label02:
        r8 = null;

     label03:
        $r18 = <libcore.io.Libcore: libcore.io.Os os>;

        $i6 = <libcore.io.OsConstants: int SEEK_SET>;

        interfaceinvoke $r18.<libcore.io.Os: long lseek(java.io.FileDescriptor,long,int)>(r7, l0, $i6);

     label04:
        $r19 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r19.<android.graphics.BitmapFactory$Options: void <init>()>();

        r11 = $r19;

        r11.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

     label05:
        if r8 == null goto label21;

     label06:
        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r8, null, r11);

     label07:
        $i9 = r11.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i8 = r2.<android.graphics.Point: int x>;

        i1 = $i9 / $i8;

        $i13 = r11.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i12 = r2.<android.graphics.Point: int y>;

        i2 = $i13 / $i12;

        r11.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        r11.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i10;

     label08:
        if r8 == null goto label23;

     label09:
        virtualinvoke r8.<java.io.BufferedInputStream: void reset()>();

        r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r8, null, r11);

     label10:
        r13 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()>();

     label11:
        if r13 == null goto label29;

     label12:
        i3 = virtualinvoke r13.<android.os.Bundle: int getInt(java.lang.String,int)>("android.content.extra.ORIENTATION", 0);

     label13:
        if i3 == 0 goto label16;

     label14:
        i5 = virtualinvoke r12.<android.graphics.Bitmap: int getWidth()>();

        i4 = virtualinvoke r12.<android.graphics.Bitmap: int getHeight()>();

        $r22 = new android.graphics.Matrix;

        specialinvoke $r22.<android.graphics.Matrix: void <init>()>();

        r15 = $r22;

        $f0 = (float) i3;

        $i15 = i5 / 2;

        $f1 = (float) $i15;

        $i16 = i4 / 2;

        $f2 = (float) $i16;

        virtualinvoke r15.<android.graphics.Matrix: void setRotate(float,float,float)>($f0, $f1, $f2);

        r14 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r12, 0, 0, i5, i4, r15, 0);

     label15:
        r12 = r14;

     label16:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        return r12;

     label17:
        $r27 := @caughtexception;

     label18:
        $r26 = new java.io.FileInputStream;

        specialinvoke $r26.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r7);

        r10 = $r26;

        $r25 = new java.io.BufferedInputStream;

        specialinvoke $r25.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r10, 131072);

        r8 = $r25;

        virtualinvoke r8.<java.io.BufferedInputStream: void mark(int)>(131072);

     label19:
        goto label04;

     label20:
        $r24 := @caughtexception;

        r6 = $r24;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        throw r6;

     label21:
        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r7, null, r11);

     label22:
        goto label07;

     label23:
        $r21 = <libcore.io.Libcore: libcore.io.Os os>;

        $i11 = <libcore.io.OsConstants: int SEEK_SET>;

        interfaceinvoke $r21.<libcore.io.Os: long lseek(java.io.FileDescriptor,long,int)>(r7, l0, $i11);

     label24:
        r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r7, null, r11);

     label25:
        goto label10;

     label26:
        $r29 := @caughtexception;

        r17 = $r29;

     label27:
        virtualinvoke r17.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

     label28:
        goto label24;

     label29:
        i3 = 0;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch libcore.io.ErrnoException from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label10 to label11 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch libcore.io.ErrnoException from label23 to label24 with label26;
        catch java.lang.Throwable from label23 to label24 with label20;
        catch java.lang.Throwable from label24 to label25 with label20;
        catch java.lang.Throwable from label27 to label28 with label20;
    }

    public static android.graphics.Bitmap getDocumentThumbnail(android.content.ContentResolver, android.net.Uri, android.graphics.Point, android.os.CancellationSignal)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        android.graphics.Point r2;
        android.os.CancellationSignal r3;
        android.content.ContentProviderClient r4;
        java.lang.Throwable r5, $r16;
        java.lang.Exception r6, $r9;
        android.graphics.Bitmap r7;
        java.lang.String $r8, $r15;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.graphics.Point;

        r3 := @parameter3: android.os.CancellationSignal;

        $r8 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>($r8);

     label1:
        r7 = staticinvoke <android.provider.DocumentsContract: android.graphics.Bitmap getDocumentThumbnail(android.content.ContentProviderClient,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)>(r4, r1, r2, r3);

     label2:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        return r7;

     label3:
        $r9 := @caughtexception;

        r6 = $r9;

     label4:
        $z0 = r6 instanceof android.os.OperationCanceledException;

        if $z0 != 0 goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load thumbnail for ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Documents", $r15);

     label5:
        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        return null;

     label6:
        $r16 := @caughtexception;

        r5 = $r16;

        staticinvoke <android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>(r4);

        throw r5;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static java.lang.String getRootId(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.List r1;
        int $i0;
        java.lang.String $r2, $r5, $r10, $r15;
        java.lang.Object $r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r6, $r11;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r14;

        r0 := @parameter0: android.net.Uri;

        r1 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 >= 2 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a root: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        $r2 = "root";

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a root: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public static java.lang.String getSearchDocumentsQuery(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1;

        r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("query");

        return $r1;
    }

    public static boolean isDocumentUri(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.util.List r2, $r10;
        android.content.Intent r3, $r8;
        java.util.Iterator r4;
        android.content.pm.ResolveInfo r5;
        int $i0;
        java.lang.String $r6, $r11, $r13;
        java.lang.Object $r7, $r12;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageManager $r9;
        android.content.pm.ProviderInfo $r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 >= 2 goto label2;

     label1:
        return 0;

     label2:
        $r6 = "document";

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label1;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.content.action.DOCUMENTS_PROVIDER");

        r3 = $r8;

        $r9 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r10 = virtualinvoke $r9.<android.content.pm.PackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>(r3, 0);

        r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label1;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.pm.ResolveInfo) $r12;

        $r11 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $r14 = r5.<android.content.pm.ResolveInfo: android.content.pm.ProviderInfo providerInfo>;

        $r13 = $r14.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label3;

        return 1;
    }

    public static boolean isManageMode(android.net.Uri)
    {
        android.net.Uri r0;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        $z0 = virtualinvoke r0.<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>("manage", 0);

        return $z0;
    }

    public static android.content.res.AssetFileDescriptor openImageThumbnail(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.File r0;
        android.os.ParcelFileDescriptor r1;
        android.os.Bundle r2, r5, $r12, $r13, $r15;
        android.media.ExifInterface r3, $r8;
        int i0;
        long[] r7;
        java.lang.String $r9;
        android.content.res.AssetFileDescriptor $r10, $r11;
        long $l1, $l2;
        java.io.IOException $r14, $r16;

        r0 := @parameter0: java.io.File;

        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r0, 268435456);

        r2 = null;

     label01:
        $r8 = new android.media.ExifInterface;

        $r9 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r8.<android.media.ExifInterface: void <init>(java.lang.String)>($r9);

        r3 = $r8;

        i0 = virtualinvoke r3.<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", -1);

     label02:
        r2 = null;

        tableswitch(i0)
        {
            case 3: goto label09;
            case 4: goto label03;
            case 5: goto label03;
            case 6: goto label06;
            case 7: goto label03;
            case 8: goto label12;
            default: goto label03;
        };

     label03:
        r7 = virtualinvoke r3.<android.media.ExifInterface: long[] getThumbnailRange()>();

     label04:
        if r7 == null goto label16;

     label05:
        $r11 = new android.content.res.AssetFileDescriptor;

        $l1 = r7[0];

        $l2 = r7[1];

        specialinvoke $r11.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>(r1, $l1, $l2, r2);

        return $r11;

     label06:
        $r12 = new android.os.Bundle;

        specialinvoke $r12.<android.os.Bundle: void <init>(int)>(1);

        r5 = $r12;

     label07:
        virtualinvoke r5.<android.os.Bundle: void putInt(java.lang.String,int)>("android.content.extra.ORIENTATION", 90);

     label08:
        r2 = r5;

        goto label03;

     label09:
        $r15 = new android.os.Bundle;

        specialinvoke $r15.<android.os.Bundle: void <init>(int)>(1);

        r5 = $r15;

     label10:
        virtualinvoke r5.<android.os.Bundle: void putInt(java.lang.String,int)>("android.content.extra.ORIENTATION", 180);

     label11:
        r2 = r5;

        goto label03;

     label12:
        $r13 = new android.os.Bundle;

        specialinvoke $r13.<android.os.Bundle: void <init>(int)>(1);

        r5 = $r13;

     label13:
        virtualinvoke r5.<android.os.Bundle: void putInt(java.lang.String,int)>("android.content.extra.ORIENTATION", 270);

     label14:
        r2 = r5;

        goto label03;

     label15:
        $r14 := @caughtexception;

     label16:
        $r10 = new android.content.res.AssetFileDescriptor;

        specialinvoke $r10.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>(r1, 0L, -1L, r2);

        return $r10;

     label17:
        $r16 := @caughtexception;

        r2 = r5;

        goto label16;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label06 to label07 with label15;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label10 to label11 with label17;
        catch java.io.IOException from label12 to label13 with label15;
        catch java.io.IOException from label13 to label14 with label17;
    }

    public static android.net.Uri setManageMode(android.net.Uri)
    {
        android.net.Uri r0, $r3;
        android.net.Uri$Builder $r1, $r2;

        r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("manage", "true");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <android.provider.DocumentsContract: int THUMBNAIL_BUFFER_SIZE> = 131072;

        <android.provider.DocumentsContract: java.lang.String TAG> = "Documents";

        <android.provider.DocumentsContract: java.lang.String PROVIDER_INTERFACE> = "android.content.action.DOCUMENTS_PROVIDER";

        <android.provider.DocumentsContract: java.lang.String PATH_SEARCH> = "search";

        <android.provider.DocumentsContract: java.lang.String PATH_ROOT> = "root";

        <android.provider.DocumentsContract: java.lang.String PATH_RECENT> = "recent";

        <android.provider.DocumentsContract: java.lang.String PATH_DOCUMENT> = "document";

        <android.provider.DocumentsContract: java.lang.String PATH_CHILDREN> = "children";

        <android.provider.DocumentsContract: java.lang.String PARAM_QUERY> = "query";

        <android.provider.DocumentsContract: java.lang.String PARAM_MANAGE> = "manage";

        <android.provider.DocumentsContract: java.lang.String METHOD_DELETE_DOCUMENT> = "android:deleteDocument";

        <android.provider.DocumentsContract: java.lang.String METHOD_CREATE_DOCUMENT> = "android:createDocument";

        <android.provider.DocumentsContract: java.lang.String EXTRA_THUMBNAIL_SIZE> = "thumbnail_size";

        <android.provider.DocumentsContract: java.lang.String EXTRA_SHOW_ADVANCED> = "android.content.extra.SHOW_ADVANCED";

        <android.provider.DocumentsContract: java.lang.String EXTRA_PACKAGE_NAME> = "android.content.extra.PACKAGE_NAME";

        <android.provider.DocumentsContract: java.lang.String EXTRA_ORIENTATION> = "android.content.extra.ORIENTATION";

        <android.provider.DocumentsContract: java.lang.String EXTRA_LOADING> = "loading";

        <android.provider.DocumentsContract: java.lang.String EXTRA_INFO> = "info";

        <android.provider.DocumentsContract: java.lang.String EXTRA_ERROR> = "error";

        <android.provider.DocumentsContract: java.lang.String ACTION_MANAGE_ROOT> = "android.provider.action.MANAGE_ROOT";

        <android.provider.DocumentsContract: java.lang.String ACTION_MANAGE_DOCUMENT> = "android.provider.action.MANAGE_DOCUMENT";

        return;
    }
}
