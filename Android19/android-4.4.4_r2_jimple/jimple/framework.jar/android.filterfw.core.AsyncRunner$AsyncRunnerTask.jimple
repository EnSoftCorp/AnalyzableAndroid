class android.filterfw.core.AsyncRunner$AsyncRunnerTask extends android.os.AsyncTask
{
    private static final java.lang.String TAG;
    final android.filterfw.core.AsyncRunner this$0;

    private void <init>(android.filterfw.core.AsyncRunner)
    {
        android.filterfw.core.AsyncRunner$AsyncRunnerTask r0;
        android.filterfw.core.AsyncRunner r1;

        r0 := @this: android.filterfw.core.AsyncRunner$AsyncRunnerTask;

        r1 := @parameter0: android.filterfw.core.AsyncRunner;

        r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    void <init>(android.filterfw.core.AsyncRunner, android.filterfw.core.AsyncRunner$1)
    {
        android.filterfw.core.AsyncRunner$AsyncRunnerTask r0;
        android.filterfw.core.AsyncRunner r1;
        android.filterfw.core.AsyncRunner$1 r2;

        r0 := @this: android.filterfw.core.AsyncRunner$AsyncRunnerTask;

        r1 := @parameter0: android.filterfw.core.AsyncRunner;

        r2 := @parameter1: android.filterfw.core.AsyncRunner$1;

        specialinvoke r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: void <init>(android.filterfw.core.AsyncRunner)>(r1);

        return;
    }

    protected transient android.filterfw.core.AsyncRunner$RunnerResult doInBackground(android.filterfw.core.SyncRunner[])
    {
        android.filterfw.core.AsyncRunner$AsyncRunnerTask r0;
        android.filterfw.core.SyncRunner[] r1;
        android.filterfw.core.AsyncRunner$RunnerResult r2, $r5;
        java.lang.Exception r3, r4, $r19, $r20;
        android.filterfw.core.AsyncRunner $r6, $r8, $r9, $r10, $r12, $r13, $r14;
        int $i0, $i2, $i3, $i4;
        android.filterfw.core.SyncRunner $r7, $r11, $r15, $r16, $r17;
        boolean $z0, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.RuntimeException $r18;

        r0 := @this: android.filterfw.core.AsyncRunner$AsyncRunnerTask;

        r1 := @parameter0: android.filterfw.core.SyncRunner[];

        $r5 = new android.filterfw.core.AsyncRunner$RunnerResult;

        $r6 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        specialinvoke $r5.<android.filterfw.core.AsyncRunner$RunnerResult: void <init>(android.filterfw.core.AsyncRunner,android.filterfw.core.AsyncRunner$1)>($r6, null);

        r2 = $r5;

     label01:
        $i0 = lengthof r1;

        if $i0 <= 1 goto label06;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>("More than one runner received!");

        throw $r18;

     label02:
        $r19 := @caughtexception;

        r3 = $r19;

        r2.<android.filterfw.core.AsyncRunner$RunnerResult: java.lang.Exception exception> = r3;

        r2.<android.filterfw.core.AsyncRunner$RunnerResult: int status> = 6;

     label03:
        $r14 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        virtualinvoke $r14.<android.filterfw.core.AsyncRunner: void deactivateGlContext()>();

     label04:
        $r13 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $z6 = staticinvoke <android.filterfw.core.AsyncRunner: boolean access$100(android.filterfw.core.AsyncRunner)>($r13);

        if $z6 == 0 goto label05;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AsyncRunnerTask", "Done with background graph processing.");

     label05:
        return r2;

     label06:
        $r7 = r1[0];

        virtualinvoke $r7.<android.filterfw.core.SyncRunner: void assertReadyToStep()>();

        $r8 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $z0 = staticinvoke <android.filterfw.core.AsyncRunner: boolean access$100(android.filterfw.core.AsyncRunner)>($r8);

        if $z0 == 0 goto label07;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AsyncRunnerTask", "Starting background graph processing.");

     label07:
        $r9 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        virtualinvoke $r9.<android.filterfw.core.AsyncRunner: boolean activateGlContext()>();

        $r10 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $z2 = staticinvoke <android.filterfw.core.AsyncRunner: boolean access$100(android.filterfw.core.AsyncRunner)>($r10);

        if $z2 == 0 goto label08;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AsyncRunnerTask", "Preparing filter graph for processing.");

     label08:
        $r11 = r1[0];

        virtualinvoke $r11.<android.filterfw.core.SyncRunner: void beginProcessing()>();

        $r12 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $z3 = staticinvoke <android.filterfw.core.AsyncRunner: boolean access$100(android.filterfw.core.AsyncRunner)>($r12);

        if $z3 == 0 goto label09;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AsyncRunnerTask", "Running graph.");

     label09:
        r2.<android.filterfw.core.AsyncRunner$RunnerResult: int status> = 1;

     label10:
        $z5 = virtualinvoke r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: boolean isCancelled()>();

        if $z5 != 0 goto label12;

        $i2 = r2.<android.filterfw.core.AsyncRunner$RunnerResult: int status>;

        if $i2 != 1 goto label12;

        $r15 = r1[0];

        $z7 = virtualinvoke $r15.<android.filterfw.core.SyncRunner: boolean performStep()>();

        if $z7 != 0 goto label10;

        $r16 = r1[0];

        $i4 = virtualinvoke $r16.<android.filterfw.core.SyncRunner: int determinePostRunState()>();

        r2.<android.filterfw.core.AsyncRunner$RunnerResult: int status> = $i4;

        $i3 = r2.<android.filterfw.core.AsyncRunner$RunnerResult: int status>;

        if $i3 != 3 goto label10;

        $r17 = r1[0];

        virtualinvoke $r17.<android.filterfw.core.SyncRunner: void waitUntilWake()>();

        r2.<android.filterfw.core.AsyncRunner$RunnerResult: int status> = 1;

     label11:
        goto label10;

     label12:
        $z4 = virtualinvoke r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: boolean isCancelled()>();

        if $z4 == 0 goto label03;

        r2.<android.filterfw.core.AsyncRunner$RunnerResult: int status> = 5;

     label13:
        goto label03;

     label14:
        $r20 := @caughtexception;

        r4 = $r20;

        r2.<android.filterfw.core.AsyncRunner$RunnerResult: java.lang.Exception exception> = r4;

        r2.<android.filterfw.core.AsyncRunner$RunnerResult: int status> = 6;

        goto label04;

        catch java.lang.Exception from label01 to label02 with label02;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label06 to label07 with label02;
        catch java.lang.Exception from label07 to label08 with label02;
        catch java.lang.Exception from label08 to label09 with label02;
        catch java.lang.Exception from label09 to label10 with label02;
        catch java.lang.Exception from label10 to label11 with label02;
        catch java.lang.Exception from label12 to label13 with label02;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        android.filterfw.core.AsyncRunner$AsyncRunnerTask r0;
        java.lang.Object[] r1;
        android.filterfw.core.SyncRunner[] $r2;
        android.filterfw.core.AsyncRunner$RunnerResult $r3;

        r0 := @this: android.filterfw.core.AsyncRunner$AsyncRunnerTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (android.filterfw.core.SyncRunner[]) r1;

        $r3 = virtualinvoke r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner$RunnerResult doInBackground(android.filterfw.core.SyncRunner[])>($r2);

        return $r3;
    }

    protected void onCancelled(android.filterfw.core.AsyncRunner$RunnerResult)
    {
        android.filterfw.core.AsyncRunner$AsyncRunnerTask r0;
        android.filterfw.core.AsyncRunner$RunnerResult r1;

        r0 := @this: android.filterfw.core.AsyncRunner$AsyncRunnerTask;

        r1 := @parameter0: android.filterfw.core.AsyncRunner$RunnerResult;

        virtualinvoke r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: void onPostExecute(android.filterfw.core.AsyncRunner$RunnerResult)>(r1);

        return;
    }

    protected volatile void onCancelled(java.lang.Object)
    {
        android.filterfw.core.AsyncRunner$AsyncRunnerTask r0;
        java.lang.Object r1;
        android.filterfw.core.AsyncRunner$RunnerResult $r2;

        r0 := @this: android.filterfw.core.AsyncRunner$AsyncRunnerTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.filterfw.core.AsyncRunner$RunnerResult) r1;

        virtualinvoke r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: void onCancelled(android.filterfw.core.AsyncRunner$RunnerResult)>($r2);

        return;
    }

    protected void onPostExecute(android.filterfw.core.AsyncRunner$RunnerResult)
    {
        android.filterfw.core.AsyncRunner$AsyncRunnerTask r0;
        android.filterfw.core.AsyncRunner$RunnerResult r1, $r17;
        java.lang.Exception r2, $r5, $r18;
        android.filterfw.core.AsyncRunner $r3, $r4, $r6, $r7, $r8, $r10, $r12, $r13, $r15, $r16, $r19;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i3, $i4;
        android.filterfw.core.SyncRunner $r9;
        android.filterfw.core.GraphRunner$OnRunnerDoneListener $r11, $r14;

        r0 := @this: android.filterfw.core.AsyncRunner$AsyncRunnerTask;

        r1 := @parameter0: android.filterfw.core.AsyncRunner$RunnerResult;

        $r3 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $z0 = staticinvoke <android.filterfw.core.AsyncRunner: boolean access$100(android.filterfw.core.AsyncRunner)>($r3);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AsyncRunnerTask", "Starting post-execute.");

     label1:
        $r4 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        staticinvoke <android.filterfw.core.AsyncRunner: void access$200(android.filterfw.core.AsyncRunner,boolean)>($r4, 0);

        if r1 != null goto label2;

        $r17 = new android.filterfw.core.AsyncRunner$RunnerResult;

        $r16 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        specialinvoke $r17.<android.filterfw.core.AsyncRunner$RunnerResult: void <init>(android.filterfw.core.AsyncRunner,android.filterfw.core.AsyncRunner$1)>($r16, null);

        r1 = $r17;

        r1.<android.filterfw.core.AsyncRunner$RunnerResult: int status> = 5;

     label2:
        $r6 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $r5 = r1.<android.filterfw.core.AsyncRunner$RunnerResult: java.lang.Exception exception>;

        staticinvoke <android.filterfw.core.AsyncRunner: void access$300(android.filterfw.core.AsyncRunner,java.lang.Exception)>($r6, $r5);

        $i0 = r1.<android.filterfw.core.AsyncRunner$RunnerResult: int status>;

        if $i0 == 5 goto label3;

        $i4 = r1.<android.filterfw.core.AsyncRunner$RunnerResult: int status>;

        if $i4 != 6 goto label5;

     label3:
        $r7 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $z1 = staticinvoke <android.filterfw.core.AsyncRunner: boolean access$100(android.filterfw.core.AsyncRunner)>($r7);

        if $z1 == 0 goto label4;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AsyncRunnerTask", "Closing filters.");

     label4:
        $r8 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $r9 = staticinvoke <android.filterfw.core.AsyncRunner: android.filterfw.core.SyncRunner access$400(android.filterfw.core.AsyncRunner)>($r8);

        virtualinvoke $r9.<android.filterfw.core.SyncRunner: void close()>();

     label5:
        $r10 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $r11 = staticinvoke <android.filterfw.core.AsyncRunner: android.filterfw.core.GraphRunner$OnRunnerDoneListener access$500(android.filterfw.core.AsyncRunner)>($r10);

        if $r11 == null goto label7;

        $r13 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $z3 = staticinvoke <android.filterfw.core.AsyncRunner: boolean access$100(android.filterfw.core.AsyncRunner)>($r13);

        if $z3 == 0 goto label6;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AsyncRunnerTask", "Calling graph done callback.");

     label6:
        $r15 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $r14 = staticinvoke <android.filterfw.core.AsyncRunner: android.filterfw.core.GraphRunner$OnRunnerDoneListener access$500(android.filterfw.core.AsyncRunner)>($r15);

        $i3 = r1.<android.filterfw.core.AsyncRunner$RunnerResult: int status>;

        interfaceinvoke $r14.<android.filterfw.core.GraphRunner$OnRunnerDoneListener: void onRunnerDone(int)>($i3);

     label7:
        $r12 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        $z2 = staticinvoke <android.filterfw.core.AsyncRunner: boolean access$100(android.filterfw.core.AsyncRunner)>($r12);

        if $z2 == 0 goto label8;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AsyncRunnerTask", "Completed post-execute.");

     label8:
        return;

     label9:
        $r18 := @caughtexception;

        r2 = $r18;

        r1.<android.filterfw.core.AsyncRunner$RunnerResult: int status> = 6;

        $r19 = r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner this$0>;

        staticinvoke <android.filterfw.core.AsyncRunner: void access$300(android.filterfw.core.AsyncRunner,java.lang.Exception)>($r19, r2);

        goto label5;

        catch java.lang.Exception from label4 to label5 with label9;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        android.filterfw.core.AsyncRunner$AsyncRunnerTask r0;
        java.lang.Object r1;
        android.filterfw.core.AsyncRunner$RunnerResult $r2;

        r0 := @this: android.filterfw.core.AsyncRunner$AsyncRunnerTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.filterfw.core.AsyncRunner$RunnerResult) r1;

        virtualinvoke r0.<android.filterfw.core.AsyncRunner$AsyncRunnerTask: void onPostExecute(android.filterfw.core.AsyncRunner$RunnerResult)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <android.filterfw.core.AsyncRunner$AsyncRunnerTask: java.lang.String TAG> = "AsyncRunnerTask";

        return;
    }
}
