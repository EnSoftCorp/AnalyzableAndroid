class android.text.MeasuredText extends java.lang.Object
{
    private static final boolean localLOGV;
    private static android.text.MeasuredText[] sCached;
    private static final java.lang.Object[] sLock;
    char[] mChars;
    int mDir;
    boolean mEasy;
    int mLen;
    byte[] mLevels;
    private int mPos;
    java.lang.CharSequence mText;
    int mTextStart;
    float[] mWidths;
    private android.text.TextPaint mWorkPaint;

    static void <clinit>()
    {
        java.lang.Object[] $r0;
        android.text.MeasuredText[] $r1;

        $r0 = newarray (java.lang.Object)[0];

        <android.text.MeasuredText: java.lang.Object[] sLock> = $r0;

        $r1 = newarray (android.text.MeasuredText)[3];

        <android.text.MeasuredText: android.text.MeasuredText[] sCached> = $r1;

        return;
    }

    private void <init>()
    {
        android.text.MeasuredText r0;
        android.text.TextPaint $r1;

        r0 := @this: android.text.MeasuredText;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.text.TextPaint;

        specialinvoke $r1.<android.text.TextPaint: void <init>()>();

        r0.<android.text.MeasuredText: android.text.TextPaint mWorkPaint> = $r1;

        return;
    }

    static android.text.MeasuredText obtain()
    {
        java.lang.Object[] r0;
        java.lang.Throwable r1, $r9;
        int i0;
        android.text.MeasuredText r2, $r4, $r6;
        android.text.MeasuredText[] $r3, $r5, $r7, $r8;

        r0 = <android.text.MeasuredText: java.lang.Object[] sLock>;

        entermonitor r0;

     label1:
        $r3 = <android.text.MeasuredText: android.text.MeasuredText[] sCached>;

        i0 = lengthof $r3;

     label2:
        i0 = i0 + -1;

        if i0 < 0 goto label5;

     label3:
        $r5 = <android.text.MeasuredText: android.text.MeasuredText[] sCached>;

        $r6 = $r5[i0];

        if $r6 == null goto label2;

        $r7 = <android.text.MeasuredText: android.text.MeasuredText[] sCached>;

        r2 = $r7[i0];

        $r8 = <android.text.MeasuredText: android.text.MeasuredText[] sCached>;

        $r8[i0] = null;

        exitmonitor r0;

     label4:
        return r2;

     label5:
        exitmonitor r0;

     label6:
        $r4 = new android.text.MeasuredText;

        specialinvoke $r4.<android.text.MeasuredText: void <init>()>();

        return $r4;

     label7:
        $r9 := @caughtexception;

        r1 = $r9;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static android.text.MeasuredText recycle(android.text.MeasuredText)
    {
        android.text.MeasuredText r0, $r5;
        java.lang.Object[] r1;
        int i0, $i1, $i2;
        java.lang.Throwable r2, $r7;
        android.text.MeasuredText[] $r3, $r4, $r6;

        r0 := @parameter0: android.text.MeasuredText;

        r0.<android.text.MeasuredText: java.lang.CharSequence mText> = null;

        $i1 = r0.<android.text.MeasuredText: int mLen>;

        if $i1 >= 1000 goto label7;

        r1 = <android.text.MeasuredText: java.lang.Object[] sLock>;

        entermonitor r1;

        i0 = 0;

     label1:
        $r3 = <android.text.MeasuredText: android.text.MeasuredText[] sCached>;

        $i2 = lengthof $r3;

        if i0 >= $i2 goto label2;

        $r4 = <android.text.MeasuredText: android.text.MeasuredText[] sCached>;

        $r5 = $r4[i0];

        if $r5 != null goto label8;

        $r6 = <android.text.MeasuredText: android.text.MeasuredText[] sCached>;

        $r6[i0] = r0;

        r0.<android.text.MeasuredText: java.lang.CharSequence mText> = null;

     label2:
        exitmonitor r1;

     label3:
        return null;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return null;

     label8:
        i0 = i0 + 1;

        goto label1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    float addStyleRun(android.text.TextPaint, int, android.graphics.Paint$FontMetricsInt)
    {
        android.text.MeasuredText r0;
        android.text.TextPaint r1;
        int i0, i1, i3, i4, i5, i7, i8, $i10, $i13;
        android.graphics.Paint$FontMetricsInt r2;
        float f0, $f1;
        byte b2, b6, b9, $b11, $b12;
        char[] r3, $r9;
        float[] r4, $r8;
        boolean $z0;
        byte[] $r5, $r6, $r7;

        r0 := @this: android.text.MeasuredText;

        r1 := @parameter0: android.text.TextPaint;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Paint$FontMetricsInt;

        if r2 == null goto label01;

        virtualinvoke r1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r2);

     label01:
        i1 = r0.<android.text.MeasuredText: int mPos>;

        $i10 = i1 + i0;

        r0.<android.text.MeasuredText: int mPos> = $i10;

        $z0 = r0.<android.text.MeasuredText: boolean mEasy>;

        if $z0 == 0 goto label05;

        $i13 = r0.<android.text.MeasuredText: int mDir>;

        if $i13 != 1 goto label04;

        b9 = 0;

     label02:
        $r9 = r0.<android.text.MeasuredText: char[] mChars>;

        $r8 = r0.<android.text.MeasuredText: float[] mWidths>;

        f0 = virtualinvoke r1.<android.text.TextPaint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>($r9, i1, i0, i1, i0, b9, $r8, i1);

     label03:
        return f0;

     label04:
        b9 = 1;

        goto label02;

     label05:
        f0 = 0.0F;

        $r5 = r0.<android.text.MeasuredText: byte[] mLevels>;

        b2 = $r5[i1];

        i3 = i1;

        i4 = i1 + 1;

        i5 = i1 + i0;

     label06:
        if i4 == i5 goto label07;

        $r7 = r0.<android.text.MeasuredText: byte[] mLevels>;

        $b12 = $r7[i4];

        if $b12 == b2 goto label09;

     label07:
        $b11 = b2 & 1;

        if $b11 != 0 goto label10;

        b6 = 0;

     label08:
        r3 = r0.<android.text.MeasuredText: char[] mChars>;

        i7 = i4 - i3;

        i8 = i4 - i3;

        r4 = r0.<android.text.MeasuredText: float[] mWidths>;

        $f1 = virtualinvoke r1.<android.text.TextPaint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>(r3, i3, i7, i3, i8, b6, r4, i3);

        f0 = f0 + $f1;

        if i4 == i5 goto label03;

        i3 = i4;

        $r6 = r0.<android.text.MeasuredText: byte[] mLevels>;

        b2 = $r6[i4];

     label09:
        i4 = i4 + 1;

        goto label06;

     label10:
        b6 = 1;

        goto label08;
    }

    float addStyleRun(android.text.TextPaint, android.text.style.MetricAffectingSpan[], int, android.graphics.Paint$FontMetricsInt)
    {
        android.text.MeasuredText r0;
        android.text.TextPaint r1, r4;
        android.text.style.MetricAffectingSpan[] r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        android.graphics.Paint$FontMetricsInt r3;
        android.text.style.ReplacementSpan r5;
        float f0;
        float[] r6;
        android.text.style.MetricAffectingSpan r7;
        java.lang.CharSequence $r8;
        boolean $z0;

        r0 := @this: android.text.MeasuredText;

        r1 := @parameter0: android.text.TextPaint;

        r2 := @parameter1: android.text.style.MetricAffectingSpan[];

        i0 := @parameter2: int;

        r3 := @parameter3: android.graphics.Paint$FontMetricsInt;

        r4 = r0.<android.text.MeasuredText: android.text.TextPaint mWorkPaint>;

        virtualinvoke r4.<android.text.TextPaint: void set(android.text.TextPaint)>(r1);

        r4.<android.text.TextPaint: int baselineShift> = 0;

        r5 = null;

        i1 = 0;

     label01:
        $i4 = lengthof r2;

        if i1 >= $i4 goto label04;

        r7 = r2[i1];

        $z0 = r7 instanceof android.text.style.ReplacementSpan;

        if $z0 == 0 goto label03;

        r5 = (android.text.style.ReplacementSpan) r7;

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        virtualinvoke r7.<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>(r4);

        goto label02;

     label04:
        if r5 != null goto label07;

        f0 = virtualinvoke r0.<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt)>(r4, i0, r3);

     label05:
        if r3 == null goto label06;

        $i19 = r4.<android.text.TextPaint: int baselineShift>;

        if $i19 >= 0 goto label10;

        $i28 = r3.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i23 = r4.<android.text.TextPaint: int baselineShift>;

        $i29 = $i28 + $i23;

        r3.<android.graphics.Paint$FontMetricsInt: int ascent> = $i29;

        $i27 = r3.<android.graphics.Paint$FontMetricsInt: int top>;

        $i26 = r4.<android.text.TextPaint: int baselineShift>;

        $i30 = $i27 + $i26;

        r3.<android.graphics.Paint$FontMetricsInt: int top> = $i30;

     label06:
        return f0;

     label07:
        $r8 = r0.<android.text.MeasuredText: java.lang.CharSequence mText>;

        $i6 = r0.<android.text.MeasuredText: int mTextStart>;

        $i5 = r0.<android.text.MeasuredText: int mPos>;

        $i11 = $i6 + $i5;

        $i7 = r0.<android.text.MeasuredText: int mTextStart>;

        $i8 = r0.<android.text.MeasuredText: int mPos>;

        $i10 = $i7 + $i8;

        $i9 = i0 + $i10;

        $i13 = virtualinvoke r5.<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>(r4, $r8, $i11, $i9, r3);

        f0 = (float) $i13;

        r6 = r0.<android.text.MeasuredText: float[] mWidths>;

        $i12 = r0.<android.text.MeasuredText: int mPos>;

        r6[$i12] = f0;

        $i15 = r0.<android.text.MeasuredText: int mPos>;

        i2 = 1 + $i15;

        $i14 = r0.<android.text.MeasuredText: int mPos>;

        i3 = i0 + $i14;

     label08:
        if i2 >= i3 goto label09;

        r6[i2] = 0.0F;

        i2 = i2 + 1;

        goto label08;

     label09:
        $i17 = r0.<android.text.MeasuredText: int mPos>;

        $i16 = i0 + $i17;

        r0.<android.text.MeasuredText: int mPos> = $i16;

        goto label05;

     label10:
        $i21 = r3.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i18 = r4.<android.text.TextPaint: int baselineShift>;

        $i20 = $i21 + $i18;

        r3.<android.graphics.Paint$FontMetricsInt: int descent> = $i20;

        $i25 = r3.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i24 = r4.<android.text.TextPaint: int baselineShift>;

        $i22 = $i25 + $i24;

        r3.<android.graphics.Paint$FontMetricsInt: int bottom> = $i22;

        return f0;
    }

    int breakText(int, boolean, float)
    {
        android.text.MeasuredText r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i9;
        boolean z0;
        float f0, $f1, $f2;
        float[] r1;
        char[] $r2, $r3;
        char $c7, $c10;
        byte $b8, $b11;

        r0 := @this: android.text.MeasuredText;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        r1 = r0.<android.text.MeasuredText: float[] mWidths>;

        if z0 == 0 goto label5;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $f2 = r1[i2];

        f0 = f0 - $f2;

        $b11 = f0 cmpg 0.0F;

        if $b11 >= 0 goto label3;

     label2:
        if i2 <= 0 goto label4;

        $r3 = r0.<android.text.MeasuredText: char[] mChars>;

        $i9 = i2 - 1;

        $c10 = $r3[$i9];

        if $c10 != 32 goto label4;

        i2 = i2 + -1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return i2;

     label5:
        i1 = i0 - 1;

     label6:
        if i1 < 0 goto label7;

        $f1 = r1[i1];

        f0 = f0 - $f1;

        $b8 = f0 cmpg 0.0F;

        if $b8 >= 0 goto label8;

     label7:
        $i3 = i0 - 1;

        if i1 >= $i3 goto label9;

        $r2 = r0.<android.text.MeasuredText: char[] mChars>;

        $i6 = i1 + 1;

        $c7 = $r2[$i6];

        if $c7 != 32 goto label9;

        i1 = i1 + 1;

        goto label7;

     label8:
        i1 = i1 + -1;

        goto label6;

     label9:
        $i4 = i0 - i1;

        $i5 = -1 + $i4;

        return $i5;
    }

    float measure(int, int)
    {
        android.text.MeasuredText r0;
        int i0, i1, i2;
        float f0, $f1;
        float[] r1;

        r0 := @this: android.text.MeasuredText;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 = 0.0F;

        r1 = r0.<android.text.MeasuredText: float[] mWidths>;

        i2 = i0;

     label1:
        if i2 >= i1 goto label2;

        $f1 = r1[i2];

        f0 = f0 + $f1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return f0;
    }

    void setPara(java.lang.CharSequence, int, int, android.text.TextDirectionHeuristic)
    {
        android.text.MeasuredText r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.text.TextDirectionHeuristic r2, $r10, $r13, $r15, $r16, $r18, $r21, $r22;
        byte b3;
        android.text.Spanned r3;
        android.text.style.ReplacementSpan[] r4;
        float[] $r5, $r6, $r29;
        char[] $r7, $r8, $r9, $r11, $r17, $r19, $r26, $r27;
        boolean $z0, $z1, $z2;
        byte[] $r12, $r14, $r20, $r23;
        android.text.style.ReplacementSpan $r24, $r28;
        java.lang.Object[] $r25;

        r0 := @this: android.text.MeasuredText;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextDirectionHeuristic;

        r0.<android.text.MeasuredText: java.lang.CharSequence mText> = r1;

        r0.<android.text.MeasuredText: int mTextStart> = i0;

        i2 = i1 - i0;

        r0.<android.text.MeasuredText: int mLen> = i2;

        r0.<android.text.MeasuredText: int mPos> = 0;

        $r5 = r0.<android.text.MeasuredText: float[] mWidths>;

        if $r5 == null goto label01;

        $r29 = r0.<android.text.MeasuredText: float[] mWidths>;

        $i16 = lengthof $r29;

        if $i16 >= i2 goto label02;

     label01:
        $i8 = staticinvoke <com.android.internal.util.ArrayUtils: int idealFloatArraySize(int)>(i2);

        $r6 = newarray (float)[$i8];

        r0.<android.text.MeasuredText: float[] mWidths> = $r6;

     label02:
        $r7 = r0.<android.text.MeasuredText: char[] mChars>;

        if $r7 == null goto label03;

        $r27 = r0.<android.text.MeasuredText: char[] mChars>;

        $i17 = lengthof $r27;

        if $i17 >= i2 goto label04;

     label03:
        $i9 = staticinvoke <com.android.internal.util.ArrayUtils: int idealCharArraySize(int)>(i2);

        $r9 = newarray (char)[$i9];

        r0.<android.text.MeasuredText: char[] mChars> = $r9;

     label04:
        $r8 = r0.<android.text.MeasuredText: char[] mChars>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i0, i1, $r8, 0);

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label10;

        r3 = (android.text.Spanned) r1;

        $r25 = interfaceinvoke r3.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "android/text/style/ReplacementSpan");

        r4 = (android.text.style.ReplacementSpan[]) $r25;

        i4 = 0;

     label05:
        $i14 = lengthof r4;

        if i4 >= $i14 goto label10;

        $r24 = r4[i4];

        $i13 = interfaceinvoke r3.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r24);

        i5 = $i13 - i0;

        $r28 = r4[i4];

        $i15 = interfaceinvoke r3.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r28);

        i6 = $i15 - i0;

        if i5 >= 0 goto label06;

        i5 = 0;

     label06:
        if i6 <= i2 goto label07;

        i6 = i2;

     label07:
        i7 = i5;

     label08:
        if i7 >= i6 goto label09;

        $r26 = r0.<android.text.MeasuredText: char[] mChars>;

        $r26[i7] = 65532;

        i7 = i7 + 1;

        goto label08;

     label09:
        i4 = i4 + 1;

        goto label05;

     label10:
        $r10 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        if r2 == $r10 goto label11;

        $r21 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        if r2 == $r21 goto label11;

        $r22 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic ANYRTL_LTR>;

        if r2 != $r22 goto label12;

     label11:
        $r11 = r0.<android.text.MeasuredText: char[] mChars>;

        $z1 = staticinvoke <android.text.TextUtils: boolean doesNotNeedBidi(char[],int,int)>($r11, 0, i2);

        if $z1 == 0 goto label12;

        r0.<android.text.MeasuredText: int mDir> = 1;

        r0.<android.text.MeasuredText: boolean mEasy> = 1;

        return;

     label12:
        $r12 = r0.<android.text.MeasuredText: byte[] mLevels>;

        if $r12 == null goto label13;

        $r23 = r0.<android.text.MeasuredText: byte[] mLevels>;

        $i12 = lengthof $r23;

        if $i12 >= i2 goto label14;

     label13:
        $i10 = staticinvoke <com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>(i2);

        $r14 = newarray (byte)[$i10];

        r0.<android.text.MeasuredText: byte[] mLevels> = $r14;

     label14:
        $r13 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        if r2 != $r13 goto label16;

        b3 = 1;

     label15:
        $r19 = r0.<android.text.MeasuredText: char[] mChars>;

        $r20 = r0.<android.text.MeasuredText: byte[] mLevels>;

        $i11 = staticinvoke <android.text.AndroidBidi: int bidi(int,char[],byte[],int,boolean)>(b3, $r19, $r20, i2, 0);

        r0.<android.text.MeasuredText: int mDir> = $i11;

        r0.<android.text.MeasuredText: boolean mEasy> = 0;

        return;

     label16:
        $r16 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

        if r2 != $r16 goto label17;

        b3 = -1;

        goto label15;

     label17:
        $r15 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        if r2 != $r15 goto label18;

        b3 = 2;

        goto label15;

     label18:
        $r18 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_RTL>;

        if r2 != $r18 goto label19;

        b3 = -2;

        goto label15;

     label19:
        $r17 = r0.<android.text.MeasuredText: char[] mChars>;

        $z2 = interfaceinvoke r2.<android.text.TextDirectionHeuristic: boolean isRtl(char[],int,int)>($r17, 0, i2);

        if $z2 == 0 goto label21;

        b3 = -1;

     label20:
        goto label15;

     label21:
        b3 = 1;

        goto label20;
    }

    void setPos(int)
    {
        android.text.MeasuredText r0;
        int i0, $i1, $i2;

        r0 := @this: android.text.MeasuredText;

        i0 := @parameter0: int;

        $i1 = r0.<android.text.MeasuredText: int mTextStart>;

        $i2 = i0 - $i1;

        r0.<android.text.MeasuredText: int mPos> = $i2;

        return;
    }
}
