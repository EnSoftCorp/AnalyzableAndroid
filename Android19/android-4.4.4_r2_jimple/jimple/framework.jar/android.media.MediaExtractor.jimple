public final class android.media.MediaExtractor extends java.lang.Object
{
    public static final int SAMPLE_FLAG_ENCRYPTED;
    public static final int SAMPLE_FLAG_SYNC;
    public static final int SEEK_TO_CLOSEST_SYNC;
    public static final int SEEK_TO_NEXT_SYNC;
    public static final int SEEK_TO_PREVIOUS_SYNC;
    private int mNativeContext;

    static void <clinit>()
    {
        <android.media.MediaExtractor: int SEEK_TO_NEXT_SYNC> = 1;

        <android.media.MediaExtractor: int SEEK_TO_CLOSEST_SYNC> = 2;

        <android.media.MediaExtractor: int SAMPLE_FLAG_SYNC> = 1;

        <android.media.MediaExtractor: int SAMPLE_FLAG_ENCRYPTED> = 2;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.MediaExtractor: void native_init()>();

        return;
    }

    public void <init>()
    {
        android.media.MediaExtractor r0;

        r0 := @this: android.media.MediaExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.media.MediaExtractor: void native_setup()>();

        return;
    }

    private native java.util.Map getFileFormatNative();

    private native java.util.Map getTrackFormatNative(int);

    private final native void native_finalize();

    private static final native void native_init();

    private final native void native_setup();

    private final native void setDataSource(java.lang.String, java.lang.String[], java.lang.String[]) throws java.io.IOException;

    public native boolean advance();

    protected void finalize()
    {
        android.media.MediaExtractor r0;

        r0 := @this: android.media.MediaExtractor;

        specialinvoke r0.<android.media.MediaExtractor: void native_finalize()>();

        return;
    }

    public native long getCachedDuration();

    public java.util.Map getPsshInfo()
    {
        android.media.MediaExtractor r0;
        java.util.Map r1;
        java.util.HashMap r2, $r10;
        boolean z0;
        java.nio.ByteBuffer r3;
        java.util.UUID r4, $r13;
        byte[] r5;
        java.lang.Object $r6;
        java.nio.ByteOrder $r7, $r12, $r16;
        int $i0, $i3;
        long $l1, $l2;

        r0 := @this: android.media.MediaExtractor;

        r1 = specialinvoke r0.<android.media.MediaExtractor: java.util.Map getFileFormatNative()>();

        r2 = null;

        if r1 == null goto label2;

        z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("pssh");

        r2 = null;

        if z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("pssh");

        r3 = (java.nio.ByteBuffer) $r6;

        $r7 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r7);

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>("pssh");

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r2 = $r10;

     label1:
        $i0 = virtualinvoke r3.<java.nio.ByteBuffer: int remaining()>();

        if $i0 <= 0 goto label2;

        $r12 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r12);

        $r13 = new java.util.UUID;

        $l2 = virtualinvoke r3.<java.nio.ByteBuffer: long getLong()>();

        $l1 = virtualinvoke r3.<java.nio.ByteBuffer: long getLong()>();

        specialinvoke $r13.<java.util.UUID: void <init>(long,long)>($l2, $l1);

        r4 = $r13;

        $r16 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r16);

        $i3 = virtualinvoke r3.<java.nio.ByteBuffer: int getInt()>();

        r5 = newarray (byte)[$i3];

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r5);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label1;

     label2:
        return r2;
    }

    public native boolean getSampleCryptoInfo(android.media.MediaCodec$CryptoInfo);

    public native int getSampleFlags();

    public native long getSampleTime();

    public native int getSampleTrackIndex();

    public final native int getTrackCount();

    public android.media.MediaFormat getTrackFormat(int)
    {
        android.media.MediaExtractor r0;
        int i0;
        android.media.MediaFormat $r1;
        java.util.Map $r2;

        r0 := @this: android.media.MediaExtractor;

        i0 := @parameter0: int;

        $r1 = new android.media.MediaFormat;

        $r2 = specialinvoke r0.<android.media.MediaExtractor: java.util.Map getTrackFormatNative(int)>(i0);

        specialinvoke $r1.<android.media.MediaFormat: void <init>(java.util.Map)>($r2);

        return $r1;
    }

    public native boolean hasCacheReachedEndOfStream();

    public native int readSampleData(java.nio.ByteBuffer, int);

    public final native void release();

    public native void seekTo(long, int);

    public native void selectTrack(int);

    public final void setDataSource(android.content.Context, android.net.Uri, java.util.Map) throws java.io.IOException
    {
        android.media.MediaExtractor r0;
        android.content.Context r1;
        android.net.Uri r2;
        java.util.Map r3;
        java.lang.String r4, $r10, $r16;
        android.content.res.AssetFileDescriptor r5, r9;
        java.lang.Throwable r6, $r15;
        boolean $z0;
        android.content.ContentResolver $r11;
        long $l0, $l2, $l3;
        java.io.FileDescriptor $r12, $r14;
        byte $b1;
        java.io.IOException $r13;
        java.lang.SecurityException $r17;

        r0 := @this: android.media.MediaExtractor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.util.Map;

        r4 = virtualinvoke r2.<android.net.Uri: java.lang.String getScheme()>();

        if r4 == null goto label01;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label03;

     label01:
        $r10 = virtualinvoke r2.<android.net.Uri: java.lang.String getPath()>();

        virtualinvoke r0.<android.media.MediaExtractor: void setDataSource(java.lang.String)>($r10);

     label02:
        return;

     label03:
        r5 = null;

     label04:
        $r11 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r9 = virtualinvoke $r11.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>(r2, "r");

     label05:
        r5 = r9;

        if r5 != null goto label06;

        if r5 == null goto label02;

        virtualinvoke r5.<android.content.res.AssetFileDescriptor: void close()>();

        return;

     label06:
        $l0 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label08;

        $r14 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r0.<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor)>($r14);

     label07:
        if r5 == null goto label02;

        virtualinvoke r5.<android.content.res.AssetFileDescriptor: void close()>();

        return;

     label08:
        $r12 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l3 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l2 = virtualinvoke r5.<android.content.res.AssetFileDescriptor: long getDeclaredLength()>();

        virtualinvoke r0.<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>($r12, $l3, $l2);

     label09:
        goto label07;

     label10:
        $r17 := @caughtexception;

        if r5 == null goto label11;

        virtualinvoke r5.<android.content.res.AssetFileDescriptor: void close()>();

     label11:
        $r16 = virtualinvoke r2.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r0.<android.media.MediaExtractor: void setDataSource(java.lang.String,java.util.Map)>($r16, r3);

        return;

     label12:
        $r13 := @caughtexception;

        if r5 == null goto label11;

        virtualinvoke r5.<android.content.res.AssetFileDescriptor: void close()>();

        goto label11;

     label13:
        $r15 := @caughtexception;

        r6 = $r15;

        if r5 == null goto label14;

        virtualinvoke r5.<android.content.res.AssetFileDescriptor: void close()>();

     label14:
        throw r6;

        catch java.lang.SecurityException from label04 to label05 with label10;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.SecurityException from label06 to label07 with label10;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.SecurityException from label08 to label09 with label10;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label13;
    }

    public final native void setDataSource(android.media.DataSource) throws java.io.IOException;

    public final void setDataSource(java.io.FileDescriptor) throws java.io.IOException
    {
        android.media.MediaExtractor r0;
        java.io.FileDescriptor r1;

        r0 := @this: android.media.MediaExtractor;

        r1 := @parameter0: java.io.FileDescriptor;

        virtualinvoke r0.<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>(r1, 0L, 576460752303423487L);

        return;
    }

    public final native void setDataSource(java.io.FileDescriptor, long, long) throws java.io.IOException;

    public final void setDataSource(java.lang.String) throws java.io.IOException
    {
        android.media.MediaExtractor r0;
        java.lang.String r1;

        r0 := @this: android.media.MediaExtractor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.media.MediaExtractor: void setDataSource(java.lang.String,java.lang.String[],java.lang.String[])>(r1, null, null);

        return;
    }

    public final void setDataSource(java.lang.String, java.util.Map) throws java.io.IOException
    {
        android.media.MediaExtractor r0;
        java.lang.String r1, $r10, $r11;
        java.util.Map r2;
        java.lang.String[] r3, r4;
        int i0, $i1, $i2;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r9, $r12;

        r0 := @this: android.media.MediaExtractor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        r3 = null;

        r4 = null;

        if r2 == null goto label2;

        $i1 = interfaceinvoke r2.<java.util.Map: int size()>();

        r3 = newarray (java.lang.String)[$i1];

        $i2 = interfaceinvoke r2.<java.util.Map: int size()>();

        r4 = newarray (java.lang.String)[$i2];

        i0 = 0;

        $r7 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        r3[i0] = $r10;

        $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r12;

        r4[i0] = $r11;

        i0 = i0 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.media.MediaExtractor: void setDataSource(java.lang.String,java.lang.String[],java.lang.String[])>(r1, r3, r4);

        return;
    }

    public native void unselectTrack(int);
}
