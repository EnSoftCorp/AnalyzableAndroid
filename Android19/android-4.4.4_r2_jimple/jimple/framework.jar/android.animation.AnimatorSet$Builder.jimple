public class android.animation.AnimatorSet$Builder extends java.lang.Object
{
    private android.animation.AnimatorSet$Node mCurrentNode;
    final android.animation.AnimatorSet this$0;

    void <init>(android.animation.AnimatorSet, android.animation.Animator)
    {
        android.animation.AnimatorSet$Builder r0;
        android.animation.AnimatorSet r1;
        android.animation.Animator r2;
        java.util.HashMap $r3, $r8;
        java.lang.Object $r4;
        android.animation.AnimatorSet$Node $r5, $r6, $r7, $r9, $r12;
        java.util.ArrayList $r11;

        r0 := @this: android.animation.AnimatorSet$Builder;

        r1 := @parameter0: android.animation.AnimatorSet;

        r2 := @parameter1: android.animation.Animator;

        r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <android.animation.AnimatorSet: java.util.HashMap access$200(android.animation.AnimatorSet)>(r1);

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (android.animation.AnimatorSet$Node) $r4;

        r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Node mCurrentNode> = $r5;

        $r6 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Node mCurrentNode>;

        if $r6 != null goto label1;

        $r7 = new android.animation.AnimatorSet$Node;

        specialinvoke $r7.<android.animation.AnimatorSet$Node: void <init>(android.animation.Animator)>(r2);

        r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Node mCurrentNode> = $r7;

        $r8 = staticinvoke <android.animation.AnimatorSet: java.util.HashMap access$200(android.animation.AnimatorSet)>(r1);

        $r9 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Node mCurrentNode>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r9);

        $r11 = staticinvoke <android.animation.AnimatorSet: java.util.ArrayList access$500(android.animation.AnimatorSet)>(r1);

        $r12 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Node mCurrentNode>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label1:
        return;
    }

    public android.animation.AnimatorSet$Builder after(long)
    {
        android.animation.AnimatorSet$Builder r0;
        long l0;
        android.animation.ValueAnimator r1;
        float[] $r2;

        r0 := @this: android.animation.AnimatorSet$Builder;

        l0 := @parameter0: long;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r2);

        virtualinvoke r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l0);

        virtualinvoke r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(android.animation.Animator)>(r1);

        return r0;
    }

    public android.animation.AnimatorSet$Builder after(android.animation.Animator)
    {
        android.animation.AnimatorSet$Builder r0;
        android.animation.Animator r1;
        android.animation.AnimatorSet$Node r2, $r8, $r9;
        android.animation.AnimatorSet$Dependency r3, $r7;
        android.animation.AnimatorSet $r4, $r10, $r13;
        java.util.HashMap $r5, $r11;
        java.lang.Object $r6;
        java.util.ArrayList $r14;

        r0 := @this: android.animation.AnimatorSet$Builder;

        r1 := @parameter0: android.animation.Animator;

        $r4 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r5 = staticinvoke <android.animation.AnimatorSet: java.util.HashMap access$200(android.animation.AnimatorSet)>($r4);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.animation.AnimatorSet$Node) $r6;

        if r2 != null goto label1;

        $r9 = new android.animation.AnimatorSet$Node;

        specialinvoke $r9.<android.animation.AnimatorSet$Node: void <init>(android.animation.Animator)>(r1);

        r2 = $r9;

        $r10 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r11 = staticinvoke <android.animation.AnimatorSet: java.util.HashMap access$200(android.animation.AnimatorSet)>($r10);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r13 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r14 = staticinvoke <android.animation.AnimatorSet: java.util.ArrayList access$500(android.animation.AnimatorSet)>($r13);

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label1:
        $r7 = new android.animation.AnimatorSet$Dependency;

        specialinvoke $r7.<android.animation.AnimatorSet$Dependency: void <init>(android.animation.AnimatorSet$Node,int)>(r2, 1);

        r3 = $r7;

        $r8 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Node mCurrentNode>;

        virtualinvoke $r8.<android.animation.AnimatorSet$Node: void addDependency(android.animation.AnimatorSet$Dependency)>(r3);

        return r0;
    }

    public android.animation.AnimatorSet$Builder before(android.animation.Animator)
    {
        android.animation.AnimatorSet$Builder r0;
        android.animation.Animator r1;
        android.animation.AnimatorSet$Node r2, $r7, $r8;
        android.animation.AnimatorSet $r3, $r9, $r12;
        java.util.HashMap $r4, $r10;
        java.lang.Object $r5;
        android.animation.AnimatorSet$Dependency $r6;
        java.util.ArrayList $r13;

        r0 := @this: android.animation.AnimatorSet$Builder;

        r1 := @parameter0: android.animation.Animator;

        $r3 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r4 = staticinvoke <android.animation.AnimatorSet: java.util.HashMap access$200(android.animation.AnimatorSet)>($r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.animation.AnimatorSet$Node) $r5;

        if r2 != null goto label1;

        $r8 = new android.animation.AnimatorSet$Node;

        specialinvoke $r8.<android.animation.AnimatorSet$Node: void <init>(android.animation.Animator)>(r1);

        r2 = $r8;

        $r9 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r10 = staticinvoke <android.animation.AnimatorSet: java.util.HashMap access$200(android.animation.AnimatorSet)>($r9);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r12 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r13 = staticinvoke <android.animation.AnimatorSet: java.util.ArrayList access$500(android.animation.AnimatorSet)>($r12);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label1:
        $r6 = new android.animation.AnimatorSet$Dependency;

        $r7 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Node mCurrentNode>;

        specialinvoke $r6.<android.animation.AnimatorSet$Dependency: void <init>(android.animation.AnimatorSet$Node,int)>($r7, 1);

        virtualinvoke r2.<android.animation.AnimatorSet$Node: void addDependency(android.animation.AnimatorSet$Dependency)>($r6);

        return r0;
    }

    public android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)
    {
        android.animation.AnimatorSet$Builder r0;
        android.animation.Animator r1;
        android.animation.AnimatorSet$Node r2, $r7, $r8;
        android.animation.AnimatorSet $r3, $r9, $r12;
        java.util.HashMap $r4, $r10;
        java.lang.Object $r5;
        android.animation.AnimatorSet$Dependency $r6;
        java.util.ArrayList $r13;

        r0 := @this: android.animation.AnimatorSet$Builder;

        r1 := @parameter0: android.animation.Animator;

        $r3 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r4 = staticinvoke <android.animation.AnimatorSet: java.util.HashMap access$200(android.animation.AnimatorSet)>($r3);

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.animation.AnimatorSet$Node) $r5;

        if r2 != null goto label1;

        $r8 = new android.animation.AnimatorSet$Node;

        specialinvoke $r8.<android.animation.AnimatorSet$Node: void <init>(android.animation.Animator)>(r1);

        r2 = $r8;

        $r9 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r10 = staticinvoke <android.animation.AnimatorSet: java.util.HashMap access$200(android.animation.AnimatorSet)>($r9);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r12 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet this$0>;

        $r13 = staticinvoke <android.animation.AnimatorSet: java.util.ArrayList access$500(android.animation.AnimatorSet)>($r12);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label1:
        $r6 = new android.animation.AnimatorSet$Dependency;

        $r7 = r0.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Node mCurrentNode>;

        specialinvoke $r6.<android.animation.AnimatorSet$Dependency: void <init>(android.animation.AnimatorSet$Node,int)>($r7, 0);

        virtualinvoke r2.<android.animation.AnimatorSet$Node: void addDependency(android.animation.AnimatorSet$Dependency)>($r6);

        return r0;
    }
}
