class android.hardware.usb.IUsbManager$Stub$Proxy extends java.lang.Object implements android.hardware.usb.IUsbManager
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void allowUsbDebugging(boolean, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        boolean z0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        byte b0;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label2:
        b0 = 0;

        if z0 == 0 goto label3;

        b0 = 1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        $r1 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void clearDefaults(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clearUsbDebuggingKeys() throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void denyUsbDebugging() throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r4 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.hardware.usb.UsbAccessory getCurrentAccessory() throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r8;
        android.hardware.usb.UsbAccessory r4;
        android.os.IBinder $r5;
        int $i0;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r6 = <android.hardware.usb.UsbAccessory: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r4 = (android.hardware.usb.UsbAccessory) $r7;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        r4 = null;

        goto label2;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void getDeviceList(android.os.Bundle) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.os.Bundle r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;
        int $i0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label2;

        virtualinvoke r1.<android.os.Bundle: void readFromParcel(android.os.Parcel)>(r3);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        return "android.hardware.usb.IUsbManager";
    }

    public void grantAccessoryPermission(android.hardware.usb.UsbAccessory, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbAccessory r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbAccessory;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void grantDevicePermission(android.hardware.usb.UsbDevice, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbDevice r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbDevice;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbAccessory r1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbAccessory;

        z0 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r1 == null goto label07;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label05:
        if i0 == 0 goto label10;

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label04;

     label09:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public boolean hasDefaults(java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0, i1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        boolean z0;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label2:
        z0 = 0;

        if i1 == 0 goto label3;

        z0 = 1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public boolean hasDevicePermission(android.hardware.usb.UsbDevice) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbDevice r1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbDevice;

        z0 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r1 == null goto label07;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label05:
        if i0 == 0 goto label10;

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label04;

     label09:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbAccessory r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r9;
        android.os.ParcelFileDescriptor r5;
        android.os.IBinder $r6;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbAccessory;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r6 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label9;

        $r7 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.os.ParcelFileDescriptor) $r8;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        r5 = null;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public android.os.ParcelFileDescriptor openDevice(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r9;
        android.os.ParcelFileDescriptor r5;
        android.os.IBinder $r6;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r7 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.os.ParcelFileDescriptor) $r8;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        r5 = null;

        goto label2;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void requestAccessoryPermission(android.hardware.usb.UsbAccessory, java.lang.String, android.app.PendingIntent) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbAccessory r1;
        java.lang.String r2;
        android.app.PendingIntent r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbAccessory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.PendingIntent;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r1 == null goto label09;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label05:
        if r3 == null goto label12;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label07:
        $r7 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label04;

     label11:
        $r8 := @caughtexception;

        r6 = $r8;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label12:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label13:
        goto label07;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void requestDevicePermission(android.hardware.usb.UsbDevice, java.lang.String, android.app.PendingIntent) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbDevice r1;
        java.lang.String r2;
        android.app.PendingIntent r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbDevice;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.PendingIntent;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label02:
        if r1 == null goto label09;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

     label05:
        if r3 == null goto label12;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label07:
        $r7 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label08:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label04;

     label11:
        $r8 := @caughtexception;

        r6 = $r8;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label12:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label13:
        goto label07;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void setAccessoryPackage(android.hardware.usb.UsbAccessory, java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbAccessory r1;
        java.lang.String r2;
        int i0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbAccessory;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setCurrentFunction(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        byte b0;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        b0 = 0;

        if z0 == 0 goto label3;

        b0 = 1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setDevicePackage(android.hardware.usb.UsbDevice, java.lang.String, int) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        android.hardware.usb.UsbDevice r1;
        java.lang.String r2;
        int i0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.usb.UsbDevice;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setMassStorageBackingFile(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.usb.IUsbManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.usb.IUsbManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.usb.IUsbManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
