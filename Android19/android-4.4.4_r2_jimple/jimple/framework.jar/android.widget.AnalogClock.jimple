public class android.widget.AnalogClock extends android.view.View
{
    private boolean mAttached;
    private android.text.format.Time mCalendar;
    private boolean mChanged;
    private android.graphics.drawable.Drawable mDial;
    private int mDialHeight;
    private int mDialWidth;
    private final android.os.Handler mHandler;
    private float mHour;
    private android.graphics.drawable.Drawable mHourHand;
    private final android.content.BroadcastReceiver mIntentReceiver;
    private android.graphics.drawable.Drawable mMinuteHand;
    private float mMinutes;

    public void <init>(android.content.Context)
    {
        android.widget.AnalogClock r0;
        android.content.Context r1;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AnalogClock r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AnalogClock r0;
        android.content.Context r1, $r7;
        android.util.AttributeSet r2;
        int i0, $i1, $i2;
        android.content.res.Resources r3;
        android.content.res.TypedArray r4;
        android.os.Handler $r5;
        android.widget.AnalogClock$1 $r6;
        int[] $r8;
        android.graphics.drawable.Drawable $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20;
        android.text.format.Time $r16;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        r0.<android.widget.AnalogClock: android.os.Handler mHandler> = $r5;

        $r6 = new android.widget.AnalogClock$1;

        specialinvoke $r6.<android.widget.AnalogClock$1: void <init>(android.widget.AnalogClock)>(r0);

        r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver> = $r6;

        $r7 = r0.<android.widget.AnalogClock: android.content.Context mContext>;

        r3 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = <com.android.internal.R$styleable: int[] AnalogClock>;

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r8, i0, 0);

        $r9 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial> = $r9;

        $r10 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        if $r10 != null goto label1;

        $r19 = virtualinvoke r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17302034);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial> = $r19;

     label1:
        $r11 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand> = $r11;

        $r12 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand>;

        if $r12 != null goto label2;

        $r20 = virtualinvoke r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17302035);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand> = $r20;

     label2:
        $r14 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand> = $r14;

        $r13 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand>;

        if $r13 != null goto label3;

        $r18 = virtualinvoke r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17302036);

        r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand> = $r18;

     label3:
        $r16 = new android.text.format.Time;

        specialinvoke $r16.<android.text.format.Time: void <init>()>();

        r0.<android.widget.AnalogClock: android.text.format.Time mCalendar> = $r16;

        $r15 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        $i1 = virtualinvoke $r15.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.widget.AnalogClock: int mDialWidth> = $i1;

        $r17 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        $i2 = virtualinvoke $r17.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<android.widget.AnalogClock: int mDialHeight> = $i2;

        return;
    }

    static android.text.format.Time access$002(android.widget.AnalogClock, android.text.format.Time)
    {
        android.widget.AnalogClock r0;
        android.text.format.Time r1;

        r0 := @parameter0: android.widget.AnalogClock;

        r1 := @parameter1: android.text.format.Time;

        r0.<android.widget.AnalogClock: android.text.format.Time mCalendar> = r1;

        return r1;
    }

    static void access$100(android.widget.AnalogClock)
    {
        android.widget.AnalogClock r0;

        r0 := @parameter0: android.widget.AnalogClock;

        specialinvoke r0.<android.widget.AnalogClock: void onTimeChanged()>();

        return;
    }

    private void onTimeChanged()
    {
        android.widget.AnalogClock r0;
        int i0, i1, i2;
        android.text.format.Time $r1, $r2, $r3, $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: android.widget.AnalogClock;

        $r1 = r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        virtualinvoke $r1.<android.text.format.Time: void setToNow()>();

        $r2 = r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        i0 = $r2.<android.text.format.Time: int hour>;

        $r3 = r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        i1 = $r3.<android.text.format.Time: int minute>;

        $r4 = r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        i2 = $r4.<android.text.format.Time: int second>;

        $f2 = (float) i1;

        $f0 = (float) i2;

        $f1 = $f0 / 60.0F;

        $f3 = $f2 + $f1;

        r0.<android.widget.AnalogClock: float mMinutes> = $f3;

        $f6 = (float) i0;

        $f4 = r0.<android.widget.AnalogClock: float mMinutes>;

        $f5 = $f4 / 60.0F;

        $f7 = $f6 + $f5;

        r0.<android.widget.AnalogClock: float mHour> = $f7;

        r0.<android.widget.AnalogClock: boolean mChanged> = 1;

        $r5 = r0.<android.widget.AnalogClock: android.text.format.Time mCalendar>;

        specialinvoke r0.<android.widget.AnalogClock: void updateContentDescription(android.text.format.Time)>($r5);

        return;
    }

    private void updateContentDescription(android.text.format.Time)
    {
        android.widget.AnalogClock r0;
        android.text.format.Time r1;
        android.content.Context $r2;
        long $l0;
        java.lang.String $r3;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.text.format.Time;

        $r2 = r0.<android.widget.AnalogClock: android.content.Context mContext>;

        $l0 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        $r3 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r2, $l0, 129);

        virtualinvoke r0.<android.widget.AnalogClock: void setContentDescription(java.lang.CharSequence)>($r3);

        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.AnalogClock r0;
        android.content.IntentFilter r1, $r3;
        boolean $z0;
        android.text.format.Time $r2;
        android.content.Context $r4;
        android.os.Handler $r5;
        android.content.BroadcastReceiver $r6;

        r0 := @this: android.widget.AnalogClock;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        $z0 = r0.<android.widget.AnalogClock: boolean mAttached>;

        if $z0 != 0 goto label1;

        r0.<android.widget.AnalogClock: boolean mAttached> = 1;

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_TICK");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r4 = virtualinvoke r0.<android.widget.AnalogClock: android.content.Context getContext()>();

        $r6 = r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver>;

        $r5 = r0.<android.widget.AnalogClock: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r6, r1, null, $r5);

     label1:
        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r0.<android.widget.AnalogClock: android.text.format.Time mCalendar> = $r2;

        specialinvoke r0.<android.widget.AnalogClock: void onTimeChanged()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.AnalogClock r0;
        boolean $z0;
        android.content.Context $r1;
        android.content.BroadcastReceiver $r2;

        r0 := @this: android.widget.AnalogClock;

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        $z0 = r0.<android.widget.AnalogClock: boolean mAttached>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.AnalogClock: android.content.Context getContext()>();

        $r2 = r0.<android.widget.AnalogClock: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        r0.<android.widget.AnalogClock: boolean mAttached> = 0;

     label1:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.AnalogClock r0;
        android.graphics.Canvas r1;
        boolean z0, z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        android.graphics.drawable.Drawable r2, r3, r4;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;

        r0 := @this: android.widget.AnalogClock;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        z0 = r0.<android.widget.AnalogClock: boolean mChanged>;

        if z0 == 0 goto label1;

        r0.<android.widget.AnalogClock: boolean mChanged> = 0;

     label1:
        $i10 = r0.<android.widget.AnalogClock: int mRight>;

        $i11 = r0.<android.widget.AnalogClock: int mLeft>;

        i0 = $i10 - $i11;

        $i12 = r0.<android.widget.AnalogClock: int mBottom>;

        $i13 = r0.<android.widget.AnalogClock: int mTop>;

        i1 = $i12 - $i13;

        i2 = i0 / 2;

        i3 = i1 / 2;

        r2 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mDial>;

        i4 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i5 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if i0 < i4 goto label2;

        z1 = 0;

        if i1 >= i5 goto label3;

     label2:
        z1 = 1;

        $f1 = (float) i0;

        $f2 = (float) i4;

        $f5 = $f1 / $f2;

        $f3 = (float) i1;

        $f4 = (float) i5;

        $f6 = $f3 / $f4;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f5, $f6);

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f8 = (float) i2;

        $f7 = (float) i3;

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float,float,float)>(f0, f0, $f8, $f7);

     label3:
        if z0 == 0 goto label4;

        $i29 = i4 / 2;

        $i40 = i2 - $i29;

        $i30 = i5 / 2;

        $i39 = i3 - $i30;

        $i31 = i4 / 2;

        $i38 = i2 + $i31;

        $i32 = i5 / 2;

        $i37 = i3 + $i32;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i40, $i39, $i38, $i37);

     label4:
        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f11 = r0.<android.widget.AnalogClock: float mHour>;

        $f9 = $f11 / 12.0F;

        $f14 = 360.0F * $f9;

        $f13 = (float) i2;

        $f10 = (float) i3;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f14, $f13, $f10);

        r3 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mHourHand>;

        if z0 == 0 goto label5;

        i7 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i9 = virtualinvoke r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i28 = i7 / 2;

        $i36 = i2 - $i28;

        $i27 = i9 / 2;

        $i35 = i3 - $i27;

        $i26 = i7 / 2;

        $i34 = i2 + $i26;

        $i25 = i9 / 2;

        $i33 = i3 + $i25;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i36, $i35, $i34, $i33);

     label5:
        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $f12 = r0.<android.widget.AnalogClock: float mMinutes>;

        $f17 = $f12 / 60.0F;

        $f16 = 360.0F * $f17;

        $f15 = (float) i2;

        $f18 = (float) i3;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f16, $f15, $f18);

        r4 = r0.<android.widget.AnalogClock: android.graphics.drawable.Drawable mMinuteHand>;

        if z0 == 0 goto label6;

        i6 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i8 = virtualinvoke r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i18 = i6 / 2;

        $i23 = i2 - $i18;

        $i17 = i8 / 2;

        $i24 = i3 - $i17;

        $i22 = i6 / 2;

        $i19 = i2 + $i22;

        $i21 = i8 / 2;

        $i20 = i3 + $i21;

        virtualinvoke r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i23, $i24, $i19, $i20);

     label6:
        virtualinvoke r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        if z1 == 0 goto label7;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label7:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AnalogClock r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @this: android.widget.AnalogClock;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        f0 = 1.0F;

        f1 = 1.0F;

        if i2 == 0 goto label1;

        $i14 = r0.<android.widget.AnalogClock: int mDialWidth>;

        if i3 >= $i14 goto label1;

        $f10 = (float) i3;

        $i15 = r0.<android.widget.AnalogClock: int mDialWidth>;

        $f9 = (float) $i15;

        f0 = $f10 / $f9;

     label1:
        if i4 == 0 goto label2;

        $i11 = r0.<android.widget.AnalogClock: int mDialHeight>;

        if i5 >= $i11 goto label2;

        $f8 = (float) i5;

        $i13 = r0.<android.widget.AnalogClock: int mDialHeight>;

        $f7 = (float) $i13;

        f1 = $f8 / $f7;

     label2:
        f2 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f1);

        $i6 = r0.<android.widget.AnalogClock: int mDialWidth>;

        $f4 = (float) $i6;

        $f3 = f2 * $f4;

        $i8 = (int) $f3;

        $i7 = staticinvoke <android.widget.AnalogClock: int resolveSizeAndState(int,int,int)>($i8, i0, 0);

        $i9 = r0.<android.widget.AnalogClock: int mDialHeight>;

        $f5 = (float) $i9;

        $f6 = f2 * $f5;

        $i10 = (int) $f6;

        $i12 = staticinvoke <android.widget.AnalogClock: int resolveSizeAndState(int,int,int)>($i10, i1, 0);

        virtualinvoke r0.<android.widget.AnalogClock: void setMeasuredDimension(int,int)>($i7, $i12);

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.AnalogClock r0;
        int i0, i1, i2, i3;

        r0 := @this: android.widget.AnalogClock;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        r0.<android.widget.AnalogClock: boolean mChanged> = 1;

        return;
    }
}
