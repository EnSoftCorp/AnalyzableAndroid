class android.inputmethodservice.IInputMethodWrapper extends com.android.internal.view.IInputMethod$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private static final int DO_ATTACH_TOKEN;
    private static final int DO_CHANGE_INPUTMETHOD_SUBTYPE;
    private static final int DO_CREATE_SESSION;
    private static final int DO_DUMP;
    private static final int DO_HIDE_SOFT_INPUT;
    private static final int DO_RESTART_INPUT;
    private static final int DO_REVOKE_SESSION;
    private static final int DO_SET_INPUT_CONTEXT;
    private static final int DO_SET_SESSION_ENABLED;
    private static final int DO_SHOW_SOFT_INPUT;
    private static final int DO_START_INPUT;
    private static final int DO_UNSET_INPUT_CONTEXT;
    private static final java.lang.String TAG;
    final com.android.internal.os.HandlerCaller mCaller;
    final java.lang.ref.WeakReference mInputMethod;
    final java.lang.ref.WeakReference mTarget;
    final int mTargetSdkVersion;

    public void <init>(android.inputmethodservice.AbstractInputMethodService, android.view.inputmethod.InputMethod)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.inputmethodservice.AbstractInputMethodService r1;
        android.view.inputmethod.InputMethod r2;
        android.content.Context $r5;
        android.content.pm.ApplicationInfo $r7;
        int $i0;
        java.lang.ref.WeakReference r8, r10;
        com.android.internal.os.HandlerCaller r9;
        com.android.internal.os.HandlerCaller$Callback r11;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.inputmethodservice.AbstractInputMethodService;

        r2 := @parameter1: android.view.inputmethod.InputMethod;

        specialinvoke r0.<com.android.internal.view.IInputMethod$Stub: void <init>()>();

        r8 = new java.lang.ref.WeakReference;

        specialinvoke r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget> = r8;

        r9 = new com.android.internal.os.HandlerCaller;

        $r5 = virtualinvoke r1.<android.inputmethodservice.AbstractInputMethodService: android.content.Context getApplicationContext()>();

        r11 = (com.android.internal.os.HandlerCaller$Callback) r0;

        specialinvoke r9.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>($r5, null, r11, 1);

        r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller> = r9;

        r10 = new java.lang.ref.WeakReference;

        specialinvoke r10.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mInputMethod> = r10;

        $r7 = virtualinvoke r1.<android.inputmethodservice.AbstractInputMethodService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        r0.<android.inputmethodservice.IInputMethodWrapper: int mTargetSdkVersion> = $i0;

        return;
    }

    public void attachToken(android.os.IBinder)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.IBinder r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(10, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void bindInput(android.view.inputmethod.InputBinding)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.view.inputmethod.InputBinding r1, r2, r11;
        android.os.IBinder $r5;
        com.android.internal.view.IInputContext $r6;
        com.android.internal.os.HandlerCaller $r7, $r8;
        android.os.Message $r9;
        com.android.internal.view.InputConnectionWrapper r10;
        android.view.inputmethod.InputConnection r12;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.view.inputmethod.InputBinding;

        r11 = new android.view.inputmethod.InputBinding;

        r10 = new com.android.internal.view.InputConnectionWrapper;

        $r5 = virtualinvoke r1.<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>();

        $r6 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)>($r5);

        specialinvoke r10.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>($r6);

        r12 = (android.view.inputmethod.InputConnection) r10;

        specialinvoke r11.<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>(r12, r1);

        r2 = r11;

        $r8 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r7 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r9 = virtualinvoke $r7.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(20, r2);

        virtualinvoke $r8.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r9);

        return;
    }

    public void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.view.inputmethod.InputMethodSubtype r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(80, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void createSession(android.view.InputChannel, com.android.internal.view.IInputSessionCallback)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.view.InputChannel r1;
        com.android.internal.view.IInputSessionCallback r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.view.InputChannel;

        r2 := @parameter1: com.android.internal.view.IInputSessionCallback;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(40, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.inputmethodservice.AbstractInputMethodService r4;
        java.util.concurrent.CountDownLatch r5, $r9;
        java.lang.ref.WeakReference $r7;
        java.lang.Object $r8;
        int $i0, $i1, $i2;
        com.android.internal.os.HandlerCaller $r10, $r11;
        android.os.Message $r12;
        java.util.concurrent.TimeUnit $r13;
        boolean $z0;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19;
        java.lang.String $r18;
        java.lang.InterruptedException $r20;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r7 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.inputmethodservice.AbstractInputMethodService) $r8;

        if r4 != null goto label2;

     label1:
        return;

     label2:
        $i0 = virtualinvoke r4.<android.inputmethodservice.AbstractInputMethodService: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump InputMethodManager from from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        return;

     label3:
        $r9 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r9.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r5 = $r9;

        $r11 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r10 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r12 = virtualinvoke $r10.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOOO(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(1, r1, r2, r3, r5);

        virtualinvoke $r11.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r12);

     label4:
        $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z0 = virtualinvoke r5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(5L, $r13);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Timeout waiting for dump");

     label5:
        return;

     label6:
        $r20 := @caughtexception;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Interrupted waiting for dump");

        return;

        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    public void executeMessage(android.os.Message)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        android.os.Message r1;
        boolean z0;
        android.view.inputmethod.InputMethod r2;
        android.view.inputmethod.InputMethodSession r3, $r26;
        com.android.internal.os.SomeArgs r4, r5, r9, r14;
        com.android.internal.view.IInputContext r6, r10;
        com.android.internal.view.InputConnectionWrapper r7, r11, r80, r81;
        android.view.inputmethod.EditorInfo r8, r12;
        android.inputmethodservice.AbstractInputMethodService r13;
        java.lang.Object r15, $r19, $r21, $r23, $r24, $r27, $r28, $r30, $r31, $r34, $r35, $r36, $r40, $r41, $r43, $r44, $r46, $r48, $r49, $r50, $r51, $r55, $r56, $r61, $r74;
        java.lang.RuntimeException r16, $r67;
        java.lang.ref.WeakReference $r17, $r52;
        java.lang.Throwable r18, $r66;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, i11;
        android.view.inputmethod.InputMethodSubtype $r20;
        android.os.ResultReceiver $r22, $r25;
        com.android.internal.view.IInputSessionCallback $r32;
        com.android.internal.os.HandlerCaller $r33;
        android.view.InputChannel $r37;
        android.content.Context $r38;
        android.os.IBinder $r45;
        android.view.inputmethod.InputBinding $r47;
        java.lang.String[] $r53, $r54;
        java.util.concurrent.CountDownLatch $r57;
        java.io.PrintWriter $r59, $r76;
        java.io.FileDescriptor $r60;
        java.lang.StringBuilder $r63, $r64, $r68, $r70, $r72, $r75, r77, r78, r79;
        java.lang.String $r65, $r69, $r71;
        android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper r82;
        android.view.inputmethod.InputConnection r83, r84;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: android.os.Message;

        z0 = 1;

        $r17 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mInputMethod>;

        $r19 = virtualinvoke $r17.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.inputmethod.InputMethod) $r19;

        if r2 != null goto label02;

        $i7 = r1.<android.os.Message: int what>;

        i11 = (int) 1;

        if $i7 == i11 goto label02;

        r77 = new java.lang.StringBuilder;

        specialinvoke r77.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method reference was null, ignoring message: ");

        $i10 = r1.<android.os.Message: int what>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r69);

     label01:
        return;

     label02:
        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label04;
            case 10: goto label13;
            case 20: goto label14;
            case 30: goto label15;
            case 32: goto label16;
            case 34: goto label18;
            case 40: goto label20;
            case 45: goto label21;
            case 50: goto label24;
            case 60: goto label25;
            case 70: goto label26;
            case 80: goto label27;
            default: goto label03;
        };

     label03:
        r78 = new java.lang.StringBuilder;

        specialinvoke r78.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i8 = r1.<android.os.Message: int what>;

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r65);

        return;

     label04:
        $r52 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mTarget>;

        $r51 = virtualinvoke $r52.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r13 = (android.inputmethodservice.AbstractInputMethodService) $r51;

        if r13 == null goto label01;

        $r50 = r1.<android.os.Message: java.lang.Object obj>;

        r14 = (com.android.internal.os.SomeArgs) $r50;

     label05:
        $r49 = r14.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r60 = (java.io.FileDescriptor) $r49;

        $r56 = r14.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r59 = (java.io.PrintWriter) $r56;

        $r55 = r14.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r54 = (java.lang.String[]) $r55;

        $r53 = (java.lang.String[]) $r54;

        virtualinvoke r13.<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r60, $r59, $r53);

     label06:
        r15 = r14.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        entermonitor r15;

     label07:
        $r61 = r14.<com.android.internal.os.SomeArgs: java.lang.Object arg4>;

        $r57 = (java.util.concurrent.CountDownLatch) $r61;

        virtualinvoke $r57.<java.util.concurrent.CountDownLatch: void countDown()>();

        exitmonitor r15;

     label08:
        virtualinvoke r14.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label09:
        $r67 := @caughtexception;

        r16 = $r67;

        $r74 = r14.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r76 = (java.io.PrintWriter) $r74;

        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");

        $r72 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<java.io.PrintWriter: void println(java.lang.String)>($r71);

        goto label06;

     label10:
        $r66 := @caughtexception;

        r18 = $r66;

     label11:
        exitmonitor r15;

     label12:
        throw r18;

     label13:
        $r46 = r1.<android.os.Message: java.lang.Object obj>;

        $r45 = (android.os.IBinder) $r46;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>($r45);

        return;

     label14:
        $r48 = r1.<android.os.Message: java.lang.Object obj>;

        $r47 = (android.view.inputmethod.InputBinding) $r48;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>($r47);

        return;

     label15:
        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void unbindInput()>();

        return;

     label16:
        $r40 = r1.<android.os.Message: java.lang.Object obj>;

        r9 = (com.android.internal.os.SomeArgs) $r40;

        $r44 = r9.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r10 = (com.android.internal.view.IInputContext) $r44;

        r11 = null;

        if r10 == null goto label17;

        r80 = new com.android.internal.view.InputConnectionWrapper;

        specialinvoke r80.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>(r10);

        r11 = r80;

     label17:
        $r43 = r9.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r12 = (android.view.inputmethod.EditorInfo) $r43;

        $i5 = r0.<android.inputmethodservice.IInputMethodWrapper: int mTargetSdkVersion>;

        virtualinvoke r12.<android.view.inputmethod.EditorInfo: void makeCompatible(int)>($i5);

        r83 = (android.view.inputmethod.InputConnection) r11;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>(r83, r12);

        virtualinvoke r9.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label18:
        $r35 = r1.<android.os.Message: java.lang.Object obj>;

        r5 = (com.android.internal.os.SomeArgs) $r35;

        $r36 = r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r6 = (com.android.internal.view.IInputContext) $r36;

        r7 = null;

        if r6 == null goto label19;

        r81 = new com.android.internal.view.InputConnectionWrapper;

        specialinvoke r81.<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>(r6);

        r7 = r81;

     label19:
        $r41 = r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r8 = (android.view.inputmethod.EditorInfo) $r41;

        $i4 = r0.<android.inputmethodservice.IInputMethodWrapper: int mTargetSdkVersion>;

        virtualinvoke r8.<android.view.inputmethod.EditorInfo: void makeCompatible(int)>($i4);

        r84 = (android.view.inputmethod.InputConnection) r7;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>(r84, r8);

        virtualinvoke r5.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label20:
        $r28 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = (com.android.internal.os.SomeArgs) $r28;

        r82 = new android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper;

        $r33 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r38 = $r33.<com.android.internal.os.HandlerCaller: android.content.Context mContext>;

        $r34 = r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r37 = (android.view.InputChannel) $r34;

        $r31 = r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r32 = (com.android.internal.view.IInputSessionCallback) $r31;

        specialinvoke r82.<android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper: void <init>(android.content.Context,android.view.InputChannel,com.android.internal.view.IInputSessionCallback)>($r38, $r37, $r32);

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod$SessionCallback)>(r82);

        virtualinvoke r4.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label21:
        $r30 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (android.view.inputmethod.InputMethodSession) $r30;

        $i3 = r1.<android.os.Message: int arg1>;

        if $i3 == 0 goto label23;

     label22:
        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>(r3, z0);

        return;

     label23:
        z0 = 0;

        goto label22;

     label24:
        $r27 = r1.<android.os.Message: java.lang.Object obj>;

        $r26 = (android.view.inputmethod.InputMethodSession) $r27;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>($r26);

        return;

     label25:
        $i2 = r1.<android.os.Message: int arg1>;

        $r24 = r1.<android.os.Message: java.lang.Object obj>;

        $r25 = (android.os.ResultReceiver) $r24;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>($i2, $r25);

        return;

     label26:
        $i1 = r1.<android.os.Message: int arg1>;

        $r23 = r1.<android.os.Message: java.lang.Object obj>;

        $r22 = (android.os.ResultReceiver) $r23;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>($i1, $r22);

        return;

     label27:
        $r21 = r1.<android.os.Message: java.lang.Object obj>;

        $r20 = (android.view.inputmethod.InputMethodSubtype) $r21;

        interfaceinvoke r2.<android.view.inputmethod.InputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>($r20);

        return;

        catch java.lang.RuntimeException from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.view.inputmethod.InputMethod getInternalInputMethod()
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethod $r3;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r1 = r0.<android.inputmethodservice.IInputMethodWrapper: java.lang.ref.WeakReference mInputMethod>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (android.view.inputmethod.InputMethod) $r2;

        return $r3;
    }

    public void hideSoftInput(int, android.os.ResultReceiver)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        int i0;
        android.os.ResultReceiver r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(70, i0, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void restartInput(com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputContext r1;
        android.view.inputmethod.EditorInfo r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputContext;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(34, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void revokeSession(com.android.internal.view.IInputMethodSession)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputMethodSession r1;
        java.lang.ClassCastException r2, $r13;
        android.view.inputmethod.InputMethodSession r3;
        android.inputmethodservice.IInputMethodSessionWrapper $r4;
        com.android.internal.os.HandlerCaller $r5, $r6;
        android.os.Message $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r14, $r16;
        java.lang.String $r11, $r15;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputMethodSession;

     label1:
        $r4 = (android.inputmethodservice.IInputMethodSessionWrapper) r1;

        r3 = virtualinvoke $r4.<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>();

     label2:
        if r3 != null goto label5;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session is already finished: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r11);

     label4:
        return;

     label5:
        $r6 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r7 = virtualinvoke $r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(50, r3);

        virtualinvoke $r6.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r7);

     label6:
        return;

     label7:
        $r13 := @caughtexception;

        r2 = $r13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming session not of correct type: ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodWrapper", $r15, r2);

        return;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.ClassCastException from label3 to label4 with label7;
        catch java.lang.ClassCastException from label5 to label6 with label7;
    }

    public void setSessionEnabled(com.android.internal.view.IInputMethodSession, boolean)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputMethodSession r1;
        boolean z0;
        java.lang.ClassCastException r2, $r12;
        android.view.inputmethod.InputMethodSession r3;
        com.android.internal.os.HandlerCaller r4, r5;
        byte b0;
        android.inputmethodservice.IInputMethodSessionWrapper $r6;
        android.os.Message $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r13, $r14, $r15;
        java.lang.String $r10, $r16;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputMethodSession;

        z0 := @parameter1: boolean;

     label01:
        $r6 = (android.inputmethodservice.IInputMethodSessionWrapper) r1;

        r3 = virtualinvoke $r6.<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>();

     label02:
        if r3 != null goto label05;

     label03:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session is already finished: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodWrapper", $r10);

     label04:
        return;

     label05:
        r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r5 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

     label06:
        if z0 == 0 goto label10;

        b0 = 1;

     label07:
        $r7 = virtualinvoke r5.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(45, b0, r3);

        virtualinvoke r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r7);

     label08:
        return;

     label09:
        $r12 := @caughtexception;

        r2 = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming session not of correct type: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodWrapper", $r16, r2);

        return;

     label10:
        b0 = 0;

        goto label07;

        catch java.lang.ClassCastException from label01 to label02 with label09;
        catch java.lang.ClassCastException from label03 to label04 with label09;
        catch java.lang.ClassCastException from label05 to label06 with label09;
        catch java.lang.ClassCastException from label07 to label08 with label09;
    }

    public void showSoftInput(int, android.os.ResultReceiver)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        int i0;
        android.os.ResultReceiver r1;
        com.android.internal.os.HandlerCaller $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r4 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(60, i0, r1);

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r4);

        return;
    }

    public void startInput(com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.view.IInputContext r1;
        android.view.inputmethod.EditorInfo r2;
        com.android.internal.os.HandlerCaller $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        r1 := @parameter0: com.android.internal.view.IInputContext;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        $r4 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(32, r1, r2);

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r5);

        return;
    }

    public void unbindInput()
    {
        android.inputmethodservice.IInputMethodWrapper r0;
        com.android.internal.os.HandlerCaller $r1, $r2;
        android.os.Message $r3;

        r0 := @this: android.inputmethodservice.IInputMethodWrapper;

        $r2 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r1 = r0.<android.inputmethodservice.IInputMethodWrapper: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = virtualinvoke $r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(30);

        virtualinvoke $r2.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>($r3);

        return;
    }

    public static void <clinit>()
    {
        <android.inputmethodservice.IInputMethodWrapper: java.lang.String TAG> = "InputMethodWrapper";

        <android.inputmethodservice.IInputMethodWrapper: int DO_UNSET_INPUT_CONTEXT> = 30;

        <android.inputmethodservice.IInputMethodWrapper: int DO_START_INPUT> = 32;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SHOW_SOFT_INPUT> = 60;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SET_SESSION_ENABLED> = 45;

        <android.inputmethodservice.IInputMethodWrapper: int DO_SET_INPUT_CONTEXT> = 20;

        <android.inputmethodservice.IInputMethodWrapper: int DO_REVOKE_SESSION> = 50;

        <android.inputmethodservice.IInputMethodWrapper: int DO_RESTART_INPUT> = 34;

        <android.inputmethodservice.IInputMethodWrapper: int DO_HIDE_SOFT_INPUT> = 70;

        <android.inputmethodservice.IInputMethodWrapper: int DO_DUMP> = 1;

        <android.inputmethodservice.IInputMethodWrapper: int DO_CREATE_SESSION> = 40;

        <android.inputmethodservice.IInputMethodWrapper: int DO_CHANGE_INPUTMETHOD_SUBTYPE> = 80;

        <android.inputmethodservice.IInputMethodWrapper: int DO_ATTACH_TOKEN> = 10;

        return;
    }
}
