public final class android.net.http.HttpResponseCache extends java.net.ResponseCache implements java.io.Closeable
{
    private final com.android.okhttp.HttpResponseCache delegate;

    private void <init>(com.android.okhttp.HttpResponseCache)
    {
        android.net.http.HttpResponseCache r0;
        com.android.okhttp.HttpResponseCache r1;

        r0 := @this: android.net.http.HttpResponseCache;

        r1 := @parameter0: com.android.okhttp.HttpResponseCache;

        specialinvoke r0.<java.net.ResponseCache: void <init>()>();

        r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate> = r1;

        return;
    }

    public static android.net.http.HttpResponseCache getInstalled()
    {
        java.net.ResponseCache r0;
        boolean $z0;
        android.net.http.HttpResponseCache $r1;
        com.android.okhttp.HttpResponseCache $r2;

        r0 = staticinvoke <java.net.ResponseCache: java.net.ResponseCache getDefault()>();

        $z0 = r0 instanceof com.android.okhttp.HttpResponseCache;

        if $z0 == 0 goto label1;

        $r1 = new android.net.http.HttpResponseCache;

        $r2 = (com.android.okhttp.HttpResponseCache) r0;

        specialinvoke $r1.<android.net.http.HttpResponseCache: void <init>(com.android.okhttp.HttpResponseCache)>($r2);

        return $r1;

     label1:
        return null;
    }

    public static android.net.http.HttpResponseCache install(java.io.File, long) throws java.io.IOException
    {
        java.io.File r0, $r6;
        long l0, $l1;
        java.net.ResponseCache r1, r11;
        com.android.okhttp.HttpResponseCache r2, r3, r9;
        boolean $z0, $z1, $z2;
        byte $b2;
        android.net.http.HttpResponseCache r8, r10;

        r0 := @parameter0: java.io.File;

        l0 := @parameter1: long;

        r1 = staticinvoke <java.net.ResponseCache: java.net.ResponseCache getDefault()>();

        $z0 = r1 instanceof com.android.okhttp.HttpResponseCache;

        if $z0 == 0 goto label2;

        r3 = (com.android.okhttp.HttpResponseCache) r1;

        $r6 = virtualinvoke r3.<com.android.okhttp.HttpResponseCache: java.io.File getDirectory()>();

        $z1 = virtualinvoke $r6.<java.io.File: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $l1 = virtualinvoke r3.<com.android.okhttp.HttpResponseCache: long getMaxSize()>();

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label1;

        $z2 = virtualinvoke r3.<com.android.okhttp.HttpResponseCache: boolean isClosed()>();

        if $z2 != 0 goto label1;

        r8 = new android.net.http.HttpResponseCache;

        specialinvoke r8.<android.net.http.HttpResponseCache: void <init>(com.android.okhttp.HttpResponseCache)>(r3);

        return r8;

     label1:
        virtualinvoke r3.<com.android.okhttp.HttpResponseCache: void close()>();

     label2:
        r9 = new com.android.okhttp.HttpResponseCache;

        specialinvoke r9.<com.android.okhttp.HttpResponseCache: void <init>(java.io.File,long)>(r0, l0);

        r2 = r9;

        r11 = (java.net.ResponseCache) r2;

        staticinvoke <java.net.ResponseCache: void setDefault(java.net.ResponseCache)>(r11);

        r10 = new android.net.http.HttpResponseCache;

        specialinvoke r10.<android.net.http.HttpResponseCache: void <init>(com.android.okhttp.HttpResponseCache)>(r2);

        return r10;
    }

    public void close() throws java.io.IOException
    {
        android.net.http.HttpResponseCache r0;
        java.net.ResponseCache $r1;
        com.android.okhttp.HttpResponseCache $r2, $r3;

        r0 := @this: android.net.http.HttpResponseCache;

        $r1 = staticinvoke <java.net.ResponseCache: java.net.ResponseCache getDefault()>();

        $r2 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        if $r1 != $r2 goto label1;

        staticinvoke <java.net.ResponseCache: void setDefault(java.net.ResponseCache)>(null);

     label1:
        $r3 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        virtualinvoke $r3.<com.android.okhttp.HttpResponseCache: void close()>();

        return;
    }

    public void delete() throws java.io.IOException
    {
        android.net.http.HttpResponseCache r0;
        java.net.ResponseCache $r1;
        com.android.okhttp.HttpResponseCache $r2, $r3;

        r0 := @this: android.net.http.HttpResponseCache;

        $r1 = staticinvoke <java.net.ResponseCache: java.net.ResponseCache getDefault()>();

        $r2 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        if $r1 != $r2 goto label1;

        staticinvoke <java.net.ResponseCache: void setDefault(java.net.ResponseCache)>(null);

     label1:
        $r3 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        virtualinvoke $r3.<com.android.okhttp.HttpResponseCache: void delete()>();

        return;
    }

    public void flush()
    {
        android.net.http.HttpResponseCache r0;
        com.android.okhttp.HttpResponseCache $r2;
        java.io.IOException $r3;

        r0 := @this: android.net.http.HttpResponseCache;

     label1:
        $r2 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        virtualinvoke $r2.<com.android.okhttp.HttpResponseCache: void flush()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.net.CacheResponse get(java.net.URI, java.lang.String, java.util.Map) throws java.io.IOException
    {
        android.net.http.HttpResponseCache r0;
        java.net.URI r1;
        java.lang.String r2;
        java.util.Map r3;
        com.android.okhttp.HttpResponseCache $r4;
        java.net.CacheResponse $r5;

        r0 := @this: android.net.http.HttpResponseCache;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        $r4 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        $r5 = virtualinvoke $r4.<com.android.okhttp.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>(r1, r2, r3);

        return $r5;
    }

    public int getHitCount()
    {
        android.net.http.HttpResponseCache r0;
        com.android.okhttp.HttpResponseCache $r1;
        int $i0;

        r0 := @this: android.net.http.HttpResponseCache;

        $r1 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.HttpResponseCache: int getHitCount()>();

        return $i0;
    }

    public int getNetworkCount()
    {
        android.net.http.HttpResponseCache r0;
        com.android.okhttp.HttpResponseCache $r1;
        int $i0;

        r0 := @this: android.net.http.HttpResponseCache;

        $r1 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.HttpResponseCache: int getNetworkCount()>();

        return $i0;
    }

    public int getRequestCount()
    {
        android.net.http.HttpResponseCache r0;
        com.android.okhttp.HttpResponseCache $r1;
        int $i0;

        r0 := @this: android.net.http.HttpResponseCache;

        $r1 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.HttpResponseCache: int getRequestCount()>();

        return $i0;
    }

    public long maxSize()
    {
        android.net.http.HttpResponseCache r0;
        com.android.okhttp.HttpResponseCache $r1;
        long $l0;

        r0 := @this: android.net.http.HttpResponseCache;

        $r1 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        $l0 = virtualinvoke $r1.<com.android.okhttp.HttpResponseCache: long getMaxSize()>();

        return $l0;
    }

    public java.net.CacheRequest put(java.net.URI, java.net.URLConnection) throws java.io.IOException
    {
        android.net.http.HttpResponseCache r0;
        java.net.URI r1;
        java.net.URLConnection r2;
        com.android.okhttp.HttpResponseCache $r3;
        java.net.CacheRequest $r4;

        r0 := @this: android.net.http.HttpResponseCache;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.net.URLConnection;

        $r3 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        $r4 = virtualinvoke $r3.<com.android.okhttp.HttpResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>(r1, r2);

        return $r4;
    }

    public long size()
    {
        android.net.http.HttpResponseCache r0;
        com.android.okhttp.HttpResponseCache $r1;
        long $l0;

        r0 := @this: android.net.http.HttpResponseCache;

        $r1 = r0.<android.net.http.HttpResponseCache: com.android.okhttp.HttpResponseCache delegate>;

        $l0 = virtualinvoke $r1.<com.android.okhttp.HttpResponseCache: long getSize()>();

        return $l0;
    }
}
