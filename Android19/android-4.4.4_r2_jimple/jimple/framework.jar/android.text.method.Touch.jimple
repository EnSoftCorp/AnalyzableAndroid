public class android.text.method.Touch extends java.lang.Object
{

    private void <init>()
    {
        android.text.method.Touch r0;

        r0 := @this: android.text.method.Touch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getInitialScrollX(android.widget.TextView, android.text.Spannable)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.text.method.Touch$DragState[] r2;
        int $i0, $i1, $i2;
        java.lang.Object[] $r3;
        android.text.method.Touch$DragState $r4;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.text.Spannable;

        $i0 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r3 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/method/Touch$DragState");

        r2 = (android.text.method.Touch$DragState[]) $r3;

        $i1 = lengthof r2;

        if $i1 <= 0 goto label1;

        $r4 = r2[0];

        $i2 = $r4.<android.text.method.Touch$DragState: int mScrollX>;

        return $i2;

     label1:
        return -1;
    }

    public static int getInitialScrollY(android.widget.TextView, android.text.Spannable)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.text.method.Touch$DragState[] r2;
        int $i0, $i1, $i2;
        java.lang.Object[] $r3;
        android.text.method.Touch$DragState $r4;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.text.Spannable;

        $i0 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r3 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "android/text/method/Touch$DragState");

        r2 = (android.text.method.Touch$DragState[]) $r3;

        $i1 = lengthof r2;

        if $i1 <= 0 goto label1;

        $r4 = r2[0];

        $i2 = $r4.<android.text.method.Touch$DragState: int mScrollY>;

        return $i2;

     label1:
        return -1;
    }

    public static boolean onTouchEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.widget.TextView r0;
        android.text.Spannable r1;
        android.view.MotionEvent r2;
        android.text.method.Touch$DragState[] r3, r5, r6;
        boolean z0, $z1, $z2, $z3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i31, $i32, $i33, $i34, $i35, $i36, $i37;
        android.text.Layout r4;
        java.lang.Object[] $r7, $r22, $r24;
        android.text.method.Touch$DragState $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r21, $r23, $r25, $r26, $r27;
        android.view.ViewConfiguration $r17;
        android.content.Context $r19;
        byte $b29, $b30;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.text.Spannable;

        r2 := @parameter2: android.view.MotionEvent;

        $i8 = virtualinvoke r2.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i8)
        {
            case 0: goto label02;
            case 1: goto label05;
            case 2: goto label09;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        $i32 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r24 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i32, class "android/text/method/Touch$DragState");

        r6 = (android.text.method.Touch$DragState[]) $r24;

        i9 = 0;

     label03:
        $i37 = lengthof r6;

        if i9 >= $i37 goto label04;

        $r26 = r6[i9];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>($r26);

        i9 = i9 + 1;

        goto label03;

     label04:
        $r27 = new android.text.method.Touch$DragState;

        $f22 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        $f23 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $i35 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        $i36 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        specialinvoke $r27.<android.text.method.Touch$DragState: void <init>(float,float,int,int)>($f22, $f23, $i35, $i36);

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r27, 0, 0, 17);

        return 1;

     label05:
        $i31 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r22 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i31, class "android/text/method/Touch$DragState");

        r5 = (android.text.method.Touch$DragState[]) $r22;

        i7 = 0;

     label06:
        $i34 = lengthof r5;

        if i7 >= $i34 goto label07;

        $r23 = r5[i7];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>($r23);

        i7 = i7 + 1;

        goto label06;

     label07:
        $i33 = lengthof r5;

        if $i33 <= 0 goto label08;

        $r25 = r5[0];

        $z3 = $r25.<android.text.method.Touch$DragState: boolean mUsed>;

        if $z3 == 0 goto label08;

        return 1;

     label08:
        return 0;

     label09:
        $i10 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r7 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i10, class "android/text/method/Touch$DragState");

        r3 = (android.text.method.Touch$DragState[]) $r7;

        $i11 = lengthof r3;

        if $i11 <= 0 goto label01;

        $r8 = r3[0];

        $z1 = $r8.<android.text.method.Touch$DragState: boolean mFarEnough>;

        if $z1 != 0 goto label11;

        $r19 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r17 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r19);

        i6 = virtualinvoke $r17.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $f11 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        $r18 = r3[0];

        $f14 = $r18.<android.text.method.Touch$DragState: float mX>;

        $f15 = $f11 - $f14;

        $f16 = staticinvoke <java.lang.Math: float abs(float)>($f15);

        $f17 = (float) i6;

        $b29 = $f16 cmpl $f17;

        if $b29 >= 0 goto label10;

        $f13 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $r21 = r3[0];

        $f19 = $r21.<android.text.method.Touch$DragState: float mY>;

        $f18 = $f13 - $f19;

        $f21 = staticinvoke <java.lang.Math: float abs(float)>($f18);

        $f20 = (float) i6;

        $b30 = $f21 cmpl $f20;

        if $b30 < 0 goto label11;

     label10:
        $r20 = r3[0];

        $r20.<android.text.method.Touch$DragState: boolean mFarEnough> = 1;

     label11:
        $r9 = r3[0];

        $z2 = $r9.<android.text.method.Touch$DragState: boolean mFarEnough>;

        if $z2 == 0 goto label01;

        $r10 = r3[0];

        $r10.<android.text.method.Touch$DragState: boolean mUsed> = 1;

        $i13 = virtualinvoke r2.<android.view.MotionEvent: int getMetaState()>();

        $i12 = 1 & $i13;

        if $i12 != 0 goto label12;

        $i27 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r1, 1);

        if $i27 == 1 goto label12;

        $i28 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r1, 2048);

        if $i28 == 0 goto label17;

     label12:
        z0 = 1;

     label13:
        if z0 == 0 goto label18;

        $f8 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        $r16 = r3[0];

        $f10 = $r16.<android.text.method.Touch$DragState: float mX>;

        f0 = $f8 - $f10;

        $f9 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $r15 = r3[0];

        $f12 = $r15.<android.text.method.Touch$DragState: float mY>;

        f1 = $f9 - $f12;

     label14:
        $r13 = r3[0];

        $f4 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        $r13.<android.text.method.Touch$DragState: float mX> = $f4;

        $r14 = r3[0];

        $f7 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        $r14.<android.text.method.Touch$DragState: float mY> = $f7;

        $i14 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        $i15 = (int) f0;

        i0 = $i14 + $i15;

        $i18 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        $i19 = (int) f1;

        i1 = $i18 + $i19;

        $i16 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        $i17 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingBottom()>();

        i2 = $i16 + $i17;

        r4 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        $i22 = virtualinvoke r4.<android.text.Layout: int getHeight()>();

        $i21 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i20 = $i21 - i2;

        $i24 = $i22 - $i20;

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i24);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i23, 0);

        i4 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        i5 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        staticinvoke <android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>(r0, r4, i0, i3);

        $i26 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        if i4 != $i26 goto label15;

        $i25 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        if i5 == $i25 goto label16;

     label15:
        virtualinvoke r0.<android.widget.TextView: void cancelLongPress()>();

     label16:
        return 1;

     label17:
        z0 = 0;

        goto label13;

     label18:
        $r12 = r3[0];

        $f3 = $r12.<android.text.method.Touch$DragState: float mX>;

        $f2 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        f0 = $f3 - $f2;

        $r11 = r3[0];

        $f5 = $r11.<android.text.method.Touch$DragState: float mY>;

        $f6 = virtualinvoke r2.<android.view.MotionEvent: float getY()>();

        f1 = $f5 - $f6;

        goto label14;
    }

    public static void scrollTo(android.widget.TextView, android.text.Layout, int, int)
    {
        android.widget.TextView r0;
        android.text.Layout r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        android.text.Layout$Alignment r2, $r3, $r4, $r5, $r6;
        boolean z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: android.text.Layout;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i13 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingLeft()>();

        $i12 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingRight()>();

        i2 = $i13 + $i12;

        $i14 = virtualinvoke r0.<android.widget.TextView: int getWidth()>();

        i3 = $i14 - i2;

        i4 = virtualinvoke r1.<android.text.Layout: int getLineForVertical(int)>(i1);

        r2 = virtualinvoke r1.<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>(i4);

        $i15 = virtualinvoke r1.<android.text.Layout: int getParagraphDirection(int)>(i4);

        if $i15 <= 0 goto label03;

        z0 = 1;

     label01:
        $z1 = virtualinvoke r0.<android.widget.TextView: boolean getHorizontallyScrolling()>();

        if $z1 == 0 goto label04;

        $i23 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        $i20 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingBottom()>();

        i9 = $i23 + $i20;

        $i21 = virtualinvoke r0.<android.widget.TextView: int getHeight()>();

        $i24 = i1 + $i21;

        $i25 = $i24 - i9;

        i10 = virtualinvoke r1.<android.text.Layout: int getLineForVertical(int)>($i25);

        i5 = 2147483647;

        i6 = 0;

        i11 = i4;

     label02:
        if i11 > i10 goto label05;

        $f0 = (float) i5;

        $f3 = virtualinvoke r1.<android.text.Layout: float getLineLeft(int)>(i11);

        $f4 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f3);

        i5 = (int) $f4;

        $f1 = (float) i6;

        $f2 = virtualinvoke r1.<android.text.Layout: float getLineRight(int)>(i11);

        $f5 = staticinvoke <java.lang.Math: float max(float,float)>($f1, $f2);

        i6 = (int) $f5;

        i11 = i11 + 1;

        goto label02;

     label03:
        z0 = 0;

        goto label01;

     label04:
        i5 = 0;

        i6 = i3;

     label05:
        i7 = i6 - i5;

        if i7 >= i3 goto label12;

        $r4 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_CENTER>;

        if r2 != $r4 goto label07;

        $i19 = i3 - i7;

        $i22 = $i19 / 2;

        i8 = i5 - $i22;

     label06:
        virtualinvoke r0.<android.widget.TextView: void scrollTo(int,int)>(i8, i1);

        return;

     label07:
        if z0 == 0 goto label08;

        $r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_OPPOSITE>;

        if r2 == $r6 goto label10;

     label08:
        if z0 != 0 goto label09;

        $r5 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        if r2 == $r5 goto label10;

     label09:
        $r3 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_RIGHT>;

        if r2 != $r3 goto label11;

     label10:
        $i18 = i3 - i7;

        i8 = i5 - $i18;

        goto label06;

     label11:
        i8 = i5;

        goto label06;

     label12:
        $i16 = i6 - i3;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i16);

        i8 = staticinvoke <java.lang.Math: int max(int,int)>($i17, i5);

        goto label06;
    }
}
