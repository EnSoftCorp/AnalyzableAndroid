public class android.filterfw.format.ImageFormat extends java.lang.Object
{
    public static final int COLORSPACE_GRAY;
    public static final java.lang.String COLORSPACE_KEY;
    public static final int COLORSPACE_RGB;
    public static final int COLORSPACE_RGBA;
    public static final int COLORSPACE_YUV;

    public void <init>()
    {
        android.filterfw.format.ImageFormat r0;

        r0 := @this: android.filterfw.format.ImageFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int bytesPerSampleForColorspace(int)
    {
        int i0;
        byte b1;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        b1 = 3;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label3;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown colorspace id ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label2:
        b1 = 1;

     label3:
        return b1;

     label4:
        return 4;
    }

    public static android.filterfw.core.MutableFrameFormat create(int)
    {
        int i0, $i1;
        android.filterfw.core.MutableFrameFormat $r0;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.filterfw.format.ImageFormat: int bytesPerSampleForColorspace(int)>(i0);

        $r0 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int,int)>(0, 0, i0, $i1, 0);

        return $r0;
    }

    public static android.filterfw.core.MutableFrameFormat create(int, int)
    {
        int i0, i1, $i2;
        android.filterfw.core.MutableFrameFormat $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.filterfw.format.ImageFormat: int bytesPerSampleForColorspace(int)>(i0);

        $r0 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int,int)>(0, 0, i0, $i2, i1);

        return $r0;
    }

    public static android.filterfw.core.MutableFrameFormat create(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4;
        android.filterfw.core.MutableFrameFormat $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = staticinvoke <android.filterfw.format.ImageFormat: int bytesPerSampleForColorspace(int)>(i2);

        $r0 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int,int)>(i0, i1, i2, $i4, i3);

        return $r0;
    }

    public static android.filterfw.core.MutableFrameFormat create(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4;
        android.filterfw.core.MutableFrameFormat r0, $r1;
        java.lang.Integer $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = new android.filterfw.core.MutableFrameFormat;

        specialinvoke $r1.<android.filterfw.core.MutableFrameFormat: void <init>(int,int)>(2, i4);

        r0 = $r1;

        virtualinvoke r0.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>(i0, i1);

        virtualinvoke r0.<android.filterfw.core.MutableFrameFormat: void setBytesPerSample(int)>(i3);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r0.<android.filterfw.core.MutableFrameFormat: void setMetaValue(java.lang.String,java.lang.Object)>("colorspace", $r2);

        if i4 != 1 goto label1;

        virtualinvoke r0.<android.filterfw.core.MutableFrameFormat: void setObjectClass(java.lang.Class)>(class "android/graphics/Bitmap");

     label1:
        return r0;
    }

    public static void <clinit>()
    {
        <android.filterfw.format.ImageFormat: int COLORSPACE_YUV> = 4;

        <android.filterfw.format.ImageFormat: int COLORSPACE_RGBA> = 3;

        <android.filterfw.format.ImageFormat: int COLORSPACE_RGB> = 2;

        <android.filterfw.format.ImageFormat: java.lang.String COLORSPACE_KEY> = "colorspace";

        <android.filterfw.format.ImageFormat: int COLORSPACE_GRAY> = 1;

        return;
    }
}
