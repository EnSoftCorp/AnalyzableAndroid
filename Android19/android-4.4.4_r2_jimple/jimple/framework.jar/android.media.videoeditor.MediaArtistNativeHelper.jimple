class android.media.videoeditor.MediaArtistNativeHelper extends java.lang.Object
{
    private static final java.lang.String AUDIO_TRACK_PCM_FILE;
    private static final int MAX_THUMBNAIL_PERMITTED;
    public static final int PROCESSING_AUDIO_PCM;
    public static final int PROCESSING_EXPORT;
    public static final int PROCESSING_INTERMEDIATE1;
    public static final int PROCESSING_INTERMEDIATE2;
    public static final int PROCESSING_INTERMEDIATE3;
    public static final int PROCESSING_KENBURNS;
    public static final int PROCESSING_NONE;
    public static final int PROCESSING_TRANSITION;
    private static final java.lang.String TAG;
    public static final int TASK_ENCODING;
    public static final int TASK_LOADING_SETTINGS;
    private static final android.graphics.Paint sResizePaint;
    private android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings;
    private android.media.videoeditor.AudioTrack mAudioTrack;
    private java.lang.String mAudioTrackPCMFilePath;
    private android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties;
    private boolean mErrorFlagSet;
    private int mExportAudioCodec;
    private java.lang.String mExportFilename;
    private android.media.videoeditor.VideoEditor$ExportProgressListener mExportProgressListener;
    private int mExportVideoCodec;
    private android.media.videoeditor.ExtractAudioWaveformProgressListener mExtractAudioWaveformProgressListener;
    private boolean mInvalidatePreviewArray;
    private boolean mIsFirstProgress;
    private final java.util.concurrent.Semaphore mLock;
    private int mManualEditContext;
    private android.media.videoeditor.VideoEditor$MediaProcessingProgressListener mMediaProcessingProgressListener;
    private java.lang.String mOutputFilename;
    private android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings;
    private long mPreviewProgress;
    private android.media.videoeditor.VideoEditor$PreviewProgressListener mPreviewProgressListener;
    private java.lang.Object mProcessingObject;
    private int mProcessingState;
    private int mProgressToApp;
    private final java.lang.String mProjectPath;
    private boolean mRegenerateAudio;
    private java.lang.String mRenderPreviewOverlayFile;
    private int mRenderPreviewRenderingMode;
    private android.media.videoeditor.MediaArtistNativeHelper$EditSettings mStoryBoardSettings;
    private int mTotalClips;
    private final android.media.videoeditor.VideoEditor mVideoEditor;

    static void <clinit>()
    {
        android.graphics.Paint $r0;

        <android.media.videoeditor.MediaArtistNativeHelper: int TASK_LOADING_SETTINGS> = 1;

        <android.media.videoeditor.MediaArtistNativeHelper: int TASK_ENCODING> = 2;

        <android.media.videoeditor.MediaArtistNativeHelper: java.lang.String TAG> = "MediaArtistNativeHelper";

        <android.media.videoeditor.MediaArtistNativeHelper: int PROCESSING_TRANSITION> = 2;

        <android.media.videoeditor.MediaArtistNativeHelper: int PROCESSING_NONE> = 0;

        <android.media.videoeditor.MediaArtistNativeHelper: int PROCESSING_KENBURNS> = 3;

        <android.media.videoeditor.MediaArtistNativeHelper: int PROCESSING_INTERMEDIATE3> = 13;

        <android.media.videoeditor.MediaArtistNativeHelper: int PROCESSING_INTERMEDIATE2> = 12;

        <android.media.videoeditor.MediaArtistNativeHelper: int PROCESSING_INTERMEDIATE1> = 11;

        <android.media.videoeditor.MediaArtistNativeHelper: int PROCESSING_EXPORT> = 20;

        <android.media.videoeditor.MediaArtistNativeHelper: int PROCESSING_AUDIO_PCM> = 1;

        <android.media.videoeditor.MediaArtistNativeHelper: int MAX_THUMBNAIL_PERMITTED> = 8;

        <android.media.videoeditor.MediaArtistNativeHelper: java.lang.String AUDIO_TRACK_PCM_FILE> = "AudioPcm.pcm";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("videoeditor_jni");

        $r0 = new android.graphics.Paint;

        specialinvoke $r0.<android.graphics.Paint: void <init>(int)>(2);

        <android.media.videoeditor.MediaArtistNativeHelper: android.graphics.Paint sResizePaint> = $r0;

        return;
    }

    public void <init>(java.lang.String, java.util.concurrent.Semaphore, android.media.videoeditor.VideoEditor)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String r1, $r6;
        java.util.concurrent.Semaphore r2;
        android.media.videoeditor.VideoEditor r3;
        java.lang.IllegalArgumentException $r4;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings $r5, $r7;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.concurrent.Semaphore;

        r3 := @parameter2: android.media.videoeditor.VideoEditor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties> = null;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings> = null;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack> = null;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mInvalidatePreviewArray> = 1;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mRegenerateAudio> = 1;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mExportFilename> = null;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mExportVideoCodec> = 0;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mExportAudioCodec> = 0;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips> = 0;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mErrorFlagSet> = 0;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath> = r1;

        if r3 == null goto label2;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor> = r3;

        $r5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mStoryBoardSettings>;

        if $r5 != null goto label1;

        $r7 = new android.media.videoeditor.MediaArtistNativeHelper$EditSettings;

        specialinvoke $r7.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: void <init>()>();

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mStoryBoardSettings> = $r7;

     label1:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.util.concurrent.Semaphore mLock> = r2;

        $r6 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void _init(java.lang.String,java.lang.String)>($r6, "null");

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath> = null;

        return;

     label2:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor> = null;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("video editor object is null");

        throw $r4;
    }

    private native void _init(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.RuntimeException;

    static android.graphics.Paint access$000()
    {
        android.graphics.Paint $r0;

        $r0 = <android.media.videoeditor.MediaArtistNativeHelper: android.graphics.Paint sResizePaint>;

        return $r0;
    }

    private void adjustMediaItemBoundary(android.media.videoeditor.MediaArtistNativeHelper$ClipSettings, android.media.videoeditor.MediaArtistNativeHelper$Properties, android.media.videoeditor.MediaItem)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings r1;
        android.media.videoeditor.MediaArtistNativeHelper$Properties r2;
        android.media.videoeditor.MediaItem r3;
        android.media.videoeditor.Transition $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i14, $i16, $i21, $i25, $i30, $i31, $i32, $i38;
        byte $b11, $b18, $b27, $b29;
        long $l12, $l13, $l15, $l17, $l19, $l20, $l22, $l23, $l24, $l26, $l28, $l33, $l34, $l35, $l36, $l37;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings;

        r2 := @parameter1: android.media.videoeditor.MediaArtistNativeHelper$Properties;

        r3 := @parameter2: android.media.videoeditor.MediaItem;

        $r4 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if $r4 == null goto label4;

        $r13 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        $l23 = virtualinvoke $r13.<android.media.videoeditor.Transition: long getDuration()>();

        $b27 = $l23 cmp 0L;

        if $b27 <= 0 goto label4;

        $r15 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if $r15 == null goto label4;

        $r14 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l26 = virtualinvoke $r14.<android.media.videoeditor.Transition: long getDuration()>();

        $b29 = $l26 cmp 0L;

        if $b29 <= 0 goto label4;

        $i30 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime>;

        $l28 = (long) $i30;

        $r16 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        $l34 = virtualinvoke $r16.<android.media.videoeditor.Transition: long getDuration()>();

        $l33 = $l28 + $l34;

        $i32 = (int) $l33;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime> = $i32;

        $i31 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime>;

        $l37 = (long) $i31;

        $r17 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l36 = virtualinvoke $r17.<android.media.videoeditor.Transition: long getDuration()>();

        $l35 = $l37 - $l36;

        $i38 = (int) $l35;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime> = $i38;

     label1:
        $i1 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime>;

        $i0 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime>;

        $i2 = $i1 - $i0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int duration> = $i2;

        $i3 = r2.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoDuration>;

        if $i3 == 0 goto label2;

        $i10 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime>;

        $i8 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime>;

        $i9 = $i10 - $i8;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoDuration> = $i9;

     label2:
        $i4 = r2.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioDuration>;

        if $i4 == 0 goto label3;

        $i6 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime>;

        $i5 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime>;

        $i7 = $i6 - $i5;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioDuration> = $i7;

     label3:
        return;

     label4:
        $r5 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if $r5 != null goto label5;

        $r11 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if $r11 == null goto label5;

        $r10 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l19 = virtualinvoke $r10.<android.media.videoeditor.Transition: long getDuration()>();

        $b18 = $l19 cmp 0L;

        if $b18 <= 0 goto label5;

        $i21 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime>;

        $l22 = (long) $i21;

        $r12 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l20 = virtualinvoke $r12.<android.media.videoeditor.Transition: long getDuration()>();

        $l24 = $l22 - $l20;

        $i25 = (int) $l24;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime> = $i25;

        goto label1;

     label5:
        $r6 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if $r6 != null goto label1;

        $r8 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if $r8 == null goto label1;

        $r7 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        $l12 = virtualinvoke $r7.<android.media.videoeditor.Transition: long getDuration()>();

        $b11 = $l12 cmp 0L;

        if $b11 <= 0 goto label1;

        $i14 = r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime>;

        $l13 = (long) $i14;

        $r9 = virtualinvoke r3.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        $l15 = virtualinvoke $r9.<android.media.videoeditor.Transition: long getDuration()>();

        $l17 = $l13 + $l15;

        $i16 = (int) $l17;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime> = $i16;

        goto label1;
    }

    private void adjustVolume(android.media.videoeditor.MediaItem, android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaItem r1;
        android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties r2, $r3, $r7, $r10;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        android.media.videoeditor.MediaArtistNativeHelper$Properties[] $r4, $r8, $r11;
        android.media.videoeditor.MediaArtistNativeHelper$Properties $r5, $r9, $r12;
        android.media.videoeditor.MediaVideoItem $r6, $r13;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        r2 := @parameter1: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties;

        i0 := @parameter2: int;

        $z0 = r1 instanceof android.media.videoeditor.MediaVideoItem;

        if $z0 == 0 goto label3;

        $r6 = (android.media.videoeditor.MediaVideoItem) r1;

        $z2 = virtualinvoke $r6.<android.media.videoeditor.MediaVideoItem: boolean isMuted()>();

        if $z2 != 0 goto label2;

        $r10 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r11 = $r10.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r12 = $r11[i0];

        $r13 = (android.media.videoeditor.MediaVideoItem) r1;

        $i1 = virtualinvoke $r13.<android.media.videoeditor.MediaVideoItem: int getVolume()>();

        $r12.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioVolumeValue> = $i1;

     label1:
        return;

     label2:
        $r7 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r8 = $r7.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r9 = $r8[i0];

        $r9.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioVolumeValue> = 0;

        return;

     label3:
        $z1 = r1 instanceof android.media.videoeditor.MediaImageItem;

        if $z1 == 0 goto label1;

        $r3 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r4 = $r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r5 = $r4[i0];

        $r5.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioVolumeValue> = 0;

        return;
    }

    private void checkOddSizeImage(android.media.videoeditor.MediaItem, android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaItem r1;
        android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties r2, $r3, $r6, $r9, $r13;
        int i0, i1, i2, $i3, $i4;
        boolean $z0;
        android.media.videoeditor.MediaArtistNativeHelper$Properties[] $r4, $r7, $r11, $r12;
        android.media.videoeditor.MediaArtistNativeHelper$Properties $r5, $r8, $r10, $r14;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        r2 := @parameter1: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties;

        i0 := @parameter2: int;

        $z0 = r1 instanceof android.media.videoeditor.MediaImageItem;

        if $z0 == 0 goto label3;

        $r3 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r4 = $r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r5 = $r4[i0];

        i1 = $r5.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int width>;

        $r6 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r7 = $r6.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r8 = $r7[i0];

        i2 = $r8.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int height>;

        $i3 = i1 % 2;

        if $i3 == 0 goto label1;

        i1 = i1 + -1;

     label1:
        $i4 = i2 % 2;

        if $i4 == 0 goto label2;

        i2 = i2 + -1;

     label2:
        $r9 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r11 = $r9.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r10 = $r11[i0];

        $r10.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int width> = i1;

        $r13 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r12 = $r13.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r14 = $r12[i0];

        $r14.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int height> = i2;

     label3:
        return;
    }

    private int findVideoBitrate(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label4;
            case 9: goto label4;
            case 10: goto label5;
            case 11: goto label5;
            case 12: goto label5;
            default: goto label1;
        };

     label1:
        return 8000000;

     label2:
        return 128000;

     label3:
        return 384000;

     label4:
        return 2000000;

     label5:
        return 5000000;
    }

    private int findVideoResolution(int, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.util.Pair[] r1;
        android.util.Pair r2;
        android.media.videoeditor.VideoEditor $r3, $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = -1;

        tableswitch(i0)
        {
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label08;
            case 4: goto label10;
            case 5: goto label11;
            default: goto label01;
        };

     label01:
        if i2 != -1 goto label02;

        $r3 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i3 = interfaceinvoke $r3.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        r1 = staticinvoke <android.media.videoeditor.MediaProperties: android.util.Pair[] getSupportedResolutions(int)>($i3);

        $i4 = lengthof r1;

        $i5 = -1 + $i4;

        r2 = r1[$i5];

        $r4 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i6 = interfaceinvoke $r4.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $r5 = r2.<android.util.Pair: java.lang.Object second>;

        $r6 = (java.lang.Integer) $r5;

        $i7 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        i2 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i6, $i7);

     label02:
        return i2;

     label03:
        if i1 != 480 goto label04;

        i2 = 7;

        goto label01;

     label04:
        if i1 != 720 goto label01;

        i2 = 11;

        goto label01;

     label05:
        if i1 != 480 goto label06;

        i2 = 9;

        goto label01;

     label06:
        if i1 != 720 goto label07;

        i2 = 10;

        goto label01;

     label07:
        if i1 != 1080 goto label01;

        i2 = 13;

        goto label01;

     label08:
        if i1 != 480 goto label09;

        i2 = 5;

        goto label01;

     label09:
        if i1 != 720 goto label01;

        i2 = 12;

        goto label01;

     label10:
        if i1 != 480 goto label01;

        i2 = 6;

        goto label01;

     label11:
        if i1 != 144 goto label12;

        i2 = 2;

        goto label01;

     label12:
        if i1 != 288 goto label01;

        i2 = 4;

        goto label01;
    }

    private void generateTransition(android.media.videoeditor.Transition, android.media.videoeditor.MediaArtistNativeHelper$EditSettings, android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.Transition r1;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings r2;
        android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties r3;
        int i0, $i1, $i4, $i5, $i6, $i7, $i9;
        boolean $z0;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings $r5, $r8, $r11, $r13, $r14, $r16;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] $r6, $r7, $r10, $r12, $r15, $r17;
        java.lang.String $r9, $r18;
        long $l2, $l3, $l8, $l10;
        android.media.videoeditor.MediaArtistNativeHelper$Properties[] $r19, $r20, $r22, $r24, $r28, $r29, $r30, $r32;
        android.media.videoeditor.MediaArtistNativeHelper$Properties $r21, $r23, $r25, $r26, $r27, $r31, $r33, $r35;
        java.lang.Exception $r34;
        java.lang.IllegalArgumentException $r36;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.Transition;

        r2 := @parameter1: android.media.videoeditor.MediaArtistNativeHelper$EditSettings;

        r3 := @parameter2: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties;

        i0 := @parameter3: int;

        $z0 = virtualinvoke r1.<android.media.videoeditor.Transition: boolean isGenerated()>();

        if $z0 != 0 goto label1;

        virtualinvoke r1.<android.media.videoeditor.Transition: void generate()>();

     label1:
        $r6 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r5 = new android.media.videoeditor.MediaArtistNativeHelper$ClipSettings;

        specialinvoke $r5.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: void <init>()>();

        $r6[i0] = $r5;

        $r7 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r8 = $r7[i0];

        $r9 = virtualinvoke r1.<android.media.videoeditor.Transition: java.lang.String getFilename()>();

        $r8.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipPath> = $r9;

        $r10 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r11 = $r10[i0];

        $r11.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int fileType> = 0;

        $r12 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r13 = $r12[i0];

        $r13.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime> = 0;

        $r15 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r14 = $r15[i0];

        $l2 = virtualinvoke r1.<android.media.videoeditor.Transition: long getDuration()>();

        $i1 = (int) $l2;

        $r14.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime> = $i1;

        $r17 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r16 = $r17[i0];

        $r16.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int mediaRendering> = 2;

     label2:
        $r19 = r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r18 = virtualinvoke r1.<android.media.videoeditor.Transition: java.lang.String getFilename()>();

        $r21 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$Properties getMediaProperties(java.lang.String)>($r18);

        $r19[i0] = $r21;

     label3:
        $r20 = r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r23 = $r20[i0];

        $r23.<android.media.videoeditor.MediaArtistNativeHelper$Properties: java.lang.String Id> = null;

        $r22 = r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r25 = $r22[i0];

        $r25.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioVolumeValue> = 100;

        $r24 = r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r26 = $r24[i0];

        $l3 = virtualinvoke r1.<android.media.videoeditor.Transition: long getDuration()>();

        $i5 = (int) $l3;

        $r26.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int duration> = $i5;

        $r28 = r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r27 = $r28[i0];

        $i4 = $r27.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoDuration>;

        if $i4 == 0 goto label4;

        $r32 = r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r35 = $r32[i0];

        $l10 = virtualinvoke r1.<android.media.videoeditor.Transition: long getDuration()>();

        $i9 = (int) $l10;

        $r35.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoDuration> = $i9;

     label4:
        $r30 = r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r31 = $r30[i0];

        $i6 = $r31.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioDuration>;

        if $i6 == 0 goto label5;

        $r29 = r3.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r33 = $r29[i0];

        $l8 = virtualinvoke r1.<android.media.videoeditor.Transition: long getDuration()>();

        $i7 = (int) $l8;

        $r33.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioDuration> = $i7;

     label5:
        return;

     label6:
        $r34 := @caughtexception;

        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported file or file not found");

        throw $r36;

        catch java.lang.Exception from label2 to label3 with label6;
    }

    private int getEffectColorType(android.media.videoeditor.EffectColor)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.EffectColor r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.EffectColor;

        $i0 = virtualinvoke r1.<android.media.videoeditor.EffectColor: int getType()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label8;
            case 5: goto label9;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        $i1 = virtualinvoke r1.<android.media.videoeditor.EffectColor: int getColor()>();

        if $i1 != 65280 goto label3;

        return 259;

     label3:
        $i2 = virtualinvoke r1.<android.media.videoeditor.EffectColor: int getColor()>();

        if $i2 != 16737996 goto label4;

        return 258;

     label4:
        $i3 = virtualinvoke r1.<android.media.videoeditor.EffectColor: int getColor()>();

        if $i3 != 8355711 goto label5;

        return 257;

     label5:
        return 267;

     label6:
        return 268;

     label7:
        return 260;

     label8:
        return 261;

     label9:
        return 266;
    }

    private int getTotalEffects(java.util.List)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.util.List r1, $r6, $r7, $r8;
        int i0, $i1, $i2, $i3;
        java.util.Iterator r2, r4;
        android.media.videoeditor.MediaItem r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5, $r9;
        android.media.videoeditor.Effect $r10;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.util.List;

        i0 = 0;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.videoeditor.MediaItem) $r5;

        $r6 = virtualinvoke r3.<android.media.videoeditor.MediaItem: java.util.List getAllEffects()>();

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i2 = i0 + $i1;

        $r7 = virtualinvoke r3.<android.media.videoeditor.MediaItem: java.util.List getAllOverlays()>();

        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        i0 = $i2 + $i3;

        $r8 = virtualinvoke r3.<android.media.videoeditor.MediaItem: java.util.List getAllEffects()>();

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label1;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.media.videoeditor.Effect) $r9;

        $z2 = $r10 instanceof android.media.videoeditor.EffectKenBurns;

        if $z2 == 0 goto label2;

        i0 = i0 + -1;

        goto label2;

     label3:
        return i0;
    }

    private int getTransitionResolution(android.media.videoeditor.MediaItem, android.media.videoeditor.MediaItem)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaItem r1, r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7;
        android.media.videoeditor.VideoEditor $r3, $r5, $r7, $r8;
        android.media.videoeditor.MediaImageItem $r4, $r6, $r9, $r10;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        r2 := @parameter1: android.media.videoeditor.MediaItem;

        if r1 == null goto label07;

        if r2 == null goto label07;

        $z7 = r1 instanceof android.media.videoeditor.MediaVideoItem;

        if $z7 == 0 goto label04;

        i3 = virtualinvoke r1.<android.media.videoeditor.MediaItem: int getHeight()>();

     label01:
        $z6 = r2 instanceof android.media.videoeditor.MediaVideoItem;

        if $z6 == 0 goto label05;

        i4 = virtualinvoke r2.<android.media.videoeditor.MediaItem: int getHeight()>();

     label02:
        if i3 <= i4 goto label06;

        $r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i11 = interfaceinvoke $r8.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        i0 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i11, i3);

     label03:
        return i0;

     label04:
        z2 = r1 instanceof android.media.videoeditor.MediaImageItem;

        i3 = 0;

        if z2 == 0 goto label01;

        $r10 = (android.media.videoeditor.MediaImageItem) r1;

        i3 = virtualinvoke $r10.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        goto label01;

     label05:
        z3 = r2 instanceof android.media.videoeditor.MediaImageItem;

        i4 = 0;

        if z3 == 0 goto label02;

        $r9 = (android.media.videoeditor.MediaImageItem) r2;

        i4 = virtualinvoke $r9.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        goto label02;

     label06:
        $r7 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i9 = interfaceinvoke $r7.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $i10 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i9, i4);

        return $i10;

     label07:
        if r1 != null goto label10;

        if r2 == null goto label10;

        $z5 = r2 instanceof android.media.videoeditor.MediaVideoItem;

        if $z5 == 0 goto label09;

        i2 = virtualinvoke r2.<android.media.videoeditor.MediaItem: int getHeight()>();

     label08:
        $r5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i7 = interfaceinvoke $r5.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $i8 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i7, i2);

        return $i8;

     label09:
        z1 = r2 instanceof android.media.videoeditor.MediaImageItem;

        i2 = 0;

        if z1 == 0 goto label08;

        $r6 = (android.media.videoeditor.MediaImageItem) r2;

        i2 = virtualinvoke $r6.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        goto label08;

     label10:
        i0 = 0;

        if r1 == null goto label03;

        i0 = 0;

        if r2 != null goto label03;

        $z4 = r1 instanceof android.media.videoeditor.MediaVideoItem;

        if $z4 == 0 goto label12;

        i1 = virtualinvoke r1.<android.media.videoeditor.MediaItem: int getHeight()>();

     label11:
        $r3 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i5 = interfaceinvoke $r3.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $i6 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i5, i1);

        return $i6;

     label12:
        z0 = r1 instanceof android.media.videoeditor.MediaImageItem;

        i1 = 0;

        if z0 == 0 goto label11;

        $r4 = (android.media.videoeditor.MediaImageItem) r1;

        i1 = virtualinvoke $r4.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        goto label11;
    }

    private static native android.media.videoeditor.MediaArtistNativeHelper$Version getVersion() throws java.lang.RuntimeException;

    private void lock() throws java.lang.InterruptedException
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        boolean $z0, $z1;
        java.util.concurrent.Semaphore $r1;
        java.lang.Throwable $r2;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaArtistNativeHelper", 3);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.Throwable;

        specialinvoke $r2.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaArtistNativeHelper", "lock: grabbing semaphore", $r2);

     label1:
        $r1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.util.concurrent.Semaphore mLock>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void acquire()>();

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaArtistNativeHelper", 3);

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "lock: grabbed semaphore");

     label2:
        return;
    }

    private native void nativeClearSurface(android.view.Surface);

    private native int nativeGenerateAudioGraph(java.lang.String, java.lang.String, int, int, int);

    private native int nativeGenerateClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.RuntimeException;

    private native int nativeGenerateRawAudio(java.lang.String, java.lang.String);

    private native int nativeGetPixels(java.lang.String, int[], int, int, long);

    private native int nativeGetPixelsList(java.lang.String, int[], int, int, int, long, long, int[], android.media.videoeditor.MediaArtistNativeHelper$NativeGetPixelsListCallback);

    private native void nativePopulateSettings(android.media.videoeditor.MediaArtistNativeHelper$EditSettings, android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties, android.media.videoeditor.MediaArtistNativeHelper$AudioSettings) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.RuntimeException;

    private native int nativeRenderMediaItemPreviewFrame(android.view.Surface, java.lang.String, int, int, int, int, long) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.RuntimeException;

    private native int nativeRenderPreviewFrame(android.view.Surface, long, int, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.RuntimeException;

    private native void nativeStartPreview(android.view.Surface, long, long, int, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.RuntimeException;

    private native int nativeStopPreview();

    private void onAudioGraphExtractProgressUpdate(int, boolean)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;
        boolean z0;
        android.media.videoeditor.ExtractAudioWaveformProgressListener $r1, $r2;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.ExtractAudioWaveformProgressListener mExtractAudioWaveformProgressListener>;

        if $r1 == null goto label1;

        if i0 <= 0 goto label1;

        $r2 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.ExtractAudioWaveformProgressListener mExtractAudioWaveformProgressListener>;

        interfaceinvoke $r2.<android.media.videoeditor.ExtractAudioWaveformProgressListener: void onProgress(int)>(i0);

     label1:
        return;
    }

    private void onPreviewProgressUpdate(int, boolean, boolean, java.lang.String, int, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0, i1, i2;
        boolean z0, z1, $z2;
        java.lang.String r1;
        android.media.videoeditor.VideoEditor$OverlayData r2, $r11;
        android.media.videoeditor.VideoEditor$PreviewProgressListener $r3, $r5, $r7, $r9, $r12;
        long $l3, $l4;
        android.media.videoeditor.VideoEditor $r4, $r6, $r8, $r13;
        android.graphics.Bitmap $r10;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r3 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$PreviewProgressListener mPreviewProgressListener>;

        if $r3 == null goto label4;

        $z2 = r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mIsFirstProgress>;

        if $z2 == 0 goto label1;

        $r12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$PreviewProgressListener mPreviewProgressListener>;

        $r13 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        interfaceinvoke $r12.<android.media.videoeditor.VideoEditor$PreviewProgressListener: void onStart(android.media.videoeditor.VideoEditor)>($r13);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mIsFirstProgress> = 0;

     label1:
        if z1 == 0 goto label6;

        $r11 = new android.media.videoeditor.VideoEditor$OverlayData;

        specialinvoke $r11.<android.media.videoeditor.VideoEditor$OverlayData: void <init>()>();

        r2 = $r11;

        if r1 == null goto label5;

        $r10 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r1);

        virtualinvoke r2.<android.media.videoeditor.VideoEditor$OverlayData: void set(android.graphics.Bitmap,int)>($r10, i1);

     label2:
        if i0 == 0 goto label3;

        $l4 = (long) i0;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: long mPreviewProgress> = $l4;

     label3:
        if z0 == 0 goto label7;

        $r9 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$PreviewProgressListener mPreviewProgressListener>;

        $r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        interfaceinvoke $r9.<android.media.videoeditor.VideoEditor$PreviewProgressListener: void onStop(android.media.videoeditor.VideoEditor)>($r8);

     label4:
        return;

     label5:
        virtualinvoke r2.<android.media.videoeditor.VideoEditor$OverlayData: void setClear()>();

        goto label2;

     label6:
        r2 = null;

        goto label2;

     label7:
        if i2 == 0 goto label8;

        $r7 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$PreviewProgressListener mPreviewProgressListener>;

        $r6 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        interfaceinvoke $r7.<android.media.videoeditor.VideoEditor$PreviewProgressListener: void onError(android.media.videoeditor.VideoEditor,int)>($r6, i2);

        return;

     label8:
        $r5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$PreviewProgressListener mPreviewProgressListener>;

        $r4 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $l3 = (long) i0;

        interfaceinvoke $r5.<android.media.videoeditor.VideoEditor$PreviewProgressListener: void onProgress(android.media.videoeditor.VideoEditor,long,android.media.videoeditor.VideoEditor$OverlayData)>($r4, $l3, r2);

        return;
    }

    private void onProgressUpdate(int, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0, i1, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17;
        byte b2;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4, $r12;
        android.media.videoeditor.VideoEditor$MediaProcessingProgressListener $r5, $r6, $r9, $r10;
        java.lang.Object $r7, $r8;
        android.media.videoeditor.VideoEditor$ExportProgressListener $r11, $r14;
        android.media.videoeditor.VideoEditor $r13;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i7 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState>;

        if $i7 != 20 goto label02;

        $r11 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$ExportProgressListener mExportProgressListener>;

        if $r11 == null goto label01;

        $i17 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp>;

        if $i17 >= i1 goto label01;

        $r14 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$ExportProgressListener mExportProgressListener>;

        $r13 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $r12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mOutputFilename>;

        interfaceinvoke $r14.<android.media.videoeditor.VideoEditor$ExportProgressListener: void onProgress(android.media.videoeditor.VideoEditor,java.lang.String,int)>($r13, $r12, i1);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp> = i1;

     label01:
        return;

     label02:
        $i8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState>;

        if $i8 != 1 goto label05;

        b2 = 2;

     label03:
        $i9 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState>;

        tableswitch($i9)
        {
            case 1: goto label06;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label04;
            case 5: goto label04;
            case 6: goto label04;
            case 7: goto label04;
            case 8: goto label04;
            case 9: goto label04;
            case 10: goto label04;
            case 11: goto label12;
            case 12: goto label15;
            case 13: goto label17;
            default: goto label04;
        };

     label04:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR unexpected State=");

        $i10 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", $r4);

        return;

     label05:
        b2 = 1;

        goto label03;

     label06:
        i3 = i1;

     label07:
        $i12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp>;

        if $i12 == i3 goto label08;

        if i3 == 0 goto label08;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp> = i3;

        $r9 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$MediaProcessingProgressListener mMediaProcessingProgressListener>;

        if $r9 == null goto label08;

        $r10 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$MediaProcessingProgressListener mMediaProcessingProgressListener>;

        $r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.Object mProcessingObject>;

        interfaceinvoke $r10.<android.media.videoeditor.VideoEditor$MediaProcessingProgressListener: void onProgress(java.lang.Object,int,int)>($r8, b2, i3);

     label08:
        $i14 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp>;

        if $i14 != 0 goto label01;

        $r5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$MediaProcessingProgressListener mMediaProcessingProgressListener>;

        if $r5 == null goto label09;

        $r6 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$MediaProcessingProgressListener mMediaProcessingProgressListener>;

        $r7 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.Object mProcessingObject>;

        interfaceinvoke $r6.<android.media.videoeditor.VideoEditor$MediaProcessingProgressListener: void onProgress(java.lang.Object,int,int)>($r7, b2, i3);

     label09:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp> = 1;

        return;

     label10:
        i3 = i1;

        goto label07;

     label11:
        i3 = i1;

        goto label07;

     label12:
        if i1 != 0 goto label13;

        $i16 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp>;

        if $i16 == 0 goto label13;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp> = 0;

     label13:
        if i1 != 0 goto label14;

        i6 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp>;

        i3 = 0;

        if i6 == 0 goto label07;

     label14:
        i3 = i1 / 4;

        goto label07;

     label15:
        if i1 != 0 goto label16;

        i5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp>;

        i3 = 0;

        if i5 == 0 goto label07;

     label16:
        $i15 = i1 / 4;

        i3 = 25 + $i15;

        goto label07;

     label17:
        if i1 != 0 goto label18;

        i4 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp>;

        i3 = 0;

        if i4 == 0 goto label07;

     label18:
        $i13 = i1 / 2;

        i3 = 50 + $i13;

        goto label07;
    }

    private void populateBackgroundMusicProperties(java.util.List)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.util.List r1;
        android.media.videoeditor.MediaArtistNativeHelper$Properties r3, $r7;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i15, $i16;
        android.media.videoeditor.AudioTrack $r4, $r9, $r12, $r18, $r21, $r22, $r25, $r26, $r28, $r30, $r34, $r35, $r37, $r57, $r60, $r62, $r65, $r68, $r71, $r76, $r79, $r81, $r86;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings $r5, $r50, $r53, $r54, $r56, $r59, $r63, $r66, $r69, $r72, $r75, $r78, $r85;
        android.media.videoeditor.MediaArtistNativeHelper$AudioSettings $r6, $r8, $r10, $r14, $r15, $r16, $r17, $r19, $r20, $r24, $r27, $r29, $r31, $r32, $r33, $r36, $r40, $r45, $r83;
        java.lang.String $r11, $r13, $r23, $r38, $r41, $r46, $r47, $r55;
        boolean $z0, $z1, $z2, $z3, $z4;
        long $l3, $l4, $l5, $l12, $l13, $l14;
        java.lang.StringBuilder $r39, $r42, $r43, $r44;
        java.lang.Object[] $r48;
        android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings $r49, $r51, $r52, $r58, $r61, $r64, $r67, $r70, $r73, $r74, $r77;
        java.lang.IllegalArgumentException $r80;
        java.lang.Exception $r82;
        java.lang.Object $r84;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 1 goto label5;

        $r84 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r81 = (android.media.videoeditor.AudioTrack) $r84;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack> = $r81;

     label1:
        $r4 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        if $r4 == null goto label8;

        $r6 = new android.media.videoeditor.MediaArtistNativeHelper$AudioSettings;

        specialinvoke $r6.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: void <init>()>();

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings> = $r6;

        $r7 = new android.media.videoeditor.MediaArtistNativeHelper$Properties;

        specialinvoke $r7.<android.media.videoeditor.MediaArtistNativeHelper$Properties: void <init>()>();

        $r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r8.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: java.lang.String pFile> = null;

        $r10 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r9 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $r11 = virtualinvoke $r9.<android.media.videoeditor.AudioTrack: java.lang.String getId()>();

        $r10.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: java.lang.String Id> = $r11;

     label2:
        $r12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $r13 = virtualinvoke $r12.<android.media.videoeditor.AudioTrack: java.lang.String getFilename()>();

        r3 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$Properties getMediaProperties(java.lang.String)>($r13);

     label3:
        $r14 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r14.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: boolean bRemoveOriginal> = 0;

        $r15 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $i1 = r3.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioChannels>;

        $r15.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: int channels> = $i1;

        $r16 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $i2 = r3.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioSamplingFrequency>;

        $r16.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: int Fs> = $i2;

        $r17 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r18 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $z0 = virtualinvoke $r18.<android.media.videoeditor.AudioTrack: boolean isLooping()>();

        $r17.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: boolean loop> = $z0;

        $r19 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r19.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: int ExtendedFs> = 0;

        $r20 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r21 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $r23 = virtualinvoke $r21.<android.media.videoeditor.AudioTrack: java.lang.String getFilename()>();

        $r20.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: java.lang.String pFile> = $r23;

        $r24 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r22 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $l3 = virtualinvoke $r22.<android.media.videoeditor.AudioTrack: long getStartTime()>();

        $r24.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: long startMs> = $l3;

        $r27 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r26 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $l4 = virtualinvoke $r26.<android.media.videoeditor.AudioTrack: long getBoundaryBeginTime()>();

        $r27.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: long beginCutTime> = $l4;

        $r29 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r25 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $l5 = virtualinvoke $r25.<android.media.videoeditor.AudioTrack: long getBoundaryEndTime()>();

        $r29.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: long endCutTime> = $l5;

        $r28 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $z1 = virtualinvoke $r28.<android.media.videoeditor.AudioTrack: boolean isMuted()>();

        if $z1 == 0 goto label7;

        $r83 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r83.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: int volume> = 0;

     label4:
        $r33 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $i7 = r3.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int fileType>;

        $r33.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: int fileType> = $i7;

        $r32 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r34 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $i8 = virtualinvoke $r34.<android.media.videoeditor.AudioTrack: int getDuckedTrackVolume()>();

        $r32.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: int ducking_lowVolume> = $i8;

        $r36 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r37 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $i9 = virtualinvoke $r37.<android.media.videoeditor.AudioTrack: int getDuckingThreshhold()>();

        $r36.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: int ducking_threshold> = $i9;

        $r40 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r35 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $z2 = virtualinvoke $r35.<android.media.videoeditor.AudioTrack: boolean isDuckingEnabled()>();

        $r40.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: boolean bInDucking_enable> = $z2;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioPcm.pcm");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r48 = newarray (java.lang.Object)[0];

        $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r41, $r48);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath> = $r47;

        $r45 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r46 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath>;

        $r45.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: java.lang.String pcmFilePath> = $r46;

        $r53 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r52 = new android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings;

        specialinvoke $r52.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: void <init>()>();

        $r53.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings> = $r52;

        $r54 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r49 = $r54.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r55 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath>;

        $r49.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: java.lang.String file> = $r55;

        $r50 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r51 = $r50.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $i10 = r3.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int fileType>;

        $r51.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: int fileType> = $i10;

        $r59 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r61 = $r59.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r60 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $l12 = virtualinvoke $r60.<android.media.videoeditor.AudioTrack: long getStartTime()>();

        $r61.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: long insertionTime> = $l12;

        $r56 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r58 = $r56.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r57 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $i11 = virtualinvoke $r57.<android.media.videoeditor.AudioTrack: int getVolume()>();

        $r58.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: int volumePercent> = $i11;

        $r66 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r67 = $r66.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r65 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $l14 = virtualinvoke $r65.<android.media.videoeditor.AudioTrack: long getBoundaryBeginTime()>();

        $r67.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: long beginLoop> = $l14;

        $r63 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r64 = $r63.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r62 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $l13 = virtualinvoke $r62.<android.media.videoeditor.AudioTrack: long getBoundaryEndTime()>();

        $r64.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: long endLoop> = $l13;

        $r72 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r73 = $r72.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r71 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $z3 = virtualinvoke $r71.<android.media.videoeditor.AudioTrack: boolean isDuckingEnabled()>();

        $r73.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: boolean enableDucking> = $z3;

        $r69 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r70 = $r69.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r68 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $i15 = virtualinvoke $r68.<android.media.videoeditor.AudioTrack: int getDuckingThreshhold()>();

        $r70.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: int duckingThreshold> = $i15;

        $r78 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r77 = $r78.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r79 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $i16 = virtualinvoke $r79.<android.media.videoeditor.AudioTrack: int getDuckedTrackVolume()>();

        $r77.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: int lowVolume> = $i16;

        $r75 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r74 = $r75.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings>;

        $r76 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $z4 = virtualinvoke $r76.<android.media.videoeditor.AudioTrack: boolean isLooping()>();

        $r74.<android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings: boolean isLooping> = $z4;

        $r85 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r85.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int primaryTrackVolume> = 100;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 1;

        $r86 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.Object mProcessingObject> = $r86;

        return;

     label5:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack> = null;

        goto label1;

     label6:
        $r82 := @caughtexception;

        $r80 = new java.lang.IllegalArgumentException;

        specialinvoke $r80.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported file or file not found");

        throw $r80;

     label7:
        $r31 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        $r30 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.AudioTrack mAudioTrack>;

        $i6 = virtualinvoke $r30.<android.media.videoeditor.AudioTrack: int getVolume()>();

        $r31.<android.media.videoeditor.MediaArtistNativeHelper$AudioSettings: int volume> = $i6;

        goto label4;

     label8:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings> = null;

        $r5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings> = null;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath> = null;

        return;

        catch java.lang.Exception from label2 to label3 with label6;
    }

    private int populateEffects(android.media.videoeditor.MediaItem, android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[], int, int, int, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaItem r1;
        android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[] r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.util.List r3, $r12;
        java.util.Iterator r4, r5;
        android.media.videoeditor.Effect r6;
        android.media.videoeditor.MediaArtistNativeHelper$EffectSettings r7, r8, $r14, $r16, $r20, $r21;
        android.media.videoeditor.Transition $r9, $r10, $r11, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        boolean $z0, $z1, $z2;
        java.lang.Object $r13, $r17;
        android.media.videoeditor.EffectColor $r15;
        android.media.videoeditor.OverlayFrame $r18;
        android.media.videoeditor.Overlay $r19;
        long $l8, $l10, $l11, $l12, $l13, $l15, $l16, $l17, $l19, $l20, $l22, $l23, $l24, $l25, $l26, $l27;
        byte $b9, $b14, $b18, $b21;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        r2 := @parameter1: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r9 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if $r9 == null goto label3;

        $r29 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        $l19 = virtualinvoke $r29.<android.media.videoeditor.Transition: long getDuration()>();

        $b18 = $l19 cmp 0L;

        if $b18 <= 0 goto label3;

        $r28 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if $r28 == null goto label3;

        $r30 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l22 = virtualinvoke $r30.<android.media.videoeditor.Transition: long getDuration()>();

        $b21 = $l22 cmp 0L;

        if $b21 <= 0 goto label3;

        $l20 = (long) i1;

        $r31 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        $l25 = virtualinvoke $r31.<android.media.videoeditor.Transition: long getDuration()>();

        $l24 = $l20 + $l25;

        i1 = (int) $l24;

        $l23 = (long) i2;

        $r32 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l26 = virtualinvoke $r32.<android.media.videoeditor.Transition: long getDuration()>();

        $l27 = $l23 - $l26;

        i2 = (int) $l27;

     label1:
        r3 = virtualinvoke r1.<android.media.videoeditor.MediaItem: java.util.List getAllEffects()>();

        $r12 = virtualinvoke r1.<android.media.videoeditor.MediaItem: java.util.List getAllOverlays()>();

        r4 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (android.media.videoeditor.Overlay) $r17;

        $r18 = (android.media.videoeditor.OverlayFrame) $r19;

        $r20 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getOverlaySettings(android.media.videoeditor.OverlayFrame)>($r18);

        r2[i0] = $r20;

        $r21 = r2[i0];

        virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void adjustEffectsStartTimeAndDuration(android.media.videoeditor.MediaArtistNativeHelper$EffectSettings,int,int)>($r21, i1, i2);

        r8 = r2[i0];

        $i6 = r8.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i7 = i3 + $i6;

        r8.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = $i7;

        i0 = i0 + 1;

        goto label2;

     label3:
        $r10 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if $r10 != null goto label4;

        $r25 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if $r25 == null goto label4;

        $r26 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l13 = virtualinvoke $r26.<android.media.videoeditor.Transition: long getDuration()>();

        $b14 = $l13 cmp 0L;

        if $b14 <= 0 goto label4;

        $l17 = (long) i2;

        $r27 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        $l16 = virtualinvoke $r27.<android.media.videoeditor.Transition: long getDuration()>();

        $l15 = $l17 - $l16;

        i2 = (int) $l15;

        goto label1;

     label4:
        $r11 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if $r11 != null goto label1;

        $r22 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if $r22 == null goto label1;

        $r23 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        $l8 = virtualinvoke $r23.<android.media.videoeditor.Transition: long getDuration()>();

        $b9 = $l8 cmp 0L;

        if $b9 <= 0 goto label1;

        $l12 = (long) i1;

        $r24 = virtualinvoke r1.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        $l10 = virtualinvoke $r24.<android.media.videoeditor.Transition: long getDuration()>();

        $l11 = $l12 + $l10;

        i1 = (int) $l11;

        goto label1;

     label5:
        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.media.videoeditor.Effect) $r13;

        $z2 = r6 instanceof android.media.videoeditor.EffectColor;

        if $z2 == 0 goto label6;

        $r15 = (android.media.videoeditor.EffectColor) r6;

        $r14 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getEffectSettings(android.media.videoeditor.EffectColor)>($r15);

        r2[i0] = $r14;

        $r16 = r2[i0];

        virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void adjustEffectsStartTimeAndDuration(android.media.videoeditor.MediaArtistNativeHelper$EffectSettings,int,int)>($r16, i1, i2);

        r7 = r2[i0];

        $i4 = r7.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i5 = i3 + $i4;

        r7.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = $i5;

        i0 = i0 + 1;

        goto label6;

     label7:
        return i0;
    }

    private int populateMediaItemProperties(android.media.videoeditor.MediaItem, int, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaItem r1;
        int i0, i1, $i2, $i3, $i4;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings $r2, $r5, $r8, $r14, $r16, $r19, $r28;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings $r3, $r7, $r12, $r18, $r20, $r24, $r30;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] $r4, $r6, $r9, $r13, $r15, $r21, $r27;
        boolean $z0, $z1;
        android.media.videoeditor.MediaImageItem $r10, $r22, $r23, $r25;
        java.lang.String $r11, $r17;
        android.media.videoeditor.MediaVideoItem $r26, $r29, $r31;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r4 = $r2.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r3 = new android.media.videoeditor.MediaArtistNativeHelper$ClipSettings;

        specialinvoke $r3.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: void <init>()>();

        $r4[i0] = $r3;

        $z0 = r1 instanceof android.media.videoeditor.MediaVideoItem;

        if $z0 == 0 goto label3;

        $r28 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r27 = $r28.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r26 = (android.media.videoeditor.MediaVideoItem) r1;

        $r30 = virtualinvoke $r26.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getVideoClipProperties()>();

        $r27[i0] = $r30;

        $r31 = (android.media.videoeditor.MediaVideoItem) r1;

        $i4 = virtualinvoke $r31.<android.media.videoeditor.MediaVideoItem: int getHeight()>();

        if $i4 <= i1 goto label1;

        $r29 = (android.media.videoeditor.MediaVideoItem) r1;

        i1 = virtualinvoke $r29.<android.media.videoeditor.MediaVideoItem: int getHeight()>();

     label1:
        $r5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r6 = $r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r7 = $r6[i0];

        $i2 = $r7.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int fileType>;

        if $i2 != 5 goto label2;

        $r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r9 = $r8.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r12 = $r9[i0];

        $r10 = (android.media.videoeditor.MediaImageItem) r1;

        $r11 = virtualinvoke $r10.<android.media.videoeditor.MediaImageItem: java.lang.String getDecodedImageFileName()>();

        $r12.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipDecodedPath> = $r11;

        $r14 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r13 = $r14.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r20 = $r13[i0];

        $r16 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r15 = $r16.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r18 = $r15[i0];

        $r17 = $r18.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipPath>;

        $r20.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipOriginalPath> = $r17;

     label2:
        return i1;

     label3:
        $z1 = r1 instanceof android.media.videoeditor.MediaImageItem;

        if $z1 == 0 goto label1;

        $r19 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r21 = $r19.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r22 = (android.media.videoeditor.MediaImageItem) r1;

        $r24 = virtualinvoke $r22.<android.media.videoeditor.MediaImageItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getImageClipProperties()>();

        $r21[i0] = $r24;

        $r23 = (android.media.videoeditor.MediaImageItem) r1;

        $i3 = virtualinvoke $r23.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        if $i3 <= i1 goto label1;

        $r25 = (android.media.videoeditor.MediaImageItem) r1;

        i1 = virtualinvoke $r25.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        goto label1;
    }

    private void previewFrameEditInfo(java.lang.String, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mRenderPreviewOverlayFile> = r1;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mRenderPreviewRenderingMode> = i0;

        return;
    }

    private native void release() throws java.lang.IllegalStateException, java.lang.RuntimeException;

    private native void stopEncoding() throws java.lang.IllegalStateException, java.lang.RuntimeException;

    private void unlock()
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        boolean $z0;
        java.util.concurrent.Semaphore $r1;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaArtistNativeHelper", 3);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "unlock: releasing semaphore");

     label1:
        $r1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.util.concurrent.Semaphore mLock>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        return;
    }

    int GetClosestVideoFrameRate(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        if i0 < 25 goto label1;

        return 7;

     label1:
        if i0 < 20 goto label2;

        return 6;

     label2:
        if i0 < 15 goto label3;

        return 5;

     label3:
        if i0 < 12 goto label4;

        return 4;

     label4:
        if i0 < 10 goto label5;

        return 3;

     label5:
        if i0 < 7 goto label6;

        return 2;

     label6:
        if i0 < 5 goto label7;

        return 1;

     label7:
        return -1;
    }

    public void adjustEffectsStartTimeAndDuration(android.media.videoeditor.MediaArtistNativeHelper$EffectSettings, int, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaArtistNativeHelper$EffectSettings r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i6 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        if $i6 > i1 goto label1;

        $i8 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i7 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration>;

        $i9 = $i8 + $i7;

        if $i9 > i0 goto label3;

     label1:
        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration> = 0;

     label2:
        return;

     label3:
        $i10 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        if $i10 >= i0 goto label4;

        $i28 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i29 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration>;

        $i32 = $i28 + $i29;

        if $i32 <= i0 goto label4;

        $i30 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i33 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration>;

        $i31 = $i30 + $i33;

        if $i31 > i1 goto label4;

        $i34 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration>;

        $i35 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i36 = i0 - $i35;

        i5 = $i34 - $i36;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration> = i5;

        return;

     label4:
        $i11 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        if $i11 < i0 goto label5;

        $i22 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i23 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration>;

        $i25 = $i22 + $i23;

        if $i25 > i1 goto label5;

        $i24 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i27 = $i24 - i0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = $i27;

        $i26 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration>;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration> = $i26;

        return;

     label5:
        $i12 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        if $i12 < i0 goto label6;

        $i19 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i16 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration>;

        $i18 = $i19 + $i16;

        if $i18 <= i1 goto label6;

        $i21 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        i3 = $i21 - i0;

        $i20 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        i4 = i1 - $i20;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = i3;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration> = i4;

        return;

     label6:
        $i13 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        if $i13 >= i0 goto label2;

        $i14 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime>;

        $i15 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration>;

        $i17 = $i14 + $i15;

        if $i17 <= i1 goto label2;

        i2 = i1 - i0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration> = i2;

        return;
    }

    void clearPreviewSurface(android.view.Surface)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.view.Surface r1;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void nativeClearSurface(android.view.Surface)>(r1);

        return;
    }

    void doPreview(android.view.Surface, long, long, boolean, int, android.media.videoeditor.VideoEditor$PreviewProgressListener)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.view.Surface r1;
        long l0, l1;
        boolean z0, $z1;
        int i2, i3, $i4, $i5;
        android.media.videoeditor.VideoEditor$PreviewProgressListener r2;
        java.lang.RuntimeException r3, $r23;
        java.lang.IllegalStateException r4, $r7, $r20;
        java.lang.IllegalArgumentException r5, $r24;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings $r6, $r11, $r12, $r15, $r16;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] $r8, $r14, $r17, $r19;
        android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties $r9;
        android.media.videoeditor.MediaArtistNativeHelper$AudioSettings $r10;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings $r13, $r18, $r22;
        java.lang.String $r21;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.view.Surface;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        r2 := @parameter5: android.media.videoeditor.VideoEditor$PreviewProgressListener;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: long mPreviewProgress> = l0;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mIsFirstProgress> = 1;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$PreviewProgressListener mPreviewProgressListener> = r2;

        $z1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mInvalidatePreviewArray>;

        if $z1 != 0 goto label8;

        i3 = 0;

     label1:
        $r6 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r8 = $r6.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $i4 = lengthof $r8;

        if i3 >= $i4 goto label3;

        $r11 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r14 = $r11.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r13 = $r14[i3];

        $i5 = $r13.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int fileType>;

        if $i5 != 5 goto label9;

        $r15 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r17 = $r15.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r22 = $r17[i3];

        $r16 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r19 = $r16.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r18 = $r19[i3];

        $r21 = $r18.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipDecodedPath>;

        $r22.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipPath> = $r21;

     label2:
        goto label9;

     label3:
        $r12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r9 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r10 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void nativePopulateSettings(android.media.videoeditor.MediaArtistNativeHelper$EditSettings,android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties,android.media.videoeditor.MediaArtistNativeHelper$AudioSettings)>($r12, $r9, $r10);

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void nativeStartPreview(android.view.Surface,long,long,int,boolean)>(r1, l0, l1, i2, z0);

     label4:
        return;

     label5:
        $r24 := @caughtexception;

        r5 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal argument exception in nativeStartPreview");

        throw r5;

     label6:
        $r20 := @caughtexception;

        r4 = $r20;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal state exception in nativeStartPreview");

        throw r4;

     label7:
        $r23 := @caughtexception;

        r3 = $r23;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Runtime exception in nativeStartPreview");

        throw r3;

     label8:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("generatePreview is in progress");

        throw $r7;

     label9:
        i3 = i3 + 1;

        goto label1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalStateException from label1 to label2 with label6;
        catch java.lang.RuntimeException from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalStateException from label3 to label4 with label6;
        catch java.lang.RuntimeException from label3 to label4 with label7;
    }

    void export(java.lang.String, java.lang.String, int, int, java.util.List, java.util.List, java.util.List, android.media.videoeditor.VideoEditor$ExportProgressListener)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String r1, r2, $r39, $r41, $r68;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22;
        java.util.List r3, r4, r5;
        android.media.videoeditor.VideoEditor$ExportProgressListener r6;
        android.media.videoeditor.VideoEditorProfile r7;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings r8, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r36, $r40, $r43, $r46, $r50, $r53;
        java.lang.RuntimeException r9, $r33, $r66, $r69;
        java.lang.IllegalStateException r10, $r65;
        java.lang.IllegalArgumentException r11, $r51, $r62, $r67;
        android.media.videoeditor.VideoEditor $r14;
        android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings[] $r25, $r49, $r54, $r56;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] $r26, $r34, $r45, $r47;
        android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties $r30;
        android.media.videoeditor.MediaArtistNativeHelper$AudioSettings $r31;
        java.lang.StringBuilder $r32, $r37, $r38, $r57, $r58, $r59, $r60, $r61, $r63, $r64;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings $r35, $r42, $r48;
        android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings $r44, $r52, $r55;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.util.List;

        r4 := @parameter5: java.util.List;

        r5 := @parameter6: java.util.List;

        r6 := @parameter7: android.media.videoeditor.VideoEditor$ExportProgressListener;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mExportFilename> = r1;

        virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void previewStoryBoard(java.util.List,java.util.List,java.util.List,android.media.videoeditor.VideoEditor$MediaProcessingProgressListener)>(r3, r4, r5, null);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$ExportProgressListener mExportProgressListener> = r6;

        r7 = staticinvoke <android.media.videoeditor.VideoEditorProfile: android.media.videoeditor.VideoEditorProfile get()>();

        if r7 != null goto label01;

        $r69 = new java.lang.RuntimeException;

        specialinvoke $r69.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t get the video editor profile");

        throw $r69;

     label01:
        i2 = r7.<android.media.videoeditor.VideoEditorProfile: int maxOutputVideoFrameHeight>;

        i3 = r7.<android.media.videoeditor.VideoEditorProfile: int maxOutputVideoFrameWidth>;

        if i0 <= i2 goto label02;

        $r62 = new java.lang.IllegalArgumentException;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported export resolution. Supported maximum width:");

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r58 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height:");

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" current height:");

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r68 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r68);

        throw $r62;

     label02:
        $i11 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mExportVideoCodec>;

        i4 = staticinvoke <android.media.videoeditor.VideoEditorProfile: int getExportProfile(int)>($i11);

        $i12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mExportVideoCodec>;

        i5 = staticinvoke <android.media.videoeditor.VideoEditorProfile: int getExportLevel(int)>($i12);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp> = 0;

        lookupswitch(i1)
        {
            case 28000: goto label04;
            case 40000: goto label07;
            case 64000: goto label08;
            case 96000: goto label09;
            case 128000: goto label10;
            case 192000: goto label11;
            case 256000: goto label12;
            case 384000: goto label13;
            case 512000: goto label14;
            case 800000: goto label15;
            case 2000000: goto label16;
            case 5000000: goto label17;
            case 8000000: goto label18;
            default: goto label03;
        };

     label03:
        $r51 = new java.lang.IllegalArgumentException;

        specialinvoke $r51.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument Bitrate incorrect");

        throw $r51;

     label04:
        i6 = 32000;

     label05:
        $r12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r12.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameRate> = 7;

        r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mOutputFilename> = r1;

        r8.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: java.lang.String outputFile> = r1;

        $r14 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        i8 = interfaceinvoke $r14.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $r13 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $i13 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>(i8, i0);

        $r13.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize> = $i13;

        $r16 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $i15 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mExportVideoCodec>;

        $r16.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFormat> = $i15;

        $r15 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $i14 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mExportAudioCodec>;

        $r15.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioFormat> = $i14;

        $r19 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r19.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoProfile> = i4;

        $r20 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r20.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoLevel> = i5;

        $r17 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r17.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioSamplingFreq> = 32000;

        $r18 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r18.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int maxFileSize> = 0;

        $r22 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r22.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioChannels> = 2;

        $r23 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r23.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoBitrate> = i6;

        $r21 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r21.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioBitrate> = 96000;

        $r24 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $i16 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips>;

        $i18 = -1 + $i16;

        $r25 = newarray (android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings)[$i18];

        $r24.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings[] transitionSettingsArray> = $r25;

        i7 = 0;

     label06:
        $i17 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips>;

        $i20 = -1 + $i17;

        if i7 >= $i20 goto label19;

        $r43 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r54 = $r43.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings[] transitionSettingsArray>;

        $r44 = new android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings;

        specialinvoke $r44.<android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings: void <init>()>();

        $r54[i7] = $r44;

        $r53 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r56 = $r53.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings[] transitionSettingsArray>;

        $r55 = $r56[i7];

        $r55.<android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings: int videoTransitionType> = 0;

        $r50 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r49 = $r50.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings[] transitionSettingsArray>;

        $r52 = $r49[i7];

        $r52.<android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings: int audioTransitionType> = 0;

        i7 = i7 + 1;

        goto label06;

     label07:
        i6 = 48000;

        goto label05;

     label08:
        i6 = 64000;

        goto label05;

     label09:
        i6 = 96000;

        goto label05;

     label10:
        i6 = 128000;

        goto label05;

     label11:
        i6 = 192000;

        goto label05;

     label12:
        i6 = 256000;

        goto label05;

     label13:
        i6 = 384000;

        goto label05;

     label14:
        i6 = 512000;

        goto label05;

     label15:
        i6 = 800000;

        goto label05;

     label16:
        i6 = 2000000;

        goto label05;

     label17:
        i6 = 5000000;

        goto label05;

     label18:
        i6 = 8000000;

        goto label05;

     label19:
        i9 = 0;

     label20:
        $r27 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r26 = $r27.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $i19 = lengthof $r26;

        if i9 >= $i19 goto label22;

        $r40 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r34 = $r40.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r35 = $r34[i9];

        $i22 = $r35.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int fileType>;

        if $i22 != 5 goto label21;

        $r36 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r45 = $r36.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r42 = $r45[i9];

        $r46 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r47 = $r46.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r48 = $r47[i9];

        $r41 = $r48.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipOriginalPath>;

        $r42.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipPath> = $r41;

     label21:
        i9 = i9 + 1;

        goto label20;

     label22:
        $r29 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r30 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r31 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void nativePopulateSettings(android.media.videoeditor.MediaArtistNativeHelper$EditSettings,android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties,android.media.videoeditor.MediaArtistNativeHelper$AudioSettings)>($r29, $r30, $r31);

     label23:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 20;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.Object mProcessingObject> = null;

        $r28 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        i10 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int generateClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings)>($r28);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 0;

     label24:
        if i10 == 0 goto label28;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "RuntimeException for generateClip");

        $r33 = new java.lang.RuntimeException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("generateClip failed with error=");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.RuntimeException: void <init>(java.lang.String)>($r39);

        throw $r33;

     label25:
        $r67 := @caughtexception;

        r11 = $r67;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "IllegalArgument for generateClip");

        throw r11;

     label26:
        $r65 := @caughtexception;

        r10 = $r65;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "IllegalStateExceptiont for generateClip");

        throw r10;

     label27:
        $r66 := @caughtexception;

        r9 = $r66;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "RuntimeException for generateClip");

        throw r9;

     label28:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$ExportProgressListener mExportProgressListener> = null;

        return;

        catch java.lang.IllegalArgumentException from label23 to label24 with label25;
        catch java.lang.IllegalStateException from label23 to label24 with label26;
        catch java.lang.RuntimeException from label23 to label24 with label27;
    }

    void generateAudioGraph(java.lang.String, java.lang.String, java.lang.String, int, int, int, android.media.videoeditor.ExtractAudioWaveformProgressListener, boolean)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String r1, r2, r3, r5, $r8, $r14;
        int i0, i1, i2;
        android.media.videoeditor.ExtractAudioWaveformProgressListener r4;
        boolean z0;
        java.io.File $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12;
        java.lang.Object[] $r13;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r4 := @parameter6: android.media.videoeditor.ExtractAudioWaveformProgressListener;

        z0 := @parameter7: boolean;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.ExtractAudioWaveformProgressListener mExtractAudioWaveformProgressListener> = r4;

        if z0 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pcm");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r14, $r13);

     label1:
        if z0 == 0 goto label2;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int nativeGenerateRawAudio(java.lang.String,java.lang.String)>(r2, r5);

     label2:
        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int nativeGenerateAudioGraph(java.lang.String,java.lang.String,int,int,int)>(r5, r3, i0, i1, i2);

        if z0 == 0 goto label3;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r5);

        virtualinvoke $r6.<java.io.File: boolean delete()>();

     label3:
        return;

     label4:
        r5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath>;

        goto label1;
    }

    public int generateClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings r1;
        int i0;
        java.lang.IllegalStateException $r5;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaArtistNativeHelper$EditSettings;

     label1:
        i0 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int nativeGenerateClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings)>(r1);

     label2:
        return i0;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal Argument exception in load settings");

        return -1;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal state exception in load settings");

        return -1;

     label5:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Runtime exception in load settings");

        return -1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    java.lang.String generateEffectClip(android.media.videoeditor.MediaItem, android.media.videoeditor.MediaArtistNativeHelper$ClipSettings, android.media.videoeditor.MediaArtistNativeHelper$EditSettings, java.lang.String, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaItem r1;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings r2;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings r3, r5, $r10;
        java.lang.String r4, r6, $r14, $r21, $r25;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.io.File r7, $r26;
        android.media.videoeditor.MediaImageItem r8;
        android.media.videoeditor.MediaVideoItem r9;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] $r11, $r13;
        android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[] $r12;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23;
        java.lang.Object[] $r24;
        boolean $z0, $z1;
        android.media.videoeditor.VideoEditor $r27, $r29;
        java.lang.RuntimeException $r28;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaItem;

        r2 := @parameter1: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings;

        r3 := @parameter2: android.media.videoeditor.MediaArtistNativeHelper$EditSettings;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $r10 = new android.media.videoeditor.MediaArtistNativeHelper$EditSettings;

        specialinvoke $r10.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: void <init>()>();

        r5 = $r10;

        $r11 = newarray (android.media.videoeditor.MediaArtistNativeHelper$ClipSettings)[1];

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray> = $r11;

        $r13 = r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r13[0] = r2;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings> = null;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings[] transitionSettingsArray> = null;

        $r12 = r3.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[] effectSettingsArray>;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[] effectSettingsArray> = $r12;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClipEffectIntermediate");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r21 = virtualinvoke r1.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".3gp");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = newarray (java.lang.Object)[0];

        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r25, $r24);

        $r26 = new java.io.File;

        specialinvoke $r26.<java.io.File: void <init>(java.lang.String)>(r6);

        r7 = $r26;

        $z1 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label1;

        virtualinvoke r7.<java.io.File: boolean delete()>();

     label1:
        i1 = staticinvoke <android.media.videoeditor.VideoEditorProfile: int getExportProfile(int)>(2);

        i2 = staticinvoke <android.media.videoeditor.VideoEditorProfile: int getExportLevel(int)>(2);

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoProfile> = i1;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoLevel> = i2;

        $z0 = r1 instanceof android.media.videoeditor.MediaVideoItem;

        if $z0 == 0 goto label4;

        r9 = (android.media.videoeditor.MediaVideoItem) r1;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioFormat> = 2;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioChannels> = 2;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioBitrate> = 64000;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioSamplingFreq> = 32000;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFormat> = 2;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameRate> = 7;

        $r29 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i11 = interfaceinvoke $r29.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $i9 = virtualinvoke r9.<android.media.videoeditor.MediaVideoItem: int getHeight()>();

        $i10 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i11, $i9);

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize> = $i10;

        $i13 = r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize>;

        $i12 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoBitrate(int)>($i13);

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoBitrate> = $i12;

     label2:
        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: java.lang.String outputFile> = r6;

        if i0 != 1 goto label5;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 11;

     label3:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.Object mProcessingObject> = r1;

        i3 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int generateClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings)>(r5);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 0;

        if i3 != 0 goto label6;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipPath> = r6;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int fileType> = 0;

        return r6;

     label4:
        r8 = (android.media.videoeditor.MediaImageItem) r1;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioBitrate> = 64000;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioChannels> = 2;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioFormat> = 2;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioSamplingFreq> = 32000;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFormat> = 2;

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameRate> = 7;

        $r27 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i6 = interfaceinvoke $r27.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $i4 = virtualinvoke r8.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        $i5 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i6, $i4);

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize> = $i5;

        $i7 = r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize>;

        $i8 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoBitrate(int)>($i7);

        r5.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoBitrate> = $i8;

        goto label2;

     label5:
        if i0 != 2 goto label3;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 12;

        goto label3;

     label6:
        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String)>("preview generation cannot be completed");

        throw $r28;
    }

    java.lang.String generateKenBurnsClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings, android.media.videoeditor.MediaImageItem)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings r1;
        android.media.videoeditor.MediaImageItem r2;
        java.lang.String r3, $r6, $r10, $r14;
        java.io.File r4, $r15;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r11, $r12;
        java.lang.Object[] $r13;
        boolean $z0;
        android.media.videoeditor.VideoEditor $r16;
        java.lang.RuntimeException $r17;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaArtistNativeHelper$EditSettings;

        r2 := @parameter1: android.media.videoeditor.MediaImageItem;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$BackgroundMusicSettings backgroundMusicSettings> = null;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings[] transitionSettingsArray> = null;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[] effectSettingsArray> = null;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImageClip-");

        $r10 = virtualinvoke r2.<android.media.videoeditor.MediaImageItem: java.lang.String getId()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".3gp");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r14, $r13);

        $r15 = new java.io.File;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r3);

        r4 = $r15;

        $z0 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r4.<java.io.File: boolean delete()>();

     label1:
        i0 = staticinvoke <android.media.videoeditor.VideoEditorProfile: int getExportProfile(int)>(2);

        i1 = staticinvoke <android.media.videoeditor.VideoEditorProfile: int getExportLevel(int)>(2);

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoProfile> = i0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoLevel> = i1;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: java.lang.String outputFile> = r3;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioBitrate> = 64000;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioChannels> = 2;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioFormat> = 2;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioSamplingFreq> = 32000;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFormat> = 2;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameRate> = 7;

        $r16 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i4 = interfaceinvoke $r16.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $i3 = virtualinvoke r2.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        $i6 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i4, $i3);

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize> = $i6;

        $i5 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize>;

        $i7 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoBitrate(int)>($i5);

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoBitrate> = $i7;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 3;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.Object mProcessingObject> = r2;

        i2 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int generateClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings)>(r1);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 0;

        if i2 == 0 goto label2;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>("preview generation cannot be completed");

        throw $r17;

     label2:
        return r3;
    }

    java.lang.String generateTransitionClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings, java.lang.String, android.media.videoeditor.MediaItem, android.media.videoeditor.MediaItem, android.media.videoeditor.Transition)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings r1;
        java.lang.String r2, r6, $r8, $r14;
        android.media.videoeditor.MediaItem r3, r4;
        android.media.videoeditor.Transition r5;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12;
        java.lang.Object[] $r13;
        boolean $z0;
        java.io.File $r15, $r17;
        java.lang.RuntimeException $r16;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaArtistNativeHelper$EditSettings;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.media.videoeditor.MediaItem;

        r4 := @parameter3: android.media.videoeditor.MediaItem;

        r5 := @parameter4: android.media.videoeditor.Transition;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".3gp");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r14, $r13);

        i0 = staticinvoke <android.media.videoeditor.VideoEditorProfile: int getExportProfile(int)>(2);

        i1 = staticinvoke <android.media.videoeditor.VideoEditorProfile: int getExportLevel(int)>(2);

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoProfile> = i0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoLevel> = i1;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: java.lang.String outputFile> = r6;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioBitrate> = 64000;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioChannels> = 2;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioFormat> = 2;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int audioSamplingFreq> = 32000;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFormat> = 2;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameRate> = 7;

        $i3 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int getTransitionResolution(android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem)>(r3, r4);

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize> = $i3;

        $i5 = r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize>;

        $i4 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoBitrate(int)>($i5);

        r1.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoBitrate> = $i4;

        $r15 = new java.io.File;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r6);

        $z0 = virtualinvoke $r15.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r17 = new java.io.File;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>(r6);

        virtualinvoke $r17.<java.io.File: boolean delete()>();

     label1:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 13;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.Object mProcessingObject> = r5;

        i2 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int generateClip(android.media.videoeditor.MediaArtistNativeHelper$EditSettings)>(r1);

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 0;

        if i2 == 0 goto label2;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>("preview generation cannot be completed");

        throw $r16;

     label2:
        return r6;
    }

    int getAspectRatio(int, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0, i1;
        double d0, $d1, $d2, $d3;
        byte b2, $b3, $b4, $b5, $b6, $b7;
        java.math.BigDecimal $r1, $r2;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.math.BigDecimal;

        $d2 = (double) i0;

        $d1 = (double) i1;

        $d3 = $d2 / $d1;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(double)>($d3);

        $r2 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)>(3, 4);

        d0 = virtualinvoke $r2.<java.math.BigDecimal: double doubleValue()>();

        b2 = 2;

        $b3 = d0 cmpl 1.7;

        if $b3 < 0 goto label2;

        b2 = 2;

     label1:
        return b2;

     label2:
        $b4 = d0 cmpl 1.6;

        if $b4 < 0 goto label3;

        return 4;

     label3:
        $b5 = d0 cmpl 1.5;

        if $b5 < 0 goto label4;

        return 1;

     label4:
        $b6 = d0 cmpl 1.3;

        if $b6 <= 0 goto label5;

        return 3;

     label5:
        $b7 = d0 cmpl 1.2;

        if $b7 < 0 goto label1;

        return 5;
    }

    int getAudioCodecType(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label4;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 5;
    }

    boolean getAudioflag()
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        boolean $z0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $z0 = r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mRegenerateAudio>;

        return $z0;
    }

    android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getEffectSettings(android.media.videoeditor.EffectColor)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.EffectColor r1;
        android.media.videoeditor.MediaArtistNativeHelper$EffectSettings r2, $r3;
        long $l0, $l2;
        int $i1, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.EffectColor;

        $r3 = new android.media.videoeditor.MediaArtistNativeHelper$EffectSettings;

        specialinvoke $r3.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: void <init>()>();

        r2 = $r3;

        $l0 = virtualinvoke r1.<android.media.videoeditor.EffectColor: long getStartTime()>();

        $i1 = (int) $l0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = $i1;

        $l2 = virtualinvoke r1.<android.media.videoeditor.EffectColor: long getDuration()>();

        $i3 = (int) $l2;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration> = $i3;

        $i4 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int getEffectColorType(android.media.videoeditor.EffectColor)>(r1);

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int videoEffectType> = $i4;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int audioEffectType> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startPercent> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int durationPercent> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String framingFile> = null;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int topLeftX> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int topLeftY> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: boolean framingResize> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String text> = null;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String textRenderingData> = null;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int textBufferWidth> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int textBufferHeight> = 0;

        $i5 = virtualinvoke r1.<android.media.videoeditor.EffectColor: int getType()>();

        if $i5 != 5 goto label4;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int fiftiesFrameRate> = 15;

     label1:
        $i6 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int videoEffectType>;

        if $i6 == 267 goto label2;

        $i8 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int videoEffectType>;

        if $i8 != 268 goto label3;

     label2:
        $i7 = virtualinvoke r1.<android.media.videoeditor.EffectColor: int getColor()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int rgb16InputColor> = $i7;

     label3:
        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingStartPercent> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingMiddlePercent> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingEndPercent> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingFadeInTimePercent> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingFadeOutTimePercent> = 0;

        return r2;

     label4:
        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int fiftiesFrameRate> = 0;

        goto label1;
    }

    int getFileType(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label9;
            case 3: goto label7;
            case 5: goto label5;
            case 8: goto label6;
            case 10: goto label8;
            case 255: goto label2;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 255;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 5;

     label6:
        return 8;

     label7:
        return 3;

     label8:
        return 10;

     label9:
        return 2;
    }

    int getFrameRate(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            case 7: goto label9;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 5;

     label3:
        return 8;

     label4:
        return 10;

     label5:
        return 13;

     label6:
        return 15;

     label7:
        return 20;

     label8:
        return 25;

     label9:
        return 30;
    }

    boolean getGeneratePreview()
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        boolean $z0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $z0 = r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mInvalidatePreviewArray>;

        return $z0;
    }

    int getMediaItemFileType(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 5: goto label5;
            case 8: goto label6;
            case 10: goto label7;
            case 255: goto label2;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 255;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 5;

     label6:
        return 8;

     label7:
        return 10;
    }

    int getMediaItemRenderingMode(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 2;

     label3:
        return 0;

     label4:
        return 1;
    }

    native android.media.videoeditor.MediaArtistNativeHelper$Properties getMediaProperties(java.lang.String) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.RuntimeException, java.lang.Exception;

    android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getOverlaySettings(android.media.videoeditor.OverlayFrame)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.OverlayFrame r1;
        android.media.videoeditor.MediaArtistNativeHelper$EffectSettings r2, $r5;
        android.graphics.Bitmap r3;
        int i0, i1, i2, i6, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        short s3, s4, s5, s7, $s19;
        long $l8, $l11;
        android.media.videoeditor.MediaItem $r6, $r7, $r8, $r10, $r11, $r14, $r16, $r18;
        boolean $z0;
        android.media.videoeditor.MediaImageItem $r9, $r13, $r15, $r17;
        java.lang.String $r12, $r19, $r21, $r32, $r34;
        android.graphics.Bitmap$Config $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        int[] $r29, $r30, $r31;
        java.io.IOException $r35;
        java.lang.RuntimeException $r36;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.OverlayFrame;

        $r5 = new android.media.videoeditor.MediaArtistNativeHelper$EffectSettings;

        specialinvoke $r5.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: void <init>()>();

        r2 = $r5;

        $l8 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: long getStartTime()>();

        $i9 = (int) $l8;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startTime> = $i9;

        $l11 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: long getDuration()>();

        $i10 = (int) $l11;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int duration> = $i10;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int videoEffectType> = 262;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int audioEffectType> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int startPercent> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int durationPercent> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String framingFile> = null;

        r3 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.graphics.Bitmap getBitmap()>();

        if r3 == null goto label16;

        $r21 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: java.lang.String getFilename()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String framingFile> = $r21;

        $r19 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String framingFile>;

        if $r19 != null goto label03;

     label01:
        $r32 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        virtualinvoke r1.<android.media.videoeditor.OverlayFrame: java.lang.String save(java.lang.String)>($r32);

     label02:
        $r34 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: java.lang.String getFilename()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String framingFile> = $r34;

     label03:
        $r20 = virtualinvoke r3.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r24 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        if $r20 != $r24 goto label10;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int bitmapType> = 6;

     label04:
        $i14 = virtualinvoke r3.<android.graphics.Bitmap: int getWidth()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int width> = $i14;

        $i17 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int height> = $i17;

        $i16 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int width>;

        $r29 = newarray (int)[$i16];

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int[] framingBuffer> = $r29;

        i2 = 0;

        s3 = 0;

        s4 = 255;

     label05:
        $i15 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int height>;

        if i2 >= $i15 goto label14;

        $r30 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int[] framingBuffer>;

        $i26 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int width>;

        $i31 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int width>;

        virtualinvoke r3.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>($r30, 0, $i26, 0, i2, $i31, 1);

        i6 = 0;

     label06:
        $i27 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int width>;

        if i6 >= $i27 goto label13;

        $r31 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int[] framingBuffer>;

        $i32 = $r31[i6];

        $i33 = $i32 >> 24;

        $i34 = 255 & $i33;

        s7 = (short) $i34;

        if s7 <= s3 goto label07;

        s3 = s7;

     label07:
        if s7 >= s4 goto label08;

        s4 = s7;

     label08:
        i6 = i6 + 1;

        goto label06;

     label09:
        $r35 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "getOverlaySettings : File not found");

        goto label02;

     label10:
        $r25 = virtualinvoke r3.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r22 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_4444>;

        if $r25 != $r22 goto label11;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int bitmapType> = 5;

        goto label04;

     label11:
        $r23 = virtualinvoke r3.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r28 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        if $r23 != $r28 goto label12;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int bitmapType> = 4;

        goto label04;

     label12:
        $r27 = virtualinvoke r3.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r26 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ALPHA_8>;

        if $r27 != $r26 goto label04;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>("Bitmap config not supported");

        throw $r36;

     label13:
        i2 = i2 + 1;

        goto label05;

     label14:
        $i21 = s3 + s4;

        $i20 = $i21 / 2;

        $s19 = (short) $i20;

        $i18 = 100 * $s19;

        $i25 = $i18 / 256;

        s5 = (short) $i25;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingEndPercent> = s5;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingMiddlePercent> = s5;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingStartPercent> = s5;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingFadeInTimePercent> = 100;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int alphaBlendingFadeOutTimePercent> = 100;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int[] framingBuffer> = null;

        $i24 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeWidth()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int width> = $i24;

        $i23 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int width>;

        if $i23 != 0 goto label15;

        $i30 = virtualinvoke r3.<android.graphics.Bitmap: int getWidth()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int width> = $i30;

     label15:
        $i22 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeHeight()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int height> = $i22;

        $i28 = r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int height>;

        if $i28 != 0 goto label16;

        $i29 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int height> = $i29;

     label16:
        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int topLeftX> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int topLeftY> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: boolean framingResize> = 1;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String text> = null;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: java.lang.String textRenderingData> = null;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int textBufferWidth> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int textBufferHeight> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int fiftiesFrameRate> = 0;

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int rgb16InputColor> = 0;

        $r6 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.media.videoeditor.MediaItem getMediaItem()>();

        $z0 = $r6 instanceof android.media.videoeditor.MediaImageItem;

        if $z0 == 0 goto label19;

        $r10 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.media.videoeditor.MediaItem getMediaItem()>();

        $r9 = (android.media.videoeditor.MediaImageItem) $r10;

        $r12 = virtualinvoke $r9.<android.media.videoeditor.MediaImageItem: java.lang.String getGeneratedImageClip()>();

        if $r12 == null goto label18;

        $r14 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.media.videoeditor.MediaItem getMediaItem()>();

        $r15 = (android.media.videoeditor.MediaImageItem) $r14;

        i1 = virtualinvoke $r15.<android.media.videoeditor.MediaImageItem: int getGeneratedClipHeight()>();

        $r18 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.media.videoeditor.MediaItem getMediaItem()>();

        $r17 = (android.media.videoeditor.MediaImageItem) $r18;

        $i13 = virtualinvoke $r17.<android.media.videoeditor.MediaImageItem: int getGeneratedClipWidth()>();

        i0 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int getAspectRatio(int,int)>($i13, i1);

     label17:
        $i12 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>(i0, i1);

        r2.<android.media.videoeditor.MediaArtistNativeHelper$EffectSettings: int framingScaledSize> = $i12;

        return r2;

     label18:
        $r11 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.media.videoeditor.MediaItem getMediaItem()>();

        $r13 = (android.media.videoeditor.MediaImageItem) $r11;

        i1 = virtualinvoke $r13.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        $r16 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.media.videoeditor.MediaItem getMediaItem()>();

        i0 = virtualinvoke $r16.<android.media.videoeditor.MediaItem: int getAspectRatio()>();

        goto label17;

     label19:
        $r7 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.media.videoeditor.MediaItem getMediaItem()>();

        i0 = virtualinvoke $r7.<android.media.videoeditor.MediaItem: int getAspectRatio()>();

        $r8 = virtualinvoke r1.<android.media.videoeditor.OverlayFrame: android.media.videoeditor.MediaItem getMediaItem()>();

        i1 = virtualinvoke $r8.<android.media.videoeditor.MediaItem: int getHeight()>();

        goto label17;

        catch java.io.IOException from label01 to label02 with label09;
    }

    android.graphics.Bitmap getPixels(java.lang.String, int, int, long, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String r1;
        int i0, i1, i3;
        long l2;
        android.graphics.Bitmap[] r2;
        int[] $r3;
        android.media.videoeditor.MediaArtistNativeHelper$1 $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        r2 = newarray (android.graphics.Bitmap)[1];

        $r3 = newarray (int)[1];

        $r3[0] = 0;

        $r4 = new android.media.videoeditor.MediaArtistNativeHelper$1;

        specialinvoke $r4.<android.media.videoeditor.MediaArtistNativeHelper$1: void <init>(android.media.videoeditor.MediaArtistNativeHelper,android.graphics.Bitmap[])>(r0, r2);

        virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void getPixelsList(java.lang.String,int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback,int)>(r1, i0, i1, l2, l2, 1, $r3, $r4, i3);

        $r5 = r2[0];

        return $r5;
    }

    void getPixelsList(java.lang.String, int, int, long, long, int, int[], android.media.videoeditor.MediaItem$GetThumbnailListCallback, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String r1;
        int i0, i1, i4, i5, i6, i7, i8, i9, i10, $i11, $i12;
        long l2, l3;
        int[] r2, r4;
        android.media.videoeditor.MediaItem$GetThumbnailListCallback r3;
        boolean z0, z1;
        java.nio.IntBuffer r5;
        android.graphics.Bitmap r6;
        android.media.videoeditor.MediaArtistNativeHelper$2 $r7;
        android.graphics.Bitmap$Config $r8;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        i4 := @parameter5: int;

        r2 := @parameter6: int[];

        r3 := @parameter7: android.media.videoeditor.MediaItem$GetThumbnailListCallback;

        i5 := @parameter8: int;

        $i12 = i0 + 1;

        i6 = -2 & $i12;

        $i11 = i1 + 1;

        i7 = -2 & $i11;

        i8 = i6 * i7;

        r4 = newarray (int)[i8];

        r5 = staticinvoke <java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>(i8);

        if i6 != i0 goto label01;

        if i7 != i1 goto label01;

        if i5 == 0 goto label09;

     label01:
        z0 = 1;

     label02:
        if z0 == 0 goto label10;

        $r8 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i6, i7, $r8);

     label03:
        if i5 == 90 goto label04;

        if i5 != 270 goto label11;

     label04:
        z1 = 1;

     label05:
        if z1 == 0 goto label12;

        i10 = i1;

     label06:
        if z1 == 0 goto label13;

        i9 = i0;

     label07:
        $r7 = new android.media.videoeditor.MediaArtistNativeHelper$2;

        specialinvoke $r7.<android.media.videoeditor.MediaArtistNativeHelper$2: void <init>(android.media.videoeditor.MediaArtistNativeHelper,int,int,java.nio.IntBuffer,int[],int,boolean,android.graphics.Bitmap,int,int,int,android.media.videoeditor.MediaItem$GetThumbnailListCallback)>(r0, i10, i9, r5, r4, i8, z0, r6, i6, i7, i5, r3);

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int nativeGetPixelsList(java.lang.String,int[],int,int,int,long,long,int[],android.media.videoeditor.MediaArtistNativeHelper$NativeGetPixelsListCallback)>(r1, r4, i6, i7, i4, l2, l3, r2, $r7);

        if r6 == null goto label08;

        virtualinvoke r6.<android.graphics.Bitmap: void recycle()>();

     label08:
        return;

     label09:
        z0 = 0;

        goto label02;

     label10:
        r6 = null;

        goto label03;

     label11:
        z1 = 0;

        goto label05;

     label12:
        i10 = i0;

        goto label06;

     label13:
        i9 = i1;

        goto label07;
    }

    java.lang.String getProjectAudioTrackPCMFilePath()
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String $r1;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $r1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath>;

        return $r1;
    }

    java.lang.String getProjectPath()
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String $r1;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $r1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        return $r1;
    }

    int getSlideSettingsDirection(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 0;

     label3:
        return 1;

     label4:
        return 2;

     label5:
        return 3;
    }

    int getVideoCodecType(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;
    }

    int getVideoTransitionBehaviour(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        return -1;

     label2:
        return 0;

     label3:
        return 2;

     label4:
        return 1;

     label5:
        return 3;

     label6:
        return 4;
    }

    void initClipSettings(android.media.videoeditor.MediaArtistNativeHelper$ClipSettings)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings r1;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipPath> = null;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipDecodedPath> = null;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipOriginalPath> = null;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int fileType> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutPercent> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutPercent> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: boolean panZoomEnabled> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int panZoomPercentStart> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int panZoomTopLeftXStart> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int panZoomTopLeftYStart> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int panZoomPercentEnd> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int panZoomTopLeftXEnd> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int panZoomTopLeftYEnd> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int mediaRendering> = 0;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int rotationDegree> = 0;

        return;
    }

    void invalidatePcmFile()
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String $r1, $r3;
        java.io.File $r2;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $r1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath>;

        if $r1 == null goto label1;

        $r2 = new java.io.File;

        $r3 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath>;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mAudioTrackPCMFilePath> = null;

     label1:
        return;
    }

    int nativeHelperGetAspectRatio()
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.media.videoeditor.VideoEditor $r1;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $r1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i0 = interfaceinvoke $r1.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        return $i0;
    }

    void previewStoryBoard(java.util.List, java.util.List, java.util.List, android.media.videoeditor.VideoEditor$MediaProcessingProgressListener)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.util.List r1, r2, r3, r13;
        android.media.videoeditor.VideoEditor$MediaProcessingProgressListener r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i23, $i24, $i25, $i28, $i29, $i32, $i33;
        java.util.Iterator r5;
        java.lang.RuntimeException r6, $r25, $r101;
        java.lang.IllegalStateException r7, $r93;
        java.lang.IllegalArgumentException r8, $r95, $r102, $r104, $r105;
        android.media.videoeditor.Transition r9, r11, $r100;
        android.media.videoeditor.MediaItem r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings $r16, $r19, $r20, $r27, $r29, $r45, $r50, $r53, $r82;
        android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties $r17, $r23, $r30, $r31, $r35, $r39, $r43, $r44, $r51, $r52, $r54, $r60, $r64, $r67, $r72, $r78, $r83, $r85, $r87;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] $r18, $r46;
        android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[] $r21, $r49;
        android.media.videoeditor.MediaArtistNativeHelper$Properties[] $r22, $r32, $r36, $r40, $r48, $r55, $r59, $r62, $r70, $r77, $r81, $r84, $r88;
        android.media.videoeditor.VideoEditor $r24;
        android.media.videoeditor.MediaArtistNativeHelper$AudioSettings $r26;
        java.lang.Object $r28, $r92, $r99;
        android.media.videoeditor.MediaArtistNativeHelper$Properties $r33, $r38, $r41, $r47, $r57, $r61, $r66, $r68, $r75, $r79, $r86, $r90;
        java.lang.String $r34, $r37, $r56, $r69, $r73, $r91;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings $r42;
        byte $b19, $b26, $b31;
        long $l22, $l27, $l30, $l35, $l36, $l37;
        android.media.videoeditor.MediaImageItem $r58, $r63, $r65, $r71, $r74, $r76, $r80, $r89, $r96;
        java.lang.Exception $r94, $r103, $r106;
        android.media.videoeditor.MediaVideoItem $r97, $r98;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: android.media.videoeditor.VideoEditor$MediaProcessingProgressListener;

        $z1 = r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mInvalidatePreviewArray>;

        if $z1 == 0 goto label29;

        i0 = 0;

        i1 = 0;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        i5 = 0;

        $r16 = new android.media.videoeditor.MediaArtistNativeHelper$EditSettings;

        specialinvoke $r16.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: void <init>()>();

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings> = $r16;

        $r17 = new android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties;

        specialinvoke $r17.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: void <init>()>();

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties> = $r17;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips> = 0;

        $i11 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips> = $i11;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label02;

        $r99 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r100 = (android.media.videoeditor.Transition) $r99;

        $l30 = virtualinvoke $r100.<android.media.videoeditor.Transition: long getDuration()>();

        $b31 = $l30 cmp 0L;

        if $b31 <= 0 goto label01;

        $i32 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips>;

        $i33 = 1 + $i32;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips> = $i33;

        goto label01;

     label02:
        i6 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int getTotalEffects(java.util.List)>(r1);

        $r20 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $i12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips>;

        $r18 = newarray (android.media.videoeditor.MediaArtistNativeHelper$ClipSettings)[$i12];

        $r20.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray> = $r18;

        $r19 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r21 = newarray (android.media.videoeditor.MediaArtistNativeHelper$EffectSettings)[i6];

        $r19.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[] effectSettingsArray> = $r21;

        $r23 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $i13 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mTotalClips>;

        $r22 = newarray (android.media.videoeditor.MediaArtistNativeHelper$Properties)[$i13];

        $r23.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties> = $r22;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor$MediaProcessingProgressListener mMediaProcessingProgressListener> = r4;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProgressToApp> = 0;

        $i14 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i14 <= 0 goto label13;

        i7 = 0;

     label03:
        $i15 = interfaceinvoke r1.<java.util.List: int size()>();

        if i7 >= $i15 goto label10;

        $r28 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r10 = (android.media.videoeditor.MediaItem) $r28;

        $z5 = r10 instanceof android.media.videoeditor.MediaVideoItem;

        if $z5 == 0 goto label14;

        $r97 = (android.media.videoeditor.MediaVideoItem) r10;

        $l36 = virtualinvoke $r97.<android.media.videoeditor.MediaVideoItem: long getBoundaryBeginTime()>();

        i3 = (int) $l36;

        $r98 = (android.media.videoeditor.MediaVideoItem) r10;

        $l37 = virtualinvoke $r98.<android.media.videoeditor.MediaVideoItem: long getBoundaryEndTime()>();

        i4 = (int) $l37;

     label04:
        r9 = virtualinvoke r10.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()>();

        if r9 == null goto label05;

        $l27 = virtualinvoke r9.<android.media.videoeditor.Transition: long getDuration()>();

        $b26 = $l27 cmp 0L;

        if $b26 <= 0 goto label05;

        $r82 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r83 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void generateTransition(android.media.videoeditor.Transition,android.media.videoeditor.MediaArtistNativeHelper$EditSettings,android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties,int)>(r9, $r82, $r83, i0);

        $r85 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r84 = $r85.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r86 = $r84[i0];

        $i28 = $r86.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int duration>;

        i1 = i1 + $i28;

        i0 = i0 + 1;

     label05:
        i2 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int populateMediaItemProperties(android.media.videoeditor.MediaItem,int,int)>(r10, i0, i2);

        $z6 = r10 instanceof android.media.videoeditor.MediaImageItem;

        if $z6 == 0 goto label22;

        i8 = 0;

        r13 = virtualinvoke r10.<android.media.videoeditor.MediaItem: java.util.List getAllEffects()>();

     label06:
        i10 = interfaceinvoke r13.<java.util.List: int size()>();

        i9 = i8;

        z0 = 0;

        if i9 >= i10 goto label07;

        $r92 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i8);

        $z8 = $r92 instanceof android.media.videoeditor.EffectKenBurns;

        if $z8 == 0 goto label15;

        z0 = 1;

     label07:
        if z0 == 0 goto label19;

     label08:
        $r74 = (android.media.videoeditor.MediaImageItem) r10;

        $r73 = virtualinvoke $r74.<android.media.videoeditor.MediaImageItem: java.lang.String getGeneratedImageClip()>();

        if $r73 == null goto label16;

        $r87 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r88 = $r87.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r89 = (android.media.videoeditor.MediaImageItem) r10;

        $r91 = virtualinvoke $r89.<android.media.videoeditor.MediaImageItem: java.lang.String getGeneratedImageClip()>();

        $r90 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$Properties getMediaProperties(java.lang.String)>($r91);

        $r88[i0] = $r90;

     label09:
        $r31 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r32 = $r31.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r33 = $r32[i0];

        $r34 = virtualinvoke r10.<android.media.videoeditor.MediaItem: java.lang.String getId()>();

        $r33.<android.media.videoeditor.MediaArtistNativeHelper$Properties: java.lang.String Id> = $r34;

        $r43 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void checkOddSizeImage(android.media.videoeditor.MediaItem,android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties,int)>(r10, $r43, i0);

        $r44 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void adjustVolume(android.media.videoeditor.MediaItem,android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties,int)>(r10, $r44, i0);

        $r45 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r46 = $r45.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r42 = $r46[i0];

        $r39 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r40 = $r39.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r41 = $r40[i0];

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void adjustMediaItemBoundary(android.media.videoeditor.MediaArtistNativeHelper$ClipSettings,android.media.videoeditor.MediaArtistNativeHelper$Properties,android.media.videoeditor.MediaItem)>($r42, $r41, r10);

        $r50 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r49 = $r50.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[] effectSettingsArray>;

        i5 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int populateEffects(android.media.videoeditor.MediaItem,android.media.videoeditor.MediaArtistNativeHelper$EffectSettings[],int,int,int,int)>(r10, $r49, i5, i3, i4, i1);

        $r51 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r48 = $r51.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r47 = $r48[i0];

        $i18 = $r47.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int duration>;

        i1 = i1 + $i18;

        i0 = i0 + 1;

        $i21 = interfaceinvoke r1.<java.util.List: int size()>();

        $i20 = -1 + $i21;

        if i7 != $i20 goto label25;

        r11 = virtualinvoke r10.<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()>();

        if r11 == null goto label25;

        $l22 = virtualinvoke r11.<android.media.videoeditor.Transition: long getDuration()>();

        $b19 = $l22 cmp 0L;

        if $b19 <= 0 goto label25;

        $r53 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r52 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void generateTransition(android.media.videoeditor.Transition,android.media.videoeditor.MediaArtistNativeHelper$EditSettings,android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties,int)>(r11, $r53, $r52, i0);

     label10:
        $z4 = r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mErrorFlagSet>;

        if $z4 != 0 goto label13;

        $r27 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r24 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.VideoEditor mVideoEditor>;

        $i17 = interfaceinvoke $r24.<android.media.videoeditor.VideoEditor: int getAspectRatio()>();

        $i16 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int findVideoResolution(int,int)>($i17, i2);

        $r27.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: int videoFrameSize> = $i16;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void populateBackgroundMusicProperties(java.util.List)>(r3);

     label11:
        $r29 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r30 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r26 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void nativePopulateSettings(android.media.videoeditor.MediaArtistNativeHelper$EditSettings,android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties,android.media.videoeditor.MediaArtistNativeHelper$AudioSettings)>($r29, $r30, $r26);

     label12:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mInvalidatePreviewArray> = 0;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mProcessingState> = 0;

     label13:
        $z3 = r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mErrorFlagSet>;

        if $z3 == 0 goto label29;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mErrorFlagSet> = 0;

        $r25 = new java.lang.RuntimeException;

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>("preview generation cannot be completed");

        throw $r25;

     label14:
        $z7 = r10 instanceof android.media.videoeditor.MediaImageItem;

        if $z7 == 0 goto label04;

        $r96 = (android.media.videoeditor.MediaImageItem) r10;

        $l35 = virtualinvoke $r96.<android.media.videoeditor.MediaImageItem: long getTimelineDuration()>();

        i4 = (int) $l35;

        i3 = 0;

        goto label04;

     label15:
        i8 = i8 + 1;

        goto label06;

     label16:
        $r72 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r70 = $r72.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r71 = (android.media.videoeditor.MediaImageItem) r10;

        $r69 = virtualinvoke $r71.<android.media.videoeditor.MediaImageItem: java.lang.String getScaledImageFileName()>();

        $r68 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$Properties getMediaProperties(java.lang.String)>($r69);

        $r70[i0] = $r68;

        $r67 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r81 = $r67.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r79 = $r81[i0];

        $r80 = (android.media.videoeditor.MediaImageItem) r10;

        $i25 = virtualinvoke $r80.<android.media.videoeditor.MediaImageItem: int getScaledWidth()>();

        $r79.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int width> = $i25;

        $r78 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r77 = $r78.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r75 = $r77[i0];

        $r76 = (android.media.videoeditor.MediaImageItem) r10;

        $i29 = virtualinvoke $r76.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        $r75.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int height> = $i29;

     label17:
        goto label09;

     label18:
        $r103 := @caughtexception;

        $r102 = new java.lang.IllegalArgumentException;

        specialinvoke $r102.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported file or file not found");

        throw $r102;

     label19:
        $r60 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r59 = $r60.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r58 = (android.media.videoeditor.MediaImageItem) r10;

        $r56 = virtualinvoke $r58.<android.media.videoeditor.MediaImageItem: java.lang.String getScaledImageFileName()>();

        $r57 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$Properties getMediaProperties(java.lang.String)>($r56);

        $r59[i0] = $r57;

     label20:
        $r54 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r55 = $r54.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r66 = $r55[i0];

        $r65 = (android.media.videoeditor.MediaImageItem) r10;

        $i24 = virtualinvoke $r65.<android.media.videoeditor.MediaImageItem: int getScaledWidth()>();

        $r66.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int width> = $i24;

        $r64 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r62 = $r64.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r61 = $r62[i0];

        $r63 = (android.media.videoeditor.MediaImageItem) r10;

        $i23 = virtualinvoke $r63.<android.media.videoeditor.MediaImageItem: int getScaledHeight()>();

        $r61.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int height> = $i23;

        goto label09;

     label21:
        $r106 := @caughtexception;

        $r105 = new java.lang.IllegalArgumentException;

        specialinvoke $r105.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported file or file not found");

        throw $r105;

     label22:
        $r35 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r36 = $r35.<android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties: android.media.videoeditor.MediaArtistNativeHelper$Properties[] clipProperties>;

        $r37 = virtualinvoke r10.<android.media.videoeditor.MediaItem: java.lang.String getFilename()>();

        $r38 = virtualinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$Properties getMediaProperties(java.lang.String)>($r37);

        $r36[i0] = $r38;

     label23:
        goto label09;

     label24:
        $r94 := @caughtexception;

        $r95 = new java.lang.IllegalArgumentException;

        specialinvoke $r95.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported file or file not found");

        throw $r95;

     label25:
        i7 = i7 + 1;

        goto label03;

     label26:
        $r104 := @caughtexception;

        r8 = $r104;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal argument exception in nativePopulateSettings");

        throw r8;

     label27:
        $r93 := @caughtexception;

        r7 = $r93;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal state exception in nativePopulateSettings");

        throw r7;

     label28:
        $r101 := @caughtexception;

        r6 = $r101;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Runtime exception in nativePopulateSettings");

        throw r6;

     label29:
        return;

        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.IllegalArgumentException from label11 to label12 with label26;
        catch java.lang.IllegalStateException from label11 to label12 with label27;
        catch java.lang.RuntimeException from label11 to label12 with label28;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label22 to label23 with label24;
    }

    void releaseNativeHelper() throws java.lang.InterruptedException
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void release()>();

        return;
    }

    long renderMediaItemPreviewFrame(android.view.Surface, java.lang.String, long, int, int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.view.Surface r1;
        java.lang.String r2;
        long l0, $l4;
        int i1, i2, i3;
        java.lang.RuntimeException r3, $r7;
        java.lang.IllegalStateException r4, $r6;
        java.lang.IllegalArgumentException r5, $r8;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.view.Surface;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

     label1:
        i3 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int nativeRenderMediaItemPreviewFrame(android.view.Surface,java.lang.String,int,int,int,int,long)>(r1, r2, i1, i2, 0, 0, l0);

     label2:
        $l4 = (long) i3;

        return $l4;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal Argument exception in renderMediaItemPreviewFrame");

        throw r5;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal state exception in renderMediaItemPreviewFrame");

        throw r4;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Runtime exception in renderMediaItemPreviewFrame");

        throw r3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    long renderPreviewFrame(android.view.Surface, long, int, int, android.media.videoeditor.VideoEditor$OverlayData)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        android.view.Surface r1;
        long l0, l4;
        int i1, i2, i3, $i5, $i6, $i7, $i8;
        android.media.videoeditor.VideoEditor$OverlayData r2;
        java.lang.RuntimeException r3, $r26;
        java.lang.IllegalStateException r4, $r24, $r25;
        java.lang.IllegalArgumentException r5, $r27;
        android.media.videoeditor.MediaArtistNativeHelper$EditSettings $r6, $r10, $r15, $r17, $r19;
        boolean $z0, $z1;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] $r7, $r14, $r18, $r20;
        android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties $r8;
        android.media.videoeditor.MediaArtistNativeHelper$AudioSettings $r9;
        java.lang.String $r11, $r12, $r23;
        android.graphics.Bitmap $r13;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings $r16, $r21, $r22;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: android.view.Surface;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.media.videoeditor.VideoEditor$OverlayData;

        $z0 = r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mInvalidatePreviewArray>;

        if $z0 == 0 goto label02;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaArtistNativeHelper", 3);

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Call generate preview first");

     label01:
        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Call generate preview first");

        throw $r25;

     label02:
        i3 = 0;

     label03:
        $r6 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r7 = $r6.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $i5 = lengthof $r7;

        if i3 >= $i5 goto label05;

        $r15 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r14 = $r15.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r16 = $r14[i3];

        $i8 = $r16.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int fileType>;

        if $i8 != 5 goto label12;

        $r19 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r20 = $r19.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r21 = $r20[i3];

        $r17 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r18 = $r17.<android.media.videoeditor.MediaArtistNativeHelper$EditSettings: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings[] clipSettingsArray>;

        $r22 = $r18[i3];

        $r23 = $r22.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipDecodedPath>;

        $r21.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipPath> = $r23;

     label04:
        goto label12;

     label05:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mRenderPreviewOverlayFile> = null;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mRenderPreviewRenderingMode> = 0;

        $r10 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EditSettings mPreviewEditSettings>;

        $r8 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties mClipProperties>;

        $r9 = r0.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$AudioSettings mAudioSettings>;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void nativePopulateSettings(android.media.videoeditor.MediaArtistNativeHelper$EditSettings,android.media.videoeditor.MediaArtistNativeHelper$PreviewClipProperties,android.media.videoeditor.MediaArtistNativeHelper$AudioSettings)>($r10, $r8, $r9);

        $i6 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int nativeRenderPreviewFrame(android.view.Surface,long,int,int)>(r1, l0, i1, i2);

        l4 = (long) $i6;

        $r12 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mRenderPreviewOverlayFile>;

        if $r12 == null goto label07;

        $r11 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mRenderPreviewOverlayFile>;

        $r13 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r11);

        $i7 = r0.<android.media.videoeditor.MediaArtistNativeHelper: int mRenderPreviewRenderingMode>;

        virtualinvoke r2.<android.media.videoeditor.VideoEditor$OverlayData: void set(android.graphics.Bitmap,int)>($r13, $i7);

     label06:
        return l4;

     label07:
        virtualinvoke r2.<android.media.videoeditor.VideoEditor$OverlayData: void setClear()>();

     label08:
        return l4;

     label09:
        $r27 := @caughtexception;

        r5 = $r27;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal Argument exception in nativeRenderPreviewFrame");

        throw r5;

     label10:
        $r24 := @caughtexception;

        r4 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal state exception in nativeRenderPreviewFrame");

        throw r4;

     label11:
        $r26 := @caughtexception;

        r3 = $r26;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Runtime exception in nativeRenderPreviewFrame");

        throw r3;

     label12:
        i3 = i3 + 1;

        goto label03;

        catch java.lang.IllegalArgumentException from label03 to label04 with label09;
        catch java.lang.IllegalStateException from label03 to label04 with label10;
        catch java.lang.RuntimeException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch java.lang.IllegalStateException from label05 to label06 with label10;
        catch java.lang.RuntimeException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalStateException from label07 to label08 with label10;
        catch java.lang.RuntimeException from label07 to label08 with label11;
    }

    void setAudioCodec(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mExportAudioCodec> = i0;

        return;
    }

    void setAudioflag(boolean)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        boolean z0, $z1;
        java.io.File $r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;
        java.lang.String $r3, $r7, $r9;
        java.lang.Object[] $r8;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        z0 := @parameter0: boolean;

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mProjectPath>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioPcm.pcm");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[0];

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r9);

        $z1 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        z0 = 1;

     label1:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mRegenerateAudio> = z0;

        return;
    }

    void setGeneratePreview(boolean)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        boolean z0, z1;
        java.lang.Throwable r1, $r4;
        java.lang.InterruptedException $r3;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        z0 := @parameter0: boolean;

        z1 = 0;

     label01:
        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void lock()>();

     label02:
        z1 = 1;

     label03:
        r0.<android.media.videoeditor.MediaArtistNativeHelper: boolean mInvalidatePreviewArray> = z0;

     label04:
        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void unlock()>();

     label05:
        return;

     label06:
        $r3 := @caughtexception;

     label07:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Runtime exception in renderMediaItemPreviewFrame");

     label08:
        goto label05;

     label09:
        $r4 := @caughtexception;

        r1 = $r4;

        if z1 == 0 goto label10;

        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void unlock()>();

     label10:
        throw r1;

        catch java.lang.InterruptedException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.InterruptedException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    void setVideoCodec(int)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int i0;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        i0 := @parameter0: int;

        r0.<android.media.videoeditor.MediaArtistNativeHelper: int mExportVideoCodec> = i0;

        return;
    }

    void stop(java.lang.String)
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        java.lang.String r1, $r5;
        java.lang.RuntimeException r2, $r7;
        java.lang.IllegalStateException r3, $r6;
        java.io.File $r4;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        r1 := @parameter0: java.lang.String;

     label1:
        specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: void stopEncoding()>();

        $r4 = new java.io.File;

        $r5 = r0.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String mExportFilename>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Illegal state exception in unload settings");

        throw r3;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaArtistNativeHelper", "Runtime exception in unload settings");

        throw r2;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    long stopPreview()
    {
        android.media.videoeditor.MediaArtistNativeHelper r0;
        int $i0;
        long $l1;

        r0 := @this: android.media.videoeditor.MediaArtistNativeHelper;

        $i0 = specialinvoke r0.<android.media.videoeditor.MediaArtistNativeHelper: int nativeStopPreview()>();

        $l1 = (long) $i0;

        return $l1;
    }
}
