class android.provider.ContactsContract$Groups$EntityIteratorImpl extends android.content.CursorEntityIterator
{

    public void <init>(android.database.Cursor)
    {
        android.provider.ContactsContract$Groups$EntityIteratorImpl r0;
        android.database.Cursor r1;

        r0 := @this: android.provider.ContactsContract$Groups$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        specialinvoke r0.<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>(r1);

        return;
    }

    public android.content.Entity getEntityAndIncrementCursor(android.database.Cursor) throws android.os.RemoteException
    {
        android.provider.ContactsContract$Groups$EntityIteratorImpl r0;
        android.database.Cursor r1;
        android.content.ContentValues r2, $r3;
        android.content.Entity $r4;

        r0 := @this: android.provider.ContactsContract$Groups$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        r2 = $r3;

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "_id");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "account_name");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "account_type");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "dirty");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "version");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sourceid");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "res_package");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "title");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "title_res");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "group_visible");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync1");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync2");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync3");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync4");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "system_id");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "deleted");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "notes");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "should_sync");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "favorites");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "auto_add");

        interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        $r4 = new android.content.Entity;

        specialinvoke $r4.<android.content.Entity: void <init>(android.content.ContentValues)>(r2);

        return $r4;
    }
}
