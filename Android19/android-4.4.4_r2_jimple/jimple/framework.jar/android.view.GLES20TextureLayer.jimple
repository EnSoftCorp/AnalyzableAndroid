class android.view.GLES20TextureLayer extends android.view.GLES20Layer
{
    private android.graphics.SurfaceTexture mSurface;
    private int mTexture;

    void <init>(boolean)
    {
        android.view.GLES20TextureLayer r0;
        boolean z0;
        int[] r1;
        int $i0, $i1, $i2, $i3;
        android.view.GLES20Layer$Finalizer $r2;

        r0 := @this: android.view.GLES20TextureLayer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.GLES20Layer: void <init>()>();

        r1 = newarray (int)[2];

        $i0 = staticinvoke <android.view.GLES20Canvas: int nCreateTextureLayer(boolean,int[])>(z0, r1);

        r0.<android.view.GLES20TextureLayer: int mLayer> = $i0;

        $i1 = r0.<android.view.GLES20TextureLayer: int mLayer>;

        if $i1 == 0 goto label1;

        $i2 = r1[0];

        r0.<android.view.GLES20TextureLayer: int mTexture> = $i2;

        $r2 = new android.view.GLES20Layer$Finalizer;

        $i3 = r0.<android.view.GLES20TextureLayer: int mLayer>;

        specialinvoke $r2.<android.view.GLES20Layer$Finalizer: void <init>(int)>($i3);

        r0.<android.view.GLES20TextureLayer: android.view.GLES20Layer$Finalizer mFinalizer> = $r2;

        return;

     label1:
        r0.<android.view.GLES20TextureLayer: android.view.GLES20Layer$Finalizer mFinalizer> = null;

        return;
    }

    void end(android.graphics.Canvas)
    {
        android.view.GLES20TextureLayer r0;
        android.graphics.Canvas r1;

        r0 := @this: android.view.GLES20TextureLayer;

        r1 := @parameter0: android.graphics.Canvas;

        return;
    }

    android.view.HardwareCanvas getCanvas()
    {
        android.view.GLES20TextureLayer r0;

        r0 := @this: android.view.GLES20TextureLayer;

        return null;
    }

    android.graphics.SurfaceTexture getSurfaceTexture()
    {
        android.view.GLES20TextureLayer r0;
        android.graphics.SurfaceTexture $r1, $r2, $r3;
        int $i0;

        r0 := @this: android.view.GLES20TextureLayer;

        $r1 = r0.<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture mSurface>;

        if $r1 != null goto label1;

        $r3 = new android.graphics.SurfaceTexture;

        $i0 = r0.<android.view.GLES20TextureLayer: int mTexture>;

        specialinvoke $r3.<android.graphics.SurfaceTexture: void <init>(int)>($i0);

        r0.<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture mSurface> = $r3;

     label1:
        $r2 = r0.<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture mSurface>;

        return $r2;
    }

    boolean isValid()
    {
        android.view.GLES20TextureLayer r0;
        int $i0, $i1;

        r0 := @this: android.view.GLES20TextureLayer;

        $i0 = r0.<android.view.GLES20TextureLayer: int mLayer>;

        if $i0 == 0 goto label1;

        $i1 = r0.<android.view.GLES20TextureLayer: int mTexture>;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void redrawLater(android.view.DisplayList, android.graphics.Rect)
    {
        android.view.GLES20TextureLayer r0;
        android.view.DisplayList r1;
        android.graphics.Rect r2;

        r0 := @this: android.view.GLES20TextureLayer;

        r1 := @parameter0: android.view.DisplayList;

        r2 := @parameter1: android.graphics.Rect;

        return;
    }

    boolean resize(int, int)
    {
        android.view.GLES20TextureLayer r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: android.view.GLES20TextureLayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.view.GLES20TextureLayer: boolean isValid()>();

        return $z0;
    }

    void setOpaque(boolean)
    {
        android.view.GLES20TextureLayer r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.view.GLES20TextureLayer;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Use update(int, int, boolean) instead");

        throw $r1;
    }

    void setSurfaceTexture(android.graphics.SurfaceTexture)
    {
        android.view.GLES20TextureLayer r0;
        android.graphics.SurfaceTexture r1, $r2, $r3, $r4;
        int $i0;

        r0 := @this: android.view.GLES20TextureLayer;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture mSurface>;

        if $r2 == null goto label1;

        $r4 = r0.<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture mSurface>;

        virtualinvoke $r4.<android.graphics.SurfaceTexture: void release()>();

     label1:
        r0.<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture mSurface> = r1;

        $r3 = r0.<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture mSurface>;

        $i0 = r0.<android.view.GLES20TextureLayer: int mTexture>;

        virtualinvoke $r3.<android.graphics.SurfaceTexture: void attachToGLContext(int)>($i0);

        return;
    }

    void setTransform(android.graphics.Matrix)
    {
        android.view.GLES20TextureLayer r0;
        android.graphics.Matrix r1;
        int $i0, $i1;

        r0 := @this: android.view.GLES20TextureLayer;

        r1 := @parameter0: android.graphics.Matrix;

        $i1 = r0.<android.view.GLES20TextureLayer: int mLayer>;

        $i0 = r1.<android.graphics.Matrix: int native_instance>;

        staticinvoke <android.view.GLES20Canvas: void nSetTextureLayerTransform(int,int)>($i1, $i0);

        return;
    }

    android.view.HardwareCanvas start(android.graphics.Canvas)
    {
        android.view.GLES20TextureLayer r0;
        android.graphics.Canvas r1;

        r0 := @this: android.view.GLES20TextureLayer;

        r1 := @parameter0: android.graphics.Canvas;

        return null;
    }

    android.view.HardwareCanvas start(android.graphics.Canvas, android.graphics.Rect)
    {
        android.view.GLES20TextureLayer r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;

        r0 := @this: android.view.GLES20TextureLayer;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Rect;

        return null;
    }

    void update(int, int, boolean)
    {
        android.view.GLES20TextureLayer r0;
        int i0, i1, $i2;
        boolean z0;
        android.graphics.SurfaceTexture $r1;

        r0 := @this: android.view.GLES20TextureLayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.view.GLES20Layer: void update(int,int,boolean)>(i0, i1, z0);

        $i2 = r0.<android.view.GLES20TextureLayer: int mLayer>;

        $r1 = r0.<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture mSurface>;

        staticinvoke <android.view.GLES20Canvas: void nUpdateTextureLayer(int,int,int,boolean,android.graphics.SurfaceTexture)>($i2, i0, i1, z0, $r1);

        return;
    }
}
