public final class android.gesture.GestureUtils extends java.lang.Object
{
    private static final float NONUNIFORM_SCALE;
    private static final float SCALING_THRESHOLD;

    static void <clinit>()
    {
        double $d0;
        float $f0;

        <android.gesture.GestureUtils: float SCALING_THRESHOLD> = 0.26F;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $f0 = (float) $d0;

        <android.gesture.GestureUtils: float NONUNIFORM_SCALE> = $f0;

        return;
    }

    private void <init>()
    {
        android.gesture.GestureUtils r0;

        r0 := @this: android.gesture.GestureUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void closeStream(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.io.IOException r1, $r2;

        r0 := @parameter0: java.io.Closeable;

        if r0 == null goto label2;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Gestures", "Could not close stream", r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static float[] computeCentroid(float[])
    {
        float[] r0, r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int i0, i1, i2;

        r0 := @parameter0: float[];

        f0 = 0.0F;

        f1 = 0.0F;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f8 = r0[i1];

        f0 = f0 + $f8;

        i2 = i1 + 1;

        $f9 = r0[i2];

        f1 = f1 + $f9;

        i1 = i2 + 1;

        goto label1;

     label2:
        r1 = newarray (float)[2];

        $f3 = 2.0F * f0;

        $f2 = (float) i0;

        $f4 = $f3 / $f2;

        r1[0] = $f4;

        $f6 = 2.0F * f1;

        $f5 = (float) i0;

        $f7 = $f6 / $f5;

        r1[1] = $f7;

        return r1;
    }

    private static float[][] computeCoVariance(float[])
    {
        float[] r0, r3, r4, r5, r6, r7, r8, r9, $r13, $r14, $r15, $r16, $r17, $r18;
        int[] r1, $r10;
        float[][] r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        java.lang.Object $r11;
        java.lang.Class $r12;

        r0 := @parameter0: float[];

        $r10 = newarray (int)[2];

        $r10[0] = 2;

        $r10[1] = 2;

        r1 = $r10;

        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        $r11 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r12, r1);

        r2 = (float[][]) $r11;

        $r14 = r2[0];

        $r14[0] = 0.0F;

        $r13 = r2[0];

        $r13[1] = 0.0F;

        $r16 = r2[1];

        $r16[0] = 0.0F;

        $r15 = r2[1];

        $r15[1] = 0.0F;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        f0 = r0[i1];

        i2 = i1 + 1;

        f1 = r0[i2];

        r7 = r2[0];

        $f13 = r7[0];

        $f12 = f0 * f0;

        $f18 = $f13 + $f12;

        r7[0] = $f18;

        r8 = r2[0];

        $f16 = r8[1];

        $f19 = f0 * f1;

        $f17 = $f16 + $f19;

        r8[1] = $f17;

        $r17 = r2[1];

        $r18 = r2[0];

        $f21 = $r18[1];

        $r17[0] = $f21;

        r9 = r2[1];

        $f23 = r9[1];

        $f20 = f1 * f1;

        $f22 = $f23 + $f20;

        r9[1] = $f22;

        i1 = i2 + 1;

        goto label1;

     label2:
        r3 = r2[0];

        $f4 = r3[0];

        $i3 = i0 / 2;

        $f2 = (float) $i3;

        $f3 = $f4 / $f2;

        r3[0] = $f3;

        r4 = r2[0];

        $f7 = r4[1];

        $i4 = i0 / 2;

        $f5 = (float) $i4;

        $f6 = $f7 / $f5;

        r4[1] = $f6;

        r5 = r2[1];

        $f10 = r5[0];

        $i5 = i0 / 2;

        $f8 = (float) $i5;

        $f11 = $f10 / $f8;

        r5[0] = $f11;

        r6 = r2[1];

        $f14 = r6[1];

        $i6 = i0 / 2;

        $f9 = (float) $i6;

        $f15 = $f14 / $f9;

        r6[1] = $f15;

        return r2;
    }

    private static float[] computeOrientation(float[][])
    {
        float[][] r0;
        float[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        byte $b0, $b1, $b2, $b3;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @parameter0: float[][];

        r1 = newarray (float)[2];

        $r2 = r0[0];

        $f7 = $r2[1];

        $b0 = $f7 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $r11 = r0[1];

        $f21 = $r11[0];

        $b3 = $f21 cmpl 0.0F;

        if $b3 != 0 goto label2;

     label1:
        r1[0] = 1.0F;

        r1[1] = 0.0F;

     label2:
        $r3 = r0[0];

        $f8 = $r3[0];

        $f10 = neg $f8;

        $r4 = r0[1];

        $f9 = $r4[1];

        f0 = $f10 - $f9;

        $r5 = r0[0];

        $f12 = $r5[0];

        $r6 = r0[1];

        $f11 = $r6[1];

        $f16 = $f12 * $f11;

        $r7 = r0[0];

        $f15 = $r7[1];

        $r8 = r0[1];

        $f13 = $r8[0];

        $f14 = $f15 * $f13;

        f1 = $f16 - $f14;

        f2 = f0 / 2.0F;

        $d0 = (double) f2;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);

        $d1 = (double) f1;

        $d4 = $d2 - $d1;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        f3 = (float) $d3;

        $f17 = neg f2;

        f4 = f3 + $f17;

        $f18 = neg f2;

        f5 = $f18 - f3;

        $b1 = f4 cmpl f5;

        if $b1 != 0 goto label3;

        r1[0] = 0.0F;

        r1[1] = 0.0F;

        return r1;

     label3:
        $b2 = f4 cmpl f5;

        if $b2 <= 0 goto label5;

        f6 = f4;

     label4:
        r1[0] = 1.0F;

        $r10 = r0[0];

        $f20 = $r10[0];

        $f22 = f6 - $f20;

        $r9 = r0[0];

        $f19 = $r9[1];

        $f23 = $f22 / $f19;

        r1[1] = $f23;

        return r1;

     label5:
        f6 = f5;

        goto label4;
    }

    public static android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        int i0, i1, i2, $i3, $i4;
        float[] r1, $r3;
        android.gesture.GesturePoint r2;
        android.gesture.OrientedBoundingBox $r4;
        java.lang.Object $r5;
        float $f0, $f1;

        r0 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $i3 = i0 * 2;

        r1 = newarray (float)[$i3];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.gesture.GesturePoint) $r5;

        i2 = i1 * 2;

        $f0 = r2.<android.gesture.GesturePoint: float x>;

        r1[i2] = $f0;

        $i4 = i2 + 1;

        $f1 = r2.<android.gesture.GesturePoint: float y>;

        r1[$i4] = $f1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <android.gesture.GestureUtils: float[] computeCentroid(float[])>(r1);

        $r4 = staticinvoke <android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[],float[])>(r1, $r3);

        return $r4;
    }

    public static android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])
    {
        float[] r0, r1, $r2;
        int i0, i1;
        android.gesture.OrientedBoundingBox $r3;
        float $f0;

        r0 := @parameter0: float[];

        i0 = lengthof r0;

        r1 = newarray (float)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f0 = r0[i1];

        r1[i1] = $f0;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = staticinvoke <android.gesture.GestureUtils: float[] computeCentroid(float[])>(r1);

        $r3 = staticinvoke <android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[],float[])>(r1, $r2);

        return $r3;
    }

    private static android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[], float[])
    {
        float[] r0, r1, r2;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        int i0, i1, i2;
        float[][] $r4;
        byte $b3, $b4, $b5, $b6, $b7, $b8;
        double $d0, $d1, $d2, $d3, $d4;
        android.gesture.OrientedBoundingBox $r5;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        $f5 = r1[0];

        $f8 = neg $f5;

        $f6 = r1[1];

        $f7 = neg $f6;

        staticinvoke <android.gesture.GestureUtils: float[] translate(float[],float,float)>(r0, $f8, $f7);

        $r4 = staticinvoke <android.gesture.GestureUtils: float[][] computeCoVariance(float[])>(r0);

        r2 = staticinvoke <android.gesture.GestureUtils: float[] computeOrientation(float[][])>($r4);

        $f9 = r2[0];

        $b3 = $f9 cmpl 0.0F;

        if $b3 != 0 goto label7;

        $f22 = r2[1];

        $b7 = $f22 cmpl 0.0F;

        if $b7 != 0 goto label7;

        f0 = -1.5707964F;

     label1:
        f1 = 3.4028235E38F;

        f2 = 3.4028235E38F;

        f3 = 1.4E-45F;

        f4 = 1.4E-45F;

        i0 = lengthof r0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label8;

        $f17 = r0[i1];

        $b4 = $f17 cmpg f1;

        if $b4 >= 0 goto label3;

        f1 = r0[i1];

     label3:
        $f21 = r0[i1];

        $b6 = $f21 cmpl f3;

        if $b6 <= 0 goto label4;

        f3 = r0[i1];

     label4:
        i2 = i1 + 1;

        $f20 = r0[i2];

        $b5 = $f20 cmpg f2;

        if $b5 >= 0 goto label5;

        f2 = r0[i2];

     label5:
        $f23 = r0[i2];

        $b8 = $f23 cmpl f4;

        if $b8 <= 0 goto label6;

        f4 = r0[i2];

     label6:
        i1 = i2 + 1;

        goto label2;

     label7:
        $f11 = r2[1];

        $d0 = (double) $f11;

        $f10 = r2[0];

        $d1 = (double) $f10;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        f0 = (float) $d2;

        $f12 = neg f0;

        staticinvoke <android.gesture.GestureUtils: float[] rotate(float[],float)>(r0, $f12);

        goto label1;

     label8:
        $r5 = new android.gesture.OrientedBoundingBox;

        $f13 = 180.0F * f0;

        $d3 = (double) $f13;

        $d4 = $d3 / 3.141592653589793;

        $f19 = (float) $d4;

        $f18 = r1[0];

        $f15 = r1[1];

        $f14 = f3 - f1;

        $f16 = f4 - f2;

        specialinvoke $r5.<android.gesture.OrientedBoundingBox: void <init>(float,float,float,float,float)>($f19, $f18, $f15, $f14, $f16);

        return $r5;
    }

    static float computeStraightness(float[])
    {
        float[] r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        double $d0, $d1;

        r0 := @parameter0: float[];

        f0 = staticinvoke <android.gesture.GestureUtils: float computeTotalLength(float[])>(r0);

        $f4 = r0[2];

        $f3 = r0[0];

        f1 = $f4 - $f3;

        $f6 = r0[3];

        $f5 = r0[1];

        f2 = $f6 - $f5;

        $f8 = f1 * f1;

        $f7 = f2 * f2;

        $f9 = $f8 + $f7;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f10 = (float) $d1;

        $f11 = $f10 / f0;

        return $f11;
    }

    static float computeStraightness(float[], float)
    {
        float[] r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        double $d0, $d1;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        $f4 = r0[2];

        $f3 = r0[0];

        f1 = $f4 - $f3;

        $f6 = r0[3];

        $f5 = r0[1];

        f2 = $f6 - $f5;

        $f8 = f1 * f1;

        $f7 = f2 * f2;

        $f9 = $f8 + $f7;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f10 = (float) $d1;

        $f11 = $f10 / f0;

        return $f11;
    }

    static float computeTotalLength(float[])
    {
        float[] r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int i0, i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3;

        r0 := @parameter0: float[];

        f0 = 0.0F;

        $i2 = lengthof r0;

        i0 = -4 + $i2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i3 = i1 + 2;

        $f4 = r0[$i3];

        $f3 = r0[i1];

        f1 = $f4 - $f3;

        $i4 = i1 + 3;

        $f6 = r0[$i4];

        $i5 = i1 + 1;

        $f5 = r0[$i5];

        f2 = $f6 - $f5;

        $d2 = (double) f0;

        $f8 = f1 * f1;

        $f7 = f2 * f2;

        $f9 = $f8 + $f7;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $d3 = $d2 + $d1;

        f0 = (float) $d3;

        i1 = i1 + 2;

        goto label1;

     label2:
        return f0;
    }

    static float cosineDistance(float[], float[])
    {
        float[] r0, r1;
        float f0, $f1, $f2, $f3, $f4;
        int i0, i1;
        double $d0, $d1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = 0.0F;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f3 = r0[i1];

        $f2 = r1[i1];

        $f4 = $f3 * $f2;

        f0 = f0 + $f4;

        i1 = i1 + 1;

        goto label1;

     label2:
        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double acos(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    static float minimumCosineDistance(float[], float[], int)
    {
        float[] r0, r1;
        int i0, i1, i2, $i5, $i6, $i7, $i8;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b3, $b4;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        i1 = lengthof r0;

        f0 = 0.0F;

        f1 = 0.0F;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $f4 = r0[i2];

        $f6 = r1[i2];

        $f11 = $f4 * $f6;

        $i5 = i2 + 1;

        $f7 = r0[$i5];

        $i6 = i2 + 1;

        $f9 = r1[$i6];

        $f8 = $f7 * $f9;

        $f12 = $f11 + $f8;

        f0 = f0 + $f12;

        $f15 = r0[i2];

        $i7 = i2 + 1;

        $f10 = r1[$i7];

        $f17 = $f15 * $f10;

        $i8 = i2 + 1;

        $f14 = r0[$i8];

        $f13 = r1[i2];

        $f18 = $f14 * $f13;

        $f16 = $f17 - $f18;

        f1 = f1 + $f16;

        i2 = i2 + 2;

        goto label1;

     label2:
        $b3 = f0 cmpl 0.0F;

        if $b3 == 0 goto label4;

        f2 = f1 / f0;

        $d3 = (double) f2;

        d0 = staticinvoke <java.lang.Math: double atan(double)>($d3);

        if i0 <= 2 goto label3;

        $d12 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $d11 = (double) i0;

        $d13 = 3.141592653589793 / $d11;

        $b4 = $d12 cmpl $d13;

        if $b4 < 0 goto label3;

        $d15 = (double) f0;

        $d14 = staticinvoke <java.lang.Math: double acos(double)>($d15);

        $f5 = (float) $d14;

        return $f5;

     label3:
        d1 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d5 = (double) f2;

        d2 = d1 * $d5;

        $d4 = (double) f0;

        $d9 = d1 * $d4;

        $d7 = (double) f1;

        $d6 = d2 * $d7;

        $d8 = $d9 + $d6;

        $d10 = staticinvoke <java.lang.Math: double acos(double)>($d8);

        $f3 = (float) $d10;

        return $f3;

     label4:
        return 1.5707964F;
    }

    private static void plot(float, float, float[], int)
    {
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        float[] r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i13, $i15, $i17, $i20, $i23;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        byte $b10, $b11, $b12, $b14, $b16, $b18, $b19, $b21, $b22;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0 := @parameter2: float[];

        i0 := @parameter3: int;

        $b11 = f0 cmpg 0.0F;

        if $b11 >= 0 goto label1;

        f0 = 0.0F;

     label1:
        $b10 = f1 cmpg 0.0F;

        if $b10 >= 0 goto label2;

        f1 = 0.0F;

     label2:
        $d6 = (double) f0;

        $d7 = staticinvoke <java.lang.Math: double floor(double)>($d6);

        i1 = (int) $d7;

        $d4 = (double) f0;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        i2 = (int) $d5;

        $d10 = (double) f1;

        $d11 = staticinvoke <java.lang.Math: double floor(double)>($d10);

        i3 = (int) $d11;

        $d8 = (double) f1;

        $d9 = staticinvoke <java.lang.Math: double ceil(double)>($d8);

        i4 = (int) $d9;

        $f13 = (float) i1;

        $b12 = f0 cmpl $f13;

        if $b12 != 0 goto label4;

        $f26 = (float) i3;

        $b22 = f1 cmpl $f26;

        if $b22 != 0 goto label4;

        $i23 = i4 * i0;

        i8 = i2 + $i23;

        $f27 = r0[i8];

        $b21 = $f27 cmpg 1.0F;

        if $b21 >= 0 goto label3;

        r0[i8] = 1.0F;

     label3:
        return;

     label4:
        $f11 = (float) i1;

        $f12 = $f11 - f0;

        $d12 = (double) $f12;

        d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, 2.0);

        $f14 = (float) i3;

        $f15 = $f14 - f1;

        $d13 = (double) $f15;

        d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d13, 2.0);

        $f17 = (float) i2;

        $f16 = $f17 - f0;

        $d14 = (double) $f16;

        d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, 2.0);

        $f19 = (float) i4;

        $f18 = $f19 - f1;

        $d17 = (double) $f18;

        d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d17, 2.0);

        $d16 = d0 + d1;

        $d15 = staticinvoke <java.lang.Math: double sqrt(double)>($d16);

        f3 = (float) $d15;

        $d21 = d2 + d1;

        $d20 = staticinvoke <java.lang.Math: double sqrt(double)>($d21);

        f2 = (float) $d20;

        $d19 = d0 + d3;

        $d18 = staticinvoke <java.lang.Math: double sqrt(double)>($d19);

        f5 = (float) $d18;

        $d22 = d2 + d3;

        $d23 = staticinvoke <java.lang.Math: double sqrt(double)>($d22);

        f4 = (float) $d23;

        $f21 = f3 + f2;

        $f22 = f5 + $f21;

        f7 = f4 + $f22;

        f6 = f3 / f7;

        $i13 = i3 * i0;

        i5 = i1 + $i13;

        $f20 = r0[i5];

        $b14 = f6 cmpl $f20;

        if $b14 <= 0 goto label5;

        r0[i5] = f6;

     label5:
        f8 = f2 / f7;

        $i15 = i3 * i0;

        i6 = i2 + $i15;

        $f24 = r0[i6];

        $b19 = f8 cmpl $f24;

        if $b19 <= 0 goto label6;

        r0[i6] = f8;

     label6:
        f9 = f5 / f7;

        $i20 = i4 * i0;

        i7 = i1 + $i20;

        $f25 = r0[i7];

        $b16 = f9 cmpl $f25;

        if $b16 <= 0 goto label7;

        r0[i7] = f9;

     label7:
        f10 = f4 / f7;

        $i17 = i4 * i0;

        i9 = i2 + $i17;

        $f23 = r0[i9];

        $b18 = f10 cmpl $f23;

        if $b18 <= 0 goto label3;

        r0[i9] = f10;

        return;
    }

    static float[] rotate(float[], float)
    {
        float[] r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int i0, i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f1 = (float) $d1;

        $d2 = (double) f0;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        f2 = (float) $d3;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f5 = r0[i1];

        $f9 = f1 * $f5;

        $i2 = i1 + 1;

        $f6 = r0[$i2];

        $f7 = f2 * $f6;

        f3 = $f9 - $f7;

        $f8 = r0[i1];

        $f11 = f2 * $f8;

        $i3 = i1 + 1;

        $f10 = r0[$i3];

        $f12 = f1 * $f10;

        f4 = $f11 + $f12;

        r0[i1] = f3;

        $i4 = i1 + 1;

        r0[$i4] = f4;

        i1 = i1 + 2;

        goto label1;

     label2:
        return r0;
    }

    static float[] scale(float[], float, float)
    {
        float[] r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0, i1, i2;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f2 = r0[i1];

        $f3 = f0 * $f2;

        r0[i1] = $f3;

        i2 = i1 + 1;

        $f4 = r0[i2];

        $f5 = f1 * $f4;

        r0[i2] = $f5;

        i1 = i1 + 2;

        goto label1;

     label2:
        return r0;
    }

    public static float[] spatialSampling(android.gesture.Gesture, int)
    {
        android.gesture.Gesture r0;
        int i0;
        float[] $r1;

        r0 := @parameter0: android.gesture.Gesture;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static float[] spatialSampling(android.gesture.Gesture, int, boolean)
    {
        android.gesture.Gesture r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i12, $i15, $i28, $i29;
        boolean z0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59;
        float[] r1, r4, r5;
        android.graphics.RectF r2;
        java.util.ArrayList r3;
        byte $b8, $b9, $b10, $b11, $b13, $b14, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b27, $b30, $b31;
        java.lang.Object $r6;
        android.gesture.GestureStroke $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @parameter0: android.gesture.Gesture;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i7 = i0 - 1;

        f0 = (float) $i7;

        $i6 = i0 * i0;

        r1 = newarray (float)[$i6];

        staticinvoke <java.util.Arrays: void fill(float[],float)>(r1, 0.0F);

        r2 = virtualinvoke r0.<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>();

        f1 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        f2 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        f3 = f0 / f1;

        f4 = f0 / f2;

        if z0 == 0 goto label06;

        $b30 = f3 cmpg f4;

        if $b30 >= 0 goto label05;

        f27 = f3;

     label01:
        f3 = f27;

        f4 = f27;

     label02:
        $f28 = virtualinvoke r2.<android.graphics.RectF: float centerX()>();

        f7 = neg $f28;

        $f30 = virtualinvoke r2.<android.graphics.RectF: float centerY()>();

        f8 = neg $f30;

        f9 = f0 / 2.0F;

        f10 = f0 / 2.0F;

        r3 = virtualinvoke r0.<android.gesture.Gesture: java.util.ArrayList getStrokes()>();

        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label03:
        if i2 >= i1 goto label29;

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = (android.gesture.GestureStroke) $r6;

        r4 = $r7.<android.gesture.GestureStroke: float[] points>;

        i3 = lengthof r4;

        r5 = newarray (float)[i3];

        i4 = 0;

     label04:
        if i4 >= i3 goto label12;

        $f50 = r4[i4];

        $f51 = f7 + $f50;

        $f48 = f3 * $f51;

        $f49 = f9 + $f48;

        r5[i4] = $f49;

        $i28 = i4 + 1;

        $i29 = i4 + 1;

        $f59 = r4[$i29];

        $f57 = f8 + $f59;

        $f58 = f4 * $f57;

        $f56 = f10 + $f58;

        r5[$i28] = $f56;

        i4 = i4 + 2;

        goto label04;

     label05:
        f27 = f4;

        goto label01;

     label06:
        f5 = f1 / f2;

        $b8 = f5 cmpl 1.0F;

        if $b8 <= 0 goto label07;

        f5 = 1.0F / f5;

     label07:
        $b9 = f5 cmpg 0.26F;

        if $b9 >= 0 goto label10;

        $b31 = f3 cmpg f4;

        if $b31 >= 0 goto label09;

        f24 = f3;

     label08:
        f3 = f24;

        f4 = f24;

        goto label02;

     label09:
        f24 = f4;

        goto label08;

     label10:
        $b11 = f3 cmpl f4;

        if $b11 <= 0 goto label11;

        $f55 = <android.gesture.GestureUtils: float NONUNIFORM_SCALE>;

        f23 = f4 * $f55;

        $b27 = f23 cmpg f3;

        if $b27 >= 0 goto label02;

        f3 = f23;

        goto label02;

     label11:
        $f29 = <android.gesture.GestureUtils: float NONUNIFORM_SCALE>;

        f6 = f3 * $f29;

        $b10 = f6 cmpg f4;

        if $b10 >= 0 goto label02;

        f4 = f6;

        goto label02;

     label12:
        f11 = -1.0F;

        f12 = -1.0F;

        i5 = 0;

     label13:
        if i5 >= i3 goto label28;

        $f31 = r5[i5];

        $b13 = $f31 cmpg 0.0F;

        if $b13 >= 0 goto label19;

        f14 = 0.0F;

     label14:
        $i12 = i5 + 1;

        $f32 = r5[$i12];

        $b16 = $f32 cmpg 0.0F;

        if $b16 >= 0 goto label20;

        f13 = 0.0F;

     label15:
        $b14 = f14 cmpl f0;

        if $b14 <= 0 goto label16;

        f14 = f0;

     label16:
        $b19 = f13 cmpl f0;

        if $b19 <= 0 goto label17;

        f13 = f0;

     label17:
        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>(f14, f13, r1, i0);

        $b20 = f11 cmpl -1.0F;

        if $b20 == 0 goto label27;

        $b21 = f11 cmpl f14;

        if $b21 <= 0 goto label21;

        $d6 = (double) f14;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d6);

        f20 = (float) $d7;

        $f54 = f12 - f13;

        $f44 = f11 - f14;

        f25 = $f54 / $f44;

     label18:
        $b26 = f20 cmpg f11;

        if $b26 >= 0 goto label23;

        $f52 = f20 - f14;

        $f53 = f25 * $f52;

        f26 = f13 + $f53;

        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>(f20, f26, r1, i0);

        f20 = f20 + 1.0F;

        goto label18;

     label19:
        f14 = r5[i5];

        goto label14;

     label20:
        $i15 = i5 + 1;

        f13 = r5[$i15];

        goto label15;

     label21:
        $b22 = f11 cmpg f14;

        if $b22 >= 0 goto label23;

        $d5 = (double) f11;

        $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d5);

        f21 = (float) $d4;

        $f45 = f12 - f13;

        $f46 = f11 - f14;

        f22 = $f45 / $f46;

     label22:
        $b25 = f21 cmpg f14;

        if $b25 >= 0 goto label23;

        $f47 = f21 - f14;

        $f43 = f22 * $f47;

        f19 = f13 + $f43;

        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>(f21, f19, r1, i0);

        f21 = f21 + 1.0F;

        goto label22;

     label23:
        $b17 = f12 cmpl f13;

        if $b17 <= 0 goto label25;

        $d2 = (double) f13;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        f18 = (float) $d3;

        $f40 = f11 - f14;

        $f41 = f12 - f13;

        f17 = $f40 / $f41;

     label24:
        $b24 = f18 cmpg f12;

        if $b24 >= 0 goto label27;

        $f42 = f18 - f13;

        $f39 = f17 * $f42;

        $f38 = f14 + $f39;

        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>($f38, f18, r1, i0);

        f18 = f18 + 1.0F;

        goto label24;

     label25:
        $b18 = f12 cmpg f13;

        if $b18 >= 0 goto label27;

        $d0 = (double) f12;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        f16 = (float) $d1;

        $f36 = f11 - f14;

        $f35 = f12 - f13;

        f15 = $f36 / $f35;

     label26:
        $b23 = f16 cmpg f13;

        if $b23 >= 0 goto label27;

        $f37 = f16 - f13;

        $f33 = f15 * $f37;

        $f34 = f14 + $f33;

        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>($f34, f16, r1, i0);

        f16 = f16 + 1.0F;

        goto label26;

     label27:
        f11 = f14;

        f12 = f13;

        i5 = i5 + 2;

        goto label13;

     label28:
        i2 = i2 + 1;

        goto label03;

     label29:
        return r1;
    }

    static float squaredEuclideanDistance(float[], float[])
    {
        float[] r0, r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        int i0, i1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = 0.0F;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f5 = r0[i1];

        $f4 = r1[i1];

        f1 = $f5 - $f4;

        $f6 = f1 * f1;

        f0 = f0 + $f6;

        i1 = i1 + 1;

        goto label1;

     label2:
        $f2 = (float) i0;

        $f3 = f0 / $f2;

        return $f3;
    }

    public static float[] temporalSampling(android.gesture.GestureStroke, int)
    {
        android.gesture.GestureStroke r0;
        int i0, i1, i3, i4, i5, i6, $i7, i8, $i9, $i10, $i13, $i14, $i15;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        float[] r1, r2;
        byte $b11, $b12;
        double $d0, $d1;

        r0 := @parameter0: android.gesture.GestureStroke;

        i0 := @parameter1: int;

        $f12 = r0.<android.gesture.GestureStroke: float length>;

        $i7 = i0 - 1;

        $f13 = (float) $i7;

        f0 = $f12 / $f13;

        i1 = i0 * 2;

        r1 = newarray (float)[i1];

        f1 = 0.0F;

        r2 = r0.<android.gesture.GestureStroke: float[] points>;

        f2 = r2[0];

        f3 = r2[1];

        f4 = 1.4E-45F;

        f5 = 1.4E-45F;

        r1[0] = f2;

        r1[1] = f3;

        i3 = 2;

        i4 = 0;

        $i10 = lengthof r2;

        i5 = $i10 / 2;

     label1:
        if i4 >= i5 goto label2;

        $b11 = f4 cmpl 1.4E-45F;

        if $b11 != 0 goto label5;

        i4 = i4 + 1;

        if i4 < i5 goto label4;

     label2:
        i6 = i3;

     label3:
        if i6 >= i1 goto label7;

        r1[i6] = f2;

        $i9 = i6 + 1;

        r1[$i9] = f3;

        i6 = i6 + 2;

        goto label3;

     label4:
        $i13 = i4 * 2;

        f4 = r2[$i13];

        $i14 = i4 * 2;

        $i15 = 1 + $i14;

        f5 = r2[$i15];

     label5:
        f7 = f4 - f2;

        f6 = f5 - f3;

        $f16 = f7 * f7;

        $f14 = f6 * f6;

        $f15 = $f16 + $f14;

        $d0 = (double) $f15;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f9 = (float) $d1;

        $f17 = f1 + f9;

        $b12 = $f17 cmpl f0;

        if $b12 < 0 goto label6;

        $f19 = f0 - f1;

        f8 = $f19 / f9;

        $f20 = f8 * f7;

        f11 = f2 + $f20;

        $f18 = f8 * f6;

        f10 = f3 + $f18;

        r1[i3] = f11;

        i8 = i3 + 1;

        r1[i8] = f10;

        i3 = i8 + 1;

        f2 = f11;

        f3 = f10;

        f1 = 0.0F;

        goto label1;

     label6:
        f2 = f4;

        f3 = f5;

        f4 = 1.4E-45F;

        f5 = 1.4E-45F;

        f1 = f1 + f9;

        goto label1;

     label7:
        return r1;
    }

    static float[] translate(float[], float, float)
    {
        float[] r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0, i1, i2;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f2 = r0[i1];

        $f3 = f0 + $f2;

        r0[i1] = $f3;

        i2 = i1 + 1;

        $f4 = r0[i2];

        $f5 = f1 + $f4;

        r0[i2] = $f5;

        i1 = i1 + 2;

        goto label1;

     label2:
        return r0;
    }
}
