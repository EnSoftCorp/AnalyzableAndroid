public class android.text.format.Time extends java.lang.Object
{
    private static final int[] DAYS_PER_MONTH;
    public static final int EPOCH_JULIAN_DAY;
    public static final int FRIDAY;
    public static final int HOUR;
    public static final int MINUTE;
    public static final int MONDAY;
    public static final int MONDAY_BEFORE_JULIAN_EPOCH;
    public static final int MONTH;
    public static final int MONTH_DAY;
    public static final int SATURDAY;
    public static final int SECOND;
    public static final int SUNDAY;
    public static final int THURSDAY;
    public static final java.lang.String TIMEZONE_UTC;
    public static final int TUESDAY;
    public static final int WEDNESDAY;
    public static final int WEEK_DAY;
    public static final int WEEK_NUM;
    public static final int YEAR;
    public static final int YEAR_DAY;
    private static final java.lang.String Y_M_D;
    private static final java.lang.String Y_M_D_T_H_M_S_000;
    private static final java.lang.String Y_M_D_T_H_M_S_000_Z;
    private static java.lang.String sAm;
    private static java.lang.String sDateCommand;
    private static java.lang.String sDateOnlyFormat;
    private static java.lang.String sDateTimeFormat;
    private static java.util.Locale sLocale;
    private static java.lang.String[] sLongMonths;
    private static java.lang.String[] sLongStandaloneMonths;
    private static java.lang.String[] sLongWeekdays;
    private static java.lang.String sPm;
    private static java.lang.String[] sShortMonths;
    private static java.lang.String[] sShortWeekdays;
    private static final int[] sThursdayOffset;
    private static java.lang.String sTimeOnlyFormat;
    private static char sZeroDigit;
    public boolean allDay;
    public long gmtoff;
    public int hour;
    public int isDst;
    public int minute;
    public int month;
    public int monthDay;
    public int second;
    public java.lang.String timezone;
    public int weekDay;
    public int year;
    public int yearDay;

    static void <clinit>()
    {
        int[] $r0, $r1;

        <android.text.format.Time: java.lang.String Y_M_D_T_H_M_S_000_Z> = "%Y-%m-%dT%H:%M:%S.000Z";

        <android.text.format.Time: java.lang.String Y_M_D_T_H_M_S_000> = "%Y-%m-%dT%H:%M:%S.000";

        <android.text.format.Time: java.lang.String Y_M_D> = "%Y-%m-%d";

        <android.text.format.Time: int YEAR_DAY> = 8;

        <android.text.format.Time: int YEAR> = 6;

        <android.text.format.Time: int WEEK_NUM> = 9;

        <android.text.format.Time: int WEEK_DAY> = 7;

        <android.text.format.Time: int WEDNESDAY> = 3;

        <android.text.format.Time: int TUESDAY> = 2;

        <android.text.format.Time: java.lang.String TIMEZONE_UTC> = "UTC";

        <android.text.format.Time: int THURSDAY> = 4;

        <android.text.format.Time: int SUNDAY> = 0;

        <android.text.format.Time: int SECOND> = 1;

        <android.text.format.Time: int SATURDAY> = 6;

        <android.text.format.Time: int MONTH_DAY> = 4;

        <android.text.format.Time: int MONTH> = 5;

        <android.text.format.Time: int MONDAY_BEFORE_JULIAN_EPOCH> = 2440585;

        <android.text.format.Time: int MONDAY> = 1;

        <android.text.format.Time: int MINUTE> = 2;

        <android.text.format.Time: int HOUR> = 3;

        <android.text.format.Time: int FRIDAY> = 5;

        <android.text.format.Time: int EPOCH_JULIAN_DAY> = 2440588;

        <android.text.format.Time: java.lang.String sDateCommand> = "%a %b %e %H:%M:%S %Z %Y";

        $r0 = newarray (int)[12];

        $r0[0] = 31;

        $r0[1] = 28;

        $r0[2] = 31;

        $r0[3] = 30;

        $r0[4] = 31;

        $r0[5] = 30;

        $r0[6] = 31;

        $r0[7] = 31;

        $r0[8] = 30;

        $r0[9] = 31;

        $r0[10] = 30;

        $r0[11] = 31;

        <android.text.format.Time: int[] DAYS_PER_MONTH> = $r0;

        $r1 = newarray (int)[7];

        $r1[0] = -3;

        $r1[1] = 3;

        $r1[2] = 2;

        $r1[3] = 1;

        $r1[4] = 0;

        $r1[5] = -1;

        $r1[6] = -2;

        <android.text.format.Time: int[] sThursdayOffset> = $r1;

        return;
    }

    public void <init>()
    {
        android.text.format.Time r0;
        java.util.TimeZone $r1;
        java.lang.String $r2;

        r0 := @this: android.text.format.Time;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = virtualinvoke $r1.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<android.text.format.Time: void <init>(java.lang.String)>($r2);

        return;
    }

    public void <init>(android.text.format.Time)
    {
        android.text.format.Time r0, r1;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: android.text.format.Time;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.text.format.Time: void set(android.text.format.Time)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("timezone is null!");

        throw $r2;

     label1:
        r0.<android.text.format.Time: java.lang.String timezone> = r1;

        r0.<android.text.format.Time: int year> = 1970;

        r0.<android.text.format.Time: int monthDay> = 1;

        r0.<android.text.format.Time: int isDst> = -1;

        return;
    }

    public static int compare(android.text.format.Time, android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        int $i0;
        java.lang.NullPointerException $r2, $r3;

        r0 := @parameter0: android.text.format.Time;

        r1 := @parameter1: android.text.format.Time;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("a == null");

        throw $r3;

     label1:
        if r1 != null goto label2;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("b == null");

        throw $r2;

     label2:
        $i0 = staticinvoke <android.text.format.Time: int nativeCompare(android.text.format.Time,android.text.format.Time)>(r0, r1);

        return $i0;
    }

    private native java.lang.String format1(java.lang.String);

    public static java.lang.String getCurrentTimezone()
    {
        java.util.TimeZone $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r1 = virtualinvoke $r0.<java.util.TimeZone: java.lang.String getID()>();

        return $r1;
    }

    public static int getJulianDay(long, long)
    {
        long l0, l1, $l2, $l3, $l4;
        int $i5, $i6;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = l1 * 1000L;

        $l3 = l0 + $l2;

        $l4 = $l3 / 86400000L;

        $i5 = (int) $l4;

        $i6 = 2440588 + $i5;

        return $i6;
    }

    public static int getJulianMondayFromWeeksSinceEpoch(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 * 7;

        $i2 = 2440585 + $i1;

        return $i2;
    }

    public static int getWeeksSinceEpochFromJulianDay(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = 4 - i1;

        if i2 >= 0 goto label1;

        i2 = i2 + 7;

     label1:
        $i3 = 2440588 - i2;

        $i4 = i0 - $i3;

        $i5 = $i4 / 7;

        return $i5;
    }

    public static boolean isEpoch(android.text.format.Time)
    {
        android.text.format.Time r0;
        long $l0;
        int $i1;

        r0 := @parameter0: android.text.format.Time;

        $l0 = virtualinvoke r0.<android.text.format.Time: long toMillis(boolean)>(1);

        $i1 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>($l0, 0L);

        if $i1 != 2440588 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.lang.String localizeDigits(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1, $r4;
        int i0, i1, i2, $i5;
        java.lang.StringBuilder r2, $r3;
        char c3, $c4;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $c4 = <android.text.format.Time: char sZeroDigit>;

        i1 = -48 + $c4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(i0);

        r2 = $r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c3 < 48 goto label2;

        if c3 > 57 goto label2;

        $i5 = c3 + i1;

        c3 = (char) $i5;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static native int nativeCompare(android.text.format.Time, android.text.format.Time);

    private native boolean nativeParse(java.lang.String);

    private native boolean nativeParse3339(java.lang.String);

    public boolean after(android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        int $i0;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: android.text.format.Time;

        $i0 = staticinvoke <android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>(r0, r1);

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean before(android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        int $i0;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: android.text.format.Time;

        $i0 = staticinvoke <android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>(r0, r1);

        if $i0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void clear(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("timezone is null!");

        throw $r2;

     label1:
        r0.<android.text.format.Time: java.lang.String timezone> = r1;

        r0.<android.text.format.Time: boolean allDay> = 0;

        r0.<android.text.format.Time: int second> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int monthDay> = 0;

        r0.<android.text.format.Time: int month> = 0;

        r0.<android.text.format.Time: int year> = 0;

        r0.<android.text.format.Time: int weekDay> = 0;

        r0.<android.text.format.Time: int yearDay> = 0;

        r0.<android.text.format.Time: long gmtoff> = 0L;

        r0.<android.text.format.Time: int isDst> = -1;

        return;
    }

    public java.lang.String format(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1, r6, $r9, $r11, $r17, $r18, $r19;
        java.lang.Throwable r2, $r21;
        java.util.Locale r3, $r7, $r20;
        libcore.icu.LocaleData r4;
        android.content.res.Resources r5;
        java.lang.String[] $r8, $r10, $r12, $r13, $r14, $r15, $r16;
        char $c0, $c1;
        boolean $z0;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        entermonitor class "android/text/format/Time";

     label01:
        r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r7 = <android.text.format.Time: java.util.Locale sLocale>;

        if $r7 == null goto label04;

     label02:
        if r3 == null goto label04;

     label03:
        $r20 = <android.text.format.Time: java.util.Locale sLocale>;

        $z0 = virtualinvoke r3.<java.util.Locale: boolean equals(java.lang.Object)>($r20);

        if $z0 != 0 goto label05;

     label04:
        r4 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>(r3);

        $r8 = r4.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        $r9 = $r8[0];

        <android.text.format.Time: java.lang.String sAm> = $r9;

        $r10 = r4.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        $r11 = $r10[1];

        <android.text.format.Time: java.lang.String sPm> = $r11;

        $c0 = r4.<libcore.icu.LocaleData: char zeroDigit>;

        <android.text.format.Time: char sZeroDigit> = $c0;

        $r12 = r4.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        <android.text.format.Time: java.lang.String[] sShortMonths> = $r12;

        $r14 = r4.<libcore.icu.LocaleData: java.lang.String[] longMonthNames>;

        <android.text.format.Time: java.lang.String[] sLongMonths> = $r14;

        $r13 = r4.<libcore.icu.LocaleData: java.lang.String[] longStandAloneMonthNames>;

        <android.text.format.Time: java.lang.String[] sLongStandaloneMonths> = $r13;

        $r16 = r4.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        <android.text.format.Time: java.lang.String[] sShortWeekdays> = $r16;

        $r15 = r4.<libcore.icu.LocaleData: java.lang.String[] longWeekdayNames>;

        <android.text.format.Time: java.lang.String[] sLongWeekdays> = $r15;

        r5 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r17 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(17039421);

        <android.text.format.Time: java.lang.String sTimeOnlyFormat> = $r17;

        $r19 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(17039420);

        <android.text.format.Time: java.lang.String sDateOnlyFormat> = $r19;

        $r18 = virtualinvoke r5.<android.content.res.Resources: java.lang.String getString(int)>(17039422);

        <android.text.format.Time: java.lang.String sDateTimeFormat> = $r18;

        <android.text.format.Time: java.util.Locale sLocale> = r3;

     label05:
        r6 = specialinvoke r0.<android.text.format.Time: java.lang.String format1(java.lang.String)>(r1);

        $c1 = <android.text.format.Time: char sZeroDigit>;

        if $c1 == 48 goto label06;

        r6 = specialinvoke r0.<android.text.format.Time: java.lang.String localizeDigits(java.lang.String)>(r6);

     label06:
        exitmonitor class "android/text/format/Time";

     label07:
        return r6;

     label08:
        $r21 := @caughtexception;

        r2 = $r21;

     label09:
        exitmonitor class "android/text/format/Time";

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public native java.lang.String format2445();

    public java.lang.String format3339(boolean)
    {
        android.text.format.Time r0;
        boolean z0, $z1;
        java.lang.String r1, r2, $r5, $r6, $r9, $r10, $r11;
        int i0, i1, i2, $i6;
        java.util.Locale r3;
        java.lang.Object[] r4;
        long $l3, $l5, $l7;
        byte $b4;
        java.lang.Integer $r7, $r8;

        r0 := @this: android.text.format.Time;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r11 = virtualinvoke r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%d");

        return $r11;

     label1:
        $r6 = "UTC";

        $r5 = r0.<android.text.format.Time: java.lang.String timezone>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%dT%H:%M:%S.000Z");

        return $r9;

     label2:
        r1 = virtualinvoke r0.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%dT%H:%M:%S.000");

        $l3 = r0.<android.text.format.Time: long gmtoff>;

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label4;

        r2 = "-";

     label3:
        $l5 = r0.<android.text.format.Time: long gmtoff>;

        $l7 = staticinvoke <java.lang.Math: long abs(long)>($l5);

        i0 = (int) $l7;

        $i6 = i0 % 3600;

        i1 = $i6 / 60;

        i2 = i0 / 3600;

        r3 = <java.util.Locale: java.util.Locale US>;

        r4 = newarray (java.lang.Object)[4];

        r4[0] = r1;

        r4[1] = r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r4[2] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r4[3] = $r8;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r3, "%s%s%02d:%02d", r4);

        return $r10;

     label4:
        r2 = "+";

        goto label3;
    }

    public int getActualMaximum(int)
    {
        android.text.format.Time r0;
        int i0, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        byte b1;
        java.lang.RuntimeException $r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        int[] $r7;

        r0 := @this: android.text.format.Time;

        i0 := @parameter0: int;

        b1 = 28;

        tableswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label15;
            default: goto label01;
        };

     label01:
        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad field=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label02:
        b1 = 59;

     label03:
        return b1;

     label04:
        return 59;

     label05:
        return 23;

     label06:
        $r7 = <android.text.format.Time: int[] DAYS_PER_MONTH>;

        $i8 = r0.<android.text.format.Time: int month>;

        i3 = $r7[$i8];

        if i3 == 28 goto label07;

        return i3;

     label07:
        i4 = r0.<android.text.format.Time: int year>;

        $i9 = i4 % 4;

        if $i9 != 0 goto label03;

        $i11 = i4 % 100;

        if $i11 != 0 goto label08;

        $i10 = i4 % 400;

        if $i10 != 0 goto label03;

     label08:
        return 29;

     label09:
        return 11;

     label10:
        return 2037;

     label11:
        return 6;

     label12:
        i2 = r0.<android.text.format.Time: int year>;

        $i5 = i2 % 4;

        if $i5 != 0 goto label14;

        $i6 = i2 % 100;

        if $i6 != 0 goto label13;

        $i7 = i2 % 400;

        if $i7 != 0 goto label14;

     label13:
        return 365;

     label14:
        return 364;

     label15:
        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("WEEK_NUM not implemented");

        throw $r6;
    }

    public int getWeekNumber()
    {
        android.text.format.Time r0, r1, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13;
        int[] $r2, $r4;

        r0 := @this: android.text.format.Time;

        $i3 = r0.<android.text.format.Time: int yearDay>;

        $r2 = <android.text.format.Time: int[] sThursdayOffset>;

        $i1 = r0.<android.text.format.Time: int weekDay>;

        $i2 = $r2[$i1];

        i0 = $i3 + $i2;

        if i0 < 0 goto label1;

        if i0 > 364 goto label1;

        $i11 = i0 / 7;

        $i13 = 1 + $i11;

        return $i13;

     label1:
        $r3 = new android.text.format.Time;

        specialinvoke $r3.<android.text.format.Time: void <init>(android.text.format.Time)>(r0);

        r1 = $r3;

        $i6 = r1.<android.text.format.Time: int monthDay>;

        $r4 = <android.text.format.Time: int[] sThursdayOffset>;

        $i4 = r0.<android.text.format.Time: int weekDay>;

        $i5 = $r4[$i4];

        $i7 = $i6 + $i5;

        r1.<android.text.format.Time: int monthDay> = $i7;

        virtualinvoke r1.<android.text.format.Time: long normalize(boolean)>(1);

        $i9 = r1.<android.text.format.Time: int yearDay>;

        $i10 = $i9 / 7;

        $i12 = 1 + $i10;

        return $i12;
    }

    public native long normalize(boolean);

    public boolean parse(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.NullPointerException $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("time string is null");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<android.text.format.Time: boolean nativeParse(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        r0.<android.text.format.Time: java.lang.String timezone> = "UTC";

        return 1;

     label2:
        return 0;
    }

    public boolean parse3339(java.lang.String)
    {
        android.text.format.Time r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.NullPointerException $r2;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("time string is null");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<android.text.format.Time: boolean nativeParse3339(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        r0.<android.text.format.Time: java.lang.String timezone> = "UTC";

        return 1;

     label2:
        return 0;
    }

    public void set(int, int, int)
    {
        android.text.format.Time r0;
        int i0, i1, i2;

        r0 := @this: android.text.format.Time;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<android.text.format.Time: boolean allDay> = 1;

        r0.<android.text.format.Time: int second> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int monthDay> = i0;

        r0.<android.text.format.Time: int month> = i1;

        r0.<android.text.format.Time: int year> = i2;

        r0.<android.text.format.Time: int weekDay> = 0;

        r0.<android.text.format.Time: int yearDay> = 0;

        r0.<android.text.format.Time: int isDst> = -1;

        r0.<android.text.format.Time: long gmtoff> = 0L;

        return;
    }

    public void set(int, int, int, int, int, int)
    {
        android.text.format.Time r0;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: android.text.format.Time;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r0.<android.text.format.Time: boolean allDay> = 0;

        r0.<android.text.format.Time: int second> = i0;

        r0.<android.text.format.Time: int minute> = i1;

        r0.<android.text.format.Time: int hour> = i2;

        r0.<android.text.format.Time: int monthDay> = i3;

        r0.<android.text.format.Time: int month> = i4;

        r0.<android.text.format.Time: int year> = i5;

        r0.<android.text.format.Time: int weekDay> = 0;

        r0.<android.text.format.Time: int yearDay> = 0;

        r0.<android.text.format.Time: int isDst> = -1;

        r0.<android.text.format.Time: long gmtoff> = 0L;

        return;
    }

    public native void set(long);

    public void set(android.text.format.Time)
    {
        android.text.format.Time r0, r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long $l9;

        r0 := @this: android.text.format.Time;

        r1 := @parameter0: android.text.format.Time;

        $r2 = r1.<android.text.format.Time: java.lang.String timezone>;

        r0.<android.text.format.Time: java.lang.String timezone> = $r2;

        $z0 = r1.<android.text.format.Time: boolean allDay>;

        r0.<android.text.format.Time: boolean allDay> = $z0;

        $i0 = r1.<android.text.format.Time: int second>;

        r0.<android.text.format.Time: int second> = $i0;

        $i1 = r1.<android.text.format.Time: int minute>;

        r0.<android.text.format.Time: int minute> = $i1;

        $i2 = r1.<android.text.format.Time: int hour>;

        r0.<android.text.format.Time: int hour> = $i2;

        $i3 = r1.<android.text.format.Time: int monthDay>;

        r0.<android.text.format.Time: int monthDay> = $i3;

        $i4 = r1.<android.text.format.Time: int month>;

        r0.<android.text.format.Time: int month> = $i4;

        $i5 = r1.<android.text.format.Time: int year>;

        r0.<android.text.format.Time: int year> = $i5;

        $i6 = r1.<android.text.format.Time: int weekDay>;

        r0.<android.text.format.Time: int weekDay> = $i6;

        $i7 = r1.<android.text.format.Time: int yearDay>;

        r0.<android.text.format.Time: int yearDay> = $i7;

        $i8 = r1.<android.text.format.Time: int isDst>;

        r0.<android.text.format.Time: int isDst> = $i8;

        $l9 = r1.<android.text.format.Time: long gmtoff>;

        r0.<android.text.format.Time: long gmtoff> = $l9;

        return;
    }

    public long setJulianDay(int)
    {
        android.text.format.Time r0;
        int i0, $i2, $i5, $i6, $i7, $i8;
        long l1, $l3, $l4, $l9;

        r0 := @this: android.text.format.Time;

        i0 := @parameter0: int;

        $i2 = i0 - 2440588;

        $l3 = (long) $i2;

        l1 = 86400000L * $l3;

        virtualinvoke r0.<android.text.format.Time: void set(long)>(l1);

        $l4 = r0.<android.text.format.Time: long gmtoff>;

        $i5 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l1, $l4);

        $i7 = i0 - $i5;

        $i6 = r0.<android.text.format.Time: int monthDay>;

        $i8 = $i7 + $i6;

        r0.<android.text.format.Time: int monthDay> = $i8;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int second> = 0;

        $l9 = virtualinvoke r0.<android.text.format.Time: long normalize(boolean)>(1);

        return $l9;
    }

    public native void setToNow();

    public native void switchTimezone(java.lang.String);

    public native long toMillis(boolean);

    public native java.lang.String toString();
}
