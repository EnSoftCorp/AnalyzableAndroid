public class android.net.http.HttpsConnection extends android.net.http.Connection
{
    private static javax.net.ssl.SSLSocketFactory mSslSocketFactory;
    private boolean mAborted;
    private org.apache.http.HttpHost mProxyHost;
    private java.lang.Object mSuspendLock;
    private boolean mSuspended;

    static void <clinit>()
    {
        <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory mSslSocketFactory> = null;

        staticinvoke <android.net.http.HttpsConnection: void initializeEngine(java.io.File)>(null);

        return;
    }

    void <init>(android.content.Context, org.apache.http.HttpHost, org.apache.http.HttpHost, android.net.http.RequestFeeder)
    {
        android.net.http.HttpsConnection r0;
        android.content.Context r1;
        org.apache.http.HttpHost r2, r3;
        android.net.http.RequestFeeder r4;
        java.lang.Object $r5;

        r0 := @this: android.net.http.HttpsConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: org.apache.http.HttpHost;

        r4 := @parameter3: android.net.http.RequestFeeder;

        specialinvoke r0.<android.net.http.Connection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestFeeder)>(r1, r2, r4);

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock> = $r5;

        r0.<android.net.http.HttpsConnection: boolean mSuspended> = 0;

        r0.<android.net.http.HttpsConnection: boolean mAborted> = 0;

        r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mProxyHost> = r3;

        return;
    }

    private static javax.net.ssl.SSLSocketFactory getSocketFactory()
    {
        java.lang.Throwable r0, $r2;
        javax.net.ssl.SSLSocketFactory r1;

        entermonitor class "android/net/http/HttpsConnection";

     label1:
        r1 = <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory mSslSocketFactory>;

     label2:
        exitmonitor class "android/net/http/HttpsConnection";

        return r1;

     label3:
        $r2 := @caughtexception;

        r0 = $r2;

        exitmonitor class "android/net/http/HttpsConnection";

        throw r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void initializeEngine(java.io.File)
    {
        java.io.File r0;
        com.android.org.conscrypt.SSLClientSessionCache r1;
        com.android.org.conscrypt.OpenSSLContextImpl r2, $r7;
        java.io.IOException r3, $r18;
        java.security.KeyManagementException r4, $r17;
        javax.net.ssl.TrustManager[] r5;
        java.lang.Throwable r6, $r19;
        android.net.http.HttpsConnection$1 $r8;
        com.android.org.conscrypt.ClientSessionContext $r9;
        javax.net.ssl.SSLSocketFactory $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r15;
        java.lang.String $r14;
        java.lang.RuntimeException $r16, $r20;

        r0 := @parameter0: java.io.File;

        r1 = null;

        if r0 == null goto label2;

     label1:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caching SSL sessions in ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("HttpsConnection", $r14);

        r1 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache: com.android.org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File)>(r0);

     label2:
        $r7 = new com.android.org.conscrypt.OpenSSLContextImpl;

        specialinvoke $r7.<com.android.org.conscrypt.OpenSSLContextImpl: void <init>()>();

        r2 = $r7;

        r5 = newarray (javax.net.ssl.TrustManager)[1];

        $r8 = new android.net.http.HttpsConnection$1;

        specialinvoke $r8.<android.net.http.HttpsConnection$1: void <init>()>();

        r5[0] = $r8;

        virtualinvoke r2.<com.android.org.conscrypt.OpenSSLContextImpl: void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, r5, null);

        $r9 = virtualinvoke r2.<com.android.org.conscrypt.OpenSSLContextImpl: com.android.org.conscrypt.ClientSessionContext engineGetClientSessionContext()>();

        virtualinvoke $r9.<com.android.org.conscrypt.ClientSessionContext: void setPersistentCache(com.android.org.conscrypt.SSLClientSessionCache)>(r1);

        entermonitor class "android/net/http/HttpsConnection";

     label3:
        $r10 = virtualinvoke r2.<com.android.org.conscrypt.OpenSSLContextImpl: javax.net.ssl.SSLSocketFactory engineGetSocketFactory()>();

        <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory mSslSocketFactory> = $r10;

        exitmonitor class "android/net/http/HttpsConnection";

     label4:
        return;

     label5:
        $r19 := @caughtexception;

        r6 = $r19;

     label6:
        exitmonitor class "android/net/http/HttpsConnection";

     label7:
        throw r6;

     label8:
        $r17 := @caughtexception;

        r4 = $r17;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r16;

     label9:
        $r18 := @caughtexception;

        r3 = $r18;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r20;

        catch java.security.KeyManagementException from label1 to label2 with label8;
        catch java.io.IOException from label1 to label2 with label9;
        catch java.security.KeyManagementException from label2 to label3 with label8;
        catch java.io.IOException from label2 to label3 with label9;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.security.KeyManagementException from label7 to label8 with label8;
        catch java.io.IOException from label7 to label8 with label9;
    }

    void closeConnection()
    {
        android.net.http.HttpsConnection r0;
        java.io.IOException r1, $r5;
        boolean $z0, $z1;
        android.net.http.AndroidHttpClientConnection $r2, $r3, $r4;

        r0 := @this: android.net.http.HttpsConnection;

        $z0 = r0.<android.net.http.HttpsConnection: boolean mSuspended>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.net.http.HttpsConnection: void restartConnection(boolean)>(0);

     label1:
        $r2 = r0.<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        if $r2 == null goto label2;

        $r3 = r0.<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        $z1 = virtualinvoke $r3.<android.net.http.AndroidHttpClientConnection: boolean isOpen()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection mHttpClientConnection>;

        virtualinvoke $r4.<android.net.http.AndroidHttpClientConnection: void close()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        virtualinvoke r1.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    java.lang.String getScheme()
    {
        android.net.http.HttpsConnection r0;

        r0 := @this: android.net.http.HttpsConnection;

        return "https";
    }

    android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request) throws java.io.IOException
    {
        android.net.http.HttpsConnection r0;
        android.net.http.Request r1;
        javax.net.ssl.SSLSocket r2;
        java.io.IOException r3, r5, r17, r19, r26, r28, r32, r33, r39, r41, $r58, $r82, $r83, $r84, $r85, $r86, $r87, $r89, $r90, $r92, $r94, $r96, $r97;
        java.lang.String r4, r7, r20, r25, r30, r31, r37, r38, $r42, $r54, $r57, $r70, $r71, $r77, $r78;
        android.net.http.CertificateChainValidator r6;
        android.net.http.SslError r8;
        android.net.http.AndroidHttpClientConnection r9, r16, r22, $r48, $r67;
        org.apache.http.params.BasicHttpParams r10, r21, $r50, $r66;
        java.lang.Object r11, r13, $r52;
        java.lang.Throwable r12, r14, $r81, $r91;
        android.net.http.SSLConnectionClosedByUserException r15, $r51;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.net.Socket r18, $r46, $r55, $r80;
        org.apache.http.message.BasicHttpRequest r23, $r62, $r69;
        android.net.http.Headers r24, $r63;
        org.apache.http.HttpException r27, $r88;
        org.apache.http.ParseException r29, $r95;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.http.Header[] r34;
        org.apache.http.StatusLine r35;
        org.apache.http.Header r36;
        org.apache.http.ProtocolVersion r40;
        org.apache.http.HttpHost $r43, $r45, $r47, $r49, $r56, $r64, $r65, $r72, $r74;
        javax.net.ssl.SSLSocketFactory $r44, $r73;
        android.net.http.EventHandler $r53, $r68, $r75, $r76;
        java.lang.StringBuilder $r59, $r60, $r61;
        java.util.Locale $r79;
        java.lang.InterruptedException $r93;

        r0 := @this: android.net.http.HttpsConnection;

        r1 := @parameter0: android.net.http.Request;

        r2 = null;

        $r45 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mProxyHost>;

        if $r45 == null goto label32;

        r16 = null;

     label01:
        $r55 = new java.net.Socket;

        $r56 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mProxyHost>;

        $r57 = virtualinvoke $r56.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $r65 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mProxyHost>;

        $i4 = virtualinvoke $r65.<org.apache.http.HttpHost: int getPort()>();

        specialinvoke $r55.<java.net.Socket: void <init>(java.lang.String,int)>($r57, $i4);

        r18 = $r55;

     label02:
        virtualinvoke r18.<java.net.Socket: void setSoTimeout(int)>(60000);

        $r67 = new android.net.http.AndroidHttpClientConnection;

        specialinvoke $r67.<android.net.http.AndroidHttpClientConnection: void <init>()>();

        r22 = $r67;

     label03:
        $r66 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r66.<org.apache.http.params.BasicHttpParams: void <init>()>();

        r21 = $r66;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>(r21, 8192);

        virtualinvoke r22.<android.net.http.AndroidHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>(r18, r21);

     label04:
        $r63 = new android.net.http.Headers;

        specialinvoke $r63.<android.net.http.Headers: void <init>()>();

        r24 = $r63;

     label05:
        $r62 = new org.apache.http.message.BasicHttpRequest;

        $r64 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $r70 = virtualinvoke $r64.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        specialinvoke $r62.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>("CONNECT", $r70);

        r23 = $r62;

        $r69 = r1.<android.net.http.Request: org.apache.http.message.BasicHttpRequest mHttpRequest>;

        r34 = virtualinvoke $r69.<org.apache.http.message.BasicHttpRequest: org.apache.http.Header[] getAllHeaders()>();

        i0 = lengthof r34;

     label06:
        i1 = 0;

     label07:
        if i1 >= i0 goto label15;

     label08:
        r36 = r34[i1];

        $r78 = interfaceinvoke r36.<org.apache.http.Header: java.lang.String getName()>();

        $r79 = <java.util.Locale: java.util.Locale ROOT>;

        r37 = virtualinvoke $r78.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r79);

        $z6 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>("proxy");

        if $z6 != 0 goto label09;

        $z4 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("keep-alive");

        if $z4 != 0 goto label09;

        $z5 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("host");

        if $z5 == 0 goto label10;

     label09:
        virtualinvoke r23.<org.apache.http.message.BasicHttpRequest: void addHeader(org.apache.http.Header)>(r36);

     label10:
        i1 = i1 + 1;

        goto label07;

     label11:
        $r92 := @caughtexception;

        r17 = $r92;

     label12:
        if r16 == null goto label13;

        virtualinvoke r16.<android.net.http.AndroidHttpClientConnection: void close()>();

     label13:
        r20 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>();

        if r20 != null goto label14;

        r20 = "failed to establish a connection to the proxy";

     label14:
        $r85 = new java.io.IOException;

        specialinvoke $r85.<java.io.IOException: void <init>(java.lang.String)>(r20);

        r19 = $r85;

        throw r19;

     label15:
        virtualinvoke r22.<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>(r23);

        virtualinvoke r22.<android.net.http.AndroidHttpClientConnection: void flush()>();

     label16:
        r35 = virtualinvoke r22.<android.net.http.AndroidHttpClientConnection: org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers)>(r24);

        i2 = interfaceinvoke r35.<org.apache.http.StatusLine: int getStatusCode()>();

     label17:
        if i2 < 200 goto label16;

        if i2 != 200 goto label31;

     label18:
        $r73 = staticinvoke <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r74 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $r71 = virtualinvoke $r74.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $r72 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $i7 = virtualinvoke $r72.<org.apache.http.HttpHost: int getPort()>();

        $r80 = virtualinvoke $r73.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r18, $r71, $i7, 1);

        r2 = (javax.net.ssl.SSLSocket) $r80;

     label19:
        r6 = staticinvoke <android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()>();

        $r49 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        r7 = virtualinvoke $r49.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        r8 = virtualinvoke r6.<android.net.http.CertificateChainValidator: android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String)>(r0, r2, r7);

        if r8 == null goto label49;

        r11 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        entermonitor r11;

     label20:
        r0.<android.net.http.HttpsConnection: boolean mSuspended> = 1;

        exitmonitor r11;

     label21:
        $r53 = virtualinvoke r1.<android.net.http.Request: android.net.http.EventHandler getEventHandler()>();

        $z2 = interfaceinvoke $r53.<android.net.http.EventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>(r8);

        if $z2 != 0 goto label40;

        $r58 = new java.io.IOException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to handle ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r54 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.io.IOException: void <init>(java.lang.String)>($r54);

        throw $r58;

     label22:
        $r95 := @caughtexception;

        r29 = $r95;

        r30 = virtualinvoke r29.<org.apache.http.ParseException: java.lang.String getMessage()>();

        if r30 != null goto label23;

        r30 = "failed to send a CONNECT request";

     label23:
        $r97 = new java.io.IOException;

        specialinvoke $r97.<java.io.IOException: void <init>(java.lang.String)>(r30);

        r33 = $r97;

        throw r33;

     label24:
        $r88 := @caughtexception;

        r27 = $r88;

        r31 = virtualinvoke r27.<org.apache.http.HttpException: java.lang.String getMessage()>();

        if r31 != null goto label25;

        r31 = "failed to send a CONNECT request";

     label25:
        $r87 = new java.io.IOException;

        specialinvoke $r87.<java.io.IOException: void <init>(java.lang.String)>(r31);

        r32 = $r87;

        throw r32;

     label26:
        $r83 := @caughtexception;

        r26 = $r83;

        r25 = virtualinvoke r26.<java.io.IOException: java.lang.String getMessage()>();

        if r25 != null goto label27;

        r25 = "failed to send a CONNECT request";

     label27:
        $r82 = new java.io.IOException;

        specialinvoke $r82.<java.io.IOException: void <init>(java.lang.String)>(r25);

        r28 = $r82;

        throw r28;

     label28:
        $r90 := @caughtexception;

        r41 = $r90;

        goto label29;

     label29:
        r38 = virtualinvoke r41.<java.io.IOException: java.lang.String getMessage()>();

        if r38 != null goto label30;

        r38 = "failed to create an SSL socket";

     label30:
        $r89 = new java.io.IOException;

        specialinvoke $r89.<java.io.IOException: void <init>(java.lang.String)>(r38);

        r39 = $r89;

        throw r39;

     label31:
        r40 = interfaceinvoke r35.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r68 = r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        $i5 = virtualinvoke r40.<org.apache.http.ProtocolVersion: int getMajor()>();

        $i6 = virtualinvoke r40.<org.apache.http.ProtocolVersion: int getMinor()>();

        $r77 = interfaceinvoke r35.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        interfaceinvoke $r68.<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>($i5, $i6, i2, $r77);

        $r75 = r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r75.<android.net.http.EventHandler: void headers(android.net.http.Headers)>(r24);

        $r76 = r1.<android.net.http.Request: android.net.http.EventHandler mEventHandler>;

        interfaceinvoke $r76.<android.net.http.EventHandler: void endData()>();

        virtualinvoke r22.<android.net.http.AndroidHttpClientConnection: void close()>();

        return null;

     label32:
        $r44 = staticinvoke <android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r43 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $r42 = virtualinvoke $r43.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $r47 = r0.<android.net.http.HttpsConnection: org.apache.http.HttpHost mHost>;

        $i3 = virtualinvoke $r47.<org.apache.http.HttpHost: int getPort()>();

        $r46 = virtualinvoke $r44.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r42, $i3);

        r2 = (javax.net.ssl.SSLSocket) $r46;

        virtualinvoke r2.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>(60000);

     label33:
        goto label19;

     label34:
        $r94 := @caughtexception;

        r3 = $r94;

        if r2 == null goto label35;

        virtualinvoke r2.<javax.net.ssl.SSLSocket: void close()>();

     label35:
        r4 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        if r4 != null goto label36;

        r4 = "failed to create an SSL socket";

     label36:
        $r96 = new java.io.IOException;

        specialinvoke $r96.<java.io.IOException: void <init>(java.lang.String)>(r4);

        r5 = $r96;

        throw r5;

     label37:
        $r91 := @caughtexception;

        r12 = $r91;

     label38:
        exitmonitor r11;

     label39:
        throw r12;

     label40:
        r13 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        entermonitor r13;

     label41:
        z0 = r0.<android.net.http.HttpsConnection: boolean mSuspended>;

     label42:
        if z0 == 0 goto label44;

     label43:
        $r52 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        virtualinvoke $r52.<java.lang.Object: void wait(long)>(600000L);

        $z1 = r0.<android.net.http.HttpsConnection: boolean mSuspended>;

        if $z1 == 0 goto label44;

        r0.<android.net.http.HttpsConnection: boolean mSuspended> = 0;

        r0.<android.net.http.HttpsConnection: boolean mAborted> = 1;

     label44:
        $z3 = r0.<android.net.http.HttpsConnection: boolean mAborted>;

        if $z3 == 0 goto label48;

        virtualinvoke r2.<javax.net.ssl.SSLSocket: void close()>();

        $r51 = new android.net.http.SSLConnectionClosedByUserException;

        specialinvoke $r51.<android.net.http.SSLConnectionClosedByUserException: void <init>(java.lang.String)>("connection closed by the user");

        r15 = $r51;

        throw r15;

     label45:
        $r81 := @caughtexception;

        r14 = $r81;

     label46:
        exitmonitor r13;

     label47:
        throw r14;

     label48:
        exitmonitor r13;

     label49:
        $r48 = new android.net.http.AndroidHttpClientConnection;

        specialinvoke $r48.<android.net.http.AndroidHttpClientConnection: void <init>()>();

        r9 = $r48;

        $r50 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r50.<org.apache.http.params.BasicHttpParams: void <init>()>();

        r10 = $r50;

        virtualinvoke r10.<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.buffer-size", 8192);

        virtualinvoke r9.<android.net.http.AndroidHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>(r2, r10);

        return r9;

     label50:
        $r93 := @caughtexception;

        goto label44;

     label51:
        $r86 := @caughtexception;

        r17 = $r86;

        r16 = null;

        goto label12;

     label52:
        $r84 := @caughtexception;

        r17 = $r84;

        r16 = r22;

        goto label12;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label02 to label03 with label51;
        catch java.io.IOException from label03 to label04 with label52;
        catch org.apache.http.ParseException from label05 to label06 with label22;
        catch org.apache.http.HttpException from label05 to label06 with label24;
        catch java.io.IOException from label05 to label06 with label26;
        catch org.apache.http.ParseException from label08 to label09 with label22;
        catch org.apache.http.HttpException from label08 to label09 with label24;
        catch java.io.IOException from label08 to label09 with label26;
        catch org.apache.http.ParseException from label09 to label10 with label22;
        catch org.apache.http.HttpException from label09 to label10 with label24;
        catch java.io.IOException from label09 to label10 with label26;
        catch org.apache.http.ParseException from label15 to label16 with label22;
        catch org.apache.http.HttpException from label15 to label16 with label24;
        catch java.io.IOException from label15 to label16 with label26;
        catch org.apache.http.ParseException from label16 to label17 with label22;
        catch org.apache.http.HttpException from label16 to label17 with label24;
        catch java.io.IOException from label16 to label17 with label26;
        catch java.io.IOException from label18 to label19 with label28;
        catch java.lang.Throwable from label20 to label21 with label37;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.lang.Throwable from label38 to label39 with label37;
        catch java.lang.Throwable from label41 to label42 with label45;
        catch java.lang.InterruptedException from label43 to label44 with label50;
        catch java.lang.Throwable from label43 to label44 with label45;
        catch java.lang.Throwable from label44 to label45 with label45;
        catch java.lang.Throwable from label46 to label47 with label45;
        catch java.lang.Throwable from label48 to label49 with label45;
    }

    void restartConnection(boolean)
    {
        android.net.http.HttpsConnection r0;
        boolean z0, z1, $z2;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.net.http.HttpsConnection;

        z0 := @parameter0: boolean;

        r1 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        entermonitor r1;

     label1:
        $z2 = r0.<android.net.http.HttpsConnection: boolean mSuspended>;

        if $z2 == 0 goto label4;

        r0.<android.net.http.HttpsConnection: boolean mSuspended> = 0;

     label2:
        z1 = 0;

        if z0 != 0 goto label3;

        z1 = 1;

     label3:
        r0.<android.net.http.HttpsConnection: boolean mAborted> = z1;

        $r3 = r0.<android.net.http.HttpsConnection: java.lang.Object mSuspendLock>;

        virtualinvoke $r3.<java.lang.Object: void notify()>();

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

        r2 = $r4;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void setCertificate(android.net.http.SslCertificate)
    {
        android.net.http.HttpsConnection r0;
        android.net.http.SslCertificate r1;

        r0 := @this: android.net.http.HttpsConnection;

        r1 := @parameter0: android.net.http.SslCertificate;

        r0.<android.net.http.HttpsConnection: android.net.http.SslCertificate mCertificate> = r1;

        return;
    }

    public volatile java.lang.String toString()
    {
        android.net.http.HttpsConnection r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpsConnection;

        $r1 = specialinvoke r0.<android.net.http.Connection: java.lang.String toString()>();

        return $r1;
    }
}
