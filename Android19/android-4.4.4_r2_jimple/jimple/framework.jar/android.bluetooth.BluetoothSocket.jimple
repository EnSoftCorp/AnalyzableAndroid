public final class android.bluetooth.BluetoothSocket extends java.lang.Object implements java.io.Closeable
{
    private static final boolean DBG;
    static final int EADDRINUSE;
    static final int EBADFD;
    public static final int MAX_RFCOMM_CHANNEL;
    private static int PROXY_CONNECTION_TIMEOUT;
    static final int SEC_FLAG_AUTH;
    static final int SEC_FLAG_ENCRYPT;
    private static int SOCK_SIGNAL_SIZE;
    private static final java.lang.String TAG;
    static final int TYPE_L2CAP;
    static final int TYPE_RFCOMM;
    static final int TYPE_SCO;
    private static final boolean VDBG;
    private java.lang.String mAddress;
    private final boolean mAuth;
    private android.bluetooth.BluetoothDevice mDevice;
    private final boolean mEncrypt;
    private int mFd;
    private final android.bluetooth.BluetoothInputStream mInputStream;
    private final android.bluetooth.BluetoothOutputStream mOutputStream;
    private android.os.ParcelFileDescriptor mPfd;
    private int mPort;
    private java.lang.String mServiceName;
    private android.net.LocalSocket mSocket;
    private java.io.InputStream mSocketIS;
    private java.io.OutputStream mSocketOS;
    private volatile android.bluetooth.BluetoothSocket$SocketState mSocketState;
    private final int mType;
    private final android.os.ParcelUuid mUuid;

    static void <clinit>()
    {
        <android.bluetooth.BluetoothSocket: int TYPE_SCO> = 2;

        <android.bluetooth.BluetoothSocket: int TYPE_RFCOMM> = 1;

        <android.bluetooth.BluetoothSocket: int TYPE_L2CAP> = 3;

        <android.bluetooth.BluetoothSocket: java.lang.String TAG> = "BluetoothSocket";

        <android.bluetooth.BluetoothSocket: int SEC_FLAG_ENCRYPT> = 1;

        <android.bluetooth.BluetoothSocket: int SEC_FLAG_AUTH> = 2;

        <android.bluetooth.BluetoothSocket: int MAX_RFCOMM_CHANNEL> = 30;

        <android.bluetooth.BluetoothSocket: int EBADFD> = 77;

        <android.bluetooth.BluetoothSocket: int EADDRINUSE> = 98;

        <android.bluetooth.BluetoothSocket: boolean DBG> = 1;

        <android.bluetooth.BluetoothSocket: int PROXY_CONNECTION_TIMEOUT> = 5000;

        <android.bluetooth.BluetoothSocket: int SOCK_SIGNAL_SIZE> = 16;

        return;
    }

    void <init>(int, int, boolean, boolean, android.bluetooth.BluetoothDevice, int, android.os.ParcelUuid) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        int i0, i1, i2;
        boolean z0, z1;
        android.bluetooth.BluetoothDevice r1;
        android.os.ParcelUuid r2, $r3;
        java.util.UUID $r4;
        android.bluetooth.BluetoothSocket$SocketState $r5;
        java.lang.String $r6, $r10, $r15;
        android.bluetooth.BluetoothInputStream $r7;
        android.bluetooth.BluetoothOutputStream $r8;
        android.bluetooth.BluetoothAdapter $r9;
        java.lang.StringBuilder $r11, $r13, $r14;
        java.io.IOException $r12;

        r0 := @this: android.bluetooth.BluetoothSocket;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r1 := @parameter4: android.bluetooth.BluetoothDevice;

        i2 := @parameter5: int;

        r2 := @parameter6: android.os.ParcelUuid;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 1 goto label2;

        if r2 != null goto label2;

        if i1 != -1 goto label2;

        if i2 < 1 goto label1;

        if i2 <= 30 goto label2;

     label1:
        $r12 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid RFCOMM channel: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label2:
        if r2 == null goto label5;

        r0.<android.bluetooth.BluetoothSocket: android.os.ParcelUuid mUuid> = r2;

     label3:
        r0.<android.bluetooth.BluetoothSocket: int mType> = i0;

        r0.<android.bluetooth.BluetoothSocket: boolean mAuth> = z0;

        r0.<android.bluetooth.BluetoothSocket: boolean mEncrypt> = z1;

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice mDevice> = r1;

        r0.<android.bluetooth.BluetoothSocket: int mPort> = i2;

        r0.<android.bluetooth.BluetoothSocket: int mFd> = i1;

        $r5 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState INIT>;

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState> = $r5;

        if r1 != null goto label6;

        $r9 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        $r10 = virtualinvoke $r9.<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>();

        r0.<android.bluetooth.BluetoothSocket: java.lang.String mAddress> = $r10;

     label4:
        $r7 = new android.bluetooth.BluetoothInputStream;

        specialinvoke $r7.<android.bluetooth.BluetoothInputStream: void <init>(android.bluetooth.BluetoothSocket)>(r0);

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothInputStream mInputStream> = $r7;

        $r8 = new android.bluetooth.BluetoothOutputStream;

        specialinvoke $r8.<android.bluetooth.BluetoothOutputStream: void <init>(android.bluetooth.BluetoothSocket)>(r0);

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothOutputStream mOutputStream> = $r8;

        return;

     label5:
        $r3 = new android.os.ParcelUuid;

        $r4 = new java.util.UUID;

        specialinvoke $r4.<java.util.UUID: void <init>(long,long)>(0L, 0L);

        specialinvoke $r3.<android.os.ParcelUuid: void <init>(java.util.UUID)>($r4);

        r0.<android.bluetooth.BluetoothSocket: android.os.ParcelUuid mUuid> = $r3;

        goto label3;

     label6:
        $r6 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r0.<android.bluetooth.BluetoothSocket: java.lang.String mAddress> = $r6;

        goto label4;
    }

    private void <init>(int, int, boolean, boolean, java.lang.String, int) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        int i0, i1, i2;
        boolean z0, z1;
        java.lang.String r1;
        android.bluetooth.BluetoothDevice $r2;

        r0 := @this: android.bluetooth.BluetoothSocket;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r1 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        $r2 = new android.bluetooth.BluetoothDevice;

        specialinvoke $r2.<android.bluetooth.BluetoothDevice: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>(i0, i1, z0, z1, $r2, i2, null);

        return;
    }

    private void <init>(android.bluetooth.BluetoothSocket)
    {
        android.bluetooth.BluetoothSocket r0, r1;
        android.os.ParcelUuid $r2;
        int $i0, $i1;
        boolean $z0, $z1;
        android.bluetooth.BluetoothInputStream $r3;
        android.bluetooth.BluetoothOutputStream $r4;
        java.lang.String $r5;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: android.bluetooth.BluetoothSocket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<android.bluetooth.BluetoothSocket: android.os.ParcelUuid mUuid>;

        r0.<android.bluetooth.BluetoothSocket: android.os.ParcelUuid mUuid> = $r2;

        $i0 = r1.<android.bluetooth.BluetoothSocket: int mType>;

        r0.<android.bluetooth.BluetoothSocket: int mType> = $i0;

        $z0 = r1.<android.bluetooth.BluetoothSocket: boolean mAuth>;

        r0.<android.bluetooth.BluetoothSocket: boolean mAuth> = $z0;

        $z1 = r1.<android.bluetooth.BluetoothSocket: boolean mEncrypt>;

        r0.<android.bluetooth.BluetoothSocket: boolean mEncrypt> = $z1;

        $i1 = r1.<android.bluetooth.BluetoothSocket: int mPort>;

        r0.<android.bluetooth.BluetoothSocket: int mPort> = $i1;

        $r3 = new android.bluetooth.BluetoothInputStream;

        specialinvoke $r3.<android.bluetooth.BluetoothInputStream: void <init>(android.bluetooth.BluetoothSocket)>(r0);

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothInputStream mInputStream> = $r3;

        $r4 = new android.bluetooth.BluetoothOutputStream;

        specialinvoke $r4.<android.bluetooth.BluetoothOutputStream: void <init>(android.bluetooth.BluetoothSocket)>(r0);

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothOutputStream mOutputStream> = $r4;

        $r5 = r1.<android.bluetooth.BluetoothSocket: java.lang.String mServiceName>;

        r0.<android.bluetooth.BluetoothSocket: java.lang.String mServiceName> = $r5;

        return;
    }

    private android.bluetooth.BluetoothSocket acceptSocket(java.lang.String) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0, r2, $r4;
        java.lang.String r1, $r10;
        java.io.FileDescriptor[] r3;
        android.bluetooth.BluetoothSocket$SocketState $r5;
        android.net.LocalSocket $r6, $r13, $r15, $r17;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.io.IOException $r11;
        int $i1;
        java.io.FileDescriptor $r12;
        java.io.InputStream $r14;
        java.io.OutputStream $r16;
        android.bluetooth.BluetoothDevice $r18;
        android.bluetooth.BluetoothAdapter $r19;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: java.lang.String;

        $r4 = new android.bluetooth.BluetoothSocket;

        specialinvoke $r4.<android.bluetooth.BluetoothSocket: void <init>(android.bluetooth.BluetoothSocket)>(r0);

        r2 = $r4;

        $r5 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CONNECTED>;

        r2.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState> = $r5;

        $r6 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        r3 = virtualinvoke $r6.<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>();

        if r3 == null goto label1;

        $i1 = lengthof r3;

        if $i1 == 1 goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("socket fd passed from stack failed, fds: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothSocket", $r10);

        virtualinvoke r2.<android.bluetooth.BluetoothSocket: void close()>();

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("bt socket acept failed");

        throw $r11;

     label2:
        $r13 = new android.net.LocalSocket;

        $r12 = r3[0];

        specialinvoke $r13.<android.net.LocalSocket: void <init>(java.io.FileDescriptor)>($r12);

        r2.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket> = $r13;

        $r15 = r2.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        $r14 = virtualinvoke $r15.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        r2.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS> = $r14;

        $r17 = r2.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        $r16 = virtualinvoke $r17.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        r2.<android.bluetooth.BluetoothSocket: java.io.OutputStream mSocketOS> = $r16;

        r2.<android.bluetooth.BluetoothSocket: java.lang.String mAddress> = r1;

        $r19 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        $r18 = virtualinvoke $r19.<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>(r1);

        r2.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice mDevice> = $r18;

        return r2;
    }

    private java.lang.String convertAddr(byte[])
    {
        android.bluetooth.BluetoothSocket r0;
        byte[] r1;
        java.util.Locale r2;
        java.lang.Object[] r3;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        java.lang.Byte $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: byte[];

        r2 = <java.util.Locale: java.util.Locale US>;

        r3 = newarray (java.lang.Object)[6];

        $b0 = r1[0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        r3[0] = $r4;

        $b1 = r1[1];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        r3[1] = $r5;

        $b2 = r1[2];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        r3[2] = $r6;

        $b3 = r1[3];

        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        r3[3] = $r7;

        $b4 = r1[4];

        $r8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4);

        r3[4] = $r8;

        $b5 = r1[5];

        $r9 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b5);

        r3[5] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r2, "%02X:%02X:%02X:%02X:%02X:%02X", r3);

        return $r10;
    }

    private int getSecurityFlags()
    {
        android.bluetooth.BluetoothSocket r0;
        boolean z0, $z1;
        byte b0;

        r0 := @this: android.bluetooth.BluetoothSocket;

        z0 = r0.<android.bluetooth.BluetoothSocket: boolean mAuth>;

        b0 = 0;

        if z0 == 0 goto label1;

        b0 = 2;

     label1:
        $z1 = r0.<android.bluetooth.BluetoothSocket: boolean mEncrypt>;

        if $z1 == 0 goto label2;

        b0 = b0 | 1;

     label2:
        return b0;
    }

    private int readAll(java.io.InputStream, byte[]) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        java.io.InputStream r1;
        byte[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12;
        java.lang.String $r8, $r13;
        java.io.IOException $r10;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i0 = lengthof r2;

     label1:
        if i0 <= 0 goto label3;

        $i3 = lengthof r2;

        $i4 = $i3 - i0;

        i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, $i4, i0);

        if i1 > 0 goto label2;

        $r10 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read failed, socket might closed or timeout, read ret: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label2:
        i0 = i0 - i1;

        if i0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAll() looping, read partial size: ");

        $i5 = lengthof r2;

        $i6 = $i5 - i0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expect size: ");

        $i7 = lengthof r2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothSocket", $r8);

        goto label1;

     label3:
        $i2 = lengthof r2;

        return $i2;
    }

    private int readInt(java.io.InputStream) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        java.io.InputStream r1;
        byte[] r2;
        java.nio.ByteBuffer r3;
        java.nio.ByteOrder $r4;
        int $i1;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: java.io.InputStream;

        r2 = newarray (byte)[4];

        specialinvoke r0.<android.bluetooth.BluetoothSocket: int readAll(java.io.InputStream,byte[])>(r1, r2);

        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        $r4 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r4);

        $i1 = virtualinvoke r3.<java.nio.ByteBuffer: int getInt()>();

        return $i1;
    }

    private java.lang.String waitSocketSignal(java.io.InputStream) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        java.io.InputStream r1;
        byte[] r2, r4;
        java.nio.ByteBuffer r3;
        short s0;
        int i1, $i2, $i4;
        java.lang.String r5, $r12, $r18;
        java.nio.ByteOrder $r6;
        java.io.IOException $r9, $r15;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16, $r17;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: java.io.InputStream;

        $i2 = <android.bluetooth.BluetoothSocket: int SOCK_SIGNAL_SIZE>;

        r2 = newarray (byte)[$i2];

        specialinvoke r0.<android.bluetooth.BluetoothSocket: int readAll(java.io.InputStream,byte[])>(r1, r2);

        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        $r6 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r6);

        s0 = virtualinvoke r3.<java.nio.ByteBuffer: short getShort()>();

        $i4 = <android.bluetooth.BluetoothSocket: int SOCK_SIGNAL_SIZE>;

        if s0 == $i4 goto label1;

        $r15 = new java.io.IOException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection failure, wrong signal size: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label1:
        r4 = newarray (byte)[6];

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r4);

        virtualinvoke r3.<java.nio.ByteBuffer: int getInt()>();

        i1 = virtualinvoke r3.<java.nio.ByteBuffer: int getInt()>();

        r5 = specialinvoke r0.<android.bluetooth.BluetoothSocket: java.lang.String convertAddr(byte[])>(r4);

        if i1 == 0 goto label2;

        $r9 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection failure, status: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label2:
        return r5;
    }

    android.bluetooth.BluetoothSocket accept(int) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0, r3;
        int i0;
        java.lang.String r1, $r14;
        java.lang.Throwable r2, $r17;
        android.bluetooth.BluetoothSocket$SocketState $r4, $r5, $r7, $r8;
        java.io.InputStream $r6;
        java.io.IOException $r9, $r15;
        android.net.LocalSocket $r10, $r16;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @this: android.bluetooth.BluetoothSocket;

        i0 := @parameter0: int;

        $r5 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r4 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState LISTENING>;

        if $r5 == $r4 goto label1;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("bt socket is not in listen state");

        throw $r15;

     label1:
        if i0 <= 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accept() set timeout (ms):");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothSocket", $r14);

        $r16 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        virtualinvoke $r16.<android.net.LocalSocket: void setSoTimeout(int)>(i0);

     label2:
        $r6 = r0.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS>;

        r1 = specialinvoke r0.<android.bluetooth.BluetoothSocket: java.lang.String waitSocketSignal(java.io.InputStream)>($r6);

        if i0 <= 0 goto label3;

        $r10 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        virtualinvoke $r10.<android.net.LocalSocket: void setSoTimeout(int)>(0);

     label3:
        entermonitor r0;

     label4:
        $r8 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r7 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState LISTENING>;

        if $r8 == $r7 goto label8;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("bt socket is not in listen state");

        throw $r9;

     label5:
        $r17 := @caughtexception;

        r2 = $r17;

     label6:
        exitmonitor r0;

     label7:
        throw r2;

     label8:
        r3 = specialinvoke r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket acceptSocket(java.lang.String)>(r1);

        exitmonitor r0;

     label9:
        return r3;

        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    int available() throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r1 = r0.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    int bindListen()
    {
        android.bluetooth.BluetoothSocket r0;
        android.bluetooth.IBluetooth r1;
        java.io.IOException r3, $r30;
        java.lang.Throwable r4, r5, $r27, $r28, $r31;
        int i0, $i1, $i2, $i3, $i4;
        android.bluetooth.BluetoothSocket$SocketState $r6, $r7, $r12, $r13, $r23, $r24, $r25;
        android.bluetooth.BluetoothAdapter $r8;
        java.lang.String $r9, $r29, $r35;
        android.os.ParcelUuid $r10;
        android.os.ParcelFileDescriptor $r11, $r15, $r17;
        android.net.LocalSocket $r14, $r19, $r21;
        java.io.FileDescriptor $r16;
        java.io.InputStream $r18, $r22;
        java.io.OutputStream $r20;
        android.os.RemoteException $r26;
        java.lang.StringBuilder $r32, $r33, $r34;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r7 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r6 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CLOSED>;

        if $r7 != $r6 goto label01;

        return 77;

     label01:
        $r8 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r1 = virtualinvoke $r8.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)>(null);

        if r1 != null goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothSocket", "bindListen fail, reason: bluetooth is off");

        return -1;

     label02:
        $i1 = r0.<android.bluetooth.BluetoothSocket: int mType>;

        $r9 = r0.<android.bluetooth.BluetoothSocket: java.lang.String mServiceName>;

        $r10 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelUuid mUuid>;

        $i3 = r0.<android.bluetooth.BluetoothSocket: int mPort>;

        $i2 = specialinvoke r0.<android.bluetooth.BluetoothSocket: int getSecurityFlags()>();

        $r11 = interfaceinvoke r1.<android.bluetooth.IBluetooth: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>($i1, $r9, $r10, $i3, $i2);

        r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd> = $r11;

     label03:
        entermonitor r0;

     label04:
        $r12 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r13 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState INIT>;

        if $r12 == $r13 goto label11;

        exitmonitor r0;

     label05:
        return 77;

     label06:
        $r28 := @caughtexception;

        r4 = $r28;

     label07:
        exitmonitor r0;

     label08:
        throw r4;

     label09:
        $r30 := @caughtexception;

        r3 = $r30;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bindListen, fail to get port number, exception: ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothSocket", $r35);

        return -1;

     label10:
        $r26 := @caughtexception;

        $r27 = new java.lang.Throwable;

        specialinvoke $r27.<java.lang.Throwable: void <init>()>();

        $r29 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r27);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothSocket", $r29);

        return -1;

     label11:
        $r15 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd>;

        if $r15 != null goto label13;

        exitmonitor r0;

     label12:
        return -1;

     label13:
        $r14 = new android.net.LocalSocket;

        $r17 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd>;

        $r16 = virtualinvoke $r17.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r14.<android.net.LocalSocket: void <init>(java.io.FileDescriptor)>($r16);

        r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket> = $r14;

        $r19 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        $r18 = virtualinvoke $r19.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        r0.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS> = $r18;

        $r21 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        $r20 = virtualinvoke $r21.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        r0.<android.bluetooth.BluetoothSocket: java.io.OutputStream mSocketOS> = $r20;

        exitmonitor r0;

     label14:
        $r22 = r0.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS>;

        i0 = specialinvoke r0.<android.bluetooth.BluetoothSocket: int readInt(java.io.InputStream)>($r22);

        entermonitor r0;

     label15:
        $r24 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r23 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState INIT>;

        if $r24 != $r23 goto label16;

        $r25 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState LISTENING>;

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState> = $r25;

     label16:
        exitmonitor r0;

     label17:
        $i4 = r0.<android.bluetooth.BluetoothSocket: int mPort>;

        if $i4 != -1 goto label18;

        r0.<android.bluetooth.BluetoothSocket: int mPort> = i0;

     label18:
        return 0;

     label19:
        $r31 := @caughtexception;

        r5 = $r31;

     label20:
        exitmonitor r0;

     label21:
        throw r5;

        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.io.IOException from label08 to label09 with label09;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Throwable from label13 to label14 with label06;
        catch java.io.IOException from label14 to label15 with label09;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.io.IOException from label17 to label18 with label09;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public void close() throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        java.lang.Throwable r1, $r13;
        android.bluetooth.BluetoothSocket$SocketState $r2, $r3, $r4, $r5, $r6;
        android.net.LocalSocket $r7, $r10, $r11, $r12;
        android.os.ParcelFileDescriptor $r8, $r9;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r3 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r2 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CLOSED>;

        if $r3 != $r2 goto label01;

        return;

     label01:
        entermonitor r0;

     label02:
        $r5 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r4 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CLOSED>;

        if $r5 != $r4 goto label07;

        exitmonitor r0;

     label03:
        return;

     label04:
        $r13 := @caughtexception;

        r1 = $r13;

     label05:
        exitmonitor r0;

     label06:
        throw r1;

     label07:
        $r6 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CLOSED>;

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState> = $r6;

        $r7 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        if $r7 == null goto label08;

        $r10 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        virtualinvoke $r10.<android.net.LocalSocket: void shutdownInput()>();

        $r11 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        virtualinvoke $r11.<android.net.LocalSocket: void shutdownOutput()>();

        $r12 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        virtualinvoke $r12.<android.net.LocalSocket: void close()>();

        r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket> = null;

     label08:
        $r8 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd>;

        if $r8 == null goto label09;

        $r9 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd>;

        virtualinvoke $r9.<android.os.ParcelFileDescriptor: int detachFd()>();

     label09:
        exitmonitor r0;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
    }

    public void connect() throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        android.bluetooth.IBluetooth r2;
        java.lang.Throwable r3, r4, $r41, $r44, $r46;
        int i0, $i1, $i2, $i3;
        android.bluetooth.BluetoothDevice $r5, $r9;
        android.bluetooth.BluetoothSocket$SocketState $r6, $r7, $r15, $r20, $r23, $r31, $r35, $r36;
        android.bluetooth.BluetoothAdapter $r8;
        android.os.ParcelUuid $r10;
        android.os.ParcelFileDescriptor $r11, $r16, $r22, $r24;
        java.lang.StringBuilder $r12, $r13, $r14, $r17, $r19;
        java.lang.String $r18, $r47;
        android.net.LocalSocket $r21, $r26, $r28;
        java.io.InputStream $r25, $r29, $r32;
        java.io.FileDescriptor $r27;
        java.io.OutputStream $r30;
        java.io.IOException $r34, $r37, $r38, $r39, $r40, $r42, $r43;
        android.os.RemoteException $r45;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r5 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice mDevice>;

        if $r5 != null goto label01;

        $r42 = new java.io.IOException;

        specialinvoke $r42.<java.io.IOException: void <init>(java.lang.String)>("Connect is called on null device");

        throw $r42;

     label01:
        $r7 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r6 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CLOSED>;

        if $r7 != $r6 goto label03;

        $r43 = new java.io.IOException;

        specialinvoke $r43.<java.io.IOException: void <init>(java.lang.String)>("socket closed");

        throw $r43;

     label02:
        $r45 := @caughtexception;

        $r44 = new java.lang.Throwable;

        specialinvoke $r44.<java.lang.Throwable: void <init>()>();

        $r47 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r44);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BluetoothSocket", $r47);

        return;

     label03:
        $r8 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r2 = virtualinvoke $r8.<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)>(null);

     label04:
        if r2 != null goto label06;

     label05:
        $r37 = new java.io.IOException;

        specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>("Bluetooth is off");

        throw $r37;

     label06:
        $r9 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice mDevice>;

        $i1 = r0.<android.bluetooth.BluetoothSocket: int mType>;

        $r10 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelUuid mUuid>;

        $i2 = r0.<android.bluetooth.BluetoothSocket: int mPort>;

        $i3 = specialinvoke r0.<android.bluetooth.BluetoothSocket: int getSecurityFlags()>();

        $r11 = interfaceinvoke r2.<android.bluetooth.IBluetooth: android.os.ParcelFileDescriptor connectSocket(android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid,int,int)>($r9, $i1, $r10, $i2, $i3);

        r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd> = $r11;

        entermonitor r0;

     label07:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connect(), SocketState: ");

        $r15 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mPfd: ");

        $r16 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothSocket", $r18);

        $r23 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r20 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CLOSED>;

        if $r23 != $r20 goto label11;

        $r38 = new java.io.IOException;

        specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>("socket closed");

        throw $r38;

     label08:
        $r46 := @caughtexception;

        r3 = $r46;

     label09:
        exitmonitor r0;

     label10:
        throw r3;

     label11:
        $r24 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd>;

        if $r24 != null goto label12;

        $r39 = new java.io.IOException;

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>("bt socket connect failed");

        throw $r39;

     label12:
        $r21 = new android.net.LocalSocket;

        $r22 = r0.<android.bluetooth.BluetoothSocket: android.os.ParcelFileDescriptor mPfd>;

        $r27 = virtualinvoke $r22.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r21.<android.net.LocalSocket: void <init>(java.io.FileDescriptor)>($r27);

        r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket> = $r21;

        $r28 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        $r25 = virtualinvoke $r28.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        r0.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS> = $r25;

        $r26 = r0.<android.bluetooth.BluetoothSocket: android.net.LocalSocket mSocket>;

        $r30 = virtualinvoke $r26.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        r0.<android.bluetooth.BluetoothSocket: java.io.OutputStream mSocketOS> = $r30;

        exitmonitor r0;

     label13:
        $r29 = r0.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS>;

        i0 = specialinvoke r0.<android.bluetooth.BluetoothSocket: int readInt(java.io.InputStream)>($r29);

     label14:
        if i0 > 0 goto label16;

     label15:
        $r40 = new java.io.IOException;

        specialinvoke $r40.<java.io.IOException: void <init>(java.lang.String)>("bt socket connect failed");

        throw $r40;

     label16:
        r0.<android.bluetooth.BluetoothSocket: int mPort> = i0;

        $r32 = r0.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS>;

        specialinvoke r0.<android.bluetooth.BluetoothSocket: java.lang.String waitSocketSignal(java.io.InputStream)>($r32);

        entermonitor r0;

     label17:
        $r36 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r31 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CLOSED>;

        if $r36 != $r31 goto label21;

        $r34 = new java.io.IOException;

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>("bt socket closed");

        throw $r34;

     label18:
        $r41 := @caughtexception;

        r4 = $r41;

     label19:
        exitmonitor r0;

     label20:
        throw r4;

     label21:
        $r35 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CONNECTED>;

        r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState> = $r35;

        exitmonitor r0;

     label22:
        return;

        catch android.os.RemoteException from label01 to label02 with label02;
        catch android.os.RemoteException from label03 to label04 with label02;
        catch android.os.RemoteException from label05 to label06 with label02;
        catch android.os.RemoteException from label06 to label07 with label02;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch android.os.RemoteException from label10 to label11 with label02;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
        catch android.os.RemoteException from label13 to label14 with label02;
        catch android.os.RemoteException from label15 to label16 with label02;
        catch android.os.RemoteException from label16 to label17 with label02;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch android.os.RemoteException from label20 to label21 with label02;
        catch java.lang.Throwable from label21 to label22 with label18;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.bluetooth.BluetoothSocket r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.bluetooth.BluetoothSocket;

     label1:
        virtualinvoke r0.<android.bluetooth.BluetoothSocket: void close()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void flush() throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        java.io.OutputStream $r1;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r1 = r0.<android.bluetooth.BluetoothSocket: java.io.OutputStream mSocketOS>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        android.bluetooth.BluetoothInputStream $r1;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r1 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothInputStream mInputStream>;

        return $r1;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        android.bluetooth.BluetoothOutputStream $r1;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r1 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothOutputStream mOutputStream>;

        return $r1;
    }

    int getPort()
    {
        android.bluetooth.BluetoothSocket r0;
        int $i0;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $i0 = r0.<android.bluetooth.BluetoothSocket: int mPort>;

        return $i0;
    }

    public android.bluetooth.BluetoothDevice getRemoteDevice()
    {
        android.bluetooth.BluetoothSocket r0;
        android.bluetooth.BluetoothDevice $r1;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r1 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice mDevice>;

        return $r1;
    }

    public boolean isConnected()
    {
        android.bluetooth.BluetoothSocket r0;
        android.bluetooth.BluetoothSocket$SocketState $r1, $r2;

        r0 := @this: android.bluetooth.BluetoothSocket;

        $r2 = r0.<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket$SocketState mSocketState>;

        $r1 = <android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState CONNECTED>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    int read(byte[], int, int) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        byte[] r1;
        int i0, i1, i2;
        java.io.InputStream $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.bluetooth.BluetoothSocket: java.io.InputStream mSocketIS>;

        i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        if i2 >= 0 goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bt socket closed, read return: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return i2;
    }

    void removeChannel()
    {
        android.bluetooth.BluetoothSocket r0;

        r0 := @this: android.bluetooth.BluetoothSocket;

        return;
    }

    void setServiceName(java.lang.String)
    {
        android.bluetooth.BluetoothSocket r0;
        java.lang.String r1;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: java.lang.String;

        r0.<android.bluetooth.BluetoothSocket: java.lang.String mServiceName> = r1;

        return;
    }

    int write(byte[], int, int) throws java.io.IOException
    {
        android.bluetooth.BluetoothSocket r0;
        byte[] r1;
        int i0, i1;
        java.io.OutputStream $r2;

        r0 := @this: android.bluetooth.BluetoothSocket;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.bluetooth.BluetoothSocket: java.io.OutputStream mSocketOS>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return i1;
    }
}
