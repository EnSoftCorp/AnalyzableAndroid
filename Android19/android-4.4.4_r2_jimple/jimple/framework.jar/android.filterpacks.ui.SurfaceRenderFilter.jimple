public class android.filterpacks.ui.SurfaceRenderFilter extends android.filterfw.core.Filter implements android.view.SurfaceHolder$Callback
{
    private static final java.lang.String TAG;
    private final int RENDERMODE_FILL_CROP;
    private final int RENDERMODE_FIT;
    private final int RENDERMODE_STRETCH;
    private float mAspectRatio;
    private boolean mIsBound;
    private boolean mLogVerbose;
    private android.filterfw.core.ShaderProgram mProgram;
    private int mRenderMode;
    private java.lang.String mRenderModeString;
    private android.filterfw.core.GLFrame mScreen;
    private int mScreenHeight;
    private int mScreenWidth;
    private android.filterfw.core.FilterSurfaceView mSurfaceView;

    public void <init>(java.lang.String)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int RENDERMODE_STRETCH> = 0;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int RENDERMODE_FIT> = 1;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int RENDERMODE_FILL_CROP> = 2;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: boolean mIsBound> = 0;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int mRenderMode> = 1;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: float mAspectRatio> = 1.0F;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SurfaceRenderFilter", 2);

        r0.<android.filterpacks.ui.SurfaceRenderFilter: boolean mLogVerbose> = $z0;

        return;
    }

    private void updateTargetRect()
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        int $i0, $i1, $i2, $i3, $i4;
        android.filterfw.core.ShaderProgram $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b5, $b6;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        $i0 = r0.<android.filterpacks.ui.SurfaceRenderFilter: int mScreenWidth>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<android.filterpacks.ui.SurfaceRenderFilter: int mScreenHeight>;

        if $i1 <= 0 goto label1;

        $r1 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        if $r1 == null goto label1;

        $i2 = r0.<android.filterpacks.ui.SurfaceRenderFilter: int mScreenWidth>;

        $f2 = (float) $i2;

        $i3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: int mScreenHeight>;

        $f1 = (float) $i3;

        $f4 = $f2 / $f1;

        $f3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: float mAspectRatio>;

        f0 = $f4 / $f3;

        $i4 = r0.<android.filterpacks.ui.SurfaceRenderFilter: int mRenderMode>;

        tableswitch($i4)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label5;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r6 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r6.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>(0.0F, 0.0F, 1.0F, 1.0F);

        return;

     label3:
        $b6 = f0 cmpl 1.0F;

        if $b6 <= 0 goto label4;

        $r5 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        $f13 = 0.5F / f0;

        $f14 = 0.5F - $f13;

        $f12 = 1.0F / f0;

        virtualinvoke $r5.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>($f14, 0.0F, $f12, 1.0F);

        return;

     label4:
        $r4 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        $f10 = 0.5F * f0;

        $f11 = 0.5F - $f10;

        virtualinvoke $r4.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>(0.0F, $f11, 1.0F, f0);

        return;

     label5:
        $b5 = f0 cmpl 1.0F;

        if $b5 <= 0 goto label6;

        $r3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        $f8 = 0.5F * f0;

        $f9 = 0.5F - $f8;

        virtualinvoke $r3.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>(0.0F, $f9, 1.0F, f0);

        return;

     label6:
        $r2 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        $f5 = 0.5F / f0;

        $f7 = 0.5F - $f5;

        $f6 = 1.0F / f0;

        virtualinvoke $r2.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>($f7, 0.0F, $f6, 1.0F);

        return;
    }

    public void close(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.FilterSurfaceView $r2;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.FilterSurfaceView mSurfaceView>;

        virtualinvoke $r2.<android.filterfw.core.FilterSurfaceView: void unbind()>();

        return;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        specialinvoke r0.<android.filterpacks.ui.SurfaceRenderFilter: void updateTargetRect()>();

        return;
    }

    public void open(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.FilterSurfaceView $r2, $r3;
        android.filterfw.core.GLEnvironment $r4;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.FilterSurfaceView mSurfaceView>;

        virtualinvoke $r2.<android.filterfw.core.FilterSurfaceView: void unbind()>();

        $r3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.FilterSurfaceView mSurfaceView>;

        $r4 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>();

        virtualinvoke $r3.<android.filterfw.core.FilterSurfaceView: void bindToListener(android.view.SurfaceHolder$Callback,android.filterfw.core.GLEnvironment)>(r0, $r4);

        return;
    }

    public void prepare(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.MutableFrameFormat r2;
        android.filterfw.core.ShaderProgram $r3, $r4, $r5, $r6;
        android.filterfw.core.FilterSurfaceView $r7, $r8;
        int $i0, $i1;
        android.filterfw.core.FrameManager $r9;
        android.filterfw.core.Frame $r10;
        android.filterfw.core.GLFrame $r11;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r3 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram> = $r3;

        $r4 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r4.<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>(0.0F, 1.0F, 1.0F, -1.0F);

        $r5 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r5.<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>(1);

        $r6 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r6.<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)>(0.0F, 0.0F, 0.0F);

        virtualinvoke r0.<android.filterpacks.ui.SurfaceRenderFilter: void updateRenderMode()>();

        $r7 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.FilterSurfaceView mSurfaceView>;

        $i0 = virtualinvoke $r7.<android.filterfw.core.FilterSurfaceView: int getWidth()>();

        $r8 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.FilterSurfaceView mSurfaceView>;

        $i1 = virtualinvoke $r8.<android.filterfw.core.FilterSurfaceView: int getHeight()>();

        r2 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>($i0, $i1, 3, 3);

        $r9 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r10 = virtualinvoke $r9.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>(r2, 101, 0L);

        $r11 = (android.filterfw.core.GLFrame) $r10;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.GLFrame mScreen> = $r11;

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.GLEnvironment r2, $r6;
        android.filterfw.core.Frame r3, r4;
        float f0, $f1, $f2, $f3, $f4;
        boolean z0, $z1, $z2, $z3, $z4;
        android.filterfw.core.FilterSurfaceView $r5, $r10;
        android.filterfw.core.FrameFormat $r7, $r8, $r9, $r16;
        int $i0, $i1, $i3, $i4;
        byte $b2;
        android.filterfw.core.ShaderProgram $r11;
        android.filterfw.core.GLFrame $r12;
        android.filterfw.core.FrameManager $r13;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r29, $r30;
        java.lang.String $r20, $r24, $r28;
        java.lang.RuntimeException $r27;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $z1 = r0.<android.filterpacks.ui.SurfaceRenderFilter: boolean mIsBound>;

        if $z1 != 0 goto label2;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Ignoring frame as there is no surface to render to!");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SurfaceRenderFilter", $r28);

     label1:
        return;

     label2:
        $z2 = r0.<android.filterpacks.ui.SurfaceRenderFilter: boolean mLogVerbose>;

        if $z2 == 0 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceRenderFilter", "Starting frame processing");

     label3:
        $r5 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.FilterSurfaceView mSurfaceView>;

        r2 = virtualinvoke $r5.<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment getGLEnv()>();

        $r6 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>();

        if r2 == $r6 goto label4;

        $r27 = new java.lang.RuntimeException;

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String)>("Surface created under different GLEnvironment!");

        throw $r27;

     label4:
        r3 = virtualinvoke r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("frame");

        $r7 = virtualinvoke r3.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i0 = virtualinvoke $r7.<android.filterfw.core.FrameFormat: int getWidth()>();

        $f1 = (float) $i0;

        $r8 = virtualinvoke r3.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i1 = virtualinvoke $r8.<android.filterfw.core.FrameFormat: int getHeight()>();

        $f3 = (float) $i1;

        f0 = $f1 / $f3;

        $f2 = r0.<android.filterpacks.ui.SurfaceRenderFilter: float mAspectRatio>;

        $b2 = f0 cmpl $f2;

        if $b2 == 0 goto label6;

        $z4 = r0.<android.filterpacks.ui.SurfaceRenderFilter: boolean mLogVerbose>;

        if $z4 == 0 goto label5;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New aspect ratio: ");

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", previously: ");

        $f4 = r0.<android.filterpacks.ui.SurfaceRenderFilter: float mAspectRatio>;

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceRenderFilter", $r24);

     label5:
        r0.<android.filterpacks.ui.SurfaceRenderFilter: float mAspectRatio> = f0;

        specialinvoke r0.<android.filterpacks.ui.SurfaceRenderFilter: void updateTargetRect()>();

     label6:
        $z3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: boolean mLogVerbose>;

        if $z3 == 0 goto label7;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got input format: ");

        $r16 = virtualinvoke r3.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SurfaceRenderFilter", $r20);

     label7:
        $r9 = virtualinvoke r3.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i3 = virtualinvoke $r9.<android.filterfw.core.FrameFormat: int getTarget()>();

        if $i3 == 3 goto label9;

        $r13 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r4 = virtualinvoke $r13.<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)>(r3, 3);

        z0 = 1;

     label8:
        $r10 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.FilterSurfaceView mSurfaceView>;

        $i4 = virtualinvoke $r10.<android.filterfw.core.FilterSurfaceView: int getSurfaceId()>();

        virtualinvoke r2.<android.filterfw.core.GLEnvironment: void activateSurfaceWithId(int)>($i4);

        $r11 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.ShaderProgram mProgram>;

        $r12 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.GLFrame mScreen>;

        virtualinvoke $r11.<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r4, $r12);

        virtualinvoke r2.<android.filterfw.core.GLEnvironment: void swapBuffers()>();

        if z0 == 0 goto label1;

        virtualinvoke r4.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;

     label9:
        r4 = r3;

        z0 = 0;

        goto label8;
    }

    public void setupPorts()
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.filterfw.core.FilterSurfaceView $r1;
        android.filterfw.core.MutableFrameFormat $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        $r1 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.FilterSurfaceView mSurfaceView>;

        if $r1 != null goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("NULL SurfaceView passed to SurfaceRenderFilter");

        throw $r3;

     label1:
        $r2 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.ui.SurfaceRenderFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("frame", $r2);

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.Throwable r2, $r5;
        android.filterfw.core.GLFrame $r3, $r4;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        $r3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.GLFrame mScreen>;

        if $r3 == null goto label2;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int mScreenWidth> = i1;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int mScreenHeight> = i2;

        $r4 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.GLFrame mScreen>;

        $i4 = r0.<android.filterpacks.ui.SurfaceRenderFilter: int mScreenWidth>;

        $i3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: int mScreenHeight>;

        virtualinvoke $r4.<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)>(0, 0, $i4, $i3);

        specialinvoke r0.<android.filterpacks.ui.SurfaceRenderFilter: void updateTargetRect()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.view.SurfaceHolder r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: android.view.SurfaceHolder;

        entermonitor r0;

     label1:
        r0.<android.filterpacks.ui.SurfaceRenderFilter: boolean mIsBound> = 1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.view.SurfaceHolder r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: android.view.SurfaceHolder;

        entermonitor r0;

     label1:
        r0.<android.filterpacks.ui.SurfaceRenderFilter: boolean mIsBound> = 0;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void tearDown(android.filterfw.core.FilterContext)
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.GLFrame $r2, $r3;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.GLFrame mScreen>;

        if $r2 == null goto label1;

        $r3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: android.filterfw.core.GLFrame mScreen>;

        virtualinvoke $r3.<android.filterfw.core.GLFrame: android.filterfw.core.Frame release()>();

     label1:
        return;
    }

    public void updateRenderMode()
    {
        android.filterpacks.ui.SurfaceRenderFilter r0;
        java.lang.String $r1, $r2, $r3, $r4, $r8, $r11;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r0 := @this: android.filterpacks.ui.SurfaceRenderFilter;

        $r1 = r0.<android.filterpacks.ui.SurfaceRenderFilter: java.lang.String mRenderModeString>;

        if $r1 == null goto label1;

        $r2 = r0.<android.filterpacks.ui.SurfaceRenderFilter: java.lang.String mRenderModeString>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("stretch");

        if $z0 == 0 goto label2;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int mRenderMode> = 0;

     label1:
        specialinvoke r0.<android.filterpacks.ui.SurfaceRenderFilter: void updateTargetRect()>();

        return;

     label2:
        $r3 = r0.<android.filterpacks.ui.SurfaceRenderFilter: java.lang.String mRenderModeString>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("fit");

        if $z1 == 0 goto label3;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int mRenderMode> = 1;

        goto label1;

     label3:
        $r4 = r0.<android.filterpacks.ui.SurfaceRenderFilter: java.lang.String mRenderModeString>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("fill_crop");

        if $z2 == 0 goto label4;

        r0.<android.filterpacks.ui.SurfaceRenderFilter: int mRenderMode> = 2;

        goto label1;

     label4:
        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown render mode \'");

        $r8 = r0.<android.filterpacks.ui.SurfaceRenderFilter: java.lang.String mRenderModeString>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r5;
    }

    public static void <clinit>()
    {
        <android.filterpacks.ui.SurfaceRenderFilter: java.lang.String TAG> = "SurfaceRenderFilter";

        return;
    }
}
