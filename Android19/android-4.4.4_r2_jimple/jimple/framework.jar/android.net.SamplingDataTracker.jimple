public class android.net.SamplingDataTracker extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private final int MINIMUM_SAMPLED_PACKETS;
    private final int MINIMUM_SAMPLING_INTERVAL;
    private android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample;
    private android.net.SamplingDataTracker$SamplingSnapshot mEndingSample;
    private android.net.SamplingDataTracker$SamplingSnapshot mLastSample;
    public final java.lang.Object mSamplingDataLock;

    public void <init>()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object $r1;

        r0 := @this: android.net.SamplingDataTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock> = $r1;

        r0.<android.net.SamplingDataTracker: int MINIMUM_SAMPLING_INTERVAL> = 15000;

        r0.<android.net.SamplingDataTracker: int MINIMUM_SAMPLED_PACKETS> = 30;

        return;
    }

    public static void getSamplingSnapshots(java.util.Map)
    {
        java.util.Map r0;
        java.io.BufferedReader r1, r2, $r16;
        java.lang.Throwable r4, $r40, $r41;
        java.lang.String[] r9, $r25;
        java.lang.String r10, r11, $r21, $r22, $r24, $r26, $r27, $r28, $r29, $r30;
        boolean z0;
        android.net.SamplingDataTracker$SamplingSnapshot r13, $r23;
        java.io.FileReader $r19;
        int $i0;
        long $l1, $l2, $l3, $l4, $l5, $l6, $l7;
        java.io.IOException $r31, $r35, $r37, $r38, $r39, $r42;
        java.lang.NumberFormatException $r32;
        java.io.FileNotFoundException $r34, $r36;

        r0 := @parameter0: java.util.Map;

        r1 = null;

     label01:
        $r16 = new java.io.BufferedReader;

        $r19 = new java.io.FileReader;

        specialinvoke $r19.<java.io.FileReader: void <init>(java.lang.String)>("/proc/net/dev");

        specialinvoke $r16.<java.io.BufferedReader: void <init>(java.io.Reader)>($r19);

        r2 = $r16;

     label02:
        virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        r10 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        if r10 == null goto label10;

     label05:
        $r22 = virtualinvoke r10.<java.lang.String: java.lang.String trim()>();

        r9 = virtualinvoke $r22.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ ]+");

        $i0 = lengthof r9;

        if $i0 < 17 goto label03;

        $r21 = r9[0];

        $r25 = virtualinvoke $r21.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r11 = $r25[0];

        z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r11);

     label06:
        if z0 == 0 goto label03;

     label07:
        $r23 = new android.net.SamplingDataTracker$SamplingSnapshot;

        specialinvoke $r23.<android.net.SamplingDataTracker$SamplingSnapshot: void <init>()>();

        r13 = $r23;

        $r24 = r9[1];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r24);

        r13.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxByteCount> = $l2;

        $r27 = r9[2];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r27);

        r13.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount> = $l1;

        $r26 = r9[3];

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r26);

        r13.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketErrorCount> = $l4;

        $r29 = r9[9];

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r29);

        r13.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxByteCount> = $l3;

        $r28 = r9[10];

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r28);

        r13.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount> = $l7;

        $r30 = r9[11];

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r30);

        r13.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketErrorCount> = $l6;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r13.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp> = $l5;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r13);

     label08:
        goto label03;

     label09:
        $r32 := @caughtexception;

        goto label03;

     label10:
        if r2 == null goto label12;

     label11:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label12:
        return;

     label13:
        $r38 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not close /proc/net/dev");

        return;

     label14:
        $r36 := @caughtexception;

     label15:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not find /proc/net/dev");

     label16:
        if r1 == null goto label12;

     label17:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label18:
        return;

     label19:
        $r39 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not close /proc/net/dev");

        return;

     label20:
        $r31 := @caughtexception;

     label21:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not read /proc/net/dev");

     label22:
        if r1 == null goto label12;

     label23:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label24:
        return;

     label25:
        $r42 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not close /proc/net/dev");

        return;

     label26:
        $r40 := @caughtexception;

        r4 = $r40;

     label27:
        if r1 == null goto label29;

     label28:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label29:
        throw r4;

     label30:
        $r37 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("SamplingDataTracker", "could not close /proc/net/dev");

        goto label29;

     label31:
        $r41 := @caughtexception;

        r4 = $r41;

        r1 = r2;

        goto label27;

     label32:
        $r35 := @caughtexception;

        r1 = r2;

        goto label21;

     label33:
        $r34 := @caughtexception;

        r1 = r2;

        goto label15;

        catch java.io.FileNotFoundException from label01 to label02 with label14;
        catch java.io.IOException from label01 to label02 with label20;
        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.io.FileNotFoundException from label02 to label03 with label33;
        catch java.io.IOException from label02 to label03 with label32;
        catch java.lang.Throwable from label02 to label03 with label31;
        catch java.io.FileNotFoundException from label03 to label04 with label33;
        catch java.io.IOException from label03 to label04 with label32;
        catch java.lang.Throwable from label03 to label04 with label31;
        catch java.io.FileNotFoundException from label05 to label06 with label33;
        catch java.io.IOException from label05 to label06 with label32;
        catch java.lang.Throwable from label05 to label06 with label31;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch java.io.FileNotFoundException from label07 to label08 with label33;
        catch java.io.IOException from label07 to label08 with label32;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label28 to label29 with label30;
    }

    public int getSampleDuration()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        int i0;
        android.net.SamplingDataTracker$SamplingSnapshot $r3, $r4, $r5, $r6;
        long $l1, $l2, $l3;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r3 == null goto label3;

        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l2 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        $l3 = $l2 - $l1;

        i0 = (int) $l3;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        exitmonitor r1;

     label4:
        return 2147483647;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public long getSampleTimestamp()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        long l0;
        android.net.SamplingDataTracker$SamplingSnapshot $r3, $r4;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r3 == null goto label3;

        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        l0 = $r4.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        exitmonitor r1;

     label2:
        return l0;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public long getSampledPacketCount()
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot $r1, $r2;
        long $l0;

        r0 := @this: android.net.SamplingDataTracker;

        $r2 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $r1 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l0 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledPacketCount(android.net.SamplingDataTracker$SamplingSnapshot,android.net.SamplingDataTracker$SamplingSnapshot)>($r2, $r1);

        return $l0;
    }

    public long getSampledPacketCount(android.net.SamplingDataTracker$SamplingSnapshot, android.net.SamplingDataTracker$SamplingSnapshot)
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot r1, r2;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6;

        r0 := @this: android.net.SamplingDataTracker;

        r1 := @parameter0: android.net.SamplingDataTracker$SamplingSnapshot;

        r2 := @parameter1: android.net.SamplingDataTracker$SamplingSnapshot;

        if r1 == null goto label1;

        if r2 == null goto label1;

        $l1 = r2.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount>;

        $l0 = r1.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount>;

        $l5 = $l1 - $l0;

        $l3 = r2.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount>;

        $l2 = r1.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount>;

        $l4 = $l3 - $l2;

        $l6 = $l5 + $l4;

        return $l6;

     label1:
        return 9223372036854775807L;
    }

    public long getSampledPacketErrorCount()
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot $r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: android.net.SamplingDataTracker;

        $r1 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r1 == null goto label1;

        $r2 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r2 == null goto label1;

        $l0 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledRxPacketErrorCount()>();

        $l1 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledTxPacketErrorCount()>();

        $l2 = $l0 + $l1;

        return $l2;

     label1:
        return 9223372036854775807L;
    }

    public long getSampledRxByteCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        long l0, $l1, $l2;
        android.net.SamplingDataTracker$SamplingSnapshot $r3, $r4, $r5, $r6;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r3 == null goto label3;

        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l2 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxByteCount>;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxByteCount>;

        l0 = $l2 - $l1;

        exitmonitor r1;

     label2:
        return l0;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public long getSampledRxPacketCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        long l0, $l1, $l2;
        android.net.SamplingDataTracker$SamplingSnapshot $r3, $r4, $r5, $r6;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r3 == null goto label3;

        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l2 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount>;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketCount>;

        l0 = $l2 - $l1;

        exitmonitor r1;

     label2:
        return l0;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public long getSampledRxPacketErrorCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        long l0, $l1, $l2;
        android.net.SamplingDataTracker$SamplingSnapshot $r3, $r4, $r5, $r6;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r3 == null goto label3;

        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l2 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketErrorCount>;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mRxPacketErrorCount>;

        l0 = $l2 - $l1;

        exitmonitor r1;

     label2:
        return l0;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public long getSampledTxByteCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        long l0, $l1, $l2;
        android.net.SamplingDataTracker$SamplingSnapshot $r3, $r4, $r5, $r6;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r3 == null goto label3;

        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l2 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxByteCount>;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxByteCount>;

        l0 = $l2 - $l1;

        exitmonitor r1;

     label2:
        return l0;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public long getSampledTxPacketCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        long l0, $l1, $l2;
        android.net.SamplingDataTracker$SamplingSnapshot $r3, $r4, $r5, $r6;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r3 == null goto label3;

        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l2 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount>;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketCount>;

        l0 = $l2 - $l1;

        exitmonitor r1;

     label2:
        return l0;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public long getSampledTxPacketErrorCount()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        long l0, $l1, $l2;
        android.net.SamplingDataTracker$SamplingSnapshot $r3, $r4, $r5, $r6;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        if $r3 == null goto label3;

        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        if $r4 == null goto label3;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample>;

        $l2 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketErrorCount>;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample>;

        $l1 = $r6.<android.net.SamplingDataTracker$SamplingSnapshot: long mTxPacketErrorCount>;

        l0 = $l2 - $l1;

        exitmonitor r1;

     label2:
        return l0;

     label3:
        exitmonitor r1;

     label4:
        return 9223372036854775807L;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void resetSamplingData()
    {
        android.net.SamplingDataTracker r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.net.SamplingDataTracker;

        r1 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r1;

     label1:
        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setCommonLinkQualityInfoFields(android.net.LinkQualityInfo)
    {
        android.net.SamplingDataTracker r0;
        android.net.LinkQualityInfo r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: android.net.SamplingDataTracker;

        r1 := @parameter0: android.net.LinkQualityInfo;

        r2 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r2;

     label1:
        $l0 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampleTimestamp()>();

        virtualinvoke r1.<android.net.LinkQualityInfo: void setLastDataSampleTime(long)>($l0);

        $i1 = virtualinvoke r0.<android.net.SamplingDataTracker: int getSampleDuration()>();

        virtualinvoke r1.<android.net.LinkQualityInfo: void setDataSampleDuration(int)>($i1);

        $l2 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledPacketCount()>();

        virtualinvoke r1.<android.net.LinkQualityInfo: void setPacketCount(long)>($l2);

        $l3 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledPacketErrorCount()>();

        virtualinvoke r1.<android.net.LinkQualityInfo: void setPacketErrorCount(long)>($l3);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void startSampling(android.net.SamplingDataTracker$SamplingSnapshot)
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.net.SamplingDataTracker;

        r1 := @parameter0: android.net.SamplingDataTracker$SamplingSnapshot;

        r2 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r2;

     label1:
        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample> = r1;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void stopSampling(android.net.SamplingDataTracker$SamplingSnapshot)
    {
        android.net.SamplingDataTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot r1, $r4, $r5, $r6, $r7;
        java.lang.Object r2;
        java.lang.Throwable r3, $r8;
        long $l0, $l1, $l2, $l4;
        byte $b3, $b5;

        r0 := @this: android.net.SamplingDataTracker;

        r1 := @parameter0: android.net.SamplingDataTracker$SamplingSnapshot;

        r2 = r0.<android.net.SamplingDataTracker: java.lang.Object mSamplingDataLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample>;

        if $r4 == null goto label2;

        $l1 = r1.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        $r5 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample>;

        $l0 = $r5.<android.net.SamplingDataTracker$SamplingSnapshot: long mTimestamp>;

        $l2 = $l1 - $l0;

        $b3 = $l2 cmp 15000L;

        if $b3 <= 0 goto label2;

        $r6 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample>;

        $l4 = virtualinvoke r0.<android.net.SamplingDataTracker: long getSampledPacketCount(android.net.SamplingDataTracker$SamplingSnapshot,android.net.SamplingDataTracker$SamplingSnapshot)>($r6, r1);

        $b5 = $l4 cmp 30L;

        if $b5 <= 0 goto label2;

        $r7 = r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample>;

        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mBeginningSample> = $r7;

        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mEndingSample> = r1;

        r0.<android.net.SamplingDataTracker: android.net.SamplingDataTracker$SamplingSnapshot mLastSample> = null;

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <android.net.SamplingDataTracker: java.lang.String TAG> = "SamplingDataTracker";

        <android.net.SamplingDataTracker: boolean DBG> = 0;

        return;
    }
}
