public class android.media.RemoteControlClient extends java.lang.Object
{
    private static final boolean DEBUG;
    public static final int DEFAULT_PLAYBACK_VOLUME;
    public static final int DEFAULT_PLAYBACK_VOLUME_HANDLING;
    public static final int FLAGS_KEY_MEDIA_NONE;
    public static final int FLAG_INFORMATION_REQUEST_ALBUM_ART;
    public static final int FLAG_INFORMATION_REQUEST_KEY_MEDIA;
    public static final int FLAG_INFORMATION_REQUEST_METADATA;
    public static final int FLAG_INFORMATION_REQUEST_PLAYSTATE;
    public static final int FLAG_KEY_MEDIA_FAST_FORWARD;
    public static final int FLAG_KEY_MEDIA_NEXT;
    public static final int FLAG_KEY_MEDIA_PAUSE;
    public static final int FLAG_KEY_MEDIA_PLAY;
    public static final int FLAG_KEY_MEDIA_PLAY_PAUSE;
    public static final int FLAG_KEY_MEDIA_POSITION_UPDATE;
    public static final int FLAG_KEY_MEDIA_PREVIOUS;
    public static final int FLAG_KEY_MEDIA_RATING;
    public static final int FLAG_KEY_MEDIA_REWIND;
    public static final int FLAG_KEY_MEDIA_STOP;
    public static int MEDIA_POSITION_READABLE;
    public static int MEDIA_POSITION_WRITABLE;
    private static final int MSG_DISPLAY_ENABLE;
    private static final int MSG_DISPLAY_WANTS_POS_SYNC;
    private static final int MSG_NEW_CURRENT_CLIENT_GEN;
    private static final int MSG_NEW_INTERNAL_CLIENT_GEN;
    private static final int MSG_PLUG_DISPLAY;
    private static final int MSG_POSITION_DRIFT_CHECK;
    private static final int MSG_REQUEST_ARTWORK;
    private static final int MSG_REQUEST_METADATA;
    private static final int MSG_REQUEST_METADATA_ARTWORK;
    private static final int MSG_REQUEST_PLAYBACK_STATE;
    private static final int MSG_REQUEST_TRANSPORTCONTROL;
    private static final int MSG_SEEK_TO;
    private static final int MSG_UNPLUG_DISPLAY;
    private static final int MSG_UPDATE_DISPLAY_ARTWORK_SIZE;
    private static final int MSG_UPDATE_METADATA;
    public static final int PLAYBACKINFO_INVALID_VALUE;
    public static final int PLAYBACKINFO_PLAYBACK_TYPE;
    public static final int PLAYBACKINFO_USES_STREAM;
    public static final int PLAYBACKINFO_VOLUME;
    public static final int PLAYBACKINFO_VOLUME_HANDLING;
    public static final int PLAYBACKINFO_VOLUME_MAX;
    public static final long PLAYBACK_POSITION_ALWAYS_UNKNOWN;
    public static final long PLAYBACK_POSITION_INVALID;
    public static final float PLAYBACK_SPEED_1X;
    public static final int PLAYBACK_TYPE_LOCAL;
    private static final int PLAYBACK_TYPE_MAX;
    private static final int PLAYBACK_TYPE_MIN;
    public static final int PLAYBACK_TYPE_REMOTE;
    public static final int PLAYBACK_VOLUME_FIXED;
    public static final int PLAYBACK_VOLUME_VARIABLE;
    public static final int PLAYSTATE_BUFFERING;
    public static final int PLAYSTATE_ERROR;
    public static final int PLAYSTATE_FAST_FORWARDING;
    public static final int PLAYSTATE_NONE;
    public static final int PLAYSTATE_PAUSED;
    public static final int PLAYSTATE_PLAYING;
    public static final int PLAYSTATE_REWINDING;
    public static final int PLAYSTATE_SKIPPING_BACKWARDS;
    public static final int PLAYSTATE_SKIPPING_FORWARDS;
    public static final int PLAYSTATE_STOPPED;
    private static final long POSITION_DRIFT_MAX_MS;
    private static final long POSITION_REFRESH_PERIOD_MIN_MS;
    private static final long POSITION_REFRESH_PERIOD_PLAYING_MS;
    public static final int RCSE_ID_UNREGISTERED;
    private static final java.lang.String TAG;
    private static android.media.IAudioService sService;
    private final java.lang.Object mCacheLock;
    private int mCurrentClientGenId;
    private android.media.RemoteControlClient$EventHandler mEventHandler;
    private final android.media.IRemoteControlClient mIRCC;
    private int mInternalClientGenId;
    private android.os.Bundle mMetadata;
    private android.media.RemoteControlClient$OnMetadataUpdateListener mMetadataUpdateListener;
    private boolean mNeedsPositionSync;
    private android.graphics.Bitmap mOriginalArtwork;
    private int mPlaybackPositionCapabilities;
    private long mPlaybackPositionMs;
    private float mPlaybackSpeed;
    private int mPlaybackState;
    private long mPlaybackStateChangeTimeMs;
    private int mPlaybackStream;
    private int mPlaybackType;
    private int mPlaybackVolume;
    private int mPlaybackVolumeHandling;
    private int mPlaybackVolumeMax;
    private android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider;
    private android.media.RemoteControlClient$OnPlaybackPositionUpdateListener mPositionUpdateListener;
    private java.util.ArrayList mRcDisplays;
    private final android.app.PendingIntent mRcMediaIntent;
    private int mRcseId;
    private int mTransportControlFlags;

    static void <clinit>()
    {
        <android.media.RemoteControlClient: java.lang.String TAG> = "RemoteControlClient";

        <android.media.RemoteControlClient: int RCSE_ID_UNREGISTERED> = -1;

        <android.media.RemoteControlClient: long POSITION_REFRESH_PERIOD_PLAYING_MS> = 15000L;

        <android.media.RemoteControlClient: long POSITION_REFRESH_PERIOD_MIN_MS> = 2000L;

        <android.media.RemoteControlClient: long POSITION_DRIFT_MAX_MS> = 500L;

        <android.media.RemoteControlClient: int PLAYSTATE_STOPPED> = 1;

        <android.media.RemoteControlClient: int PLAYSTATE_SKIPPING_FORWARDS> = 6;

        <android.media.RemoteControlClient: int PLAYSTATE_SKIPPING_BACKWARDS> = 7;

        <android.media.RemoteControlClient: int PLAYSTATE_REWINDING> = 5;

        <android.media.RemoteControlClient: int PLAYSTATE_PLAYING> = 3;

        <android.media.RemoteControlClient: int PLAYSTATE_PAUSED> = 2;

        <android.media.RemoteControlClient: int PLAYSTATE_NONE> = 0;

        <android.media.RemoteControlClient: int PLAYSTATE_FAST_FORWARDING> = 4;

        <android.media.RemoteControlClient: int PLAYSTATE_ERROR> = 9;

        <android.media.RemoteControlClient: int PLAYSTATE_BUFFERING> = 8;

        <android.media.RemoteControlClient: int PLAYBACK_VOLUME_VARIABLE> = 1;

        <android.media.RemoteControlClient: int PLAYBACK_VOLUME_FIXED> = 0;

        <android.media.RemoteControlClient: int PLAYBACK_TYPE_REMOTE> = 1;

        <android.media.RemoteControlClient: int PLAYBACK_TYPE_MIN> = 0;

        <android.media.RemoteControlClient: int PLAYBACK_TYPE_MAX> = 1;

        <android.media.RemoteControlClient: int PLAYBACK_TYPE_LOCAL> = 0;

        <android.media.RemoteControlClient: float PLAYBACK_SPEED_1X> = 1.0F;

        <android.media.RemoteControlClient: long PLAYBACK_POSITION_INVALID> = -1L;

        <android.media.RemoteControlClient: long PLAYBACK_POSITION_ALWAYS_UNKNOWN> = -9216204211029966080L;

        <android.media.RemoteControlClient: int PLAYBACKINFO_VOLUME_MAX> = 3;

        <android.media.RemoteControlClient: int PLAYBACKINFO_VOLUME_HANDLING> = 4;

        <android.media.RemoteControlClient: int PLAYBACKINFO_VOLUME> = 2;

        <android.media.RemoteControlClient: int PLAYBACKINFO_USES_STREAM> = 5;

        <android.media.RemoteControlClient: int PLAYBACKINFO_PLAYBACK_TYPE> = 1;

        <android.media.RemoteControlClient: int PLAYBACKINFO_INVALID_VALUE> = -2147483648;

        <android.media.RemoteControlClient: int MSG_UPDATE_METADATA> = 13;

        <android.media.RemoteControlClient: int MSG_UPDATE_DISPLAY_ARTWORK_SIZE> = 9;

        <android.media.RemoteControlClient: int MSG_UNPLUG_DISPLAY> = 8;

        <android.media.RemoteControlClient: int MSG_SEEK_TO> = 10;

        <android.media.RemoteControlClient: int MSG_REQUEST_TRANSPORTCONTROL> = 3;

        <android.media.RemoteControlClient: int MSG_REQUEST_PLAYBACK_STATE> = 1;

        <android.media.RemoteControlClient: int MSG_REQUEST_METADATA_ARTWORK> = 14;

        <android.media.RemoteControlClient: int MSG_REQUEST_METADATA> = 2;

        <android.media.RemoteControlClient: int MSG_REQUEST_ARTWORK> = 4;

        <android.media.RemoteControlClient: int MSG_POSITION_DRIFT_CHECK> = 11;

        <android.media.RemoteControlClient: int MSG_PLUG_DISPLAY> = 7;

        <android.media.RemoteControlClient: int MSG_NEW_INTERNAL_CLIENT_GEN> = 5;

        <android.media.RemoteControlClient: int MSG_NEW_CURRENT_CLIENT_GEN> = 6;

        <android.media.RemoteControlClient: int MSG_DISPLAY_WANTS_POS_SYNC> = 12;

        <android.media.RemoteControlClient: int MSG_DISPLAY_ENABLE> = 15;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_STOP> = 32;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_REWIND> = 2;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_RATING> = 512;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_PREVIOUS> = 1;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_POSITION_UPDATE> = 256;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_PLAY_PAUSE> = 8;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_PLAY> = 4;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_PAUSE> = 16;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_NEXT> = 128;

        <android.media.RemoteControlClient: int FLAG_KEY_MEDIA_FAST_FORWARD> = 64;

        <android.media.RemoteControlClient: int FLAG_INFORMATION_REQUEST_PLAYSTATE> = 4;

        <android.media.RemoteControlClient: int FLAG_INFORMATION_REQUEST_METADATA> = 1;

        <android.media.RemoteControlClient: int FLAG_INFORMATION_REQUEST_KEY_MEDIA> = 2;

        <android.media.RemoteControlClient: int FLAG_INFORMATION_REQUEST_ALBUM_ART> = 8;

        <android.media.RemoteControlClient: int FLAGS_KEY_MEDIA_NONE> = 0;

        <android.media.RemoteControlClient: int DEFAULT_PLAYBACK_VOLUME_HANDLING> = 1;

        <android.media.RemoteControlClient: int DEFAULT_PLAYBACK_VOLUME> = 15;

        <android.media.RemoteControlClient: boolean DEBUG> = 0;

        <android.media.RemoteControlClient: int MEDIA_POSITION_READABLE> = 1;

        <android.media.RemoteControlClient: int MEDIA_POSITION_WRITABLE> = 2;

        return;
    }

    public void <init>(android.app.PendingIntent)
    {
        android.media.RemoteControlClient r0;
        android.app.PendingIntent r1;
        android.os.Looper r2, r3;
        java.lang.Object $r4;
        android.os.Bundle $r5;
        java.util.ArrayList $r6;
        android.media.RemoteControlClient$1 $r7;
        android.media.RemoteControlClient$EventHandler $r8, $r9;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.app.PendingIntent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities> = 0;

        r0.<android.media.RemoteControlClient: int mPlaybackType> = 0;

        r0.<android.media.RemoteControlClient: int mPlaybackVolumeMax> = 15;

        r0.<android.media.RemoteControlClient: int mPlaybackVolume> = 15;

        r0.<android.media.RemoteControlClient: int mPlaybackVolumeHandling> = 1;

        r0.<android.media.RemoteControlClient: int mPlaybackStream> = 3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock> = $r4;

        r0.<android.media.RemoteControlClient: int mPlaybackState> = 0;

        r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs> = 0L;

        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = -1L;

        r0.<android.media.RemoteControlClient: float mPlaybackSpeed> = 1.0F;

        r0.<android.media.RemoteControlClient: int mTransportControlFlags> = 0;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata> = $r5;

        r0.<android.media.RemoteControlClient: int mCurrentClientGenId> = -1;

        r0.<android.media.RemoteControlClient: int mInternalClientGenId> = -2;

        r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync> = 0;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(1);

        r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays> = $r6;

        $r7 = new android.media.RemoteControlClient$1;

        specialinvoke $r7.<android.media.RemoteControlClient$1: void <init>(android.media.RemoteControlClient)>(r0);

        r0.<android.media.RemoteControlClient: android.media.IRemoteControlClient mIRCC> = $r7;

        r0.<android.media.RemoteControlClient: int mRcseId> = -1;

        r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent> = r1;

        r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r2 == null goto label1;

        $r9 = new android.media.RemoteControlClient$EventHandler;

        specialinvoke $r9.<android.media.RemoteControlClient$EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>(r0, r0, r2);

        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler> = $r9;

        return;

     label1:
        r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if r3 == null goto label2;

        $r8 = new android.media.RemoteControlClient$EventHandler;

        specialinvoke $r8.<android.media.RemoteControlClient$EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>(r0, r0, r3);

        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler> = $r8;

        return;

     label2:
        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler> = null;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RemoteControlClient", "RemoteControlClient() couldn\'t find main application thread");

        return;
    }

    public void <init>(android.app.PendingIntent, android.os.Looper)
    {
        android.media.RemoteControlClient r0;
        android.app.PendingIntent r1;
        android.os.Looper r2;
        java.lang.Object $r3;
        android.os.Bundle $r4;
        java.util.ArrayList $r5;
        android.media.RemoteControlClient$1 $r6;
        android.media.RemoteControlClient$EventHandler $r7;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities> = 0;

        r0.<android.media.RemoteControlClient: int mPlaybackType> = 0;

        r0.<android.media.RemoteControlClient: int mPlaybackVolumeMax> = 15;

        r0.<android.media.RemoteControlClient: int mPlaybackVolume> = 15;

        r0.<android.media.RemoteControlClient: int mPlaybackVolumeHandling> = 1;

        r0.<android.media.RemoteControlClient: int mPlaybackStream> = 3;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock> = $r3;

        r0.<android.media.RemoteControlClient: int mPlaybackState> = 0;

        r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs> = 0L;

        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = -1L;

        r0.<android.media.RemoteControlClient: float mPlaybackSpeed> = 1.0F;

        r0.<android.media.RemoteControlClient: int mTransportControlFlags> = 0;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata> = $r4;

        r0.<android.media.RemoteControlClient: int mCurrentClientGenId> = -1;

        r0.<android.media.RemoteControlClient: int mInternalClientGenId> = -2;

        r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync> = 0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(1);

        r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays> = $r5;

        $r6 = new android.media.RemoteControlClient$1;

        specialinvoke $r6.<android.media.RemoteControlClient$1: void <init>(android.media.RemoteControlClient)>(r0);

        r0.<android.media.RemoteControlClient: android.media.IRemoteControlClient mIRCC> = $r6;

        r0.<android.media.RemoteControlClient: int mRcseId> = -1;

        r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent> = r1;

        $r7 = new android.media.RemoteControlClient$EventHandler;

        specialinvoke $r7.<android.media.RemoteControlClient$EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>(r0, r0, r2);

        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler> = $r7;

        return;
    }

    static java.lang.Object access$000(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        return $r1;
    }

    static android.os.Bundle access$100(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        return $r1;
    }

    static void access$1000(android.media.RemoteControlClient, int)
    {
        android.media.RemoteControlClient r0;
        int i0;

        r0 := @parameter0: android.media.RemoteControlClient;

        i0 := @parameter1: int;

        specialinvoke r0.<android.media.RemoteControlClient: void onNewInternalClientGen(int)>(i0);

        return;
    }

    static android.os.Bundle access$102(android.media.RemoteControlClient, android.os.Bundle)
    {
        android.media.RemoteControlClient r0;
        android.os.Bundle r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.os.Bundle;

        r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata> = r1;

        return r1;
    }

    static void access$1100(android.media.RemoteControlClient, int)
    {
        android.media.RemoteControlClient r0;
        int i0;

        r0 := @parameter0: android.media.RemoteControlClient;

        i0 := @parameter1: int;

        specialinvoke r0.<android.media.RemoteControlClient: void onNewCurrentClientGen(int)>(i0);

        return;
    }

    static void access$1200(android.media.RemoteControlClient, android.media.IRemoteControlDisplay, int, int)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;
        int i0, i1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.media.RemoteControlClient: void onPlugDisplay(android.media.IRemoteControlDisplay,int,int)>(r1, i0, i1);

        return;
    }

    static void access$1300(android.media.RemoteControlClient, android.media.IRemoteControlDisplay)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        specialinvoke r0.<android.media.RemoteControlClient: void onUnplugDisplay(android.media.IRemoteControlDisplay)>(r1);

        return;
    }

    static void access$1400(android.media.RemoteControlClient, android.media.IRemoteControlDisplay, int, int)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;
        int i0, i1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.media.RemoteControlClient: void onUpdateDisplayArtworkSize(android.media.IRemoteControlDisplay,int,int)>(r1, i0, i1);

        return;
    }

    static void access$1500(android.media.RemoteControlClient, int, long)
    {
        android.media.RemoteControlClient r0;
        int i0;
        long l1;

        r0 := @parameter0: android.media.RemoteControlClient;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<android.media.RemoteControlClient: void onSeekTo(int,long)>(i0, l1);

        return;
    }

    static void access$1600(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;

        r0 := @parameter0: android.media.RemoteControlClient;

        specialinvoke r0.<android.media.RemoteControlClient: void onPositionDriftCheck()>();

        return;
    }

    static void access$1700(android.media.RemoteControlClient, android.media.IRemoteControlDisplay, boolean)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;
        boolean z0;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.media.RemoteControlClient: void onDisplayWantsSync(android.media.IRemoteControlDisplay,boolean)>(r1, z0);

        return;
    }

    static void access$1800(android.media.RemoteControlClient, int, int, java.lang.Object)
    {
        android.media.RemoteControlClient r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        specialinvoke r0.<android.media.RemoteControlClient: void onUpdateMetadata(int,int,java.lang.Object)>(i0, i1, r1);

        return;
    }

    static void access$1900(android.media.RemoteControlClient, android.media.IRemoteControlDisplay, boolean)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;
        boolean z0;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.media.RemoteControlClient: void onDisplayEnable(android.media.IRemoteControlDisplay,boolean)>(r1, z0);

        return;
    }

    static android.graphics.Bitmap access$200(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork>;

        return $r1;
    }

    static android.graphics.Bitmap access$202(android.media.RemoteControlClient, android.graphics.Bitmap)
    {
        android.media.RemoteControlClient r0;
        android.graphics.Bitmap r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.graphics.Bitmap;

        r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork> = r1;

        return r1;
    }

    static void access$300(android.media.RemoteControlClient, android.media.IRemoteControlDisplay, int, int)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;
        int i0, i1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.media.RemoteControlClient: void sendMetadataWithArtwork_syncCacheLock(android.media.IRemoteControlDisplay,int,int)>(r1, i0, i1);

        return;
    }

    static void access$400(android.media.RemoteControlClient, android.media.IRemoteControlDisplay)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        specialinvoke r0.<android.media.RemoteControlClient: void sendMetadata_syncCacheLock(android.media.IRemoteControlDisplay)>(r1);

        return;
    }

    static void access$500(android.media.RemoteControlClient, android.media.IRemoteControlDisplay, int, int)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;
        int i0, i1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.media.RemoteControlClient: void sendArtwork_syncCacheLock(android.media.IRemoteControlDisplay,int,int)>(r1, i0, i1);

        return;
    }

    static android.media.RemoteControlClient$EventHandler access$700(android.media.RemoteControlClient)
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$EventHandler $r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        return $r1;
    }

    static void access$800(android.media.RemoteControlClient, android.media.IRemoteControlDisplay)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        specialinvoke r0.<android.media.RemoteControlClient: void sendPlaybackState_syncCacheLock(android.media.IRemoteControlDisplay)>(r1);

        return;
    }

    static void access$900(android.media.RemoteControlClient, android.media.IRemoteControlDisplay)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;

        r0 := @parameter0: android.media.RemoteControlClient;

        r1 := @parameter1: android.media.IRemoteControlDisplay;

        specialinvoke r0.<android.media.RemoteControlClient: void sendTransportControlInfo_syncCacheLock(android.media.IRemoteControlDisplay)>(r1);

        return;
    }

    private static long getCheckPeriodFromSpeed(float)
    {
        float f0, $f1, $f2, $f3;
        byte $b0;
        long $l1, $l2;

        f0 := @parameter0: float;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b0 = $f1 cmpg 1.0F;

        if $b0 > 0 goto label1;

        return 15000L;

     label1:
        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $f3 = 15000.0F / $f2;

        $l1 = (long) $f3;

        $l2 = staticinvoke <java.lang.Math: long max(long,long)>($l1, 2000L);

        return $l2;
    }

    private static android.media.IAudioService getService()
    {
        android.media.IAudioService $r0, $r2, $r3, $r4;
        android.os.IBinder $r1;

        $r0 = <android.media.RemoteControlClient: android.media.IAudioService sService>;

        if $r0 == null goto label1;

        $r4 = <android.media.RemoteControlClient: android.media.IAudioService sService>;

        return $r4;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("audio");

        $r2 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>($r1);

        <android.media.RemoteControlClient: android.media.IAudioService sService> = $r2;

        $r3 = <android.media.RemoteControlClient: android.media.IAudioService sService>;

        return $r3;
    }

    private void initiateCheckForDrift_syncCacheLock()
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$EventHandler $r1, $r2, $r3, $r4;
        boolean $z0, $z1;
        long $l0, $l3;
        byte $b1;
        int $i2;
        android.os.Message $r5;
        float $f0;

        r0 := @this: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        if $r1 != null goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        virtualinvoke $r2.<android.media.RemoteControlClient$EventHandler: void removeMessages(int)>(11);

        $z0 = r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync>;

        if $z0 == 0 goto label1;

        $l0 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label1;

        $i2 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        $z1 = staticinvoke <android.media.RemoteControlClient: boolean playbackPositionShouldMove(int)>($i2);

        if $z1 == 0 goto label1;

        $r4 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r3 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r5 = virtualinvoke $r3.<android.media.RemoteControlClient$EventHandler: android.os.Message obtainMessage(int)>(11);

        $f0 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $l3 = staticinvoke <android.media.RemoteControlClient: long getCheckPeriodFromSpeed(float)>($f0);

        virtualinvoke $r4.<android.media.RemoteControlClient$EventHandler: boolean sendMessageDelayed(android.os.Message,long)>($r5, $l3);

        return;
    }

    private void onDisplayEnable(android.media.IRemoteControlDisplay, boolean)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r8;
        boolean z0, $z1, $z3;
        java.lang.Object r2, $r7;
        java.lang.Throwable r3, $r11;
        java.util.Iterator r4;
        android.media.RemoteControlClient$DisplayInfoForClient r5;
        java.util.ArrayList $r6;
        android.os.IBinder $r9, $r10;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        z0 := @parameter1: boolean;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

     label1:
        $r6 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r4 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.media.RemoteControlClient$DisplayInfoForClient) $r7;

        $r8 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        $r9 = interfaceinvoke $r8.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $r10 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $z3 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z3 == 0 goto label2;

        staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2002(android.media.RemoteControlClient$DisplayInfoForClient,boolean)>(r5, z0);

     label3:
        goto label2;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        exitmonitor r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
    }

    private void onDisplayWantsSync(android.media.IRemoteControlDisplay, boolean)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r8;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object r2, $r7;
        java.lang.Throwable r3, $r11;
        java.util.Iterator r4;
        android.media.RemoteControlClient$DisplayInfoForClient r5;
        java.util.ArrayList $r6;
        android.os.IBinder $r9, $r10;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        z0 := @parameter1: boolean;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

     label01:
        z1 = r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync>;

     label02:
        z2 = 0;

     label03:
        $r6 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r4 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.media.RemoteControlClient$DisplayInfoForClient) $r7;

        $z5 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2000(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $z5 == 0 goto label04;

        $r8 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        $r10 = interfaceinvoke $r8.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $r9 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $z7 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z7 == 0 goto label05;

        staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2402(android.media.RemoteControlClient$DisplayInfoForClient,boolean)>(r5, z0);

     label05:
        $z6 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2400(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $z6 == 0 goto label04;

     label06:
        z2 = 1;

        goto label04;

     label07:
        r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync> = z2;

        $z4 = r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync>;

        if z1 == $z4 goto label08;

        specialinvoke r0.<android.media.RemoteControlClient: void initiateCheckForDrift_syncCacheLock()>();

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r11 := @caughtexception;

        r3 = $r11;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void onNewCurrentClientGen(int)
    {
        android.media.RemoteControlClient r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r1;

     label1:
        r0.<android.media.RemoteControlClient: int mCurrentClientGenId> = i0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void onNewInternalClientGen(int)
    {
        android.media.RemoteControlClient r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r1;

     label1:
        r0.<android.media.RemoteControlClient: int mInternalClientGenId> = i0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void onPlugDisplay(android.media.IRemoteControlDisplay, int, int)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r11;
        int i0, i1, $i3, $i5;
        java.lang.Object r2, $r9;
        boolean z0, $z1, $z3;
        java.lang.Throwable r3, $r13;
        java.util.Iterator r4;
        android.media.RemoteControlClient$DisplayInfoForClient r5, $r7;
        java.util.ArrayList $r6, $r8;
        android.os.IBinder $r10, $r12;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

        z0 = 0;

     label01:
        $r6 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r4 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

     label03:
        if z0 != 0 goto label12;

     label04:
        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.media.RemoteControlClient$DisplayInfoForClient) $r9;

        $r11 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        $r10 = interfaceinvoke $r11.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $r12 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

     label05:
        if z0 == 0 goto label02;

     label06:
        $i3 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2200(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $i3 != i0 goto label07;

        $i5 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2300(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $i5 == i1 goto label02;

     label07:
        staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2202(android.media.RemoteControlClient$DisplayInfoForClient,int)>(r5, i0);

        staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2302(android.media.RemoteControlClient$DisplayInfoForClient,int)>(r5, i1);

        $z3 = specialinvoke r0.<android.media.RemoteControlClient: boolean sendArtworkToDisplay(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $z3 != 0 goto label02;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label08:
        goto label02;

     label09:
        $r13 := @caughtexception;

        r3 = $r13;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        if z0 != 0 goto label14;

     label13:
        $r8 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        $r7 = new android.media.RemoteControlClient$DisplayInfoForClient;

        specialinvoke $r7.<android.media.RemoteControlClient$DisplayInfoForClient: void <init>(android.media.RemoteControlClient,android.media.IRemoteControlDisplay,int,int)>(r0, r1, i0, i1);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label14:
        exitmonitor r2;

     label15:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
    }

    private void onPositionDriftCheck()
    {
        android.media.RemoteControlClient r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r10;
        long l0, l1, $l2, $l4, $l6, $l7, $l8, $l9, $l11, $l12, $l14;
        android.media.RemoteControlClient$EventHandler $r3, $r6, $r7, $r9;
        android.media.RemoteControlClient$OnGetPlaybackPositionListener $r4, $r5;
        boolean $z0;
        byte $b3, $b5, $b10, $b13;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.os.Message $r8;
        int $i15;

        r0 := @this: android.media.RemoteControlClient;

        r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r1;

     label01:
        $r3 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        if $r3 == null goto label02;

        $r4 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider>;

        if $r4 == null goto label02;

        $z0 = r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync>;

        if $z0 != 0 goto label04;

     label02:
        exitmonitor r1;

     label03:
        return;

     label04:
        $l2 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label05;

        $f0 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $b5 = $f0 cmpl 0.0F;

        if $b5 != 0 goto label10;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        $r10 := @caughtexception;

        r2 = $r10;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        $l4 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs>;

        $l8 = $l7 - $l6;

        $f3 = (float) $l8;

        $f1 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $f2 = $f3 / $f1;

        $l9 = (long) $f2;

        l0 = $l4 + $l9;

        $r5 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider>;

        l1 = interfaceinvoke $r5.<android.media.RemoteControlClient$OnGetPlaybackPositionListener: long onGetPlaybackPosition()>();

     label11:
        $b10 = l1 cmp 0L;

        if $b10 < 0 goto label17;

     label12:
        $l12 = l0 - l1;

        $l11 = staticinvoke <java.lang.Math: long abs(long)>($l12);

        $b13 = $l11 cmp 500L;

        if $b13 <= 0 goto label15;

        $i15 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        $f4 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        virtualinvoke r0.<android.media.RemoteControlClient: void setPlaybackState(int,long,float)>($i15, l1, $f4);

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r7 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r9 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r8 = virtualinvoke $r9.<android.media.RemoteControlClient$EventHandler: android.os.Message obtainMessage(int)>(11);

        $f5 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $l14 = staticinvoke <android.media.RemoteControlClient: long getCheckPeriodFromSpeed(float)>($f5);

        virtualinvoke $r7.<android.media.RemoteControlClient$EventHandler: boolean sendMessageDelayed(android.os.Message,long)>($r8, $l14);

     label16:
        goto label13;

     label17:
        $r6 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        virtualinvoke $r6.<android.media.RemoteControlClient$EventHandler: void removeMessages(int)>(11);

     label18:
        goto label13;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
        catch java.lang.Throwable from label17 to label18 with label07;
    }

    private void onSeekTo(int, long)
    {
        android.media.RemoteControlClient r0;
        int i0, $i2;
        long l1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        android.media.RemoteControlClient$OnPlaybackPositionUpdateListener $r3, $r4;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r1;

     label1:
        $i2 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        if $i2 != i0 goto label2;

        $r3 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnPlaybackPositionUpdateListener mPositionUpdateListener>;

        if $r3 == null goto label2;

        $r4 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnPlaybackPositionUpdateListener mPositionUpdateListener>;

        interfaceinvoke $r4.<android.media.RemoteControlClient$OnPlaybackPositionUpdateListener: void onPlaybackPositionUpdate(long)>(l1);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void onUnplugDisplay(android.media.IRemoteControlDisplay)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r11;
        java.lang.Object r2, $r9, $r10;
        java.lang.Throwable r3, $r15;
        java.util.Iterator r4, r5;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        java.util.ArrayList $r6, $r7;
        android.media.RemoteControlClient$DisplayInfoForClient $r8, $r12;
        android.os.IBinder $r13, $r14;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

     label01:
        $r6 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r4 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label03;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (android.media.RemoteControlClient$DisplayInfoForClient) $r10;

        $r11 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>($r12);

        $r14 = interfaceinvoke $r11.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $r13 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $z6 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z6 == 0 goto label02;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label03:
        z0 = r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync>;

        $r7 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r5 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

     label05:
        z2 = 0;

        if z1 == 0 goto label08;

     label06:
        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.media.RemoteControlClient$DisplayInfoForClient) $r9;

        $z5 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2400(android.media.RemoteControlClient$DisplayInfoForClient)>($r8);

        if $z5 == 0 goto label04;

     label07:
        z2 = 1;

     label08:
        r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync> = z2;

        $z4 = r0.<android.media.RemoteControlClient: boolean mNeedsPositionSync>;

        if z0 == $z4 goto label09;

        specialinvoke r0.<android.media.RemoteControlClient: void initiateCheckForDrift_syncCacheLock()>();

     label09:
        exitmonitor r2;

     label10:
        return;

     label11:
        $r15 := @caughtexception;

        r3 = $r15;

     label12:
        exitmonitor r2;

     label13:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void onUpdateDisplayArtworkSize(android.media.IRemoteControlDisplay, int, int)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r8;
        int i0, i1, $i3, $i5;
        java.lang.Object r2, $r7;
        java.lang.Throwable r3, $r11;
        java.util.Iterator r4;
        android.media.RemoteControlClient$DisplayInfoForClient r5;
        java.util.ArrayList $r6;
        boolean $z0, $z1, $z2, $z3;
        android.os.IBinder $r9, $r10;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

     label1:
        $r6 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r4 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.media.RemoteControlClient$DisplayInfoForClient) $r7;

        $r8 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        $r9 = interfaceinvoke $r8.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $r10 = interfaceinvoke r1.<android.media.IRemoteControlDisplay: android.os.IBinder asBinder()>();

        $z1 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label2;

        $i3 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2200(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $i3 != i0 goto label3;

        $i5 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2300(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $i5 == i1 goto label2;

     label3:
        staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2202(android.media.RemoteControlClient$DisplayInfoForClient,int)>(r5, i0);

        staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2302(android.media.RemoteControlClient$DisplayInfoForClient,int)>(r5, i1);

        $z2 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2000(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $z2 == 0 goto label4;

        $z3 = specialinvoke r0.<android.media.RemoteControlClient: boolean sendArtworkToDisplay(android.media.RemoteControlClient$DisplayInfoForClient)>(r5);

        if $z3 != 0 goto label4;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void onUpdateMetadata(int, int, java.lang.Object)
    {
        android.media.RemoteControlClient r0;
        int i0, i1, $i2;
        java.lang.Object r1, r2;
        java.lang.Throwable r3, $r6;
        android.media.RemoteControlClient$OnMetadataUpdateListener $r4, $r5;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

     label1:
        $i2 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        if $i2 != i0 goto label2;

        $r4 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnMetadataUpdateListener mMetadataUpdateListener>;

        if $r4 == null goto label2;

        $r5 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnMetadataUpdateListener mMetadataUpdateListener>;

        interfaceinvoke $r5.<android.media.RemoteControlClient$OnMetadataUpdateListener: void onMetadataUpdate(int,java.lang.Object)>(i1, r1);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static boolean playbackPositionShouldMove(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    private android.graphics.Bitmap scaleBitmapIfTooBig(android.graphics.Bitmap, int, int)
    {
        android.media.RemoteControlClient r0;
        android.graphics.Bitmap r1, r3;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        android.graphics.Bitmap$Config r2;
        android.graphics.Canvas r4, $r7;
        android.graphics.Paint r5, $r8;
        android.graphics.RectF r6, $r9;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label3;

        i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if i2 > i0 goto label1;

        if i3 <= i1 goto label3;

     label1:
        $f1 = (float) i0;

        $f2 = (float) i2;

        $f5 = $f1 / $f2;

        $f3 = (float) i1;

        $f4 = (float) i3;

        $f6 = $f3 / $f4;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f5, $f6);

        $f7 = (float) i2;

        $f8 = f0 * $f7;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f8);

        $f10 = (float) i3;

        $f9 = f0 * $f10;

        i5 = staticinvoke <java.lang.Math: int round(float)>($f9);

        r2 = virtualinvoke r1.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        if r2 != null goto label2;

        r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label2:
        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i4, i5, r2);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);

        r4 = $r7;

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r5 = $r8;

        virtualinvoke r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke r5.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        $r9 = new android.graphics.RectF;

        $i7 = virtualinvoke r3.<android.graphics.Bitmap: int getWidth()>();

        $f12 = (float) $i7;

        $i6 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        $f11 = (float) $i6;

        specialinvoke $r9.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f12, $f11);

        r6 = $r9;

        virtualinvoke r4.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>(r1, null, r6, r5);

        r1 = r3;

     label3:
        return r1;
    }

    private boolean sendArtworkToDisplay(android.media.RemoteControlClient$DisplayInfoForClient)
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$DisplayInfoForClient r1;
        android.graphics.Bitmap r2, $r4;
        android.os.RemoteException r3, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        android.media.IRemoteControlDisplay $r5, $r10;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r11;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.RemoteControlClient$DisplayInfoForClient;

        $i0 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2200(android.media.RemoteControlClient$DisplayInfoForClient)>(r1);

        if $i0 <= 0 goto label2;

        $i1 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2300(android.media.RemoteControlClient$DisplayInfoForClient)>(r1);

        if $i1 <= 0 goto label2;

        $r4 = r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork>;

        $i2 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2200(android.media.RemoteControlClient$DisplayInfoForClient)>(r1);

        $i3 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2300(android.media.RemoteControlClient$DisplayInfoForClient)>(r1);

        r2 = specialinvoke r0.<android.media.RemoteControlClient: android.graphics.Bitmap scaleBitmapIfTooBig(android.graphics.Bitmap,int,int)>($r4, $i2, $i3);

     label1:
        $r5 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r1);

        $i4 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        interfaceinvoke $r5.<android.media.IRemoteControlDisplay: void setArtwork(int,android.graphics.Bitmap)>($i4, r2);

     label2:
        return 1;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in sendArtworkToDisplay(), dead display ");

        $r10 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r11, r3);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void sendArtwork_syncCacheLock(android.media.IRemoteControlDisplay, int, int)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1;
        int i0, i1, $i2, $i3;
        java.util.Iterator r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.media.RemoteControlClient$DisplayInfoForClient $r5, $r6;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        $i2 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        if $i3 != $i2 goto label1;

        if r1 == null goto label2;

        $r6 = new android.media.RemoteControlClient$DisplayInfoForClient;

        specialinvoke $r6.<android.media.RemoteControlClient$DisplayInfoForClient: void <init>(android.media.RemoteControlClient,android.media.IRemoteControlDisplay,int,int)>(r0, r1, i0, i1);

        specialinvoke r0.<android.media.RemoteControlClient: boolean sendArtworkToDisplay(android.media.RemoteControlClient$DisplayInfoForClient)>($r6);

     label1:
        return;

     label2:
        $r3 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r2 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (android.media.RemoteControlClient$DisplayInfoForClient) $r4;

        $z1 = specialinvoke r0.<android.media.RemoteControlClient: boolean sendArtworkToDisplay(android.media.RemoteControlClient$DisplayInfoForClient)>($r5);

        if $z1 != 0 goto label3;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label3;
    }

    private void sendAudioServiceNewPlaybackInfo_syncCacheLock(int, int)
    {
        android.media.RemoteControlClient r0;
        int i0, i1, $i2, $i3;
        android.media.IAudioService r1;
        android.os.RemoteException r2, $r3;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.media.RemoteControlClient: int mRcseId>;

        if $i2 != -1 goto label1;

        return;

     label1:
        r1 = staticinvoke <android.media.RemoteControlClient: android.media.IAudioService getService()>();

     label2:
        $i3 = r0.<android.media.RemoteControlClient: int mRcseId>;

        interfaceinvoke r1.<android.media.IAudioService: void setPlaybackInfoForRcc(int,int,int)>($i3, i0, i1);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", "Dead object in setPlaybackInfoForRcc", r2);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void sendAudioServiceNewPlaybackState_syncCacheLock()
    {
        android.media.RemoteControlClient r0;
        android.media.IAudioService r1;
        android.os.RemoteException r2, $r3;
        int $i0, $i2, $i3;
        float $f0;
        long $l1;

        r0 := @this: android.media.RemoteControlClient;

        $i0 = r0.<android.media.RemoteControlClient: int mRcseId>;

        if $i0 != -1 goto label1;

        return;

     label1:
        r1 = staticinvoke <android.media.RemoteControlClient: android.media.IAudioService getService()>();

     label2:
        $i3 = r0.<android.media.RemoteControlClient: int mRcseId>;

        $i2 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        $l1 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $f0 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        interfaceinvoke r1.<android.media.IAudioService: void setPlaybackStateForRcc(int,int,long,float)>($i3, $i2, $l1, $f0);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", "Dead object in setPlaybackStateForRcc", r2);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void sendMetadataWithArtwork_syncCacheLock(android.media.IRemoteControlDisplay, int, int)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r11, $r14, $r23;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.Iterator r2;
        android.media.RemoteControlClient$DisplayInfoForClient r3;
        android.os.RemoteException r4, r6, $r19, $r25;
        android.graphics.Bitmap r5, r7, $r12, $r17;
        java.util.ArrayList $r8;
        java.lang.Object $r9;
        boolean $z0, $z1;
        android.os.Bundle $r10, $r13, $r15, $r16;
        java.lang.StringBuilder $r18, $r20, $r22, $r24, $r27, $r28;
        java.lang.String $r21, $r26;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        $i2 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        if $i3 != $i2 goto label13;

        if r1 == null goto label06;

        if i0 <= 0 goto label03;

        if i1 <= 0 goto label03;

     label01:
        $r17 = r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork>;

        r7 = specialinvoke r0.<android.media.RemoteControlClient: android.graphics.Bitmap scaleBitmapIfTooBig(android.graphics.Bitmap,int,int)>($r17, i0, i1);

        $i11 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $r16 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        interfaceinvoke r1.<android.media.IRemoteControlDisplay: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>($i11, $r16, r7);

     label02:
        return;

     label03:
        $i10 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $r15 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        interfaceinvoke r1.<android.media.IRemoteControlDisplay: void setMetadata(int,android.os.Bundle)>($i10, $r15);

     label04:
        return;

     label05:
        $r25 := @caughtexception;

        r6 = $r25;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in set(All)Metadata() for dead display ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r26, r6);

        return;

     label06:
        $r8 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r2 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.RemoteControlClient$DisplayInfoForClient) $r9;

     label08:
        $z1 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2000(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        if $z1 == 0 goto label07;

        $i4 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2200(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        if $i4 <= 0 goto label11;

        $i5 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2300(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        if $i5 <= 0 goto label11;

        $r12 = r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork>;

        $i7 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2200(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $i8 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: int access$2300(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        r5 = specialinvoke r0.<android.media.RemoteControlClient: android.graphics.Bitmap scaleBitmapIfTooBig(android.graphics.Bitmap,int,int)>($r12, $i7, $i8);

        $r14 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $i9 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $r13 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        interfaceinvoke $r14.<android.media.IRemoteControlDisplay: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>($i9, $r13, r5);

     label09:
        goto label07;

     label10:
        $r19 := @caughtexception;

        r4 = $r19;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error when setting metadata, dead display ");

        $r23 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r21, r4);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label07;

     label11:
        $r11 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $i6 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $r10 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        interfaceinvoke $r11.<android.media.IRemoteControlDisplay: void setMetadata(int,android.os.Bundle)>($i6, $r10);

     label12:
        goto label07;

     label13:
        return;

        catch android.os.RemoteException from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label08 to label09 with label10;
        catch android.os.RemoteException from label11 to label12 with label10;
    }

    private void sendMetadata_syncCacheLock(android.media.IRemoteControlDisplay)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r8, $r13;
        java.util.Iterator r2;
        android.media.RemoteControlClient$DisplayInfoForClient r3;
        android.os.RemoteException r4, r5, $r11, $r17;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        android.os.Bundle $r9, $r10;
        java.lang.StringBuilder $r12, $r14, $r16, $r18, $r19, $r20;
        java.lang.String $r15, $r21;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        $i1 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        $i0 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        if $i1 != $i0 goto label2;

        if r1 == null goto label4;

     label1:
        $i3 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $r10 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        interfaceinvoke r1.<android.media.IRemoteControlDisplay: void setMetadata(int,android.os.Bundle)>($i3, $r10);

     label2:
        return;

     label3:
        $r17 := @caughtexception;

        r5 = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in setMetadata() for dead display ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r21, r5);

        return;

     label4:
        $r6 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.RemoteControlClient$DisplayInfoForClient) $r7;

        $z1 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2000(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        if $z1 == 0 goto label5;

     label6:
        $r8 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $i2 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $r9 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        interfaceinvoke $r8.<android.media.IRemoteControlDisplay: void setMetadata(int,android.os.Bundle)>($i2, $r9);

     label7:
        goto label5;

     label8:
        $r11 := @caughtexception;

        r4 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in setMetadata(), dead display ");

        $r13 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r15, r4);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label5;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private void sendPlaybackState_syncCacheLock(android.media.IRemoteControlDisplay)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r8, $r18;
        java.util.Iterator r2;
        android.media.RemoteControlClient$DisplayInfoForClient r3;
        android.os.RemoteException r4, r5, $r9, $r15;
        int $i0, $i1, $i4, $i5, $i7, $i9;
        java.util.ArrayList $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        float $f0, $f1;
        long $l2, $l3, $l6, $l8;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r16, $r19;
        java.lang.String $r13, $r17;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        $i1 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        $i0 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        if $i1 != $i0 goto label2;

        if r1 == null goto label4;

     label1:
        $i9 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $i7 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        $l8 = r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs>;

        $l6 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $f1 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        interfaceinvoke r1.<android.media.IRemoteControlDisplay: void setPlaybackState(int,int,long,long,float)>($i9, $i7, $l8, $l6, $f1);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in setPlaybackState() for dead display ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r13, r5);

        return;

     label4:
        $r6 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.RemoteControlClient$DisplayInfoForClient) $r7;

        $z1 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2000(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        if $z1 == 0 goto label5;

     label6:
        $r8 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $i4 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $i5 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        $l2 = r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs>;

        $l3 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $f0 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        interfaceinvoke $r8.<android.media.IRemoteControlDisplay: void setPlaybackState(int,int,long,long,float)>($i4, $i5, $l2, $l3, $f0);

     label7:
        goto label5;

     label8:
        $r15 := @caughtexception;

        r4 = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in setPlaybackState(), dead display ");

        $r18 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r17, r4);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label5;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private void sendTransportControlInfo_syncCacheLock(android.media.IRemoteControlDisplay)
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlDisplay r1, $r8, $r18;
        java.util.Iterator r2;
        android.media.RemoteControlClient$DisplayInfoForClient r3;
        android.os.RemoteException r4, r5, $r9, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.ArrayList $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r16, $r19;
        java.lang.String $r13, $r17;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.IRemoteControlDisplay;

        $i1 = r0.<android.media.RemoteControlClient: int mCurrentClientGenId>;

        $i0 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        if $i1 != $i0 goto label2;

        if r1 == null goto label4;

     label1:
        $i7 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $i5 = r0.<android.media.RemoteControlClient: int mTransportControlFlags>;

        $i6 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

        interfaceinvoke r1.<android.media.IRemoteControlDisplay: void setTransportControlInfo(int,int,int)>($i7, $i5, $i6);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in setTransportControlFlags() for dead display ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r13, r5);

        return;

     label4:
        $r6 = r0.<android.media.RemoteControlClient: java.util.ArrayList mRcDisplays>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.RemoteControlClient$DisplayInfoForClient) $r7;

        $z1 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: boolean access$2000(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        if $z1 == 0 goto label5;

     label6:
        $r8 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $i3 = r0.<android.media.RemoteControlClient: int mInternalClientGenId>;

        $i4 = r0.<android.media.RemoteControlClient: int mTransportControlFlags>;

        $i2 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

        interfaceinvoke $r8.<android.media.IRemoteControlDisplay: void setTransportControlInfo(int,int,int)>($i3, $i4, $i2);

     label7:
        goto label5;

     label8:
        $r15 := @caughtexception;

        r4 = $r15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in setTransportControlFlags(), dead display ");

        $r18 = staticinvoke <android.media.RemoteControlClient$DisplayInfoForClient: android.media.IRemoteControlDisplay access$2100(android.media.RemoteControlClient$DisplayInfoForClient)>(r3);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemoteControlClient", $r17, r4);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label5;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private void setPlaybackStateInt(int, long, float, boolean)
    {
        android.media.RemoteControlClient r0;
        int i0, $i2;
        long l1, $l3, $l5;
        float f0, $f1;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        byte $b4, $b6, $b7;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        z0 := @parameter3: boolean;

        r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r1;

     label01:
        $i2 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        if $i2 != i0 goto label02;

        $l5 = r0.<android.media.RemoteControlClient: long mPlaybackPositionMs>;

        $b6 = $l5 cmp l1;

        if $b6 != 0 goto label02;

        $f1 = r0.<android.media.RemoteControlClient: float mPlaybackSpeed>;

        $b7 = $f1 cmpl f0;

        if $b7 == 0 goto label06;

     label02:
        r0.<android.media.RemoteControlClient: int mPlaybackState> = i0;

     label03:
        if z0 == 0 goto label13;

        $b4 = l1 cmp 0L;

        if $b4 >= 0 goto label08;

     label04:
        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = -1L;

     label05:
        r0.<android.media.RemoteControlClient: float mPlaybackSpeed> = f0;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<android.media.RemoteControlClient: long mPlaybackStateChangeTimeMs> = $l3;

        specialinvoke r0.<android.media.RemoteControlClient: void sendPlaybackState_syncCacheLock(android.media.IRemoteControlDisplay)>(null);

        specialinvoke r0.<android.media.RemoteControlClient: void sendAudioServiceNewPlaybackState_syncCacheLock()>();

        specialinvoke r0.<android.media.RemoteControlClient: void initiateCheckForDrift_syncCacheLock()>();

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = l1;

     label09:
        goto label05;

     label10:
        $r3 := @caughtexception;

        r2 = $r3;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

     label13:
        r0.<android.media.RemoteControlClient: long mPlaybackPositionMs> = -9216204211029966080L;

     label14:
        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public android.media.RemoteControlClient$MetadataEditor editMetadata(boolean)
    {
        android.media.RemoteControlClient r0;
        boolean z0;
        android.media.RemoteControlClient$MetadataEditor r1, $r2;
        android.os.Bundle $r3, $r4, $r6;
        android.graphics.Bitmap $r5;

        r0 := @this: android.media.RemoteControlClient;

        z0 := @parameter0: boolean;

        $r2 = new android.media.RemoteControlClient$MetadataEditor;

        specialinvoke $r2.<android.media.RemoteControlClient$MetadataEditor: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient$1)>(r0, null);

        r1 = $r2;

        if z0 == 0 goto label1;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r1.<android.media.RemoteControlClient$MetadataEditor: android.os.Bundle mEditorMetadata> = $r6;

        r1.<android.media.RemoteControlClient$MetadataEditor: android.graphics.Bitmap mEditorArtwork> = null;

        r1.<android.media.RemoteControlClient$MetadataEditor: boolean mMetadataChanged> = 1;

        r1.<android.media.RemoteControlClient$MetadataEditor: boolean mArtworkChanged> = 1;

        r1.<android.media.RemoteControlClient$MetadataEditor: long mEditableKeys> = 0L;

        return r1;

     label1:
        $r3 = new android.os.Bundle;

        $r4 = r0.<android.media.RemoteControlClient: android.os.Bundle mMetadata>;

        specialinvoke $r3.<android.os.Bundle: void <init>(android.os.Bundle)>($r4);

        r1.<android.media.RemoteControlClient$MetadataEditor: android.os.Bundle mEditorMetadata> = $r3;

        $r5 = r0.<android.media.RemoteControlClient: android.graphics.Bitmap mOriginalArtwork>;

        r1.<android.media.RemoteControlClient$MetadataEditor: android.graphics.Bitmap mEditorArtwork> = $r5;

        r1.<android.media.RemoteControlClient$MetadataEditor: boolean mMetadataChanged> = 0;

        r1.<android.media.RemoteControlClient$MetadataEditor: boolean mArtworkChanged> = 0;

        return r1;
    }

    public android.media.IRemoteControlClient getIRemoteControlClient()
    {
        android.media.RemoteControlClient r0;
        android.media.IRemoteControlClient $r1;

        r0 := @this: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.media.IRemoteControlClient mIRCC>;

        return $r1;
    }

    public int getIntPlaybackInformation(int)
    {
        android.media.RemoteControlClient r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r1;

        tableswitch(i0)
        {
            case 1: goto label03;
            case 2: goto label08;
            case 3: goto label10;
            case 4: goto label14;
            case 5: goto label12;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getIntPlaybackInformation() unknown key ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RemoteControlClient", $r6);

        exitmonitor r1;

     label02:
        return -2147483648;

     label03:
        i5 = r0.<android.media.RemoteControlClient: int mPlaybackType>;

        exitmonitor r1;

     label04:
        return i5;

     label05:
        $r7 := @caughtexception;

        r2 = $r7;

     label06:
        exitmonitor r1;

     label07:
        throw r2;

     label08:
        i4 = r0.<android.media.RemoteControlClient: int mPlaybackVolume>;

        exitmonitor r1;

     label09:
        return i4;

     label10:
        i3 = r0.<android.media.RemoteControlClient: int mPlaybackVolumeMax>;

        exitmonitor r1;

     label11:
        return i3;

     label12:
        i2 = r0.<android.media.RemoteControlClient: int mPlaybackStream>;

        exitmonitor r1;

     label13:
        return i2;

     label14:
        i1 = r0.<android.media.RemoteControlClient: int mPlaybackVolumeHandling>;

        exitmonitor r1;

     label15:
        return i1;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.Throwable from label12 to label13 with label05;
        catch java.lang.Throwable from label14 to label15 with label05;
    }

    public android.app.PendingIntent getRcMediaIntent()
    {
        android.media.RemoteControlClient r0;
        android.app.PendingIntent $r1;

        r0 := @this: android.media.RemoteControlClient;

        $r1 = r0.<android.media.RemoteControlClient: android.app.PendingIntent mRcMediaIntent>;

        return $r1;
    }

    public int getRcseId()
    {
        android.media.RemoteControlClient r0;
        int $i0;

        r0 := @this: android.media.RemoteControlClient;

        $i0 = r0.<android.media.RemoteControlClient: int mRcseId>;

        return $i0;
    }

    public void setMetadataUpdateListener(android.media.RemoteControlClient$OnMetadataUpdateListener)
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$OnMetadataUpdateListener r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.RemoteControlClient$OnMetadataUpdateListener;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

     label1:
        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnMetadataUpdateListener mMetadataUpdateListener> = r1;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setOnGetPlaybackPositionListener(android.media.RemoteControlClient$OnGetPlaybackPositionListener)
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$OnGetPlaybackPositionListener r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.media.RemoteControlClient$EventHandler $r5, $r6, $r7;
        boolean $z0;
        android.os.Message $r8;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.RemoteControlClient$OnGetPlaybackPositionListener;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

     label01:
        i0 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

     label02:
        if r1 == null goto label08;

     label03:
        $i7 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

        $i8 = <android.media.RemoteControlClient: int MEDIA_POSITION_READABLE>;

        $i9 = $i7 | $i8;

        r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities> = $i9;

     label04:
        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider> = r1;

        $i5 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

        if i0 == $i5 goto label05;

        specialinvoke r0.<android.media.RemoteControlClient: void sendTransportControlInfo_syncCacheLock(android.media.IRemoteControlDisplay)>(null);

     label05:
        $r4 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnGetPlaybackPositionListener mPositionProvider>;

        if $r4 == null goto label06;

        $r5 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        if $r5 == null goto label06;

        $i6 = r0.<android.media.RemoteControlClient: int mPlaybackState>;

        $z0 = staticinvoke <android.media.RemoteControlClient: boolean playbackPositionShouldMove(int)>($i6);

        if $z0 == 0 goto label06;

        $r6 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r7 = r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler mEventHandler>;

        $r8 = virtualinvoke $r7.<android.media.RemoteControlClient$EventHandler: android.os.Message obtainMessage(int)>(11);

        virtualinvoke $r6.<android.media.RemoteControlClient$EventHandler: boolean sendMessageDelayed(android.os.Message,long)>($r8, 0L);

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $i3 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

        $i1 = <android.media.RemoteControlClient: int MEDIA_POSITION_READABLE>;

        $i2 = -1 ^ $i1;

        $i4 = $i3 & $i2;

        r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities> = $i4;

     label09:
        goto label04;

     label10:
        $r9 := @caughtexception;

        r3 = $r9;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void setPlaybackInformation(int, int)
    {
        android.media.RemoteControlClient r0;
        int i0, i1, $i4, $i5, $i7, $i9, $i12, $i13;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r1;

        tableswitch(i0)
        {
            case 1: goto label04;
            case 2: goto label12;
            case 3: goto label17;
            case 4: goto label27;
            case 5: goto label22;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPlaybackInformation() ignoring unknown key ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemoteControlClient", $r6);

     label02:
        exitmonitor r1;

     label03:
        return;

     label04:
        if i1 < 0 goto label10;

        if i1 > 1 goto label10;

     label05:
        $i13 = r0.<android.media.RemoteControlClient: int mPlaybackType>;

        if $i13 == i1 goto label02;

        r0.<android.media.RemoteControlClient: int mPlaybackType> = i1;

        specialinvoke r0.<android.media.RemoteControlClient: void sendAudioServiceNewPlaybackInfo_syncCacheLock(int,int)>(i0, i1);

     label06:
        goto label02;

     label07:
        $r7 := @caughtexception;

        r2 = $r7;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemoteControlClient", "using invalid value for PLAYBACKINFO_PLAYBACK_TYPE");

     label11:
        goto label02;

     label12:
        if i1 <= -1 goto label15;

     label13:
        $i9 = r0.<android.media.RemoteControlClient: int mPlaybackVolumeMax>;

        if i1 > $i9 goto label15;

        $i12 = r0.<android.media.RemoteControlClient: int mPlaybackVolume>;

        if $i12 == i1 goto label02;

        r0.<android.media.RemoteControlClient: int mPlaybackVolume> = i1;

        specialinvoke r0.<android.media.RemoteControlClient: void sendAudioServiceNewPlaybackInfo_syncCacheLock(int,int)>(i0, i1);

     label14:
        goto label02;

     label15:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemoteControlClient", "using invalid value for PLAYBACKINFO_VOLUME");

     label16:
        goto label02;

     label17:
        if i1 <= 0 goto label20;

     label18:
        $i7 = r0.<android.media.RemoteControlClient: int mPlaybackVolumeMax>;

        if $i7 == i1 goto label02;

        r0.<android.media.RemoteControlClient: int mPlaybackVolumeMax> = i1;

        specialinvoke r0.<android.media.RemoteControlClient: void sendAudioServiceNewPlaybackInfo_syncCacheLock(int,int)>(i0, i1);

     label19:
        goto label02;

     label20:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemoteControlClient", "using invalid value for PLAYBACKINFO_VOLUME_MAX");

     label21:
        goto label02;

     label22:
        if i1 < 0 goto label25;

     label23:
        $i4 = staticinvoke <android.media.AudioSystem: int getNumStreamTypes()>();

        if i1 >= $i4 goto label25;

        r0.<android.media.RemoteControlClient: int mPlaybackStream> = i1;

     label24:
        goto label02;

     label25:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemoteControlClient", "using invalid value for PLAYBACKINFO_USES_STREAM");

     label26:
        goto label02;

     label27:
        if i1 < 0 goto label30;

        if i1 > 1 goto label30;

     label28:
        $i5 = r0.<android.media.RemoteControlClient: int mPlaybackVolumeHandling>;

        if $i5 == i1 goto label02;

        r0.<android.media.RemoteControlClient: int mPlaybackVolumeHandling> = i1;

        specialinvoke r0.<android.media.RemoteControlClient: void sendAudioServiceNewPlaybackInfo_syncCacheLock(int,int)>(i0, i1);

     label29:
        goto label02;

     label30:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemoteControlClient", "using invalid value for PLAYBACKINFO_VOLUME_HANDLING");

     label31:
        goto label02;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
        catch java.lang.Throwable from label18 to label19 with label07;
        catch java.lang.Throwable from label20 to label21 with label07;
        catch java.lang.Throwable from label23 to label24 with label07;
        catch java.lang.Throwable from label25 to label26 with label07;
        catch java.lang.Throwable from label28 to label29 with label07;
        catch java.lang.Throwable from label30 to label31 with label07;
    }

    public void setPlaybackPositionUpdateListener(android.media.RemoteControlClient$OnPlaybackPositionUpdateListener)
    {
        android.media.RemoteControlClient r0;
        android.media.RemoteControlClient$OnPlaybackPositionUpdateListener r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: android.media.RemoteControlClient;

        r1 := @parameter0: android.media.RemoteControlClient$OnPlaybackPositionUpdateListener;

        r2 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r2;

     label01:
        i0 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

     label02:
        if r1 == null goto label07;

     label03:
        $i7 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

        $i6 = <android.media.RemoteControlClient: int MEDIA_POSITION_WRITABLE>;

        $i8 = $i7 | $i6;

        r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities> = $i8;

     label04:
        r0.<android.media.RemoteControlClient: android.media.RemoteControlClient$OnPlaybackPositionUpdateListener mPositionUpdateListener> = r1;

        $i5 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

        if i0 == $i5 goto label05;

        specialinvoke r0.<android.media.RemoteControlClient: void sendTransportControlInfo_syncCacheLock(android.media.IRemoteControlDisplay)>(null);

     label05:
        exitmonitor r2;

     label06:
        return;

     label07:
        $i3 = r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities>;

        $i1 = <android.media.RemoteControlClient: int MEDIA_POSITION_WRITABLE>;

        $i2 = -1 ^ $i1;

        $i4 = $i3 & $i2;

        r0.<android.media.RemoteControlClient: int mPlaybackPositionCapabilities> = $i4;

     label08:
        goto label04;

     label09:
        $r4 := @caughtexception;

        r3 = $r4;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void setPlaybackState(int)
    {
        android.media.RemoteControlClient r0;
        int i0;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.RemoteControlClient: void setPlaybackStateInt(int,long,float,boolean)>(i0, -9216204211029966080L, 1.0F, 0);

        return;
    }

    public void setPlaybackState(int, long, float)
    {
        android.media.RemoteControlClient r0;
        int i0;
        long l1;
        float f0;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        specialinvoke r0.<android.media.RemoteControlClient: void setPlaybackStateInt(int,long,float,boolean)>(i0, l1, f0, 1);

        return;
    }

    public void setRcseId(int)
    {
        android.media.RemoteControlClient r0;
        int i0;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        r0.<android.media.RemoteControlClient: int mRcseId> = i0;

        return;
    }

    public void setTransportControlFlags(int)
    {
        android.media.RemoteControlClient r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.media.RemoteControlClient;

        i0 := @parameter0: int;

        r1 = r0.<android.media.RemoteControlClient: java.lang.Object mCacheLock>;

        entermonitor r1;

     label1:
        r0.<android.media.RemoteControlClient: int mTransportControlFlags> = i0;

        specialinvoke r0.<android.media.RemoteControlClient: void sendTransportControlInfo_syncCacheLock(android.media.IRemoteControlDisplay)>(null);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
