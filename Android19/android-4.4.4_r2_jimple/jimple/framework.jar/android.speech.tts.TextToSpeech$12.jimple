class android.speech.tts.TextToSpeech$12 extends java.lang.Object implements android.speech.tts.TextToSpeech$Action
{
    final android.speech.tts.TextToSpeech this$0;
    final java.lang.String val$filename;
    final java.util.HashMap val$params;
    final java.lang.String val$text;

    void <init>(android.speech.tts.TextToSpeech, java.lang.String, java.lang.String, java.util.HashMap)
    {
        android.speech.tts.TextToSpeech$12 r0;
        android.speech.tts.TextToSpeech r1;
        java.lang.String r2, r3;
        java.util.HashMap r4;

        r0 := @this: android.speech.tts.TextToSpeech$12;

        r1 := @parameter0: android.speech.tts.TextToSpeech;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.HashMap;

        r0.<android.speech.tts.TextToSpeech$12: android.speech.tts.TextToSpeech this$0> = r1;

        r0.<android.speech.tts.TextToSpeech$12: java.lang.String val$filename> = r2;

        r0.<android.speech.tts.TextToSpeech$12: java.lang.String val$text> = r3;

        r0.<android.speech.tts.TextToSpeech$12: java.util.HashMap val$params> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Integer run(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech$12 r0;
        android.speech.tts.ITextToSpeechService r1;
        java.io.File r2, $r7;
        java.io.IOException r3, $r30;
        java.io.FileNotFoundException r4, $r20;
        android.os.ParcelFileDescriptor r5;
        int i0;
        java.lang.Integer r6, $r21, $r29, $r35;
        java.lang.String $r8, $r14, $r18, $r19, $r23, $r25, $r34, $r36;
        boolean $z0, $z1;
        android.speech.tts.TextToSpeech $r9, $r11;
        android.os.IBinder $r10;
        java.util.HashMap $r12;
        android.os.Bundle $r13;
        java.lang.StringBuilder $r15, $r16, $r17, $r22, $r24, $r26, $r27, $r28, $r31, $r32, $r33;

        r0 := @this: android.speech.tts.TextToSpeech$12;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

     label1:
        $r7 = new java.io.File;

        $r8 = r0.<android.speech.tts.TextToSpeech$12: java.lang.String val$filename>;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);

        r2 = $r7;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r2.<java.io.File: boolean canWrite()>();

        if $z1 != 0 goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t write to ");

        $r18 = r0.<android.speech.tts.TextToSpeech$12: java.lang.String val$filename>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeech", $r19);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        return $r21;

     label2:
        r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r2, 738197504);

        $r9 = r0.<android.speech.tts.TextToSpeech$12: android.speech.tts.TextToSpeech this$0>;

        $r10 = staticinvoke <android.speech.tts.TextToSpeech: android.os.IBinder access$100(android.speech.tts.TextToSpeech)>($r9);

        $r14 = r0.<android.speech.tts.TextToSpeech$12: java.lang.String val$text>;

        $r11 = r0.<android.speech.tts.TextToSpeech$12: android.speech.tts.TextToSpeech this$0>;

        $r12 = r0.<android.speech.tts.TextToSpeech$12: java.util.HashMap val$params>;

        $r13 = staticinvoke <android.speech.tts.TextToSpeech: android.os.Bundle access$500(android.speech.tts.TextToSpeech,java.util.HashMap)>($r11, $r12);

        i0 = interfaceinvoke r1.<android.speech.tts.ITextToSpeechService: int synthesizeToFileDescriptor(android.os.IBinder,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>($r10, $r14, r5, $r13);

        virtualinvoke r5.<android.os.ParcelFileDescriptor: void close()>();

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

     label3:
        return r6;

     label4:
        $r20 := @caughtexception;

        r4 = $r20;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening file ");

        $r23 = r0.<android.speech.tts.TextToSpeech$12: java.lang.String val$filename>;

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r25, r4);

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        return $r29;

     label5:
        $r30 := @caughtexception;

        r3 = $r30;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing file ");

        $r34 = r0.<android.speech.tts.TextToSpeech$12: java.lang.String val$filename>;

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TextToSpeech", $r36, r3);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        return $r35;

        catch java.io.FileNotFoundException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    public volatile java.lang.Object run(android.speech.tts.ITextToSpeechService) throws android.os.RemoteException
    {
        android.speech.tts.TextToSpeech$12 r0;
        android.speech.tts.ITextToSpeechService r1;
        java.lang.Integer $r2;

        r0 := @this: android.speech.tts.TextToSpeech$12;

        r1 := @parameter0: android.speech.tts.ITextToSpeechService;

        $r2 = virtualinvoke r0.<android.speech.tts.TextToSpeech$12: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>(r1);

        return $r2;
    }
}
