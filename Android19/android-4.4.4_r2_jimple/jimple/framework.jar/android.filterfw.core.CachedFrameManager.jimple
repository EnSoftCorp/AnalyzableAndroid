public class android.filterfw.core.CachedFrameManager extends android.filterfw.core.SimpleFrameManager
{
    private java.util.SortedMap mAvailableFrames;
    private int mStorageCapacity;
    private int mStorageSize;
    private int mTimeStamp;

    public void <init>()
    {
        android.filterfw.core.CachedFrameManager r0;
        java.util.TreeMap $r1;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        specialinvoke r0.<android.filterfw.core.SimpleFrameManager: void <init>()>();

        r0.<android.filterfw.core.CachedFrameManager: int mStorageCapacity> = 25165824;

        r0.<android.filterfw.core.CachedFrameManager: int mStorageSize> = 0;

        r0.<android.filterfw.core.CachedFrameManager: int mTimeStamp> = 0;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames> = $r1;

        return;
    }

    private void dropOldestFrame()
    {
        android.filterfw.core.CachedFrameManager r0;
        int i0, $i1, $i2, $i3;
        android.filterfw.core.Frame r1;
        java.util.SortedMap $r2, $r5, $r9;
        java.lang.Object $r3, $r7;
        java.lang.Integer $r4, $r6, $r10;
        android.filterfw.core.FrameFormat $r8;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        $r2 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object firstKey()>();

        $r4 = (java.lang.Integer) $r3;

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = interfaceinvoke $r5.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r6);

        r1 = (android.filterfw.core.Frame) $r7;

        $i1 = r0.<android.filterfw.core.CachedFrameManager: int mStorageSize>;

        $r8 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i2 = virtualinvoke $r8.<android.filterfw.core.FrameFormat: int getSize()>();

        $i3 = $i1 - $i2;

        r0.<android.filterfw.core.CachedFrameManager: int mStorageSize> = $i3;

        virtualinvoke r1.<android.filterfw.core.Frame: void releaseNativeAllocation()>();

        $r9 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r9.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>($r10);

        return;
    }

    private android.filterfw.core.Frame findAvailableFrame(android.filterfw.core.FrameFormat, int, long)
    {
        android.filterfw.core.CachedFrameManager r0;
        android.filterfw.core.FrameFormat r1, $r11;
        int i0, $i2, $i3, $i4, $i5;
        long l1, $l6;
        java.util.SortedMap r2, $r7, $r14;
        java.lang.Throwable r3, $r16;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        android.filterfw.core.Frame r6;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10, $r13;
        byte $b7;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        r1 := @parameter0: android.filterfw.core.FrameFormat;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        entermonitor r2;

     label01:
        $r7 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        $r8 = interfaceinvoke $r7.<java.util.SortedMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r10;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (android.filterfw.core.Frame) $r9;

        $r11 = virtualinvoke r6.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $z1 = virtualinvoke $r11.<android.filterfw.core.FrameFormat: boolean isReplaceableBy(android.filterfw.core.FrameFormat)>(r1);

        if $z1 == 0 goto label02;

        $i2 = virtualinvoke r6.<android.filterfw.core.Frame: int getBindingType()>();

        if i0 != $i2 goto label02;

     label03:
        if i0 == 0 goto label05;

     label04:
        $l6 = virtualinvoke r6.<android.filterfw.core.Frame: long getBindingId()>();

        $b7 = l1 cmp $l6;

        if $b7 != 0 goto label02;

     label05:
        specialinvoke r0.<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>(r6);

        $r14 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r14.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>($r13);

        virtualinvoke r6.<android.filterfw.core.Frame: void onFrameFetch()>();

        virtualinvoke r6.<android.filterfw.core.Frame: void reset(android.filterfw.core.FrameFormat)>(r1);

        $i3 = r0.<android.filterfw.core.CachedFrameManager: int mStorageSize>;

        $i5 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getSize()>();

        $i4 = $i3 - $i5;

        r0.<android.filterfw.core.CachedFrameManager: int mStorageSize> = $i4;

        exitmonitor r2;

     label06:
        return r6;

     label07:
        exitmonitor r2;

     label08:
        return null;

     label09:
        $r16 := @caughtexception;

        r3 = $r16;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private boolean storeFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.CachedFrameManager r0;
        android.filterfw.core.Frame r1;
        java.util.SortedMap r2, $r5;
        java.lang.Throwable r3, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.filterfw.core.FrameFormat $r4;
        java.lang.Integer $r6;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        r1 := @parameter0: android.filterfw.core.Frame;

        r2 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        entermonitor r2;

     label01:
        $r4 = virtualinvoke r1.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        i0 = virtualinvoke $r4.<android.filterfw.core.FrameFormat: int getSize()>();

        $i2 = r0.<android.filterfw.core.CachedFrameManager: int mStorageCapacity>;

        if i0 <= $i2 goto label03;

        exitmonitor r2;

     label02:
        return 0;

     label03:
        $i3 = r0.<android.filterfw.core.CachedFrameManager: int mStorageSize>;

        i1 = i0 + $i3;

     label04:
        $i4 = r0.<android.filterfw.core.CachedFrameManager: int mStorageCapacity>;

        if i1 <= $i4 goto label06;

        specialinvoke r0.<android.filterfw.core.CachedFrameManager: void dropOldestFrame()>();

        $i8 = r0.<android.filterfw.core.CachedFrameManager: int mStorageSize>;

        i1 = i0 + $i8;

     label05:
        goto label04;

     label06:
        virtualinvoke r1.<android.filterfw.core.Frame: void onFrameStore()>();

        r0.<android.filterfw.core.CachedFrameManager: int mStorageSize> = i1;

        $r5 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        $i5 = r0.<android.filterfw.core.CachedFrameManager: int mTimeStamp>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke $r5.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

        $i7 = r0.<android.filterfw.core.CachedFrameManager: int mTimeStamp>;

        $i6 = 1 + $i7;

        r0.<android.filterfw.core.CachedFrameManager: int mTimeStamp> = $i6;

        exitmonitor r2;

     label07:
        return 1;

     label08:
        $r8 := @caughtexception;

        r3 = $r8;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void clearCache()
    {
        android.filterfw.core.CachedFrameManager r0;
        java.util.Iterator r1;
        java.util.SortedMap $r2, $r4;
        java.util.Collection $r3;
        boolean $z0;
        java.lang.Object $r5;
        android.filterfw.core.Frame $r6;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        $r2 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.filterfw.core.Frame) $r5;

        virtualinvoke $r6.<android.filterfw.core.Frame: void releaseNativeAllocation()>();

        goto label1;

     label2:
        $r4 = r0.<android.filterfw.core.CachedFrameManager: java.util.SortedMap mAvailableFrames>;

        interfaceinvoke $r4.<java.util.SortedMap: void clear()>();

        return;
    }

    public android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat, int, long)
    {
        android.filterfw.core.CachedFrameManager r0;
        android.filterfw.core.FrameFormat r1;
        int i0;
        long l1;
        android.filterfw.core.Frame r2;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        r1 := @parameter0: android.filterfw.core.FrameFormat;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r2 = specialinvoke r0.<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame findAvailableFrame(android.filterfw.core.FrameFormat,int,long)>(r1, i0, l1);

        if r2 != null goto label1;

        r2 = specialinvoke r0.<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>(r1, i0, l1);

     label1:
        virtualinvoke r2.<android.filterfw.core.Frame: void setTimestamp(long)>(-2L);

        return r2;
    }

    public android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)
    {
        android.filterfw.core.CachedFrameManager r0;
        android.filterfw.core.FrameFormat r1;
        android.filterfw.core.Frame r2;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        r1 := @parameter0: android.filterfw.core.FrameFormat;

        r2 = specialinvoke r0.<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame findAvailableFrame(android.filterfw.core.FrameFormat,int,long)>(r1, 0, 0L);

        if r2 != null goto label1;

        r2 = specialinvoke r0.<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r1);

     label1:
        virtualinvoke r2.<android.filterfw.core.Frame: void setTimestamp(long)>(-2L);

        return r2;
    }

    public android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.CachedFrameManager r0;
        android.filterfw.core.Frame r1;
        int i0;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        r1 := @parameter0: android.filterfw.core.Frame;

        $z0 = virtualinvoke r1.<android.filterfw.core.Frame: boolean isReusable()>();

        if $z0 == 0 goto label4;

        i0 = virtualinvoke r1.<android.filterfw.core.Frame: int decRefCount()>();

        if i0 != 0 goto label3;

        $z1 = virtualinvoke r1.<android.filterfw.core.Frame: boolean hasNativeAllocation()>();

        if $z1 == 0 goto label3;

        $z2 = specialinvoke r0.<android.filterfw.core.CachedFrameManager: boolean storeFrame(android.filterfw.core.Frame)>(r1);

        if $z2 != 0 goto label1;

        virtualinvoke r1.<android.filterfw.core.Frame: void releaseNativeAllocation()>();

     label1:
        r1 = null;

     label2:
        return r1;

     label3:
        if i0 >= 0 goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Frame reference count dropped below 0!");

        throw $r3;

     label4:
        specialinvoke r0.<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>(r1);

        return r1;
    }

    public android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.CachedFrameManager r0;
        android.filterfw.core.Frame r1, $r2;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        r1 := @parameter0: android.filterfw.core.Frame;

        $r2 = specialinvoke r0.<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>(r1);

        return $r2;
    }

    public void tearDown()
    {
        android.filterfw.core.CachedFrameManager r0;

        r0 := @this: android.filterfw.core.CachedFrameManager;

        virtualinvoke r0.<android.filterfw.core.CachedFrameManager: void clearCache()>();

        return;
    }
}
