class android.media.MediaPlayer$2 extends java.lang.Object implements java.lang.Runnable
{
    final android.media.MediaPlayer this$0;
    final android.media.MediaFormat val$fFormat;
    final java.io.InputStream val$fIs;
    final android.os.HandlerThread val$thread;

    void <init>(android.media.MediaPlayer, java.io.InputStream, android.media.MediaFormat, android.os.HandlerThread)
    {
        android.media.MediaPlayer$2 r0;
        android.media.MediaPlayer r1;
        java.io.InputStream r2;
        android.media.MediaFormat r3;
        android.os.HandlerThread r4;

        r0 := @this: android.media.MediaPlayer$2;

        r1 := @parameter0: android.media.MediaPlayer;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: android.media.MediaFormat;

        r4 := @parameter3: android.os.HandlerThread;

        r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0> = r1;

        r0.<android.media.MediaPlayer$2: java.io.InputStream val$fIs> = r2;

        r0.<android.media.MediaPlayer$2: android.media.MediaFormat val$fFormat> = r3;

        r0.<android.media.MediaPlayer$2: android.os.HandlerThread val$thread> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private int addTrack()
    {
        android.media.MediaPlayer$2 r0;
        android.media.SubtitleTrack r1;
        java.util.Scanner r2, $r12, $r14;
        java.lang.String r3;
        java.util.Vector r4, $r16, $r20;
        java.lang.Throwable r5, $r21;
        java.io.InputStream $r6, $r13, $r18;
        android.media.MediaPlayer $r7, $r9, $r15, $r17, $r19;
        android.media.SubtitleController $r8, $r10;
        android.media.MediaFormat $r11;

        r0 := @this: android.media.MediaPlayer$2;

        $r6 = r0.<android.media.MediaPlayer$2: java.io.InputStream val$fIs>;

        if $r6 == null goto label1;

        $r7 = r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0>;

        $r8 = staticinvoke <android.media.MediaPlayer: android.media.SubtitleController access$100(android.media.MediaPlayer)>($r7);

        if $r8 != null goto label2;

     label1:
        return 901;

     label2:
        $r9 = r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0>;

        $r10 = staticinvoke <android.media.MediaPlayer: android.media.SubtitleController access$100(android.media.MediaPlayer)>($r9);

        $r11 = r0.<android.media.MediaPlayer$2: android.media.MediaFormat val$fFormat>;

        r1 = virtualinvoke $r10.<android.media.SubtitleController: android.media.SubtitleTrack addTrack(android.media.MediaFormat)>($r11);

        if r1 == null goto label1;

        $r12 = new java.util.Scanner;

        $r13 = r0.<android.media.MediaPlayer$2: java.io.InputStream val$fIs>;

        specialinvoke $r12.<java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)>($r13, "UTF-8");

        r2 = $r12;

        $r14 = virtualinvoke r2.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("\\A");

        r3 = virtualinvoke $r14.<java.util.Scanner: java.lang.String next()>();

        $r15 = r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0>;

        r4 = staticinvoke <android.media.MediaPlayer: java.util.Vector access$200(android.media.MediaPlayer)>($r15);

        entermonitor r4;

     label3:
        $r17 = r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0>;

        $r16 = staticinvoke <android.media.MediaPlayer: java.util.Vector access$200(android.media.MediaPlayer)>($r17);

        $r18 = r0.<android.media.MediaPlayer$2: java.io.InputStream val$fIs>;

        virtualinvoke $r16.<java.util.Vector: boolean remove(java.lang.Object)>($r18);

        exitmonitor r4;

     label4:
        virtualinvoke r2.<java.util.Scanner: void close()>();

        $r19 = r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0>;

        $r20 = staticinvoke <android.media.MediaPlayer: java.util.Vector access$300(android.media.MediaPlayer)>($r19);

        virtualinvoke $r20.<java.util.Vector: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<android.media.SubtitleTrack: void onData(java.lang.String,boolean,long)>(r3, 1, -1L);

        return 803;

     label5:
        $r21 := @caughtexception;

        r5 = $r21;

     label6:
        exitmonitor r4;

     label7:
        throw r5;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void run()
    {
        android.media.MediaPlayer$2 r0;
        int i0;
        android.os.Message r1;
        android.media.MediaPlayer $r2, $r6, $r8;
        android.media.MediaPlayer$EventHandler $r3, $r7, $r9;
        android.os.HandlerThread $r4;
        android.os.Looper $r5;

        r0 := @this: android.media.MediaPlayer$2;

        i0 = specialinvoke r0.<android.media.MediaPlayer$2: int addTrack()>();

        $r2 = r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0>;

        $r3 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer$EventHandler access$400(android.media.MediaPlayer)>($r2);

        if $r3 == null goto label1;

        $r6 = r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0>;

        $r7 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer$EventHandler access$400(android.media.MediaPlayer)>($r6);

        r1 = virtualinvoke $r7.<android.media.MediaPlayer$EventHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(200, i0, 0, null);

        $r8 = r0.<android.media.MediaPlayer$2: android.media.MediaPlayer this$0>;

        $r9 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer$EventHandler access$400(android.media.MediaPlayer)>($r8);

        virtualinvoke $r9.<android.media.MediaPlayer$EventHandler: boolean sendMessage(android.os.Message)>(r1);

     label1:
        $r4 = r0.<android.media.MediaPlayer$2: android.os.HandlerThread val$thread>;

        $r5 = virtualinvoke $r4.<android.os.HandlerThread: android.os.Looper getLooper()>();

        virtualinvoke $r5.<android.os.Looper: void quitSafely()>();

        return;
    }
}
