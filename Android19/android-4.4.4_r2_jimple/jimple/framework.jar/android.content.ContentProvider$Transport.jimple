class android.content.ContentProvider$Transport extends android.content.ContentProviderNative
{
    android.app.AppOpsManager mAppOpsManager;
    int mReadOp;
    int mWriteOp;
    final android.content.ContentProvider this$0;

    void <init>(android.content.ContentProvider)
    {
        android.content.ContentProvider$Transport r0;
        android.content.ContentProvider r1;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: android.content.ContentProvider;

        r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0> = r1;

        specialinvoke r0.<android.content.ContentProviderNative: void <init>()>();

        r0.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager> = null;

        r0.<android.content.ContentProvider$Transport: int mReadOp> = -1;

        r0.<android.content.ContentProvider$Transport: int mWriteOp> = -1;

        return;
    }

    private void enforceFilePermission(java.lang.String, android.net.Uri, java.lang.String) throws java.io.FileNotFoundException, java.lang.SecurityException
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        int $i0, $i1, $i2;
        java.io.FileNotFoundException $r4, $r5;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        if r3 == null goto label1;

        $i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(119);

        if $i1 == -1 goto label1;

        $i2 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceWritePermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i2 == 0 goto label2;

        $r5 = new java.io.FileNotFoundException;

        specialinvoke $r5.<java.io.FileNotFoundException: void <init>(java.lang.String)>("App op not allowed");

        throw $r5;

     label1:
        $i0 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceReadPermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i0 == 0 goto label2;

        $r4 = new java.io.FileNotFoundException;

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>("App op not allowed");

        throw $r4;

     label2:
        return;
    }

    private int enforceReadPermission(java.lang.String, android.net.Uri) throws java.lang.SecurityException
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.content.ContentProvider $r3;
        int $i0, $i1, $i2, $i3;
        android.app.AppOpsManager $r4;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        $r3 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        virtualinvoke $r3.<android.content.ContentProvider: void enforceReadPermissionInner(android.net.Uri)>(r2);

        $i0 = r0.<android.content.ContentProvider$Transport: int mReadOp>;

        if $i0 == -1 goto label1;

        $r4 = r0.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager>;

        $i1 = r0.<android.content.ContentProvider$Transport: int mReadOp>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = virtualinvoke $r4.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>($i1, $i2, r1);

        return $i3;

     label1:
        return 0;
    }

    private int enforceWritePermission(java.lang.String, android.net.Uri) throws java.lang.SecurityException
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1;
        android.net.Uri r2;
        android.content.ContentProvider $r3;
        int $i0, $i1, $i2, $i3;
        android.app.AppOpsManager $r4;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        $r3 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        virtualinvoke $r3.<android.content.ContentProvider: void enforceWritePermissionInner(android.net.Uri)>(r2);

        $i0 = r0.<android.content.ContentProvider$Transport: int mWriteOp>;

        if $i0 == -1 goto label1;

        $r4 = r0.<android.content.ContentProvider$Transport: android.app.AppOpsManager mAppOpsManager>;

        $i1 = r0.<android.content.ContentProvider$Transport: int mWriteOp>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = virtualinvoke $r4.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>($i1, $i2, r1);

        return $i3;

     label1:
        return 0;
    }

    public android.content.ContentProviderResult[] applyBatch(java.lang.String, java.util.ArrayList) throws android.content.OperationApplicationException
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r4;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        java.lang.Throwable r5, $r16;
        android.content.ContentProviderResult[] r6;
        android.content.ContentProviderOperation r7;
        boolean $z0, $z1, $z2;
        android.content.ContentProvider $r8, $r9, $r11, $r19;
        java.lang.Object $r12;
        android.net.Uri $r13, $r15;
        android.content.OperationApplicationException $r14, $r17;
        int $i0, $i1;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.content.ContentProviderOperation) $r12;

        $z1 = virtualinvoke r7.<android.content.ContentProviderOperation: boolean isReadOperation()>();

        if $z1 == 0 goto label2;

        $r15 = virtualinvoke r7.<android.content.ContentProviderOperation: android.net.Uri getUri()>();

        $i1 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceReadPermission(java.lang.String,android.net.Uri)>(r1, $r15);

        if $i1 == 0 goto label2;

        $r17 = new android.content.OperationApplicationException;

        specialinvoke $r17.<android.content.OperationApplicationException: void <init>(java.lang.String,int)>("App op not allowed", 0);

        throw $r17;

     label2:
        $z2 = virtualinvoke r7.<android.content.ContentProviderOperation: boolean isWriteOperation()>();

        if $z2 == 0 goto label1;

        $r13 = virtualinvoke r7.<android.content.ContentProviderOperation: android.net.Uri getUri()>();

        $i0 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceWritePermission(java.lang.String,android.net.Uri)>(r1, $r13);

        if $i0 == 0 goto label1;

        $r14 = new android.content.OperationApplicationException;

        specialinvoke $r14.<android.content.OperationApplicationException: void <init>(java.lang.String,int)>("App op not allowed", 0);

        throw $r14;

     label3:
        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r4 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r8, r1);

     label4:
        $r9 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r6 = virtualinvoke $r9.<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>(r2);

     label5:
        $r11 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r11, r4);

        return r6;

     label6:
        $r16 := @caughtexception;

        r5 = $r16;

        $r19 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r19, r4);

        throw r5;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int bulkInsert(java.lang.String, android.net.Uri, android.content.ContentValues[])
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r4;
        android.net.Uri r2;
        android.content.ContentValues[] r3;
        java.lang.Throwable r5, $r10;
        int i0, $i1;
        android.content.ContentProvider $r6, $r7, $r8, $r12;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues[];

        $i1 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceWritePermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i1 == 0 goto label1;

        return 0;

     label1:
        $r6 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r4 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r6, r1);

     label2:
        $r7 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        i0 = virtualinvoke $r7.<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>(r2, r3);

     label3:
        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r8, r4);

        return i0;

     label4:
        $r10 := @caughtexception;

        r5 = $r10;

        $r12 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r12, r4);

        throw r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, java.lang.String, android.os.Bundle)
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r2, r3, r5;
        android.os.Bundle r4, r7;
        java.lang.Throwable r6, $r12;
        android.content.ContentProvider $r8, $r9, $r10, $r14;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r5 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r8, r1);

     label1:
        $r9 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r7 = virtualinvoke $r9.<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>(r2, r3, r4);

     label2:
        $r10 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r10, r5);

        return r7;

     label3:
        $r12 := @caughtexception;

        r6 = $r12;

        $r14 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r14, r5);

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.Uri canonicalize(java.lang.String, android.net.Uri)
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r3;
        android.net.Uri r2, r5;
        java.lang.Throwable r4, $r10;
        int $i0;
        android.content.ContentProvider $r6, $r7, $r8, $r11;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        $i0 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceReadPermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i0 == 0 goto label1;

        return null;

     label1:
        $r6 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r3 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r6, r1);

     label2:
        $r7 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r5 = virtualinvoke $r7.<android.content.ContentProvider: android.net.Uri canonicalize(android.net.Uri)>(r2);

     label3:
        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r8, r3);

        return r5;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        $r11 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r11, r3);

        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.os.ICancellationSignal createCancellationSignal()
    {
        android.content.ContentProvider$Transport r0;
        android.os.ICancellationSignal $r1;

        r0 := @this: android.content.ContentProvider$Transport;

        $r1 = staticinvoke <android.os.CancellationSignal: android.os.ICancellationSignal createTransport()>();

        return $r1;
    }

    public int delete(java.lang.String, android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r3, r5;
        android.net.Uri r2;
        java.lang.String[] r4;
        java.lang.Throwable r6, $r12;
        int i0, $i1;
        android.content.ContentProvider $r7, $r8, $r9, $r11;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $i1 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceWritePermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i1 == 0 goto label1;

        return 0;

     label1:
        $r7 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r5 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r7, r1);

     label2:
        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        i0 = virtualinvoke $r8.<android.content.ContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r2, r3, r4);

     label3:
        $r9 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r9, r5);

        return i0;

     label4:
        $r12 := @caughtexception;

        r6 = $r12;

        $r11 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r11, r5);

        throw r6;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    android.content.ContentProvider getContentProvider()
    {
        android.content.ContentProvider$Transport r0;
        android.content.ContentProvider $r1;

        r0 := @this: android.content.ContentProvider$Transport;

        $r1 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        return $r1;
    }

    public java.lang.String getProviderName()
    {
        android.content.ContentProvider$Transport r0;
        android.content.ContentProvider $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.content.ContentProvider$Transport;

        $r1 = virtualinvoke r0.<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    public java.lang.String[] getStreamTypes(android.net.Uri, java.lang.String)
    {
        android.content.ContentProvider$Transport r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.content.ContentProvider $r3;
        java.lang.String[] $r4;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r4 = virtualinvoke $r3.<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>(r1, r2);

        return $r4;
    }

    public java.lang.String getType(android.net.Uri)
    {
        android.content.ContentProvider$Transport r0;
        android.net.Uri r1;
        android.content.ContentProvider $r2;
        java.lang.String $r3;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r3 = virtualinvoke $r2.<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>(r1);

        return $r3;
    }

    public android.net.Uri insert(java.lang.String, android.net.Uri, android.content.ContentValues)
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r4;
        android.net.Uri r2, r6, $r13;
        android.content.ContentValues r3;
        java.lang.Throwable r5, $r12;
        int $i0;
        android.content.ContentProvider $r7, $r8, $r9, $r11, $r15;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues;

        $i0 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceWritePermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i0 == 0 goto label1;

        $r11 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r13 = virtualinvoke $r11.<android.content.ContentProvider: android.net.Uri rejectInsert(android.net.Uri,android.content.ContentValues)>(r2, r3);

        return $r13;

     label1:
        $r7 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r4 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r7, r1);

     label2:
        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r6 = virtualinvoke $r8.<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r2, r3);

     label3:
        $r9 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r9, r4);

        return r6;

     label4:
        $r12 := @caughtexception;

        r5 = $r12;

        $r15 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r15, r4);

        throw r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(java.lang.String, android.net.Uri, java.lang.String, android.os.ICancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r3, r5;
        android.net.Uri r2;
        android.os.ICancellationSignal r4;
        java.lang.Throwable r6, $r14;
        android.content.res.AssetFileDescriptor r7;
        android.content.ContentProvider $r8, $r9, $r11, $r13;
        android.os.CancellationSignal $r10;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.ICancellationSignal;

        specialinvoke r0.<android.content.ContentProvider$Transport: void enforceFilePermission(java.lang.String,android.net.Uri,java.lang.String)>(r1, r2, r3);

        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r5 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r8, r1);

     label1:
        $r9 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r10 = staticinvoke <android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>(r4);

        r7 = virtualinvoke $r9.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r2, r3, $r10);

     label2:
        $r11 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r11, r5);

        return r7;

     label3:
        $r14 := @caughtexception;

        r6 = $r14;

        $r13 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r13, r5);

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.ParcelFileDescriptor openFile(java.lang.String, android.net.Uri, java.lang.String, android.os.ICancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r3, r5;
        android.net.Uri r2;
        android.os.ICancellationSignal r4;
        java.lang.Throwable r6, $r14;
        android.os.ParcelFileDescriptor r7;
        android.content.ContentProvider $r8, $r9, $r11, $r13;
        android.os.CancellationSignal $r10;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.ICancellationSignal;

        specialinvoke r0.<android.content.ContentProvider$Transport: void enforceFilePermission(java.lang.String,android.net.Uri,java.lang.String)>(r1, r2, r3);

        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r5 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r8, r1);

     label1:
        $r9 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r10 = staticinvoke <android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>(r4);

        r7 = virtualinvoke $r9.<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r2, r3, $r10);

     label2:
        $r11 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r11, r5);

        return r7;

     label3:
        $r14 := @caughtexception;

        r6 = $r14;

        $r13 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r13, r5);

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String, android.net.Uri, java.lang.String, android.os.Bundle, android.os.ICancellationSignal) throws java.io.FileNotFoundException
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r3, r6;
        android.net.Uri r2;
        android.os.Bundle r4;
        android.os.ICancellationSignal r5;
        java.lang.Throwable r7, $r13;
        android.content.res.AssetFileDescriptor r8;
        android.content.ContentProvider $r9, $r10, $r12, $r16;
        android.os.CancellationSignal $r11;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.os.ICancellationSignal;

        specialinvoke r0.<android.content.ContentProvider$Transport: void enforceFilePermission(java.lang.String,android.net.Uri,java.lang.String)>(r1, r2, "r");

        $r9 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r6 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r9, r1);

     label1:
        $r10 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r11 = staticinvoke <android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>(r5);

        r8 = virtualinvoke $r10.<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r2, r3, r4, $r11);

     label2:
        $r12 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r12, r6);

        return r8;

     label3:
        $r13 := @caughtexception;

        r7 = $r13;

        $r16 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r16, r6);

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.database.Cursor query(java.lang.String, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.ICancellationSignal)
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r4, r6, r8;
        android.net.Uri r2;
        java.lang.String[] r3, r5;
        android.os.ICancellationSignal r7;
        java.lang.Throwable r9, $r18;
        android.database.Cursor r10, $r19;
        int $i0;
        android.content.ContentProvider $r11, $r12, $r15, $r17, $r21;
        android.os.CancellationSignal $r13, $r16;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: android.os.ICancellationSignal;

        $i0 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceReadPermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i0 == 0 goto label1;

        $r17 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r16 = staticinvoke <android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>(r7);

        $r19 = virtualinvoke $r17.<android.content.ContentProvider: android.database.Cursor rejectQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>(r2, r3, r4, r5, r6, $r16);

        return $r19;

     label1:
        $r11 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r8 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r11, r1);

     label2:
        $r12 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        $r13 = staticinvoke <android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>(r7);

        r10 = virtualinvoke $r12.<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>(r2, r3, r4, r5, r6, $r13);

     label3:
        $r15 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r15, r8);

        return r10;

     label4:
        $r18 := @caughtexception;

        r9 = $r18;

        $r21 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r21, r8);

        throw r9;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.net.Uri uncanonicalize(java.lang.String, android.net.Uri)
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r3;
        android.net.Uri r2, r5;
        java.lang.Throwable r4, $r10;
        int $i0;
        android.content.ContentProvider $r6, $r7, $r8, $r11;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        $i0 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceReadPermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i0 == 0 goto label1;

        return null;

     label1:
        $r6 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r3 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r6, r1);

     label2:
        $r7 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r5 = virtualinvoke $r7.<android.content.ContentProvider: android.net.Uri uncanonicalize(android.net.Uri)>(r2);

     label3:
        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r8, r3);

        return r5;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        $r11 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r11, r3);

        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public int update(java.lang.String, android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        android.content.ContentProvider$Transport r0;
        java.lang.String r1, r4, r6;
        android.net.Uri r2;
        android.content.ContentValues r3;
        java.lang.String[] r5;
        java.lang.Throwable r7, $r11;
        int i0, $i1;
        android.content.ContentProvider $r8, $r9, $r10, $r14;

        r0 := @this: android.content.ContentProvider$Transport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        $i1 = specialinvoke r0.<android.content.ContentProvider$Transport: int enforceWritePermission(java.lang.String,android.net.Uri)>(r1, r2);

        if $i1 == 0 goto label1;

        return 0;

     label1:
        $r8 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        r6 = staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r8, r1);

     label2:
        $r9 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        i0 = virtualinvoke $r9.<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r2, r3, r4, r5);

     label3:
        $r10 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r10, r6);

        return i0;

     label4:
        $r11 := @caughtexception;

        r7 = $r11;

        $r14 = r0.<android.content.ContentProvider$Transport: android.content.ContentProvider this$0>;

        staticinvoke <android.content.ContentProvider: java.lang.String access$000(android.content.ContentProvider,java.lang.String)>($r14, r6);

        throw r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
}
