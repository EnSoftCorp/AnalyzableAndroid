public class android.media.CamcorderProfile extends java.lang.Object
{
    public static final int QUALITY_1080P;
    public static final int QUALITY_480P;
    public static final int QUALITY_720P;
    public static final int QUALITY_CIF;
    public static final int QUALITY_HIGH;
    private static final int QUALITY_LIST_END;
    private static final int QUALITY_LIST_START;
    public static final int QUALITY_LOW;
    public static final int QUALITY_QCIF;
    public static final int QUALITY_QVGA;
    public static final int QUALITY_TIME_LAPSE_1080P;
    public static final int QUALITY_TIME_LAPSE_480P;
    public static final int QUALITY_TIME_LAPSE_720P;
    public static final int QUALITY_TIME_LAPSE_CIF;
    public static final int QUALITY_TIME_LAPSE_HIGH;
    private static final int QUALITY_TIME_LAPSE_LIST_END;
    private static final int QUALITY_TIME_LAPSE_LIST_START;
    public static final int QUALITY_TIME_LAPSE_LOW;
    public static final int QUALITY_TIME_LAPSE_QCIF;
    public static final int QUALITY_TIME_LAPSE_QVGA;
    public int audioBitRate;
    public int audioChannels;
    public int audioCodec;
    public int audioSampleRate;
    public int duration;
    public int fileFormat;
    public int quality;
    public int videoBitRate;
    public int videoCodec;
    public int videoFrameHeight;
    public int videoFrameRate;
    public int videoFrameWidth;

    static void <clinit>()
    {
        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_QVGA> = 1007;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_QCIF> = 1002;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_LOW> = 1000;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_LIST_START> = 1000;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_LIST_END> = 1007;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_HIGH> = 1001;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_CIF> = 1003;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_720P> = 1005;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_480P> = 1004;

        <android.media.CamcorderProfile: int QUALITY_TIME_LAPSE_1080P> = 1006;

        <android.media.CamcorderProfile: int QUALITY_QVGA> = 7;

        <android.media.CamcorderProfile: int QUALITY_QCIF> = 2;

        <android.media.CamcorderProfile: int QUALITY_LOW> = 0;

        <android.media.CamcorderProfile: int QUALITY_LIST_START> = 0;

        <android.media.CamcorderProfile: int QUALITY_LIST_END> = 7;

        <android.media.CamcorderProfile: int QUALITY_HIGH> = 1;

        <android.media.CamcorderProfile: int QUALITY_CIF> = 3;

        <android.media.CamcorderProfile: int QUALITY_720P> = 5;

        <android.media.CamcorderProfile: int QUALITY_480P> = 4;

        <android.media.CamcorderProfile: int QUALITY_1080P> = 6;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.CamcorderProfile: void native_init()>();

        return;
    }

    private void <init>(int, int, int, int, int, int, int, int, int, int, int, int)
    {
        android.media.CamcorderProfile r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;

        r0 := @this: android.media.CamcorderProfile;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        i9 := @parameter9: int;

        i10 := @parameter10: int;

        i11 := @parameter11: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.CamcorderProfile: int duration> = i0;

        r0.<android.media.CamcorderProfile: int quality> = i1;

        r0.<android.media.CamcorderProfile: int fileFormat> = i2;

        r0.<android.media.CamcorderProfile: int videoCodec> = i3;

        r0.<android.media.CamcorderProfile: int videoBitRate> = i4;

        r0.<android.media.CamcorderProfile: int videoFrameRate> = i5;

        r0.<android.media.CamcorderProfile: int videoFrameWidth> = i6;

        r0.<android.media.CamcorderProfile: int videoFrameHeight> = i7;

        r0.<android.media.CamcorderProfile: int audioCodec> = i8;

        r0.<android.media.CamcorderProfile: int audioBitRate> = i9;

        r0.<android.media.CamcorderProfile: int audioSampleRate> = i10;

        r0.<android.media.CamcorderProfile: int audioChannels> = i11;

        return;
    }

    public static android.media.CamcorderProfile get(int)
    {
        int i0, i1, i2, $i3;
        android.hardware.Camera$CameraInfo r0, $r1;
        android.media.CamcorderProfile $r2;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.hardware.Camera: int getNumberOfCameras()>();

        $r1 = new android.hardware.Camera$CameraInfo;

        specialinvoke $r1.<android.hardware.Camera$CameraInfo: void <init>()>();

        r0 = $r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        staticinvoke <android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)>(i2, r0);

        $i3 = r0.<android.hardware.Camera$CameraInfo: int facing>;

        if $i3 != 0 goto label2;

        $r2 = staticinvoke <android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>(i2, i0);

        return $r2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public static android.media.CamcorderProfile get(int, int)
    {
        int i0, i1;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        android.media.CamcorderProfile $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 < 0 goto label1;

        if i1 <= 7 goto label3;

     label1:
        if i1 < 1000 goto label2;

        if i1 <= 1007 goto label3;

     label2:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported quality level: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label3:
        $r5 = staticinvoke <android.media.CamcorderProfile: android.media.CamcorderProfile native_get_camcorder_profile(int,int)>(i0, i1);

        return $r5;
    }

    public static boolean hasProfile(int)
    {
        int i0, i1, i2, $i3;
        android.hardware.Camera$CameraInfo r0, $r1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.hardware.Camera: int getNumberOfCameras()>();

        $r1 = new android.hardware.Camera$CameraInfo;

        specialinvoke $r1.<android.hardware.Camera$CameraInfo: void <init>()>();

        r0 = $r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        staticinvoke <android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)>(i2, r0);

        $i3 = r0.<android.hardware.Camera$CameraInfo: int facing>;

        if $i3 != 0 goto label2;

        $z0 = staticinvoke <android.media.CamcorderProfile: boolean hasProfile(int,int)>(i2, i0);

        return $z0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean hasProfile(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <android.media.CamcorderProfile: boolean native_has_camcorder_profile(int,int)>(i0, i1);

        return $z0;
    }

    private static final native android.media.CamcorderProfile native_get_camcorder_profile(int, int);

    private static final native boolean native_has_camcorder_profile(int, int);

    private static final native void native_init();
}
