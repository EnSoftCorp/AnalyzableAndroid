public class android.media.SubtitleController extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static final int WHAT_HIDE;
    private static final int WHAT_SELECT_DEFAULT_TRACK;
    private static final int WHAT_SELECT_TRACK;
    private static final int WHAT_SHOW;
    private android.media.SubtitleController$Anchor mAnchor;
    private final android.os.Handler$Callback mCallback;
    private android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener;
    private android.view.accessibility.CaptioningManager mCaptioningManager;
    private android.os.Handler mHandler;
    private android.media.SubtitleController$Listener mListener;
    private java.util.Vector mRenderers;
    private android.media.SubtitleTrack mSelectedTrack;
    private boolean mShowing;
    private android.media.MediaTimeProvider mTimeProvider;
    private boolean mTrackIsExplicit;
    private java.util.Vector mTracks;
    private boolean mVisibilityIsExplicit;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        <android.media.SubtitleController: int WHAT_SHOW> = 1;

        <android.media.SubtitleController: int WHAT_SELECT_TRACK> = 3;

        <android.media.SubtitleController: int WHAT_SELECT_DEFAULT_TRACK> = 4;

        <android.media.SubtitleController: int WHAT_HIDE> = 2;

        $r0 = class "android/media/SubtitleController";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <android.media.SubtitleController: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;

        return;
    }

    public void <init>(android.content.Context, android.media.MediaTimeProvider, android.media.SubtitleController$Listener)
    {
        android.media.SubtitleController r0;
        android.content.Context r1;
        android.media.MediaTimeProvider r2;
        android.media.SubtitleController$Listener r3;
        android.media.SubtitleController$1 $r4;
        android.media.SubtitleController$2 $r5;
        java.util.Vector $r6, $r7;
        java.lang.Object $r8;
        android.view.accessibility.CaptioningManager $r9;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.media.MediaTimeProvider;

        r3 := @parameter2: android.media.SubtitleController$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.media.SubtitleController$1;

        specialinvoke $r4.<android.media.SubtitleController$1: void <init>(android.media.SubtitleController)>(r0);

        r0.<android.media.SubtitleController: android.os.Handler$Callback mCallback> = $r4;

        $r5 = new android.media.SubtitleController$2;

        specialinvoke $r5.<android.media.SubtitleController$2: void <init>(android.media.SubtitleController)>(r0);

        r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener> = $r5;

        r0.<android.media.SubtitleController: boolean mTrackIsExplicit> = 0;

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 0;

        r0.<android.media.SubtitleController: android.media.MediaTimeProvider mTimeProvider> = r2;

        r0.<android.media.SubtitleController: android.media.SubtitleController$Listener mListener> = r3;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        r0.<android.media.SubtitleController: java.util.Vector mRenderers> = $r6;

        r0.<android.media.SubtitleController: boolean mShowing> = 0;

        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        r0.<android.media.SubtitleController: java.util.Vector mTracks> = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("captioning");

        $r9 = (android.view.accessibility.CaptioningManager) $r8;

        r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager> = $r9;

        return;
    }

    static void access$000(android.media.SubtitleController)
    {
        android.media.SubtitleController r0;

        r0 := @parameter0: android.media.SubtitleController;

        specialinvoke r0.<android.media.SubtitleController: void doShow()>();

        return;
    }

    static void access$100(android.media.SubtitleController)
    {
        android.media.SubtitleController r0;

        r0 := @parameter0: android.media.SubtitleController;

        specialinvoke r0.<android.media.SubtitleController: void doHide()>();

        return;
    }

    static void access$200(android.media.SubtitleController, android.media.SubtitleTrack)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1;

        r0 := @parameter0: android.media.SubtitleController;

        r1 := @parameter1: android.media.SubtitleTrack;

        specialinvoke r0.<android.media.SubtitleController: void doSelectTrack(android.media.SubtitleTrack)>(r1);

        return;
    }

    static void access$300(android.media.SubtitleController)
    {
        android.media.SubtitleController r0;

        r0 := @parameter0: android.media.SubtitleController;

        specialinvoke r0.<android.media.SubtitleController: void doSelectDefaultTrack()>();

        return;
    }

    private void checkAnchorLooper()
    {
        android.media.SubtitleController r0;
        boolean $z0, $z1;
        android.os.Looper $r1, $r3;
        android.os.Handler $r2, $r5;
        java.lang.AssertionError $r4, $r6;

        r0 := @this: android.media.SubtitleController;

        $z0 = <android.media.SubtitleController: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        if $r5 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("Should have a looper already");

        throw $r6;

     label1:
        $z1 = <android.media.SubtitleController: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        if $r1 == $r3 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Must be called from the anchor\'s looper");

        throw $r4;

     label2:
        return;
    }

    private void doHide()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack $r1, $r2;

        r0 := @this: android.media.SubtitleController;

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 1;

        $r1 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r2.<android.media.SubtitleTrack: void hide()>();

     label1:
        r0.<android.media.SubtitleController: boolean mShowing> = 0;

        return;
    }

    private void doSelectDefaultTrack()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1, $r3, $r4;
        boolean $z0, $z2, $z3, $z4;
        android.view.accessibility.CaptioningManager $r2;
        android.media.MediaFormat $r5;
        int $i0;

        r0 := @this: android.media.SubtitleController;

        $z0 = r0.<android.media.SubtitleController: boolean mTrackIsExplicit>;

        if $z0 == 0 goto label5;

        $z3 = r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit>;

        if $z3 != 0 goto label3;

        $r2 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $z4 = virtualinvoke $r2.<android.view.accessibility.CaptioningManager: boolean isEnabled()>();

        if $z4 != 0 goto label1;

        $r3 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if $r3 == null goto label4;

        $r4 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        $r5 = virtualinvoke $r4.<android.media.SubtitleTrack: android.media.MediaFormat getFormat()>();

        $i0 = virtualinvoke $r5.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("is-forced-subtitle", 0);

        if $i0 == 0 goto label4;

     label1:
        virtualinvoke r0.<android.media.SubtitleController: void show()>();

     label2:
        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 0;

     label3:
        return;

     label4:
        virtualinvoke r0.<android.media.SubtitleController: void hide()>();

        goto label2;

     label5:
        r1 = virtualinvoke r0.<android.media.SubtitleController: android.media.SubtitleTrack getDefaultTrack()>();

        if r1 == null goto label3;

        virtualinvoke r0.<android.media.SubtitleController: boolean selectTrack(android.media.SubtitleTrack)>(r1);

        r0.<android.media.SubtitleController: boolean mTrackIsExplicit> = 0;

        $z2 = r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit>;

        if $z2 != 0 goto label3;

        virtualinvoke r0.<android.media.SubtitleController: void show()>();

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 0;

        return;
    }

    private void doSelectTrack(android.media.SubtitleTrack)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1, $r2, $r3, $r5, $r9, $r10, $r13, $r14;
        android.media.SubtitleController$Anchor $r4, $r11;
        android.media.SubtitleController$Listener $r6, $r7;
        android.media.MediaTimeProvider $r8;
        android.media.SubtitleTrack$RenderingWidget $r12;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.media.SubtitleTrack;

        r0.<android.media.SubtitleController: boolean mTrackIsExplicit> = 1;

        $r2 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if $r2 != r1 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if $r3 == null goto label3;

        $r13 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r13.<android.media.SubtitleTrack: void hide()>();

        $r14 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r14.<android.media.SubtitleTrack: void setTimeProvider(android.media.MediaTimeProvider)>(null);

     label3:
        r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack> = r1;

        $r4 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        if $r4 == null goto label4;

        $r11 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        $r12 = specialinvoke r0.<android.media.SubtitleController: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        interfaceinvoke $r11.<android.media.SubtitleController$Anchor: void setSubtitleWidget(android.media.SubtitleTrack$RenderingWidget)>($r12);

     label4:
        $r5 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if $r5 == null goto label5;

        $r9 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        $r8 = r0.<android.media.SubtitleController: android.media.MediaTimeProvider mTimeProvider>;

        virtualinvoke $r9.<android.media.SubtitleTrack: void setTimeProvider(android.media.MediaTimeProvider)>($r8);

        $r10 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r10.<android.media.SubtitleTrack: void show()>();

     label5:
        $r6 = r0.<android.media.SubtitleController: android.media.SubtitleController$Listener mListener>;

        if $r6 == null goto label1;

        $r7 = r0.<android.media.SubtitleController: android.media.SubtitleController$Listener mListener>;

        interfaceinvoke $r7.<android.media.SubtitleController$Listener: void onSubtitleTrackSelected(android.media.SubtitleTrack)>(r1);

        return;
    }

    private void doShow()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack $r1, $r2;

        r0 := @this: android.media.SubtitleController;

        r0.<android.media.SubtitleController: boolean mShowing> = 1;

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 1;

        $r1 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        virtualinvoke $r2.<android.media.SubtitleTrack: void show()>();

     label1:
        return;
    }

    private android.media.SubtitleTrack$RenderingWidget getRenderingWidget()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack $r1, $r2;
        android.media.SubtitleTrack$RenderingWidget $r3;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        $r3 = virtualinvoke $r2.<android.media.SubtitleTrack: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        return $r3;
    }

    private void processOnAnchor(android.os.Message)
    {
        android.media.SubtitleController r0;
        android.os.Message r1;
        boolean $z0;
        android.os.Looper $r2, $r4;
        android.os.Handler $r3, $r5, $r6, $r7;
        java.lang.AssertionError $r8;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.os.Message;

        $z0 = <android.media.SubtitleController: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r7 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        if $r7 != null goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("Should have a looper already");

        throw $r8;

     label1:
        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        if $r2 != $r4 goto label2;

        $r6 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void dispatchMessage(android.os.Message)>(r1);

        return;

     label2:
        $r5 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public android.media.SubtitleTrack addTrack(android.media.MediaFormat)
    {
        android.media.SubtitleController r0;
        android.media.MediaFormat r1;
        java.util.Vector r2, r7, $r9, $r11, $r12;
        java.lang.Throwable r3, r8, $r15, $r16;
        java.util.Iterator r4;
        android.media.SubtitleController$Renderer r5;
        android.media.SubtitleTrack r6;
        boolean $z0, $z1;
        java.lang.Object $r10;
        int $i0;
        android.view.accessibility.CaptioningManager $r13;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r14;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.media.MediaFormat;

        r2 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        entermonitor r2;

     label01:
        $r9 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        r4 = virtualinvoke $r9.<java.util.Vector: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.media.SubtitleController$Renderer) $r10;

        $z1 = virtualinvoke r5.<android.media.SubtitleController$Renderer: boolean supports(android.media.MediaFormat)>(r1);

        if $z1 == 0 goto label02;

        r6 = virtualinvoke r5.<android.media.SubtitleController$Renderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>(r1);

     label03:
        if r6 == null goto label02;

     label04:
        r7 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        entermonitor r7;

     label05:
        $r11 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        $i0 = virtualinvoke $r11.<java.util.Vector: int size()>();

        if $i0 != 0 goto label06;

        $r13 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r14 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r13.<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r14);

     label06:
        $r12 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        virtualinvoke $r12.<java.util.Vector: boolean add(java.lang.Object)>(r6);

        exitmonitor r7;

     label07:
        exitmonitor r2;

     label08:
        return r6;

     label09:
        $r16 := @caughtexception;

        r8 = $r16;

     label10:
        exitmonitor r7;

     label11:
        throw r8;

     label12:
        $r15 := @caughtexception;

        r3 = $r15;

     label13:
        exitmonitor r2;

     label14:
        throw r3;

     label15:
        exitmonitor r2;

     label16:
        return null;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.SubtitleController r0;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r1;
        android.view.accessibility.CaptioningManager $r2;

        r0 := @this: android.media.SubtitleController;

        $r2 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r1 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r2.<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r1);

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public android.media.SubtitleTrack getDefaultTrack()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1, r7;
        int i0, i4, i6, i7, $i8, $i9, $i10;
        java.util.Locale r2, r3;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9;
        java.util.Vector r4, $r12;
        java.lang.Throwable r5, $r17;
        java.util.Iterator r6;
        android.media.MediaFormat r8;
        java.lang.String r9, $r14, $r15, $r16;
        byte b1, b2, b3, b5;
        android.view.accessibility.CaptioningManager $r10, $r11;
        java.lang.Object $r13;

        r0 := @this: android.media.SubtitleController;

        r1 = null;

        i0 = -1;

        $r10 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        r2 = virtualinvoke $r10.<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>();

        r3 = r2;

        if r3 != null goto label01;

        r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label01:
        $r11 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $z5 = virtualinvoke $r11.<android.view.accessibility.CaptioningManager: boolean isEnabled()>();

        if $z5 != 0 goto label27;

        z0 = 1;

     label02:
        r4 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        entermonitor r4;

     label03:
        $r12 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        r6 = virtualinvoke $r12.<java.util.Vector: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label13;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.media.SubtitleTrack) $r13;

        r8 = virtualinvoke r7.<android.media.SubtitleTrack: android.media.MediaFormat getFormat()>();

        r9 = virtualinvoke r8.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("language");

        $i8 = virtualinvoke r8.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("is-forced-subtitle", 0);

        if $i8 == 0 goto label28;

     label05:
        z1 = 1;

     label06:
        $i9 = virtualinvoke r8.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("is-autoselect", 1);

        if $i9 == 0 goto label29;

     label07:
        z2 = 1;

     label08:
        $i10 = virtualinvoke r8.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("is-default", 0);

        if $i10 == 0 goto label30;

     label09:
        z3 = 1;

     label10:
        if r3 == null goto label18;

     label11:
        $r14 = virtualinvoke r3.<java.util.Locale: java.lang.String getLanguage()>();

        $z7 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z7 != 0 goto label18;

        $r16 = virtualinvoke r3.<java.util.Locale: java.lang.String getISO3Language()>();

        $z9 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z9 != 0 goto label18;

        $r15 = virtualinvoke r3.<java.util.Locale: java.lang.String getLanguage()>();

        $z8 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z8 == 0 goto label31;

     label12:
        goto label18;

     label13:
        exitmonitor r4;

     label14:
        return r1;

     label15:
        $r17 := @caughtexception;

        r5 = $r17;

     label16:
        exitmonitor r4;

     label17:
        throw r5;

     label18:
        z4 = 1;

     label19:
        if z1 == 0 goto label32;

        b2 = 0;

     label20:
        if r2 != null goto label33;

        if z3 == 0 goto label33;

        b1 = 4;

     label21:
        i4 = b2 + b1;

        if z2 == 0 goto label34;

        b3 = 0;

     label22:
        i6 = i4 + b3;

        if z4 == 0 goto label35;

        b5 = 1;

     label23:
        i7 = i6 + b5;

        if z0 == 0 goto label24;

        if z1 == 0 goto label04;

     label24:
        if r2 != null goto label25;

        if z3 != 0 goto label26;

     label25:
        if z4 == 0 goto label04;

        if z2 != 0 goto label26;

        if z1 != 0 goto label26;

        if r2 == null goto label04;

     label26:
        if i7 <= i0 goto label04;

        i0 = i7;

        r1 = r7;

        goto label04;

     label27:
        z0 = 0;

        goto label02;

     label28:
        z1 = 0;

        goto label06;

     label29:
        z2 = 0;

        goto label08;

     label30:
        z3 = 0;

        goto label10;

     label31:
        z4 = 0;

        goto label19;

     label32:
        b2 = 8;

        goto label20;

     label33:
        b1 = 0;

        goto label21;

     label34:
        b3 = 2;

        goto label22;

     label35:
        b5 = 0;

        goto label23;

        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public android.media.SubtitleTrack getSelectedTrack()
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack $r1;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.media.SubtitleTrack mSelectedTrack>;

        return $r1;
    }

    public android.media.SubtitleTrack[] getTracks()
    {
        android.media.SubtitleController r0;
        java.util.Vector r1, $r4, $r5;
        java.lang.Throwable r2, $r7;
        android.media.SubtitleTrack[] r3;
        int $i0;

        r0 := @this: android.media.SubtitleController;

        r1 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        r3 = newarray (android.media.SubtitleTrack)[$i0];

        $r5 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        virtualinvoke $r5.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void hide()
    {
        android.media.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        specialinvoke r0.<android.media.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }

    public void registerRenderer(android.media.SubtitleController$Renderer)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleController$Renderer r1;
        java.util.Vector r2, $r4, $r5;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.media.SubtitleController$Renderer;

        r2 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        $z0 = virtualinvoke $r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r5 = r0.<android.media.SubtitleController: java.util.Vector mRenderers>;

        virtualinvoke $r5.<java.util.Vector: boolean add(java.lang.Object)>(r1);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void reset()
    {
        android.media.SubtitleController r0;
        java.util.Vector $r1;
        android.view.accessibility.CaptioningManager$CaptioningChangeListener $r2;
        android.view.accessibility.CaptioningManager $r3;

        r0 := @this: android.media.SubtitleController;

        specialinvoke r0.<android.media.SubtitleController: void checkAnchorLooper()>();

        virtualinvoke r0.<android.media.SubtitleController: void hide()>();

        virtualinvoke r0.<android.media.SubtitleController: boolean selectTrack(android.media.SubtitleTrack)>(null);

        $r1 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        virtualinvoke $r1.<java.util.Vector: void clear()>();

        r0.<android.media.SubtitleController: boolean mTrackIsExplicit> = 0;

        r0.<android.media.SubtitleController: boolean mVisibilityIsExplicit> = 0;

        $r3 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager mCaptioningManager>;

        $r2 = r0.<android.media.SubtitleController: android.view.accessibility.CaptioningManager$CaptioningChangeListener mCaptioningChangeListener>;

        virtualinvoke $r3.<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager$CaptioningChangeListener)>($r2);

        return;
    }

    public void selectDefaultTrack()
    {
        android.media.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        specialinvoke r0.<android.media.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }

    public boolean selectTrack(android.media.SubtitleTrack)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleTrack r1;
        android.os.Handler $r2;
        android.os.Message $r3;
        java.util.Vector $r4;
        boolean $z0;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.media.SubtitleTrack;

        if r1 == null goto label1;

        $r4 = r0.<android.media.SubtitleController: java.util.Vector mTracks>;

        $z0 = virtualinvoke $r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r1);

        specialinvoke r0.<android.media.SubtitleController: void processOnAnchor(android.os.Message)>($r3);

        return 1;
    }

    public void setAnchor(android.media.SubtitleController$Anchor)
    {
        android.media.SubtitleController r0;
        android.media.SubtitleController$Anchor r1, $r2, $r3, $r4, $r6, $r9, $r11;
        android.os.Handler $r5;
        android.os.Looper $r7;
        android.os.Handler$Callback $r8;
        android.media.SubtitleTrack$RenderingWidget $r10;

        r0 := @this: android.media.SubtitleController;

        r1 := @parameter0: android.media.SubtitleController$Anchor;

        $r2 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        if $r2 != r1 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        if $r3 == null goto label3;

        specialinvoke r0.<android.media.SubtitleController: void checkAnchorLooper()>();

        $r11 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        interfaceinvoke $r11.<android.media.SubtitleController$Anchor: void setSubtitleWidget(android.media.SubtitleTrack$RenderingWidget)>(null);

     label3:
        r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor> = r1;

        r0.<android.media.SubtitleController: android.os.Handler mHandler> = null;

        $r4 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        if $r4 == null goto label1;

        $r5 = new android.os.Handler;

        $r6 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        $r7 = interfaceinvoke $r6.<android.media.SubtitleController$Anchor: android.os.Looper getSubtitleLooper()>();

        $r8 = r0.<android.media.SubtitleController: android.os.Handler$Callback mCallback>;

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r7, $r8);

        r0.<android.media.SubtitleController: android.os.Handler mHandler> = $r5;

        specialinvoke r0.<android.media.SubtitleController: void checkAnchorLooper()>();

        $r9 = r0.<android.media.SubtitleController: android.media.SubtitleController$Anchor mAnchor>;

        $r10 = specialinvoke r0.<android.media.SubtitleController: android.media.SubtitleTrack$RenderingWidget getRenderingWidget()>();

        interfaceinvoke $r9.<android.media.SubtitleController$Anchor: void setSubtitleWidget(android.media.SubtitleTrack$RenderingWidget)>($r10);

        return;
    }

    public void show()
    {
        android.media.SubtitleController r0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: android.media.SubtitleController;

        $r1 = r0.<android.media.SubtitleController: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        specialinvoke r0.<android.media.SubtitleController: void processOnAnchor(android.os.Message)>($r2);

        return;
    }
}
