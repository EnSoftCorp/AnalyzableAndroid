public class android.app.Instrumentation extends java.lang.Object
{
    public static final java.lang.String REPORT_KEY_IDENTIFIER;
    public static final java.lang.String REPORT_KEY_STREAMRESULT;
    private static final java.lang.String TAG;
    private java.util.List mActivityMonitors;
    private android.content.Context mAppContext;
    private boolean mAutomaticPerformanceSnapshots;
    private android.content.ComponentName mComponent;
    private android.content.Context mInstrContext;
    private android.os.MessageQueue mMessageQueue;
    private android.os.Bundle mPerfMetrics;
    private android.os.PerformanceCollector mPerformanceCollector;
    private java.lang.Thread mRunner;
    private final java.lang.Object mSync;
    private android.app.ActivityThread mThread;
    private android.app.UiAutomation mUiAutomation;
    private android.app.IUiAutomationConnection mUiAutomationConnection;
    private java.util.List mWaitingActivities;
    private android.app.IInstrumentationWatcher mWatcher;

    public void <init>()
    {
        android.app.Instrumentation r0;
        java.lang.Object $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Instrumentation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.app.Instrumentation: java.lang.Object mSync> = $r1;

        r0.<android.app.Instrumentation: android.app.ActivityThread mThread> = null;

        r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue> = null;

        r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots> = 0;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics> = $r2;

        return;
    }

    static boolean access$100(android.app.Instrumentation)
    {
        android.app.Instrumentation r0;
        boolean $z0;

        r0 := @parameter0: android.app.Instrumentation;

        $z0 = r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots>;

        return $z0;
    }

    static java.lang.Object access$200(android.app.Instrumentation)
    {
        android.app.Instrumentation r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        return $r1;
    }

    static java.util.List access$300(android.app.Instrumentation)
    {
        android.app.Instrumentation r0;
        java.util.List $r1;

        r0 := @parameter0: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        return $r1;
    }

    private void addValue(java.lang.String, int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;
        java.util.ArrayList r3, r4, $r5;
        boolean $z0;
        java.lang.Integer $r6, $r7;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean containsKey(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        r4 = virtualinvoke r2.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>(r1);

        if r4 == null goto label1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        return;

     label2:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r3 = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        virtualinvoke r2.<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>(r1, r3);

        return;
    }

    static void checkStartActivityResult(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r0;
        android.util.AndroidRuntimeException $r1, $r25;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r16, $r17, $r20, $r23, $r26, $r27, $r29;
        java.lang.String $r7, $r12, $r21, $r22, $r28;
        boolean $z0;
        android.content.ActivityNotFoundException $r8, $r14;
        android.content.Intent $r13, $r19;
        android.content.ComponentName $r15, $r18;
        java.lang.SecurityException $r24;
        java.lang.IllegalArgumentException $r30;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        if i0 < 0 goto label1;

        return;

     label1:
        tableswitch(i0)
        {
            case -5: goto label7;
            case -4: goto label5;
            case -3: goto label6;
            case -2: goto label3;
            case -1: goto label3;
            default: goto label2;
        };

     label2:
        $r1 = new android.util.AndroidRuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown error code ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when starting ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label3:
        $z0 = r0 instanceof android.content.Intent;

        if $z0 == 0 goto label4;

        $r13 = (android.content.Intent) r0;

        $r15 = virtualinvoke $r13.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r15 == null goto label4;

        $r14 = new android.content.ActivityNotFoundException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find explicit activity class ");

        $r19 = (android.content.Intent) r0;

        $r18 = virtualinvoke $r19.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r21 = virtualinvoke $r18.<android.content.ComponentName: java.lang.String toShortString()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; have you declared this activity in your AndroidManifest.xml?");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<android.content.ActivityNotFoundException: void <init>(java.lang.String)>($r22);

        throw $r14;

     label4:
        $r8 = new android.content.ActivityNotFoundException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Activity found to handle ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.content.ActivityNotFoundException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label5:
        $r24 = new java.lang.SecurityException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not allowed to start activity ");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.SecurityException: void <init>(java.lang.String)>($r28);

        throw $r24;

     label6:
        $r25 = new android.util.AndroidRuntimeException;

        specialinvoke $r25.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("FORWARD_RESULT_FLAG used while also requesting a result");

        throw $r25;

     label7:
        $r30 = new java.lang.IllegalArgumentException;

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PendingIntent is not an activity");

        throw $r30;
    }

    public static android.app.Application newApplication(java.lang.Class, android.content.Context) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        java.lang.Class r0;
        android.content.Context r1;
        android.app.Application r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: android.content.Context;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        r2 = (android.app.Application) $r3;

        virtualinvoke r2.<android.app.Application: void attach(android.content.Context)>(r1);

        return r2;
    }

    private final void validateNotAppThread()
    {
        android.app.Instrumentation r0;
        android.os.Looper $r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r1 != $r2 goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("This method can not be called from the main application thread");

        throw $r3;

     label1:
        return;
    }

    public android.app.Instrumentation$ActivityMonitor addMonitor(android.content.IntentFilter, android.app.Instrumentation$ActivityResult, boolean)
    {
        android.app.Instrumentation r0;
        android.content.IntentFilter r1;
        android.app.Instrumentation$ActivityResult r2;
        boolean z0;
        android.app.Instrumentation$ActivityMonitor r3, $r4;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.IntentFilter;

        r2 := @parameter1: android.app.Instrumentation$ActivityResult;

        z0 := @parameter2: boolean;

        $r4 = new android.app.Instrumentation$ActivityMonitor;

        specialinvoke $r4.<android.app.Instrumentation$ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation$ActivityResult,boolean)>(r1, r2, z0);

        r3 = $r4;

        virtualinvoke r0.<android.app.Instrumentation: void addMonitor(android.app.Instrumentation$ActivityMonitor)>(r3);

        return r3;
    }

    public android.app.Instrumentation$ActivityMonitor addMonitor(java.lang.String, android.app.Instrumentation$ActivityResult, boolean)
    {
        android.app.Instrumentation r0;
        java.lang.String r1;
        android.app.Instrumentation$ActivityResult r2;
        boolean z0;
        android.app.Instrumentation$ActivityMonitor r3, $r4;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.Instrumentation$ActivityResult;

        z0 := @parameter2: boolean;

        $r4 = new android.app.Instrumentation$ActivityMonitor;

        specialinvoke $r4.<android.app.Instrumentation$ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation$ActivityResult,boolean)>(r1, r2, z0);

        r3 = $r4;

        virtualinvoke r0.<android.app.Instrumentation: void addMonitor(android.app.Instrumentation$ActivityMonitor)>(r3);

        return r3;
    }

    public void addMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$ActivityMonitor r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        java.util.List $r4, $r5;
        java.util.ArrayList $r6;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        r2 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r4 != null goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Instrumentation: java.util.List mActivityMonitors> = $r6;

     label2:
        $r5 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void callActivityOnCreate(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        java.lang.Object r3, r5, $r13, $r16;
        java.lang.Throwable r4, r6, $r21, $r23;
        int i0, i1, i2, i3;
        android.app.Instrumentation$ActivityWaiter r7;
        java.util.List $r8, $r9, $r10, $r11, $r15, $r17;
        android.app.Instrumentation$ActivityMonitor $r12;
        android.content.Intent $r14, $r18, $r19;
        android.os.MessageQueue $r20;
        boolean $z1;
        android.app.Instrumentation$ActivityGoing $r22;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        $r8 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        if $r8 == null goto label07;

        r5 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r5;

     label01:
        $r15 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        i2 = interfaceinvoke $r15.<java.util.List: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i2 goto label06;

     label04:
        $r17 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $r16 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i3);

        r7 = (android.app.Instrumentation$ActivityWaiter) $r16;

        $r19 = r7.<android.app.Instrumentation$ActivityWaiter: android.content.Intent intent>;

        $r18 = virtualinvoke r1.<android.app.Activity: android.content.Intent getIntent()>();

        $z1 = virtualinvoke $r19.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r18);

        if $z1 == 0 goto label21;

        r7.<android.app.Instrumentation$ActivityWaiter: android.app.Activity activity> = r1;

        $r20 = r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        $r22 = new android.app.Instrumentation$ActivityGoing;

        specialinvoke $r22.<android.app.Instrumentation$ActivityGoing: void <init>(android.app.Instrumentation,android.app.Instrumentation$ActivityWaiter)>(r0, r7);

        virtualinvoke $r20.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r22);

     label05:
        goto label21;

     label06:
        exitmonitor r5;

     label07:
        virtualinvoke r1.<android.app.Activity: void performCreate(android.os.Bundle)>(r2);

        $r9 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r9 == null goto label22;

        r3 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r3;

     label08:
        $r10 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i0 = interfaceinvoke $r10.<java.util.List: int size()>();

     label09:
        i1 = 0;

     label10:
        if i1 >= i0 goto label16;

     label11:
        $r11 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i1);

        $r12 = (android.app.Instrumentation$ActivityMonitor) $r13;

        $r14 = virtualinvoke r1.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r12.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r1, r1, $r14);

     label12:
        i1 = i1 + 1;

        goto label10;

     label13:
        $r23 := @caughtexception;

        r6 = $r23;

     label14:
        exitmonitor r5;

     label15:
        throw r6;

     label16:
        exitmonitor r3;

     label17:
        return;

     label18:
        $r21 := @caughtexception;

        r4 = $r21;

     label19:
        exitmonitor r3;

     label20:
        throw r4;

     label21:
        i3 = i3 + 1;

        goto label03;

     label22:
        return;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
    }

    public void callActivityOnDestroy(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        java.lang.Object r2, $r7;
        java.lang.Throwable r3, $r10;
        int i0, i1;
        java.util.List $r4, $r5, $r6;
        android.app.Instrumentation$ActivityMonitor $r8;
        android.content.Intent $r9;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void performDestroy()>();

        $r4 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r4 == null goto label11;

        r2 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r2;

     label01:
        $r5 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r6 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (android.app.Instrumentation$ActivityMonitor) $r7;

        $r9 = virtualinvoke r1.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r8.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r1, r1, $r9);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void callActivityOnNewIntent(android.app.Activity, android.content.Intent)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.content.Intent r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.content.Intent;

        virtualinvoke r1.<android.app.Activity: void onNewIntent(android.content.Intent)>(r2);

        return;
    }

    public void callActivityOnPause(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void performPause()>();

        return;
    }

    public void callActivityOnPostCreate(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r1.<android.app.Activity: void onPostCreate(android.os.Bundle)>(r2);

        return;
    }

    public void callActivityOnRestart(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void onRestart()>();

        return;
    }

    public void callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r1.<android.app.Activity: void performRestoreInstanceState(android.os.Bundle)>(r2);

        return;
    }

    public void callActivityOnResume(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        java.lang.Object r2, $r7;
        java.lang.Throwable r3, $r10;
        int i0, i1;
        java.util.List $r4, $r5, $r6;
        android.app.Instrumentation$ActivityMonitor $r8;
        android.content.Intent $r9;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r1.<android.app.Activity: boolean mResumed> = 1;

        virtualinvoke r1.<android.app.Activity: void onResume()>();

        $r4 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r4 == null goto label11;

        r2 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r2;

     label01:
        $r5 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r6 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (android.app.Instrumentation$ActivityMonitor) $r7;

        $r9 = virtualinvoke r1.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r8.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r1, r1, $r9);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        android.os.Bundle r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        virtualinvoke r1.<android.app.Activity: void performSaveInstanceState(android.os.Bundle)>(r2);

        return;
    }

    public void callActivityOnStart(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void onStart()>();

        return;
    }

    public void callActivityOnStop(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void onStop()>();

        return;
    }

    public void callActivityOnUserLeaving(android.app.Activity)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        virtualinvoke r1.<android.app.Activity: void performUserLeaving()>();

        return;
    }

    public void callApplicationOnCreate(android.app.Application)
    {
        android.app.Instrumentation r0;
        android.app.Application r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Application;

        virtualinvoke r1.<android.app.Application: void onCreate()>();

        return;
    }

    public boolean checkMonitorHit(android.app.Instrumentation$ActivityMonitor, int)
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$ActivityMonitor r1;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        java.util.List $r4;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.app.Instrumentation: void waitForIdleSync()>();

        r2 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r2;

     label1:
        $i1 = virtualinvoke r1.<android.app.Instrumentation$ActivityMonitor: int getHits()>();

        if $i1 >= i0 goto label3;

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r4 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label4:
        return 1;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void endPerformanceSnapshot()
    {
        android.app.Instrumentation r0;
        boolean $z0;
        android.os.PerformanceCollector $r1;
        android.os.Bundle $r2;

        r0 := @this: android.app.Instrumentation;

        $z0 = virtualinvoke r0.<android.app.Instrumentation: boolean isProfiling()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<android.app.Instrumentation: android.os.PerformanceCollector mPerformanceCollector>;

        $r2 = virtualinvoke $r1.<android.os.PerformanceCollector: android.os.Bundle endSnapshot()>();

        r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics> = $r2;

     label1:
        return;
    }

    public void execStartActivities(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent[], android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.content.Context r1;
        android.os.IBinder r2, r3;
        android.app.Activity r4;
        android.content.Intent[] r5;
        android.os.Bundle r6;
        int $i0;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.app.Activity;

        r5 := @parameter4: android.content.Intent[];

        r6 := @parameter5: android.os.Bundle;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke r0.<android.app.Instrumentation: void execStartActivitiesAsUser(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle,int)>(r1, r2, r3, r4, r5, r6, $i0);

        return;
    }

    public void execStartActivitiesAsUser(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent[], android.os.Bundle, int)
    {
        android.app.Instrumentation r0;
        android.content.Context r1;
        android.os.IBinder r2, r3;
        android.app.Activity r4;
        android.content.Intent[] r5;
        android.os.Bundle r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        android.app.IApplicationThread r7;
        java.lang.String[] r9;
        java.lang.Object r10, $r24;
        java.lang.Throwable r11, $r26;
        android.app.Instrumentation$ActivityMonitor r12;
        java.util.List $r13, $r22, $r23;
        android.app.IActivityManager $r14;
        java.lang.String $r15, $r21;
        android.content.Intent $r16, $r17, $r18, $r20, $r25;
        android.content.ContentResolver $r19;
        boolean $z1, $z2;
        android.os.RemoteException $r27;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.app.Activity;

        r5 := @parameter4: android.content.Intent[];

        r6 := @parameter5: android.os.Bundle;

        i0 := @parameter6: int;

        r7 = (android.app.IApplicationThread) r2;

        $r13 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r13 == null goto label07;

        r10 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r10;

     label01:
        $r23 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i2 = interfaceinvoke $r23.<java.util.List: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i2 goto label06;

     label04:
        $r22 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r24 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i3);

        r12 = (android.app.Instrumentation$ActivityMonitor) $r24;

        $r25 = r5[0];

        $z1 = virtualinvoke r12.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r1, null, $r25);

        if $z1 == 0 goto label17;

        $i7 = r12.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i8 = 1 + $i7;

        r12.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i8;

        $z2 = virtualinvoke r12.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z2 == 0 goto label06;

        exitmonitor r10;

     label05:
        return;

     label06:
        exitmonitor r10;

     label07:
        $i4 = lengthof r5;

        r9 = newarray (java.lang.String)[$i4];

     label08:
        i1 = 0;

     label09:
        $i5 = lengthof r5;

        if i1 >= $i5 goto label14;

        $r16 = r5[i1];

        virtualinvoke $r16.<android.content.Intent: boolean migrateExtraStreamToClipData()>();

        $r18 = r5[i1];

        virtualinvoke $r18.<android.content.Intent: void prepareToLeaveProcess()>();

        $r20 = r5[i1];

        $r19 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r21 = virtualinvoke $r20.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r19);

        r9[i1] = $r21;

     label10:
        i1 = i1 + 1;

        goto label09;

     label11:
        $r26 := @caughtexception;

        r11 = $r26;

     label12:
        exitmonitor r10;

     label13:
        throw r11;

     label14:
        $r14 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r15 = virtualinvoke r1.<android.content.Context: java.lang.String getBasePackageName()>();

        $i6 = interfaceinvoke $r14.<android.app.IActivityManager: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>(r7, $r15, r5, r9, r3, r6, i0);

        $r17 = r5[0];

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i6, $r17);

     label15:
        return;

     label16:
        $r27 := @caughtexception;

        return;

     label17:
        i3 = i3 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch android.os.RemoteException from label07 to label08 with label16;
        catch android.os.RemoteException from label09 to label10 with label16;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch android.os.RemoteException from label14 to label15 with label16;
    }

    public android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.content.Context r1;
        android.os.IBinder r2, r3;
        android.app.Activity r4;
        android.content.Intent r5;
        int i0, i1, i2, $i3, $i4, $i5;
        android.os.Bundle r6;
        android.app.IApplicationThread r7;
        android.app.IActivityManager r9;
        java.lang.String r10, r11, r12;
        java.lang.Object r13, $r21;
        java.lang.Throwable r14, $r23;
        android.app.Instrumentation$ActivityMonitor r15;
        java.util.List $r16, $r19, $r20;
        android.app.Instrumentation$ActivityResult r17;
        android.content.ContentResolver $r18;
        boolean $z1, $z2;
        android.os.RemoteException $r22;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.app.Activity;

        r5 := @parameter4: android.content.Intent;

        i0 := @parameter5: int;

        r6 := @parameter6: android.os.Bundle;

        r7 = (android.app.IApplicationThread) r2;

        $r16 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r16 == null goto label10;

        r13 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r13;

     label01:
        $r19 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i1 = interfaceinvoke $r19.<java.util.List: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label09;

     label04:
        $r20 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i2);

        r15 = (android.app.Instrumentation$ActivityMonitor) $r21;

        $z1 = virtualinvoke r15.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r1, null, r5);

        if $z1 == 0 goto label21;

        $i4 = r15.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i5 = 1 + $i4;

        r15.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i5;

        $z2 = virtualinvoke r15.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z2 == 0 goto label09;

     label05:
        if i0 < 0 goto label20;

     label06:
        r17 = virtualinvoke r15.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>();

     label07:
        exitmonitor r13;

     label08:
        return r17;

     label09:
        exitmonitor r13;

     label10:
        virtualinvoke r5.<android.content.Intent: boolean migrateExtraStreamToClipData()>();

        virtualinvoke r5.<android.content.Intent: void prepareToLeaveProcess()>();

        r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r10 = virtualinvoke r1.<android.content.Context: java.lang.String getBasePackageName()>();

        $r18 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r11 = virtualinvoke r5.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r18);

     label11:
        if r4 == null goto label18;

     label12:
        r12 = r4.<android.app.Activity: java.lang.String mEmbeddedID>;

     label13:
        $i3 = interfaceinvoke r9.<android.app.IActivityManager: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>(r7, r10, r5, r11, r3, r12, i0, 0, null, null, r6);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i3, r5);

     label14:
        return null;

     label15:
        $r23 := @caughtexception;

        r14 = $r23;

     label16:
        exitmonitor r13;

     label17:
        throw r14;

     label18:
        r12 = null;

        goto label13;

     label19:
        $r22 := @caughtexception;

        goto label14;

     label20:
        r17 = null;

        goto label07;

     label21:
        i2 = i2 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch android.os.RemoteException from label10 to label11 with label19;
        catch android.os.RemoteException from label12 to label13 with label19;
        catch android.os.RemoteException from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent, int, android.os.Bundle, android.os.UserHandle)
    {
        android.app.Instrumentation r0;
        android.content.Context r1;
        android.os.IBinder r2, r3;
        android.app.Activity r4;
        android.content.Intent r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.os.Bundle r6;
        android.os.UserHandle r7;
        android.app.IApplicationThread r8;
        android.app.IActivityManager r10;
        java.lang.String r11, r12, r13;
        java.lang.Throwable r14, $r23;
        java.lang.Object r15, $r21;
        android.app.Instrumentation$ActivityResult r16;
        android.app.Instrumentation$ActivityMonitor r17;
        java.util.List $r18, $r20, $r22;
        android.content.ContentResolver $r19;
        boolean $z1, $z2;
        android.os.RemoteException $r24;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.app.Activity;

        r5 := @parameter4: android.content.Intent;

        i0 := @parameter5: int;

        r6 := @parameter6: android.os.Bundle;

        r7 := @parameter7: android.os.UserHandle;

        r8 = (android.app.IApplicationThread) r2;

        $r18 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r18 == null goto label10;

        r15 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r15;

     label01:
        $r20 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i2 = interfaceinvoke $r20.<java.util.List: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i2 goto label09;

     label04:
        $r22 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r21 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i1);

        r17 = (android.app.Instrumentation$ActivityMonitor) $r21;

        $z1 = virtualinvoke r17.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r1, null, r5);

        if $z1 == 0 goto label21;

        $i5 = r17.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i6 = 1 + $i5;

        r17.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i6;

        $z2 = virtualinvoke r17.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z2 == 0 goto label09;

     label05:
        if i0 < 0 goto label20;

     label06:
        r16 = virtualinvoke r17.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>();

     label07:
        exitmonitor r15;

     label08:
        return r16;

     label09:
        exitmonitor r15;

     label10:
        virtualinvoke r5.<android.content.Intent: boolean migrateExtraStreamToClipData()>();

        virtualinvoke r5.<android.content.Intent: void prepareToLeaveProcess()>();

        r10 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r11 = virtualinvoke r1.<android.content.Context: java.lang.String getBasePackageName()>();

        $r19 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r12 = virtualinvoke r5.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r19);

     label11:
        if r4 == null goto label18;

     label12:
        r13 = r4.<android.app.Activity: java.lang.String mEmbeddedID>;

     label13:
        $i3 = virtualinvoke r7.<android.os.UserHandle: int getIdentifier()>();

        $i4 = interfaceinvoke r10.<android.app.IActivityManager: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)>(r8, r11, r5, r12, r3, r13, i0, 0, null, null, r6, $i3);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i4, r5);

     label14:
        return null;

     label15:
        $r23 := @caughtexception;

        r14 = $r23;

     label16:
        exitmonitor r15;

     label17:
        throw r14;

     label18:
        r13 = null;

        goto label13;

     label19:
        $r24 := @caughtexception;

        goto label14;

     label20:
        r16 = null;

        goto label07;

     label21:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch android.os.RemoteException from label10 to label11 with label19;
        catch android.os.RemoteException from label12 to label13 with label19;
        catch android.os.RemoteException from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Fragment, android.content.Intent, int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.content.Context r1;
        android.os.IBinder r2, r3;
        android.app.Fragment r4;
        android.content.Intent r5;
        int i0, i1, i2, $i3, $i4, $i5;
        android.os.Bundle r6;
        android.app.IApplicationThread r7;
        android.app.IActivityManager r9;
        java.lang.String r10, r11, r12;
        java.lang.Object r13, $r21;
        java.lang.Throwable r14, $r23;
        android.app.Instrumentation$ActivityMonitor r15;
        java.util.List $r16, $r19, $r20;
        android.app.Instrumentation$ActivityResult r17;
        android.content.ContentResolver $r18;
        boolean $z1, $z2;
        android.os.RemoteException $r22;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.app.Fragment;

        r5 := @parameter4: android.content.Intent;

        i0 := @parameter5: int;

        r6 := @parameter6: android.os.Bundle;

        r7 = (android.app.IApplicationThread) r2;

        $r16 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        if $r16 == null goto label10;

        r13 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r13;

     label01:
        $r19 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        i1 = interfaceinvoke $r19.<java.util.List: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label09;

     label04:
        $r20 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i2);

        r15 = (android.app.Instrumentation$ActivityMonitor) $r21;

        $z1 = virtualinvoke r15.<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>(r1, null, r5);

        if $z1 == 0 goto label21;

        $i4 = r15.<android.app.Instrumentation$ActivityMonitor: int mHits>;

        $i5 = 1 + $i4;

        r15.<android.app.Instrumentation$ActivityMonitor: int mHits> = $i5;

        $z2 = virtualinvoke r15.<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>();

        if $z2 == 0 goto label09;

     label05:
        if i0 < 0 goto label20;

     label06:
        r17 = virtualinvoke r15.<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>();

     label07:
        exitmonitor r13;

     label08:
        return r17;

     label09:
        exitmonitor r13;

     label10:
        virtualinvoke r5.<android.content.Intent: boolean migrateExtraStreamToClipData()>();

        virtualinvoke r5.<android.content.Intent: void prepareToLeaveProcess()>();

        r9 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r10 = virtualinvoke r1.<android.content.Context: java.lang.String getBasePackageName()>();

        $r18 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r11 = virtualinvoke r5.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r18);

     label11:
        if r4 == null goto label18;

     label12:
        r12 = r4.<android.app.Fragment: java.lang.String mWho>;

     label13:
        $i3 = interfaceinvoke r9.<android.app.IActivityManager: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>(r7, r10, r5, r11, r3, r12, i0, 0, null, null, r6);

        staticinvoke <android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>($i3, r5);

     label14:
        return null;

     label15:
        $r23 := @caughtexception;

        r14 = $r23;

     label16:
        exitmonitor r13;

     label17:
        throw r14;

     label18:
        r12 = null;

        goto label13;

     label19:
        $r22 := @caughtexception;

        goto label14;

     label20:
        r17 = null;

        goto label07;

     label21:
        i2 = i2 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch android.os.RemoteException from label10 to label11 with label19;
        catch android.os.RemoteException from label12 to label13 with label19;
        catch android.os.RemoteException from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void finish(int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        int i0;
        android.os.Bundle r1, $r2, $r6;
        boolean $z0;
        android.app.UiAutomation $r3, $r5;
        android.app.ActivityThread $r4;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z0 = r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.app.Instrumentation: void endPerformanceSnapshot()>();

     label1:
        $r2 = r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics>;

        if $r2 == null goto label2;

        $r6 = r0.<android.app.Instrumentation: android.os.Bundle mPerfMetrics>;

        virtualinvoke r1.<android.os.Bundle: void putAll(android.os.Bundle)>($r6);

     label2:
        $r3 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        if $r3 == null goto label3;

        $r5 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        virtualinvoke $r5.<android.app.UiAutomation: void disconnect()>();

        r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation> = null;

     label3:
        $r4 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        virtualinvoke $r4.<android.app.ActivityThread: void finishInstrumentation(int,android.os.Bundle)>(i0, r1);

        return;
    }

    public android.os.Bundle getAllocCounts()
    {
        android.app.Instrumentation r0;
        android.os.Bundle r1, $r2;
        int $i0, $i2, $i4, $i6, $i9;
        long $l1, $l3, $l5, $l7, $l8;

        r0 := @this: android.app.Instrumentation;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $i0 = staticinvoke <android.os.Debug: int getGlobalAllocCount()>();

        $l1 = (long) $i0;

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("global_alloc_count", $l1);

        $i2 = staticinvoke <android.os.Debug: int getGlobalAllocSize()>();

        $l3 = (long) $i2;

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("global_alloc_size", $l3);

        $i4 = staticinvoke <android.os.Debug: int getGlobalFreedCount()>();

        $l5 = (long) $i4;

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("global_freed_count", $l5);

        $i6 = staticinvoke <android.os.Debug: int getGlobalFreedSize()>();

        $l7 = (long) $i6;

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("global_freed_size", $l7);

        $i9 = staticinvoke <android.os.Debug: int getGlobalGcInvocationCount()>();

        $l8 = (long) $i9;

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("gc_invocation_count", $l8);

        return r1;
    }

    public android.os.Bundle getBinderCounts()
    {
        android.app.Instrumentation r0;
        android.os.Bundle r1, $r2;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: android.app.Instrumentation;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $i0 = staticinvoke <android.os.Debug: int getBinderSentTransactions()>();

        $l1 = (long) $i0;

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("sent_transactions", $l1);

        $i2 = staticinvoke <android.os.Debug: int getBinderReceivedTransactions()>();

        $l3 = (long) $i2;

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("received_transactions", $l3);

        return r1;
    }

    public android.content.ComponentName getComponentName()
    {
        android.app.Instrumentation r0;
        android.content.ComponentName $r1;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.content.ComponentName mComponent>;

        return $r1;
    }

    public android.content.Context getContext()
    {
        android.app.Instrumentation r0;
        android.content.Context $r1;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.content.Context mInstrContext>;

        return $r1;
    }

    public android.content.Context getTargetContext()
    {
        android.app.Instrumentation r0;
        android.content.Context $r1;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.content.Context mAppContext>;

        return $r1;
    }

    public android.app.UiAutomation getUiAutomation()
    {
        android.app.Instrumentation r0;
        android.app.IUiAutomationConnection $r1, $r7;
        android.app.UiAutomation $r2, $r3, $r4, $r8;
        android.content.Context $r5;
        android.os.Looper $r6;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        if $r1 == null goto label2;

        $r2 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        if $r2 != null goto label1;

        $r4 = new android.app.UiAutomation;

        $r5 = virtualinvoke r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.os.Looper getMainLooper()>();

        $r7 = r0.<android.app.Instrumentation: android.app.IUiAutomationConnection mUiAutomationConnection>;

        specialinvoke $r4.<android.app.UiAutomation: void <init>(android.os.Looper,android.app.IUiAutomationConnection)>($r6, $r7);

        r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation> = $r4;

        $r8 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        virtualinvoke $r8.<android.app.UiAutomation: void connect()>();

     label1:
        $r3 = r0.<android.app.Instrumentation: android.app.UiAutomation mUiAutomation>;

        return $r3;

     label2:
        return null;
    }

    final void init(android.app.ActivityThread, android.content.Context, android.content.Context, android.content.ComponentName, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection)
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread r1, $r7;
        android.content.Context r2, r3;
        android.content.ComponentName r4;
        android.app.IInstrumentationWatcher r5;
        android.app.IUiAutomationConnection r6;
        android.os.MessageQueue $r9;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.ActivityThread;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.content.ComponentName;

        r5 := @parameter4: android.app.IInstrumentationWatcher;

        r6 := @parameter5: android.app.IUiAutomationConnection;

        r0.<android.app.Instrumentation: android.app.ActivityThread mThread> = r1;

        $r7 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        virtualinvoke $r7.<android.app.ActivityThread: android.os.Looper getLooper()>();

        $r9 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue> = $r9;

        r0.<android.app.Instrumentation: android.content.Context mInstrContext> = r2;

        r0.<android.app.Instrumentation: android.content.Context mAppContext> = r3;

        r0.<android.app.Instrumentation: android.content.ComponentName mComponent> = r4;

        r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher> = r5;

        r0.<android.app.Instrumentation: android.app.IUiAutomationConnection mUiAutomationConnection> = r6;

        return;
    }

    public boolean invokeContextMenuAction(android.app.Activity, int, int)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        int i0, i1, $i2;
        java.lang.InterruptedException r2, $r7;
        android.app.Instrumentation$1ContextMenuRunnable r3, $r6;
        android.view.KeyEvent $r4, $r5;
        long $l3;
        boolean $z0;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r4 = new android.view.KeyEvent;

        specialinvoke $r4.<android.view.KeyEvent: void <init>(int,int)>(0, 23);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r4);

        virtualinvoke r0.<android.app.Instrumentation: void waitForIdleSync()>();

     label1:
        $i2 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l3 = (long) $i2;

        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label2:
        $r5 = new android.view.KeyEvent;

        specialinvoke $r5.<android.view.KeyEvent: void <init>(int,int)>(1, 23);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r5);

        virtualinvoke r0.<android.app.Instrumentation: void waitForIdleSync()>();

        $r6 = new android.app.Instrumentation$1ContextMenuRunnable;

        specialinvoke $r6.<android.app.Instrumentation$1ContextMenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>(r0, r1, i0, i1);

        r3 = $r6;

        virtualinvoke r0.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>(r3);

        $z0 = r3.<android.app.Instrumentation$1ContextMenuRunnable: boolean returnValue>;

        return $z0;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Instrumentation", "Could not sleep for long press timeout", r2);

        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public boolean invokeMenuActionSync(android.app.Activity, int, int)
    {
        android.app.Instrumentation r0;
        android.app.Activity r1;
        int i0, i1;
        android.app.Instrumentation$1MenuRunnable r2, $r3;
        boolean $z0;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new android.app.Instrumentation$1MenuRunnable;

        specialinvoke $r3.<android.app.Instrumentation$1MenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>(r0, r1, i0, i1);

        r2 = $r3;

        virtualinvoke r0.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>(r2);

        $z0 = r2.<android.app.Instrumentation$1MenuRunnable: boolean returnValue>;

        return $z0;
    }

    public boolean isProfiling()
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread $r1;
        boolean $z0;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r1.<android.app.ActivityThread: boolean isProfiling()>();

        return $z0;
    }

    public android.app.Activity newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        android.app.Instrumentation r0;
        java.lang.Class r1;
        android.content.Context r2;
        android.os.IBinder r3;
        android.app.Application r4;
        android.content.Intent r5;
        android.content.pm.ActivityInfo r6;
        java.lang.CharSequence r7;
        android.app.Activity r8, r11;
        java.lang.String r9;
        java.lang.Object r10, $r12;
        android.content.res.Configuration $r13;
        android.app.Activity$NonConfigurationInstances $r14;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.os.IBinder;

        r4 := @parameter3: android.app.Application;

        r5 := @parameter4: android.content.Intent;

        r6 := @parameter5: android.content.pm.ActivityInfo;

        r7 := @parameter6: java.lang.CharSequence;

        r8 := @parameter7: android.app.Activity;

        r9 := @parameter8: java.lang.String;

        r10 := @parameter9: java.lang.Object;

        $r12 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();

        r11 = (android.app.Activity) $r12;

        $r14 = (android.app.Activity$NonConfigurationInstances) r10;

        $r13 = new android.content.res.Configuration;

        specialinvoke $r13.<android.content.res.Configuration: void <init>()>();

        virtualinvoke r11.<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity$NonConfigurationInstances,android.content.res.Configuration)>(r2, null, r0, r3, r4, r5, r6, r7, r8, r9, $r14, $r13);

        return r11;
    }

    public android.app.Activity newActivity(java.lang.ClassLoader, java.lang.String, android.content.Intent) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        android.app.Instrumentation r0;
        java.lang.ClassLoader r1;
        java.lang.String r2;
        android.content.Intent r3;
        java.lang.Class $r4;
        java.lang.Object $r5;
        android.app.Activity $r6;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        $r4 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r6 = (android.app.Activity) $r5;

        return $r6;
    }

    public android.app.Application newApplication(java.lang.ClassLoader, java.lang.String, android.content.Context) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.ClassNotFoundException
    {
        android.app.Instrumentation r0;
        java.lang.ClassLoader r1;
        java.lang.String r2;
        android.content.Context r3;
        java.lang.Class $r4;
        android.app.Application $r5;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        $r4 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r2);

        $r5 = staticinvoke <android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>($r4, r3);

        return $r5;
    }

    public void onCreate(android.os.Bundle)
    {
        android.app.Instrumentation r0;
        android.os.Bundle r1;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onDestroy()
    {
        android.app.Instrumentation r0;

        r0 := @this: android.app.Instrumentation;

        return;
    }

    public boolean onException(java.lang.Object, java.lang.Throwable)
    {
        android.app.Instrumentation r0;
        java.lang.Object r1;
        java.lang.Throwable r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        return 0;
    }

    public void onStart()
    {
        android.app.Instrumentation r0;

        r0 := @this: android.app.Instrumentation;

        return;
    }

    public void removeMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$ActivityMonitor r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        java.util.List $r4;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        r2 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void runOnMainSync(java.lang.Runnable)
    {
        android.app.Instrumentation r0;
        java.lang.Runnable r1;
        android.app.Instrumentation$SyncRunnable r2, $r3;
        android.app.ActivityThread $r4;
        android.os.Handler $r5;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r3 = new android.app.Instrumentation$SyncRunnable;

        specialinvoke $r3.<android.app.Instrumentation$SyncRunnable: void <init>(java.lang.Runnable)>(r1);

        r2 = $r3;

        $r4 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r5 = virtualinvoke $r4.<android.app.ActivityThread: android.os.Handler getHandler()>();

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>(r2);

        virtualinvoke r2.<android.app.Instrumentation$SyncRunnable: void waitForComplete()>();

        return;
    }

    public void sendCharacterSync(int)
    {
        android.app.Instrumentation r0;
        int i0;
        android.view.KeyEvent $r1, $r2;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(0, i0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(int,int)>(1, i0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r2);

        return;
    }

    public void sendKeyDownUpSync(int)
    {
        android.app.Instrumentation r0;
        int i0;
        android.view.KeyEvent $r1, $r2;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(0, i0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r1);

        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(int,int)>(1, i0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r2);

        return;
    }

    public void sendKeySync(android.view.KeyEvent)
    {
        android.app.Instrumentation r0;
        android.view.KeyEvent r1, r2, $r3;
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8, i9, $i12;
        byte $b10, $b11;
        android.hardware.input.InputManager $r4;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.view.KeyEvent;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        l0 = virtualinvoke r1.<android.view.KeyEvent: long getDownTime()>();

        l1 = virtualinvoke r1.<android.view.KeyEvent: long getEventTime()>();

        i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        i3 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        i4 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        i5 = virtualinvoke r1.<android.view.KeyEvent: int getMetaState()>();

        i6 = virtualinvoke r1.<android.view.KeyEvent: int getDeviceId()>();

        i7 = virtualinvoke r1.<android.view.KeyEvent: int getScanCode()>();

        i8 = virtualinvoke r1.<android.view.KeyEvent: int getSource()>();

        i9 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        if i8 != 0 goto label1;

        i8 = 257;

     label1:
        $b10 = l1 cmp 0L;

        if $b10 != 0 goto label2;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label2:
        $b11 = l0 cmp 0L;

        if $b11 != 0 goto label3;

        l0 = l1;

     label3:
        $r3 = new android.view.KeyEvent;

        $i12 = i9 | 8;

        specialinvoke $r3.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l0, l1, i2, i3, i4, i5, i6, i7, $i12, i8);

        r2 = $r3;

        $r4 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r4.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r2, 2);

        return;
    }

    public void sendPointerSync(android.view.MotionEvent)
    {
        android.app.Instrumentation r0;
        android.view.MotionEvent r1;
        int $i0, $i1;
        android.hardware.input.InputManager $r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i1 = 2 & $i0;

        if $i1 != 0 goto label1;

        virtualinvoke r1.<android.view.MotionEvent: void setSource(int)>(4098);

     label1:
        $r2 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r2.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r1, 2);

        return;
    }

    public void sendStatus(int, android.os.Bundle)
    {
        android.app.Instrumentation r0;
        int i0;
        android.os.Bundle r1;
        android.app.IInstrumentationWatcher $r3, $r5;
        android.content.ComponentName $r4;
        android.os.RemoteException $r6;

        r0 := @this: android.app.Instrumentation;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r3 = r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher>;

        if $r3 == null goto label2;

     label1:
        $r5 = r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher>;

        $r4 = r0.<android.app.Instrumentation: android.content.ComponentName mComponent>;

        interfaceinvoke $r5.<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>($r4, i0, r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r0.<android.app.Instrumentation: android.app.IInstrumentationWatcher mWatcher> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendStringSync(java.lang.String)
    {
        android.app.Instrumentation r0;
        java.lang.String r1;
        android.view.KeyEvent[] r2;
        int i0, $i1;
        android.view.KeyCharacterMap $r3;
        char[] $r4;
        android.view.KeyEvent $r5, $r6;
        long $l2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $r3 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        $r4 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        r2 = virtualinvoke $r3.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r4);

        if r2 == null goto label1;

        i0 = 0;

     label3:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label1;

        $r5 = r2[i0];

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r6 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>($r5, $l2, 0);

        virtualinvoke r0.<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>($r6);

        i0 = i0 + 1;

        goto label3;
    }

    public void sendTrackballEventSync(android.view.MotionEvent)
    {
        android.app.Instrumentation r0;
        android.view.MotionEvent r1;
        int $i0, $i1;
        android.hardware.input.InputManager $r2;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i1 = 4 & $i0;

        if $i1 != 0 goto label1;

        virtualinvoke r1.<android.view.MotionEvent: void setSource(int)>(65540);

     label1:
        $r2 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r2.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r1, 2);

        return;
    }

    public void setAutomaticPerformanceSnapshots()
    {
        android.app.Instrumentation r0;
        android.os.PerformanceCollector $r1;

        r0 := @this: android.app.Instrumentation;

        r0.<android.app.Instrumentation: boolean mAutomaticPerformanceSnapshots> = 1;

        $r1 = new android.os.PerformanceCollector;

        specialinvoke $r1.<android.os.PerformanceCollector: void <init>()>();

        r0.<android.app.Instrumentation: android.os.PerformanceCollector mPerformanceCollector> = $r1;

        return;
    }

    public void setInTouchMode(boolean)
    {
        android.app.Instrumentation r0;
        boolean z0;
        android.os.IBinder $r2;
        android.view.IWindowManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.Instrumentation;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r3 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r2);

        interfaceinvoke $r3.<android.view.IWindowManager: void setInTouchMode(boolean)>(z0);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void start()
    {
        android.app.Instrumentation r0;
        java.lang.Thread $r1, $r9;
        android.app.Instrumentation$InstrumentationThread $r2;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.Class $r5;
        java.lang.String $r6, $r8;
        java.lang.RuntimeException $r10;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: java.lang.Thread mRunner>;

        if $r1 == null goto label1;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Instrumentation already started");

        throw $r10;

     label1:
        $r2 = new android.app.Instrumentation$InstrumentationThread;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instr: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.app.Instrumentation$InstrumentationThread: void <init>(android.app.Instrumentation,java.lang.String)>(r0, $r8);

        r0.<android.app.Instrumentation: java.lang.Thread mRunner> = $r2;

        $r9 = r0.<android.app.Instrumentation: java.lang.Thread mRunner>;

        virtualinvoke $r9.<java.lang.Thread: void start()>();

        return;
    }

    public android.app.Activity startActivitySync(android.content.Intent)
    {
        android.app.Instrumentation r0;
        android.content.Intent r1, r3, $r10;
        java.lang.Object r2, $r23;
        java.lang.Throwable r4, $r39, $r44;
        android.content.pm.ActivityInfo r5;
        java.lang.String r6, $r14, $r16, $r19, $r34, $r38, $r40;
        android.app.Instrumentation$ActivityWaiter r7, $r21;
        android.app.Activity r9;
        android.content.Context $r11, $r24;
        android.content.pm.PackageManager $r12;
        android.app.ActivityThread $r13;
        android.content.ComponentName $r15;
        boolean $z0, $z2;
        android.content.pm.ApplicationInfo $r17;
        java.util.List $r20, $r22, $r26;
        java.util.ArrayList $r25;
        java.lang.StringBuilder $r27, $r28, $r30, $r31, $r32, $r33, $r36, $r37, $r41, $r42;
        java.lang.RuntimeException $r29, $r35;
        java.lang.InterruptedException $r43;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        r2 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r2;

     label01:
        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        r3 = $r10;

     label02:
        $r11 = virtualinvoke r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke r3.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r12, 0);

     label03:
        if r5 != null goto label08;

     label04:
        $r35 = new java.lang.RuntimeException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resolve activity for: ");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String)>($r40);

        throw $r35;

     label05:
        $r39 := @caughtexception;

        r4 = $r39;

     label06:
        exitmonitor r2;

     label07:
        throw r4;

     label08:
        $r13 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        r6 = virtualinvoke $r13.<android.app.ActivityThread: java.lang.String getProcessName()>();

        $r14 = r5.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 != 0 goto label09;

        $r29 = new java.lang.RuntimeException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Intent in process ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resolved to different process ");

        $r34 = r5.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.String)>($r38);

        throw $r29;

     label09:
        $r15 = new android.content.ComponentName;

        $r17 = r5.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r19 = $r17.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r16 = r5.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r15.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r19, $r16);

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r15);

        $r21 = new android.app.Instrumentation$ActivityWaiter;

        specialinvoke $r21.<android.app.Instrumentation$ActivityWaiter: void <init>(android.content.Intent)>(r3);

        r7 = $r21;

        $r20 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        if $r20 != null goto label10;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r0.<android.app.Instrumentation: java.util.List mWaitingActivities> = $r25;

     label10:
        $r22 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>(r7);

        $r24 = virtualinvoke r0.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        virtualinvoke $r24.<android.content.Context: void startActivity(android.content.Intent)>(r3);

     label11:
        $r23 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        virtualinvoke $r23.<java.lang.Object: void wait()>();

     label12:
        $r26 = r0.<android.app.Instrumentation: java.util.List mWaitingActivities>;

        $z2 = interfaceinvoke $r26.<java.util.List: boolean contains(java.lang.Object)>(r7);

        if $z2 != 0 goto label11;

        r9 = r7.<android.app.Instrumentation$ActivityWaiter: android.app.Activity activity>;

        exitmonitor r2;

     label13:
        return r9;

     label14:
        $r44 := @caughtexception;

        r4 = $r44;

        goto label06;

     label15:
        $r43 := @caughtexception;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.InterruptedException from label11 to label12 with label15;
        catch java.lang.Throwable from label11 to label12 with label05;
        catch java.lang.Throwable from label12 to label13 with label05;
    }

    public void startAllocCounting()
    {
        android.app.Instrumentation r0;
        java.lang.Runtime $r1, $r2, $r3;

        r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r2.<java.lang.Runtime: void runFinalization()>();

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

        staticinvoke <android.os.Debug: void resetAllCounts()>();

        staticinvoke <android.os.Debug: void startAllocCounting()>();

        return;
    }

    public void startPerformanceSnapshot()
    {
        android.app.Instrumentation r0;
        boolean $z0;
        android.os.PerformanceCollector $r1;

        r0 := @this: android.app.Instrumentation;

        $z0 = virtualinvoke r0.<android.app.Instrumentation: boolean isProfiling()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<android.app.Instrumentation: android.os.PerformanceCollector mPerformanceCollector>;

        virtualinvoke $r1.<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)>(null);

     label1:
        return;
    }

    public void startProfiling()
    {
        android.app.Instrumentation r0;
        java.io.File r1, $r3, $r6;
        android.app.ActivityThread $r2, $r4;
        boolean $z0;
        java.lang.String $r5, $r7;

        r0 := @this: android.app.Instrumentation;

        $r2 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r2.<android.app.ActivityThread: boolean isProfiling()>();

        if $z0 == 0 goto label1;

        $r3 = new java.io.File;

        $r4 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r5 = virtualinvoke $r4.<android.app.ActivityThread: java.lang.String getProfileFilePath()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5);

        r1 = $r3;

        $r6 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

        $r7 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.Debug: void startMethodTracing(java.lang.String,int)>($r7, 8388608);

     label1:
        return;
    }

    public void stopAllocCounting()
    {
        android.app.Instrumentation r0;
        java.lang.Runtime $r1, $r2, $r3;

        r0 := @this: android.app.Instrumentation;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r2.<java.lang.Runtime: void runFinalization()>();

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        return;
    }

    public void stopProfiling()
    {
        android.app.Instrumentation r0;
        android.app.ActivityThread $r1;
        boolean $z0;

        r0 := @this: android.app.Instrumentation;

        $r1 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $z0 = virtualinvoke $r1.<android.app.ActivityThread: boolean isProfiling()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.os.Debug: void stopMethodTracing()>();

     label1:
        return;
    }

    public void waitForIdle(java.lang.Runnable)
    {
        android.app.Instrumentation r0;
        java.lang.Runnable r1;
        android.app.Instrumentation$Idler $r2;
        android.os.MessageQueue $r3;
        android.app.ActivityThread $r4;
        android.os.Handler $r5;
        android.app.Instrumentation$EmptyRunnable $r6;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: java.lang.Runnable;

        $r3 = r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        $r2 = new android.app.Instrumentation$Idler;

        specialinvoke $r2.<android.app.Instrumentation$Idler: void <init>(java.lang.Runnable)>(r1);

        virtualinvoke $r3.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>($r2);

        $r4 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r5 = virtualinvoke $r4.<android.app.ActivityThread: android.os.Handler getHandler()>();

        $r6 = new android.app.Instrumentation$EmptyRunnable;

        specialinvoke $r6.<android.app.Instrumentation$EmptyRunnable: void <init>(android.app.Instrumentation$1)>(null);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    public void waitForIdleSync()
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$Idler r1, $r2;
        android.os.MessageQueue $r3;
        android.app.ActivityThread $r4;
        android.os.Handler $r5;
        android.app.Instrumentation$EmptyRunnable $r6;

        r0 := @this: android.app.Instrumentation;

        specialinvoke r0.<android.app.Instrumentation: void validateNotAppThread()>();

        $r2 = new android.app.Instrumentation$Idler;

        specialinvoke $r2.<android.app.Instrumentation$Idler: void <init>(java.lang.Runnable)>(null);

        r1 = $r2;

        $r3 = r0.<android.app.Instrumentation: android.os.MessageQueue mMessageQueue>;

        virtualinvoke $r3.<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>(r1);

        $r4 = r0.<android.app.Instrumentation: android.app.ActivityThread mThread>;

        $r5 = virtualinvoke $r4.<android.app.ActivityThread: android.os.Handler getHandler()>();

        $r6 = new android.app.Instrumentation$EmptyRunnable;

        specialinvoke $r6.<android.app.Instrumentation$EmptyRunnable: void <init>(android.app.Instrumentation$1)>(null);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        virtualinvoke r1.<android.app.Instrumentation$Idler: void waitForIdle()>();

        return;
    }

    public android.app.Activity waitForMonitor(android.app.Instrumentation$ActivityMonitor)
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$ActivityMonitor r1;
        android.app.Activity r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r6;
        java.util.List $r5;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        r2 = virtualinvoke r1.<android.app.Instrumentation$ActivityMonitor: android.app.Activity waitForActivity()>();

        r3 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r3;

     label1:
        $r5 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r1);

        exitmonitor r3;

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation$ActivityMonitor, long)
    {
        android.app.Instrumentation r0;
        android.app.Instrumentation$ActivityMonitor r1;
        long l0;
        android.app.Activity r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r6;
        java.util.List $r5;

        r0 := @this: android.app.Instrumentation;

        r1 := @parameter0: android.app.Instrumentation$ActivityMonitor;

        l0 := @parameter1: long;

        r2 = virtualinvoke r1.<android.app.Instrumentation$ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>(l0);

        r3 = r0.<android.app.Instrumentation: java.lang.Object mSync>;

        entermonitor r3;

     label1:
        $r5 = r0.<android.app.Instrumentation: java.util.List mActivityMonitors>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r1);

        exitmonitor r3;

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.app.Instrumentation: java.lang.String TAG> = "Instrumentation";

        <android.app.Instrumentation: java.lang.String REPORT_KEY_STREAMRESULT> = "stream";

        <android.app.Instrumentation: java.lang.String REPORT_KEY_IDENTIFIER> = "id";

        return;
    }
}
