public class android.text.DynamicLayout extends android.text.Layout
{
    private static final int BLOCK_MINIMUM_CHARACTER_LENGTH;
    private static final int COLUMNS_ELLIPSIZE;
    private static final int COLUMNS_NORMAL;
    private static final int DESCENT;
    private static final int DIR;
    private static final int DIR_SHIFT;
    private static final int ELLIPSIS_COUNT;
    private static final int ELLIPSIS_START;
    private static final int ELLIPSIS_UNDEFINED;
    public static final int INVALID_BLOCK_INDEX;
    private static final int PRIORITY;
    private static final int START;
    private static final int START_MASK;
    private static final int TAB;
    private static final int TAB_MASK;
    private static final int TOP;
    private static final java.lang.Object[] sLock;
    private static android.text.StaticLayout sStaticLayout;
    private java.lang.CharSequence mBase;
    private int[] mBlockEndLines;
    private int[] mBlockIndices;
    private int mBottomPadding;
    private java.lang.CharSequence mDisplay;
    private boolean mEllipsize;
    private android.text.TextUtils$TruncateAt mEllipsizeAt;
    private int mEllipsizedWidth;
    private boolean mIncludePad;
    private int mIndexFirstChangedBlock;
    private android.text.PackedIntVector mInts;
    private int mNumberOfBlocks;
    private android.text.PackedObjectVector mObjects;
    private int mTopPadding;
    private android.text.DynamicLayout$ChangeWatcher mWatcher;

    static void <clinit>()
    {
        android.text.StaticLayout $r0;
        java.lang.Object[] $r1;

        <android.text.DynamicLayout: int TOP> = 1;

        <android.text.DynamicLayout: int TAB_MASK> = 536870912;

        <android.text.DynamicLayout: int TAB> = 0;

        <android.text.DynamicLayout: int START_MASK> = 536870911;

        <android.text.DynamicLayout: int START> = 0;

        <android.text.DynamicLayout: int PRIORITY> = 128;

        <android.text.DynamicLayout: int INVALID_BLOCK_INDEX> = -1;

        <android.text.DynamicLayout: int ELLIPSIS_UNDEFINED> = -2147483648;

        <android.text.DynamicLayout: int ELLIPSIS_START> = 3;

        <android.text.DynamicLayout: int ELLIPSIS_COUNT> = 4;

        <android.text.DynamicLayout: int DIR_SHIFT> = 30;

        <android.text.DynamicLayout: int DIR> = 0;

        <android.text.DynamicLayout: int DESCENT> = 2;

        <android.text.DynamicLayout: int COLUMNS_NORMAL> = 3;

        <android.text.DynamicLayout: int COLUMNS_ELLIPSIZE> = 5;

        <android.text.DynamicLayout: int BLOCK_MINIMUM_CHARACTER_LENGTH> = 400;

        $r0 = new android.text.StaticLayout;

        specialinvoke $r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence)>(null);

        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = $r0;

        $r1 = newarray (java.lang.Object)[0];

        <android.text.DynamicLayout: java.lang.Object[] sLock> = $r1;

        return;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        z0 := @parameter6: boolean;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r1, r1, r2, i0, r3, f0, f1, z0);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2;
        android.text.TextPaint r3;
        int i0;
        android.text.Layout$Alignment r4;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r4 := @parameter4: android.text.Layout$Alignment;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, r2, r3, i0, r4, f0, f1, z0, null, 0);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2;
        android.text.TextPaint r3;
        int i0, i1;
        android.text.Layout$Alignment r4;
        float f0, f1;
        boolean z0;
        android.text.TextUtils$TruncateAt r5;
        android.text.TextDirectionHeuristic $r6;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r4 := @parameter4: android.text.Layout$Alignment;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        r5 := @parameter8: android.text.TextUtils$TruncateAt;

        i1 := @parameter9: int;

        $r6 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        specialinvoke r0.<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, r2, r3, i0, r4, $r6, f0, f1, z0, r5, i1);

        return;
    }

    public void <init>(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2, r7, $r24;
        android.text.TextPaint r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        android.text.Layout$Alignment r4;
        android.text.TextDirectionHeuristic r5;
        float f0, f1;
        boolean z0, $z1, $z2;
        android.text.TextUtils$TruncateAt r6;
        int[] r8;
        android.text.Layout$Directions[] r9;
        android.graphics.Paint$FontMetricsInt r10;
        android.text.DynamicLayout$ChangeWatcher[] r11;
        android.text.Spannable r12;
        android.text.Layout$Ellipsizer r13, $r14;
        android.text.PackedObjectVector $r15, $r19;
        android.text.PackedIntVector $r16, $r18, $r20, $r25;
        android.text.Layout$Directions $r17;
        java.lang.Object[] $r21;
        android.text.DynamicLayout$ChangeWatcher $r22, $r23, $r26, $r27;
        android.text.Layout$SpannedEllipsizer $r28;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r4 := @parameter4: android.text.Layout$Alignment;

        r5 := @parameter5: android.text.TextDirectionHeuristic;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        r6 := @parameter9: android.text.TextUtils$TruncateAt;

        i1 := @parameter10: int;

        if r6 != null goto label07;

        r7 = r2;

     label01:
        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>(r7, r3, i0, r4, r5, f0, f1);

        r0.<android.text.DynamicLayout: java.lang.CharSequence mBase> = r1;

        r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay> = r2;

        if r6 == null goto label09;

        $r25 = new android.text.PackedIntVector;

        specialinvoke $r25.<android.text.PackedIntVector: void <init>(int)>(5);

        r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts> = $r25;

        r0.<android.text.DynamicLayout: int mEllipsizedWidth> = i1;

        r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt> = r6;

     label02:
        $r15 = new android.text.PackedObjectVector;

        specialinvoke $r15.<android.text.PackedObjectVector: void <init>(int)>(1);

        r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects> = $r15;

        r0.<android.text.DynamicLayout: boolean mIncludePad> = z0;

        if r6 == null goto label03;

        $r24 = virtualinvoke r0.<android.text.DynamicLayout: java.lang.CharSequence getText()>();

        r13 = (android.text.Layout$Ellipsizer) $r24;

        r13.<android.text.Layout$Ellipsizer: android.text.Layout mLayout> = r0;

        r13.<android.text.Layout$Ellipsizer: int mWidth> = i1;

        r13.<android.text.Layout$Ellipsizer: android.text.TextUtils$TruncateAt mMethod> = r6;

        r0.<android.text.DynamicLayout: boolean mEllipsize> = 1;

     label03:
        if r6 == null goto label10;

        r8 = newarray (int)[5];

        r8[3] = -2147483648;

     label04:
        r9 = newarray (android.text.Layout$Directions)[1];

        $r17 = <android.text.DynamicLayout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        r9[0] = $r17;

        r10 = virtualinvoke r3.<android.text.TextPaint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>();

        i3 = r10.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i2 = r10.<android.graphics.Paint$FontMetricsInt: int descent>;

        r8[0] = 1073741824;

        r8[1] = 0;

        r8[2] = i2;

        $r18 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        virtualinvoke $r18.<android.text.PackedIntVector: void insertAt(int,int[])>(0, r8);

        $i5 = i2 - i3;

        r8[1] = $i5;

        $r20 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        virtualinvoke $r20.<android.text.PackedIntVector: void insertAt(int,int[])>(1, r8);

        $r19 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        virtualinvoke $r19.<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>(0, r9);

        $i6 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.DynamicLayout: void reflow(java.lang.CharSequence,int,int,int)>(r1, 0, 0, $i6);

        $z2 = r1 instanceof android.text.Spannable;

        if $z2 == 0 goto label12;

        $r22 = r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher>;

        if $r22 != null goto label05;

        $r27 = new android.text.DynamicLayout$ChangeWatcher;

        specialinvoke $r27.<android.text.DynamicLayout$ChangeWatcher: void <init>(android.text.DynamicLayout)>(r0);

        r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher> = $r27;

     label05:
        r12 = (android.text.Spannable) r1;

        $i7 = interfaceinvoke r12.<android.text.Spannable: int length()>();

        $r21 = interfaceinvoke r12.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i7, class "android/text/DynamicLayout$ChangeWatcher");

        r11 = (android.text.DynamicLayout$ChangeWatcher[]) $r21;

        i4 = 0;

     label06:
        $i9 = lengthof r11;

        if i4 >= $i9 goto label11;

        $r26 = r11[i4];

        interfaceinvoke r12.<android.text.Spannable: void removeSpan(java.lang.Object)>($r26);

        i4 = i4 + 1;

        goto label06;

     label07:
        $z1 = r2 instanceof android.text.Spanned;

        if $z1 == 0 goto label08;

        $r28 = new android.text.Layout$SpannedEllipsizer;

        specialinvoke $r28.<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>(r2);

        r7 = $r28;

        goto label01;

     label08:
        $r14 = new android.text.Layout$Ellipsizer;

        specialinvoke $r14.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>(r2);

        r7 = $r14;

        goto label01;

     label09:
        $r16 = new android.text.PackedIntVector;

        specialinvoke $r16.<android.text.PackedIntVector: void <init>(int)>(3);

        r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts> = $r16;

        r0.<android.text.DynamicLayout: int mEllipsizedWidth> = i0;

        r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt> = null;

        goto label02;

     label10:
        r8 = newarray (int)[3];

        goto label04;

     label11:
        $r23 = r0.<android.text.DynamicLayout: android.text.DynamicLayout$ChangeWatcher mWatcher>;

        $i8 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        interfaceinvoke r12.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r23, 0, $i8, 8388626);

     label12:
        return;
    }

    static void access$000(android.text.DynamicLayout, java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @parameter0: android.text.DynamicLayout;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.text.DynamicLayout: void reflow(java.lang.CharSequence,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    private void addBlockAtOffset(int)
    {
        android.text.DynamicLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        int[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>(i0);

        $r2 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        if $r2 != null goto label2;

        $i14 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>(1);

        $r7 = newarray (int)[$i14];

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = $r7;

        $r8 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i15 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $r8[$i15] = i1;

        $i17 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i16 = 1 + $i17;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = $i16;

     label1:
        return;

     label2:
        $r3 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i2 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i3 = -1 + $i2;

        $i4 = $r3[$i3];

        if i1 <= $i4 goto label1;

        $i6 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $r4 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i5 = lengthof $r4;

        if $i6 != $i5 goto label3;

        $i9 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i12 = 1 + $i9;

        $i11 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i12);

        r1 = newarray (int)[$i11];

        $r6 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i13 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r1, 0, $i13);

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = r1;

     label3:
        $r5 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i7 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $r5[$i7] = i1;

        $i8 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i10 = 1 + $i8;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = $i10;

        return;
    }

    private void createBlocks()
    {
        android.text.DynamicLayout r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.CharSequence r1;
        int[] $r2, $r3, $r4, $r5;

        r0 := @this: android.text.DynamicLayout;

        i0 = 400;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = 0;

        r1 = r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay>;

     label1:
        i1 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>(r1, 10, i0);

        if i1 >= 0 goto label3;

        $i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.DynamicLayout: void addBlockAtOffset(int)>($i3);

        $r2 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i4 = lengthof $r2;

        $r3 = newarray (int)[$i4];

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = $r3;

        i2 = 0;

     label2:
        $r4 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i5 = lengthof $r4;

        if i2 >= $i5 goto label4;

        $r5 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r5[i2] = -1;

        i2 = i2 + 1;

        goto label2;

     label3:
        specialinvoke r0.<android.text.DynamicLayout: void addBlockAtOffset(int)>(i1);

        i0 = i1 + 400;

        goto label1;

     label4:
        return;
    }

    private void reflow(java.lang.CharSequence, int, int, int)
    {
        android.text.DynamicLayout r0;
        java.lang.CharSequence r1, r2, $r15;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, $i38, i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7;
        java.lang.Throwable r3, r12, $r26, $r27;
        java.lang.Object[] r4, r11, r14;
        android.text.StaticLayout r5, $r24;
        android.text.TextPaint r6;
        float f0, f1, f2;
        android.text.TextDirectionHeuristic r7;
        android.text.TextUtils$TruncateAt r8;
        android.text.Layout$Directions[] r9;
        int[] r10;
        android.text.Spanned r13;
        android.text.PackedIntVector $r16, $r17, $r18, $r20;
        android.text.PackedObjectVector $r19, $r22;
        android.text.Layout$Directions $r21;
        java.lang.Object $r23, $r25;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r15 = r0.<android.text.DynamicLayout: java.lang.CharSequence mBase>;

        if r1 == $r15 goto label01;

        return;

     label01:
        r2 = r0.<android.text.DynamicLayout: java.lang.CharSequence mDisplay>;

        i3 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        $i38 = i0 - 1;

        i4 = staticinvoke <android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>(r2, 10, $i38);

        if i4 >= 0 goto label08;

        i5 = 0;

     label02:
        i6 = i0 - i5;

        i7 = i1 + i6;

        i8 = i2 + i6;

        i9 = i0 - i6;

        $i41 = i9 + i8;

        i10 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>(r2, 10, $i41);

        if i10 >= 0 goto label09;

        i11 = i3;

     label03:
        $i42 = i9 + i8;

        i12 = i11 - $i42;

        i14 = i7 + i12;

        i13 = i8 + i12;

        $z4 = r2 instanceof android.text.Spanned;

        if $z4 == 0 goto label11;

        r13 = (android.text.Spanned) r2;

     label04:
        z3 = 0;

        i33 = i9 + i13;

        r14 = interfaceinvoke r13.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i9, i33, class "android/text/style/WrapTogetherSpan");

        i32 = 0;

     label05:
        i37 = lengthof r14;

        if i32 >= i37 goto label10;

        $r23 = r14[i32];

        i36 = interfaceinvoke r13.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r23);

        $r25 = r14[i32];

        i35 = interfaceinvoke r13.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r25);

        if i36 >= i9 goto label06;

        z3 = 1;

        i39 = i9 - i36;

        i14 = i14 + i39;

        i13 = i13 + i39;

        i9 = i9 - i39;

     label06:
        $i65 = i9 + i13;

        if i35 <= $i65 goto label07;

        z3 = 1;

        $i64 = i9 + i13;

        i34 = i35 - $i64;

        i14 = i14 + i34;

        i13 = i13 + i34;

     label07:
        i32 = i32 + 1;

        goto label05;

     label08:
        i5 = i4 + 1;

        goto label02;

     label09:
        i11 = i10 + 1;

        goto label03;

     label10:
        if z3 != 0 goto label04;

     label11:
        i16 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>(i9);

        i15 = virtualinvoke r0.<android.text.DynamicLayout: int getLineTop(int)>(i16);

        $i40 = i9 + i14;

        i18 = virtualinvoke r0.<android.text.DynamicLayout: int getLineForOffset(int)>($i40);

        $i43 = i9 + i13;

        if $i43 != i3 goto label12;

        i18 = virtualinvoke r0.<android.text.DynamicLayout: int getLineCount()>();

     label12:
        i17 = virtualinvoke r0.<android.text.DynamicLayout: int getLineTop(int)>(i18);

        i19 = virtualinvoke r0.<android.text.DynamicLayout: int getLineCount()>();

        if i18 != i19 goto label26;

        z0 = 1;

     label13:
        r4 = <android.text.DynamicLayout: java.lang.Object[] sLock>;

        entermonitor r4;

     label14:
        r5 = <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout>;

        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = null;

        exitmonitor r4;

     label15:
        if r5 != null goto label30;

        $r24 = new android.text.StaticLayout;

        specialinvoke $r24.<android.text.StaticLayout: void <init>(java.lang.CharSequence)>(null);

        r5 = $r24;

     label16:
        i20 = i9 + i13;

        r6 = virtualinvoke r0.<android.text.DynamicLayout: android.text.TextPaint getPaint()>();

        i21 = virtualinvoke r0.<android.text.DynamicLayout: int getWidth()>();

        r7 = virtualinvoke r0.<android.text.DynamicLayout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>();

        f0 = virtualinvoke r0.<android.text.DynamicLayout: float getSpacingMultiplier()>();

        f1 = virtualinvoke r0.<android.text.DynamicLayout: float getSpacingAdd()>();

        $i46 = r0.<android.text.DynamicLayout: int mEllipsizedWidth>;

        f2 = (float) $i46;

        r8 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        virtualinvoke r5.<android.text.StaticLayout: void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt)>(r2, i9, i20, r6, i21, r7, f0, f1, 0, 1, f2, r8);

        i22 = virtualinvoke r5.<android.text.StaticLayout: int getLineCount()>();

        $i44 = i9 + i13;

        if $i44 == i3 goto label17;

        $i63 = i22 - 1;

        $i62 = virtualinvoke r5.<android.text.StaticLayout: int getLineStart(int)>($i63);

        $i61 = i9 + i13;

        if $i62 != $i61 goto label17;

        i22 = i22 + -1;

     label17:
        $r16 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i45 = i18 - i16;

        virtualinvoke $r16.<android.text.PackedIntVector: void deleteAt(int,int)>(i16, $i45);

        $r19 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $i49 = i18 - i16;

        virtualinvoke $r19.<android.text.PackedObjectVector: void deleteAt(int,int)>(i16, $i49);

        i24 = virtualinvoke r5.<android.text.StaticLayout: int getLineTop(int)>(i22);

        z2 = r0.<android.text.DynamicLayout: boolean mIncludePad>;

        i23 = 0;

        if z2 == 0 goto label18;

        i23 = 0;

        if i16 != 0 goto label18;

        i23 = virtualinvoke r5.<android.text.StaticLayout: int getTopPadding()>();

        r0.<android.text.DynamicLayout: int mTopPadding> = i23;

        i24 = i24 - i23;

     label18:
        z1 = r0.<android.text.DynamicLayout: boolean mIncludePad>;

        i26 = 0;

        if z1 == 0 goto label19;

        i26 = 0;

        if z0 == 0 goto label19;

        i26 = virtualinvoke r5.<android.text.StaticLayout: int getBottomPadding()>();

        r0.<android.text.DynamicLayout: int mBottomPadding> = i26;

        i24 = i24 + i26;

     label19:
        $r17 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i50 = i13 - i14;

        virtualinvoke $r17.<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>(i16, 0, $i50);

        $r18 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i47 = i15 - i17;

        $i48 = i24 + $i47;

        virtualinvoke $r18.<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>(i16, 1, $i48);

        $z6 = r0.<android.text.DynamicLayout: boolean mEllipsize>;

        if $z6 == 0 goto label31;

        r10 = newarray (int)[5];

        r10[3] = -2147483648;

     label20:
        r9 = newarray (android.text.Layout$Directions)[1];

        i25 = 0;

     label21:
        if i25 >= i22 goto label33;

        $i52 = virtualinvoke r5.<android.text.StaticLayout: int getLineStart(int)>(i25);

        $i53 = virtualinvoke r5.<android.text.StaticLayout: int getParagraphDirection(int)>(i25);

        $i51 = $i53 << 30;

        i27 = $i52 | $i51;

        $z5 = virtualinvoke r5.<android.text.StaticLayout: boolean getLineContainsTab(int)>(i25);

        if $z5 == 0 goto label32;

        i28 = 536870912;

     label22:
        $i56 = i28 | i27;

        r10[0] = $i56;

        $i57 = virtualinvoke r5.<android.text.StaticLayout: int getLineTop(int)>(i25);

        i31 = i15 + $i57;

        if i25 <= 0 goto label23;

        i31 = i31 - i23;

     label23:
        r10[1] = i31;

        i30 = virtualinvoke r5.<android.text.StaticLayout: int getLineDescent(int)>(i25);

        i29 = i22 - 1;

        if i25 != i29 goto label24;

        i30 = i30 + i26;

     label24:
        r10[2] = i30;

        $r21 = virtualinvoke r5.<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)>(i25);

        r9[0] = $r21;

        $z7 = r0.<android.text.DynamicLayout: boolean mEllipsize>;

        if $z7 == 0 goto label25;

        $i59 = virtualinvoke r5.<android.text.StaticLayout: int getEllipsisStart(int)>(i25);

        r10[3] = $i59;

        $i58 = virtualinvoke r5.<android.text.StaticLayout: int getEllipsisCount(int)>(i25);

        r10[4] = $i58;

     label25:
        $r20 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i55 = i16 + i25;

        virtualinvoke $r20.<android.text.PackedIntVector: void insertAt(int,int[])>($i55, r10);

        $r22 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $i60 = i16 + i25;

        virtualinvoke $r22.<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>($i60, r9);

        i25 = i25 + 1;

        goto label21;

     label26:
        z0 = 0;

        goto label13;

     label27:
        $r26 := @caughtexception;

        r3 = $r26;

     label28:
        exitmonitor r4;

     label29:
        throw r3;

     label30:
        virtualinvoke r5.<android.text.StaticLayout: void prepare()>();

        goto label16;

     label31:
        r10 = newarray (int)[3];

        goto label20;

     label32:
        i28 = 0;

        goto label22;

     label33:
        $i54 = i18 - 1;

        virtualinvoke r0.<android.text.DynamicLayout: void updateBlocks(int,int,int)>(i16, $i54, i22);

        r11 = <android.text.DynamicLayout: java.lang.Object[] sLock>;

        entermonitor r11;

     label34:
        <android.text.DynamicLayout: android.text.StaticLayout sStaticLayout> = r5;

        virtualinvoke r5.<android.text.StaticLayout: void finish()>();

        exitmonitor r11;

     label35:
        return;

     label36:
        $r27 := @caughtexception;

        r12 = $r27;

     label37:
        exitmonitor r11;

     label38:
        throw r12;

        catch java.lang.Throwable from label14 to label15 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label37 to label38 with label36;
    }

    public int[] getBlockEndLines()
    {
        android.text.DynamicLayout r0;
        int[] $r1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        return $r1;
    }

    public int[] getBlockIndices()
    {
        android.text.DynamicLayout r0;
        int[] $r1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        return $r1;
    }

    public int getBottomPadding()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mBottomPadding>;

        return $i0;
    }

    public int getEllipsisCount(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.TextUtils$TruncateAt $r1;
        android.text.PackedIntVector $r2;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r2.<android.text.PackedIntVector: int getValue(int,int)>(i0, 4);

        return $i1;
    }

    public int getEllipsisStart(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.TextUtils$TruncateAt $r1;
        android.text.PackedIntVector $r2;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.TextUtils$TruncateAt mEllipsizeAt>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r2.<android.text.PackedIntVector: int getValue(int,int)>(i0, 3);

        return $i1;
    }

    public int getEllipsizedWidth()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mEllipsizedWidth>;

        return $i0;
    }

    public int getIndexFirstChangedBlock()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock>;

        return $i0;
    }

    public boolean getLineContainsTab(int)
    {
        android.text.DynamicLayout r0;
        int i0, i1, $i2;
        boolean z0;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i2 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        i1 = 536870912 & $i2;

        z0 = 0;

        if i1 == 0 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public int getLineCount()
    {
        android.text.DynamicLayout r0;
        android.text.PackedIntVector $r1;
        int $i0, $i1;

        r0 := @this: android.text.DynamicLayout;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i0 = virtualinvoke $r1.<android.text.PackedIntVector: int size()>();

        $i1 = -1 + $i0;

        return $i1;
    }

    public int getLineDescent(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 2);

        return $i1;
    }

    public final android.text.Layout$Directions getLineDirections(int)
    {
        android.text.DynamicLayout r0;
        int i0;
        android.text.PackedObjectVector $r1;
        java.lang.Object $r2;
        android.text.Layout$Directions $r3;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedObjectVector mObjects>;

        $r2 = virtualinvoke $r1.<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>(i0, 0);

        $r3 = (android.text.Layout$Directions) $r2;

        return $r3;
    }

    public int getLineStart(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        $i2 = 536870911 & $i1;

        return $i2;
    }

    public int getLineTop(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 1);

        return $i1;
    }

    public int getNumberOfBlocks()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        return $i0;
    }

    public int getParagraphDirection(int)
    {
        android.text.DynamicLayout r0;
        int i0, $i1, $i2;
        android.text.PackedIntVector $r1;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.DynamicLayout: android.text.PackedIntVector mInts>;

        $i1 = virtualinvoke $r1.<android.text.PackedIntVector: int getValue(int,int)>(i0, 0);

        $i2 = $i1 >> 30;

        return $i2;
    }

    public int getTopPadding()
    {
        android.text.DynamicLayout r0;
        int $i0;

        r0 := @this: android.text.DynamicLayout;

        $i0 = r0.<android.text.DynamicLayout: int mTopPadding>;

        return $i0;
    }

    void setBlocksDataForTest(int[], int[], int)
    {
        android.text.DynamicLayout r0;
        int[] r1, r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.text.DynamicLayout;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        $i1 = lengthof r1;

        $r3 = newarray (int)[$i1];

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = $r3;

        $i2 = lengthof r2;

        $r4 = newarray (int)[$i2];

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = $r4;

        $r5 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r5, 0, $i3);

        $r6 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r6, 0, $i4);

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = i0;

        return;
    }

    public void setIndexFirstChangedBlock(int)
    {
        android.text.DynamicLayout r0;
        int i0;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock> = i0;

        return;
    }

    void updateBlocks(int, int, int)
    {
        android.text.DynamicLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58;
        boolean z0, z1, z2;
        int[] r1, r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: android.text.DynamicLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r4 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        if $r4 != null goto label02;

        specialinvoke r0.<android.text.DynamicLayout: void createBlocks()>();

     label01:
        return;

     label02:
        i3 = -1;

        i4 = -1;

        i5 = 0;

     label03:
        $i17 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i5 >= $i17 goto label04;

        $r26 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i58 = $r26[i5];

        if $i58 < i0 goto label14;

        i3 = i5;

     label04:
        i6 = i3;

     label05:
        $i18 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i6 >= $i18 goto label06;

        $r24 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i54 = $r24[i6];

        if $i54 < i1 goto label15;

        i4 = i6;

     label06:
        $r5 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        i7 = $r5[i4];

        if i3 != 0 goto label16;

        i8 = 0;

     label07:
        if i0 <= i8 goto label17;

        z0 = 1;

     label08:
        if i2 <= 0 goto label18;

        z1 = 1;

     label09:
        $r7 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i23 = $r7[i4];

        if i1 >= $i23 goto label19;

        z2 = 1;

     label10:
        i9 = 0;

        if z0 == 0 goto label11;

        i9 = 1;

     label11:
        if z1 == 0 goto label12;

        i9 = i9 + 1;

     label12:
        if z2 == 0 goto label13;

        i9 = i9 + 1;

     label13:
        $i24 = i4 - i3;

        i10 = 1 + $i24;

        $i21 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i22 = i9 + $i21;

        i11 = $i22 - i10;

        if i11 != 0 goto label20;

        $r23 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $r23[0] = 0;

        $r22 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r22[0] = -1;

        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = 1;

        return;

     label14:
        i5 = i5 + 1;

        goto label03;

     label15:
        i6 = i6 + 1;

        goto label05;

     label16:
        $r6 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i19 = i3 - 1;

        $i20 = $r6[$i19];

        i8 = 1 + $i20;

        goto label07;

     label17:
        z0 = 0;

        goto label08;

     label18:
        z1 = 0;

        goto label09;

     label19:
        z2 = 0;

        goto label10;

     label20:
        $r8 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i27 = lengthof $r8;

        if i11 <= $i27 goto label23;

        i16 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>(i11);

        r3 = newarray (int)[i16];

        r2 = newarray (int)[i16];

        $r17 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, r3, 0, i3);

        $r18 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, r2, 0, i3);

        $r21 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i47 = i4 + 1;

        $i53 = i3 + i9;

        $i50 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i51 = $i50 - i4;

        $i52 = -1 + $i51;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, $i47, r3, $i53, $i52);

        $r25 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i57 = i4 + 1;

        $i55 = i3 + i9;

        $i48 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i49 = $i48 - i4;

        $i56 = -1 + $i49;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r25, $i57, r2, $i55, $i56);

        r0.<android.text.DynamicLayout: int[] mBlockEndLines> = r3;

        r0.<android.text.DynamicLayout: int[] mBlockIndices> = r2;

     label21:
        r0.<android.text.DynamicLayout: int mNumberOfBlocks> = i11;

        $i39 = i1 - i0;

        $i38 = 1 + $i39;

        i13 = i2 - $i38;

        if i13 == 0 goto label24;

        i12 = i3 + i9;

        i14 = i12;

     label22:
        $i45 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        if i14 >= $i45 goto label25;

        r1 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i46 = r1[i14];

        $i44 = i13 + $i46;

        r1[i14] = $i44;

        i14 = i14 + 1;

        goto label22;

     label23:
        $r10 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i28 = i4 + 1;

        $r9 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i30 = i3 + i9;

        $i25 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i26 = $i25 - i4;

        $i29 = -1 + $i26;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, $i28, $r9, $i30, $i29);

        $r11 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i34 = i4 + 1;

        $r12 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $i35 = i3 + i9;

        $i33 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

        $i31 = $i33 - i4;

        $i32 = -1 + $i31;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, $i34, $r12, $i35, $i32);

        goto label21;

     label24:
        i12 = r0.<android.text.DynamicLayout: int mNumberOfBlocks>;

     label25:
        $i37 = r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock>;

        $i36 = staticinvoke <java.lang.Math: int min(int,int)>($i37, i12);

        r0.<android.text.DynamicLayout: int mIndexFirstChangedBlock> = $i36;

        i15 = i3;

        if z0 == 0 goto label26;

        $r19 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i42 = i0 - 1;

        $r19[i15] = $i42;

        $r20 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r20[i15] = -1;

        i15 = i15 + 1;

     label26:
        if z1 == 0 goto label27;

        $r16 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i40 = i0 + i2;

        $i43 = -1 + $i40;

        $r16[i15] = $i43;

        $r15 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r15[i15] = -1;

        i15 = i15 + 1;

     label27:
        if z2 == 0 goto label01;

        $r14 = r0.<android.text.DynamicLayout: int[] mBlockEndLines>;

        $i41 = i7 + i13;

        $r14[i15] = $i41;

        $r13 = r0.<android.text.DynamicLayout: int[] mBlockIndices>;

        $r13[i15] = -1;

        return;
    }
}
