public class android.widget.TableLayout extends android.widget.LinearLayout
{
    private android.util.SparseBooleanArray mCollapsedColumns;
    private boolean mInitialized;
    private int[] mMaxWidths;
    private android.widget.TableLayout$PassThroughHierarchyChangeListener mPassThroughListener;
    private boolean mShrinkAllColumns;
    private android.util.SparseBooleanArray mShrinkableColumns;
    private boolean mStretchAllColumns;
    private android.util.SparseBooleanArray mStretchableColumns;

    public void <init>(android.content.Context)
    {
        android.widget.TableLayout r0;
        android.content.Context r1;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>(r1);

        specialinvoke r0.<android.widget.TableLayout: void initTableLayout()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TableLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        java.lang.String r4, r5, r6;
        int[] $r7;
        android.util.SparseBooleanArray $r8, $r9, $r10;
        char $c0, $c1;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r7 = <com.android.internal.R$styleable: int[] TableLayout>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r7);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        if r4 == null goto label1;

        $c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if $c1 != 42 goto label4;

        r0.<android.widget.TableLayout: boolean mStretchAllColumns> = 1;

     label1:
        r5 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        if r5 == null goto label2;

        $c0 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);

        if $c0 != 42 goto label5;

        r0.<android.widget.TableLayout: boolean mShrinkAllColumns> = 1;

     label2:
        r6 = virtualinvoke r3.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        if r6 == null goto label3;

        $r8 = staticinvoke <android.widget.TableLayout: android.util.SparseBooleanArray parseColumns(java.lang.String)>(r6);

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns> = $r8;

     label3:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<android.widget.TableLayout: void initTableLayout()>();

        return;

     label4:
        $r10 = staticinvoke <android.widget.TableLayout: android.util.SparseBooleanArray parseColumns(java.lang.String)>(r4);

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns> = $r10;

        goto label1;

     label5:
        $r9 = staticinvoke <android.widget.TableLayout: android.util.SparseBooleanArray parseColumns(java.lang.String)>(r5);

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns> = $r9;

        goto label2;
    }

    static void access$200(android.widget.TableLayout, android.view.View)
    {
        android.widget.TableLayout r0;
        android.view.View r1;

        r0 := @parameter0: android.widget.TableLayout;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<android.widget.TableLayout: void trackCollapsedColumns(android.view.View)>(r1);

        return;
    }

    private void findLargestCells(int)
    {
        android.widget.TableLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0, $z1;
        android.view.View r1;
        android.widget.TableRow r2;
        int[] r3, r4, r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        z0 = 1;

        i1 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label9;

        r1 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i2);

        $i8 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i8 != 8 goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $z1 = r1 instanceof android.widget.TableRow;

        if $z1 == 0 goto label2;

        r2 = (android.widget.TableRow) r1;

        $r6 = virtualinvoke r2.<android.widget.TableRow: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6.<android.view.ViewGroup$LayoutParams: int height> = -2;

        r3 = virtualinvoke r2.<android.widget.TableRow: int[] getColumnsWidths(int)>(i0);

        i3 = lengthof r3;

        if z0 == 0 goto label6;

        $r13 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        if $r13 == null goto label4;

        $r12 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        $i15 = lengthof $r12;

        if $i15 == i3 goto label5;

     label4:
        $r14 = newarray (int)[i3];

        r0.<android.widget.TableLayout: int[] mMaxWidths> = $r14;

     label5:
        $r11 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r11, 0, i3);

        z0 = 0;

        goto label2;

     label6:
        $r7 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        i4 = lengthof $r7;

        i5 = i3 - i4;

        if i5 <= 0 goto label7;

        r5 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        $r8 = newarray (int)[i3];

        r0.<android.widget.TableLayout: int[] mMaxWidths> = $r8;

        $r9 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        $i12 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r9, 0, $i12);

        $i14 = lengthof r5;

        $r10 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        $i13 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, $i14, $r10, $i13, i5);

     label7:
        r4 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i3);

        i7 = 0;

     label8:
        if i7 >= i6 goto label2;

        $i11 = r4[i7];

        $i9 = r3[i7];

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i9);

        r4[i7] = $i10;

        i7 = i7 + 1;

        goto label8;

     label9:
        return;
    }

    private void initTableLayout()
    {
        android.widget.TableLayout r0;
        android.util.SparseBooleanArray $r1, $r2, $r3, $r6, $r7, $r8;
        android.widget.TableLayout$PassThroughHierarchyChangeListener $r4, $r5;

        r0 := @this: android.widget.TableLayout;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns>;

        if $r1 != null goto label1;

        $r8 = new android.util.SparseBooleanArray;

        specialinvoke $r8.<android.util.SparseBooleanArray: void <init>()>();

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns> = $r8;

     label1:
        $r2 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        if $r2 != null goto label2;

        $r7 = new android.util.SparseBooleanArray;

        specialinvoke $r7.<android.util.SparseBooleanArray: void <init>()>();

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns> = $r7;

     label2:
        $r3 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        if $r3 != null goto label3;

        $r6 = new android.util.SparseBooleanArray;

        specialinvoke $r6.<android.util.SparseBooleanArray: void <init>()>();

        r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns> = $r6;

     label3:
        virtualinvoke r0.<android.widget.TableLayout: void setOrientation(int)>(1);

        $r4 = new android.widget.TableLayout$PassThroughHierarchyChangeListener;

        specialinvoke $r4.<android.widget.TableLayout$PassThroughHierarchyChangeListener: void <init>(android.widget.TableLayout,android.widget.TableLayout$1)>(r0, null);

        r0.<android.widget.TableLayout: android.widget.TableLayout$PassThroughHierarchyChangeListener mPassThroughListener> = $r4;

        $r5 = r0.<android.widget.TableLayout: android.widget.TableLayout$PassThroughHierarchyChangeListener mPassThroughListener>;

        specialinvoke r0.<android.widget.LinearLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>($r5);

        r0.<android.widget.TableLayout: boolean mInitialized> = 1;

        return;
    }

    private void mutateColumnsWidth(android.util.SparseBooleanArray, boolean, int, int)
    {
        android.widget.TableLayout r0;
        android.util.SparseBooleanArray r1;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        int[] r2;
        android.view.View r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.util.SparseBooleanArray;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = 0;

        r2 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        i3 = lengthof r2;

        if z0 == 0 goto label04;

        i4 = i3;

     label01:
        $i14 = i0 - i1;

        i5 = $i14 / i4;

        i6 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i7 = 0;

     label02:
        if i7 >= i6 goto label05;

        r3 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i7);

        $z3 = r3 instanceof android.widget.TableRow;

        if $z3 == 0 goto label03;

        virtualinvoke r3.<android.view.View: void forceLayout()>();

     label03:
        i7 = i7 + 1;

        goto label02;

     label04:
        i4 = virtualinvoke r1.<android.util.SparseBooleanArray: int size()>();

        goto label01;

     label05:
        if z0 != 0 goto label09;

        i9 = 0;

     label06:
        if i9 >= i4 goto label11;

        i12 = virtualinvoke r1.<android.util.SparseBooleanArray: int keyAt(int)>(i9);

        $z2 = virtualinvoke r1.<android.util.SparseBooleanArray: boolean valueAt(int)>(i9);

        if $z2 == 0 goto label07;

        if i12 >= i3 goto label08;

        $i23 = r2[i12];

        $i22 = i5 + $i23;

        r2[i12] = $i22;

     label07:
        i9 = i9 + 1;

        goto label06;

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        i8 = 0;

     label10:
        if i8 >= i4 goto label15;

        $i16 = r2[i8];

        $i15 = i5 + $i16;

        r2[i8] = $i15;

        i8 = i8 + 1;

        goto label10;

     label11:
        if i2 <= 0 goto label15;

        if i2 >= i4 goto label15;

        $i17 = i2 * i5;

        $i18 = i4 - i2;

        i10 = $i17 / $i18;

        i11 = 0;

     label12:
        if i11 >= i4 goto label15;

        i13 = virtualinvoke r1.<android.util.SparseBooleanArray: int keyAt(int)>(i11);

        $z1 = virtualinvoke r1.<android.util.SparseBooleanArray: boolean valueAt(int)>(i11);

        if $z1 == 0 goto label13;

        if i13 >= i3 goto label13;

        $i20 = r2[i13];

        if i10 <= $i20 goto label14;

        r2[i13] = 0;

     label13:
        i11 = i11 + 1;

        goto label12;

     label14:
        $i19 = r2[i13];

        $i21 = i10 + $i19;

        r2[i13] = $i21;

        goto label13;

     label15:
        return;
    }

    private static android.util.SparseBooleanArray parseColumns(java.lang.String)
    {
        java.lang.String r0, r3;
        android.util.SparseBooleanArray r1, $r5;
        java.lang.String[] r2;
        int i0, i1, i2;
        java.util.regex.Pattern $r6;
        java.lang.NumberFormatException $r7;

        r0 := @parameter0: java.lang.String;

        $r5 = new android.util.SparseBooleanArray;

        specialinvoke $r5.<android.util.SparseBooleanArray: void <init>()>();

        r1 = $r5;

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*,\\s*");

        r2 = virtualinvoke $r6.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r0);

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r3 = r2[i1];

     label2:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label3:
        if i2 < 0 goto label5;

     label4:
        virtualinvoke r1.<android.util.SparseBooleanArray: void put(int,boolean)>(i2, 1);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return r1;

     label7:
        $r7 := @caughtexception;

        goto label5;

        catch java.lang.NumberFormatException from label2 to label3 with label7;
        catch java.lang.NumberFormatException from label4 to label5 with label7;
    }

    private void requestRowsLayout()
    {
        android.widget.TableLayout r0;
        int i0, i1;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: android.widget.TableLayout;

        $z0 = r0.<android.widget.TableLayout: boolean mInitialized>;

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r1.<android.view.View: void requestLayout()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void shrinkAndStretchColumns(int)
    {
        android.widget.TableLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] r1, $r2;
        boolean $z0, $z1, $z2, $z3;
        android.util.SparseBooleanArray $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        $r2 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        i1 = 0;

        r1 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        i2 = lengthof r1;

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $i11 = r1[i3];

        i1 = i1 + $i11;

        i3 = i3 + 1;

        goto label3;

     label4:
        $i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i6 = r0.<android.widget.TableLayout: int mPaddingLeft>;

        $i8 = $i5 - $i6;

        $i7 = r0.<android.widget.TableLayout: int mPaddingRight>;

        i4 = $i8 - $i7;

        if i1 <= i4 goto label6;

        $z2 = r0.<android.widget.TableLayout: boolean mShrinkAllColumns>;

        if $z2 != 0 goto label5;

        $r6 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        $i10 = virtualinvoke $r6.<android.util.SparseBooleanArray: int size()>();

        if $i10 <= 0 goto label6;

     label5:
        $r5 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        $z3 = r0.<android.widget.TableLayout: boolean mShrinkAllColumns>;

        specialinvoke r0.<android.widget.TableLayout: void mutateColumnsWidth(android.util.SparseBooleanArray,boolean,int,int)>($r5, $z3, i4, i1);

        return;

     label6:
        if i1 >= i4 goto label1;

        $z0 = r0.<android.widget.TableLayout: boolean mStretchAllColumns>;

        if $z0 != 0 goto label7;

        $r4 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        $i9 = virtualinvoke $r4.<android.util.SparseBooleanArray: int size()>();

        if $i9 <= 0 goto label1;

     label7:
        $r3 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        $z1 = r0.<android.widget.TableLayout: boolean mStretchAllColumns>;

        specialinvoke r0.<android.widget.TableLayout: void mutateColumnsWidth(android.util.SparseBooleanArray,boolean,int,int)>($r3, $z1, i4, i1);

        return;
    }

    private void trackCollapsedColumns(android.view.View)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        android.widget.TableRow r2;
        android.util.SparseBooleanArray r3;
        int i0, i1, i2;
        boolean z0, $z1;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        $z1 = r1 instanceof android.widget.TableRow;

        if $z1 == 0 goto label3;

        r2 = (android.widget.TableRow) r1;

        r3 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns>;

        i0 = virtualinvoke r3.<android.util.SparseBooleanArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        i2 = virtualinvoke r3.<android.util.SparseBooleanArray: int keyAt(int)>(i1);

        z0 = virtualinvoke r3.<android.util.SparseBooleanArray: boolean valueAt(int)>(i1);

        if z0 == 0 goto label2;

        virtualinvoke r2.<android.widget.TableRow: void setColumnCollapsed(int,boolean)>(i2, z0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void addView(android.view.View)
    {
        android.widget.TableLayout r0;
        android.view.View r1;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View)>(r1);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void addView(android.view.View, int)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int)>(r1, i0);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.TableLayout$LayoutParams;

        return $z0;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.TableLayout r0;
        android.widget.LinearLayout$LayoutParams $r1;

        r0 := @this: android.widget.TableLayout;

        $r1 = virtualinvoke r0.<android.widget.TableLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.TableLayout r0;
        android.widget.TableLayout$LayoutParams $r1;

        r0 := @this: android.widget.TableLayout;

        $r1 = new android.widget.TableLayout$LayoutParams;

        specialinvoke $r1.<android.widget.TableLayout$LayoutParams: void <init>()>();

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableLayout r0;
        android.util.AttributeSet r1;
        android.widget.TableLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.TableLayout: android.widget.TableLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.LinearLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.widget.TableLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public volatile android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableLayout r0;
        android.util.AttributeSet r1;
        android.widget.TableLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.TableLayout: android.widget.TableLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    protected android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.TableLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.TableLayout$LayoutParams $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.TableLayout$LayoutParams;

        specialinvoke $r2.<android.widget.TableLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.widget.TableLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.TableLayout r0;
        android.util.AttributeSet r1;
        android.widget.TableLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.TableLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.TableLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.TableLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    public boolean isColumnCollapsed(int)
    {
        android.widget.TableLayout r0;
        int i0;
        android.util.SparseBooleanArray $r1;
        boolean $z0;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns>;

        $z0 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        return $z0;
    }

    public boolean isColumnShrinkable(int)
    {
        android.widget.TableLayout r0;
        int i0;
        boolean $z0, $z1;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.TableLayout: boolean mShrinkAllColumns>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        $z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isColumnStretchable(int)
    {
        android.widget.TableLayout r0;
        int i0;
        boolean $z0, $z1;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.TableLayout: boolean mStretchAllColumns>;

        if $z0 != 0 goto label1;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        $z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isShrinkAllColumns()
    {
        android.widget.TableLayout r0;
        boolean $z0;

        r0 := @this: android.widget.TableLayout;

        $z0 = r0.<android.widget.TableLayout: boolean mShrinkAllColumns>;

        return $z0;
    }

    public boolean isStretchAllColumns()
    {
        android.widget.TableLayout r0;
        boolean $z0;

        r0 := @this: android.widget.TableLayout;

        $z0 = r0.<android.widget.TableLayout: boolean mStretchAllColumns>;

        return $z0;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.widget.TableLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4;
        boolean $z0;
        int[] $r2;
        android.widget.TableRow $r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $z0 = r1 instanceof android.widget.TableRow;

        if $z0 == 0 goto label1;

        $r3 = (android.widget.TableRow) r1;

        $r2 = r0.<android.widget.TableLayout: int[] mMaxWidths>;

        virtualinvoke $r3.<android.widget.TableRow: void setColumnsWidthConstraints(int[])>($r2);

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>(r1, i0, i1, i2, i3, i4);

        return;
    }

    void measureVertical(int, int)
    {
        android.widget.TableLayout r0;
        int i0, i1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.TableLayout: void findLargestCells(int)>(i0);

        specialinvoke r0.<android.widget.TableLayout: void shrinkAndStretchColumns(int)>(i0);

        specialinvoke r0.<android.widget.LinearLayout: void measureVertical(int,int)>(i0, i1);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TableLayout r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/TableLayout";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TableLayout r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/TableLayout";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.TableLayout r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: android.widget.TableLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.widget.TableLayout: void layoutVertical(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.TableLayout r0;
        int i0, i1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.TableLayout: void measureVertical(int,int)>(i0, i1);

        return;
    }

    public void requestLayout()
    {
        android.widget.TableLayout r0;
        int i0, i1;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: android.widget.TableLayout;

        $z0 = r0.<android.widget.TableLayout: boolean mInitialized>;

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r1.<android.view.View: void forceLayout()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.widget.LinearLayout: void requestLayout()>();

        return;
    }

    public void setColumnCollapsed(int, boolean)
    {
        android.widget.TableLayout r0;
        int i0, i1, i2;
        boolean z0, $z1;
        android.view.View r1;
        android.util.SparseBooleanArray $r2;
        android.widget.TableRow $r3;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mCollapsedColumns>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        i1 = virtualinvoke r0.<android.widget.TableLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r1 = virtualinvoke r0.<android.widget.TableLayout: android.view.View getChildAt(int)>(i2);

        $z1 = r1 instanceof android.widget.TableRow;

        if $z1 == 0 goto label2;

        $r3 = (android.widget.TableRow) r1;

        virtualinvoke $r3.<android.widget.TableRow: void setColumnCollapsed(int,boolean)>(i0, z0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void setColumnShrinkable(int, boolean)
    {
        android.widget.TableLayout r0;
        int i0;
        boolean z0;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mShrinkableColumns>;

        virtualinvoke $r1.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void setColumnStretchable(int, boolean)
    {
        android.widget.TableLayout r0;
        int i0;
        boolean z0;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.TableLayout;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.widget.TableLayout: android.util.SparseBooleanArray mStretchableColumns>;

        virtualinvoke $r1.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        specialinvoke r0.<android.widget.TableLayout: void requestRowsLayout()>();

        return;
    }

    public void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
    {
        android.widget.TableLayout r0;
        android.view.ViewGroup$OnHierarchyChangeListener r1;
        android.widget.TableLayout$PassThroughHierarchyChangeListener $r2;

        r0 := @this: android.widget.TableLayout;

        r1 := @parameter0: android.view.ViewGroup$OnHierarchyChangeListener;

        $r2 = r0.<android.widget.TableLayout: android.widget.TableLayout$PassThroughHierarchyChangeListener mPassThroughListener>;

        staticinvoke <android.widget.TableLayout$PassThroughHierarchyChangeListener: android.view.ViewGroup$OnHierarchyChangeListener access$102(android.widget.TableLayout$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener)>($r2, r1);

        return;
    }

    public void setShrinkAllColumns(boolean)
    {
        android.widget.TableLayout r0;
        boolean z0;

        r0 := @this: android.widget.TableLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.TableLayout: boolean mShrinkAllColumns> = z0;

        return;
    }

    public void setStretchAllColumns(boolean)
    {
        android.widget.TableLayout r0;
        boolean z0;

        r0 := @this: android.widget.TableLayout;

        z0 := @parameter0: boolean;

        r0.<android.widget.TableLayout: boolean mStretchAllColumns> = z0;

        return;
    }
}
