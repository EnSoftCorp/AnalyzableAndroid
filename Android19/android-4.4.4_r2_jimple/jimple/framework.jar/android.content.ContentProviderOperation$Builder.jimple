public class android.content.ContentProviderOperation$Builder extends java.lang.Object
{
    private java.lang.Integer mExpectedCount;
    private java.lang.String mSelection;
    private java.lang.String[] mSelectionArgs;
    private java.util.Map mSelectionArgsBackReferences;
    private final int mType;
    private final android.net.Uri mUri;
    private android.content.ContentValues mValues;
    private android.content.ContentValues mValuesBackReferences;
    private boolean mYieldAllowed;

    private void <init>(int, android.net.Uri)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0;
        android.net.Uri r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("uri must not be null");

        throw $r2;

     label1:
        r0.<android.content.ContentProviderOperation$Builder: int mType> = i0;

        r0.<android.content.ContentProviderOperation$Builder: android.net.Uri mUri> = r1;

        return;
    }

    void <init>(int, android.net.Uri, android.content.ContentProviderOperation$1)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0;
        android.net.Uri r1;
        android.content.ContentProviderOperation$1 r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: android.content.ContentProviderOperation$1;

        specialinvoke r0.<android.content.ContentProviderOperation$Builder: void <init>(int,android.net.Uri)>(i0, r1);

        return;
    }

    static int access$000(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        int $i0;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        return $i0;
    }

    static android.net.Uri access$100(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.net.Uri $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.net.Uri mUri>;

        return $r1;
    }

    static android.content.ContentValues access$200(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.content.ContentValues $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        return $r1;
    }

    static java.lang.String access$300(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.lang.String mSelection>;

        return $r1;
    }

    static java.lang.String[] access$400(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String[] $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.lang.String[] mSelectionArgs>;

        return $r1;
    }

    static java.lang.Integer access$500(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.Integer $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.lang.Integer mExpectedCount>;

        return $r1;
    }

    static java.util.Map access$600(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.util.Map $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.util.Map mSelectionArgsBackReferences>;

        return $r1;
    }

    static android.content.ContentValues access$700(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.content.ContentValues $r1;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $r1 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences>;

        return $r1;
    }

    static boolean access$800(android.content.ContentProviderOperation$Builder)
    {
        android.content.ContentProviderOperation$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentProviderOperation$Builder;

        $z0 = r0.<android.content.ContentProviderOperation$Builder: boolean mYieldAllowed>;

        return $z0;
    }

    public android.content.ContentProviderOperation build()
    {
        android.content.ContentProviderOperation$Builder r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.content.ContentProviderOperation $r1;
        android.content.ContentValues $r2, $r3, $r6, $r7, $r8, $r9, $r11, $r12;
        java.lang.Integer $r4;
        java.lang.IllegalArgumentException $r5, $r10;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        $i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i0 != 2 goto label3;

        $r8 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        if $r8 == null goto label1;

        $r12 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $i5 = virtualinvoke $r12.<android.content.ContentValues: int size()>();

        if $i5 != 0 goto label3;

     label1:
        $r9 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences>;

        if $r9 == null goto label2;

        $r11 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences>;

        $i4 = virtualinvoke $r11.<android.content.ContentValues: int size()>();

        if $i4 != 0 goto label3;

     label2:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty values");

        throw $r10;

     label3:
        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i1 != 4 goto label6;

        $r2 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        if $r2 == null goto label4;

        $r7 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $i3 = virtualinvoke $r7.<android.content.ContentValues: int size()>();

        if $i3 != 0 goto label6;

     label4:
        $r3 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences>;

        if $r3 == null goto label5;

        $r6 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences>;

        $i2 = virtualinvoke $r6.<android.content.ContentValues: int size()>();

        if $i2 != 0 goto label6;

     label5:
        $r4 = r0.<android.content.ContentProviderOperation$Builder: java.lang.Integer mExpectedCount>;

        if $r4 != null goto label6;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty values");

        throw $r5;

     label6:
        $r1 = new android.content.ContentProviderOperation;

        specialinvoke $r1.<android.content.ContentProviderOperation: void <init>(android.content.ContentProviderOperation$Builder,android.content.ContentProviderOperation$1)>(r0, null);

        return $r1;
    }

    public android.content.ContentProviderOperation$Builder withExpectedCount(int)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0, $i1, $i2, $i3;
        java.lang.Integer $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i1 == 2 goto label1;

        $i2 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i2 == 3 goto label1;

        $i3 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i3 == 4 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only updates, deletes, and asserts can have expected counts");

        throw $r2;

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<android.content.ContentProviderOperation$Builder: java.lang.Integer mExpectedCount> = $r1;

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withSelection(java.lang.String, java.lang.String[])
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1;
        java.lang.String[] r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        $i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i0 == 2 goto label1;

        $i3 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i3 == 3 goto label1;

        $i4 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i4 == 4 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only updates, deletes, and asserts can have selections");

        throw $r5;

     label1:
        r0.<android.content.ContentProviderOperation$Builder: java.lang.String mSelection> = r1;

        if r2 != null goto label2;

        r0.<android.content.ContentProviderOperation$Builder: java.lang.String[] mSelectionArgs> = null;

        return r0;

     label2:
        $i1 = lengthof r2;

        $r3 = newarray (java.lang.String)[$i1];

        r0.<android.content.ContentProviderOperation$Builder: java.lang.String[] mSelectionArgs> = $r3;

        $r4 = r0.<android.content.ContentProviderOperation$Builder: java.lang.String[] mSelectionArgs>;

        $i2 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r4, 0, $i2);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withSelectionBackReference(int, int)
    {
        android.content.ContentProviderOperation$Builder r0;
        int i0, i1, $i2, $i3, $i4;
        java.util.Map $r1, $r2;
        java.lang.Integer $r3, $r4;
        java.util.HashMap $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i2 == 2 goto label1;

        $i3 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i3 == 3 goto label1;

        $i4 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i4 == 4 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only updates, deletes, and asserts can have selection back-references");

        throw $r7;

     label1:
        $r1 = r0.<android.content.ContentProviderOperation$Builder: java.util.Map mSelectionArgsBackReferences>;

        if $r1 != null goto label2;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<android.content.ContentProviderOperation$Builder: java.util.Map mSelectionArgsBackReferences> = $r6;

     label2:
        $r2 = r0.<android.content.ContentProviderOperation$Builder: java.util.Map mSelectionArgsBackReferences>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withValue(java.lang.String, java.lang.Object)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1, $r9, $r11, $r26;
        java.lang.Object r2;
        int $i0, $i1, $i2;
        android.content.ContentValues $r3, $r12, $r14, $r16, $r18, $r20, $r23, $r25, $r27, $r29, $r30, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.IllegalArgumentException $r4, $r32;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.Class $r6;
        byte[] $r10, $r13;
        java.lang.Boolean $r15;
        java.lang.Double $r17;
        java.lang.Float $r19;
        java.lang.Long $r21;
        java.lang.Short $r22;
        java.lang.Integer $r24;
        java.lang.Byte $r28;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i0 == 1 goto label01;

        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i1 == 2 goto label01;

        $i2 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i2 == 4 goto label01;

        $r32 = new java.lang.IllegalArgumentException;

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only inserts and updates can have values");

        throw $r32;

     label01:
        $r3 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        if $r3 != null goto label02;

        $r31 = new android.content.ContentValues;

        specialinvoke $r31.<android.content.ContentValues: void <init>()>();

        r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues> = $r31;

     label02:
        if r2 != null goto label03;

        $r30 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        virtualinvoke $r30.<android.content.ContentValues: void putNull(java.lang.String)>(r1);

        return r0;

     label03:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        $r27 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r26 = (java.lang.String) r2;

        virtualinvoke $r27.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(r1, $r26);

        return r0;

     label04:
        $z1 = r2 instanceof java.lang.Byte;

        if $z1 == 0 goto label05;

        $r29 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r28 = (java.lang.Byte) r2;

        virtualinvoke $r29.<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>(r1, $r28);

        return r0;

     label05:
        $z2 = r2 instanceof java.lang.Short;

        if $z2 == 0 goto label06;

        $r23 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r22 = (java.lang.Short) r2;

        virtualinvoke $r23.<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>(r1, $r22);

        return r0;

     label06:
        $z3 = r2 instanceof java.lang.Integer;

        if $z3 == 0 goto label07;

        $r25 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r24 = (java.lang.Integer) r2;

        virtualinvoke $r25.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>(r1, $r24);

        return r0;

     label07:
        $z4 = r2 instanceof java.lang.Long;

        if $z4 == 0 goto label08;

        $r20 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r21 = (java.lang.Long) r2;

        virtualinvoke $r20.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>(r1, $r21);

        return r0;

     label08:
        $z5 = r2 instanceof java.lang.Float;

        if $z5 == 0 goto label09;

        $r18 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r19 = (java.lang.Float) r2;

        virtualinvoke $r18.<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>(r1, $r19);

        return r0;

     label09:
        $z6 = r2 instanceof java.lang.Double;

        if $z6 == 0 goto label10;

        $r16 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r17 = (java.lang.Double) r2;

        virtualinvoke $r16.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>(r1, $r17);

        return r0;

     label10:
        $z7 = r2 instanceof java.lang.Boolean;

        if $z7 == 0 goto label11;

        $r14 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r15 = (java.lang.Boolean) r2;

        virtualinvoke $r14.<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>(r1, $r15);

        return r0;

     label11:
        $z8 = r2 instanceof byte[];

        if $z8 == 0 goto label12;

        $r12 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        $r10 = (byte[]) r2;

        $r13 = (byte[]) $r10;

        virtualinvoke $r12.<android.content.ContentValues: void put(java.lang.String,byte[])>(r1, $r13);

        return r0;

     label12:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad value type: ");

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r4;
    }

    public android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String, int)
    {
        android.content.ContentProviderOperation$Builder r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        android.content.ContentValues $r2, $r3, $r5;
        java.lang.Integer $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i1 == 1 goto label1;

        $i2 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i2 == 2 goto label1;

        $i3 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i3 == 4 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only inserts, updates, and asserts can have value back-references");

        throw $r6;

     label1:
        $r2 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences>;

        if $r2 != null goto label2;

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences> = $r5;

     label2:
        $r3 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>(r1, $r4);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withValueBackReferences(android.content.ContentValues)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.content.ContentValues r1;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: android.content.ContentValues;

        $i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i0 == 1 goto label1;

        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i1 == 2 goto label1;

        $i2 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i2 == 4 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only inserts, updates, and asserts can have value back-references");

        throw $r2;

     label1:
        r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValuesBackReferences> = r1;

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)
    {
        android.content.ContentProviderOperation$Builder r0;
        android.content.ContentValues r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        r1 := @parameter0: android.content.ContentValues;

        $i0 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i0 == 1 goto label1;

        $i1 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i1 == 2 goto label1;

        $i2 = r0.<android.content.ContentProviderOperation$Builder: int mType>;

        if $i2 == 4 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only inserts, updates, and asserts can have values");

        throw $r5;

     label1:
        $r2 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        if $r2 != null goto label2;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues> = $r4;

     label2:
        $r3 = r0.<android.content.ContentProviderOperation$Builder: android.content.ContentValues mValues>;

        virtualinvoke $r3.<android.content.ContentValues: void putAll(android.content.ContentValues)>(r1);

        return r0;
    }

    public android.content.ContentProviderOperation$Builder withYieldAllowed(boolean)
    {
        android.content.ContentProviderOperation$Builder r0;
        boolean z0;

        r0 := @this: android.content.ContentProviderOperation$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.ContentProviderOperation$Builder: boolean mYieldAllowed> = z0;

        return r0;
    }
}
