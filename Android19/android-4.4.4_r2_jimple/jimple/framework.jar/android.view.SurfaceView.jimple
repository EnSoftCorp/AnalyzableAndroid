public class android.view.SurfaceView extends android.view.View
{
    private static final boolean DEBUG;
    static final int GET_NEW_SURFACE_MSG;
    static final int KEEP_SCREEN_ON_MSG;
    private static final java.lang.String TAG;
    static final int UPDATE_WINDOW_MSG;
    final java.util.ArrayList mCallbacks;
    final android.content.res.Configuration mConfiguration;
    final android.graphics.Rect mContentInsets;
    private final android.view.ViewTreeObserver$OnPreDrawListener mDrawListener;
    boolean mDrawingStopped;
    int mFormat;
    private boolean mGlobalListenersAdded;
    final android.os.Handler mHandler;
    boolean mHaveFrame;
    int mHeight;
    boolean mIsCreating;
    long mLastLockTime;
    int mLastSurfaceHeight;
    int mLastSurfaceWidth;
    final android.view.WindowManager$LayoutParams mLayout;
    int mLeft;
    final int[] mLocation;
    final android.view.Surface mNewSurface;
    final android.graphics.Rect mOverscanInsets;
    boolean mReportDrawNeeded;
    int mRequestedFormat;
    int mRequestedHeight;
    boolean mRequestedVisible;
    int mRequestedWidth;
    final android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener;
    android.view.IWindowSession mSession;
    final android.view.Surface mSurface;
    boolean mSurfaceCreated;
    final android.graphics.Rect mSurfaceFrame;
    private final android.view.SurfaceHolder mSurfaceHolder;
    final java.util.concurrent.locks.ReentrantLock mSurfaceLock;
    int mTop;
    private android.content.res.CompatibilityInfo$Translator mTranslator;
    boolean mUpdateWindowNeeded;
    boolean mViewVisibility;
    boolean mVisible;
    final android.graphics.Rect mVisibleInsets;
    int mWidth;
    final android.graphics.Rect mWinFrame;
    android.view.SurfaceView$MyWindow mWindow;
    int mWindowType;
    boolean mWindowVisibility;

    public void <init>(android.content.Context)
    {
        android.view.SurfaceView r0;
        android.content.Context r1;
        java.util.ArrayList $r2;
        int[] $r3;
        java.util.concurrent.locks.ReentrantLock $r4;
        android.view.Surface $r5, $r6;
        android.view.WindowManager$LayoutParams $r7;
        android.graphics.Rect $r8, $r9, $r10, $r11, $r15;
        android.content.res.Configuration $r12;
        android.view.SurfaceView$1 $r13;
        android.view.SurfaceView$2 $r14;
        android.view.SurfaceView$4 $r16;
        android.view.SurfaceView$3 $r17;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks> = $r2;

        $r3 = newarray (int)[2];

        r0.<android.view.SurfaceView: int[] mLocation> = $r3;

        $r4 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock> = $r4;

        $r5 = new android.view.Surface;

        specialinvoke $r5.<android.view.Surface: void <init>()>();

        r0.<android.view.SurfaceView: android.view.Surface mSurface> = $r5;

        $r6 = new android.view.Surface;

        specialinvoke $r6.<android.view.Surface: void <init>()>();

        r0.<android.view.SurfaceView: android.view.Surface mNewSurface> = $r6;

        r0.<android.view.SurfaceView: boolean mDrawingStopped> = 1;

        $r7 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r7.<android.view.WindowManager$LayoutParams: void <init>()>();

        r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mVisibleInsets> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mWinFrame> = $r9;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mOverscanInsets> = $r10;

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mContentInsets> = $r11;

        $r12 = new android.content.res.Configuration;

        specialinvoke $r12.<android.content.res.Configuration: void <init>()>();

        r0.<android.view.SurfaceView: android.content.res.Configuration mConfiguration> = $r12;

        r0.<android.view.SurfaceView: int mWindowType> = 1001;

        r0.<android.view.SurfaceView: boolean mIsCreating> = 0;

        $r13 = new android.view.SurfaceView$1;

        specialinvoke $r13.<android.view.SurfaceView$1: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.os.Handler mHandler> = $r13;

        $r14 = new android.view.SurfaceView$2;

        specialinvoke $r14.<android.view.SurfaceView$2: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener> = $r14;

        r0.<android.view.SurfaceView: boolean mRequestedVisible> = 0;

        r0.<android.view.SurfaceView: boolean mWindowVisibility> = 0;

        r0.<android.view.SurfaceView: boolean mViewVisibility> = 0;

        r0.<android.view.SurfaceView: int mRequestedWidth> = -1;

        r0.<android.view.SurfaceView: int mRequestedHeight> = -1;

        r0.<android.view.SurfaceView: int mRequestedFormat> = 4;

        r0.<android.view.SurfaceView: boolean mHaveFrame> = 0;

        r0.<android.view.SurfaceView: boolean mSurfaceCreated> = 0;

        r0.<android.view.SurfaceView: long mLastLockTime> = 0L;

        r0.<android.view.SurfaceView: boolean mVisible> = 0;

        r0.<android.view.SurfaceView: int mLeft> = -1;

        r0.<android.view.SurfaceView: int mTop> = -1;

        r0.<android.view.SurfaceView: int mWidth> = -1;

        r0.<android.view.SurfaceView: int mHeight> = -1;

        r0.<android.view.SurfaceView: int mFormat> = -1;

        $r15 = new android.graphics.Rect;

        specialinvoke $r15.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame> = $r15;

        r0.<android.view.SurfaceView: int mLastSurfaceWidth> = -1;

        r0.<android.view.SurfaceView: int mLastSurfaceHeight> = -1;

        $r17 = new android.view.SurfaceView$3;

        specialinvoke $r17.<android.view.SurfaceView$3: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnPreDrawListener mDrawListener> = $r17;

        $r16 = new android.view.SurfaceView$4;

        specialinvoke $r16.<android.view.SurfaceView$4: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder> = $r16;

        specialinvoke r0.<android.view.SurfaceView: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.SurfaceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        java.util.ArrayList $r3;
        int[] $r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        android.view.Surface $r6, $r7;
        android.view.WindowManager$LayoutParams $r8;
        android.graphics.Rect $r9, $r10, $r11, $r12, $r17;
        android.content.res.Configuration $r13;
        android.view.SurfaceView$1 $r14;
        android.view.SurfaceView$2 $r15;
        android.view.SurfaceView$3 $r16;
        android.view.SurfaceView$4 $r18;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks> = $r3;

        $r4 = newarray (int)[2];

        r0.<android.view.SurfaceView: int[] mLocation> = $r4;

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock> = $r5;

        $r6 = new android.view.Surface;

        specialinvoke $r6.<android.view.Surface: void <init>()>();

        r0.<android.view.SurfaceView: android.view.Surface mSurface> = $r6;

        $r7 = new android.view.Surface;

        specialinvoke $r7.<android.view.Surface: void <init>()>();

        r0.<android.view.SurfaceView: android.view.Surface mNewSurface> = $r7;

        r0.<android.view.SurfaceView: boolean mDrawingStopped> = 1;

        $r8 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r8.<android.view.WindowManager$LayoutParams: void <init>()>();

        r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mVisibleInsets> = $r9;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mWinFrame> = $r10;

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mOverscanInsets> = $r11;

        $r12 = new android.graphics.Rect;

        specialinvoke $r12.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mContentInsets> = $r12;

        $r13 = new android.content.res.Configuration;

        specialinvoke $r13.<android.content.res.Configuration: void <init>()>();

        r0.<android.view.SurfaceView: android.content.res.Configuration mConfiguration> = $r13;

        r0.<android.view.SurfaceView: int mWindowType> = 1001;

        r0.<android.view.SurfaceView: boolean mIsCreating> = 0;

        $r14 = new android.view.SurfaceView$1;

        specialinvoke $r14.<android.view.SurfaceView$1: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.os.Handler mHandler> = $r14;

        $r15 = new android.view.SurfaceView$2;

        specialinvoke $r15.<android.view.SurfaceView$2: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener> = $r15;

        r0.<android.view.SurfaceView: boolean mRequestedVisible> = 0;

        r0.<android.view.SurfaceView: boolean mWindowVisibility> = 0;

        r0.<android.view.SurfaceView: boolean mViewVisibility> = 0;

        r0.<android.view.SurfaceView: int mRequestedWidth> = -1;

        r0.<android.view.SurfaceView: int mRequestedHeight> = -1;

        r0.<android.view.SurfaceView: int mRequestedFormat> = 4;

        r0.<android.view.SurfaceView: boolean mHaveFrame> = 0;

        r0.<android.view.SurfaceView: boolean mSurfaceCreated> = 0;

        r0.<android.view.SurfaceView: long mLastLockTime> = 0L;

        r0.<android.view.SurfaceView: boolean mVisible> = 0;

        r0.<android.view.SurfaceView: int mLeft> = -1;

        r0.<android.view.SurfaceView: int mTop> = -1;

        r0.<android.view.SurfaceView: int mWidth> = -1;

        r0.<android.view.SurfaceView: int mHeight> = -1;

        r0.<android.view.SurfaceView: int mFormat> = -1;

        $r17 = new android.graphics.Rect;

        specialinvoke $r17.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame> = $r17;

        r0.<android.view.SurfaceView: int mLastSurfaceWidth> = -1;

        r0.<android.view.SurfaceView: int mLastSurfaceHeight> = -1;

        $r16 = new android.view.SurfaceView$3;

        specialinvoke $r16.<android.view.SurfaceView$3: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnPreDrawListener mDrawListener> = $r16;

        $r18 = new android.view.SurfaceView$4;

        specialinvoke $r18.<android.view.SurfaceView$4: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder> = $r18;

        specialinvoke r0.<android.view.SurfaceView: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.view.SurfaceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        java.util.ArrayList $r3;
        int[] $r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        android.view.Surface $r6, $r7;
        android.view.WindowManager$LayoutParams $r8;
        android.graphics.Rect $r9, $r10, $r11, $r12, $r15;
        android.content.res.Configuration $r13;
        android.view.SurfaceView$1 $r14;
        android.view.SurfaceView$2 $r16;
        android.view.SurfaceView$4 $r17;
        android.view.SurfaceView$3 $r18;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks> = $r3;

        $r4 = newarray (int)[2];

        r0.<android.view.SurfaceView: int[] mLocation> = $r4;

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock> = $r5;

        $r6 = new android.view.Surface;

        specialinvoke $r6.<android.view.Surface: void <init>()>();

        r0.<android.view.SurfaceView: android.view.Surface mSurface> = $r6;

        $r7 = new android.view.Surface;

        specialinvoke $r7.<android.view.Surface: void <init>()>();

        r0.<android.view.SurfaceView: android.view.Surface mNewSurface> = $r7;

        r0.<android.view.SurfaceView: boolean mDrawingStopped> = 1;

        $r8 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r8.<android.view.WindowManager$LayoutParams: void <init>()>();

        r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout> = $r8;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mVisibleInsets> = $r9;

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mWinFrame> = $r10;

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mOverscanInsets> = $r11;

        $r12 = new android.graphics.Rect;

        specialinvoke $r12.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mContentInsets> = $r12;

        $r13 = new android.content.res.Configuration;

        specialinvoke $r13.<android.content.res.Configuration: void <init>()>();

        r0.<android.view.SurfaceView: android.content.res.Configuration mConfiguration> = $r13;

        r0.<android.view.SurfaceView: int mWindowType> = 1001;

        r0.<android.view.SurfaceView: boolean mIsCreating> = 0;

        $r14 = new android.view.SurfaceView$1;

        specialinvoke $r14.<android.view.SurfaceView$1: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.os.Handler mHandler> = $r14;

        $r16 = new android.view.SurfaceView$2;

        specialinvoke $r16.<android.view.SurfaceView$2: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener> = $r16;

        r0.<android.view.SurfaceView: boolean mRequestedVisible> = 0;

        r0.<android.view.SurfaceView: boolean mWindowVisibility> = 0;

        r0.<android.view.SurfaceView: boolean mViewVisibility> = 0;

        r0.<android.view.SurfaceView: int mRequestedWidth> = -1;

        r0.<android.view.SurfaceView: int mRequestedHeight> = -1;

        r0.<android.view.SurfaceView: int mRequestedFormat> = 4;

        r0.<android.view.SurfaceView: boolean mHaveFrame> = 0;

        r0.<android.view.SurfaceView: boolean mSurfaceCreated> = 0;

        r0.<android.view.SurfaceView: long mLastLockTime> = 0L;

        r0.<android.view.SurfaceView: boolean mVisible> = 0;

        r0.<android.view.SurfaceView: int mLeft> = -1;

        r0.<android.view.SurfaceView: int mTop> = -1;

        r0.<android.view.SurfaceView: int mWidth> = -1;

        r0.<android.view.SurfaceView: int mHeight> = -1;

        r0.<android.view.SurfaceView: int mFormat> = -1;

        $r15 = new android.graphics.Rect;

        specialinvoke $r15.<android.graphics.Rect: void <init>()>();

        r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame> = $r15;

        r0.<android.view.SurfaceView: int mLastSurfaceWidth> = -1;

        r0.<android.view.SurfaceView: int mLastSurfaceHeight> = -1;

        $r18 = new android.view.SurfaceView$3;

        specialinvoke $r18.<android.view.SurfaceView$3: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnPreDrawListener mDrawListener> = $r18;

        $r17 = new android.view.SurfaceView$4;

        specialinvoke $r17.<android.view.SurfaceView$4: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder> = $r17;

        specialinvoke r0.<android.view.SurfaceView: void init()>();

        return;
    }

    static void access$000(android.view.SurfaceView, boolean, boolean)
    {
        android.view.SurfaceView r0;
        boolean z0, z1;

        r0 := @parameter0: android.view.SurfaceView;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<android.view.SurfaceView: void updateWindow(boolean,boolean)>(z0, z1);

        return;
    }

    private android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()
    {
        android.view.SurfaceView r0;
        java.util.ArrayList r1, $r4, $r5;
        java.lang.Throwable r2, $r7;
        android.view.SurfaceHolder$Callback[] r3;
        int $i0;

        r0 := @this: android.view.SurfaceView;

        r1 = r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        r3 = newarray (android.view.SurfaceHolder$Callback)[$i0];

        $r5 = r0.<android.view.SurfaceView: java.util.ArrayList mCallbacks>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void init()
    {
        android.view.SurfaceView r0;

        r0 := @this: android.view.SurfaceView;

        virtualinvoke r0.<android.view.SurfaceView: void setWillNotDraw(boolean)>(1);

        return;
    }

    private void updateWindow(boolean, boolean)
    {
        android.view.SurfaceView r0;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        android.view.ViewRootImpl r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i48, $i49, $i50, $i51, $i52, $i53, $i54;
        android.view.WindowManager$LayoutParams r3, r4, r8, r19, r20, $r26, $r28, $r29, $r30, $r34, $r75, $r78, $r79;
        java.lang.Throwable r5, r9, $r84, $r87;
        android.view.IWindowSession r6, r17, $r63, $r65, $r93, $r94;
        android.view.SurfaceView$MyWindow r7, r16, $r23, $r36, $r40, $r60, $r62, $r82, $r88, $r92, r95;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.view.SurfaceHolder$Callback[] r10, r11, r12, r14, r15;
        android.view.SurfaceHolder$Callback r13, $r59, $r71, $r74;
        android.view.Display r18;
        int[] $r21, $r24, $r25, $r76, $r91;
        android.content.res.CompatibilityInfo$Translator $r22, $r27, $r42, $r48, $r77, $r83, $r85;
        android.content.res.Resources $r31;
        android.content.Context $r32;
        android.content.res.CompatibilityInfo $r33;
        android.view.Surface $r35, $r52, $r61, $r64, $r72, $r86;
        android.graphics.Rect $r37, $r41, $r43, $r44, $r45, $r46, $r47, $r49, $r50, $r51, $r54, $r55, $r66, $r67, $r68, $r69, $r81;
        android.content.res.Configuration $r38;
        java.util.concurrent.locks.ReentrantLock $r39, $r53, $r89;
        android.view.SurfaceHolder $r56, $r58, $r70, $r73;
        android.view.SurfaceHolder$Callback2 $r57;
        android.os.RemoteException $r90;
        android.view.IWindow r96, r97, r98, r99, r100, r101;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z14 = r0.<android.view.SurfaceView: boolean mHaveFrame>;

        if $z14 != 0 goto label02;

     label01:
        return;

     label02:
        r1 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label03;

        $r83 = r1.<android.view.ViewRootImpl: android.content.res.CompatibilityInfo$Translator mTranslator>;

        r0.<android.view.SurfaceView: android.content.res.CompatibilityInfo$Translator mTranslator> = $r83;

     label03:
        $r22 = r0.<android.view.SurfaceView: android.content.res.CompatibilityInfo$Translator mTranslator>;

        if $r22 == null goto label04;

        $r86 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        $r85 = r0.<android.view.SurfaceView: android.content.res.CompatibilityInfo$Translator mTranslator>;

        virtualinvoke $r86.<android.view.Surface: void setCompatibilityTranslator(android.content.res.CompatibilityInfo$Translator)>($r85);

     label04:
        i0 = r0.<android.view.SurfaceView: int mRequestedWidth>;

        if i0 > 0 goto label05;

        i0 = virtualinvoke r0.<android.view.SurfaceView: int getWidth()>();

     label05:
        i1 = r0.<android.view.SurfaceView: int mRequestedHeight>;

        if i1 > 0 goto label06;

        i1 = virtualinvoke r0.<android.view.SurfaceView: int getHeight()>();

     label06:
        $r21 = r0.<android.view.SurfaceView: int[] mLocation>;

        virtualinvoke r0.<android.view.SurfaceView: void getLocationInWindow(int[])>($r21);

        $r23 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        if $r23 != null goto label42;

        z2 = 1;

     label07:
        $i20 = r0.<android.view.SurfaceView: int mFormat>;

        $i21 = r0.<android.view.SurfaceView: int mRequestedFormat>;

        if $i20 == $i21 goto label43;

        z3 = 1;

     label08:
        $i19 = r0.<android.view.SurfaceView: int mWidth>;

        if $i19 != i0 goto label09;

        $i54 = r0.<android.view.SurfaceView: int mHeight>;

        if $i54 == i1 goto label44;

     label09:
        z4 = 1;

     label10:
        $z16 = r0.<android.view.SurfaceView: boolean mVisible>;

        $z15 = r0.<android.view.SurfaceView: boolean mRequestedVisible>;

        if $z16 == $z15 goto label45;

        z5 = 1;

     label11:
        if z0 != 0 goto label12;

        if z2 != 0 goto label12;

        if z3 != 0 goto label12;

        if z4 != 0 goto label12;

        if z5 != 0 goto label12;

        $i48 = r0.<android.view.SurfaceView: int mLeft>;

        $r76 = r0.<android.view.SurfaceView: int[] mLocation>;

        $i49 = $r76[0];

        if $i48 != $i49 goto label12;

        $i52 = r0.<android.view.SurfaceView: int mTop>;

        $r91 = r0.<android.view.SurfaceView: int[] mLocation>;

        $i53 = $r91[1];

        if $i52 != $i53 goto label12;

        $z23 = r0.<android.view.SurfaceView: boolean mUpdateWindowNeeded>;

        if $z23 != 0 goto label12;

        $z24 = r0.<android.view.SurfaceView: boolean mReportDrawNeeded>;

        if $z24 != 0 goto label12;

        if z1 == 0 goto label01;

     label12:
        z6 = r0.<android.view.SurfaceView: boolean mRequestedVisible>;

        r0.<android.view.SurfaceView: boolean mVisible> = z6;

        $r25 = r0.<android.view.SurfaceView: int[] mLocation>;

        $i25 = $r25[0];

        r0.<android.view.SurfaceView: int mLeft> = $i25;

        $r24 = r0.<android.view.SurfaceView: int[] mLocation>;

        $i22 = $r24[1];

        r0.<android.view.SurfaceView: int mTop> = $i22;

        r0.<android.view.SurfaceView: int mWidth> = i0;

        r0.<android.view.SurfaceView: int mHeight> = i1;

        $i23 = r0.<android.view.SurfaceView: int mRequestedFormat>;

        r0.<android.view.SurfaceView: int mFormat> = $i23;

        $r28 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i24 = r0.<android.view.SurfaceView: int mLeft>;

        $r28.<android.view.WindowManager$LayoutParams: int x> = $i24;

        $r29 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i28 = r0.<android.view.SurfaceView: int mTop>;

        $r29.<android.view.WindowManager$LayoutParams: int y> = $i28;

        $r30 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i26 = virtualinvoke r0.<android.view.SurfaceView: int getWidth()>();

        $r30.<android.view.WindowManager$LayoutParams: int width> = $i26;

        $r26 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i27 = virtualinvoke r0.<android.view.SurfaceView: int getHeight()>();

        $r26.<android.view.WindowManager$LayoutParams: int height> = $i27;

        $r27 = r0.<android.view.SurfaceView: android.content.res.CompatibilityInfo$Translator mTranslator>;

        if $r27 == null goto label13;

        $r77 = r0.<android.view.SurfaceView: android.content.res.CompatibilityInfo$Translator mTranslator>;

        $r75 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        virtualinvoke $r77.<android.content.res.CompatibilityInfo$Translator: void translateLayoutParamsInAppWindowToScreen(android.view.WindowManager$LayoutParams)>($r75);

     label13:
        $r34 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i29 = r0.<android.view.SurfaceView: int mRequestedFormat>;

        $r34.<android.view.WindowManager$LayoutParams: int format> = $i29;

        r3 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i31 = r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i30 = 16920 | $i31;

        r3.<android.view.WindowManager$LayoutParams: int flags> = $i30;

        $r32 = virtualinvoke r0.<android.view.SurfaceView: android.content.Context getContext()>();

        $r31 = virtualinvoke $r32.<android.content.Context: android.content.res.Resources getResources()>();

        $r33 = virtualinvoke $r31.<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $z17 = virtualinvoke $r33.<android.content.res.CompatibilityInfo: boolean supportsScreen()>();

        if $z17 != 0 goto label14;

        r19 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i46 = r19.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i45 = 128 | $i46;

        r19.<android.view.WindowManager$LayoutParams: int privateFlags> = $i45;

     label14:
        r4 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i33 = r4.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i32 = 64 | $i33;

        r4.<android.view.WindowManager$LayoutParams: int privateFlags> = $i32;

        $r40 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        if $r40 != null goto label17;

        r18 = virtualinvoke r0.<android.view.SurfaceView: android.view.Display getDisplay()>();

        r95 = new android.view.SurfaceView$MyWindow;

        specialinvoke r95.<android.view.SurfaceView$MyWindow: void <init>(android.view.SurfaceView)>(r0);

        r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow> = r95;

        $r79 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i50 = r0.<android.view.SurfaceView: int mWindowType>;

        $r79.<android.view.WindowManager$LayoutParams: int type> = $i50;

        $r78 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $r78.<android.view.WindowManager$LayoutParams: int gravity> = 8388659;

        r17 = r0.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        r16 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        $r82 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        i17 = $r82.<android.view.SurfaceView$MyWindow: int mSeq>;

        r20 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $z22 = r0.<android.view.SurfaceView: boolean mVisible>;

        if $z22 == 0 goto label46;

     label15:
        i18 = 0;

     label16:
        $i51 = virtualinvoke r18.<android.view.Display: int getDisplayId()>();

        $r81 = r0.<android.view.SurfaceView: android.graphics.Rect mContentInsets>;

        r96 = (android.view.IWindow) r16;

        interfaceinvoke r17.<android.view.IWindowSession: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect)>(r96, i17, r20, i18, $i51, $r81);

     label17:
        $r39 = r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r39.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label18:
        r0.<android.view.SurfaceView: boolean mUpdateWindowNeeded> = 0;

        z7 = r0.<android.view.SurfaceView: boolean mReportDrawNeeded>;

        r0.<android.view.SurfaceView: boolean mReportDrawNeeded> = 0;

     label19:
        if z6 != 0 goto label47;

        z8 = 1;

     label20:
        r0.<android.view.SurfaceView: boolean mDrawingStopped> = z8;

        r6 = r0.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        r7 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        $r36 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        i2 = $r36.<android.view.SurfaceView$MyWindow: int mSeq>;

        r8 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        i3 = r0.<android.view.SurfaceView: int mWidth>;

        i5 = r0.<android.view.SurfaceView: int mHeight>;

     label21:
        if z6 == 0 goto label48;

        i4 = 0;

     label22:
        $r44 = r0.<android.view.SurfaceView: android.graphics.Rect mWinFrame>;

        $r46 = r0.<android.view.SurfaceView: android.graphics.Rect mOverscanInsets>;

        $r45 = r0.<android.view.SurfaceView: android.graphics.Rect mContentInsets>;

        $r37 = r0.<android.view.SurfaceView: android.graphics.Rect mVisibleInsets>;

        $r38 = r0.<android.view.SurfaceView: android.content.res.Configuration mConfiguration>;

        $r35 = r0.<android.view.SurfaceView: android.view.Surface mNewSurface>;

        r97 = (android.view.IWindow) r7;

        i6 = interfaceinvoke r6.<android.view.IWindowSession: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>(r97, i2, r8, i3, i5, i4, 2, $r44, $r46, $r45, $r37, $r38, $r35);

     label23:
        $i34 = i6 & 2;

        if $i34 == 0 goto label25;

     label24:
        r0.<android.view.SurfaceView: boolean mReportDrawNeeded> = 1;

     label25:
        $r43 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $r43.<android.graphics.Rect: int left> = 0;

        $r41 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $r41.<android.graphics.Rect: int top> = 0;

        $r42 = r0.<android.view.SurfaceView: android.content.res.CompatibilityInfo$Translator mTranslator>;

        if $r42 != null goto label49;

        $r67 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $r66 = r0.<android.view.SurfaceView: android.graphics.Rect mWinFrame>;

        $i43 = virtualinvoke $r66.<android.graphics.Rect: int width()>();

        $r67.<android.graphics.Rect: int right> = $i43;

        $r69 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $r68 = r0.<android.view.SurfaceView: android.graphics.Rect mWinFrame>;

        $i44 = virtualinvoke $r68.<android.graphics.Rect: int height()>();

        $r69.<android.graphics.Rect: int bottom> = $i44;

     label26:
        $r55 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        i8 = $r55.<android.graphics.Rect: int right>;

        $r54 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        i7 = $r54.<android.graphics.Rect: int bottom>;

        $i39 = r0.<android.view.SurfaceView: int mLastSurfaceWidth>;

        if $i39 != i8 goto label95;

        $i42 = r0.<android.view.SurfaceView: int mLastSurfaceHeight>;

        if $i42 == i7 goto label54;

     label27:
        goto label95;

     label28:
        r0.<android.view.SurfaceView: int mLastSurfaceWidth> = i8;

        r0.<android.view.SurfaceView: int mLastSurfaceHeight> = i7;

     label29:
        $r53 = r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r53.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label30:
        $z18 = z2 | z7;

        z9 = z1 | $z18;

        $i38 = i6 & 4;

        if $i38 == 0 goto label55;

        z11 = 1;

     label31:
        z12 = r0.<android.view.SurfaceView: boolean mSurfaceCreated>;

     label32:
        r11 = null;

        if z12 == 0 goto label56;

        if z11 != 0 goto label33;

        r11 = null;

        if z6 != 0 goto label56;

        r11 = null;

        if z5 == 0 goto label56;

     label33:
        r0.<android.view.SurfaceView: boolean mSurfaceCreated> = 0;

        $r72 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        z13 = virtualinvoke $r72.<android.view.Surface: boolean isValid()>();

     label34:
        r11 = null;

        if z13 == 0 goto label56;

     label35:
        r11 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()>();

     label36:
        r15 = r11;

     label37:
        i15 = lengthof r15;

     label38:
        i16 = 0;

     label39:
        if i16 >= i15 goto label56;

     label40:
        $r74 = r15[i16];

        $r73 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        interfaceinvoke $r74.<android.view.SurfaceHolder$Callback: void surfaceDestroyed(android.view.SurfaceHolder)>($r73);

     label41:
        i16 = i16 + 1;

        goto label39;

     label42:
        z2 = 0;

        goto label07;

     label43:
        z3 = 0;

        goto label08;

     label44:
        z4 = 0;

        goto label10;

     label45:
        z5 = 0;

        goto label11;

     label46:
        i18 = 8;

        goto label16;

     label47:
        z8 = 0;

        goto label20;

     label48:
        i4 = 8;

        goto label22;

     label49:
        $r48 = r0.<android.view.SurfaceView: android.content.res.CompatibilityInfo$Translator mTranslator>;

        f0 = $r48.<android.content.res.CompatibilityInfo$Translator: float applicationInvertedScale>;

        $r47 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $r49 = r0.<android.view.SurfaceView: android.graphics.Rect mWinFrame>;

        $i35 = virtualinvoke $r49.<android.graphics.Rect: int width()>();

        $f3 = (float) $i35;

        $f1 = f0 * $f3;

        $f2 = 0.5F + $f1;

        $i37 = (int) $f2;

        $r47.<android.graphics.Rect: int right> = $i37;

        $r50 = r0.<android.view.SurfaceView: android.graphics.Rect mSurfaceFrame>;

        $r51 = r0.<android.view.SurfaceView: android.graphics.Rect mWinFrame>;

        $i36 = virtualinvoke $r51.<android.graphics.Rect: int height()>();

        $f6 = (float) $i36;

        $f5 = f0 * $f6;

        $f4 = 0.5F + $f5;

        $i40 = (int) $f4;

        $r50.<android.graphics.Rect: int bottom> = $i40;

     label50:
        goto label26;

     label51:
        $r84 := @caughtexception;

        r5 = $r84;

     label52:
        $r89 = r0.<android.view.SurfaceView: java.util.concurrent.locks.ReentrantLock mSurfaceLock>;

        virtualinvoke $r89.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r5;

     label53:
        $r90 := @caughtexception;

        return;

     label54:
        z10 = 0;

        goto label28;

     label55:
        z11 = 0;

        goto label31;

     label56:
        $r61 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        $r52 = r0.<android.view.SurfaceView: android.view.Surface mNewSurface>;

        virtualinvoke $r61.<android.view.Surface: void transferFrom(android.view.Surface)>($r52);

     label57:
        if z6 == 0 goto label85;

     label58:
        $r64 = r0.<android.view.SurfaceView: android.view.Surface mSurface>;

        $z21 = virtualinvoke $r64.<android.view.Surface: boolean isValid()>();

        if $z21 == 0 goto label85;

        $z20 = r0.<android.view.SurfaceView: boolean mSurfaceCreated>;

        if $z20 != 0 goto label96;

     label59:
        if z11 != 0 goto label60;

        if z5 == 0 goto label96;

     label60:
        r0.<android.view.SurfaceView: boolean mSurfaceCreated> = 1;

        r0.<android.view.SurfaceView: boolean mIsCreating> = 1;

     label61:
        if r11 != null goto label63;

     label62:
        r11 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()>();

     label63:
        r10 = r11;

     label64:
        i9 = lengthof r10;

     label65:
        i12 = 0;

     label66:
        if i12 >= i9 goto label96;

     label67:
        $r71 = r10[i12];

        $r70 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        interfaceinvoke $r71.<android.view.SurfaceHolder$Callback: void surfaceCreated(android.view.SurfaceHolder)>($r70);

     label68:
        i12 = i12 + 1;

        goto label66;

     label69:
        if r11 != null goto label71;

     label70:
        r11 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()>();

     label71:
        r12 = r11;

     label72:
        i10 = lengthof r12;

     label73:
        i11 = 0;

     label74:
        if i11 >= i10 goto label77;

     label75:
        $r59 = r12[i11];

        $r58 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        $i41 = r0.<android.view.SurfaceView: int mFormat>;

        interfaceinvoke $r59.<android.view.SurfaceHolder$Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>($r58, $i41, i0, i1);

     label76:
        i11 = i11 + 1;

        goto label74;

     label77:
        if z9 == 0 goto label85;

        if r11 != null goto label79;

     label78:
        r11 = specialinvoke r0.<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()>();

     label79:
        r14 = r11;

     label80:
        i14 = lengthof r14;

     label81:
        i13 = 0;

     label82:
        if i13 >= i14 goto label85;

     label83:
        r13 = r14[i13];

        $z19 = r13 instanceof android.view.SurfaceHolder$Callback2;

        if $z19 == 0 goto label84;

        $r57 = (android.view.SurfaceHolder$Callback2) r13;

        $r56 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        interfaceinvoke $r57.<android.view.SurfaceHolder$Callback2: void surfaceRedrawNeeded(android.view.SurfaceHolder)>($r56);

     label84:
        i13 = i13 + 1;

        goto label82;

     label85:
        r0.<android.view.SurfaceView: boolean mIsCreating> = 0;

     label86:
        if z9 == 0 goto label88;

     label87:
        $r65 = r0.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        $r62 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        r98 = (android.view.IWindow) $r62;

        interfaceinvoke $r65.<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>(r98);

     label88:
        $r63 = r0.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        $r60 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        r99 = (android.view.IWindow) $r60;

        interfaceinvoke $r63.<android.view.IWindowSession: void performDeferredDestroy(android.view.IWindow)>(r99);

     label89:
        return;

     label90:
        $r87 := @caughtexception;

        r9 = $r87;

     label91:
        r0.<android.view.SurfaceView: boolean mIsCreating> = 0;

     label92:
        if z9 == 0 goto label94;

     label93:
        $r94 = r0.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        $r92 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        r100 = (android.view.IWindow) $r92;

        interfaceinvoke $r94.<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>(r100);

     label94:
        $r93 = r0.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        $r88 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        r101 = (android.view.IWindow) $r88;

        interfaceinvoke $r93.<android.view.IWindowSession: void performDeferredDestroy(android.view.IWindow)>(r101);

        throw r9;

     label95:
        z10 = 1;

        goto label28;

     label96:
        if z2 != 0 goto label69;

        if z3 != 0 goto label69;

        if z4 != 0 goto label69;

        if z5 != 0 goto label69;

        if z10 == 0 goto label77;

        goto label69;

        catch android.os.RemoteException from label12 to label13 with label53;
        catch android.os.RemoteException from label13 to label14 with label53;
        catch android.os.RemoteException from label14 to label15 with label53;
        catch android.os.RemoteException from label16 to label17 with label53;
        catch android.os.RemoteException from label17 to label18 with label53;
        catch java.lang.Throwable from label18 to label19 with label51;
        catch java.lang.Throwable from label20 to label21 with label51;
        catch java.lang.Throwable from label22 to label23 with label51;
        catch java.lang.Throwable from label24 to label25 with label51;
        catch java.lang.Throwable from label25 to label26 with label51;
        catch java.lang.Throwable from label26 to label27 with label51;
        catch java.lang.Throwable from label28 to label29 with label51;
        catch android.os.RemoteException from label29 to label30 with label53;
        catch java.lang.Throwable from label31 to label32 with label90;
        catch java.lang.Throwable from label33 to label34 with label90;
        catch java.lang.Throwable from label35 to label36 with label90;
        catch java.lang.Throwable from label37 to label38 with label90;
        catch java.lang.Throwable from label40 to label41 with label90;
        catch java.lang.Throwable from label49 to label50 with label51;
        catch android.os.RemoteException from label52 to label53 with label53;
        catch java.lang.Throwable from label56 to label57 with label90;
        catch java.lang.Throwable from label58 to label59 with label90;
        catch java.lang.Throwable from label60 to label61 with label90;
        catch java.lang.Throwable from label62 to label63 with label90;
        catch java.lang.Throwable from label64 to label65 with label90;
        catch java.lang.Throwable from label67 to label68 with label90;
        catch java.lang.Throwable from label70 to label71 with label90;
        catch java.lang.Throwable from label72 to label73 with label90;
        catch java.lang.Throwable from label75 to label76 with label90;
        catch java.lang.Throwable from label78 to label79 with label90;
        catch java.lang.Throwable from label80 to label81 with label90;
        catch java.lang.Throwable from label83 to label84 with label90;
        catch android.os.RemoteException from label85 to label86 with label53;
        catch android.os.RemoteException from label87 to label88 with label53;
        catch android.os.RemoteException from label88 to label89 with label53;
        catch android.os.RemoteException from label91 to label92 with label53;
        catch android.os.RemoteException from label93 to label94 with label53;
        catch android.os.RemoteException from label94 to label95 with label53;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.view.SurfaceView r0;
        android.graphics.Canvas r1;
        int $i0, $i1, $i2;
        android.graphics.PorterDuff$Mode $r2;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = r0.<android.view.SurfaceView: int mWindowType>;

        if $i0 == 1000 goto label1;

        $i1 = r0.<android.view.SurfaceView: int mPrivateFlags>;

        $i2 = 128 & $i1;

        if $i2 != 128 goto label1;

        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r2);

     label1:
        specialinvoke r0.<android.view.View: void dispatchDraw(android.graphics.Canvas)>(r1);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.view.SurfaceView r0;
        android.graphics.Canvas r1;
        int $i0, $i1, $i2;
        android.graphics.PorterDuff$Mode $r2;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = r0.<android.view.SurfaceView: int mWindowType>;

        if $i0 == 1000 goto label1;

        $i1 = r0.<android.view.SurfaceView: int mPrivateFlags>;

        $i2 = 128 & $i1;

        if $i2 != 0 goto label1;

        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r2);

     label1:
        specialinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public boolean gatherTransparentRegion(android.graphics.Region)
    {
        android.view.SurfaceView r0;
        android.graphics.Region r1;
        boolean z0, $z1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r2, $r3, $r5;
        android.graphics.Region$Op $r4;

        r0 := @this: android.view.SurfaceView;

        r1 := @parameter0: android.graphics.Region;

        $i4 = r0.<android.view.SurfaceView: int mWindowType>;

        if $i4 != 1000 goto label2;

        z0 = specialinvoke r0.<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>(r1);

     label1:
        return z0;

     label2:
        z0 = 1;

        $i5 = r0.<android.view.SurfaceView: int mPrivateFlags>;

        $i6 = 128 & $i5;

        if $i6 != 0 goto label4;

        z0 = specialinvoke r0.<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>(r1);

     label3:
        $i7 = r0.<android.view.SurfaceView: int mRequestedFormat>;

        $z1 = staticinvoke <android.graphics.PixelFormat: boolean formatHasAlpha(int)>($i7);

        if $z1 == 0 goto label1;

        return 0;

     label4:
        if r1 == null goto label3;

        i0 = virtualinvoke r0.<android.view.SurfaceView: int getWidth()>();

        i1 = virtualinvoke r0.<android.view.SurfaceView: int getHeight()>();

        if i0 <= 0 goto label3;

        if i1 <= 0 goto label3;

        $r2 = r0.<android.view.SurfaceView: int[] mLocation>;

        virtualinvoke r0.<android.view.SurfaceView: void getLocationInWindow(int[])>($r2);

        $r3 = r0.<android.view.SurfaceView: int[] mLocation>;

        i2 = $r3[0];

        $r5 = r0.<android.view.SurfaceView: int[] mLocation>;

        i3 = $r5[1];

        $i8 = i2 + i0;

        $i9 = i3 + i1;

        $r4 = <android.graphics.Region$Op: android.graphics.Region$Op UNION>;

        virtualinvoke r1.<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>(i2, i3, $i8, $i9, $r4);

        goto label3;
    }

    public android.view.SurfaceHolder getHolder()
    {
        android.view.SurfaceView r0;
        android.view.SurfaceHolder $r1;

        r0 := @this: android.view.SurfaceView;

        $r1 = r0.<android.view.SurfaceView: android.view.SurfaceHolder mSurfaceHolder>;

        return $r1;
    }

    void handleGetNewSurface()
    {
        android.view.SurfaceView r0;

        r0 := @this: android.view.SurfaceView;

        specialinvoke r0.<android.view.SurfaceView: void updateWindow(boolean,boolean)>(0, 0);

        return;
    }

    public boolean isFixedSize()
    {
        android.view.SurfaceView r0;
        int $i0, $i1;

        r0 := @this: android.view.SurfaceView;

        $i0 = r0.<android.view.SurfaceView: int mRequestedWidth>;

        if $i0 != -1 goto label1;

        $i1 = r0.<android.view.SurfaceView: int mRequestedHeight>;

        if $i1 == -1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected void onAttachedToWindow()
    {
        android.view.SurfaceView r0;
        boolean z0, $z1;
        android.view.ViewTreeObserver r1;
        android.view.ViewParent $r2;
        android.view.IWindowSession $r3;
        android.view.WindowManager$LayoutParams $r4, $r6;
        android.os.IBinder $r5;
        int $i0;
        android.view.ViewTreeObserver$OnScrollChangedListener $r7;
        android.view.ViewTreeObserver$OnPreDrawListener $r8;

        r0 := @this: android.view.SurfaceView;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        $r2 = r0.<android.view.SurfaceView: android.view.ViewParent mParent>;

        interfaceinvoke $r2.<android.view.ViewParent: void requestTransparentRegion(android.view.View)>(r0);

        $r3 = virtualinvoke r0.<android.view.SurfaceView: android.view.IWindowSession getWindowSession()>();

        r0.<android.view.SurfaceView: android.view.IWindowSession mSession> = $r3;

        $r4 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $r5 = virtualinvoke r0.<android.view.SurfaceView: android.os.IBinder getWindowToken()>();

        $r4.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = $r5;

        $r6 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        virtualinvoke $r6.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>("SurfaceView");

        $i0 = virtualinvoke r0.<android.view.SurfaceView: int getVisibility()>();

        if $i0 != 0 goto label3;

        z0 = 1;

     label1:
        r0.<android.view.SurfaceView: boolean mViewVisibility> = z0;

        $z1 = r0.<android.view.SurfaceView: boolean mGlobalListenersAdded>;

        if $z1 != 0 goto label2;

        r1 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r7 = r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>($r7);

        $r8 = r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnPreDrawListener mDrawListener>;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r8);

        r0.<android.view.SurfaceView: boolean mGlobalListenersAdded> = 1;

     label2:
        return;

     label3:
        z0 = 0;

        goto label1;
    }

    protected void onDetachedFromWindow()
    {
        android.view.SurfaceView r0;
        android.view.ViewTreeObserver r2;
        boolean $z0;
        android.view.SurfaceView$MyWindow $r3, $r5;
        android.view.WindowManager$LayoutParams $r4;
        android.view.IWindowSession $r6;
        android.view.ViewTreeObserver$OnScrollChangedListener $r7;
        android.view.ViewTreeObserver$OnPreDrawListener $r8;
        android.os.RemoteException $r9;
        android.view.IWindow r10;

        r0 := @this: android.view.SurfaceView;

        $z0 = r0.<android.view.SurfaceView: boolean mGlobalListenersAdded>;

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<android.view.SurfaceView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r7 = r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnScrollChangedListener mScrollChangedListener>;

        virtualinvoke r2.<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>($r7);

        $r8 = r0.<android.view.SurfaceView: android.view.ViewTreeObserver$OnPreDrawListener mDrawListener>;

        virtualinvoke r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r8);

        r0.<android.view.SurfaceView: boolean mGlobalListenersAdded> = 0;

     label1:
        r0.<android.view.SurfaceView: boolean mRequestedVisible> = 0;

        specialinvoke r0.<android.view.SurfaceView: void updateWindow(boolean,boolean)>(0, 0);

        r0.<android.view.SurfaceView: boolean mHaveFrame> = 0;

        $r3 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        if $r3 == null goto label4;

     label2:
        $r6 = r0.<android.view.SurfaceView: android.view.IWindowSession mSession>;

        $r5 = r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow>;

        r10 = (android.view.IWindow) $r5;

        interfaceinvoke $r6.<android.view.IWindowSession: void remove(android.view.IWindow)>(r10);

     label3:
        r0.<android.view.SurfaceView: android.view.SurfaceView$MyWindow mWindow> = null;

     label4:
        r0.<android.view.SurfaceView: android.view.IWindowSession mSession> = null;

        $r4 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $r4.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = null;

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        return;

     label5:
        $r9 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    protected void onMeasure(int, int)
    {
        android.view.SurfaceView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<android.view.SurfaceView: int mRequestedWidth>;

        if $i4 < 0 goto label3;

        $i7 = r0.<android.view.SurfaceView: int mRequestedWidth>;

        i2 = staticinvoke <android.view.SurfaceView: int resolveSizeAndState(int,int,int)>($i7, i0, 0);

     label1:
        $i5 = r0.<android.view.SurfaceView: int mRequestedHeight>;

        if $i5 < 0 goto label4;

        $i6 = r0.<android.view.SurfaceView: int mRequestedHeight>;

        i3 = staticinvoke <android.view.SurfaceView: int resolveSizeAndState(int,int,int)>($i6, i1, 0);

     label2:
        virtualinvoke r0.<android.view.SurfaceView: void setMeasuredDimension(int,int)>(i2, i3);

        return;

     label3:
        i2 = staticinvoke <android.view.SurfaceView: int getDefaultSize(int,int)>(0, i0);

        goto label1;

     label4:
        i3 = staticinvoke <android.view.SurfaceView: int getDefaultSize(int,int)>(0, i1);

        goto label2;
    }

    protected void onWindowVisibilityChanged(int)
    {
        android.view.SurfaceView r0;
        int i0;
        boolean z0, z1, $z2, $z3;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        z0 = 1;

        specialinvoke r0.<android.view.View: void onWindowVisibilityChanged(int)>(i0);

        if i0 != 0 goto label3;

        z1 = 1;

     label1:
        r0.<android.view.SurfaceView: boolean mWindowVisibility> = z1;

        $z2 = r0.<android.view.SurfaceView: boolean mWindowVisibility>;

        if $z2 == 0 goto label4;

        $z3 = r0.<android.view.SurfaceView: boolean mViewVisibility>;

        if $z3 == 0 goto label4;

     label2:
        r0.<android.view.SurfaceView: boolean mRequestedVisible> = z0;

        specialinvoke r0.<android.view.SurfaceView: void updateWindow(boolean,boolean)>(0, 0);

        return;

     label3:
        z1 = 0;

        goto label1;

     label4:
        z0 = 0;

        goto label2;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.view.SurfaceView r0;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.view.View: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        specialinvoke r0.<android.view.SurfaceView: void updateWindow(boolean,boolean)>(0, 0);

        return z0;
    }

    public void setSecure(boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;
        android.view.WindowManager$LayoutParams r1, r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r2 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i2 = r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = 8192 | $i2;

        r2.<android.view.WindowManager$LayoutParams: int flags> = $i3;

        return;

     label1:
        r1 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i0 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = -8193 & $i0;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i1;

        return;
    }

    public void setVisibility(int)
    {
        android.view.SurfaceView r0;
        int i0;
        boolean z0, z1, $z2, $z3, $z4;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.view.View: void setVisibility(int)>(i0);

        if i0 != 0 goto label4;

        z0 = 1;

     label1:
        r0.<android.view.SurfaceView: boolean mViewVisibility> = z0;

        $z2 = r0.<android.view.SurfaceView: boolean mWindowVisibility>;

        if $z2 == 0 goto label5;

        $z4 = r0.<android.view.SurfaceView: boolean mViewVisibility>;

        if $z4 == 0 goto label5;

        z1 = 1;

     label2:
        $z3 = r0.<android.view.SurfaceView: boolean mRequestedVisible>;

        if z1 == $z3 goto label3;

        virtualinvoke r0.<android.view.SurfaceView: void requestLayout()>();

     label3:
        r0.<android.view.SurfaceView: boolean mRequestedVisible> = z1;

        specialinvoke r0.<android.view.SurfaceView: void updateWindow(boolean,boolean)>(0, 0);

        return;

     label4:
        z0 = 0;

        goto label1;

     label5:
        z1 = 0;

        goto label2;
    }

    public void setWindowType(int)
    {
        android.view.SurfaceView r0;
        int i0;

        r0 := @this: android.view.SurfaceView;

        i0 := @parameter0: int;

        r0.<android.view.SurfaceView: int mWindowType> = i0;

        return;
    }

    public void setZOrderMediaOverlay(boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;
        short s0;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        s0 = 1004;

     label1:
        r0.<android.view.SurfaceView: int mWindowType> = s0;

        return;

     label2:
        s0 = 1001;

        goto label1;
    }

    public void setZOrderOnTop(boolean)
    {
        android.view.SurfaceView r0;
        boolean z0;
        android.view.WindowManager$LayoutParams r1, r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.SurfaceView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<android.view.SurfaceView: int mWindowType> = 1000;

        r2 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i2 = r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = 131072 | $i2;

        r2.<android.view.WindowManager$LayoutParams: int flags> = $i3;

        return;

     label1:
        r0.<android.view.SurfaceView: int mWindowType> = 1001;

        r1 = r0.<android.view.SurfaceView: android.view.WindowManager$LayoutParams mLayout>;

        $i0 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = -131073 & $i0;

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i1;

        return;
    }

    public static void <clinit>()
    {
        <android.view.SurfaceView: int UPDATE_WINDOW_MSG> = 3;

        <android.view.SurfaceView: java.lang.String TAG> = "SurfaceView";

        <android.view.SurfaceView: int KEEP_SCREEN_ON_MSG> = 1;

        <android.view.SurfaceView: int GET_NEW_SURFACE_MSG> = 2;

        <android.view.SurfaceView: boolean DEBUG> = 0;

        return;
    }
}
