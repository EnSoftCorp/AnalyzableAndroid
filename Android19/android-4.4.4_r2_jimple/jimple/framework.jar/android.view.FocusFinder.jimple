public class android.view.FocusFinder extends java.lang.Object
{
    private static final java.lang.ThreadLocal tlFocusFinder;
    final android.graphics.Rect mBestCandidateRect;
    final android.graphics.Rect mFocusedRect;
    final android.graphics.Rect mOtherRect;
    final android.view.FocusFinder$SequentialFocusComparator mSequentialFocusComparator;
    private final java.util.ArrayList mTempList;

    static void <clinit>()
    {
        android.view.FocusFinder$1 $r0;

        $r0 = new android.view.FocusFinder$1;

        specialinvoke $r0.<android.view.FocusFinder$1: void <init>()>();

        <android.view.FocusFinder: java.lang.ThreadLocal tlFocusFinder> = $r0;

        return;
    }

    private void <init>()
    {
        android.view.FocusFinder r0;
        android.graphics.Rect $r1, $r2, $r3;
        android.view.FocusFinder$SequentialFocusComparator $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.view.FocusFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect> = $r3;

        $r4 = new android.view.FocusFinder$SequentialFocusComparator;

        specialinvoke $r4.<android.view.FocusFinder$SequentialFocusComparator: void <init>(android.view.FocusFinder$1)>(null);

        r0.<android.view.FocusFinder: android.view.FocusFinder$SequentialFocusComparator mSequentialFocusComparator> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.view.FocusFinder: java.util.ArrayList mTempList> = $r5;

        return;
    }

    void <init>(android.view.FocusFinder$1)
    {
        android.view.FocusFinder r0;
        android.view.FocusFinder$1 r1;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.FocusFinder$1;

        specialinvoke r0.<android.view.FocusFinder: void <init>()>();

        return;
    }

    private android.view.View findNextFocus(android.view.ViewGroup, android.view.View, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.view.View r2, r4, r7;
        android.graphics.Rect r3;
        int i0;
        java.util.ArrayList r5;
        java.lang.Throwable r6, $r8;
        boolean $z0;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        r4 = null;

        if r2 == null goto label1;

        r4 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int)>(r1, r2, i0);

     label1:
        if r4 == null goto label2;

        return r4;

     label2:
        r5 = r0.<android.view.FocusFinder: java.util.ArrayList mTempList>;

     label3:
        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        virtualinvoke r1.<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int)>(r5, i0);

        $z0 = virtualinvoke r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        r7 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList)>(r1, r2, r3, i0, r5);

     label4:
        r4 = r7;

     label5:
        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        return r4;

     label6:
        $r8 := @caughtexception;

        r6 = $r8;

        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        throw r6;

        catch java.lang.Throwable from label3 to label4 with label6;
    }

    private android.view.View findNextFocus(android.view.ViewGroup, android.view.View, android.graphics.Rect, int, java.util.ArrayList)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.view.View r2, $r5, $r6;
        android.graphics.Rect r3;
        int i0;
        java.util.ArrayList r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        boolean $z0, $z1;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        r4 := @parameter4: java.util.ArrayList;

        if r2 == null goto label04;

        if r3 != null goto label01;

        r3 = r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

     label01:
        virtualinvoke r2.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r2, r3);

     label02:
        lookupswitch(i0)
        {
            case 1: goto label12;
            case 2: goto label12;
            case 17: goto label13;
            case 33: goto label13;
            case 66: goto label13;
            case 130: goto label13;
            default: goto label03;
        };

     label03:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown direction: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label04:
        if r3 != null goto label02;

        r3 = r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        lookupswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label08;
            case 17: goto label10;
            case 33: goto label10;
            case 66: goto label07;
            case 130: goto label07;
            default: goto label05;
        };

     label05:
        goto label02;

     label06:
        $z1 = virtualinvoke r1.<android.view.ViewGroup: boolean isLayoutRtl()>();

        if $z1 == 0 goto label11;

        specialinvoke r0.<android.view.FocusFinder: void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect)>(r1, r3);

        goto label02;

     label07:
        specialinvoke r0.<android.view.FocusFinder: void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect)>(r1, r3);

        goto label02;

     label08:
        $z0 = virtualinvoke r1.<android.view.ViewGroup: boolean isLayoutRtl()>();

        if $z0 == 0 goto label09;

        specialinvoke r0.<android.view.FocusFinder: void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect)>(r1, r3);

        goto label02;

     label09:
        specialinvoke r0.<android.view.FocusFinder: void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect)>(r1, r3);

        goto label02;

     label10:
        specialinvoke r0.<android.view.FocusFinder: void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect)>(r1, r3);

        goto label02;

     label11:
        specialinvoke r0.<android.view.FocusFinder: void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect)>(r1, r3);

        goto label02;

     label12:
        $r6 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>(r4, r1, r2, r3, i0);

        return $r6;

     label13:
        $r5 = virtualinvoke r0.<android.view.FocusFinder: android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>(r4, r1, r2, r3, i0);

        return $r5;
    }

    private android.view.View findNextFocusInRelativeDirection(java.util.ArrayList, android.view.ViewGroup, android.view.View, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        java.util.ArrayList r1;
        android.view.ViewGroup r2;
        android.view.View r3, $r11, $r12, $r14;
        android.graphics.Rect r4;
        int i0, i1, $i2;
        java.lang.Throwable r5, $r13;
        android.view.FocusFinder$SequentialFocusComparator $r6, $r7, $r8, $r9, $r15;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.graphics.Rect;

        i0 := @parameter4: int;

     label1:
        $r6 = r0.<android.view.FocusFinder: android.view.FocusFinder$SequentialFocusComparator mSequentialFocusComparator>;

        virtualinvoke $r6.<android.view.FocusFinder$SequentialFocusComparator: void setRoot(android.view.ViewGroup)>(r2);

        $r7 = r0.<android.view.FocusFinder: android.view.FocusFinder$SequentialFocusComparator mSequentialFocusComparator>;

        $z0 = virtualinvoke r2.<android.view.ViewGroup: boolean isLayoutRtl()>();

        virtualinvoke $r7.<android.view.FocusFinder$SequentialFocusComparator: void setIsLayoutRtl(boolean)>($z0);

        $r8 = r0.<android.view.FocusFinder: android.view.FocusFinder$SequentialFocusComparator mSequentialFocusComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r8);

     label2:
        $r9 = r0.<android.view.FocusFinder: android.view.FocusFinder$SequentialFocusComparator mSequentialFocusComparator>;

        virtualinvoke $r9.<android.view.FocusFinder$SequentialFocusComparator: void recycle()>();

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        tableswitch(i0)
        {
            case 1: goto label6;
            case 2: goto label5;
            default: goto label3;
        };

     label3:
        $i2 = i1 - 1;

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r12 = (android.view.View) $r10;

        return $r12;

     label4:
        $r13 := @caughtexception;

        r5 = $r13;

        $r15 = r0.<android.view.FocusFinder: android.view.FocusFinder$SequentialFocusComparator mSequentialFocusComparator>;

        virtualinvoke $r15.<android.view.FocusFinder$SequentialFocusComparator: void recycle()>();

        throw r5;

     label5:
        $r11 = staticinvoke <android.view.FocusFinder: android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int)>(r3, r1, i1);

        return $r11;

     label6:
        $r14 = staticinvoke <android.view.FocusFinder: android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int)>(r3, r1, i1);

        return $r14;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup, android.view.View, int)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.view.View r2, r3;
        int i0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r3 = virtualinvoke r2.<android.view.View: android.view.View findUserSetNextFocus(android.view.View,int)>(r1, i0);

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<android.view.View: boolean isFocusable()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r3.<android.view.View: boolean isInTouchMode()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r3.<android.view.View: boolean isFocusableInTouchMode()>();

        if $z2 == 0 goto label2;

     label1:
        return r3;

     label2:
        return null;
    }

    public static android.view.FocusFinder getInstance()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        android.view.FocusFinder $r2;

        $r0 = <android.view.FocusFinder: java.lang.ThreadLocal tlFocusFinder>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (android.view.FocusFinder) $r1;

        return $r2;
    }

    private static android.view.View getNextFocusable(android.view.View, java.util.ArrayList, int)
    {
        android.view.View r0, $r3, $r5;
        java.util.ArrayList r1;
        int i0, i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r2, $r4;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        if r0 == null goto label1;

        i1 = virtualinvoke r1.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r0);

        if i1 < 0 goto label1;

        $i2 = i1 + 1;

        if $i2 >= i0 goto label1;

        $i3 = i1 + 1;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (android.view.View) $r4;

        return $r5;

     label1:
        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (android.view.View) $r2;

        return $r3;

     label2:
        return null;
    }

    private static android.view.View getPreviousFocusable(android.view.View, java.util.ArrayList, int)
    {
        android.view.View r0, $r3, $r5;
        java.util.ArrayList r1;
        int i0, i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r2, $r4;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        if r0 == null goto label1;

        i1 = virtualinvoke r1.<java.util.ArrayList: int indexOf(java.lang.Object)>(r0);

        if i1 <= 0 goto label1;

        $i3 = i1 - 1;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (android.view.View) $r4;

        return $r5;

     label1:
        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i2 = i0 - 1;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (android.view.View) $r2;

        return $r3;

     label2:
        return null;
    }

    private boolean isTouchCandidate(int, int, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.graphics.Rect r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        i2 := @parameter3: int;

        lookupswitch(i2)
        {
            case 17: goto label02;
            case 33: goto label07;
            case 66: goto label05;
            case 130: goto label09;
            default: goto label01;
        };

     label01:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label02:
        $i12 = r1.<android.graphics.Rect: int left>;

        if $i12 > i0 goto label04;

        $i13 = r1.<android.graphics.Rect: int top>;

        if $i13 > i1 goto label04;

        $i14 = r1.<android.graphics.Rect: int bottom>;

        if i1 > $i14 goto label04;

     label03:
        return 1;

     label04:
        return 0;

     label05:
        $i6 = r1.<android.graphics.Rect: int left>;

        if $i6 < i0 goto label06;

        $i7 = r1.<android.graphics.Rect: int top>;

        if $i7 > i1 goto label06;

        $i8 = r1.<android.graphics.Rect: int bottom>;

        if i1 <= $i8 goto label03;

     label06:
        return 0;

     label07:
        $i9 = r1.<android.graphics.Rect: int top>;

        if $i9 > i1 goto label08;

        $i10 = r1.<android.graphics.Rect: int left>;

        if $i10 > i0 goto label08;

        $i11 = r1.<android.graphics.Rect: int right>;

        if i0 <= $i11 goto label03;

     label08:
        return 0;

     label09:
        $i3 = r1.<android.graphics.Rect: int top>;

        if $i3 < i1 goto label10;

        $i4 = r1.<android.graphics.Rect: int left>;

        if $i4 > i0 goto label10;

        $i5 = r1.<android.graphics.Rect: int right>;

        if i0 <= $i5 goto label03;

     label10:
        return 0;
    }

    static int majorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2;
        android.graphics.Rect r0, r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        return $i2;
    }

    static int majorAxisDistanceRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label2;
            case 33: goto label4;
            case 66: goto label3;
            case 130: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i11 = r0.<android.graphics.Rect: int left>;

        $i10 = r1.<android.graphics.Rect: int right>;

        $i12 = $i11 - $i10;

        return $i12;

     label3:
        $i5 = r1.<android.graphics.Rect: int left>;

        $i4 = r0.<android.graphics.Rect: int right>;

        $i6 = $i5 - $i4;

        return $i6;

     label4:
        $i8 = r0.<android.graphics.Rect: int top>;

        $i7 = r1.<android.graphics.Rect: int bottom>;

        $i9 = $i8 - $i7;

        return $i9;

     label5:
        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r0.<android.graphics.Rect: int bottom>;

        $i3 = $i2 - $i1;

        return $i3;
    }

    static int majorAxisDistanceToFarEdge(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2;
        android.graphics.Rect r0, r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i1);

        return $i2;
    }

    static int majorAxisDistanceToFarEdgeRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label2;
            case 33: goto label4;
            case 66: goto label3;
            case 130: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i11 = r0.<android.graphics.Rect: int left>;

        $i10 = r1.<android.graphics.Rect: int left>;

        $i12 = $i11 - $i10;

        return $i12;

     label3:
        $i5 = r1.<android.graphics.Rect: int right>;

        $i4 = r0.<android.graphics.Rect: int right>;

        $i6 = $i5 - $i4;

        return $i6;

     label4:
        $i8 = r0.<android.graphics.Rect: int top>;

        $i7 = r1.<android.graphics.Rect: int top>;

        $i9 = $i8 - $i7;

        return $i9;

     label5:
        $i2 = r1.<android.graphics.Rect: int bottom>;

        $i1 = r0.<android.graphics.Rect: int bottom>;

        $i3 = $i2 - $i1;

        return $i3;
    }

    static int minorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label2;
            case 33: goto label3;
            case 66: goto label2;
            case 130: goto label3;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i11 = r0.<android.graphics.Rect: int top>;

        $i12 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i13 = $i12 / 2;

        $i15 = $i11 + $i13;

        $i14 = r1.<android.graphics.Rect: int top>;

        $i17 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i16 = $i17 / 2;

        $i19 = $i14 + $i16;

        $i18 = $i15 - $i19;

        $i20 = staticinvoke <java.lang.Math: int abs(int)>($i18);

        return $i20;

     label3:
        $i1 = r0.<android.graphics.Rect: int left>;

        $i2 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i3 = $i2 / 2;

        $i4 = $i1 + $i3;

        $i5 = r1.<android.graphics.Rect: int left>;

        $i6 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i7 = $i6 / 2;

        $i8 = $i5 + $i7;

        $i9 = $i4 - $i8;

        $i10 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        return $i10;
    }

    private void setFocusBottomRight(android.view.ViewGroup, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.graphics.Rect r2;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.Rect;

        $i2 = virtualinvoke r1.<android.view.ViewGroup: int getScrollY()>();

        $i3 = virtualinvoke r1.<android.view.ViewGroup: int getHeight()>();

        i0 = $i2 + $i3;

        $i4 = virtualinvoke r1.<android.view.ViewGroup: int getScrollX()>();

        $i5 = virtualinvoke r1.<android.view.ViewGroup: int getWidth()>();

        i1 = $i4 + $i5;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(i1, i0, i1, i0);

        return;
    }

    private void setFocusTopLeft(android.view.ViewGroup, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.graphics.Rect r2;
        int i0, i1;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.Rect;

        i0 = virtualinvoke r1.<android.view.ViewGroup: int getScrollY()>();

        i1 = virtualinvoke r1.<android.view.ViewGroup: int getScrollX()>();

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(i1, i0, i1, i0);

        return;
    }

    boolean beamBeats(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        int i0, $i1, $i2;
        android.graphics.Rect r1, r2, r3;
        boolean z0, z1, $z2, $z3;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        z0 = 1;

        z1 = virtualinvoke r0.<android.view.FocusFinder: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2);

        $z2 = virtualinvoke r0.<android.view.FocusFinder: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        if $z2 != 0 goto label1;

        if z1 != 0 goto label3;

     label1:
        z0 = 0;

     label2:
        return z0;

     label3:
        $z3 = virtualinvoke r0.<android.view.FocusFinder: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        if $z3 == 0 goto label2;

        if i0 == 17 goto label2;

        if i0 == 66 goto label2;

        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2);

        $i2 = staticinvoke <android.view.FocusFinder: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        if $i1 < $i2 goto label2;

        return 0;
    }

    boolean beamsOverlap(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r1, r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label2;
            case 33: goto label5;
            case 66: goto label2;
            case 130: goto label5;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label2:
        $i6 = r2.<android.graphics.Rect: int bottom>;

        $i5 = r1.<android.graphics.Rect: int top>;

        if $i6 < $i5 goto label4;

        $i8 = r2.<android.graphics.Rect: int top>;

        $i7 = r1.<android.graphics.Rect: int bottom>;

        if $i8 > $i7 goto label4;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        $i2 = r2.<android.graphics.Rect: int right>;

        $i1 = r1.<android.graphics.Rect: int left>;

        if $i2 < $i1 goto label6;

        $i4 = r2.<android.graphics.Rect: int left>;

        $i3 = r1.<android.graphics.Rect: int right>;

        if $i4 <= $i3 goto label3;

     label6:
        return 0;
    }

    public android.view.View findNearestTouchable(android.view.ViewGroup, int, int, int, int[])
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        int[] r2;
        java.util.ArrayList r3;
        android.view.View r4, r7;
        android.graphics.Rect r5, r6, $r10;
        android.view.ViewConfiguration $r8;
        android.content.Context $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r11;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: int[];

        r3 = virtualinvoke r1.<android.view.ViewGroup: java.util.ArrayList getTouchables()>();

        i3 = 2147483647;

        r4 = null;

        i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r9 = r1.<android.view.ViewGroup: android.content.Context mContext>;

        $r8 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r9);

        i5 = virtualinvoke $r8.<android.view.ViewConfiguration: int getScaledEdgeSlop()>();

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r5 = $r10;

        r6 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        i6 = 0;

     label01:
        if i6 >= i4 goto label15;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r7 = (android.view.View) $r11;

        virtualinvoke r7.<android.view.View: void getDrawingRect(android.graphics.Rect)>(r6);

        virtualinvoke r1.<android.view.ViewGroup: void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean)>(r7, r6, 1, 1);

        $z0 = specialinvoke r0.<android.view.FocusFinder: boolean isTouchCandidate(int,int,android.graphics.Rect,int)>(i0, i1, r6, i2);

        if $z0 != 0 goto label03;

     label02:
        i6 = i6 + 1;

        goto label01;

     label03:
        i7 = 2147483647;

        lookupswitch(i2)
        {
            case 17: goto label08;
            case 33: goto label10;
            case 66: goto label09;
            case 130: goto label11;
            default: goto label04;
        };

     label04:
        if i7 >= i5 goto label02;

        if r4 == null goto label05;

        $z2 = virtualinvoke r5.<android.graphics.Rect: boolean contains(android.graphics.Rect)>(r6);

        if $z2 != 0 goto label05;

        $z1 = virtualinvoke r6.<android.graphics.Rect: boolean contains(android.graphics.Rect)>(r5);

        if $z1 != 0 goto label02;

        if i7 >= i3 goto label02;

     label05:
        i3 = i7;

        r4 = r7;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r6);

        lookupswitch(i2)
        {
            case 17: goto label07;
            case 33: goto label13;
            case 66: goto label12;
            case 130: goto label14;
            default: goto label06;
        };

     label06:
        goto label02;

     label07:
        $i8 = neg i7;

        r2[0] = $i8;

        goto label02;

     label08:
        $i13 = r6.<android.graphics.Rect: int right>;

        $i12 = i0 - $i13;

        i7 = 1 + $i12;

        goto label04;

     label09:
        i7 = r6.<android.graphics.Rect: int left>;

        goto label04;

     label10:
        $i11 = r6.<android.graphics.Rect: int bottom>;

        $i10 = i1 - $i11;

        i7 = 1 + $i10;

        goto label04;

     label11:
        i7 = r6.<android.graphics.Rect: int top>;

        goto label04;

     label12:
        r2[0] = i7;

        goto label02;

     label13:
        $i9 = neg i7;

        r2[1] = $i9;

        goto label02;

     label14:
        r2[1] = i7;

        goto label02;

     label15:
        return r4;
    }

    public final android.view.View findNextFocus(android.view.ViewGroup, android.view.View, int)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.view.View r2, $r3;
        int i0;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $r3 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>(r1, r2, null, i0);

        return $r3;
    }

    public android.view.View findNextFocusFromRect(android.view.ViewGroup, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        android.view.ViewGroup r1;
        android.graphics.Rect r2, $r3, $r4;
        int i0;
        android.view.View $r5;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        $r3 = r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        $r4 = r0.<android.view.FocusFinder: android.graphics.Rect mFocusedRect>;

        $r5 = specialinvoke r0.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>(r1, null, $r4, i0);

        return $r5;
    }

    android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList, android.view.ViewGroup, android.view.View, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        java.util.ArrayList r1;
        android.view.ViewGroup r2;
        android.view.View r3, r5, r6;
        android.graphics.Rect r4, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.Object $r10;
        boolean $z0;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.graphics.Rect;

        i0 := @parameter4: int;

        $r7 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        virtualinvoke $r7.<android.graphics.Rect: void set(android.graphics.Rect)>(r4);

        lookupswitch(i0)
        {
            case 17: goto label4;
            case 33: goto label6;
            case 66: goto label5;
            case 130: goto label7;
            default: goto label1;
        };

     label1:
        r5 = null;

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label9;

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (android.view.View) $r10;

        if r6 == r3 goto label3;

        if r6 != r2 goto label8;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r18 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i11 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $i12 = 1 + $i11;

        virtualinvoke $r18.<android.graphics.Rect: void offset(int,int)>($i12, 0);

        goto label1;

     label5:
        $r16 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i7 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $i6 = 1 + $i7;

        $i8 = neg $i6;

        virtualinvoke $r16.<android.graphics.Rect: void offset(int,int)>($i8, 0);

        goto label1;

     label6:
        $r17 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i9 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $i10 = 1 + $i9;

        virtualinvoke $r17.<android.graphics.Rect: void offset(int,int)>(0, $i10);

        goto label1;

     label7:
        $r8 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $i3 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $i4 = 1 + $i3;

        $i5 = neg $i4;

        virtualinvoke $r8.<android.graphics.Rect: void offset(int,int)>(0, $i5);

        goto label1;

     label8:
        $r9 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke r6.<android.view.View: void getFocusedRect(android.graphics.Rect)>($r9);

        $r12 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke r2.<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r6, $r12);

        $r13 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        $r11 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $z0 = virtualinvoke r0.<android.view.FocusFinder: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r4, $r13, $r11);

        if $z0 == 0 goto label3;

        $r14 = r0.<android.view.FocusFinder: android.graphics.Rect mBestCandidateRect>;

        $r15 = r0.<android.view.FocusFinder: android.graphics.Rect mOtherRect>;

        virtualinvoke $r14.<android.graphics.Rect: void set(android.graphics.Rect)>($r15);

        r5 = r6;

        goto label3;

     label9:
        return r5;
    }

    int getWeightedDistanceFor(int, int)
    {
        android.view.FocusFinder r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 * 13;

        $i4 = i0 * $i2;

        $i3 = i1 * i1;

        $i5 = $i4 + $i3;

        return $i5;
    }

    boolean isBetterCandidate(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect r1, r2, r3;
        boolean z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: android.graphics.Rect;

        z0 = 1;

        $z1 = virtualinvoke r0.<android.view.FocusFinder: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>(r1, r2, i0);

        if $z1 != 0 goto label2;

        z0 = 0;

     label1:
        return z0;

     label2:
        $z2 = virtualinvoke r0.<android.view.FocusFinder: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>(r1, r3, i0);

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r0.<android.view.FocusFinder: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2, r3);

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r0.<android.view.FocusFinder: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3, r2);

        if $z4 == 0 goto label3;

        return 0;

     label3:
        $i1 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2);

        $i2 = staticinvoke <android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r2);

        $i3 = virtualinvoke r0.<android.view.FocusFinder: int getWeightedDistanceFor(int,int)>($i1, $i2);

        $i4 = staticinvoke <android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        $i5 = staticinvoke <android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r1, r3);

        $i6 = virtualinvoke r0.<android.view.FocusFinder: int getWeightedDistanceFor(int,int)>($i4, $i5);

        if $i3 < $i6 goto label1;

        return 0;
    }

    boolean isCandidate(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.view.FocusFinder r0;
        android.graphics.Rect r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.view.FocusFinder;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        lookupswitch(i0)
        {
            case 17: goto label02;
            case 33: goto label09;
            case 66: goto label06;
            case 130: goto label12;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label02:
        $i19 = r1.<android.graphics.Rect: int right>;

        $i20 = r2.<android.graphics.Rect: int right>;

        if $i19 > $i20 goto label03;

        $i23 = r1.<android.graphics.Rect: int left>;

        $i24 = r2.<android.graphics.Rect: int right>;

        if $i23 < $i24 goto label05;

     label03:
        $i21 = r1.<android.graphics.Rect: int left>;

        $i22 = r2.<android.graphics.Rect: int left>;

        if $i21 <= $i22 goto label05;

     label04:
        return 1;

     label05:
        return 0;

     label06:
        $i8 = r1.<android.graphics.Rect: int left>;

        $i7 = r2.<android.graphics.Rect: int left>;

        if $i8 < $i7 goto label07;

        $i12 = r1.<android.graphics.Rect: int right>;

        $i11 = r2.<android.graphics.Rect: int left>;

        if $i12 > $i11 goto label08;

     label07:
        $i10 = r1.<android.graphics.Rect: int right>;

        $i9 = r2.<android.graphics.Rect: int right>;

        if $i10 < $i9 goto label04;

     label08:
        return 0;

     label09:
        $i13 = r1.<android.graphics.Rect: int bottom>;

        $i14 = r2.<android.graphics.Rect: int bottom>;

        if $i13 > $i14 goto label10;

        $i17 = r1.<android.graphics.Rect: int top>;

        $i18 = r2.<android.graphics.Rect: int bottom>;

        if $i17 < $i18 goto label11;

     label10:
        $i15 = r1.<android.graphics.Rect: int top>;

        $i16 = r2.<android.graphics.Rect: int top>;

        if $i15 > $i16 goto label04;

     label11:
        return 0;

     label12:
        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r2.<android.graphics.Rect: int top>;

        if $i2 < $i1 goto label13;

        $i6 = r1.<android.graphics.Rect: int bottom>;

        $i5 = r2.<android.graphics.Rect: int top>;

        if $i6 > $i5 goto label14;

     label13:
        $i4 = r1.<android.graphics.Rect: int bottom>;

        $i3 = r2.<android.graphics.Rect: int bottom>;

        if $i4 < $i3 goto label04;

     label14:
        return 0;
    }

    boolean isToDirectionOf(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.view.FocusFinder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r1, r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.view.FocusFinder;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label2;
            case 33: goto label6;
            case 66: goto label5;
            case 130: goto label7;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r3;

     label2:
        $i8 = r1.<android.graphics.Rect: int left>;

        $i7 = r2.<android.graphics.Rect: int right>;

        if $i8 < $i7 goto label4;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        $i4 = r1.<android.graphics.Rect: int right>;

        $i3 = r2.<android.graphics.Rect: int left>;

        if $i4 <= $i3 goto label3;

        return 0;

     label6:
        $i6 = r1.<android.graphics.Rect: int top>;

        $i5 = r2.<android.graphics.Rect: int bottom>;

        if $i6 >= $i5 goto label3;

        return 0;

     label7:
        $i2 = r1.<android.graphics.Rect: int bottom>;

        $i1 = r2.<android.graphics.Rect: int top>;

        if $i2 <= $i1 goto label3;

        return 0;
    }
}
