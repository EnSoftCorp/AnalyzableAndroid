public class android.provider.SearchRecentSuggestions extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final int MAX_HISTORY_COUNT;
    public static final java.lang.String[] QUERIES_PROJECTION_1LINE;
    public static final java.lang.String[] QUERIES_PROJECTION_2LINE;
    public static final int QUERIES_PROJECTION_DATE_INDEX;
    public static final int QUERIES_PROJECTION_DISPLAY1_INDEX;
    public static final int QUERIES_PROJECTION_DISPLAY2_INDEX;
    public static final int QUERIES_PROJECTION_QUERY_INDEX;
    private static final java.util.concurrent.Semaphore sWritesInProgress;
    private final java.lang.String mAuthority;
    private final android.content.Context mContext;
    private final android.net.Uri mSuggestionsUri;
    private final boolean mTwoLineDisplay;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;
        java.util.concurrent.Semaphore $r2;

        <android.provider.SearchRecentSuggestions: int QUERIES_PROJECTION_QUERY_INDEX> = 2;

        <android.provider.SearchRecentSuggestions: int QUERIES_PROJECTION_DISPLAY2_INDEX> = 4;

        <android.provider.SearchRecentSuggestions: int QUERIES_PROJECTION_DISPLAY1_INDEX> = 3;

        <android.provider.SearchRecentSuggestions: int QUERIES_PROJECTION_DATE_INDEX> = 1;

        <android.provider.SearchRecentSuggestions: int MAX_HISTORY_COUNT> = 250;

        <android.provider.SearchRecentSuggestions: java.lang.String LOG_TAG> = "SearchSuggestions";

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "_id";

        $r0[1] = "date";

        $r0[2] = "query";

        $r0[3] = "display1";

        <android.provider.SearchRecentSuggestions: java.lang.String[] QUERIES_PROJECTION_1LINE> = $r0;

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "_id";

        $r1[1] = "date";

        $r1[2] = "query";

        $r1[3] = "display1";

        $r1[4] = "display2";

        <android.provider.SearchRecentSuggestions: java.lang.String[] QUERIES_PROJECTION_2LINE> = $r1;

        $r2 = new java.util.concurrent.Semaphore;

        specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int)>(0);

        <android.provider.SearchRecentSuggestions: java.util.concurrent.Semaphore sWritesInProgress> = $r2;

        return;
    }

    public void <init>(android.content.Context, java.lang.String, int)
    {
        android.provider.SearchRecentSuggestions r0;
        android.content.Context r1;
        java.lang.String r2, $r4, $r7, $r10;
        int i0, $i1, $i2;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        android.net.Uri $r11;

        r0 := @this: android.provider.SearchRecentSuggestions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label1;

        $i1 = i0 & 1;

        if $i1 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $i2 = i0 & 2;

        if $i2 == 0 goto label4;

        z0 = 1;

     label3:
        r0.<android.provider.SearchRecentSuggestions: boolean mTwoLineDisplay> = z0;

        r0.<android.provider.SearchRecentSuggestions: android.content.Context mContext> = r1;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>(r2);

        r0.<android.provider.SearchRecentSuggestions: java.lang.String mAuthority> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r7 = r0.<android.provider.SearchRecentSuggestions: java.lang.String mAuthority>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/suggestions");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r10);

        r0.<android.provider.SearchRecentSuggestions: android.net.Uri mSuggestionsUri> = $r11;

        return;

     label4:
        z0 = 0;

        goto label3;
    }

    static void access$000(android.provider.SearchRecentSuggestions, java.lang.String, java.lang.String)
    {
        android.provider.SearchRecentSuggestions r0;
        java.lang.String r1, r2;

        r0 := @parameter0: android.provider.SearchRecentSuggestions;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.provider.SearchRecentSuggestions: void saveRecentQueryBlocking(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    static java.util.concurrent.Semaphore access$100()
    {
        java.util.concurrent.Semaphore $r0;

        $r0 = <android.provider.SearchRecentSuggestions: java.util.concurrent.Semaphore sWritesInProgress>;

        return $r0;
    }

    private void saveRecentQueryBlocking(java.lang.String, java.lang.String)
    {
        android.provider.SearchRecentSuggestions r0;
        java.lang.String r1, r2;
        android.content.ContentResolver r3;
        long l0;
        android.content.ContentValues r4, $r7;
        java.lang.RuntimeException r5, $r10;
        android.content.Context $r6;
        boolean $z0;
        java.lang.Long $r8;
        android.net.Uri $r9;

        r0 := @this: android.provider.SearchRecentSuggestions;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<android.provider.SearchRecentSuggestions: android.content.Context mContext>;

        r3 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label1:
        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>()>();

        r4 = $r7;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("display1", r1);

        $z0 = r0.<android.provider.SearchRecentSuggestions: boolean mTwoLineDisplay>;

        if $z0 == 0 goto label2;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("display2", r2);

     label2:
        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("query", r1);

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date", $r8);

        $r9 = r0.<android.provider.SearchRecentSuggestions: android.net.Uri mSuggestionsUri>;

        virtualinvoke r3.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r9, r4);

     label3:
        virtualinvoke r0.<android.provider.SearchRecentSuggestions: void truncateHistory(android.content.ContentResolver,int)>(r3, 250);

        return;

     label4:
        $r10 := @caughtexception;

        r5 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SearchSuggestions", "saveRecentQuery", r5);

        goto label3;

        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void clearHistory()
    {
        android.provider.SearchRecentSuggestions r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;

        r0 := @this: android.provider.SearchRecentSuggestions;

        $r1 = r0.<android.provider.SearchRecentSuggestions: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke r0.<android.provider.SearchRecentSuggestions: void truncateHistory(android.content.ContentResolver,int)>($r2, 0);

        return;
    }

    public void saveRecentQuery(java.lang.String, java.lang.String)
    {
        android.provider.SearchRecentSuggestions r0;
        java.lang.String r1, r2;
        boolean $z0, $z1, $z2;
        android.provider.SearchRecentSuggestions$1 $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.provider.SearchRecentSuggestions;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<android.provider.SearchRecentSuggestions: boolean mTwoLineDisplay>;

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        $r3 = new android.provider.SearchRecentSuggestions$1;

        specialinvoke $r3.<android.provider.SearchRecentSuggestions$1: void <init>(android.provider.SearchRecentSuggestions,java.lang.String,java.lang.String,java.lang.String)>(r0, "saveRecentQuery", r1, r2);

        virtualinvoke $r3.<android.provider.SearchRecentSuggestions$1: void start()>();

        return;
    }

    protected void truncateHistory(android.content.ContentResolver, int)
    {
        android.provider.SearchRecentSuggestions r0;
        android.content.ContentResolver r1;
        int i0;
        java.lang.String r2, $r7;
        java.lang.RuntimeException r3, $r11;
        android.net.Uri $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: android.provider.SearchRecentSuggestions;

        r1 := @parameter0: android.content.ContentResolver;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r10;

     label1:
        r2 = null;

        if i0 <= 0 goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id IN (SELECT _id FROM suggestions ORDER BY date DESC LIMIT -1 OFFSET ");

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r4 = r0.<android.provider.SearchRecentSuggestions: android.net.Uri mSuggestionsUri>;

        virtualinvoke r1.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r4, r2, null);

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SearchSuggestions", "truncateHistory", r3);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    void waitForSave()
    {
        android.provider.SearchRecentSuggestions r0;
        java.util.concurrent.Semaphore $r1, $r2;
        int $i0;

        r0 := @this: android.provider.SearchRecentSuggestions;

     label1:
        $r1 = <android.provider.SearchRecentSuggestions: java.util.concurrent.Semaphore sWritesInProgress>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void acquireUninterruptibly()>();

        $r2 = <android.provider.SearchRecentSuggestions: java.util.concurrent.Semaphore sWritesInProgress>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.Semaphore: int availablePermits()>();

        if $i0 > 0 goto label1;

        return;
    }
}
