public class android.content.ContentProviderClient extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static android.os.Handler sAnrHandler;
    private android.content.ContentProviderClient$NotRespondingRunnable mAnrRunnable;
    private long mAnrTimeout;
    private final android.content.IContentProvider mContentProvider;
    private final android.content.ContentResolver mContentResolver;
    private final dalvik.system.CloseGuard mGuard;
    private final java.lang.String mPackageName;
    private boolean mReleased;
    private final boolean mStable;

    void <init>(android.content.ContentResolver, android.content.IContentProvider, boolean)
    {
        android.content.ContentProviderClient r0;
        android.content.ContentResolver r1;
        android.content.IContentProvider r2;
        boolean z0;
        dalvik.system.CloseGuard $r3, $r5;
        java.lang.String $r4;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.content.IContentProvider;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.content.ContentProviderClient: dalvik.system.CloseGuard mGuard> = $r3;

        r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver> = r1;

        r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider> = r2;

        $r4 = r1.<android.content.ContentResolver: java.lang.String mPackageName>;

        r0.<android.content.ContentProviderClient: java.lang.String mPackageName> = $r4;

        r0.<android.content.ContentProviderClient: boolean mStable> = z0;

        $r5 = r0.<android.content.ContentProviderClient: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r5.<dalvik.system.CloseGuard: void open(java.lang.String)>("release");

        return;
    }

    static android.content.IContentProvider access$100(android.content.ContentProviderClient)
    {
        android.content.ContentProviderClient r0;
        android.content.IContentProvider $r1;

        r0 := @parameter0: android.content.ContentProviderClient;

        $r1 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        return $r1;
    }

    static android.content.ContentResolver access$200(android.content.ContentProviderClient)
    {
        android.content.ContentProviderClient r0;
        android.content.ContentResolver $r1;

        r0 := @parameter0: android.content.ContentProviderClient;

        $r1 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        return $r1;
    }

    private void afterRemote()
    {
        android.content.ContentProviderClient r0;
        android.content.ContentProviderClient$NotRespondingRunnable $r1, $r2;
        android.os.Handler $r3;

        r0 := @this: android.content.ContentProviderClient;

        $r1 = r0.<android.content.ContentProviderClient: android.content.ContentProviderClient$NotRespondingRunnable mAnrRunnable>;

        if $r1 == null goto label1;

        $r3 = <android.content.ContentProviderClient: android.os.Handler sAnrHandler>;

        $r2 = r0.<android.content.ContentProviderClient: android.content.ContentProviderClient$NotRespondingRunnable mAnrRunnable>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void beforeRemote()
    {
        android.content.ContentProviderClient r0;
        android.content.ContentProviderClient$NotRespondingRunnable $r1, $r2;
        long $l0;
        android.os.Handler $r3;

        r0 := @this: android.content.ContentProviderClient;

        $r1 = r0.<android.content.ContentProviderClient: android.content.ContentProviderClient$NotRespondingRunnable mAnrRunnable>;

        if $r1 == null goto label1;

        $r3 = <android.content.ContentProviderClient: android.os.Handler sAnrHandler>;

        $r2 = r0.<android.content.ContentProviderClient: android.content.ContentProviderClient$NotRespondingRunnable mAnrRunnable>;

        $l0 = r0.<android.content.ContentProviderClient: long mAnrTimeout>;

        virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r2, $l0);

     label1:
        return;
    }

    public static void releaseQuietly(android.content.ContentProviderClient)
    {
        android.content.ContentProviderClient r0;
        java.lang.Exception $r2;

        r0 := @parameter0: android.content.ContentProviderClient;

        if r0 == null goto label2;

     label1:
        virtualinvoke r0.<android.content.ContentProviderClient: boolean release()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) throws android.os.RemoteException, android.content.OperationApplicationException
    {
        android.content.ContentProviderClient r0;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r10;
        android.os.DeadObjectException r3, $r7;
        android.content.ContentProviderResult[] r4;
        java.lang.String $r5;
        android.content.IContentProvider $r6, $r8;
        boolean $z0;
        android.content.ContentResolver $r9;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: java.util.ArrayList;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r6 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r5 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r4 = interfaceinvoke $r6.<android.content.IContentProvider: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>($r5, r1);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r9 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r8 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r9.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r8);

     label5:
        throw r3;

     label6:
        $r10 := @caughtexception;

        r2 = $r10;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r2;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public int bulkInsert(android.net.Uri, android.content.ContentValues[]) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        android.content.ContentValues[] r2;
        java.lang.Throwable r3, $r10;
        android.os.DeadObjectException r4, $r7;
        int i0;
        java.lang.String $r5;
        android.content.IContentProvider $r6, $r8;
        boolean $z0;
        android.content.ContentResolver $r9;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues[];

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r6 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r5 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        i0 = interfaceinvoke $r6.<android.content.IContentProvider: int bulkInsert(java.lang.String,android.net.Uri,android.content.ContentValues[])>($r5, r1, r2);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return i0;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r9 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r8 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r9.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r8);

     label5:
        throw r4;

     label6:
        $r10 := @caughtexception;

        r3 = $r10;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r3;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        java.lang.String r1, r2, $r7;
        android.os.Bundle r3, r6;
        java.lang.Throwable r4, $r12;
        android.os.DeadObjectException r5, $r9;
        android.content.IContentProvider $r8, $r10;
        boolean $z0;
        android.content.ContentResolver $r11;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r8 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r7 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r6 = interfaceinvoke $r8.<android.content.IContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>($r7, r1, r2, r3);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r6;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r11 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r10 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r11.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r10);

     label5:
        throw r5;

     label6:
        $r12 := @caughtexception;

        r4 = $r12;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r4;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public final android.net.Uri canonicalize(android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1, r4;
        java.lang.Throwable r2, $r10;
        android.os.DeadObjectException r3, $r7;
        java.lang.String $r5;
        android.content.IContentProvider $r6, $r8;
        boolean $z0;
        android.content.ContentResolver $r9;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r6 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r5 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r4 = interfaceinvoke $r6.<android.content.IContentProvider: android.net.Uri canonicalize(java.lang.String,android.net.Uri)>($r5, r1);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r9 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r8 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r9.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r8);

     label5:
        throw r3;

     label6:
        $r10 := @caughtexception;

        r2 = $r10;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r2;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String r2, $r6;
        java.lang.String[] r3;
        java.lang.Throwable r4, $r8;
        android.os.DeadObjectException r5, $r9;
        int i0;
        android.content.IContentProvider $r7, $r10;
        boolean $z0;
        android.content.ContentResolver $r11;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r7 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r6 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        i0 = interfaceinvoke $r7.<android.content.IContentProvider: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>($r6, r1, r2, r3);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return i0;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r11 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r10 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r11.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r10);

     label5:
        throw r5;

     label6:
        $r8 := @caughtexception;

        r4 = $r8;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r4;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.ContentProviderClient r0;
        dalvik.system.CloseGuard $r1, $r2;

        r0 := @this: android.content.ContentProviderClient;

        $r1 = r0.<android.content.ContentProviderClient: dalvik.system.CloseGuard mGuard>;

        if $r1 == null goto label1;

        $r2 = r0.<android.content.ContentProviderClient: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label1:
        return;
    }

    public android.content.ContentProvider getLocalContentProvider()
    {
        android.content.ContentProviderClient r0;
        android.content.IContentProvider $r1;
        android.content.ContentProvider $r2;

        r0 := @this: android.content.ContentProviderClient;

        $r1 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r2 = staticinvoke <android.content.ContentProvider: android.content.ContentProvider coerceToLocalContentProvider(android.content.IContentProvider)>($r1);

        return $r2;
    }

    public java.lang.String[] getStreamTypes(android.net.Uri, java.lang.String) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.Throwable r3, $r7;
        android.os.DeadObjectException r4, $r8;
        java.lang.String[] r5;
        android.content.IContentProvider $r6, $r9;
        boolean $z0;
        android.content.ContentResolver $r10;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r6 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        r5 = interfaceinvoke $r6.<android.content.IContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>(r1, r2);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r10 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r9 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r10.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r9);

     label5:
        throw r4;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r3;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public java.lang.String getType(android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.Throwable r2, $r6;
        android.os.DeadObjectException r3, $r7;
        java.lang.String r4;
        android.content.IContentProvider $r5, $r8;
        boolean $z0;
        android.content.ContentResolver $r9;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r5 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        r4 = interfaceinvoke $r5.<android.content.IContentProvider: java.lang.String getType(android.net.Uri)>(r1);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r9 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r8 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r9.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r8);

     label5:
        throw r3;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r2;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1, r5;
        android.content.ContentValues r2;
        java.lang.Throwable r3, $r11;
        android.os.DeadObjectException r4, $r8;
        java.lang.String $r6;
        android.content.IContentProvider $r7, $r9;
        boolean $z0;
        android.content.ContentResolver $r10;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r7 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r6 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r5 = interfaceinvoke $r7.<android.content.IContentProvider: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>($r6, r1, r2);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r10 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r9 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r10.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r9);

     label5:
        throw r4;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r3;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.content.res.AssetFileDescriptor $r3;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r1, r2, null);

        return $r3;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String r2, $r8;
        android.os.CancellationSignal r3;
        android.os.ICancellationSignal r4;
        java.lang.Throwable r5, $r11;
        android.os.DeadObjectException r6, $r12;
        android.content.res.AssetFileDescriptor r7;
        android.content.IContentProvider $r9, $r10, $r14;
        boolean $z0;
        android.content.ContentResolver $r13;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.CancellationSignal;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

        r4 = null;

        if r3 == null goto label2;

     label1:
        virtualinvoke r3.<android.os.CancellationSignal: void throwIfCanceled()>();

        $r10 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        r4 = interfaceinvoke $r10.<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>();

        virtualinvoke r3.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(r4);

     label2:
        $r9 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r8 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r7 = interfaceinvoke $r9.<android.content.IContentProvider: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>($r8, r1, r2, r4);

     label3:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r7;

     label4:
        $r12 := @caughtexception;

        r6 = $r12;

     label5:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label6;

        $r13 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r14 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r13.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r14);

     label6:
        throw r6;

     label7:
        $r11 := @caughtexception;

        r5 = $r11;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r5;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.DeadObjectException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.ParcelFileDescriptor $r3;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>(r1, r2, null);

        return $r3;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String, android.os.CancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String r2, $r8;
        android.os.CancellationSignal r3;
        android.os.ICancellationSignal r4;
        java.lang.Throwable r5, $r13;
        android.os.DeadObjectException r6, $r11;
        android.os.ParcelFileDescriptor r7;
        android.content.IContentProvider $r9, $r10, $r12;
        boolean $z0;
        android.content.ContentResolver $r14;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.CancellationSignal;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

        r4 = null;

        if r3 == null goto label2;

     label1:
        virtualinvoke r3.<android.os.CancellationSignal: void throwIfCanceled()>();

        $r10 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        r4 = interfaceinvoke $r10.<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>();

        virtualinvoke r3.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(r4);

     label2:
        $r9 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r8 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r7 = interfaceinvoke $r9.<android.content.IContentProvider: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>($r8, r1, r2, r4);

     label3:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r7;

     label4:
        $r11 := @caughtexception;

        r6 = $r11;

     label5:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label6;

        $r14 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r12 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r14.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r12);

     label6:
        throw r6;

     label7:
        $r13 := @caughtexception;

        r5 = $r13;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r5;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.DeadObjectException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public final android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.content.res.AssetFileDescriptor $r4;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke r0.<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>(r1, r2, r3, null);

        return $r4;
    }

    public final android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri, java.lang.String, android.os.Bundle, android.os.CancellationSignal) throws android.os.RemoteException, java.io.FileNotFoundException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String r2, $r9;
        android.os.Bundle r3;
        android.os.CancellationSignal r4;
        android.os.ICancellationSignal r5;
        java.lang.Throwable r6, $r15;
        android.os.DeadObjectException r7, $r12;
        android.content.res.AssetFileDescriptor r8;
        android.content.IContentProvider $r10, $r11, $r14;
        boolean $z0;
        android.content.ContentResolver $r13;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.CancellationSignal;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

        r5 = null;

        if r4 == null goto label2;

     label1:
        virtualinvoke r4.<android.os.CancellationSignal: void throwIfCanceled()>();

        $r11 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        r5 = interfaceinvoke $r11.<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>();

        virtualinvoke r4.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(r5);

     label2:
        $r10 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r9 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r8 = interfaceinvoke $r10.<android.content.IContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>($r9, r1, r2, r3, r5);

     label3:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r8;

     label4:
        $r12 := @caughtexception;

        r7 = $r12;

     label5:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label6;

        $r13 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r14 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r13.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r14);

     label6:
        throw r7;

     label7:
        $r15 := @caughtexception;

        r6 = $r15;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r6;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.DeadObjectException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.database.Cursor $r6;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r6 = virtualinvoke r0.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>(r1, r2, r3, r4, r5, null);

        return $r6;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.os.CancellationSignal) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, $r11;
        android.os.CancellationSignal r6;
        android.os.ICancellationSignal r7;
        java.lang.Throwable r8, $r15;
        android.os.DeadObjectException r9, $r14;
        android.database.Cursor r10;
        android.content.IContentProvider $r12, $r13, $r16;
        boolean $z0;
        android.content.ContentResolver $r17;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: android.os.CancellationSignal;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

        r7 = null;

        if r6 == null goto label2;

     label1:
        virtualinvoke r6.<android.os.CancellationSignal: void throwIfCanceled()>();

        $r13 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        r7 = interfaceinvoke $r13.<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>();

        virtualinvoke r6.<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>(r7);

     label2:
        $r12 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r11 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r10 = interfaceinvoke $r12.<android.content.IContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>($r11, r1, r2, r3, r4, r5, r7);

     label3:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r10;

     label4:
        $r14 := @caughtexception;

        r9 = $r14;

     label5:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label6;

        $r17 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r16 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r17.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r16);

     label6:
        throw r9;

     label7:
        $r15 := @caughtexception;

        r8 = $r15;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r8;

        catch android.os.DeadObjectException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.DeadObjectException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public boolean release()
    {
        android.content.ContentProviderClient r0;
        java.lang.Throwable r1, $r7;
        boolean z0, z1, $z2, $z3;
        dalvik.system.CloseGuard $r2;
        android.content.IContentProvider $r3, $r5;
        android.content.ContentResolver $r4, $r6;
        java.lang.IllegalStateException $r8;

        r0 := @this: android.content.ContentProviderClient;

        entermonitor r0;

     label1:
        $z2 = r0.<android.content.ContentProviderClient: boolean mReleased>;

        if $z2 == 0 goto label5;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already released");

        throw $r8;

     label2:
        $r7 := @caughtexception;

        r1 = $r7;

     label3:
        exitmonitor r0;

     label4:
        throw r1;

     label5:
        r0.<android.content.ContentProviderClient: boolean mReleased> = 1;

        $r2 = r0.<android.content.ContentProviderClient: dalvik.system.CloseGuard mGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

        $z3 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z3 == 0 goto label7;

        $r6 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r5 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        z1 = virtualinvoke $r6.<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>($r5);

        exitmonitor r0;

     label6:
        return z1;

     label7:
        $r4 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r3 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        z0 = virtualinvoke $r4.<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>($r3);

        exitmonitor r0;

     label8:
        return z0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
        catch java.lang.Throwable from label7 to label8 with label2;
    }

    public void setDetectNotResponding(long)
    {
        android.content.ContentProviderClient r0;
        long l0;
        java.lang.Throwable r1, $r7;
        byte $b1;
        android.content.ContentProviderClient$NotRespondingRunnable $r2, $r6;
        android.os.Handler $r3, $r4;
        android.os.Looper $r5;

        r0 := @this: android.content.ContentProviderClient;

        l0 := @parameter0: long;

        entermonitor class "android/content/ContentProviderClient";

     label01:
        r0.<android.content.ContentProviderClient: long mAnrTimeout> = l0;

     label02:
        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label07;

     label03:
        $r2 = r0.<android.content.ContentProviderClient: android.content.ContentProviderClient$NotRespondingRunnable mAnrRunnable>;

        if $r2 != null goto label04;

        $r6 = new android.content.ContentProviderClient$NotRespondingRunnable;

        specialinvoke $r6.<android.content.ContentProviderClient$NotRespondingRunnable: void <init>(android.content.ContentProviderClient,android.content.ContentProviderClient$1)>(r0, null);

        r0.<android.content.ContentProviderClient: android.content.ContentProviderClient$NotRespondingRunnable mAnrRunnable> = $r6;

     label04:
        $r3 = <android.content.ContentProviderClient: android.os.Handler sAnrHandler>;

        if $r3 != null goto label05;

        $r4 = new android.os.Handler;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>($r5, null, 1);

        <android.content.ContentProviderClient: android.os.Handler sAnrHandler> = $r4;

     label05:
        exitmonitor class "android/content/ContentProviderClient";

     label06:
        return;

     label07:
        r0.<android.content.ContentProviderClient: android.content.ContentProviderClient$NotRespondingRunnable mAnrRunnable> = null;

     label08:
        goto label05;

     label09:
        $r7 := @caughtexception;

        r1 = $r7;

     label10:
        exitmonitor class "android/content/ContentProviderClient";

     label11:
        throw r1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public final android.net.Uri uncanonicalize(android.net.Uri) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1, r4;
        java.lang.Throwable r2, $r7;
        android.os.DeadObjectException r3, $r8;
        java.lang.String $r5;
        android.content.IContentProvider $r6, $r9;
        boolean $z0;
        android.content.ContentResolver $r10;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r6 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r5 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        r4 = interfaceinvoke $r6.<android.content.IContentProvider: android.net.Uri uncanonicalize(java.lang.String,android.net.Uri)>($r5, r1);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return r4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r10 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r9 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r10.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r9);

     label5:
        throw r3;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r2;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]) throws android.os.RemoteException
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3, $r7;
        java.lang.String[] r4;
        java.lang.Throwable r5, $r12;
        android.os.DeadObjectException r6, $r9;
        int i0;
        android.content.IContentProvider $r8, $r10;
        boolean $z0;
        android.content.ContentResolver $r11;

        r0 := @this: android.content.ContentProviderClient;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        specialinvoke r0.<android.content.ContentProviderClient: void beforeRemote()>();

     label1:
        $r8 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        $r7 = r0.<android.content.ContentProviderClient: java.lang.String mPackageName>;

        i0 = interfaceinvoke $r8.<android.content.IContentProvider: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, r1, r2, r3, r4);

     label2:
        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        return i0;

     label3:
        $r9 := @caughtexception;

        r6 = $r9;

     label4:
        $z0 = r0.<android.content.ContentProviderClient: boolean mStable>;

        if $z0 != 0 goto label5;

        $r11 = r0.<android.content.ContentProviderClient: android.content.ContentResolver mContentResolver>;

        $r10 = r0.<android.content.ContentProviderClient: android.content.IContentProvider mContentProvider>;

        virtualinvoke $r11.<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>($r10);

     label5:
        throw r6;

     label6:
        $r12 := @caughtexception;

        r5 = $r12;

        specialinvoke r0.<android.content.ContentProviderClient: void afterRemote()>();

        throw r5;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public static void <clinit>()
    {
        <android.content.ContentProviderClient: java.lang.String TAG> = "ContentProviderClient";

        return;
    }
}
