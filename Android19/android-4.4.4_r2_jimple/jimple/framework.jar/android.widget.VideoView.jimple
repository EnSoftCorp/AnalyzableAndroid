public class android.widget.VideoView extends android.view.SurfaceView implements android.widget.MediaController$MediaPlayerControl, android.media.SubtitleController$Anchor
{
    private static final int STATE_ERROR;
    private static final int STATE_IDLE;
    private static final int STATE_PAUSED;
    private static final int STATE_PLAYBACK_COMPLETED;
    private static final int STATE_PLAYING;
    private static final int STATE_PREPARED;
    private static final int STATE_PREPARING;
    private java.lang.String TAG;
    private int mAudioSession;
    private android.media.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener;
    private boolean mCanPause;
    private boolean mCanSeekBack;
    private boolean mCanSeekForward;
    private android.media.MediaPlayer$OnCompletionListener mCompletionListener;
    private int mCurrentBufferPercentage;
    private int mCurrentState;
    private android.media.MediaPlayer$OnErrorListener mErrorListener;
    private java.util.Map mHeaders;
    private android.media.MediaPlayer$OnInfoListener mInfoListener;
    private android.widget.MediaController mMediaController;
    private android.media.MediaPlayer mMediaPlayer;
    private android.media.MediaPlayer$OnCompletionListener mOnCompletionListener;
    private android.media.MediaPlayer$OnErrorListener mOnErrorListener;
    private android.media.MediaPlayer$OnInfoListener mOnInfoListener;
    private android.media.MediaPlayer$OnPreparedListener mOnPreparedListener;
    private java.util.Vector mPendingSubtitleTracks;
    android.media.MediaPlayer$OnPreparedListener mPreparedListener;
    android.view.SurfaceHolder$Callback mSHCallback;
    private int mSeekWhenPrepared;
    android.media.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener;
    private android.media.SubtitleTrack$RenderingWidget mSubtitleWidget;
    private android.media.SubtitleTrack$RenderingWidget$OnChangedListener mSubtitlesChangedListener;
    private int mSurfaceHeight;
    private android.view.SurfaceHolder mSurfaceHolder;
    private int mSurfaceWidth;
    private int mTargetState;
    private android.net.Uri mUri;
    private int mVideoHeight;
    private int mVideoWidth;

    public void <init>(android.content.Context)
    {
        android.widget.VideoView r0;
        android.content.Context r1;
        android.widget.VideoView$1 $r2;
        android.widget.VideoView$2 $r3;
        android.widget.VideoView$3 $r4;
        android.widget.VideoView$4 $r5;
        android.widget.VideoView$5 $r6;
        android.widget.VideoView$6 $r7;
        android.widget.VideoView$7 $r8;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context)>(r1);

        r0.<android.widget.VideoView: java.lang.String TAG> = "VideoView";

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        r0.<android.widget.VideoView: int mTargetState> = 0;

        r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder> = null;

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = null;

        $r2 = new android.widget.VideoView$1;

        specialinvoke $r2.<android.widget.VideoView$1: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener> = $r2;

        $r3 = new android.widget.VideoView$2;

        specialinvoke $r3.<android.widget.VideoView$2: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mPreparedListener> = $r3;

        $r4 = new android.widget.VideoView$3;

        specialinvoke $r4.<android.widget.VideoView$3: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mCompletionListener> = $r4;

        $r5 = new android.widget.VideoView$4;

        specialinvoke $r5.<android.widget.VideoView$4: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener> = $r5;

        $r6 = new android.widget.VideoView$5;

        specialinvoke $r6.<android.widget.VideoView$5: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener> = $r6;

        $r7 = new android.widget.VideoView$6;

        specialinvoke $r7.<android.widget.VideoView$6: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener> = $r7;

        $r8 = new android.widget.VideoView$7;

        specialinvoke $r8.<android.widget.VideoView$7: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.view.SurfaceHolder$Callback mSHCallback> = $r8;

        specialinvoke r0.<android.widget.VideoView: void initVideoView()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.VideoView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        specialinvoke r0.<android.widget.VideoView: void initVideoView()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.VideoView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.widget.VideoView$1 $r3;
        android.widget.VideoView$2 $r4;
        android.widget.VideoView$3 $r5;
        android.widget.VideoView$4 $r6;
        android.widget.VideoView$5 $r7;
        android.widget.VideoView$6 $r8;
        android.widget.VideoView$7 $r9;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.widget.VideoView: java.lang.String TAG> = "VideoView";

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        r0.<android.widget.VideoView: int mTargetState> = 0;

        r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder> = null;

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = null;

        $r3 = new android.widget.VideoView$1;

        specialinvoke $r3.<android.widget.VideoView$1: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener> = $r3;

        $r4 = new android.widget.VideoView$2;

        specialinvoke $r4.<android.widget.VideoView$2: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mPreparedListener> = $r4;

        $r5 = new android.widget.VideoView$3;

        specialinvoke $r5.<android.widget.VideoView$3: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mCompletionListener> = $r5;

        $r6 = new android.widget.VideoView$4;

        specialinvoke $r6.<android.widget.VideoView$4: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener> = $r6;

        $r7 = new android.widget.VideoView$5;

        specialinvoke $r7.<android.widget.VideoView$5: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener> = $r7;

        $r8 = new android.widget.VideoView$6;

        specialinvoke $r8.<android.widget.VideoView$6: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener> = $r8;

        $r9 = new android.widget.VideoView$7;

        specialinvoke $r9.<android.widget.VideoView$7: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.view.SurfaceHolder$Callback mSHCallback> = $r9;

        specialinvoke r0.<android.widget.VideoView: void initVideoView()>();

        return;
    }

    static int access$000(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mVideoWidth>;

        return $i0;
    }

    static int access$002(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mVideoWidth> = i0;

        return i0;
    }

    static int access$100(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mVideoHeight>;

        return $i0;
    }

    static int access$1000(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mSurfaceWidth>;

        return $i0;
    }

    static int access$1002(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mSurfaceWidth> = i0;

        return i0;
    }

    static int access$102(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mVideoHeight> = i0;

        return i0;
    }

    static int access$1100(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mSurfaceHeight>;

        return $i0;
    }

    static int access$1102(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mSurfaceHeight> = i0;

        return i0;
    }

    static int access$1200(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mTargetState>;

        return $i0;
    }

    static int access$1202(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mTargetState> = i0;

        return i0;
    }

    static android.media.MediaPlayer$OnCompletionListener access$1300(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnCompletionListener $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mOnCompletionListener>;

        return $r1;
    }

    static android.media.MediaPlayer$OnInfoListener access$1400(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnInfoListener $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mOnInfoListener>;

        return $r1;
    }

    static java.lang.String access$1500(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        java.lang.String $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: java.lang.String TAG>;

        return $r1;
    }

    static android.media.MediaPlayer$OnErrorListener access$1600(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnErrorListener $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mOnErrorListener>;

        return $r1;
    }

    static android.content.Context access$1700(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.content.Context mContext>;

        return $r1;
    }

    static android.content.Context access$1800(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.content.Context mContext>;

        return $r1;
    }

    static int access$1902(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mCurrentBufferPercentage> = i0;

        return i0;
    }

    static android.view.SurfaceHolder access$2002(android.widget.VideoView, android.view.SurfaceHolder)
    {
        android.widget.VideoView r0;
        android.view.SurfaceHolder r1;

        r0 := @parameter0: android.widget.VideoView;

        r1 := @parameter1: android.view.SurfaceHolder;

        r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder> = r1;

        return r1;
    }

    static int access$202(android.widget.VideoView, int)
    {
        android.widget.VideoView r0;
        int i0;

        r0 := @parameter0: android.widget.VideoView;

        i0 := @parameter1: int;

        r0.<android.widget.VideoView: int mCurrentState> = i0;

        return i0;
    }

    static void access$2100(android.widget.VideoView)
    {
        android.widget.VideoView r0;

        r0 := @parameter0: android.widget.VideoView;

        specialinvoke r0.<android.widget.VideoView: void openVideo()>();

        return;
    }

    static void access$2200(android.widget.VideoView, boolean)
    {
        android.widget.VideoView r0;
        boolean z0;

        r0 := @parameter0: android.widget.VideoView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.VideoView: void release(boolean)>(z0);

        return;
    }

    static boolean access$302(android.widget.VideoView, boolean)
    {
        android.widget.VideoView r0;
        boolean z0;

        r0 := @parameter0: android.widget.VideoView;

        z0 := @parameter1: boolean;

        r0.<android.widget.VideoView: boolean mCanPause> = z0;

        return z0;
    }

    static boolean access$402(android.widget.VideoView, boolean)
    {
        android.widget.VideoView r0;
        boolean z0;

        r0 := @parameter0: android.widget.VideoView;

        z0 := @parameter1: boolean;

        r0.<android.widget.VideoView: boolean mCanSeekBack> = z0;

        return z0;
    }

    static boolean access$502(android.widget.VideoView, boolean)
    {
        android.widget.VideoView r0;
        boolean z0;

        r0 := @parameter0: android.widget.VideoView;

        z0 := @parameter1: boolean;

        r0.<android.widget.VideoView: boolean mCanSeekForward> = z0;

        return z0;
    }

    static android.media.MediaPlayer$OnPreparedListener access$600(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnPreparedListener $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mOnPreparedListener>;

        return $r1;
    }

    static android.media.MediaPlayer access$700(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        return $r1;
    }

    static android.widget.MediaController access$800(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        android.widget.MediaController $r1;

        r0 := @parameter0: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        return $r1;
    }

    static int access$900(android.widget.VideoView)
    {
        android.widget.VideoView r0;
        int $i0;

        r0 := @parameter0: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mSeekWhenPrepared>;

        return $i0;
    }

    private void attachMediaController()
    {
        android.widget.VideoView r0;
        android.view.View r1;
        android.media.MediaPlayer $r2;
        android.widget.MediaController $r3, $r4, $r6, $r7;
        android.view.ViewParent $r5, $r8;
        boolean $z0, $z1;

        r0 := @this: android.widget.VideoView;

        $r2 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r4.<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController$MediaPlayerControl)>(r0);

        $r5 = virtualinvoke r0.<android.widget.VideoView: android.view.ViewParent getParent()>();

        $z0 = $r5 instanceof android.view.View;

        if $z0 == 0 goto label3;

        $r8 = virtualinvoke r0.<android.widget.VideoView: android.view.ViewParent getParent()>();

        r1 = (android.view.View) $r8;

     label1:
        $r6 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r6.<android.widget.MediaController: void setAnchorView(android.view.View)>(r1);

        $r7 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        $z1 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        virtualinvoke $r7.<android.widget.MediaController: void setEnabled(boolean)>($z1);

     label2:
        return;

     label3:
        r1 = r0;

        goto label1;
    }

    private void initVideoView()
    {
        android.widget.VideoView r0;
        android.view.SurfaceHolder $r1, $r3;
        android.view.SurfaceHolder$Callback $r2;
        java.util.Vector $r4;

        r0 := @this: android.widget.VideoView;

        r0.<android.widget.VideoView: int mVideoWidth> = 0;

        r0.<android.widget.VideoView: int mVideoHeight> = 0;

        $r1 = virtualinvoke r0.<android.widget.VideoView: android.view.SurfaceHolder getHolder()>();

        $r2 = r0.<android.widget.VideoView: android.view.SurfaceHolder$Callback mSHCallback>;

        interfaceinvoke $r1.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>($r2);

        $r3 = virtualinvoke r0.<android.widget.VideoView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r3.<android.view.SurfaceHolder: void setType(int)>(3);

        virtualinvoke r0.<android.widget.VideoView: void setFocusable(boolean)>(1);

        virtualinvoke r0.<android.widget.VideoView: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r0.<android.widget.VideoView: boolean requestFocus()>();

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks> = $r4;

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        r0.<android.widget.VideoView: int mTargetState> = 0;

        return;
    }

    private boolean isInPlaybackState()
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer $r1;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if $r1 == null goto label1;

        $i0 = r0.<android.widget.VideoView: int mCurrentState>;

        if $i0 == -1 goto label1;

        $i1 = r0.<android.widget.VideoView: int mCurrentState>;

        if $i1 == 0 goto label1;

        $i2 = r0.<android.widget.VideoView: int mCurrentState>;

        if $i2 == 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void measureAndLayoutSubtitleWidget()
    {
        android.widget.VideoView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.media.SubtitleTrack$RenderingWidget $r1;

        r0 := @this: android.widget.VideoView;

        $i2 = virtualinvoke r0.<android.widget.VideoView: int getWidth()>();

        $i3 = virtualinvoke r0.<android.widget.VideoView: int getPaddingLeft()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<android.widget.VideoView: int getPaddingRight()>();

        i0 = $i4 - $i5;

        $i6 = virtualinvoke r0.<android.widget.VideoView: int getHeight()>();

        $i7 = virtualinvoke r0.<android.widget.VideoView: int getPaddingTop()>();

        $i8 = $i6 - $i7;

        $i9 = virtualinvoke r0.<android.widget.VideoView: int getPaddingBottom()>();

        i1 = $i8 - $i9;

        $r1 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        interfaceinvoke $r1.<android.media.SubtitleTrack$RenderingWidget: void setSize(int,int)>(i0, i1);

        return;
    }

    private void openVideo()
    {
        android.widget.VideoView r0;
        android.content.Intent r1, $r11;
        java.lang.Throwable r2, $r71;
        java.lang.IllegalArgumentException r3, $r53;
        java.io.IOException r4, $r73;
        android.content.Context r5, $r13, $r39;
        android.media.SubtitleController r6, $r17;
        java.util.Iterator r7;
        android.util.Pair r8;
        android.net.Uri $r10, $r38, $r63, $r69;
        android.view.SurfaceHolder $r12, $r37;
        android.media.MediaPlayer $r15, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r40, $r41, $r42, $r43, $r50, $r51, $r58, $r60, $r77;
        android.media.MediaTimeProvider $r19;
        android.media.WebVttRenderer $r21;
        int $i0, $i1, $i2;
        android.media.MediaPlayer$OnPreparedListener $r23;
        android.media.MediaPlayer$OnCompletionListener $r25;
        android.media.MediaPlayer$OnVideoSizeChangedListener $r27;
        android.media.MediaPlayer$OnInfoListener $r29, $r59;
        android.media.MediaPlayer$OnErrorListener $r31, $r61, $r76;
        java.util.Map $r33;
        android.media.MediaPlayer$OnBufferingUpdateListener $r35;
        java.util.Vector $r44, $r45, $r62, $r70, $r74;
        boolean $z0;
        android.media.MediaFormat $r46;
        java.lang.Object $r47, $r48, $r49;
        java.io.InputStream $r52;
        java.lang.StringBuilder $r54, $r56, $r64, $r66, $r68, $r72;
        java.lang.String $r55, $r65, $r67, $r75;
        java.lang.IllegalStateException $r57;

        r0 := @this: android.widget.VideoView;

        $r10 = r0.<android.widget.VideoView: android.net.Uri mUri>;

        if $r10 == null goto label01;

        $r12 = r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder>;

        if $r12 != null goto label02;

     label01:
        return;

     label02:
        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("com.android.music.musicservicecommand");

        r1 = $r11;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("command", "pause");

        $r13 = r0.<android.widget.VideoView: android.content.Context mContext>;

        virtualinvoke $r13.<android.content.Context: void sendBroadcast(android.content.Intent)>(r1);

        specialinvoke r0.<android.widget.VideoView: void release(boolean)>(0);

     label03:
        $r15 = new android.media.MediaPlayer;

        specialinvoke $r15.<android.media.MediaPlayer: void <init>()>();

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = $r15;

        r5 = virtualinvoke r0.<android.widget.VideoView: android.content.Context getContext()>();

        $r17 = new android.media.SubtitleController;

        $r16 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r19 = virtualinvoke $r16.<android.media.MediaPlayer: android.media.MediaTimeProvider getMediaTimeProvider()>();

        $r18 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        specialinvoke $r17.<android.media.SubtitleController: void <init>(android.content.Context,android.media.MediaTimeProvider,android.media.SubtitleController$Listener)>(r5, $r19, $r18);

        r6 = $r17;

        $r21 = new android.media.WebVttRenderer;

        specialinvoke $r21.<android.media.WebVttRenderer: void <init>(android.content.Context)>(r5);

        virtualinvoke r6.<android.media.SubtitleController: void registerRenderer(android.media.SubtitleController$Renderer)>($r21);

        $r20 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r20.<android.media.MediaPlayer: void setSubtitleAnchor(android.media.SubtitleController,android.media.SubtitleController$Anchor)>(r6, r0);

        $i0 = r0.<android.widget.VideoView: int mAudioSession>;

        if $i0 == 0 goto label14;

        $r50 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $i2 = r0.<android.widget.VideoView: int mAudioSession>;

        virtualinvoke $r50.<android.media.MediaPlayer: void setAudioSessionId(int)>($i2);

     label04:
        $r26 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r23 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mPreparedListener>;

        virtualinvoke $r26.<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>($r23);

        $r24 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r27 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnVideoSizeChangedListener mSizeChangedListener>;

        virtualinvoke $r24.<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>($r27);

        $r30 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r25 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mCompletionListener>;

        virtualinvoke $r30.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>($r25);

        $r28 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r31 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener>;

        virtualinvoke $r28.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>($r31);

        $r34 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r29 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener>;

        virtualinvoke $r34.<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>($r29);

        $r32 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r35 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnBufferingUpdateListener mBufferingUpdateListener>;

        virtualinvoke $r32.<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>($r35);

        r0.<android.widget.VideoView: int mCurrentBufferPercentage> = 0;

        $r36 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r39 = r0.<android.widget.VideoView: android.content.Context mContext>;

        $r38 = r0.<android.widget.VideoView: android.net.Uri mUri>;

        $r33 = r0.<android.widget.VideoView: java.util.Map mHeaders>;

        virtualinvoke $r36.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>($r39, $r38, $r33);

        $r43 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r37 = r0.<android.widget.VideoView: android.view.SurfaceHolder mSurfaceHolder>;

        virtualinvoke $r43.<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>($r37);

        $r42 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r42.<android.media.MediaPlayer: void setAudioStreamType(int)>(3);

        $r41 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r41.<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>(1);

        $r40 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r40.<android.media.MediaPlayer: void prepareAsync()>();

        $r45 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        r7 = virtualinvoke $r45.<java.util.Vector: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r49 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.util.Pair) $r49;

     label06:
        $r51 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $r48 = r8.<android.util.Pair: java.lang.Object first>;

        $r52 = (java.io.InputStream) $r48;

        $r47 = r8.<android.util.Pair: java.lang.Object second>;

        $r46 = (android.media.MediaFormat) $r47;

        virtualinvoke $r51.<android.media.MediaPlayer: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>($r52, $r46);

     label07:
        goto label05;

     label08:
        $r57 := @caughtexception;

     label09:
        $r59 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener>;

        $r58 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        interfaceinvoke $r59.<android.media.MediaPlayer$OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>($r58, 901, 0);

     label10:
        goto label05;

     label11:
        $r73 := @caughtexception;

        r4 = $r73;

     label12:
        $r67 = r0.<android.widget.VideoView: java.lang.String TAG>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        $r69 = r0.<android.widget.VideoView: android.net.Uri mUri>;

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        $r75 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r67, $r75, r4);

        r0.<android.widget.VideoView: int mCurrentState> = -1;

        r0.<android.widget.VideoView: int mTargetState> = -1;

        $r76 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener>;

        $r77 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        interfaceinvoke $r76.<android.media.MediaPlayer$OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>($r77, 1, 0);

     label13:
        $r74 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r74.<java.util.Vector: void clear()>();

        return;

     label14:
        $r22 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $i1 = virtualinvoke $r22.<android.media.MediaPlayer: int getAudioSessionId()>();

        r0.<android.widget.VideoView: int mAudioSession> = $i1;

     label15:
        goto label04;

     label16:
        $r53 := @caughtexception;

        r3 = $r53;

     label17:
        $r55 = r0.<android.widget.VideoView: java.lang.String TAG>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open content: ");

        $r63 = r0.<android.widget.VideoView: android.net.Uri mUri>;

        $r64 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r55, $r65, r3);

        r0.<android.widget.VideoView: int mCurrentState> = -1;

        r0.<android.widget.VideoView: int mTargetState> = -1;

        $r61 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mErrorListener>;

        $r60 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        interfaceinvoke $r61.<android.media.MediaPlayer$OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>($r60, 1, 0);

     label18:
        $r62 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r62.<java.util.Vector: void clear()>();

        return;

     label19:
        r0.<android.widget.VideoView: int mCurrentState> = 1;

        specialinvoke r0.<android.widget.VideoView: void attachMediaController()>();

     label20:
        $r44 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r44.<java.util.Vector: void clear()>();

        return;

     label21:
        $r71 := @caughtexception;

        r2 = $r71;

        $r70 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r70.<java.util.Vector: void clear()>();

        throw r2;

        catch java.io.IOException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label03 to label04 with label16;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.lang.IllegalArgumentException from label04 to label05 with label16;
        catch java.lang.Throwable from label04 to label05 with label21;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label16;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.IllegalStateException from label06 to label07 with label08;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.lang.IllegalArgumentException from label06 to label07 with label16;
        catch java.lang.Throwable from label06 to label07 with label21;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.IllegalArgumentException from label09 to label10 with label16;
        catch java.lang.Throwable from label09 to label10 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch java.io.IOException from label14 to label15 with label11;
        catch java.lang.IllegalArgumentException from label14 to label15 with label16;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.io.IOException from label19 to label20 with label11;
        catch java.lang.IllegalArgumentException from label19 to label20 with label16;
        catch java.lang.Throwable from label19 to label20 with label21;
    }

    private void release(boolean)
    {
        android.widget.VideoView r0;
        boolean z0;
        android.media.MediaPlayer $r1, $r2, $r3;
        java.util.Vector $r4;

        r0 := @this: android.widget.VideoView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void reset()>();

        $r3 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r3.<android.media.MediaPlayer: void release()>();

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = null;

        $r4 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        virtualinvoke $r4.<java.util.Vector: void clear()>();

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        if z0 == 0 goto label1;

        r0.<android.widget.VideoView: int mTargetState> = 0;

     label1:
        return;
    }

    private void toggleMediaControlsVisiblity()
    {
        android.widget.VideoView r0;
        android.widget.MediaController $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        $z0 = virtualinvoke $r1.<android.widget.MediaController: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r3.<android.widget.MediaController: void hide()>();

        return;

     label1:
        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r2.<android.widget.MediaController: void show()>();

        return;
    }

    public void addSubtitleSource(java.io.InputStream, android.media.MediaFormat)
    {
        android.widget.VideoView r0;
        java.io.InputStream r1;
        android.media.MediaFormat r2;
        android.media.MediaPlayer $r4, $r5, $r9;
        java.util.Vector $r6;
        android.util.Pair $r7;
        java.lang.IllegalStateException $r8;
        android.media.MediaPlayer$OnInfoListener $r10;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: android.media.MediaFormat;

        $r4 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if $r4 != null goto label1;

        $r6 = r0.<android.widget.VideoView: java.util.Vector mPendingSubtitleTracks>;

        $r7 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, r2);

        virtualinvoke $r6.<java.util.Vector: boolean add(java.lang.Object)>($r7);

        return;

     label1:
        $r5 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r5.<android.media.MediaPlayer: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>(r1, r2);

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        $r10 = r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mInfoListener>;

        $r9 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        interfaceinvoke $r10.<android.media.MediaPlayer$OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>($r9, 901, 0);

        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public boolean canPause()
    {
        android.widget.VideoView r0;
        boolean $z0;

        r0 := @this: android.widget.VideoView;

        $z0 = r0.<android.widget.VideoView: boolean mCanPause>;

        return $z0;
    }

    public boolean canSeekBackward()
    {
        android.widget.VideoView r0;
        boolean $z0;

        r0 := @this: android.widget.VideoView;

        $z0 = r0.<android.widget.VideoView: boolean mCanSeekBack>;

        return $z0;
    }

    public boolean canSeekForward()
    {
        android.widget.VideoView r0;
        boolean $z0;

        r0 := @this: android.widget.VideoView;

        $z0 = r0.<android.widget.VideoView: boolean mCanSeekForward>;

        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.VideoView r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2;
        android.media.SubtitleTrack$RenderingWidget $r2, $r3;
        float $f0, $f1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.SurfaceView: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r2 == null goto label1;

        i0 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i1 = virtualinvoke r0.<android.widget.VideoView: int getPaddingLeft()>();

        $f0 = (float) $i1;

        $i2 = virtualinvoke r0.<android.widget.VideoView: int getPaddingTop()>();

        $f1 = (float) $i2;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r3 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        interfaceinvoke $r3.<android.media.SubtitleTrack$RenderingWidget: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

     label1:
        return;
    }

    public int getAudioSessionId()
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.VideoView;

        $i0 = r0.<android.widget.VideoView: int mAudioSession>;

        if $i0 != 0 goto label1;

        $r2 = new android.media.MediaPlayer;

        specialinvoke $r2.<android.media.MediaPlayer: void <init>()>();

        r1 = $r2;

        $i2 = virtualinvoke r1.<android.media.MediaPlayer: int getAudioSessionId()>();

        r0.<android.widget.VideoView: int mAudioSession> = $i2;

        virtualinvoke r1.<android.media.MediaPlayer: void release()>();

     label1:
        $i1 = r0.<android.widget.VideoView: int mAudioSession>;

        return $i1;
    }

    public int getBufferPercentage()
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if $r1 == null goto label1;

        $i0 = r0.<android.widget.VideoView: int mCurrentBufferPercentage>;

        return $i0;

     label1:
        return 0;
    }

    public int getCurrentPosition()
    {
        android.widget.VideoView r0;
        boolean $z0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getCurrentPosition()>();

        return $i0;

     label1:
        return 0;
    }

    public int getDuration()
    {
        android.widget.VideoView r0;
        boolean $z0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getDuration()>();

        return $i0;

     label1:
        return -1;
    }

    public android.os.Looper getSubtitleLooper()
    {
        android.widget.VideoView r0;
        android.os.Looper $r1;

        r0 := @this: android.widget.VideoView;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        return $r1;
    }

    public boolean isPlaying()
    {
        android.widget.VideoView r0;
        boolean $z0, $z1;
        android.media.MediaPlayer $r1;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z1 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void onAttachedToWindow()
    {
        android.widget.VideoView r0;
        android.media.SubtitleTrack$RenderingWidget $r1, $r2;

        r0 := @this: android.widget.VideoView;

        specialinvoke r0.<android.view.SurfaceView: void onAttachedToWindow()>();

        $r1 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        interfaceinvoke $r2.<android.media.SubtitleTrack$RenderingWidget: void onAttachedToWindow()>();

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.VideoView r0;
        android.media.SubtitleTrack$RenderingWidget $r1, $r2;

        r0 := @this: android.widget.VideoView;

        specialinvoke r0.<android.view.SurfaceView: void onDetachedFromWindow()>();

        $r1 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        interfaceinvoke $r2.<android.media.SubtitleTrack$RenderingWidget: void onDetachedFromWindow()>();

     label1:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.VideoView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.view.SurfaceView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/VideoView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.VideoView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.SurfaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/VideoView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.VideoView r0;
        int i0;
        android.view.KeyEvent r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.widget.MediaController $r2, $r4, $r5, $r7, $r9;
        android.media.MediaPlayer $r3, $r6, $r8;

        r0 := @this: android.widget.VideoView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 == 4 goto label04;

        if i0 == 24 goto label04;

        if i0 == 25 goto label04;

        if i0 == 164 goto label04;

        if i0 == 82 goto label04;

        if i0 == 5 goto label04;

        if i0 == 6 goto label04;

        z0 = 1;

     label01:
        $z1 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z1 == 0 goto label10;

        if z0 == 0 goto label10;

        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if $r2 == null goto label10;

        if i0 == 79 goto label02;

        if i0 != 85 goto label06;

     label02:
        $r3 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z3 = virtualinvoke $r3.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z3 == 0 goto label05;

        virtualinvoke r0.<android.widget.VideoView: void pause()>();

        $r5 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r5.<android.widget.MediaController: void show()>();

     label03:
        return 1;

     label04:
        z0 = 0;

        goto label01;

     label05:
        virtualinvoke r0.<android.widget.VideoView: void start()>();

        $r4 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r4.<android.widget.MediaController: void hide()>();

        return 1;

     label06:
        if i0 != 126 goto label07;

        $r8 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z5 = virtualinvoke $r8.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z5 != 0 goto label03;

        virtualinvoke r0.<android.widget.VideoView: void start()>();

        $r9 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r9.<android.widget.MediaController: void hide()>();

        return 1;

     label07:
        if i0 == 86 goto label08;

        if i0 != 127 goto label09;

     label08:
        $r6 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z4 = virtualinvoke $r6.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z4 == 0 goto label03;

        virtualinvoke r0.<android.widget.VideoView: void pause()>();

        $r7 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r7.<android.widget.MediaController: void show()>();

        return 1;

     label09:
        specialinvoke r0.<android.widget.VideoView: void toggleMediaControlsVisiblity()>();

     label10:
        $z2 = specialinvoke r0.<android.view.SurfaceView: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z2;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.VideoView r0;
        boolean z0;
        int i0, i1, i2, i3;
        android.media.SubtitleTrack$RenderingWidget $r1;

        r0 := @this: android.widget.VideoView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.view.SurfaceView: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $r1 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.widget.VideoView: void measureAndLayoutSubtitleWidget()>();

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.VideoView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37;

        r0 := @this: android.widget.VideoView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i8 = r0.<android.widget.VideoView: int mVideoWidth>;

        i2 = staticinvoke <android.widget.VideoView: int getDefaultSize(int,int)>($i8, i0);

        $i9 = r0.<android.widget.VideoView: int mVideoHeight>;

        i3 = staticinvoke <android.widget.VideoView: int getDefaultSize(int,int)>($i9, i1);

        $i10 = r0.<android.widget.VideoView: int mVideoWidth>;

        if $i10 <= 0 goto label1;

        $i11 = r0.<android.widget.VideoView: int mVideoHeight>;

        if $i11 <= 0 goto label1;

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i6 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i7 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        if i4 != 1073741824 goto label3;

        if i6 != 1073741824 goto label3;

        i2 = i5;

        i3 = i7;

        $i23 = r0.<android.widget.VideoView: int mVideoWidth>;

        $i25 = i3 * $i23;

        $i27 = r0.<android.widget.VideoView: int mVideoHeight>;

        $i28 = i2 * $i27;

        if $i25 >= $i28 goto label2;

        $i33 = r0.<android.widget.VideoView: int mVideoWidth>;

        $i37 = i3 * $i33;

        $i34 = r0.<android.widget.VideoView: int mVideoHeight>;

        i2 = $i37 / $i34;

     label1:
        virtualinvoke r0.<android.widget.VideoView: void setMeasuredDimension(int,int)>(i2, i3);

        return;

     label2:
        $i26 = r0.<android.widget.VideoView: int mVideoWidth>;

        $i29 = i3 * $i26;

        $i31 = r0.<android.widget.VideoView: int mVideoHeight>;

        $i32 = i2 * $i31;

        if $i29 <= $i32 goto label1;

        $i30 = r0.<android.widget.VideoView: int mVideoHeight>;

        $i36 = i2 * $i30;

        $i35 = r0.<android.widget.VideoView: int mVideoWidth>;

        i3 = $i36 / $i35;

        goto label1;

     label3:
        if i4 != 1073741824 goto label4;

        i2 = i5;

        $i22 = r0.<android.widget.VideoView: int mVideoHeight>;

        $i24 = i2 * $i22;

        $i21 = r0.<android.widget.VideoView: int mVideoWidth>;

        i3 = $i24 / $i21;

        if i6 != -2147483648 goto label1;

        if i3 <= i7 goto label1;

        i3 = i7;

        goto label1;

     label4:
        if i6 != 1073741824 goto label5;

        i3 = i7;

        $i17 = r0.<android.widget.VideoView: int mVideoWidth>;

        $i19 = i3 * $i17;

        $i20 = r0.<android.widget.VideoView: int mVideoHeight>;

        i2 = $i19 / $i20;

        if i4 != -2147483648 goto label1;

        if i2 <= i5 goto label1;

        i2 = i5;

        goto label1;

     label5:
        i2 = r0.<android.widget.VideoView: int mVideoWidth>;

        i3 = r0.<android.widget.VideoView: int mVideoHeight>;

        if i6 != -2147483648 goto label6;

        if i3 <= i7 goto label6;

        i3 = i7;

        $i16 = r0.<android.widget.VideoView: int mVideoWidth>;

        $i18 = i3 * $i16;

        $i15 = r0.<android.widget.VideoView: int mVideoHeight>;

        i2 = $i18 / $i15;

     label6:
        if i4 != -2147483648 goto label1;

        if i2 <= i5 goto label1;

        i2 = i5;

        $i12 = r0.<android.widget.VideoView: int mVideoHeight>;

        $i13 = i2 * $i12;

        $i14 = r0.<android.widget.VideoView: int mVideoWidth>;

        i3 = $i13 / $i14;

        goto label1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.VideoView r0;
        android.view.MotionEvent r1;
        boolean $z0;
        android.widget.MediaController $r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.widget.VideoView: void toggleMediaControlsVisiblity()>();

     label1:
        return 0;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.widget.VideoView r0;
        android.view.MotionEvent r1;
        boolean $z0;
        android.widget.MediaController $r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if $r2 == null goto label1;

        specialinvoke r0.<android.widget.VideoView: void toggleMediaControlsVisiblity()>();

     label1:
        return 0;
    }

    public void pause()
    {
        android.widget.VideoView r0;
        boolean $z0, $z1;
        android.media.MediaPlayer $r1, $r2;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        $z1 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void pause()>();

        r0.<android.widget.VideoView: int mCurrentState> = 4;

     label1:
        r0.<android.widget.VideoView: int mTargetState> = 4;

        return;
    }

    public int resolveAdjustedSize(int, int)
    {
        android.widget.VideoView r0;
        int i0, i1, $i2;

        r0 := @this: android.widget.VideoView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.widget.VideoView: int getDefaultSize(int,int)>(i0, i1);

        return $i2;
    }

    public void resume()
    {
        android.widget.VideoView r0;

        r0 := @this: android.widget.VideoView;

        specialinvoke r0.<android.widget.VideoView: void openVideo()>();

        return;
    }

    public void seekTo(int)
    {
        android.widget.VideoView r0;
        int i0;
        boolean $z0;
        android.media.MediaPlayer $r1;

        r0 := @this: android.widget.VideoView;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r1.<android.media.MediaPlayer: void seekTo(int)>(i0);

        r0.<android.widget.VideoView: int mSeekWhenPrepared> = 0;

        return;

     label1:
        r0.<android.widget.VideoView: int mSeekWhenPrepared> = i0;

        return;
    }

    public void setMediaController(android.widget.MediaController)
    {
        android.widget.VideoView r0;
        android.widget.MediaController r1, $r2, $r3;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.widget.MediaController;

        $r2 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.VideoView: android.widget.MediaController mMediaController>;

        virtualinvoke $r3.<android.widget.MediaController: void hide()>();

     label1:
        r0.<android.widget.VideoView: android.widget.MediaController mMediaController> = r1;

        specialinvoke r0.<android.widget.VideoView: void attachMediaController()>();

        return;
    }

    public void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnCompletionListener r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.MediaPlayer$OnCompletionListener;

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnCompletionListener mOnCompletionListener> = r1;

        return;
    }

    public void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnErrorListener r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.MediaPlayer$OnErrorListener;

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnErrorListener mOnErrorListener> = r1;

        return;
    }

    public void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnInfoListener r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.MediaPlayer$OnInfoListener;

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnInfoListener mOnInfoListener> = r1;

        return;
    }

    public void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer$OnPreparedListener r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.MediaPlayer$OnPreparedListener;

        r0.<android.widget.VideoView: android.media.MediaPlayer$OnPreparedListener mOnPreparedListener> = r1;

        return;
    }

    public void setSubtitleWidget(android.media.SubtitleTrack$RenderingWidget)
    {
        android.widget.VideoView r0;
        android.media.SubtitleTrack$RenderingWidget r1, $r2, $r3, $r7, $r8;
        boolean z0;
        android.media.SubtitleTrack$RenderingWidget$OnChangedListener $r4, $r5;
        android.widget.VideoView$8 $r6;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.media.SubtitleTrack$RenderingWidget;

        $r2 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r2 != r1 goto label1;

        return;

     label1:
        z0 = virtualinvoke r0.<android.widget.VideoView: boolean isAttachedToWindow()>();

        $r3 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        if $r3 == null goto label3;

        if z0 == 0 goto label2;

        $r8 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        interfaceinvoke $r8.<android.media.SubtitleTrack$RenderingWidget: void onDetachedFromWindow()>();

     label2:
        $r7 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget>;

        interfaceinvoke $r7.<android.media.SubtitleTrack$RenderingWidget: void setOnChangedListener(android.media.SubtitleTrack$RenderingWidget$OnChangedListener)>(null);

     label3:
        r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget mSubtitleWidget> = r1;

        if r1 == null goto label6;

        $r4 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget$OnChangedListener mSubtitlesChangedListener>;

        if $r4 != null goto label4;

        $r6 = new android.widget.VideoView$8;

        specialinvoke $r6.<android.widget.VideoView$8: void <init>(android.widget.VideoView)>(r0);

        r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget$OnChangedListener mSubtitlesChangedListener> = $r6;

     label4:
        virtualinvoke r0.<android.widget.VideoView: void setWillNotDraw(boolean)>(0);

        $r5 = r0.<android.widget.VideoView: android.media.SubtitleTrack$RenderingWidget$OnChangedListener mSubtitlesChangedListener>;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void setOnChangedListener(android.media.SubtitleTrack$RenderingWidget$OnChangedListener)>($r5);

        if z0 == 0 goto label5;

        interfaceinvoke r1.<android.media.SubtitleTrack$RenderingWidget: void onAttachedToWindow()>();

        virtualinvoke r0.<android.widget.VideoView: void requestLayout()>();

     label5:
        virtualinvoke r0.<android.widget.VideoView: void invalidate()>();

        return;

     label6:
        virtualinvoke r0.<android.widget.VideoView: void setWillNotDraw(boolean)>(1);

        goto label5;
    }

    public void setVideoPath(java.lang.String)
    {
        android.widget.VideoView r0;
        java.lang.String r1;
        android.net.Uri $r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

        virtualinvoke r0.<android.widget.VideoView: void setVideoURI(android.net.Uri)>($r2);

        return;
    }

    public void setVideoURI(android.net.Uri)
    {
        android.widget.VideoView r0;
        android.net.Uri r1;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.net.Uri;

        virtualinvoke r0.<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)>(r1, null);

        return;
    }

    public void setVideoURI(android.net.Uri, java.util.Map)
    {
        android.widget.VideoView r0;
        android.net.Uri r1;
        java.util.Map r2;

        r0 := @this: android.widget.VideoView;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.util.Map;

        r0.<android.widget.VideoView: android.net.Uri mUri> = r1;

        r0.<android.widget.VideoView: java.util.Map mHeaders> = r2;

        r0.<android.widget.VideoView: int mSeekWhenPrepared> = 0;

        specialinvoke r0.<android.widget.VideoView: void openVideo()>();

        virtualinvoke r0.<android.widget.VideoView: void requestLayout()>();

        virtualinvoke r0.<android.widget.VideoView: void invalidate()>();

        return;
    }

    public void start()
    {
        android.widget.VideoView r0;
        boolean $z0;
        android.media.MediaPlayer $r1;

        r0 := @this: android.widget.VideoView;

        $z0 = specialinvoke r0.<android.widget.VideoView: boolean isInPlaybackState()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r1.<android.media.MediaPlayer: void start()>();

        r0.<android.widget.VideoView: int mCurrentState> = 3;

     label1:
        r0.<android.widget.VideoView: int mTargetState> = 3;

        return;
    }

    public void stopPlayback()
    {
        android.widget.VideoView r0;
        android.media.MediaPlayer $r1, $r2, $r3;

        r0 := @this: android.widget.VideoView;

        $r1 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void stop()>();

        $r3 = r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer>;

        virtualinvoke $r3.<android.media.MediaPlayer: void release()>();

        r0.<android.widget.VideoView: android.media.MediaPlayer mMediaPlayer> = null;

        r0.<android.widget.VideoView: int mCurrentState> = 0;

        r0.<android.widget.VideoView: int mTargetState> = 0;

     label1:
        return;
    }

    public void suspend()
    {
        android.widget.VideoView r0;

        r0 := @this: android.widget.VideoView;

        specialinvoke r0.<android.widget.VideoView: void release(boolean)>(0);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.VideoView: int STATE_PREPARING> = 1;

        <android.widget.VideoView: int STATE_PREPARED> = 2;

        <android.widget.VideoView: int STATE_PLAYING> = 3;

        <android.widget.VideoView: int STATE_PLAYBACK_COMPLETED> = 5;

        <android.widget.VideoView: int STATE_PAUSED> = 4;

        <android.widget.VideoView: int STATE_IDLE> = 0;

        <android.widget.VideoView: int STATE_ERROR> = -1;

        return;
    }
}
