final class android.speech.tts.SynthesisPlaybackQueueItem extends android.speech.tts.PlaybackQueueItem
{
    private static final boolean DBG;
    private static final long MAX_UNCONSUMED_AUDIO_MS;
    private static final java.lang.String TAG;
    private final android.speech.tts.BlockingAudioTrack mAudioTrack;
    private final java.util.LinkedList mDataBufferList;
    private volatile boolean mDone;
    private volatile boolean mIsError;
    private final java.util.concurrent.locks.Lock mListLock;
    private final android.speech.tts.EventLogger mLogger;
    private final java.util.concurrent.locks.Condition mNotFull;
    private final java.util.concurrent.locks.Condition mReadReady;
    private volatile boolean mStopped;
    private int mUnconsumedBytes;

    void <init>(int, int, int, int, float, float, android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher, java.lang.Object, android.speech.tts.EventLogger)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        int i0, i1, i2, i3;
        android.speech.tts.BlockingAudioTrack $r1;
        float f0, f1;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r2;
        java.lang.Object r3;
        android.speech.tts.EventLogger r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.util.concurrent.locks.Lock $r6, $r8;
        java.util.concurrent.locks.Condition $r7, $r9;
        java.util.LinkedList $r10;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        r2 := @parameter6: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        r3 := @parameter7: java.lang.Object;

        r4 := @parameter8: android.speech.tts.EventLogger;

        specialinvoke r0.<android.speech.tts.PlaybackQueueItem: void <init>(android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher,java.lang.Object)>(r2, r3);

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock> = $r5;

        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady> = $r7;

        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull> = $r9;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList> = $r10;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone> = 0;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mIsError> = 0;

        $r1 = new android.speech.tts.BlockingAudioTrack;

        specialinvoke $r1.<android.speech.tts.BlockingAudioTrack: void <init>(int,int,int,int,float,float)>(i0, i1, i2, i3, f0, f1);

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack> = $r1;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.EventLogger mLogger> = r4;

        return;
    }

    private byte[] take() throws java.lang.InterruptedException
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        java.lang.Throwable r1, $r13;
        boolean z0, $z1, $z2;
        android.speech.tts.SynthesisPlaybackQueueItem$ListEntry r2;
        byte[] r3, $r8;
        java.util.concurrent.locks.Lock $r4, $r10, $r11, $r12, $r15;
        java.util.LinkedList $r5, $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r7;
        java.util.concurrent.locks.Condition $r9, $r14;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

     label01:
        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        $i0 = virtualinvoke $r5.<java.util.LinkedList: int size()>();

        if $i0 != 0 goto label05;

        $z2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

        if $z2 != 0 goto label05;

        $z1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone>;

        if $z1 != 0 goto label05;

        $r14 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r14.<java.util.concurrent.locks.Condition: void await()>();

     label03:
        goto label02;

     label04:
        $r13 := @caughtexception;

        r1 = $r13;

        $r15 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r15.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r1;

     label05:
        z0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

     label06:
        if z0 == 0 goto label07;

        $r11 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        return null;

     label07:
        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        $r7 = virtualinvoke $r6.<java.util.LinkedList: java.lang.Object poll()>();

        r2 = (android.speech.tts.SynthesisPlaybackQueueItem$ListEntry) $r7;

     label08:
        if r2 != null goto label09;

        $r12 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();

        return null;

     label09:
        $i2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $r8 = r2.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: byte[] mBytes>;

        $i1 = lengthof $r8;

        $i3 = $i2 - $i1;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = $i3;

        $r9 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void signal()>();

        r3 = r2.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: byte[] mBytes>;

     label10:
        $r10 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        return r3;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
    }

    void done()
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        java.lang.Throwable r1, $r6;
        java.util.concurrent.locks.Lock $r2, $r5, $r7;
        java.util.concurrent.locks.Condition $r3, $r4;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

     label1:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mDone> = 1;

        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void signal()>();

     label2:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void put(byte[]) throws java.lang.InterruptedException
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        byte[] r1;
        java.lang.Throwable r2, $r12;
        boolean z0, $z2;
        java.util.concurrent.locks.Lock $r3, $r8, $r9, $r11;
        int $i0, $i3, $i4, $i5;
        android.speech.tts.BlockingAudioTrack $r4;
        long $l1;
        byte $b2;
        android.speech.tts.SynthesisPlaybackQueueItem$ListEntry $r5;
        java.util.LinkedList $r6;
        java.util.concurrent.locks.Condition $r7, $r10;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r1 := @parameter0: byte[];

     label1:
        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        $i0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $l1 = virtualinvoke $r4.<android.speech.tts.BlockingAudioTrack: long getAudioLengthMs(int)>($i0);

        $b2 = $l1 cmp 500L;

        if $b2 <= 0 goto label5;

        $z2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

        if $z2 != 0 goto label5;

        $r10 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Condition: void await()>();

     label3:
        goto label2;

     label4:
        $r12 := @caughtexception;

        r2 = $r12;

        $r11 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r2;

     label5:
        z0 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped>;

     label6:
        if z0 == 0 goto label7;

        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label7:
        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.LinkedList mDataBufferList>;

        $r5 = new android.speech.tts.SynthesisPlaybackQueueItem$ListEntry;

        specialinvoke $r5.<android.speech.tts.SynthesisPlaybackQueueItem$ListEntry: void <init>(byte[])>(r1);

        virtualinvoke $r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);

        $i4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes>;

        $i3 = lengthof r1;

        $i5 = $i4 + $i3;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: int mUnconsumedBytes> = $i5;

        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Condition: void signal()>();

     label8:
        $r9 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
    }

    public void run()
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r1;
        byte[] r3;
        android.speech.tts.BlockingAudioTrack $r4, $r5, $r7;
        boolean $z0, $z1;
        android.speech.tts.EventLogger $r6, $r8;
        java.lang.InterruptedException $r9;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        r1 = virtualinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()>();

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStart()>();

        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        $z0 = virtualinvoke $r4.<android.speech.tts.BlockingAudioTrack: boolean init()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError()>();

        return;

     label1:
        r3 = specialinvoke r0.<android.speech.tts.SynthesisPlaybackQueueItem: byte[] take()>();

     label2:
        if r3 == null goto label6;

     label3:
        $r7 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r7.<android.speech.tts.BlockingAudioTrack: int write(byte[])>(r3);

        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.EventLogger mLogger>;

        virtualinvoke $r8.<android.speech.tts.EventLogger: void onAudioDataWritten()>();

     label4:
        goto label1;

     label5:
        $r9 := @caughtexception;

     label6:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r5.<android.speech.tts.BlockingAudioTrack: void waitAndRelease()>();

        $z1 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mIsError>;

        if $z1 == 0 goto label8;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError()>();

     label7:
        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.EventLogger mLogger>;

        virtualinvoke $r6.<android.speech.tts.EventLogger: void onWriteData()>();

        return;

     label8:
        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnDone()>();

        goto label7;

        catch java.lang.InterruptedException from label1 to label2 with label5;
        catch java.lang.InterruptedException from label3 to label4 with label5;
    }

    void stop(boolean)
    {
        android.speech.tts.SynthesisPlaybackQueueItem r0;
        boolean z0;
        java.lang.Throwable r1, $r7;
        java.util.concurrent.locks.Lock $r2, $r5, $r8;
        java.util.concurrent.locks.Condition $r3, $r4;
        android.speech.tts.BlockingAudioTrack $r6;

        r0 := @this: android.speech.tts.SynthesisPlaybackQueueItem;

        z0 := @parameter0: boolean;

     label1:
        $r2 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mStopped> = 1;

        r0.<android.speech.tts.SynthesisPlaybackQueueItem: boolean mIsError> = z0;

        $r3 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mReadReady>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

        $r4 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Condition mNotFull>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Condition: void signal()>();

     label2:
        $r5 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        $r6 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: android.speech.tts.BlockingAudioTrack mAudioTrack>;

        virtualinvoke $r6.<android.speech.tts.BlockingAudioTrack: void stop()>();

        return;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = r0.<android.speech.tts.SynthesisPlaybackQueueItem: java.util.concurrent.locks.Lock mListLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <android.speech.tts.SynthesisPlaybackQueueItem: java.lang.String TAG> = "TTS.SynthQueueItem";

        <android.speech.tts.SynthesisPlaybackQueueItem: long MAX_UNCONSUMED_AUDIO_MS> = 500L;

        <android.speech.tts.SynthesisPlaybackQueueItem: boolean DBG> = 0;

        return;
    }
}
