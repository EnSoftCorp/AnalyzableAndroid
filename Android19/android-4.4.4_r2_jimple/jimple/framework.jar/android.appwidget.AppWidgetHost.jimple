public class android.appwidget.AppWidgetHost extends java.lang.Object
{
    static final int HANDLE_PROVIDERS_CHANGED;
    static final int HANDLE_PROVIDER_CHANGED;
    static final int HANDLE_UPDATE;
    static final int HANDLE_VIEW_DATA_CHANGED;
    static com.android.internal.appwidget.IAppWidgetService sService;
    static final java.lang.Object sServiceLock;
    android.appwidget.AppWidgetHost$Callbacks mCallbacks;
    android.content.Context mContext;
    private android.util.DisplayMetrics mDisplayMetrics;
    android.os.Handler mHandler;
    int mHostId;
    private android.widget.RemoteViews$OnClickHandler mOnClickHandler;
    java.lang.String mPackageName;
    final java.util.HashMap mViews;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.appwidget.AppWidgetHost: int HANDLE_VIEW_DATA_CHANGED> = 4;

        <android.appwidget.AppWidgetHost: int HANDLE_UPDATE> = 1;

        <android.appwidget.AppWidgetHost: int HANDLE_PROVIDER_CHANGED> = 2;

        <android.appwidget.AppWidgetHost: int HANDLE_PROVIDERS_CHANGED> = 3;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.appwidget.AppWidgetHost: java.lang.Object sServiceLock> = $r0;

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.os.Looper $r2;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke r0.<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int,android.widget.RemoteViews$OnClickHandler,android.os.Looper)>(r1, i0, null, $r2);

        return;
    }

    public void <init>(android.content.Context, int, android.widget.RemoteViews$OnClickHandler, android.os.Looper)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.widget.RemoteViews$OnClickHandler r2;
        android.os.Looper r3;
        android.appwidget.AppWidgetHost$Callbacks $r4;
        java.util.HashMap $r5;
        android.appwidget.AppWidgetHost$UpdateHandler $r6;
        android.content.res.Resources $r7;
        android.util.DisplayMetrics $r8;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.widget.RemoteViews$OnClickHandler;

        r3 := @parameter3: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.appwidget.AppWidgetHost$Callbacks;

        specialinvoke $r4.<android.appwidget.AppWidgetHost$Callbacks: void <init>(android.appwidget.AppWidgetHost)>(r0);

        r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHost$Callbacks mCallbacks> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews> = $r5;

        r0.<android.appwidget.AppWidgetHost: android.content.Context mContext> = r1;

        r0.<android.appwidget.AppWidgetHost: int mHostId> = i0;

        r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler> = r2;

        $r6 = new android.appwidget.AppWidgetHost$UpdateHandler;

        specialinvoke $r6.<android.appwidget.AppWidgetHost$UpdateHandler: void <init>(android.appwidget.AppWidgetHost,android.os.Looper)>(r0, r3);

        r0.<android.appwidget.AppWidgetHost: android.os.Handler mHandler> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics> = $r8;

        staticinvoke <android.appwidget.AppWidgetHost: void bindService()>();

        return;
    }

    static boolean access$000(android.appwidget.AppWidgetHost)
    {
        android.appwidget.AppWidgetHost r0;
        boolean $z0;

        r0 := @parameter0: android.appwidget.AppWidgetHost;

        $z0 = specialinvoke r0.<android.appwidget.AppWidgetHost: boolean isLocalBinder()>();

        return $z0;
    }

    public static int allocateAppWidgetIdForPackage(int, int, java.lang.String)
    {
        int i0, i1, i2;
        java.lang.String r0;
        android.os.RemoteException r1, $r4;
        com.android.internal.appwidget.IAppWidgetService $r2, $r3;
        java.lang.RuntimeException $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        staticinvoke <android.appwidget.AppWidgetHost: void checkCallerIsSystem()>();

     label1:
        $r2 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r2 != null goto label2;

        staticinvoke <android.appwidget.AppWidgetHost: void bindService()>();

     label2:
        $r3 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        i2 = interfaceinvoke $r3.<com.android.internal.appwidget.IAppWidgetService: int allocateAppWidgetId(java.lang.String,int,int)>(r0, i0, i1);

     label3:
        return i2;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private static void bindService()
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r5;
        com.android.internal.appwidget.IAppWidgetService $r2, $r4;
        android.os.IBinder $r3;

        r0 = <android.appwidget.AppWidgetHost: java.lang.Object sServiceLock>;

        entermonitor r0;

     label1:
        $r2 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r2 != null goto label2;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appwidget");

        $r4 = staticinvoke <com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService asInterface(android.os.IBinder)>($r3);

        <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService> = $r4;

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private static void checkCallerIsSystem()
    {
        int i0, $i1;
        java.lang.SecurityException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 = staticinvoke <android.os.Process: int myUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i1 == 1000 goto label1;

        if i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r0 = new java.lang.SecurityException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed call for uid ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static void deleteAllHosts()
    {
        int $i0;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        staticinvoke <android.appwidget.AppWidgetHost: void deleteAllHosts(int)>($i0);

        return;
    }

    public static void deleteAllHosts(int)
    {
        int i0;
        android.os.RemoteException r0, $r2;
        com.android.internal.appwidget.IAppWidgetService $r1;
        java.lang.RuntimeException $r3;

        i0 := @parameter0: int;

     label1:
        $r1 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        interfaceinvoke $r1.<com.android.internal.appwidget.IAppWidgetService: void deleteAllHosts(int)>(i0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r0 = $r2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r0);

        throw $r3;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void deleteAppWidgetIdForSystem(int, int)
    {
        int i0, i1;
        android.os.RemoteException r0, $r3;
        com.android.internal.appwidget.IAppWidgetService $r1, $r2;
        java.lang.RuntimeException $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <android.appwidget.AppWidgetHost: void checkCallerIsSystem()>();

     label1:
        $r1 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r1 != null goto label2;

        staticinvoke <android.appwidget.AppWidgetHost: void bindService()>();

     label2:
        $r2 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        interfaceinvoke $r2.<com.android.internal.appwidget.IAppWidgetService: void deleteAppWidgetId(int,int)>(i0, i1);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r0 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r0);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private boolean isLocalBinder()
    {
        android.appwidget.AppWidgetHost r0;
        int $i0, $i1;

        r0 := @this: android.appwidget.AppWidgetHost;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int allocateAppWidgetId()
    {
        android.appwidget.AppWidgetHost r0;
        android.os.RemoteException r1, $r8;
        int i0, $i1, $i2;
        java.lang.String $r2, $r5, $r7;
        android.content.Context $r3, $r6;
        com.android.internal.appwidget.IAppWidgetService $r4;
        java.lang.RuntimeException $r9;

        r0 := @this: android.appwidget.AppWidgetHost;

     label1:
        $r2 = r0.<android.appwidget.AppWidgetHost: java.lang.String mPackageName>;

        if $r2 != null goto label2;

        $r6 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.appwidget.AppWidgetHost: java.lang.String mPackageName> = $r7;

     label2:
        $r4 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r5 = r0.<android.appwidget.AppWidgetHost: java.lang.String mPackageName>;

        $i1 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        $r3 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $i2 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        i0 = interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: int allocateAppWidgetId(java.lang.String,int,int)>($r5, $i1, $i2);

     label3:
        return i0;

     label4:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    protected void clearViews()
    {
        android.appwidget.AppWidgetHost r0;
        java.util.HashMap $r1;

        r0 := @this: android.appwidget.AppWidgetHost;

        $r1 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }

    public final android.appwidget.AppWidgetHostView createView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1, $r8, $r9, $r16;
        int i0, i1, $i2;
        android.appwidget.AppWidgetProviderInfo r2;
        android.appwidget.AppWidgetHostView r3;
        java.util.HashMap r4, $r11;
        java.lang.Throwable r5, $r19;
        android.os.RemoteException r6, $r18;
        android.widget.RemoteViews r7;
        android.widget.RemoteViews$OnClickHandler $r10;
        java.lang.Integer $r13;
        com.android.internal.appwidget.IAppWidgetService $r14;
        android.os.UserHandle $r15;
        java.lang.RuntimeException $r17;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.appwidget.AppWidgetProviderInfo;

        $r8 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        i1 = virtualinvoke $r8.<android.content.Context: int getUserId()>();

        $r9 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        r3 = virtualinvoke r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>($r9, i0, r2);

        virtualinvoke r3.<android.appwidget.AppWidgetHostView: void setUserId(int)>(i1);

        $r10 = r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler>;

        virtualinvoke r3.<android.appwidget.AppWidgetHostView: void setOnClickHandler(android.widget.RemoteViews$OnClickHandler)>($r10);

        virtualinvoke r3.<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>(i0, r2);

        r4 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        entermonitor r4;

     label1:
        $r11 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r3);

        exitmonitor r4;

     label2:
        $r14 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        r7 = interfaceinvoke $r14.<com.android.internal.appwidget.IAppWidgetService: android.widget.RemoteViews getAppWidgetViews(int,int)>(i0, i1);

     label3:
        if r7 == null goto label5;

     label4:
        $r15 = new android.os.UserHandle;

        $r16 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $i2 = virtualinvoke $r16.<android.content.Context: int getUserId()>();

        specialinvoke $r15.<android.os.UserHandle: void <init>(int)>($i2);

        virtualinvoke r7.<android.widget.RemoteViews: void setUser(android.os.UserHandle)>($r15);

     label5:
        virtualinvoke r3.<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>(r7);

        return r3;

     label6:
        $r19 := @caughtexception;

        r5 = $r19;

     label7:
        exitmonitor r4;

     label8:
        throw r5;

     label9:
        $r18 := @caughtexception;

        r6 = $r18;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r6);

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label9;
        catch android.os.RemoteException from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void deleteAppWidgetId(int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0, $i1;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r9;
        android.os.RemoteException r3, $r11;
        java.lang.Integer $r5;
        android.content.Context $r7;
        com.android.internal.appwidget.IAppWidgetService $r8;
        java.lang.RuntimeException $r10;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        r1 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

     label2:
        $r8 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r7 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $i1 = virtualinvoke $r7.<android.content.Context: int getUserId()>();

        interfaceinvoke $r8.<com.android.internal.appwidget.IAppWidgetService: void deleteAppWidgetId(int,int)>(i0, $i1);

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

     label6:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r3);

        throw $r10;

     label7:
        $r9 := @caughtexception;

        r2 = $r9;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch android.os.RemoteException from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void deleteHost()
    {
        android.appwidget.AppWidgetHost r0;
        android.os.RemoteException r1, $r4;
        android.content.Context $r2;
        com.android.internal.appwidget.IAppWidgetService $r3;
        int $i0, $i1;
        java.lang.RuntimeException $r5;

        r0 := @this: android.appwidget.AppWidgetHost;

     label1:
        $r3 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        $r2 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $i1 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        interfaceinvoke $r3.<com.android.internal.appwidget.IAppWidgetService: void deleteHost(int,int)>($i0, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getAppWidgetIds()
    {
        android.appwidget.AppWidgetHost r0;
        android.os.RemoteException r1, $r6;
        int[] r2;
        com.android.internal.appwidget.IAppWidgetService $r3, $r5;
        android.content.Context $r4;
        int $i0, $i1;
        java.lang.RuntimeException $r7;

        r0 := @this: android.appwidget.AppWidgetHost;

     label1:
        $r3 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r3 != null goto label2;

        staticinvoke <android.appwidget.AppWidgetHost: void bindService()>();

     label2:
        $r5 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        $r4 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $i1 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        r2 = interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: int[] getAppWidgetIdsForHost(int,int)>($i0, $i1);

     label3:
        return r2;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    protected android.appwidget.AppWidgetHostView onCreateView(android.content.Context, int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        android.content.Context r1;
        int i0;
        android.appwidget.AppWidgetProviderInfo r2;
        android.appwidget.AppWidgetHostView $r3;
        android.widget.RemoteViews$OnClickHandler $r4;

        r0 := @this: android.appwidget.AppWidgetHost;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.appwidget.AppWidgetProviderInfo;

        $r3 = new android.appwidget.AppWidgetHostView;

        $r4 = r0.<android.appwidget.AppWidgetHost: android.widget.RemoteViews$OnClickHandler mOnClickHandler>;

        specialinvoke $r3.<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,android.widget.RemoteViews$OnClickHandler)>(r1, $r4);

        return $r3;
    }

    protected void onProviderChanged(int, android.appwidget.AppWidgetProviderInfo)
    {
        android.appwidget.AppWidgetHost r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.appwidget.AppWidgetProviderInfo r1;
        java.util.HashMap r2, $r9;
        java.lang.Throwable r3, $r12;
        android.appwidget.AppWidgetHostView r4;
        android.util.DisplayMetrics $r5, $r6, $r7, $r8;
        java.lang.Object $r10;
        java.lang.Integer $r11;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        r1 := @parameter1: android.appwidget.AppWidgetProviderInfo;

        $i1 = r1.<android.appwidget.AppWidgetProviderInfo: int minWidth>;

        $r5 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        $i2 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i1, $r5);

        r1.<android.appwidget.AppWidgetProviderInfo: int minWidth> = $i2;

        $i3 = r1.<android.appwidget.AppWidgetProviderInfo: int minHeight>;

        $r6 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        $i4 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i3, $r6);

        r1.<android.appwidget.AppWidgetProviderInfo: int minHeight> = $i4;

        $i5 = r1.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth>;

        $r7 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        $i6 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i5, $r7);

        r1.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth> = $i6;

        $i8 = r1.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight>;

        $r8 = r0.<android.appwidget.AppWidgetHost: android.util.DisplayMetrics mDisplayMetrics>;

        $i7 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i8, $r8);

        r1.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight> = $i7;

        r2 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        entermonitor r2;

     label1:
        $r9 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        r4 = (android.appwidget.AppWidgetHostView) $r10;

        exitmonitor r2;

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<android.appwidget.AppWidgetHostView: void resetAppWidget(android.appwidget.AppWidgetProviderInfo)>(r1);

     label3:
        return;

     label4:
        $r12 := @caughtexception;

        r3 = $r12;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void onProvidersChanged()
    {
        android.appwidget.AppWidgetHost r0;

        r0 := @this: android.appwidget.AppWidgetHost;

        return;
    }

    public void startListening()
    {
        android.appwidget.AppWidgetHost r0;
        java.util.ArrayList r1, r20;
        int i0, i1, i2, $i3, $i4;
        android.os.RemoteException r2, $r17;
        int[] r3;
        android.content.Context $r5, $r15;
        java.lang.String $r6, $r7, $r18;
        android.appwidget.AppWidgetHost$Callbacks $r8;
        com.android.internal.appwidget.IAppWidgetService $r9;
        java.lang.Object $r10, $r12, $r14;
        android.widget.RemoteViews $r11, $r16;
        android.os.UserHandle r21;
        java.lang.RuntimeException r22;
        com.android.internal.appwidget.IAppWidgetHost r23;

        r0 := @this: android.appwidget.AppWidgetHost;

        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

        r1 = r20;

        $r5 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        i0 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

     label1:
        $r6 = r0.<android.appwidget.AppWidgetHost: java.lang.String mPackageName>;

        if $r6 != null goto label2;

        $r15 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $r18 = virtualinvoke $r15.<android.content.Context: java.lang.String getPackageName()>();

        r0.<android.appwidget.AppWidgetHost: java.lang.String mPackageName> = $r18;

     label2:
        $r9 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $r8 = r0.<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHost$Callbacks mCallbacks>;

        $r7 = r0.<android.appwidget.AppWidgetHost: java.lang.String mPackageName>;

        $i3 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        r23 = (com.android.internal.appwidget.IAppWidgetHost) $r8;

        r3 = interfaceinvoke $r9.<com.android.internal.appwidget.IAppWidgetService: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List,int)>(r23, $r7, $i3, r1, i0);

     label3:
        i1 = lengthof r3;

        i2 = 0;

     label4:
        if i2 >= i1 goto label7;

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r10 == null goto label5;

        $r14 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r16 = (android.widget.RemoteViews) $r14;

        r21 = new android.os.UserHandle;

        specialinvoke r21.<android.os.UserHandle: void <init>(int)>(i0);

        virtualinvoke $r16.<android.widget.RemoteViews: void setUser(android.os.UserHandle)>(r21);

     label5:
        $i4 = r3[i2];

        $r12 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r11 = (android.widget.RemoteViews) $r12;

        virtualinvoke r0.<android.appwidget.AppWidgetHost: void updateAppWidgetView(int,android.widget.RemoteViews,int)>($i4, $r11, i0);

        i2 = i2 + 1;

        goto label4;

     label6:
        $r17 := @caughtexception;

        r2 = $r17;

        r22 = new java.lang.RuntimeException;

        specialinvoke r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw r22;

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label6;
    }

    public void stopListening()
    {
        android.appwidget.AppWidgetHost r0;
        android.os.RemoteException r1, $r4;
        android.content.Context $r2;
        com.android.internal.appwidget.IAppWidgetService $r3;
        int $i0, $i1;
        java.lang.RuntimeException $r5;

        r0 := @this: android.appwidget.AppWidgetHost;

     label1:
        $r3 = <android.appwidget.AppWidgetHost: com.android.internal.appwidget.IAppWidgetService sService>;

        $i0 = r0.<android.appwidget.AppWidgetHost: int mHostId>;

        $r2 = r0.<android.appwidget.AppWidgetHost: android.content.Context mContext>;

        $i1 = virtualinvoke $r2.<android.content.Context: int getUserId()>();

        interfaceinvoke $r3.<com.android.internal.appwidget.IAppWidgetService: void stopListening(int,int)>($i0, $i1);

     label2:
        virtualinvoke r0.<android.appwidget.AppWidgetHost: void clearViews()>();

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void updateAppWidgetView(int, android.widget.RemoteViews, int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0, i1;
        android.widget.RemoteViews r1;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r8;
        android.appwidget.AppWidgetHostView r4;
        java.lang.Integer $r6;
        java.lang.Object $r7;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews;

        i1 := @parameter2: int;

        r2 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        entermonitor r2;

     label1:
        $r5 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r4 = (android.appwidget.AppWidgetHostView) $r7;

        exitmonitor r2;

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>(r1);

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void viewDataChanged(int, int, int)
    {
        android.appwidget.AppWidgetHost r0;
        int i0, i1, i2;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r7;
        android.appwidget.AppWidgetHostView r3;
        java.lang.Integer $r5;
        java.lang.Object $r6;

        r0 := @this: android.appwidget.AppWidgetHost;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.appwidget.AppWidgetHost: java.util.HashMap mViews>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (android.appwidget.AppWidgetHostView) $r6;

        exitmonitor r1;

     label2:
        if r3 == null goto label3;

        virtualinvoke r3.<android.appwidget.AppWidgetHostView: void viewDataChanged(int)>(i1);

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
