public abstract class android.view.InputFilter extends android.view.IInputFilter$Stub
{
    private static final int MSG_INPUT_EVENT;
    private static final int MSG_INSTALL;
    private static final int MSG_UNINSTALL;
    private final android.view.InputFilter$H mH;
    private android.view.IInputFilterHost mHost;
    private final android.view.InputEventConsistencyVerifier mInboundInputEventConsistencyVerifier;
    private final android.view.InputEventConsistencyVerifier mOutboundInputEventConsistencyVerifier;

    public void <init>(android.os.Looper)
    {
        android.view.InputFilter r0;
        android.os.Looper r1;
        android.view.InputEventConsistencyVerifier r2, r3, $r5, $r6;
        boolean z0, $z1;
        android.view.InputFilter$H $r4;

        r0 := @this: android.view.InputFilter;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<android.view.IInputFilter$Stub: void <init>()>();

        $z1 = staticinvoke <android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>();

        if $z1 == 0 goto label3;

        $r6 = new android.view.InputEventConsistencyVerifier;

        specialinvoke $r6.<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int,java.lang.String)>(r0, 1, "InputFilter#InboundInputEventConsistencyVerifier");

        r2 = $r6;

     label1:
        r0.<android.view.InputFilter: android.view.InputEventConsistencyVerifier mInboundInputEventConsistencyVerifier> = r2;

        z0 = staticinvoke <android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>();

        r3 = null;

        if z0 == 0 goto label2;

        $r5 = new android.view.InputEventConsistencyVerifier;

        specialinvoke $r5.<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int,java.lang.String)>(r0, 1, "InputFilter#OutboundInputEventConsistencyVerifier");

        r3 = $r5;

     label2:
        r0.<android.view.InputFilter: android.view.InputEventConsistencyVerifier mOutboundInputEventConsistencyVerifier> = r3;

        $r4 = new android.view.InputFilter$H;

        specialinvoke $r4.<android.view.InputFilter$H: void <init>(android.view.InputFilter,android.os.Looper)>(r0, r1);

        r0.<android.view.InputFilter: android.view.InputFilter$H mH> = $r4;

        return;

     label3:
        r2 = null;

        goto label1;
    }

    static android.view.IInputFilterHost access$002(android.view.InputFilter, android.view.IInputFilterHost)
    {
        android.view.InputFilter r0;
        android.view.IInputFilterHost r1;

        r0 := @parameter0: android.view.InputFilter;

        r1 := @parameter1: android.view.IInputFilterHost;

        r0.<android.view.InputFilter: android.view.IInputFilterHost mHost> = r1;

        return r1;
    }

    static android.view.InputEventConsistencyVerifier access$100(android.view.InputFilter)
    {
        android.view.InputFilter r0;
        android.view.InputEventConsistencyVerifier $r1;

        r0 := @parameter0: android.view.InputFilter;

        $r1 = r0.<android.view.InputFilter: android.view.InputEventConsistencyVerifier mInboundInputEventConsistencyVerifier>;

        return $r1;
    }

    static android.view.InputEventConsistencyVerifier access$200(android.view.InputFilter)
    {
        android.view.InputFilter r0;
        android.view.InputEventConsistencyVerifier $r1;

        r0 := @parameter0: android.view.InputFilter;

        $r1 = r0.<android.view.InputFilter: android.view.InputEventConsistencyVerifier mOutboundInputEventConsistencyVerifier>;

        return $r1;
    }

    public final void filterInputEvent(android.view.InputEvent, int)
    {
        android.view.InputFilter r0;
        android.view.InputEvent r1;
        int i0;
        android.view.InputFilter$H $r2;
        android.os.Message $r3;

        r0 := @this: android.view.InputFilter;

        r1 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        $r2 = r0.<android.view.InputFilter: android.view.InputFilter$H mH>;

        $r3 = virtualinvoke $r2.<android.view.InputFilter$H: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(3, i0, 0, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public final void install(android.view.IInputFilterHost)
    {
        android.view.InputFilter r0;
        android.view.IInputFilterHost r1;
        android.view.InputFilter$H $r2;
        android.os.Message $r3;

        r0 := @this: android.view.InputFilter;

        r1 := @parameter0: android.view.IInputFilterHost;

        $r2 = r0.<android.view.InputFilter: android.view.InputFilter$H mH>;

        $r3 = virtualinvoke $r2.<android.view.InputFilter$H: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onInputEvent(android.view.InputEvent, int)
    {
        android.view.InputFilter r0;
        android.view.InputEvent r1;
        int i0;

        r0 := @this: android.view.InputFilter;

        r1 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.InputFilter: void sendInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;
    }

    public void onInstalled()
    {
        android.view.InputFilter r0;

        r0 := @this: android.view.InputFilter;

        return;
    }

    public void onUninstalled()
    {
        android.view.InputFilter r0;

        r0 := @this: android.view.InputFilter;

        return;
    }

    public void sendInputEvent(android.view.InputEvent, int)
    {
        android.view.InputFilter r0;
        android.view.InputEvent r1;
        int i0;
        android.view.IInputFilterHost $r3, $r5;
        android.view.InputEventConsistencyVerifier $r4, $r6;
        java.lang.IllegalStateException $r7;
        java.lang.IllegalArgumentException $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.view.InputFilter;

        r1 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event must not be null");

        throw $r8;

     label1:
        $r3 = r0.<android.view.InputFilter: android.view.IInputFilterHost mHost>;

        if $r3 != null goto label2;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot send input event because the input filter is not installed.");

        throw $r7;

     label2:
        $r4 = r0.<android.view.InputFilter: android.view.InputEventConsistencyVerifier mOutboundInputEventConsistencyVerifier>;

        if $r4 == null goto label3;

        $r6 = r0.<android.view.InputFilter: android.view.InputEventConsistencyVerifier mOutboundInputEventConsistencyVerifier>;

        virtualinvoke $r6.<android.view.InputEventConsistencyVerifier: void onInputEvent(android.view.InputEvent,int)>(r1, 0);

     label3:
        $r5 = r0.<android.view.InputFilter: android.view.IInputFilterHost mHost>;

        interfaceinvoke $r5.<android.view.IInputFilterHost: void sendInputEvent(android.view.InputEvent,int)>(r1, i0);

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public final void uninstall()
    {
        android.view.InputFilter r0;
        android.view.InputFilter$H $r1;
        android.os.Message $r2;

        r0 := @this: android.view.InputFilter;

        $r1 = r0.<android.view.InputFilter: android.view.InputFilter$H mH>;

        $r2 = virtualinvoke $r1.<android.view.InputFilter$H: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <android.view.InputFilter: int MSG_UNINSTALL> = 2;

        <android.view.InputFilter: int MSG_INSTALL> = 1;

        <android.view.InputFilter: int MSG_INPUT_EVENT> = 3;

        return;
    }
}
