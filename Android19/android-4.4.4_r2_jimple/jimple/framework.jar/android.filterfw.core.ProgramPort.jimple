public class android.filterfw.core.ProgramPort extends android.filterfw.core.FieldPort
{
    protected java.lang.String mVarName;

    public void <init>(android.filterfw.core.Filter, java.lang.String, java.lang.String, java.lang.reflect.Field, boolean)
    {
        android.filterfw.core.ProgramPort r0;
        android.filterfw.core.Filter r1;
        java.lang.String r2, r3;
        java.lang.reflect.Field r4;
        boolean z0;

        r0 := @this: android.filterfw.core.ProgramPort;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.reflect.Field;

        z0 := @parameter4: boolean;

        specialinvoke r0.<android.filterfw.core.FieldPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.reflect.Field,boolean)>(r1, r2, r4, z0);

        r0.<android.filterfw.core.ProgramPort: java.lang.String mVarName> = r3;

        return;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.ProgramPort r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: android.filterfw.core.ProgramPort;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Program ");

        $r3 = specialinvoke r0.<android.filterfw.core.FieldPort: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void transfer(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.ProgramPort r0;
        android.filterfw.core.FilterContext r1;
        java.lang.Throwable r2, $r29;
        boolean z0;
        java.lang.Object r5, $r8;
        android.filterfw.core.Filter $r6;
        java.lang.reflect.Field $r7, $r14, $r25;
        java.lang.String $r9, $r17, $r18, $r24, $r28;
        android.filterfw.core.Program $r10;
        java.lang.IllegalAccessException $r11;
        java.lang.StringBuilder $r12, $r15, $r16, $r19, $r22, $r23, $r26, $r27;
        java.lang.RuntimeException $r13, $r20;
        java.lang.ClassCastException $r21;

        r0 := @this: android.filterfw.core.ProgramPort;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        entermonitor r0;

     label01:
        z0 = r0.<android.filterfw.core.ProgramPort: boolean mValueWaiting>;

     label02:
        if z0 == 0 goto label06;

     label03:
        $r7 = r0.<android.filterfw.core.ProgramPort: java.lang.reflect.Field mField>;

        $r6 = r0.<android.filterfw.core.ProgramPort: android.filterfw.core.Filter mFilter>;

        r5 = virtualinvoke $r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r6);

     label04:
        if r5 == null goto label06;

     label05:
        $r10 = (android.filterfw.core.Program) r5;

        $r9 = r0.<android.filterfw.core.ProgramPort: java.lang.String mVarName>;

        $r8 = r0.<android.filterfw.core.ProgramPort: java.lang.Object mValue>;

        virtualinvoke $r10.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>($r9, $r8);

        r0.<android.filterfw.core.ProgramPort: boolean mValueWaiting> = 0;

     label06:
        exitmonitor r0;

        return;

     label07:
        $r11 := @caughtexception;

     label08:
        $r13 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access to program field \'");

        $r14 = r0.<android.filterfw.core.ProgramPort: java.lang.reflect.Field mField>;

        $r17 = virtualinvoke $r14.<java.lang.reflect.Field: java.lang.String getName()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was denied!");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label09:
        $r29 := @caughtexception;

        r2 = $r29;

        exitmonitor r0;

        throw r2;

     label10:
        $r21 := @caughtexception;

     label11:
        $r20 = new java.lang.RuntimeException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non Program field \'");

        $r25 = r0.<android.filterfw.core.ProgramPort: java.lang.reflect.Field mField>;

        $r24 = virtualinvoke $r25.<java.lang.reflect.Field: java.lang.String getName()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' annotated with ProgramParameter!");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r28);

     label12:
        throw $r20;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.IllegalAccessException from label03 to label04 with label07;
        catch java.lang.ClassCastException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.IllegalAccessException from label05 to label06 with label07;
        catch java.lang.ClassCastException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }
}
