class android.util.ReflectiveProperty extends android.util.Property
{
    private static final java.lang.String PREFIX_GET;
    private static final java.lang.String PREFIX_IS;
    private static final java.lang.String PREFIX_SET;
    private java.lang.reflect.Field mField;
    private java.lang.reflect.Method mGetter;
    private java.lang.reflect.Method mSetter;

    public void <init>(java.lang.Class, java.lang.Class, java.lang.String)
    {
        android.util.ReflectiveProperty r0;
        java.lang.Class r1, r2, r11, r12;
        java.lang.String r3, r4, r5, r6, r8, r13, $r35, $r46, $r61;
        char c0, $c1;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20, $r24, $r25, $r26, $r28, $r31, $r32, $r33, $r34, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r49, $r53, $r54, $r55, $r56, $r58, $r59, $r60;
        java.lang.Class[] $r21, $r29, $r48;
        java.lang.reflect.Method $r22, $r23, $r30, $r47;
        boolean $z0, $z1;
        android.util.NoSuchPropertyException $r27, $r42, $r57;
        java.lang.NoSuchFieldException $r36;
        java.lang.NoSuchMethodException $r45, $r52, $r62;
        java.lang.reflect.Field $r50, $r51;

        r0 := @this: android.util.ReflectiveProperty;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<android.util.Property: void <init>(java.lang.Class,java.lang.String)>(r2, r3);

        $c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        c0 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(1);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r21 = (java.lang.Class[]) null;

        $r23 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r6, $r21);

        r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mGetter> = $r23;

     label02:
        $r22 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mGetter>;

        r12 = virtualinvoke $r22.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z0 = specialinvoke r0.<android.util.ReflectiveProperty: boolean typesMatch(java.lang.Class,java.lang.Class)>(r2, r12);

        if $z0 != 0 goto label09;

        $r27 = new android.util.NoSuchPropertyException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Underlying type (");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not match Property type (");

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<android.util.NoSuchPropertyException: void <init>(java.lang.String)>($r35);

        throw $r27;

     label03:
        $r45 := @caughtexception;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is");

        $r49 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r8 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r48 = (java.lang.Class[]) null;

        $r47 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r8, $r48);

        r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mGetter> = $r47;

     label05:
        goto label02;

     label06:
        $r52 := @caughtexception;

     label07:
        $r51 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(r3);

        r0.<android.util.ReflectiveProperty: java.lang.reflect.Field mField> = $r51;

        $r50 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        r11 = virtualinvoke $r50.<java.lang.reflect.Field: java.lang.Class getType()>();

        $z1 = specialinvoke r0.<android.util.ReflectiveProperty: boolean typesMatch(java.lang.Class,java.lang.Class)>(r2, r11);

        if $z1 != 0 goto label11;

        $r57 = new android.util.NoSuchPropertyException;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Underlying type (");

        $r53 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not match Property type (");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r60 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r57.<android.util.NoSuchPropertyException: void <init>(java.lang.String)>($r61);

        throw $r57;

     label08:
        $r36 := @caughtexception;

        $r42 = new android.util.NoSuchPropertyException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No accessor method or field found for property with name ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r46 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<android.util.NoSuchPropertyException: void <init>(java.lang.String)>($r46);

        throw $r42;

     label09:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set");

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r13 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r29 = newarray (java.lang.Class)[1];

        $r29[0] = r12;

        $r30 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r13, $r29);

        r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mSetter> = $r30;

     label11:
        return;

     label12:
        $r62 := @caughtexception;

        return;

        catch java.lang.NoSuchMethodException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.NoSuchFieldException from label07 to label08 with label08;
        catch java.lang.NoSuchMethodException from label10 to label11 with label12;
    }

    private boolean typesMatch(java.lang.Class, java.lang.Class)
    {
        android.util.ReflectiveProperty r0;
        java.lang.Class r1, r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean z0, z1;

        r0 := @this: android.util.ReflectiveProperty;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        if r2 == r1 goto label10;

        z0 = virtualinvoke r2.<java.lang.Class: boolean isPrimitive()>();

        z1 = 0;

        if z0 == 0 goto label09;

        $r4 = <java.lang.Float: java.lang.Class TYPE>;

        if r2 != $r4 goto label01;

        if r1 == class "java/lang/Float" goto label08;

     label01:
        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        if r2 != $r5 goto label02;

        if r1 == class "java/lang/Integer" goto label08;

     label02:
        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r2 != $r6 goto label03;

        if r1 == class "java/lang/Boolean" goto label08;

     label03:
        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        if r2 != $r7 goto label04;

        if r1 == class "java/lang/Long" goto label08;

     label04:
        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        if r2 != $r8 goto label05;

        if r1 == class "java/lang/Double" goto label08;

     label05:
        $r9 = <java.lang.Short: java.lang.Class TYPE>;

        if r2 != $r9 goto label06;

        if r1 == class "java/lang/Short" goto label08;

     label06:
        $r10 = <java.lang.Byte: java.lang.Class TYPE>;

        if r2 != $r10 goto label07;

        if r1 == class "java/lang/Byte" goto label08;

     label07:
        r3 = <java.lang.Character: java.lang.Class TYPE>;

        z1 = 0;

        if r2 != r3 goto label09;

        z1 = 0;

        if r1 != class "java/lang/Character" goto label09;

     label08:
        z1 = 1;

     label09:
        return z1;

     label10:
        return 1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        android.util.ReflectiveProperty r0;
        java.lang.Object r1, r3, r6;
        java.lang.reflect.InvocationTargetException r4, $r13;
        java.lang.reflect.Method $r7, $r12;
        java.lang.reflect.Field $r8, $r10;
        java.lang.AssertionError $r9, $r16, $r18;
        java.lang.Object[] $r11;
        java.lang.Throwable $r14;
        java.lang.RuntimeException $r15;
        java.lang.IllegalAccessException $r17, $r19;

        r0 := @this: android.util.ReflectiveProperty;

        r1 := @parameter0: java.lang.Object;

        $r7 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mGetter>;

        if $r7 == null goto label5;

     label1:
        $r12 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mGetter>;

        $r11 = (java.lang.Object[]) null;

        r6 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r11);

     label2:
        return r6;

     label3:
        $r19 := @caughtexception;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label4:
        $r13 := @caughtexception;

        r4 = $r13;

        $r15 = new java.lang.RuntimeException;

        $r14 = virtualinvoke r4.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);

        throw $r15;

     label5:
        $r8 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        if $r8 == null goto label9;

     label6:
        $r10 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        r3 = virtualinvoke $r10.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

     label7:
        return r3;

     label8:
        $r17 := @caughtexception;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label9:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label6 to label7 with label8;
    }

    public boolean isReadOnly()
    {
        android.util.ReflectiveProperty r0;
        java.lang.reflect.Method $r1;
        java.lang.reflect.Field $r2;

        r0 := @this: android.util.ReflectiveProperty;

        $r1 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mSetter>;

        if $r1 != null goto label1;

        $r2 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        if $r2 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void set(java.lang.Object, java.lang.Object)
    {
        android.util.ReflectiveProperty r0;
        java.lang.Object r1, r2;
        java.lang.reflect.InvocationTargetException r4, $r22;
        java.lang.reflect.Method $r6, $r16;
        java.lang.reflect.Field $r7, $r15;
        java.lang.UnsupportedOperationException $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;
        java.lang.String $r11, $r14;
        java.lang.Object[] $r17;
        java.lang.IllegalAccessException $r18, $r20;
        java.lang.AssertionError $r21, $r23;
        java.lang.Throwable $r24;
        java.lang.RuntimeException $r25;

        r0 := @this: android.util.ReflectiveProperty;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r6 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mSetter>;

        if $r6 == null goto label5;

     label1:
        $r16 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Method mSetter>;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r2;

        virtualinvoke $r16.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r17);

     label2:
        return;

     label3:
        $r18 := @caughtexception;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label4:
        $r22 := @caughtexception;

        r4 = $r22;

        $r25 = new java.lang.RuntimeException;

        $r24 = virtualinvoke r4.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r24);

        throw $r25;

     label5:
        $r7 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        if $r7 == null goto label9;

     label6:
        $r15 = r0.<android.util.ReflectiveProperty: java.lang.reflect.Field mField>;

        virtualinvoke $r15.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r1, r2);

     label7:
        return;

     label8:
        $r20 := @caughtexception;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label9:
        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property ");

        $r11 = virtualinvoke r0.<android.util.ReflectiveProperty: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is read-only");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);

        throw $r8;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label6 to label7 with label8;
    }

    public static void <clinit>()
    {
        <android.util.ReflectiveProperty: java.lang.String PREFIX_SET> = "set";

        <android.util.ReflectiveProperty: java.lang.String PREFIX_IS> = "is";

        <android.util.ReflectiveProperty: java.lang.String PREFIX_GET> = "get";

        return;
    }
}
