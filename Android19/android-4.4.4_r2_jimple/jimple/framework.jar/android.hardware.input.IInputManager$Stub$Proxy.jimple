class android.hardware.input.IInputManager$Stub$Proxy extends java.lang.Object implements android.hardware.input.IInputManager
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addKeyboardLayoutForInputDevice(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        $r1 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void cancelVibrate(int, android.os.IBinder) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.os.IBinder r1, $r5;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r5 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1, r5;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r5 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.view.InputDevice getInputDevice(int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0, $i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r8;
        android.view.InputDevice r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object $r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label3;

        $r6 = <android.view.InputDevice: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r2);

        r4 = (android.view.InputDevice) $r7;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        r4 = null;

        goto label2;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public int[] getInputDeviceIds() throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r6;
        int[] r4;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        $r5 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r4 = virtualinvoke r2.<android.os.Parcel: int[] createIntArray()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        return "android.hardware.input.IInputManager";
    }

    public android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r9;
        android.hardware.input.KeyboardLayout r5;
        android.os.IBinder $r6;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label3;

        $r7 = <android.hardware.input.KeyboardLayout: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.hardware.input.KeyboardLayout) $r8;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        r5 = null;

        goto label2;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public android.hardware.input.KeyboardLayout[] getKeyboardLayouts() throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r8;
        android.hardware.input.KeyboardLayout[] r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object[] $r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        $r5 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r6 = <android.hardware.input.KeyboardLayout: android.os.Parcelable$Creator CREATOR>;

        $r7 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r6);

        r4 = (android.hardware.input.KeyboardLayout[]) $r7;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        java.lang.String[] r5;
        android.os.IBinder $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r5 = virtualinvoke r3.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean hasKeys(int, int, int[], boolean[]) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0, i1, i2, $i3;
        int[] r1;
        boolean[] r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        boolean z0;
        android.os.IBinder $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: boolean[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeIntArray(int[])>(r1);

     label02:
        if r2 != null goto label08;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(-1);

     label04:
        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i2 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label05:
        z0 = 0;

        if i2 == 0 goto label06;

        z0 = 1;

     label06:
        virtualinvoke r4.<android.os.Parcel: void readBooleanArray(boolean[])>(r2);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return z0;

     label08:
        $i3 = lengthof r2;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($i3);

     label09:
        goto label04;

     label10:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public boolean injectInputEvent(android.view.InputEvent, int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.view.InputEvent r1;
        int i0, i1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        z0 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label02:
        if r1 == null goto label07;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.InputEvent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label05:
        if i1 == 0 goto label10;

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label04;

     label09:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        android.hardware.input.IInputDevicesChangedListener r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: android.hardware.input.IInputDevicesChangedListener;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

     label2:
        if r1 == null goto label6;

     label3:
        r5 = interfaceinvoke r1.<android.hardware.input.IInputDevicesChangedListener: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public void removeKeyboardLayoutForInputDevice(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setCurrentKeyboardLayoutForInputDevice(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void tryPointerSpeed(int) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void vibrate(int, long[], int, android.os.IBinder) throws android.os.RemoteException
    {
        android.hardware.input.IInputManager$Stub$Proxy r0;
        int i0, i1;
        long[] r1;
        android.os.IBinder r2, $r6;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;

        r0 := @this: android.hardware.input.IInputManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: long[];

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.IBinder;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.input.IInputManager");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeLongArray(long[])>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        $r6 = r0.<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
