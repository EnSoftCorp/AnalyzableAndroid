public class android.filterpacks.imageproc.ResizeFilter extends android.filterfw.core.Filter
{
    private boolean mGenerateMipMap;
    private int mInputChannels;
    private boolean mKeepAspectRatio;
    private android.filterfw.core.FrameFormat mLastFormat;
    private int mOHeight;
    private int mOWidth;
    private android.filterfw.core.MutableFrameFormat mOutputFormat;
    private android.filterfw.core.Program mProgram;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.ResizeFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.ResizeFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.ResizeFilter: boolean mKeepAspectRatio> = 0;

        r0.<android.filterpacks.imageproc.ResizeFilter: boolean mGenerateMipMap> = 0;

        r0.<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat mLastFormat> = null;

        return;
    }

    protected void createProgram(android.filterfw.core.FilterContext, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.ResizeFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.FrameFormat r2, $r3, $r7;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r4, $r6;
        android.filterfw.core.ShaderProgram $r5;

        r0 := @this: android.filterpacks.imageproc.ResizeFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        $r3 = r0.<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat mLastFormat>;

        if $r3 == null goto label1;

        $r7 = r0.<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat mLastFormat>;

        $i1 = virtualinvoke $r7.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i2 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getTarget()>();

        if $i1 != $i2 goto label1;

        return;

     label1:
        r0.<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat mLastFormat> = r2;

        $i0 = virtualinvoke r2.<android.filterfw.core.FrameFormat: int getTarget()>();

        tableswitch($i0)
        {
            case 2: goto label3;
            case 3: goto label4;
            default: goto label2;
        };

     label2:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("ResizeFilter could not create suitable program!");

        throw $r4;

     label3:
        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Native ResizeFilter not implemented yet!");

        throw $r6;

     label4:
        $r5 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.Program mProgram> = $r5;

        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.ResizeFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.ResizeFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.ResizeFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, r4, $r13;
        android.filterfw.core.MutableFrameFormat r3;
        android.filterfw.core.GLFrame r5;
        android.filterfw.core.FrameFormat r6, $r7, $r8, $r14;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.filterfw.core.FrameManager $r9, $r11;
        android.filterfw.core.Program $r10, $r16;

        r0 := @this: android.filterpacks.imageproc.ResizeFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        $r7 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        virtualinvoke r0.<android.filterpacks.imageproc.ResizeFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>(r1, $r7);

        $r8 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        r3 = virtualinvoke $r8.<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()>();

        $z0 = r0.<android.filterpacks.imageproc.ResizeFilter: boolean mKeepAspectRatio>;

        if $z0 == 0 goto label1;

        r6 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i2 = r0.<android.filterpacks.imageproc.ResizeFilter: int mOWidth>;

        $i4 = virtualinvoke r6.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i3 = $i2 * $i4;

        $i6 = virtualinvoke r6.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i5 = $i3 / $i6;

        r0.<android.filterpacks.imageproc.ResizeFilter: int mOHeight> = $i5;

     label1:
        $i1 = r0.<android.filterpacks.imageproc.ResizeFilter: int mOWidth>;

        $i0 = r0.<android.filterpacks.imageproc.ResizeFilter: int mOHeight>;

        virtualinvoke r3.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>($i1, $i0);

        $r9 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r4 = virtualinvoke $r9.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r3);

        $z1 = r0.<android.filterpacks.imageproc.ResizeFilter: boolean mGenerateMipMap>;

        if $z1 == 0 goto label3;

        $r11 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r14 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r13 = virtualinvoke $r11.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>($r14);

        r5 = (android.filterfw.core.GLFrame) $r13;

        virtualinvoke r5.<android.filterfw.core.GLFrame: void setTextureParameter(int,int)>(10241, 9985);

        virtualinvoke r5.<android.filterfw.core.GLFrame: void setDataFromFrame(android.filterfw.core.Frame)>(r2);

        virtualinvoke r5.<android.filterfw.core.GLFrame: void generateMipMap()>();

        $r16 = r0.<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r16.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r5, r4);

        virtualinvoke r5.<android.filterfw.core.GLFrame: android.filterfw.core.Frame release()>();

     label2:
        virtualinvoke r0.<android.filterpacks.imageproc.ResizeFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r4);

        virtualinvoke r4.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;

     label3:
        $r10 = r0.<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r10.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r2, r4);

        goto label2;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.ResizeFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.ResizeFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.ResizeFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.ResizeFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
