public class android.os.PatternMatcher extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int PATTERN_LITERAL;
    public static final int PATTERN_PREFIX;
    public static final int PATTERN_SIMPLE_GLOB;
    private final java.lang.String mPattern;
    private final int mType;

    static void <clinit>()
    {
        android.os.PatternMatcher$1 $r0;

        <android.os.PatternMatcher: int PATTERN_SIMPLE_GLOB> = 2;

        <android.os.PatternMatcher: int PATTERN_PREFIX> = 1;

        <android.os.PatternMatcher: int PATTERN_LITERAL> = 0;

        $r0 = new android.os.PatternMatcher$1;

        specialinvoke $r0.<android.os.PatternMatcher$1: void <init>()>();

        <android.os.PatternMatcher: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.os.PatternMatcher r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.os.PatternMatcher: java.lang.String mPattern> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.PatternMatcher: int mType> = $i0;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        android.os.PatternMatcher r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.PatternMatcher: java.lang.String mPattern> = r1;

        r0.<android.os.PatternMatcher: int mType> = i0;

        return;
    }

    static boolean matchPattern(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, i4, i7, $i10, $i12, $i15, $i17, i18;
        boolean z0, z1, $z2, $z3;
        char c5, c6, c8, $c9, $c11, $c13, $c14, $c16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 = 1;

        if r1 != null goto label02;

     label01:
        return 0;

     label02:
        if i0 != 0 goto label03;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z3;

     label03:
        i18 = (int) 1;

        if i0 != i18 goto label04;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r0);

        return $z2;

     label04:
        if i0 != 2 goto label01;

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 > 0 goto label07;

        $i17 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i17 > 0 goto label06;

     label05:
        return z0;

     label06:
        z0 = 0;

        goto label05;

     label07:
        i2 = virtualinvoke r1.<java.lang.String: int length()>();

        i3 = 0;

        i4 = 0;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

     label08:
        if i3 >= i1 goto label29;

        if i4 >= i2 goto label29;

        c6 = c5;

        i3 = i3 + 1;

        if i3 >= i1 goto label12;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

     label09:
        if c6 != 92 goto label13;

        z1 = 1;

     label10:
        if z1 == 0 goto label11;

        c6 = c5;

        i3 = i3 + 1;

        if i3 >= i1 goto label14;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

     label11:
        if c5 != 42 goto label27;

        if z1 != 0 goto label22;

        if c6 != 46 goto label22;

        $i15 = i1 - 1;

        if i3 < $i15 goto label15;

        return 1;

     label12:
        c5 = 0;

        goto label09;

     label13:
        z1 = 0;

        goto label10;

     label14:
        c5 = 0;

        goto label11;

     label15:
        i7 = i3 + 1;

        c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        if c8 != 92 goto label16;

        i7 = i7 + 1;

        if i7 >= i1 goto label19;

        c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

     label16:
        $c16 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        if $c16 != c8 goto label20;

     label17:
        if i4 == i2 goto label01;

        i3 = i7 + 1;

        if i3 >= i1 goto label21;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

     label18:
        i4 = i4 + 1;

        goto label08;

     label19:
        c8 = 0;

        goto label16;

     label20:
        i4 = i4 + 1;

        if i4 < i2 goto label16;

        goto label17;

     label21:
        c5 = 0;

        goto label18;

     label22:
        $c13 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        if $c13 == c6 goto label25;

     label23:
        i3 = i3 + 1;

        if i3 >= i1 goto label26;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

     label24:
        goto label08;

     label25:
        i4 = i4 + 1;

        if i4 < i2 goto label22;

        goto label23;

     label26:
        c5 = 0;

        goto label24;

     label27:
        if c6 == 46 goto label28;

        $c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        if $c14 != c6 goto label01;

     label28:
        i4 = i4 + 1;

        goto label08;

     label29:
        if i3 < i1 goto label30;

        if i4 < i2 goto label30;

        return 1;

     label30:
        $i10 = i1 - 2;

        if i3 != $i10 goto label01;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        if $c9 != 46 goto label01;

        $i12 = i3 + 1;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i12);

        if $c11 != 42 goto label01;

        return 1;
    }

    public int describeContents()
    {
        android.os.PatternMatcher r0;

        r0 := @this: android.os.PatternMatcher;

        return 0;
    }

    public final java.lang.String getPath()
    {
        android.os.PatternMatcher r0;
        java.lang.String $r1;

        r0 := @this: android.os.PatternMatcher;

        $r1 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        return $r1;
    }

    public final int getType()
    {
        android.os.PatternMatcher r0;
        int $i0;

        r0 := @this: android.os.PatternMatcher;

        $i0 = r0.<android.os.PatternMatcher: int mType>;

        return $i0;
    }

    public boolean match(java.lang.String)
    {
        android.os.PatternMatcher r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        $i0 = r0.<android.os.PatternMatcher: int mType>;

        $z0 = staticinvoke <android.os.PatternMatcher: boolean matchPattern(java.lang.String,java.lang.String,int)>($r2, r1, $i0);

        return $z0;
    }

    public java.lang.String toString()
    {
        android.os.PatternMatcher r0;
        java.lang.String r1, $r5, $r8;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7;

        r0 := @this: android.os.PatternMatcher;

        r1 = "? ";

        $i0 = r0.<android.os.PatternMatcher: int mType>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PatternMatcher{");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label2:
        r1 = "LITERAL: ";

        goto label1;

     label3:
        r1 = "PREFIX: ";

        goto label1;

     label4:
        r1 = "GLOB: ";

        goto label1;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.PatternMatcher r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.lang.String $r2;

        r0 := @this: android.os.PatternMatcher;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.os.PatternMatcher: java.lang.String mPattern>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $i1 = r0.<android.os.PatternMatcher: int mType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        return;
    }
}
