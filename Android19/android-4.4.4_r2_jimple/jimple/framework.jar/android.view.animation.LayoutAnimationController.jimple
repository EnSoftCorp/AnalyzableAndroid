public class android.view.animation.LayoutAnimationController extends java.lang.Object
{
    public static final int ORDER_NORMAL;
    public static final int ORDER_RANDOM;
    public static final int ORDER_REVERSE;
    protected android.view.animation.Animation mAnimation;
    private float mDelay;
    private long mDuration;
    protected android.view.animation.Interpolator mInterpolator;
    private long mMaxDelay;
    private int mOrder;
    protected java.util.Random mRandomizer;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.animation.LayoutAnimationController r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int i0, i1, $i2;
        int[] $r4;
        android.util.TypedValue $r5;
        android.view.animation.Animation$Description $r6;
        float $f0;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = <com.android.internal.R$styleable: int[] LayoutAnimation>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        $r5 = virtualinvoke r3.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

        $r6 = staticinvoke <android.view.animation.Animation$Description: android.view.animation.Animation$Description parseValue(android.util.TypedValue)>($r5);

        $f0 = $r6.<android.view.animation.Animation$Description: float value>;

        r0.<android.view.animation.LayoutAnimationController: float mDelay> = $f0;

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(3, 0);

        r0.<android.view.animation.LayoutAnimationController: int mOrder> = $i2;

        i0 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(2, 0);

        if i0 <= 0 goto label1;

        virtualinvoke r0.<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>(r1, i0);

     label1:
        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i1 <= 0 goto label2;

        virtualinvoke r0.<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>(r1, i1);

     label2:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.view.animation.Animation)
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.animation.Animation r1;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.view.animation.Animation;

        specialinvoke r0.<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>(r1, 0.5F);

        return;
    }

    public void <init>(android.view.animation.Animation, float)
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.animation.Animation r1;
        float f0;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.view.animation.Animation;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.animation.LayoutAnimationController: float mDelay> = f0;

        virtualinvoke r0.<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>(r1);

        return;
    }

    public android.view.animation.Animation getAnimation()
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.animation.Animation $r1;

        r0 := @this: android.view.animation.LayoutAnimationController;

        $r1 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        return $r1;
    }

    public final android.view.animation.Animation getAnimationForView(android.view.View)
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.View r1;
        long l0, $l1, $l2, $l3, $l4;
        android.view.animation.Animation r3, $r4, $r5;
        java.lang.CloneNotSupportedException $r6;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.view.View;

        $l1 = virtualinvoke r0.<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>(r1);

        $r4 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        $l2 = virtualinvoke $r4.<android.view.animation.Animation: long getStartOffset()>();

        l0 = $l1 + $l2;

        $l3 = r0.<android.view.animation.LayoutAnimationController: long mMaxDelay>;

        $l4 = staticinvoke <java.lang.Math: long max(long,long)>($l3, l0);

        r0.<android.view.animation.LayoutAnimationController: long mMaxDelay> = $l4;

     label1:
        $r5 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        r3 = virtualinvoke $r5.<android.view.animation.Animation: android.view.animation.Animation clone()>();

        virtualinvoke r3.<android.view.animation.Animation: void setStartOffset(long)>(l0);

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public float getDelay()
    {
        android.view.animation.LayoutAnimationController r0;
        float $f0;

        r0 := @this: android.view.animation.LayoutAnimationController;

        $f0 = r0.<android.view.animation.LayoutAnimationController: float mDelay>;

        return $f0;
    }

    protected long getDelayForView(android.view.View)
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.View r1;
        android.view.animation.LayoutAnimationController$AnimationParameters r2;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        long l0, $l1, $l4;
        android.view.ViewGroup$LayoutParams $r3;
        android.view.animation.Animation $r4;
        int $i2, $i3;
        android.view.animation.Interpolator $r5, $r6;
        android.view.animation.LinearInterpolator $r7;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = $r3.<android.view.ViewGroup$LayoutParams: android.view.animation.LayoutAnimationController$AnimationParameters layoutAnimationParameters>;

        if r2 != null goto label1;

        return 0L;

     label1:
        $f3 = r0.<android.view.animation.LayoutAnimationController: float mDelay>;

        $r4 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        $l1 = virtualinvoke $r4.<android.view.animation.Animation: long getDuration()>();

        $f4 = (float) $l1;

        f0 = $f3 * $f4;

        $i2 = virtualinvoke r0.<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)>(r2);

        $f5 = (float) $i2;

        $f6 = f0 * $f5;

        l0 = (long) $f6;

        $i3 = r2.<android.view.animation.LayoutAnimationController$AnimationParameters: int count>;

        $f7 = (float) $i3;

        f1 = f0 * $f7;

        $r5 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator mInterpolator>;

        if $r5 != null goto label2;

        $r7 = new android.view.animation.LinearInterpolator;

        specialinvoke $r7.<android.view.animation.LinearInterpolator: void <init>()>();

        r0.<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator mInterpolator> = $r7;

     label2:
        $f8 = (float) l0;

        f2 = $f8 / f1;

        $r6 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator mInterpolator>;

        $f9 = interfaceinvoke $r6.<android.view.animation.Interpolator: float getInterpolation(float)>(f2);

        $f10 = f1 * $f9;

        $l4 = (long) $f10;

        return $l4;
    }

    public android.view.animation.Interpolator getInterpolator()
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.animation.Interpolator $r1;

        r0 := @this: android.view.animation.LayoutAnimationController;

        $r1 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator mInterpolator>;

        return $r1;
    }

    public int getOrder()
    {
        android.view.animation.LayoutAnimationController r0;
        int $i0;

        r0 := @this: android.view.animation.LayoutAnimationController;

        $i0 = r0.<android.view.animation.LayoutAnimationController: int mOrder>;

        return $i0;
    }

    protected int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.animation.LayoutAnimationController$AnimationParameters r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Random $r2, $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.view.animation.LayoutAnimationController$AnimationParameters;

        $i0 = virtualinvoke r0.<android.view.animation.LayoutAnimationController: int getOrder()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        $i1 = r1.<android.view.animation.LayoutAnimationController$AnimationParameters: int index>;

        return $i1;

     label2:
        $i4 = r1.<android.view.animation.LayoutAnimationController$AnimationParameters: int count>;

        $i6 = -1 + $i4;

        $i5 = r1.<android.view.animation.LayoutAnimationController$AnimationParameters: int index>;

        $i7 = $i6 - $i5;

        return $i7;

     label3:
        $r2 = r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer>;

        if $r2 != null goto label4;

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>()>();

        r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer> = $r4;

     label4:
        $i2 = r1.<android.view.animation.LayoutAnimationController$AnimationParameters: int count>;

        $f0 = (float) $i2;

        $r3 = r0.<android.view.animation.LayoutAnimationController: java.util.Random mRandomizer>;

        $f1 = virtualinvoke $r3.<java.util.Random: float nextFloat()>();

        $f2 = $f0 * $f1;

        $i3 = (int) $f2;

        return $i3;
    }

    public boolean isDone()
    {
        android.view.animation.LayoutAnimationController r0;
        long $l0, $l1, $l2, $l3, $l4, $l5;
        android.view.animation.Animation $r1;
        byte $b6;

        r0 := @this: android.view.animation.LayoutAnimationController;

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $r1 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        $l1 = virtualinvoke $r1.<android.view.animation.Animation: long getStartTime()>();

        $l2 = r0.<android.view.animation.LayoutAnimationController: long mMaxDelay>;

        $l4 = $l1 + $l2;

        $l3 = r0.<android.view.animation.LayoutAnimationController: long mDuration>;

        $l5 = $l4 + $l3;

        $b6 = $l0 cmp $l5;

        if $b6 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setAnimation(android.content.Context, int)
    {
        android.view.animation.LayoutAnimationController r0;
        android.content.Context r1;
        int i0;
        android.view.animation.Animation $r2;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r1, i0);

        virtualinvoke r0.<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>($r2);

        return;
    }

    public void setAnimation(android.view.animation.Animation)
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.animation.Animation r1, $r2;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.view.animation.Animation;

        r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation> = r1;

        $r2 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        virtualinvoke $r2.<android.view.animation.Animation: void setFillBefore(boolean)>(1);

        return;
    }

    public void setDelay(float)
    {
        android.view.animation.LayoutAnimationController r0;
        float f0;

        r0 := @this: android.view.animation.LayoutAnimationController;

        f0 := @parameter0: float;

        r0.<android.view.animation.LayoutAnimationController: float mDelay> = f0;

        return;
    }

    public void setInterpolator(android.content.Context, int)
    {
        android.view.animation.LayoutAnimationController r0;
        android.content.Context r1;
        int i0;
        android.view.animation.Interpolator $r2;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>(r1, i0);

        virtualinvoke r0.<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>($r2);

        return;
    }

    public void setInterpolator(android.view.animation.Interpolator)
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.animation.Interpolator r1;

        r0 := @this: android.view.animation.LayoutAnimationController;

        r1 := @parameter0: android.view.animation.Interpolator;

        r0.<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator mInterpolator> = r1;

        return;
    }

    public void setOrder(int)
    {
        android.view.animation.LayoutAnimationController r0;
        int i0;

        r0 := @this: android.view.animation.LayoutAnimationController;

        i0 := @parameter0: int;

        r0.<android.view.animation.LayoutAnimationController: int mOrder> = i0;

        return;
    }

    public void start()
    {
        android.view.animation.LayoutAnimationController r0;
        android.view.animation.Animation $r1, $r2;
        long $l0;

        r0 := @this: android.view.animation.LayoutAnimationController;

        $r1 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        $l0 = virtualinvoke $r1.<android.view.animation.Animation: long getDuration()>();

        r0.<android.view.animation.LayoutAnimationController: long mDuration> = $l0;

        r0.<android.view.animation.LayoutAnimationController: long mMaxDelay> = -9223372036854775808L;

        $r2 = r0.<android.view.animation.LayoutAnimationController: android.view.animation.Animation mAnimation>;

        virtualinvoke $r2.<android.view.animation.Animation: void setStartTime(long)>(-1L);

        return;
    }

    public boolean willOverlap()
    {
        android.view.animation.LayoutAnimationController r0;
        float $f0;
        byte $b0;

        r0 := @this: android.view.animation.LayoutAnimationController;

        $f0 = r0.<android.view.animation.LayoutAnimationController: float mDelay>;

        $b0 = $f0 cmpg 1.0F;

        if $b0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <android.view.animation.LayoutAnimationController: int ORDER_REVERSE> = 1;

        <android.view.animation.LayoutAnimationController: int ORDER_RANDOM> = 2;

        <android.view.animation.LayoutAnimationController: int ORDER_NORMAL> = 0;

        return;
    }
}
