final class com.android.server.print.RemotePrintSpooler extends java.lang.Object
{
    private static final long BIND_SPOOLER_SERVICE_TIMEOUT;
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private final com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks mCallbacks;
    private boolean mCanUnbind;
    private final com.android.server.print.RemotePrintSpooler$PrintSpoolerClient mClient;
    private final android.content.Context mContext;
    private boolean mDestroyed;
    private final com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller mGetPrintJobInfoCaller;
    private final com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller mGetPrintJobInfosCaller;
    private final android.content.Intent mIntent;
    private final java.lang.Object mLock;
    private android.print.IPrintSpooler mRemoteInstance;
    private final android.content.ServiceConnection mServiceConnection;
    private final com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller mSetPrintJobStatusCaller;
    private final com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller mSetPrintJobTagCaller;
    private final android.os.UserHandle mUserHandle;

    public void <init>(android.content.Context, int, com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.content.Context r1;
        int i0;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks r2;
        android.content.Intent $r13, r23;
        java.lang.Object r15;
        com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller r16;
        com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller r17;
        com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller r18;
        com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller r19;
        com.android.server.print.RemotePrintSpooler$MyServiceConnection r20;
        android.os.UserHandle r21;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerClient r22;
        android.content.ComponentName r24;
        android.content.ServiceConnection r25;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r15 = new java.lang.Object;

        specialinvoke r15.<java.lang.Object: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock> = r15;

        r16 = new com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller;

        specialinvoke r16.<com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller mGetPrintJobInfosCaller> = r16;

        r17 = new com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller;

        specialinvoke r17.<com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller mGetPrintJobInfoCaller> = r17;

        r18 = new com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller;

        specialinvoke r18.<com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller mSetPrintJobStatusCaller> = r18;

        r19 = new com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller;

        specialinvoke r19.<com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller mSetPrintJobTagCaller> = r19;

        r20 = new com.android.server.print.RemotePrintSpooler$MyServiceConnection;

        specialinvoke r20.<com.android.server.print.RemotePrintSpooler$MyServiceConnection: void <init>(com.android.server.print.RemotePrintSpooler,com.android.server.print.RemotePrintSpooler$1)>(r0, null);

        r25 = (android.content.ServiceConnection) r20;

        r0.<com.android.server.print.RemotePrintSpooler: android.content.ServiceConnection mServiceConnection> = r25;

        r0.<com.android.server.print.RemotePrintSpooler: android.content.Context mContext> = r1;

        r21 = new android.os.UserHandle;

        specialinvoke r21.<android.os.UserHandle: void <init>(int)>(i0);

        r0.<com.android.server.print.RemotePrintSpooler: android.os.UserHandle mUserHandle> = r21;

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks mCallbacks> = r2;

        r22 = new com.android.server.print.RemotePrintSpooler$PrintSpoolerClient;

        specialinvoke r22.<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void <init>(com.android.server.print.RemotePrintSpooler)>(r0);

        r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerClient mClient> = r22;

        r23 = new android.content.Intent;

        specialinvoke r23.<android.content.Intent: void <init>()>();

        r0.<com.android.server.print.RemotePrintSpooler: android.content.Intent mIntent> = r23;

        $r13 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Intent mIntent>;

        r24 = new android.content.ComponentName;

        specialinvoke r24.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.printspooler", "com.android.printspooler.PrintSpoolerService");

        virtualinvoke $r13.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r24);

        return;
    }

    static java.lang.Object access$100(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        $r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        return $r1;
    }

    static android.print.IPrintSpooler access$202(com.android.server.print.RemotePrintSpooler, android.print.IPrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter1: android.print.IPrintSpooler;

        r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance> = r1;

        return r1;
    }

    static void access$300(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void setClientLocked()>();

        return;
    }

    static void access$400(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void clearClientLocked()>();

        return;
    }

    static com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks access$600(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        $r1 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks mCallbacks>;

        return $r1;
    }

    static void access$700(com.android.server.print.RemotePrintSpooler)
    {
        com.android.server.print.RemotePrintSpooler r0;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void onAllPrintJobsHandled()>();

        return;
    }

    static void access$800(com.android.server.print.RemotePrintSpooler, android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobInfo r1;

        r0 := @parameter0: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter1: android.print.PrintJobInfo;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void onPrintJobStateChanged(android.print.PrintJobInfo)>(r1);

        return;
    }

    private void bindLocked() throws java.util.concurrent.TimeoutException
    {
        com.android.server.print.RemotePrintSpooler r0;
        long l0, l1, $l2, $l3;
        android.print.IPrintSpooler $r2, $r7;
        android.os.UserHandle $r3;
        android.content.ServiceConnection $r4;
        android.content.Intent $r5;
        android.content.Context $r6;
        java.lang.Object $r8, $r9;
        byte $b4;
        java.util.concurrent.TimeoutException $r10;
        java.lang.InterruptedException $r11;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r2 == null goto label1;

        return;

     label1:
        $r6 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Context mContext>;

        $r5 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Intent mIntent>;

        $r4 = r0.<com.android.server.print.RemotePrintSpooler: android.content.ServiceConnection mServiceConnection>;

        $r3 = r0.<com.android.server.print.RemotePrintSpooler: android.os.UserHandle mUserHandle>;

        virtualinvoke $r6.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r5, $r4, 1, $r3);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label2:
        $r7 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r7 == null goto label3;

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        return;

     label3:
        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = $l3 - l0;

        l1 = 10000L - $l2;

        $b4 = l1 cmp 0L;

        if $b4 > 0 goto label4;

        $r10 = new java.util.concurrent.TimeoutException;

        specialinvoke $r10.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>("Cannot get spooler!");

        throw $r10;

     label4:
        $r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r8.<java.lang.Object: void wait(long)>(l1);

     label5:
        goto label2;

     label6:
        $r11 := @caughtexception;

        goto label2;

        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    private void clearClientLocked()
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.os.RemoteException r1, $r3;
        android.print.IPrintSpooler $r2;
        java.lang.Throwable r4;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

     label1:
        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        interfaceinvoke $r2.<android.print.IPrintSpooler: void setClient(android.print.IPrintSpoolerClient)>(null);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        r4 = (java.lang.Throwable) r1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error clearing print spooler client", r4);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private android.print.IPrintSpooler getRemoteInstanceLazy() throws java.util.concurrent.TimeoutException
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        android.print.IPrintSpooler r3, r4, $r5;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r5 == null goto label3;

        r4 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        exitmonitor r1;

     label2:
        return r4;

     label3:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void bindLocked()>();

        r3 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        exitmonitor r1;

     label4:
        return r3;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void onAllPrintJobsHandled()
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void unbindLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void onPrintJobStateChanged(android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobInfo r1;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks $r2;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks mCallbacks>;

        interfaceinvoke $r2.<com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks: void onPrintJobStateChanged(android.print.PrintJobInfo)>(r1);

        return;
    }

    private void setClientLocked()
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.os.RemoteException r1, $r4;
        com.android.server.print.RemotePrintSpooler$PrintSpoolerClient $r2;
        android.print.IPrintSpooler $r3;
        android.print.IPrintSpoolerClient r5;
        java.lang.Throwable r6;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

     label1:
        $r3 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$PrintSpoolerClient mClient>;

        r5 = (android.print.IPrintSpoolerClient) $r2;

        interfaceinvoke $r3.<android.print.IPrintSpooler: void setClient(android.print.IPrintSpoolerClient)>(r5);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        r6 = (java.lang.Throwable) r1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print spooler client", r6);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void throwIfCalledOnMainThread()
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Thread $r1, $r4;
        android.content.Context $r2;
        android.os.Looper $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.os.Looper getMainLooper()>();

        $r4 = virtualinvoke $r3.<android.os.Looper: java.lang.Thread getThread()>();

        if $r1 != $r4 goto label1;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Cannot invoke on the main thread");

        throw $r5;

     label1:
        return;
    }

    private void throwIfDestroyedLocked()
    {
        com.android.server.print.RemotePrintSpooler r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        $z0 = r0.<com.android.server.print.RemotePrintSpooler: boolean mDestroyed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot interact with a destroyed instance.");

        throw $r1;

     label1:
        return;
    }

    private void unbindLocked()
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.IPrintSpooler $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.content.ServiceConnection $r4;
        android.content.Context $r5;
        java.lang.InterruptedException $r6;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        $r2 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r2 != null goto label2;

        return;

     label1:
        $r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r3.<java.lang.Object: void wait()>();

     label2:
        $z0 = r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void clearClientLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance> = null;

        $r5 = r0.<com.android.server.print.RemotePrintSpooler: android.content.Context mContext>;

        $r4 = r0.<com.android.server.print.RemotePrintSpooler: android.content.ServiceConnection mServiceConnection>;

        virtualinvoke $r5.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);

        return;

     label3:
        $r6 := @caughtexception;

        goto label2;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public final void createPrintJob(android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobInfo r1;
        java.lang.Object r2, r5, r8, r11, r13, $r16, $r20, $r21, $r26;
        java.lang.Throwable r3, r4, r6, r9, r12, r14, $r17, $r18, $r23, $r24, $r25, $r27, r28;
        java.util.concurrent.TimeoutException r7, $r19;
        android.os.RemoteException r10, $r22;
        android.print.IPrintSpooler $r15;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.print.PrintJobInfo;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r2;

     label02:
        $r15 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r15.<android.print.IPrintSpooler: void createPrintJob(android.print.PrintJobInfo)>(r1);

     label03:
        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r16 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r16.<java.lang.Object: void notifyAll()>();

        exitmonitor r13;

     label05:
        return;

     label06:
        $r25 := @caughtexception;

        r3 = $r25;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r22 := @caughtexception;

        r10 = $r22;

     label10:
        r28 = (java.lang.Throwable) r10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error creating print job.", r28);

     label11:
        r11 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r11;

     label12:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r21.<java.lang.Object: void notifyAll()>();

        exitmonitor r11;

     label13:
        return;

     label14:
        $r18 := @caughtexception;

        r12 = $r18;

     label15:
        exitmonitor r11;

     label16:
        throw r12;

     label17:
        $r19 := @caughtexception;

        r7 = $r19;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error creating print job.", r7);

     label19:
        r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r8;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r20.<java.lang.Object: void notifyAll()>();

        exitmonitor r8;

     label21:
        return;

     label22:
        $r27 := @caughtexception;

        r9 = $r27;

     label23:
        exitmonitor r8;

     label24:
        throw r9;

     label25:
        $r23 := @caughtexception;

        r4 = $r23;

        r5 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r5;

     label26:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r26 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r26.<java.lang.Object: void notifyAll()>();

        exitmonitor r5;

     label27:
        throw r4;

     label28:
        $r24 := @caughtexception;

        r6 = $r24;

     label29:
        exitmonitor r5;

     label30:
        throw r6;

     label31:
        $r17 := @caughtexception;

        r14 = $r17;

     label32:
        exitmonitor r13;

     label33:
        throw r14;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label17;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public final void destroy()
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void unbindLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mDestroyed> = 1;

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String)
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2, r6, $r10, $r11, $r13, $r14, $r15;
        java.lang.String r3, r7, $r12;
        java.lang.Object r4;
        java.lang.Throwable r5, $r22;
        boolean $z0;
        android.print.IPrintSpooler $r16, $r18;
        android.os.IBinder $r17;
        java.lang.String[] $r19;
        android.os.RemoteException $r20;
        java.util.concurrent.TimeoutException $r21;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r4;

     label01:
        $r10 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r11 = virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("destroyed=");

        $z0 = r0.<com.android.server.print.RemotePrintSpooler: boolean mDestroyed>;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        $r13 = virtualinvoke $r11.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r12);

        virtualinvoke $r13.<java.io.PrintWriter: void println()>();

        $r14 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        r6 = virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("bound=");

        $r16 = r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler mRemoteInstance>;

        if $r16 == null goto label12;

     label02:
        r7 = "true";

     label03:
        $r15 = virtualinvoke r6.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r7);

        virtualinvoke $r15.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label04:
        $r18 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        $r17 = interfaceinvoke $r18.<android.print.IPrintSpooler: android.os.IBinder asBinder()>();

        $r19 = newarray (java.lang.String)[1];

        $r19[0] = r3;

        interfaceinvoke $r17.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r1, $r19);

     label05:
        exitmonitor r4;

     label06:
        return;

     label07:
        $r22 := @caughtexception;

        r5 = $r22;

     label08:
        exitmonitor r4;

     label09:
        throw r5;

     label10:
        $r20 := @caughtexception;

        goto label05;

     label11:
        $r21 := @caughtexception;

        goto label05;

     label12:
        r7 = "false";

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.util.concurrent.TimeoutException from label04 to label05 with label11;
        catch android.os.RemoteException from label04 to label05 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public final android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId, int)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobId r1;
        int i0;
        java.lang.Object r2, r5, r8, r11, r13, $r18, $r21, $r26, $r27;
        java.lang.Throwable r3, r4, r6, r9, r12, r15, $r19, $r20, $r22, $r23, $r25, $r29, r30;
        java.util.concurrent.TimeoutException r7, $r28;
        android.os.RemoteException r10, $r24;
        android.print.PrintJobInfo r14;
        com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller $r16;
        android.print.IPrintSpooler $r17;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r2;

     label02:
        $r16 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller mGetPrintJobInfoCaller>;

        $r17 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        r14 = virtualinvoke $r16.<com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller: android.print.PrintJobInfo getPrintJobInfo(android.print.IPrintSpooler,android.print.PrintJobId,int)>($r17, r1, i0);

     label03:
        r13 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r13;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r18.<java.lang.Object: void notifyAll()>();

        exitmonitor r13;

     label05:
        return r14;

     label06:
        $r23 := @caughtexception;

        r3 = $r23;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r24 := @caughtexception;

        r10 = $r24;

     label10:
        r30 = (java.lang.Throwable) r10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error getting print job info.", r30);

     label11:
        r11 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r11;

     label12:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r26 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r26.<java.lang.Object: void notifyAll()>();

        exitmonitor r11;

     label13:
        return null;

     label14:
        $r28 := @caughtexception;

        r7 = $r28;

     label15:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error getting print job info.", r7);

     label16:
        r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r8;

     label17:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r27 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r27.<java.lang.Object: void notifyAll()>();

        exitmonitor r8;

     label18:
        goto label13;

     label19:
        $r29 := @caughtexception;

        r9 = $r29;

     label20:
        exitmonitor r8;

     label21:
        throw r9;

     label22:
        $r20 := @caughtexception;

        r4 = $r20;

        r5 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r5;

     label23:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r21.<java.lang.Object: void notifyAll()>();

        exitmonitor r5;

     label24:
        throw r4;

     label25:
        $r19 := @caughtexception;

        r6 = $r19;

     label26:
        exitmonitor r5;

     label27:
        throw r6;

     label28:
        $r22 := @caughtexception;

        r12 = $r22;

     label29:
        exitmonitor r11;

     label30:
        throw r12;

     label31:
        $r25 := @caughtexception;

        r15 = $r25;

     label32:
        exitmonitor r13;

     label33:
        throw r15;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label14;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public final java.util.List getPrintJobInfos(android.content.ComponentName, int, int)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.content.ComponentName r1;
        int i0, i1;
        java.lang.Object r2, r5, r8, r11, r15, $r18, $r21, $r23, $r27;
        java.lang.Throwable r3, r4, r6, r9, r13, r14, $r19, $r20, $r22, $r26, $r28, $r29, r30;
        java.util.concurrent.TimeoutException r7, $r24;
        android.os.RemoteException r10, $r25;
        java.util.List r12;
        android.print.IPrintSpooler $r16;
        com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller $r17;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r2;

     label02:
        $r17 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller mGetPrintJobInfosCaller>;

        $r16 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        r12 = virtualinvoke $r17.<com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller: java.util.List getPrintJobInfos(android.print.IPrintSpooler,android.content.ComponentName,int,int)>($r16, r1, i0, i1);

     label03:
        r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r18.<java.lang.Object: void notifyAll()>();

        exitmonitor r15;

     label05:
        return r12;

     label06:
        $r26 := @caughtexception;

        r3 = $r26;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r25 := @caughtexception;

        r10 = $r25;

     label10:
        r30 = (java.lang.Throwable) r10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error getting print jobs.", r30);

     label11:
        r11 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r11;

     label12:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r27 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r27.<java.lang.Object: void notifyAll()>();

        exitmonitor r11;

     label13:
        return null;

     label14:
        $r24 := @caughtexception;

        r7 = $r24;

     label15:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error getting print jobs.", r7);

     label16:
        r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r8;

     label17:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r23 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r23.<java.lang.Object: void notifyAll()>();

        exitmonitor r8;

     label18:
        goto label13;

     label19:
        $r20 := @caughtexception;

        r9 = $r20;

     label20:
        exitmonitor r8;

     label21:
        throw r9;

     label22:
        $r22 := @caughtexception;

        r4 = $r22;

        r5 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r5;

     label23:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r21.<java.lang.Object: void notifyAll()>();

        exitmonitor r5;

     label24:
        throw r4;

     label25:
        $r19 := @caughtexception;

        r6 = $r19;

     label26:
        exitmonitor r5;

     label27:
        throw r6;

     label28:
        $r29 := @caughtexception;

        r13 = $r29;

     label29:
        exitmonitor r11;

     label30:
        throw r13;

     label31:
        $r28 := @caughtexception;

        r14 = $r28;

     label32:
        exitmonitor r15;

     label33:
        throw r14;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label14;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public final void removeObsoletePrintJobs()
    {
        com.android.server.print.RemotePrintSpooler r0;
        java.lang.Object r1, r4, r7, r10, r12, $r15, $r18, $r22, $r25;
        java.lang.Throwable r2, r3, r5, r8, r11, r13, $r16, $r17, $r19, $r21, $r24, $r26, r27;
        java.util.concurrent.TimeoutException r6, $r20;
        android.os.RemoteException r9, $r23;
        android.print.IPrintSpooler $r14;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r1 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r1;

     label02:
        $r14 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r14.<android.print.IPrintSpooler: void removeObsoletePrintJobs()>();

     label03:
        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r15.<java.lang.Object: void notifyAll()>();

        exitmonitor r12;

     label05:
        return;

     label06:
        $r24 := @caughtexception;

        r2 = $r24;

     label07:
        exitmonitor r1;

     label08:
        throw r2;

     label09:
        $r23 := @caughtexception;

        r9 = $r23;

     label10:
        r27 = (java.lang.Throwable) r9;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error removing obsolete print jobs .", r27);

     label11:
        r10 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r10;

     label12:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r25 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r25.<java.lang.Object: void notifyAll()>();

        exitmonitor r10;

     label13:
        return;

     label14:
        $r16 := @caughtexception;

        r11 = $r16;

     label15:
        exitmonitor r10;

     label16:
        throw r11;

     label17:
        $r20 := @caughtexception;

        r6 = $r20;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error removing obsolete print jobs .", r6);

     label19:
        r7 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r7;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r22 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r22.<java.lang.Object: void notifyAll()>();

        exitmonitor r7;

     label21:
        return;

     label22:
        $r26 := @caughtexception;

        r8 = $r26;

     label23:
        exitmonitor r7;

     label24:
        throw r8;

     label25:
        $r17 := @caughtexception;

        r3 = $r17;

        r4 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r4;

     label26:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r18.<java.lang.Object: void notifyAll()>();

        exitmonitor r4;

     label27:
        throw r3;

     label28:
        $r19 := @caughtexception;

        r5 = $r19;

     label29:
        exitmonitor r4;

     label30:
        throw r5;

     label31:
        $r21 := @caughtexception;

        r13 = $r21;

     label32:
        exitmonitor r12;

     label33:
        throw r13;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label17;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public final void setPrintJobCancelling(android.print.PrintJobId, boolean)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobId r1;
        boolean z0;
        java.lang.Object r2, r5, r8, r11, r14, $r16, $r20, $r21, $r27;
        java.lang.Throwable r3, r4, r6, r9, r12, r13, $r17, $r18, $r19, $r23, $r24, $r26, r28;
        java.util.concurrent.TimeoutException r7, $r22;
        android.os.RemoteException r10, $r25;
        android.print.IPrintSpooler $r15;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.print.PrintJobId;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r2 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r2;

     label02:
        $r15 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r15.<android.print.IPrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>(r1, z0);

     label03:
        r14 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r14;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r16 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r16.<java.lang.Object: void notifyAll()>();

        exitmonitor r14;

     label05:
        return;

     label06:
        $r18 := @caughtexception;

        r3 = $r18;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r25 := @caughtexception;

        r10 = $r25;

     label10:
        r28 = (java.lang.Throwable) r10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job cancelling.", r28);

     label11:
        r11 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r11;

     label12:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r27 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r27.<java.lang.Object: void notifyAll()>();

        exitmonitor r11;

     label13:
        return;

     label14:
        $r23 := @caughtexception;

        r12 = $r23;

     label15:
        exitmonitor r11;

     label16:
        throw r12;

     label17:
        $r22 := @caughtexception;

        r7 = $r22;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job cancelling.", r7);

     label19:
        r8 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r8;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r21 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r21.<java.lang.Object: void notifyAll()>();

        exitmonitor r8;

     label21:
        return;

     label22:
        $r26 := @caughtexception;

        r9 = $r26;

     label23:
        exitmonitor r8;

     label24:
        throw r9;

     label25:
        $r19 := @caughtexception;

        r4 = $r19;

        r5 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r5;

     label26:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r20.<java.lang.Object: void notifyAll()>();

        exitmonitor r5;

     label27:
        throw r4;

     label28:
        $r17 := @caughtexception;

        r6 = $r17;

     label29:
        exitmonitor r5;

     label30:
        throw r6;

     label31:
        $r24 := @caughtexception;

        r13 = $r24;

     label32:
        exitmonitor r14;

     label33:
        throw r13;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label17;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public final boolean setPrintJobState(android.print.PrintJobId, int, java.lang.String)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobId r1;
        int i0;
        java.lang.String r2;
        java.lang.Object r3, r6, r9, r12, r15, $r18, $r20, $r24, $r27;
        java.lang.Throwable r4, r5, r7, r10, r13, r14, $r21, $r22, $r23, $r26, $r28, $r29, r30;
        java.util.concurrent.TimeoutException r8, $r25;
        android.os.RemoteException r11, $r19;
        boolean z0;
        android.print.IPrintSpooler $r16;
        com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller $r17;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r3;

     label02:
        $r17 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller mSetPrintJobStatusCaller>;

        $r16 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        z0 = virtualinvoke $r17.<com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller: boolean setPrintJobState(android.print.IPrintSpooler,android.print.PrintJobId,int,java.lang.String)>($r16, r1, i0, r2);

     label03:
        r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r18.<java.lang.Object: void notifyAll()>();

        exitmonitor r15;

     label05:
        return z0;

     label06:
        $r22 := @caughtexception;

        r4 = $r22;

     label07:
        exitmonitor r3;

     label08:
        throw r4;

     label09:
        $r19 := @caughtexception;

        r11 = $r19;

     label10:
        r30 = (java.lang.Throwable) r11;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job state.", r30);

     label11:
        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label12:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r20.<java.lang.Object: void notifyAll()>();

        exitmonitor r12;

     label13:
        return 0;

     label14:
        $r26 := @caughtexception;

        r13 = $r26;

     label15:
        exitmonitor r12;

     label16:
        throw r13;

     label17:
        $r25 := @caughtexception;

        r8 = $r25;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job state.", r8);

     label19:
        r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r9;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r27 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r27.<java.lang.Object: void notifyAll()>();

        exitmonitor r9;

     label21:
        return 0;

     label22:
        $r28 := @caughtexception;

        r10 = $r28;

     label23:
        exitmonitor r9;

     label24:
        throw r10;

     label25:
        $r21 := @caughtexception;

        r5 = $r21;

        r6 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r6;

     label26:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r24 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r24.<java.lang.Object: void notifyAll()>();

        exitmonitor r6;

     label27:
        throw r5;

     label28:
        $r29 := @caughtexception;

        r7 = $r29;

     label29:
        exitmonitor r6;

     label30:
        throw r7;

     label31:
        $r23 := @caughtexception;

        r14 = $r23;

     label32:
        exitmonitor r15;

     label33:
        throw r14;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label17;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public final boolean setPrintJobTag(android.print.PrintJobId, java.lang.String)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.print.PrintJobId r1;
        java.lang.String r2;
        java.lang.Object r3, r6, r9, r12, r14, $r18, $r20, $r26, $r29;
        java.lang.Throwable r4, r5, r7, r10, r13, r15, $r19, $r21, $r22, $r23, $r25, $r28, r30;
        java.util.concurrent.TimeoutException r8, $r24;
        android.os.RemoteException r11, $r27;
        boolean z0;
        com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller $r16;
        android.print.IPrintSpooler $r17;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.print.PrintJobId;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r3;

     label02:
        $r16 = r0.<com.android.server.print.RemotePrintSpooler: com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller mSetPrintJobTagCaller>;

        $r17 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        z0 = virtualinvoke $r16.<com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller: boolean setPrintJobTag(android.print.IPrintSpooler,android.print.PrintJobId,java.lang.String)>($r17, r1, r2);

     label03:
        r14 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r14;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r18 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r18.<java.lang.Object: void notifyAll()>();

        exitmonitor r14;

     label05:
        return z0;

     label06:
        $r23 := @caughtexception;

        r4 = $r23;

     label07:
        exitmonitor r3;

     label08:
        throw r4;

     label09:
        $r27 := @caughtexception;

        r11 = $r27;

     label10:
        r30 = (java.lang.Throwable) r11;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job tag.", r30);

     label11:
        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label12:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r29 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r29.<java.lang.Object: void notifyAll()>();

        exitmonitor r12;

     label13:
        return 0;

     label14:
        $r28 := @caughtexception;

        r13 = $r28;

     label15:
        exitmonitor r12;

     label16:
        throw r13;

     label17:
        $r24 := @caughtexception;

        r8 = $r24;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error setting print job tag.", r8);

     label19:
        r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r9;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r26 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r26.<java.lang.Object: void notifyAll()>();

        exitmonitor r9;

     label21:
        return 0;

     label22:
        $r25 := @caughtexception;

        r10 = $r25;

     label23:
        exitmonitor r9;

     label24:
        throw r10;

     label25:
        $r19 := @caughtexception;

        r5 = $r19;

        r6 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r6;

     label26:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r20.<java.lang.Object: void notifyAll()>();

        exitmonitor r6;

     label27:
        throw r5;

     label28:
        $r21 := @caughtexception;

        r7 = $r21;

     label29:
        exitmonitor r6;

     label30:
        throw r7;

     label31:
        $r22 := @caughtexception;

        r15 = $r22;

     label32:
        exitmonitor r14;

     label33:
        throw r15;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label17;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public final void writePrintJobData(android.os.ParcelFileDescriptor, android.print.PrintJobId)
    {
        com.android.server.print.RemotePrintSpooler r0;
        android.os.ParcelFileDescriptor r1;
        android.print.PrintJobId r2;
        java.lang.Object r3, r6, r9, r12, r15, $r17, $r20, $r22, $r26;
        java.lang.Throwable r4, r5, r7, r10, r13, r14, $r18, $r21, $r23, $r25, $r27, $r28, r30;
        java.util.concurrent.TimeoutException r8, $r19;
        android.os.RemoteException r11, $r24;
        android.print.IPrintSpooler $r16;
        java.lang.AutoCloseable r29, r31, r32, r33;

        r0 := @this: com.android.server.print.RemotePrintSpooler;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.print.PrintJobId;

        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfCalledOnMainThread()>();

        r3 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        specialinvoke r0.<com.android.server.print.RemotePrintSpooler: void throwIfDestroyedLocked()>();

        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 0;

        exitmonitor r3;

     label02:
        $r16 = specialinvoke r0.<com.android.server.print.RemotePrintSpooler: android.print.IPrintSpooler getRemoteInstanceLazy()>();

        interfaceinvoke $r16.<android.print.IPrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>(r1, r2);

     label03:
        r29 = (java.lang.AutoCloseable) r1;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r29);

        r15 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r15;

     label04:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r17 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r17.<java.lang.Object: void notifyAll()>();

        exitmonitor r15;

     label05:
        return;

     label06:
        $r27 := @caughtexception;

        r4 = $r27;

     label07:
        exitmonitor r3;

     label08:
        throw r4;

     label09:
        $r24 := @caughtexception;

        r11 = $r24;

     label10:
        r30 = (java.lang.Throwable) r11;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error writing print job data.", r30);

     label11:
        r31 = (java.lang.AutoCloseable) r1;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r31);

        r12 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r12;

     label12:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r26 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r26.<java.lang.Object: void notifyAll()>();

        exitmonitor r12;

     label13:
        return;

     label14:
        $r21 := @caughtexception;

        r13 = $r21;

     label15:
        exitmonitor r12;

     label16:
        throw r13;

     label17:
        $r19 := @caughtexception;

        r8 = $r19;

     label18:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintSpooler", "Error writing print job data.", r8);

     label19:
        r32 = (java.lang.AutoCloseable) r1;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r32);

        r9 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r9;

     label20:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r20 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r20.<java.lang.Object: void notifyAll()>();

        exitmonitor r9;

     label21:
        return;

     label22:
        $r18 := @caughtexception;

        r10 = $r18;

     label23:
        exitmonitor r9;

     label24:
        throw r10;

     label25:
        $r23 := @caughtexception;

        r5 = $r23;

        r33 = (java.lang.AutoCloseable) r1;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r33);

        r6 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        entermonitor r6;

     label26:
        r0.<com.android.server.print.RemotePrintSpooler: boolean mCanUnbind> = 1;

        $r22 = r0.<com.android.server.print.RemotePrintSpooler: java.lang.Object mLock>;

        virtualinvoke $r22.<java.lang.Object: void notifyAll()>();

        exitmonitor r6;

     label27:
        throw r5;

     label28:
        $r28 := @caughtexception;

        r7 = $r28;

     label29:
        exitmonitor r6;

     label30:
        throw r7;

     label31:
        $r25 := @caughtexception;

        r14 = $r25;

     label32:
        exitmonitor r15;

     label33:
        throw r14;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label02 to label03 with label09;
        catch java.util.concurrent.TimeoutException from label02 to label03 with label17;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
    }

    public static void <clinit>()
    {
        <com.android.server.print.RemotePrintSpooler: java.lang.String LOG_TAG> = "RemotePrintSpooler";

        <com.android.server.print.RemotePrintSpooler: boolean DEBUG> = 0;

        <com.android.server.print.RemotePrintSpooler: long BIND_SPOOLER_SERVICE_TIMEOUT> = 10000L;

        return;
    }
}
