final class com.android.server.UiModeManagerService extends android.app.IUiModeManager$Stub
{
    private static final boolean ENABLE_LAUNCH_CAR_DOCK_APP;
    private static final boolean ENABLE_LAUNCH_DESK_DOCK_APP;
    private static final boolean LOG;
    private static final java.lang.String TAG;
    private final android.content.BroadcastReceiver mBatteryReceiver;
    private boolean mCarModeEnabled;
    private final boolean mCarModeKeepsScreenOn;
    private boolean mCharging;
    private boolean mComputedNightMode;
    private android.content.res.Configuration mConfiguration;
    private final android.content.Context mContext;
    private int mCurUiMode;
    private final int mDefaultUiModeType;
    private final boolean mDeskModeKeepsScreenOn;
    private final android.content.BroadcastReceiver mDockModeReceiver;
    private int mDockState;
    private final android.os.Handler mHandler;
    private boolean mHoldingConfiguration;
    private int mLastBroadcastState;
    final java.lang.Object mLock;
    private int mNightMode;
    private android.app.NotificationManager mNotificationManager;
    private final android.os.PowerManager mPowerManager;
    private final android.content.BroadcastReceiver mResultReceiver;
    private int mSetUiMode;
    private android.app.StatusBarManager mStatusBarManager;
    private boolean mSystemReady;
    private final boolean mTelevision;
    private final com.android.server.TwilightService$TwilightListener mTwilightListener;
    private final com.android.server.TwilightService mTwilightService;
    private final android.os.PowerManager$WakeLock mWakeLock;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.UiModeManagerService: boolean ENABLE_LAUNCH_DESK_DOCK_APP> = 1;

        <com.android.server.UiModeManagerService: boolean ENABLE_LAUNCH_CAR_DOCK_APP> = 1;

        $r0 = class "android/app/UiModeManager";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.UiModeManagerService: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context, com.android.server.TwilightService)
    {
        com.android.server.UiModeManagerService r0;
        android.content.Context r1, $r11, $r14, $r29;
        com.android.server.TwilightService r2, $r32;
        boolean z0, z1, $z2;
        android.content.BroadcastReceiver $r13, $r17;
        android.os.PowerManager $r18, $r20;
        java.lang.Object $r19, r34;
        java.lang.String $r21;
        android.content.res.Configuration $r22, r35;
        android.os.PowerManager$WakeLock $r23;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        android.content.res.Resources $r24, $r25, $r27;
        android.content.pm.PackageManager $r26;
        android.os.Handler $r28, r33;
        android.content.ContentResolver $r30;
        com.android.server.TwilightService$TwilightListener $r31;
        com.android.server.UiModeManagerService$1 r36;
        com.android.server.UiModeManagerService$2 r37;
        com.android.server.UiModeManagerService$3 r38;
        com.android.server.UiModeManagerService$4 r39;
        android.content.IntentFilter r40, r41;
        android.os.IBinder r42;

        r0 := @this: com.android.server.UiModeManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.TwilightService;

        z0 = 1;

        specialinvoke r0.<android.app.IUiModeManager$Stub: void <init>()>();

        r33 = new android.os.Handler;

        specialinvoke r33.<android.os.Handler: void <init>()>();

        r0.<com.android.server.UiModeManagerService: android.os.Handler mHandler> = r33;

        r34 = new java.lang.Object;

        specialinvoke r34.<java.lang.Object: void <init>()>();

        r0.<com.android.server.UiModeManagerService: java.lang.Object mLock> = r34;

        r0.<com.android.server.UiModeManagerService: int mDockState> = 0;

        r0.<com.android.server.UiModeManagerService: int mLastBroadcastState> = 0;

        i4 = (int) 1;

        r0.<com.android.server.UiModeManagerService: int mNightMode> = i4;

        r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled> = 0;

        r0.<com.android.server.UiModeManagerService: boolean mCharging> = 0;

        r0.<com.android.server.UiModeManagerService: int mCurUiMode> = 0;

        r0.<com.android.server.UiModeManagerService: int mSetUiMode> = 0;

        r0.<com.android.server.UiModeManagerService: boolean mHoldingConfiguration> = 0;

        r35 = new android.content.res.Configuration;

        specialinvoke r35.<android.content.res.Configuration: void <init>()>();

        r0.<com.android.server.UiModeManagerService: android.content.res.Configuration mConfiguration> = r35;

        r36 = new com.android.server.UiModeManagerService$1;

        specialinvoke r36.<com.android.server.UiModeManagerService$1: void <init>(com.android.server.UiModeManagerService)>(r0);

        r0.<com.android.server.UiModeManagerService: android.content.BroadcastReceiver mResultReceiver> = r36;

        r37 = new com.android.server.UiModeManagerService$2;

        specialinvoke r37.<com.android.server.UiModeManagerService$2: void <init>(com.android.server.UiModeManagerService)>(r0);

        r0.<com.android.server.UiModeManagerService: android.content.BroadcastReceiver mDockModeReceiver> = r37;

        r38 = new com.android.server.UiModeManagerService$3;

        specialinvoke r38.<com.android.server.UiModeManagerService$3: void <init>(com.android.server.UiModeManagerService)>(r0);

        r0.<com.android.server.UiModeManagerService: android.content.BroadcastReceiver mBatteryReceiver> = r38;

        r39 = new com.android.server.UiModeManagerService$4;

        specialinvoke r39.<com.android.server.UiModeManagerService$4: void <init>(com.android.server.UiModeManagerService)>(r0);

        r0.<com.android.server.UiModeManagerService: com.android.server.TwilightService$TwilightListener mTwilightListener> = r39;

        r0.<com.android.server.UiModeManagerService: android.content.Context mContext> = r1;

        r0.<com.android.server.UiModeManagerService: com.android.server.TwilightService mTwilightService> = r2;

        r42 = (android.os.IBinder) r0;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("uimode", r42);

        $r11 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r13 = r0.<com.android.server.UiModeManagerService: android.content.BroadcastReceiver mDockModeReceiver>;

        r40 = new android.content.IntentFilter;

        specialinvoke r40.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.DOCK_EVENT");

        virtualinvoke $r11.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r13, r40);

        $r14 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r17 = r0.<com.android.server.UiModeManagerService: android.content.BroadcastReceiver mBatteryReceiver>;

        r41 = new android.content.IntentFilter;

        specialinvoke r41.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BATTERY_CHANGED");

        virtualinvoke $r14.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r17, r41);

        $r19 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r18 = (android.os.PowerManager) $r19;

        r0.<com.android.server.UiModeManagerService: android.os.PowerManager mPowerManager> = $r18;

        $r20 = r0.<com.android.server.UiModeManagerService: android.os.PowerManager mPowerManager>;

        $r21 = <com.android.server.UiModeManagerService: java.lang.String TAG>;

        $r23 = virtualinvoke $r20.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(26, $r21);

        r0.<com.android.server.UiModeManagerService: android.os.PowerManager$WakeLock mWakeLock> = $r23;

        $r22 = r0.<com.android.server.UiModeManagerService: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r22.<android.content.res.Configuration: void setToDefaults()>();

        $r24 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r24.<android.content.res.Resources: int getInteger(int)>(17694743);

        r0.<com.android.server.UiModeManagerService: int mDefaultUiModeType> = $i0;

        $r25 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r25.<android.content.res.Resources: int getInteger(int)>(17694745);

        i5 = (int) 1;

        if $i1 != i5 goto label3;

        z1 = 1;

     label1:
        r0.<com.android.server.UiModeManagerService: boolean mCarModeKeepsScreenOn> = z1;

        $r27 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r27.<android.content.res.Resources: int getInteger(int)>(17694744);

        i6 = (int) 1;

        if $i2 != i6 goto label4;

     label2:
        r0.<com.android.server.UiModeManagerService: boolean mDeskModeKeepsScreenOn> = z0;

        $r26 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z2 = virtualinvoke $r26.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.type.television");

        r0.<com.android.server.UiModeManagerService: boolean mTelevision> = $z2;

        $r29 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r30 = virtualinvoke $r29.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r30, "ui_night_mode", 0);

        r0.<com.android.server.UiModeManagerService: int mNightMode> = $i3;

        $r32 = r0.<com.android.server.UiModeManagerService: com.android.server.TwilightService mTwilightService>;

        $r31 = r0.<com.android.server.UiModeManagerService: com.android.server.TwilightService$TwilightListener mTwilightListener>;

        $r28 = r0.<com.android.server.UiModeManagerService: android.os.Handler mHandler>;

        virtualinvoke $r32.<com.android.server.TwilightService: void registerListener(com.android.server.TwilightService$TwilightListener,android.os.Handler)>($r31, $r28);

        return;

     label3:
        z1 = 0;

        goto label1;

     label4:
        z0 = 0;

        goto label2;
    }

    static void access$000(com.android.server.UiModeManagerService, java.lang.String, int, int)
    {
        com.android.server.UiModeManagerService r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.UiModeManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateAfterBroadcastLocked(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    static void access$100(com.android.server.UiModeManagerService, int)
    {
        com.android.server.UiModeManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.UiModeManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateDockState(int)>(i0);

        return;
    }

    static boolean access$202(com.android.server.UiModeManagerService, boolean)
    {
        com.android.server.UiModeManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.UiModeManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.UiModeManagerService: boolean mCharging> = z0;

        return z0;
    }

    static boolean access$300(com.android.server.UiModeManagerService)
    {
        com.android.server.UiModeManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.UiModeManagerService;

        $z0 = r0.<com.android.server.UiModeManagerService: boolean mSystemReady>;

        return $z0;
    }

    static void access$400(com.android.server.UiModeManagerService, int, int)
    {
        com.android.server.UiModeManagerService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.UiModeManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateLocked(int,int)>(i0, i1);

        return;
    }

    static void access$500(com.android.server.UiModeManagerService)
    {
        com.android.server.UiModeManagerService r0;

        r0 := @parameter0: com.android.server.UiModeManagerService;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateTwilight()>();

        return;
    }

    private void adjustStatusBarCarModeLocked()
    {
        com.android.server.UiModeManagerService r0;
        android.content.Intent r1, $r10;
        android.app.Notification r2, $r12;
        android.app.StatusBarManager r3, $r4, $r5, $r27;
        int i0;
        android.app.NotificationManager $r6, $r7, $r9, $r23, $r24;
        boolean $z0, $z1;
        android.os.UserHandle $r8, $r19, $r20;
        android.content.Context $r11, $r13, $r15, $r17, $r18, $r22, $r26;
        java.lang.String $r14, $r16;
        android.app.PendingIntent $r21;
        java.lang.Object $r25, $r28;

        r0 := @this: com.android.server.UiModeManagerService;

        $r4 = r0.<com.android.server.UiModeManagerService: android.app.StatusBarManager mStatusBarManager>;

        if $r4 != null goto label1;

        $r26 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r28 = virtualinvoke $r26.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("statusbar");

        $r27 = (android.app.StatusBarManager) $r28;

        r0.<com.android.server.UiModeManagerService: android.app.StatusBarManager mStatusBarManager> = $r27;

     label1:
        $r5 = r0.<com.android.server.UiModeManagerService: android.app.StatusBarManager mStatusBarManager>;

        if $r5 == null goto label3;

        r3 = r0.<com.android.server.UiModeManagerService: android.app.StatusBarManager mStatusBarManager>;

        $z1 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z1 == 0 goto label6;

        i0 = 524288;

     label2:
        virtualinvoke r3.<android.app.StatusBarManager: void disable(int)>(i0);

     label3:
        $r6 = r0.<com.android.server.UiModeManagerService: android.app.NotificationManager mNotificationManager>;

        if $r6 != null goto label4;

        $r22 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r25 = virtualinvoke $r22.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        $r24 = (android.app.NotificationManager) $r25;

        r0.<com.android.server.UiModeManagerService: android.app.NotificationManager mNotificationManager> = $r24;

     label4:
        $r7 = r0.<com.android.server.UiModeManagerService: android.app.NotificationManager mNotificationManager>;

        if $r7 == null goto label5;

        $z0 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z0 == 0 goto label7;

        $r10 = new android.content.Intent;

        $r11 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        specialinvoke $r10.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r11, class "com/android/internal/app/DisableCarModeActivity");

        r1 = $r10;

        $r12 = new android.app.Notification;

        specialinvoke $r12.<android.app.Notification: void <init>()>();

        r2 = $r12;

        r2.<android.app.Notification: int icon> = 17302915;

        r2.<android.app.Notification: int defaults> = 4;

        r2.<android.app.Notification: int flags> = 2;

        r2.<android.app.Notification: long when> = 0L;

        $r15 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r13 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.String getString(int)>(17040578);

        $r17 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r16 = virtualinvoke $r17.<android.content.Context: java.lang.String getString(int)>(17040579);

        $r18 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r19 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        $r21 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>($r18, 0, r1, 0, null, $r19);

        virtualinvoke r2.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>($r15, $r14, $r16, $r21);

        $r23 = r0.<com.android.server.UiModeManagerService: android.app.NotificationManager mNotificationManager>;

        $r20 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r23.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, 17040578, r2, $r20);

     label5:
        return;

     label6:
        i0 = 0;

        goto label2;

     label7:
        $r9 = r0.<com.android.server.UiModeManagerService: android.app.NotificationManager mNotificationManager>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, 17040578, $r8);

        return;
    }

    static android.content.Intent buildHomeIntent(java.lang.String)
    {
        java.lang.String r0;
        android.content.Intent r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(r0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>(270532608);

        return r1;
    }

    private static boolean isDeskDockState(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isDoingNightModeLocked()
    {
        com.android.server.UiModeManagerService r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.UiModeManagerService;

        $z0 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        if $i0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void sendConfigurationAndStartDreamOrDockAppLocked(java.lang.String)
    {
        com.android.server.UiModeManagerService r0;
        java.lang.String r1, $r10, $r13, $r16, $r20;
        boolean z0, z1;
        android.content.Intent r2;
        android.os.RemoteException r3, $r15;
        int i0;
        android.content.Context $r4, $r5;
        android.app.IActivityManager $r6;
        android.content.res.Configuration $r7;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r18, $r19, r21, r22;
        java.lang.Throwable r23;

        r0 := @this: com.android.server.UiModeManagerService;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.server.UiModeManagerService: boolean mHoldingConfiguration> = 0;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateConfigurationLocked()>();

        z0 = 0;

        if r1 == null goto label3;

        r2 = staticinvoke <com.android.server.UiModeManagerService: android.content.Intent buildHomeIntent(java.lang.String)>(r1);

        $r5 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        z1 = staticinvoke <android.service.dreams.Sandman: boolean shouldStartDockApp(android.content.Context,android.content.Intent)>($r5, r2);

        z0 = 0;

        if z1 == 0 goto label3;

     label1:
        $r6 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r7 = r0.<com.android.server.UiModeManagerService: android.content.res.Configuration mConfiguration>;

        i0 = interfaceinvoke $r6.<android.app.IActivityManager: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>(null, null, r2, null, null, null, 0, 0, $r7, null, -2);

     label2:
        if i0 < 0 goto label5;

        z0 = 1;

     label3:
        specialinvoke r0.<com.android.server.UiModeManagerService: void sendConfigurationLocked()>();

        if r1 == null goto label4;

        if z0 != 0 goto label4;

        $r4 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        staticinvoke <android.service.dreams.Sandman: void startDreamWhenDockedIfAppropriate(android.content.Context)>($r4);

     label4:
        return;

     label5:
        z0 = 0;

        if i0 == -1 goto label3;

     label6:
        $r10 = <com.android.server.UiModeManagerService: java.lang.String TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not start dock app: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", startActivityWithConfig result ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r10, $r13);

     label7:
        z0 = 0;

        goto label3;

     label8:
        $r15 := @caughtexception;

        r3 = $r15;

        $r16 = <com.android.server.UiModeManagerService: java.lang.String TAG>;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not start dock app: ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r23 = (java.lang.Throwable) r3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r16, $r20, r23);

        z0 = 0;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private void sendConfigurationLocked()
    {
        com.android.server.UiModeManagerService r0;
        android.os.RemoteException r1, $r6;
        android.content.res.Configuration $r2, $r3, $r5;
        int $i0, $i1, $i2;
        android.app.IActivityManager $r4;
        java.lang.String $r7;
        java.lang.Throwable r8;

        r0 := @this: com.android.server.UiModeManagerService;

        $i1 = r0.<com.android.server.UiModeManagerService: int mSetUiMode>;

        $r2 = r0.<com.android.server.UiModeManagerService: android.content.res.Configuration mConfiguration>;

        $i0 = $r2.<android.content.res.Configuration: int uiMode>;

        if $i1 == $i0 goto label2;

        $r3 = r0.<com.android.server.UiModeManagerService: android.content.res.Configuration mConfiguration>;

        $i2 = $r3.<android.content.res.Configuration: int uiMode>;

        r0.<com.android.server.UiModeManagerService: int mSetUiMode> = $i2;

     label1:
        $r4 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r5 = r0.<com.android.server.UiModeManagerService: android.content.res.Configuration mConfiguration>;

        interfaceinvoke $r4.<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>($r5);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = <com.android.server.UiModeManagerService: java.lang.String TAG>;

        r8 = (java.lang.Throwable) r1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Failure communicating with activity manager", r8);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void setCarModeLocked(boolean)
    {
        com.android.server.UiModeManagerService r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.UiModeManagerService;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z1 == z0 goto label1;

        r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled> = z0;

     label1:
        return;
    }

    private void updateAfterBroadcastLocked(java.lang.String, int, int)
    {
        com.android.server.UiModeManagerService r0;
        java.lang.String r1, r2, $r3, $r4;
        int i0, i1, i2, i3, i4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.UiModeManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = <android.app.UiModeManager: java.lang.String ACTION_ENTER_CAR_MODE>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        i4 = i0 & 1;

        r2 = null;

        if i4 == 0 goto label1;

        r2 = "android.intent.category.CAR_DOCK";

     label1:
        specialinvoke r0.<com.android.server.UiModeManagerService: void sendConfigurationAndStartDreamOrDockAppLocked(java.lang.String)>(r2);

        return;

     label2:
        $r4 = <android.app.UiModeManager: java.lang.String ACTION_ENTER_DESK_MODE>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        i3 = i0 & 1;

        r2 = null;

        if i3 == 0 goto label1;

        r2 = "android.intent.category.DESK_DOCK";

        goto label1;

     label3:
        i2 = i1 & 1;

        r2 = null;

        if i2 == 0 goto label1;

        r2 = "android.intent.category.HOME";

        goto label1;
    }

    private void updateComputedNightModeLocked()
    {
        com.android.server.UiModeManagerService r0;
        com.android.server.TwilightService$TwilightState r1;
        com.android.server.TwilightService $r2;
        boolean $z0;

        r0 := @this: com.android.server.UiModeManagerService;

        $r2 = r0.<com.android.server.UiModeManagerService: com.android.server.TwilightService mTwilightService>;

        r1 = virtualinvoke $r2.<com.android.server.TwilightService: com.android.server.TwilightService$TwilightState getCurrentState()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.TwilightService$TwilightState: boolean isNight()>();

        r0.<com.android.server.UiModeManagerService: boolean mComputedNightMode> = $z0;

     label1:
        return;
    }

    private void updateConfigurationLocked()
    {
        com.android.server.UiModeManagerService r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7;
        byte b2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.content.res.Configuration $r1;

        r0 := @this: com.android.server.UiModeManagerService;

        $z0 = r0.<com.android.server.UiModeManagerService: boolean mTelevision>;

        if $z0 == 0 goto label06;

        i0 = 4;

     label01:
        $z1 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z1 == 0 goto label07;

        i0 = 3;

     label02:
        $z3 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z3 == 0 goto label10;

        $i5 = r0.<com.android.server.UiModeManagerService: int mNightMode>;

        if $i5 != 0 goto label09;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateComputedNightModeLocked()>();

        $z5 = r0.<com.android.server.UiModeManagerService: boolean mComputedNightMode>;

        if $z5 == 0 goto label08;

        b2 = 32;

     label03:
        i1 = i0 | b2;

     label04:
        r0.<com.android.server.UiModeManagerService: int mCurUiMode> = i1;

        $z4 = r0.<com.android.server.UiModeManagerService: boolean mHoldingConfiguration>;

        if $z4 != 0 goto label05;

        $r1 = r0.<com.android.server.UiModeManagerService: android.content.res.Configuration mConfiguration>;

        $r1.<android.content.res.Configuration: int uiMode> = i1;

     label05:
        return;

     label06:
        i0 = r0.<com.android.server.UiModeManagerService: int mDefaultUiModeType>;

        goto label01;

     label07:
        $i3 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        $z2 = staticinvoke <com.android.server.UiModeManagerService: boolean isDeskDockState(int)>($i3);

        if $z2 == 0 goto label02;

        i0 = 2;

        goto label02;

     label08:
        b2 = 16;

        goto label03;

     label09:
        $i6 = r0.<com.android.server.UiModeManagerService: int mNightMode>;

        $i7 = $i6 << 4;

        i1 = i0 | $i7;

        goto label04;

     label10:
        $i4 = i0 & -49;

        i1 = 16 | $i4;

        goto label04;
    }

    private void updateDockState(int)
    {
        com.android.server.UiModeManagerService r0;
        int i0, $i1, $i2;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.UiModeManagerService;

        i0 := @parameter0: int;

        z0 = 1;

        r1 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        if i0 == $i1 goto label3;

        r0.<com.android.server.UiModeManagerService: int mDockState> = i0;

        $i2 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        if $i2 != 2 goto label8;

     label2:
        specialinvoke r0.<com.android.server.UiModeManagerService: void setCarModeLocked(boolean)>(z0);

        $z1 = r0.<com.android.server.UiModeManagerService: boolean mSystemReady>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateLocked(int,int)>(1, 0);

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        r2 = $r3;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        z0 = 0;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void updateLocked(int, int)
    {
        com.android.server.UiModeManagerService r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String r1, r2, r4;
        android.content.Intent r3, $r8, $r14, $r15;
        android.os.PowerManager$WakeLock $r5, $r6, $r7;
        android.os.UserHandle $r10, $r18, $r19;
        android.content.Context $r11, $r16, $r17;
        android.content.BroadcastReceiver $r13;

        r0 := @this: com.android.server.UiModeManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i7 = r0.<com.android.server.UiModeManagerService: int mLastBroadcastState>;

        if $i7 != 2 goto label09;

        specialinvoke r0.<com.android.server.UiModeManagerService: void adjustStatusBarCarModeLocked()>();

        r1 = <android.app.UiModeManager: java.lang.String ACTION_EXIT_CAR_MODE>;

     label01:
        $z3 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z3 == 0 goto label10;

        i5 = r0.<com.android.server.UiModeManagerService: int mLastBroadcastState>;

        r2 = null;

        if i5 == 2 goto label03;

        specialinvoke r0.<com.android.server.UiModeManagerService: void adjustStatusBarCarModeLocked()>();

        if r1 == null goto label02;

        $r16 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r15 = new android.content.Intent;

        specialinvoke $r15.<android.content.Intent: void <init>(java.lang.String)>(r1);

        $r19 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r16.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r15, $r19);

     label02:
        r0.<com.android.server.UiModeManagerService: int mLastBroadcastState> = 2;

        r2 = <android.app.UiModeManager: java.lang.String ACTION_ENTER_CAR_MODE>;

     label03:
        if r2 == null goto label13;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>(r2);

        r3 = $r8;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("enableFlags", i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("disableFlags", i1);

        $r11 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r10 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        $r13 = r0.<com.android.server.UiModeManagerService: android.content.BroadcastReceiver mResultReceiver>;

        virtualinvoke $r11.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r3, $r10, null, $r13, null, -1, null, null);

        r0.<com.android.server.UiModeManagerService: boolean mHoldingConfiguration> = 1;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateConfigurationLocked()>();

     label04:
        $z6 = r0.<com.android.server.UiModeManagerService: boolean mCharging>;

        if $z6 == 0 goto label17;

        $z9 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z9 == 0 goto label05;

        $z11 = r0.<com.android.server.UiModeManagerService: boolean mCarModeKeepsScreenOn>;

        if $z11 != 0 goto label06;

     label05:
        $i10 = r0.<com.android.server.UiModeManagerService: int mCurUiMode>;

        if $i10 != 2 goto label17;

        $z10 = r0.<com.android.server.UiModeManagerService: boolean mDeskModeKeepsScreenOn>;

        if $z10 == 0 goto label17;

     label06:
        z1 = 1;

     label07:
        $r5 = r0.<com.android.server.UiModeManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        $z8 = virtualinvoke $r5.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if z1 == $z8 goto label08;

        if z1 == 0 goto label18;

        $r6 = r0.<com.android.server.UiModeManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void acquire()>();

     label08:
        return;

     label09:
        $i6 = r0.<com.android.server.UiModeManagerService: int mLastBroadcastState>;

        z0 = staticinvoke <com.android.server.UiModeManagerService: boolean isDeskDockState(int)>($i6);

        r1 = null;

        if z0 == 0 goto label01;

        r1 = <android.app.UiModeManager: java.lang.String ACTION_EXIT_DESK_MODE>;

        goto label01;

     label10:
        $i8 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        $z4 = staticinvoke <com.android.server.UiModeManagerService: boolean isDeskDockState(int)>($i8);

        if $z4 == 0 goto label12;

        $i12 = r0.<com.android.server.UiModeManagerService: int mLastBroadcastState>;

        z2 = staticinvoke <com.android.server.UiModeManagerService: boolean isDeskDockState(int)>($i12);

        r2 = null;

        if z2 != 0 goto label03;

        if r1 == null goto label11;

        $r17 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>(r1);

        $r18 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r17.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r14, $r18);

     label11:
        $i11 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        r0.<com.android.server.UiModeManagerService: int mLastBroadcastState> = $i11;

        r2 = <android.app.UiModeManager: java.lang.String ACTION_ENTER_DESK_MODE>;

        goto label03;

     label12:
        r0.<com.android.server.UiModeManagerService: int mLastBroadcastState> = 0;

        r2 = r1;

        goto label03;

     label13:
        $z5 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        if $z5 == 0 goto label15;

        i4 = i0 & 1;

        r4 = null;

        if i4 == 0 goto label14;

        r4 = "android.intent.category.CAR_DOCK";

     label14:
        specialinvoke r0.<com.android.server.UiModeManagerService: void sendConfigurationAndStartDreamOrDockAppLocked(java.lang.String)>(r4);

        goto label04;

     label15:
        $i9 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        $z7 = staticinvoke <com.android.server.UiModeManagerService: boolean isDeskDockState(int)>($i9);

        if $z7 == 0 goto label16;

        i3 = i0 & 1;

        r4 = null;

        if i3 == 0 goto label14;

        r4 = "android.intent.category.DESK_DOCK";

        goto label14;

     label16:
        i2 = i1 & 1;

        r4 = null;

        if i2 == 0 goto label14;

        r4 = "android.intent.category.HOME";

        goto label14;

     label17:
        z1 = 0;

        goto label07;

     label18:
        $r7 = r0.<com.android.server.UiModeManagerService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void release()>();

        return;
    }

    private void updateTwilight()
    {
        com.android.server.UiModeManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.UiModeManagerService;

        r1 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<com.android.server.UiModeManagerService: boolean isDoingNightModeLocked()>();

        if $z0 == 0 goto label2;

        $i0 = r0.<com.android.server.UiModeManagerService: int mNightMode>;

        if $i0 != 0 goto label2;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateComputedNightModeLocked()>();

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateLocked(int,int)>(0, 0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void disableCarMode(int)
    {
        com.android.server.UiModeManagerService r0;
        int i0;
        long l1;
        java.lang.Throwable r1, r3, $r4, $r5;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: com.android.server.UiModeManagerService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        specialinvoke r0.<com.android.server.UiModeManagerService: void setCarModeLocked(boolean)>(0);

        $z0 = r0.<com.android.server.UiModeManagerService: boolean mSystemReady>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateLocked(int,int)>(0, i0);

     label3:
        exitmonitor r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.UiModeManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.Object r4;
        java.lang.Throwable r5, $r16;
        android.content.Context $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r7, $r8, $r17;
        com.android.server.TwilightService$TwilightState $r9;
        com.android.server.TwilightService $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15;

        r0 := @this: com.android.server.UiModeManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r6 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $i0 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump uimode service from from pid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        return;

     label1:
        r4 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r4;

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Current UI Mode Service state:");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mDockState=");

        $i1 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mLastBroadcastState=");

        $i2 = r0.<com.android.server.UiModeManagerService: int mLastBroadcastState>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mNightMode=");

        $i3 = r0.<com.android.server.UiModeManagerService: int mNightMode>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mCarModeEnabled=");

        $z0 = r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mComputedNightMode=");

        $z1 = r0.<com.android.server.UiModeManagerService: boolean mComputedNightMode>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mCurUiMode=0x");

        $i4 = r0.<com.android.server.UiModeManagerService: int mCurUiMode>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mSetUiMode=0x");

        $i5 = r0.<com.android.server.UiModeManagerService: int mSetUiMode>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mHoldingConfiguration=");

        $z3 = r0.<com.android.server.UiModeManagerService: boolean mHoldingConfiguration>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mSystemReady=");

        $z2 = r0.<com.android.server.UiModeManagerService: boolean mSystemReady>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mTwilightService.getCurrentState()=");

        $r10 = r0.<com.android.server.UiModeManagerService: com.android.server.TwilightService mTwilightService>;

        $r9 = virtualinvoke $r10.<com.android.server.TwilightService: com.android.server.TwilightService$TwilightState getCurrentState()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r9);

        exitmonitor r4;

     label3:
        return;

     label4:
        $r16 := @caughtexception;

        r5 = $r16;

     label5:
        exitmonitor r4;

     label6:
        throw r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void enableCarMode(int)
    {
        com.android.server.UiModeManagerService r0;
        int i0;
        long l1;
        java.lang.Throwable r1, r3, $r4, $r5;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: com.android.server.UiModeManagerService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        specialinvoke r0.<com.android.server.UiModeManagerService: void setCarModeLocked(boolean)>(1);

        $z0 = r0.<com.android.server.UiModeManagerService: boolean mSystemReady>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateLocked(int,int)>(i0, 0);

     label3:
        exitmonitor r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    public int getCurrentModeType()
    {
        com.android.server.UiModeManagerService r0;
        long l0;
        java.lang.Throwable r1, r3, $r4, $r5;
        java.lang.Object r2;
        int i1, $i2;

        r0 := @this: com.android.server.UiModeManagerService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        $i2 = r0.<com.android.server.UiModeManagerService: int mCurUiMode>;

        i1 = 15 & $i2;

        exitmonitor r2;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public int getNightMode()
    {
        com.android.server.UiModeManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int i0;

        r0 := @this: com.android.server.UiModeManagerService;

        r1 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.UiModeManagerService: int mNightMode>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setNightMode(int)
    {
        com.android.server.UiModeManagerService r0;
        int i0, $i2;
        long l1;
        java.lang.Throwable r1, r3, $r11, $r12;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;
        android.content.Context $r9;
        android.content.ContentResolver $r10;

        r0 := @this: com.android.server.UiModeManagerService;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label02;
            case 2: goto label02;
            default: goto label01;
        };

     label01:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown mode: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label02:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        r2 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label04:
        $z0 = specialinvoke r0.<com.android.server.UiModeManagerService: boolean isDoingNightModeLocked()>();

        if $z0 == 0 goto label05;

        $i2 = r0.<com.android.server.UiModeManagerService: int mNightMode>;

        if $i2 == i0 goto label05;

        $r9 = r0.<com.android.server.UiModeManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r10, "ui_night_mode", i0);

        r0.<com.android.server.UiModeManagerService: int mNightMode> = i0;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateLocked(int,int)>(0, 0);

     label05:
        exitmonitor r2;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        $r12 := @caughtexception;

        r1 = $r12;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    void systemReady()
    {
        com.android.server.UiModeManagerService r0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int $i0;

        r0 := @this: com.android.server.UiModeManagerService;

        z0 = 1;

        r1 = r0.<com.android.server.UiModeManagerService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.server.UiModeManagerService: boolean mSystemReady> = 1;

        $i0 = r0.<com.android.server.UiModeManagerService: int mDockState>;

        if $i0 != 2 goto label7;

     label2:
        r0.<com.android.server.UiModeManagerService: boolean mCarModeEnabled> = z0;

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateComputedNightModeLocked()>();

        specialinvoke r0.<com.android.server.UiModeManagerService: void updateLocked(int,int)>(0, 0);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        z0 = 0;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
