public final class com.android.server.am.ProviderMap extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private final com.android.server.am.ActivityManagerService mAm;
    private final android.util.SparseArray mProvidersByClassPerUser;
    private final android.util.SparseArray mProvidersByNamePerUser;
    private final java.util.HashMap mSingletonByClass;
    private final java.util.HashMap mSingletonByName;

    void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ProviderMap r0;
        com.android.server.am.ActivityManagerService r1;
        java.util.HashMap $r2, $r3;
        android.util.SparseArray $r4, $r5;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser> = $r5;

        r0.<com.android.server.am.ProviderMap: com.android.server.am.ActivityManagerService mAm> = r1;

        return;
    }

    private boolean collectForceStopProvidersLocked(java.lang.String, int, boolean, boolean, int, java.util.HashMap, java.util.ArrayList)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1, $r11;
        int i0, i1;
        boolean z0, z1, z2, $z3, $z5, $z6;
        java.util.HashMap r2;
        java.util.ArrayList r3;
        java.util.Iterator r4;
        com.android.server.am.ContentProviderRecord r5;
        java.util.Collection $r6;
        java.lang.Object $r7;
        com.android.server.am.ProcessRecord $r8, $r9;
        android.content.pm.ProviderInfo $r10;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i1 := @parameter4: int;

        r2 := @parameter5: java.util.HashMap;

        r3 := @parameter6: java.util.ArrayList;

        z2 = 0;

        $r6 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.am.ContentProviderRecord) $r7;

        if r1 == null goto label2;

        $r10 = r5.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r11 = $r10.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label1;

     label2:
        $r8 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r8 == null goto label3;

        if z1 != 0 goto label3;

        $r9 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $z5 = $r9.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z5 != 0 goto label1;

     label3:
        if z0 != 0 goto label5;

        z2 = 1;

     label4:
        return z2;

     label5:
        z2 = 1;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label1;
    }

    private void dumpProvider(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ContentProviderRecord, java.lang.String[], boolean)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1, r6, $r34;
        java.io.FileDescriptor r2, $r25;
        java.io.PrintWriter r3;
        com.android.server.am.ContentProviderRecord r4;
        java.lang.String[] r5;
        boolean z0;
        com.android.server.am.ActivityManagerService r7;
        java.lang.Throwable r8, r10, $r28, $r29;
        com.android.internal.os.TransferPipe r9, $r21;
        java.io.IOException r12, $r32;
        java.lang.StringBuilder $r13, $r14, $r15, $r30, $r31, $r33;
        com.android.server.am.ProcessRecord $r16, $r17, $r19, $r20, $r26;
        android.app.IApplicationThread $r18, $r23;
        android.os.ParcelFileDescriptor $r22;
        android.content.IContentProvider $r24;
        android.os.IBinder $r27;
        int $i0;
        android.os.RemoteException $r35;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: com.android.server.am.ContentProviderRecord;

        r5 := @parameter4: java.lang.String[];

        z0 := @parameter5: boolean;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = r0.<com.android.server.am.ProviderMap: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r7;

     label01:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("PROVIDER ");

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.Object)>(r4);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" pid=");

        $r16 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r16 == null goto label10;

        $r26 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i0 = $r26.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>($i0);

     label02:
        if z0 == 0 goto label04;

     label03:
        virtualinvoke r4.<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r3, r6, 1);

     label04:
        exitmonitor r7;

     label05:
        $r17 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r17 == null goto label09;

        $r19 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r18 = $r19.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r18 == null goto label09;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("    Client:");

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

     label06:
        $r21 = new com.android.internal.os.TransferPipe;

        specialinvoke $r21.<com.android.internal.os.TransferPipe: void <init>()>();

        r9 = $r21;

     label07:
        $r20 = r4.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r23 = $r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = virtualinvoke r9.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r25 = virtualinvoke $r22.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r24 = r4.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        $r27 = interfaceinvoke $r24.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        interfaceinvoke $r23.<android.app.IApplicationThread: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>($r25, $r27, r5);

        virtualinvoke r9.<com.android.internal.os.TransferPipe: void setBufferPrefix(java.lang.String)>("      ");

        virtualinvoke r9.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>(r2, 2000L);

     label08:
        virtualinvoke r9.<com.android.internal.os.TransferPipe: void kill()>();

     label09:
        return;

     label10:
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("(not running)");

     label11:
        goto label02;

     label12:
        $r28 := @caughtexception;

        r8 = $r28;

     label13:
        exitmonitor r7;

     label14:
        throw r8;

     label15:
        $r29 := @caughtexception;

        r10 = $r29;

     label16:
        virtualinvoke r9.<com.android.internal.os.TransferPipe: void kill()>();

        throw r10;

     label17:
        $r32 := @caughtexception;

        r12 = $r32;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      Failure while dumping the provider: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        return;

     label18:
        $r35 := @caughtexception;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("      Got a RemoteException while dumping the service");

        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label17;
        catch android.os.RemoteException from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.io.IOException from label08 to label09 with label17;
        catch android.os.RemoteException from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.io.IOException from label16 to label17 with label17;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    private boolean dumpProvidersByClassLocked(java.io.PrintWriter, boolean, java.lang.String, java.lang.String, boolean, java.util.HashMap)
    {
        com.android.server.am.ProviderMap r0;
        java.io.PrintWriter r1;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String r2, r3, $r11;
        java.util.HashMap r4;
        java.util.Iterator r5;
        com.android.server.am.ContentProviderRecord r6;
        java.util.Set $r7;
        java.lang.Object $r8, $r10;
        java.util.Map$Entry $r9;
        android.content.pm.ApplicationInfo $r12;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z1 := @parameter4: boolean;

        r4 := @parameter5: java.util.HashMap;

        $r7 = virtualinvoke r4.<java.util.HashMap: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        z2 = 0;

     label1:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8;

        $r10 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (com.android.server.am.ContentProviderRecord) $r10;

        if r2 == null goto label2;

        $r12 = r6.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r11 = $r12.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z4 == 0 goto label1;

     label2:
        if z1 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        z1 = 0;

     label3:
        if r3 == null goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r3);

        r3 = null;

     label4:
        z2 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

        virtualinvoke r6.<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, "    ", z0);

        goto label1;

     label5:
        return z2;
    }

    private boolean dumpProvidersByNameLocked(java.io.PrintWriter, java.lang.String, java.lang.String, boolean, java.util.HashMap)
    {
        com.android.server.am.ProviderMap r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r3, $r12, $r13, $r14;
        boolean z0, z1, $z2, $z3;
        java.util.HashMap r4;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        com.android.server.am.ContentProviderRecord r7;
        java.util.Set $r8;
        java.lang.Object $r9, $r10, $r11;
        android.content.pm.ApplicationInfo $r15;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r4 := @parameter4: java.util.HashMap;

        $r8 = virtualinvoke r4.<java.util.HashMap: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        z1 = 0;

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (com.android.server.am.ContentProviderRecord) $r10;

        if r2 == null goto label2;

        $r15 = r7.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r14 = $r15.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label1;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("");

        z0 = 0;

     label3:
        if r3 == null goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r3);

        r3 = null;

     label4:
        z1 = 1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r11 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r11;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r12 = virtualinvoke r7.<com.android.server.am.ContentProviderRecord: java.lang.String toShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        goto label1;

     label5:
        return z1;
    }

    private java.util.HashMap getProvidersByName(int)
    {
        com.android.server.am.ProviderMap r0;
        int i0;
        java.util.HashMap r1, r2, $r5;
        android.util.SparseArray $r3, $r6;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.am.ProviderMap;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $r3 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.util.HashMap) $r4;

        if r1 != null goto label2;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r2 = $r5;

        $r6 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        return r2;

     label2:
        return r1;
    }

    boolean collectForceStopProviders(java.lang.String, int, boolean, boolean, int, java.util.ArrayList)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1;
        int i0, i1, i2, $i3;
        boolean z0, z1, z2, $z3, $z4;
        java.util.ArrayList r2;
        java.util.HashMap r3, $r4, $r8;
        android.util.SparseArray $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i1 := @parameter4: int;

        r2 := @parameter5: java.util.ArrayList;

        $r4 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        z2 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean collectForceStopProvidersLocked(java.lang.String,int,boolean,boolean,int,java.util.HashMap,java.util.ArrayList)>(r1, i0, z0, z1, i1, $r4, r2);

        if z0 != 0 goto label1;

        if z2 == 0 goto label1;

        return 1;

     label1:
        if i1 != -1 goto label5;

        i2 = 0;

     label2:
        $r5 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $i3 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i2 >= $i3 goto label6;

        $r7 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $r6 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r8 = (java.util.HashMap) $r6;

        $z4 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean collectForceStopProvidersLocked(java.lang.String,int,boolean,boolean,int,java.util.HashMap,java.util.ArrayList)>(r1, i0, z0, z1, i1, $r8, r2);

        if $z4 == 0 goto label4;

        if z0 != 0 goto label3;

        return 1;

     label3:
        z2 = 1;

     label4:
        i2 = i2 + 1;

        goto label2;

     label5:
        r3 = virtualinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>(i1);

        if r3 == null goto label6;

        $z3 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean collectForceStopProvidersLocked(java.lang.String,int,boolean,boolean,int,java.util.HashMap,java.util.ArrayList)>(r1, i0, z0, z1, i1, r3, r2);

        z2 = z2 | $z3;

     label6:
        return z2;
    }

    protected boolean dumpProvider(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ProviderMap r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3, $r18, $r22;
        java.lang.String[] r4;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, z1, $z3, $z4, $z7;
        java.util.ArrayList r5, r6, $r12, $r14;
        com.android.server.am.ActivityManagerService r7;
        java.lang.Throwable r8, $r30;
        android.content.ComponentName r9, r13, $r23, $r24;
        com.android.server.am.ContentProviderRecord r10, $r21;
        java.util.Collection $r15, $r26;
        java.util.HashMap $r16, $r27;
        android.util.SparseArray $r17, $r25;
        java.lang.Object $r19, $r20, $r28;
        java.lang.RuntimeException $r29;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r5 = $r12;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r6 = $r14;

        r7 = r0.<com.android.server.am.ProviderMap: com.android.server.am.ActivityManagerService mAm>;

        entermonitor r7;

     label01:
        $r16 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.util.Collection values()>();

        virtualinvoke r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r15);

     label02:
        i1 = 0;

     label03:
        $r17 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $i7 = virtualinvoke $r17.<android.util.SparseArray: int size()>();

        if i1 >= $i7 goto label05;

        $r25 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $r28 = virtualinvoke $r25.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r27 = (java.util.HashMap) $r28;

        $r26 = virtualinvoke $r27.<java.util.HashMap: java.util.Collection values()>();

        virtualinvoke r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r26);

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        $r18 = "all";

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label08;

        virtualinvoke r6.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r5);

     label06:
        exitmonitor r7;

     label07:
        $i9 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i9 > 0 goto label27;

        return 0;

     label08:
        if r3 == null goto label33;

     label09:
        r13 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r3);

     label10:
        r9 = r13;

     label11:
        i2 = 0;

        if r9 != null goto label14;

     label12:
        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r3, 16);

     label13:
        i2 = i5;

        r3 = null;

        r9 = null;

     label14:
        i3 = 0;

     label15:
        $i6 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i3 >= $i6 goto label06;

        $r19 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r10 = (com.android.server.am.ContentProviderRecord) $r19;

     label16:
        if r9 == null goto label19;

     label17:
        $r24 = r10.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $z7 = virtualinvoke $r24.<android.content.ComponentName: boolean equals(java.lang.Object)>(r9);

        if $z7 == 0 goto label32;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label18:
        goto label32;

     label19:
        if r3 == null goto label25;

     label20:
        $r23 = r10.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r22 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String flattenToString()>();

        $z4 = virtualinvoke $r22.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z4 == 0 goto label32;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label21:
        goto label32;

     label22:
        $r30 := @caughtexception;

        r8 = $r30;

     label23:
        exitmonitor r7;

     label24:
        throw r8;

     label25:
        $i10 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r10);

        if $i10 != i2 goto label32;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

     label26:
        goto label32;

     label27:
        z1 = 0;

        i4 = 0;

     label28:
        $i8 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if i4 >= $i8 goto label30;

        if z1 == 0 goto label29;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label29:
        z1 = 1;

        $r20 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r21 = (com.android.server.am.ContentProviderRecord) $r20;

        specialinvoke r0.<com.android.server.am.ProviderMap: void dumpProvider(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ContentProviderRecord,java.lang.String[],boolean)>("", r1, r2, $r21, r4, z0);

        i4 = i4 + 1;

        goto label28;

     label30:
        return 1;

     label31:
        $r29 := @caughtexception;

        i2 = 0;

        goto label14;

     label32:
        i3 = i3 + 1;

        goto label15;

     label33:
        r9 = null;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.RuntimeException from label12 to label13 with label31;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label25 to label26 with label22;
    }

    boolean dumpProvidersLocked(java.io.PrintWriter, boolean, java.lang.String)
    {
        com.android.server.am.ProviderMap r0;
        java.io.PrintWriter r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.String r2, r4, $r25;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.HashMap r3, r5, r6, $r7, $r23;
        android.util.SparseArray $r8, $r9, $r11, $r16, $r17, $r22;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r18, $r20, $r21, $r24;
        java.lang.Object $r15, $r19;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $r7 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        i0 = virtualinvoke $r7.<java.util.HashMap: int size()>();

        z1 = 0;

        if i0 <= 0 goto label1;

        $r23 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $z5 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean dumpProvidersByClassLocked(java.io.PrintWriter,boolean,java.lang.String,java.lang.String,boolean,java.util.HashMap)>(r1, z0, r2, "  Published single-user content providers (by class):", 0, $r23);

        z1 = 0 | $z5;

     label1:
        i1 = 0;

     label2:
        $r8 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $i3 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if i1 >= $i3 goto label3;

        $r17 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $r19 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r6 = (java.util.HashMap) $r19;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Published user ");

        $r22 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $i6 = virtualinvoke $r22.<android.util.SparseArray: int keyAt(int)>(i1);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" content providers (by class):");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $z4 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean dumpProvidersByClassLocked(java.io.PrintWriter,boolean,java.lang.String,java.lang.String,boolean,java.util.HashMap)>(r1, z0, r2, $r25, z1, r6);

        z1 = z1 | $z4;

        i1 = i1 + 1;

        goto label2;

     label3:
        if z0 == 0 goto label5;

        r3 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        $z2 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean dumpProvidersByNameLocked(java.io.PrintWriter,java.lang.String,java.lang.String,boolean,java.util.HashMap)>(r1, r2, "  Single-user authority to provider mappings:", z1, r3);

        z1 = z1 | $z2;

        i2 = 0;

     label4:
        $r9 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        $i4 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        if i2 >= $i4 goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  User ");

        $r11 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        $i5 = virtualinvoke $r11.<android.util.SparseArray: int keyAt(int)>(i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authority to provider mappings:");

        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        $r15 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r5 = (java.util.HashMap) $r15;

        $z3 = specialinvoke r0.<com.android.server.am.ProviderMap: boolean dumpProvidersByNameLocked(java.io.PrintWriter,java.lang.String,java.lang.String,boolean,java.util.HashMap)>(r1, r2, r4, z1, r5);

        z1 = z1 | $z3;

        i2 = i2 + 1;

        goto label4;

     label5:
        return z1;
    }

    com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName)
    {
        com.android.server.am.ProviderMap r0;
        android.content.ComponentName r1;
        com.android.server.am.ContentProviderRecord $r2;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r1, -1);

        return $r2;
    }

    com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName, int)
    {
        com.android.server.am.ProviderMap r0;
        android.content.ComponentName r1;
        int i0;
        com.android.server.am.ContentProviderRecord r2, $r7;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.am.ContentProviderRecord) $r4;

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = virtualinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>(i0);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (com.android.server.am.ContentProviderRecord) $r6;

        return $r7;
    }

    com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1;
        com.android.server.am.ContentProviderRecord $r2;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r1, -1);

        return $r2;
    }

    com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String, int)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1;
        int i0;
        com.android.server.am.ContentProviderRecord r2, $r7;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4, $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.am.ContentProviderRecord) $r4;

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = specialinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByName(int)>(i0);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (com.android.server.am.ContentProviderRecord) $r6;

        return $r7;
    }

    java.util.HashMap getProvidersByClass(int)
    {
        com.android.server.am.ProviderMap r0;
        int i0;
        java.util.HashMap r1, r2, $r5;
        android.util.SparseArray $r3, $r6;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.am.ProviderMap;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $r3 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.util.HashMap) $r4;

        if r1 != null goto label2;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r2 = $r5;

        $r6 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        return r2;

     label2:
        return r1;
    }

    void putProviderByClass(android.content.ComponentName, com.android.server.am.ContentProviderRecord)
    {
        com.android.server.am.ProviderMap r0;
        android.content.ComponentName r1;
        com.android.server.am.ContentProviderRecord r2;
        boolean $z0;
        android.content.pm.ApplicationInfo $r3;
        int $i0, $i1;
        java.util.HashMap $r4, $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        $z0 = r2.<com.android.server.am.ContentProviderRecord: boolean singleton>;

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;

     label1:
        $r3 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r4 = virtualinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>($i1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void putProviderByName(java.lang.String, com.android.server.am.ContentProviderRecord)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1;
        com.android.server.am.ContentProviderRecord r2;
        boolean $z0;
        android.content.pm.ApplicationInfo $r3;
        int $i0, $i1;
        java.util.HashMap $r4, $r6;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        $z0 = r2.<com.android.server.am.ContentProviderRecord: boolean singleton>;

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;

     label1:
        $r3 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        $r4 = specialinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByName(int)>($i1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    void removeProviderByClass(android.content.ComponentName, int)
    {
        com.android.server.am.ProviderMap r0;
        android.content.ComponentName r1;
        int i0, $i1;
        java.util.HashMap r2, $r3, $r11;
        boolean $z0;
        android.util.SparseArray $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r11 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByClass>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;

     label2:
        if i0 >= 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label3:
        r2 = virtualinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>(i0);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $i1 = virtualinvoke r2.<java.util.HashMap: int size()>();

        if $i1 != 0 goto label1;

        $r5 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByClassPerUser>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    void removeProviderByName(java.lang.String, int)
    {
        com.android.server.am.ProviderMap r0;
        java.lang.String r1, $r10;
        int i0, $i1;
        java.util.HashMap r2, $r3, $r11;
        boolean $z0;
        android.util.SparseArray $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.server.am.ProviderMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r11 = r0.<com.android.server.am.ProviderMap: java.util.HashMap mSingletonByName>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;

     label2:
        if i0 >= 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label3:
        r2 = specialinvoke r0.<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByName(int)>(i0);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $i1 = virtualinvoke r2.<java.util.HashMap: int size()>();

        if $i1 != 0 goto label1;

        $r5 = r0.<com.android.server.am.ProviderMap: android.util.SparseArray mProvidersByNamePerUser>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ProviderMap: java.lang.String TAG> = "ProviderMap";

        <com.android.server.am.ProviderMap: boolean DBG> = 0;

        return;
    }
}
