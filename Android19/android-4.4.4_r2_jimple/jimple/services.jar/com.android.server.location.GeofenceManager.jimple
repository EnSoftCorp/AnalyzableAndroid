public class com.android.server.location.GeofenceManager extends java.lang.Object implements android.location.LocationListener, android.app.PendingIntent$OnFinished
{
    private static final boolean D;
    private static final long MAX_AGE_NANOS;
    private static final long MAX_INTERVAL_MS;
    private static final int MAX_SPEED_M_S;
    private static final long MIN_INTERVAL_MS;
    private static final int MSG_UPDATE_FENCES;
    private static final java.lang.String TAG;
    private final android.app.AppOpsManager mAppOps;
    private final com.android.server.location.LocationBlacklist mBlacklist;
    private final android.content.Context mContext;
    private java.util.List mFences;
    private final com.android.server.location.GeofenceManager$GeofenceHandler mHandler;
    private android.location.Location mLastLocationUpdate;
    private final android.location.LocationManager mLocationManager;
    private long mLocationUpdateInterval;
    private java.lang.Object mLock;
    private boolean mPendingUpdate;
    private boolean mReceivingLocationUpdates;
    private final android.os.PowerManager$WakeLock mWakeLock;

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.location.GeofenceManager: java.lang.String TAG> = "GeofenceManager";

        <com.android.server.location.GeofenceManager: int MSG_UPDATE_FENCES> = 1;

        <com.android.server.location.GeofenceManager: long MIN_INTERVAL_MS> = 60000L;

        <com.android.server.location.GeofenceManager: int MAX_SPEED_M_S> = 100;

        <com.android.server.location.GeofenceManager: long MAX_INTERVAL_MS> = 7200000L;

        <com.android.server.location.GeofenceManager: long MAX_AGE_NANOS> = 300000000000L;

        $z0 = <com.android.server.LocationManagerService: boolean D>;

        <com.android.server.location.GeofenceManager: boolean D> = $z0;

        return;
    }

    public void <init>(android.content.Context, com.android.server.location.LocationBlacklist)
    {
        com.android.server.location.GeofenceManager r0;
        android.content.Context r1, $r5, $r8, $r11;
        com.android.server.location.LocationBlacklist r2;
        java.lang.Object $r3, $r6, $r9, $r12;
        java.util.LinkedList $r4;
        android.location.LocationManager $r7;
        android.app.AppOpsManager $r10;
        android.os.PowerManager $r13;
        android.os.PowerManager$WakeLock $r14;
        com.android.server.location.GeofenceManager$GeofenceHandler $r15;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.location.LocationBlacklist;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.location.GeofenceManager: java.util.List mFences> = $r4;

        r0.<com.android.server.location.GeofenceManager: android.content.Context mContext> = r1;

        $r5 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r7 = (android.location.LocationManager) $r6;

        r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager> = $r7;

        $r8 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r10 = (android.app.AppOpsManager) $r9;

        r0.<com.android.server.location.GeofenceManager: android.app.AppOpsManager mAppOps> = $r10;

        $r11 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r13 = (android.os.PowerManager) $r12;

        $r14 = virtualinvoke $r13.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "GeofenceManager");

        r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock> = $r14;

        $r15 = new com.android.server.location.GeofenceManager$GeofenceHandler;

        specialinvoke $r15.<com.android.server.location.GeofenceManager$GeofenceHandler: void <init>(com.android.server.location.GeofenceManager)>(r0);

        r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler> = $r15;

        r0.<com.android.server.location.GeofenceManager: com.android.server.location.LocationBlacklist mBlacklist> = r2;

        return;
    }

    static void access$000(com.android.server.location.GeofenceManager)
    {
        com.android.server.location.GeofenceManager r0;

        r0 := @parameter0: com.android.server.location.GeofenceManager;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void updateFences()>();

        return;
    }

    private android.location.Location getFreshLocationLocked()
    {
        com.android.server.location.GeofenceManager r0;
        android.location.Location r1;
        boolean $z0, $z1;
        long $l0, $l1, $l2;
        byte $b3;
        java.util.List $r2;
        android.location.LocationManager $r3;

        r0 := @this: com.android.server.location.GeofenceManager;

        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z0 == 0 goto label4;

        r1 = r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate>;

     label1:
        if r1 != null goto label2;

        $r2 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r3 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        r1 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastLocation()>();

     label2:
        if r1 != null goto label5;

        r1 = null;

     label3:
        return r1;

     label4:
        r1 = null;

        goto label1;

     label5:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $l1 = virtualinvoke r1.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l2 = $l0 - $l1;

        $b3 = $l2 cmp 300000000000L;

        if $b3 <= 0 goto label3;

        return null;
    }

    private void removeExpiredFencesLocked()
    {
        com.android.server.location.GeofenceManager r0;
        long l0, $l1;
        java.util.Iterator r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.server.location.GeofenceState $r4;
        byte $b2;

        r0 := @this: com.android.server.location.GeofenceManager;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r2 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.server.location.GeofenceState) $r3;

        $l1 = $r4.<com.android.server.location.GeofenceState: long mExpireAt>;

        $b2 = $l1 cmp l0;

        if $b2 >= 0 goto label1;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    private void scheduleUpdateFencesLocked()
    {
        com.android.server.location.GeofenceManager r0;
        boolean $z0;
        com.android.server.location.GeofenceManager$GeofenceHandler $r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 1;

        $r1 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        virtualinvoke $r1.<com.android.server.location.GeofenceManager$GeofenceHandler: boolean sendEmptyMessage(int)>(1);

     label1:
        return;
    }

    private void sendIntent(android.app.PendingIntent, android.content.Intent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2;
        android.os.PowerManager$WakeLock $r4, $r7;
        android.content.Context $r5;
        android.app.PendingIntent$CanceledException $r6;
        android.app.PendingIntent$OnFinished r8;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.content.Intent;

        $r4 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void acquire()>();

     label1:
        $r5 = r0.<com.android.server.location.GeofenceManager: android.content.Context mContext>;

        r8 = (android.app.PendingIntent$OnFinished) r0;

        virtualinvoke r1.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)>($r5, 0, r2, r8, null, "android.permission.ACCESS_FINE_LOCATION");

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        virtualinvoke r0.<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>(null, r1);

        $r7 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r7.<android.os.PowerManager$WakeLock: void release()>();

        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    private void sendIntentEnter(android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendIntentEnter: pendingIntent=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r8);

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("entering", 1);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntent(android.app.PendingIntent,android.content.Intent)>(r1, r2);

        return;
    }

    private void sendIntentExit(android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendIntentExit: pendingIntent=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r8);

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("entering", 0);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntent(android.app.PendingIntent,android.content.Intent)>(r1, r2);

        return;
    }

    private void updateFences()
    {
        com.android.server.location.GeofenceManager r0;
        java.util.LinkedList r1, r2, r57, r58;
        java.lang.Object r3, $r15, $r16, $r39;
        java.lang.Throwable r4, $r51;
        android.location.Location r5, $r31;
        double d0, d1, $d2, $d3, $d4, $d5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z12;
        java.util.Iterator r6, r7, r8;
        long l0, $l3, $l5;
        android.location.LocationRequest r9, $r32, r61;
        com.android.server.location.GeofenceState r10;
        int i1, $i2, $i7, $i8, $i10, $i11, $i12, $i13, $i14;
        java.util.List $r13, $r20;
        android.app.PendingIntent $r14, $r18, $r42, $r44;
        java.lang.StringBuilder $r17, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r46, $r48, $r52, $r54, r59, r60, r62;
        java.lang.String $r29, $r40, $r45, $r47, $r49, $r53, $r55;
        android.location.LocationManager $r34, $r37;
        byte $b6, $b9;
        com.android.server.location.GeofenceManager$GeofenceHandler $r36;
        android.os.Looper $r38;
        com.android.server.location.LocationBlacklist $r41;
        android.app.AppOpsManager $r43;
        android.location.LocationListener r63, r64;

        r0 := @this: com.android.server.location.GeofenceManager;

        r57 = new java.util.LinkedList;

        specialinvoke r57.<java.util.LinkedList: void <init>()>();

        r1 = r57;

        r58 = new java.util.LinkedList;

        specialinvoke r58.<java.util.LinkedList: void <init>()>();

        r2 = r58;

        r3 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r3;

     label01:
        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 0;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void removeExpiredFencesLocked()>();

        r5 = specialinvoke r0.<com.android.server.location.GeofenceManager: android.location.Location getFreshLocationLocked()>();

     label02:
        d0 = 1.7976931348623157E308;

        z0 = 0;

     label03:
        $r13 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r6 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label19;

        $r39 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.android.server.location.GeofenceState) $r39;

        $r41 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.LocationBlacklist mBlacklist>;

        $r40 = r10.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $z8 = virtualinvoke $r41.<com.android.server.location.LocationBlacklist: boolean isBlacklisted(java.lang.String)>($r40);

        if $z8 == 0 goto label09;

        $z12 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z12 == 0 goto label04;

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipping geofence processing for blacklisted app: ");

        $r55 = r10.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $r52 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r53);

     label05:
        goto label04;

     label06:
        $r51 := @caughtexception;

        r4 = $r51;

     label07:
        exitmonitor r3;

     label08:
        throw r4;

     label09:
        $i11 = r10.<com.android.server.location.GeofenceState: int mAllowedResolutionLevel>;

        $i10 = staticinvoke <com.android.server.LocationManagerService: int resolutionLevelToOp(int)>($i11);

        if $i10 < 0 goto label11;

        $r43 = r0.<com.android.server.location.GeofenceManager: android.app.AppOpsManager mAppOps>;

        $i13 = r10.<com.android.server.location.GeofenceState: int mUid>;

        $r45 = r10.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $i14 = virtualinvoke $r43.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>(1, $i13, $r45);

        if $i14 == 0 goto label11;

        $z9 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z9 == 0 goto label04;

        r60 = new java.lang.StringBuilder;

        specialinvoke r60.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipping geofence processing for no op app: ");

        $r49 = r10.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $r46 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r47);

     label10:
        goto label04;

     label11:
        z0 = 1;

        if r5 == null goto label04;

     label12:
        i1 = virtualinvoke r10.<com.android.server.location.GeofenceState: int processLocation(android.location.Location)>(r5);

     label13:
        $i12 = i1 & 1;

        if $i12 == 0 goto label15;

     label14:
        $r44 = r10.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r44);

     label15:
        $i8 = i1 & 2;

        if $i8 == 0 goto label17;

     label16:
        $r42 = r10.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r42);

     label17:
        d1 = virtualinvoke r10.<com.android.server.location.GeofenceState: double getDistanceToBoundary()>();

     label18:
        $b9 = d1 cmpg d0;

        if $b9 >= 0 goto label04;

        d0 = d1;

        goto label04;

     label19:
        if z0 == 0 goto label28;

        if r5 == null goto label27;

     label20:
        $i7 = staticinvoke <java.lang.Double: int compare(double,double)>(d0, 1.7976931348623157E308);

        if $i7 == 0 goto label27;

        $d2 = 1000.0 * d0;

        $d3 = $d2 / 100.0;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>(60000.0, $d3);

        $d5 = staticinvoke <java.lang.Math: double min(double,double)>(7200000.0, $d4);

        l0 = (long) $d5;

     label21:
        $z7 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z7 == 0 goto label22;

        $l5 = r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval>;

        $b6 = $l5 cmp l0;

        if $b6 == 0 goto label23;

     label22:
        r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates> = 1;

        r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval> = l0;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = r5;

        r61 = new android.location.LocationRequest;

        specialinvoke r61.<android.location.LocationRequest: void <init>()>();

        r9 = r61;

        $r32 = virtualinvoke r9.<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>(l0);

        virtualinvoke $r32.<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>(0L);

        $r37 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        $r36 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        $r38 = virtualinvoke $r36.<com.android.server.location.GeofenceManager$GeofenceHandler: android.os.Looper getLooper()>();

        r63 = (android.location.LocationListener) r0;

        virtualinvoke $r37.<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper)>(r9, r63, $r38);

     label23:
        $z2 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z2 == 0 goto label24;

        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateFences: location=");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mFences.size()=");

        $r20 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $i2 = interfaceinvoke $r20.<java.util.List: int size()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mReceivingLocationUpdates=");

        $z6 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLocationUpdateInterval=");

        $l3 = r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval>;

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mLastLocationUpdate=");

        $r31 = r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate>;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r29);

     label24:
        exitmonitor r3;

     label25:
        r7 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label30;

        $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (android.app.PendingIntent) $r15;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntentExit(android.app.PendingIntent)>($r18);

        goto label26;

     label27:
        l0 = 60000L;

        goto label21;

     label28:
        $z3 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z3 == 0 goto label23;

        r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates> = 0;

        r0.<com.android.server.location.GeofenceManager: long mLocationUpdateInterval> = 0L;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = null;

        $r34 = r0.<com.android.server.location.GeofenceManager: android.location.LocationManager mLocationManager>;

        r64 = (android.location.LocationListener) r0;

        virtualinvoke $r34.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r64);

     label29:
        goto label23;

     label30:
        r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label31:
        $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label32;

        $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (android.app.PendingIntent) $r16;

        specialinvoke r0.<com.android.server.location.GeofenceManager: void sendIntentEnter(android.app.PendingIntent)>($r14);

        goto label31;

     label32:
        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
        catch java.lang.Throwable from label16 to label17 with label06;
        catch java.lang.Throwable from label17 to label18 with label06;
        catch java.lang.Throwable from label20 to label21 with label06;
        catch java.lang.Throwable from label21 to label22 with label06;
        catch java.lang.Throwable from label22 to label23 with label06;
        catch java.lang.Throwable from label23 to label24 with label06;
        catch java.lang.Throwable from label24 to label25 with label06;
        catch java.lang.Throwable from label28 to label29 with label06;
    }

    public void addFence(android.location.LocationRequest, android.location.Geofence, android.app.PendingIntent, int, int, java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        android.location.LocationRequest r1;
        android.location.Geofence r2, $r14;
        android.app.PendingIntent r3, $r15;
        int i0, i1, i2, $i4;
        java.lang.String r4, $r27;
        com.android.server.location.GeofenceState r5, r8, $r9;
        java.lang.Object r6, $r12;
        java.lang.Throwable r7, $r30;
        boolean $z0, $z2, $z3;
        long $l3;
        java.util.List $r10, $r11, $r13, $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.location.LocationRequest;

        r2 := @parameter1: android.location.Geofence;

        r3 := @parameter2: android.app.PendingIntent;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addFence: request=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", geofence=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", intent=");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", packageName=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r27);

     label01:
        $r9 = new com.android.server.location.GeofenceState;

        $l3 = virtualinvoke r1.<android.location.LocationRequest: long getExpireAt()>();

        specialinvoke $r9.<com.android.server.location.GeofenceState: void <init>(android.location.Geofence,long,int,int,java.lang.String,android.app.PendingIntent)>(r2, $l3, i0, i1, r4, r3);

        r5 = $r9;

        r6 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r6;

     label02:
        $r10 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $i4 = interfaceinvoke $r10.<java.util.List: int size()>();

        i2 = -1 + $i4;

     label03:
        if i2 < 0 goto label05;

     label04:
        $r13 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        $r12 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i2);

        r8 = (com.android.server.location.GeofenceState) $r12;

        $r14 = r8.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        $z2 = virtualinvoke r2.<android.location.Geofence: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label10;

        $r15 = r8.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        $z3 = virtualinvoke r3.<android.app.PendingIntent: boolean equals(java.lang.Object)>($r15);

        if $z3 == 0 goto label10;

        $r17 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        interfaceinvoke $r17.<java.util.List: java.lang.Object remove(int)>(i2);

     label05:
        $r11 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r5);

        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r6;

     label06:
        return;

     label07:
        $r30 := @caughtexception;

        r7 = $r30;

     label08:
        exitmonitor r6;

     label09:
        throw r7;

     label10:
        i2 = i2 + -1;

        goto label03;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.location.GeofenceManager r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        com.android.server.location.GeofenceState r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r7, $r11;
        android.location.Geofence $r10;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  Geofences:");

        $r4 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.location.GeofenceState) $r5;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("    ");

        $r7 = r3.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(" ");

        $r10 = r3.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        $r11 = virtualinvoke $r10.<android.location.Geofence: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\n");

        goto label1;

     label2:
        return;
    }

    public void onLocationChanged(android.location.Location)
    {
        com.android.server.location.GeofenceManager r0;
        android.location.Location r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        boolean $z0, $z1;
        com.android.server.location.GeofenceManager$GeofenceHandler $r4;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.location.Location;

        r2 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $z0 = r0.<com.android.server.location.GeofenceManager: boolean mReceivingLocationUpdates>;

        if $z0 == 0 goto label2;

        r0.<com.android.server.location.GeofenceManager: android.location.Location mLastLocationUpdate> = r1;

     label2:
        $z1 = r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate>;

        if $z1 == 0 goto label5;

        $r4 = r0.<com.android.server.location.GeofenceManager: com.android.server.location.GeofenceManager$GeofenceHandler mHandler>;

        virtualinvoke $r4.<com.android.server.location.GeofenceManager$GeofenceHandler: void removeMessages(int)>(1);

     label3:
        exitmonitor r2;

     label4:
        specialinvoke r0.<com.android.server.location.GeofenceManager: void updateFences()>();

        return;

     label5:
        r0.<com.android.server.location.GeofenceManager: boolean mPendingUpdate> = 1;

     label6:
        goto label3;

     label7:
        $r5 := @caughtexception;

        r3 = $r5;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void onProviderDisabled(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onProviderEnabled(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onSendFinished(android.app.PendingIntent, android.content.Intent, int, java.lang.String, android.os.Bundle)
    {
        com.android.server.location.GeofenceManager r0;
        android.app.PendingIntent r1;
        android.content.Intent r2;
        int i0;
        java.lang.String r3;
        android.os.Bundle r4;
        android.os.PowerManager$WakeLock $r5;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.app.PendingIntent;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        $r5 = r0.<com.android.server.location.GeofenceManager: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void release()>();

        return;
    }

    public void onStatusChanged(java.lang.String, int, android.os.Bundle)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        return;
    }

    public void removeFence(android.location.Geofence, android.app.PendingIntent)
    {
        com.android.server.location.GeofenceManager r0;
        android.location.Geofence r1, $r10;
        android.app.PendingIntent r2, $r9;
        java.lang.Object r3, $r8;
        java.lang.Throwable r4, $r17;
        java.util.Iterator r5;
        com.android.server.location.GeofenceState r6;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r7;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r16;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: android.location.Geofence;

        r2 := @parameter1: android.app.PendingIntent;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label01;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeFence: fence=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", intent=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r16);

     label01:
        r3 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r3;

     label02:
        $r7 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r5 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.location.GeofenceState) $r8;

        $r9 = r6.<com.android.server.location.GeofenceState: android.app.PendingIntent mIntent>;

        $z2 = virtualinvoke $r9.<android.app.PendingIntent: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label03;

     label04:
        if r1 != null goto label10;

     label05:
        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label06:
        goto label03;

     label07:
        $r17 := @caughtexception;

        r4 = $r17;

     label08:
        exitmonitor r3;

     label09:
        throw r4;

     label10:
        $r10 = r6.<com.android.server.location.GeofenceState: android.location.Geofence mFence>;

        $z3 = virtualinvoke r1.<android.location.Geofence: boolean equals(java.lang.Object)>($r10);

        if $z3 == 0 goto label03;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label11:
        goto label03;

     label12:
        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r3;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
    }

    public void removeFence(java.lang.String)
    {
        com.android.server.location.GeofenceManager r0;
        java.lang.String r1, $r8, $r11;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r13;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2;
        java.util.List $r5;
        com.android.server.location.GeofenceState $r7;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: com.android.server.location.GeofenceManager;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.android.server.location.GeofenceManager: boolean D>;

        if $z0 == 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeFence: packageName=");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("GeofenceManager", $r11);

     label1:
        r2 = r0.<com.android.server.location.GeofenceManager: java.lang.Object mLock>;

        entermonitor r2;

     label2:
        $r5 = r0.<com.android.server.location.GeofenceManager: java.util.List mFences>;

        r4 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.android.server.location.GeofenceState) $r6;

        $r8 = $r7.<com.android.server.location.GeofenceState: java.lang.String mPackageName>;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label4:
        goto label3;

     label5:
        $r13 := @caughtexception;

        r3 = $r13;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        specialinvoke r0.<com.android.server.location.GeofenceManager: void scheduleUpdateFencesLocked()>();

        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }
}
