public final class com.android.server.am.ActivityManagerService extends android.app.ActivityManagerNative implements com.android.server.Watchdog$Monitor, com.android.internal.os.BatteryStatsImpl$BatteryCallback
{
    static final long APP_SWITCH_DELAY_TIME;
    private static final java.lang.String ATTR_CREATED_TIME;
    private static final java.lang.String ATTR_MODE_FLAGS;
    private static final java.lang.String ATTR_SOURCE_PKG;
    private static final java.lang.String ATTR_TARGET_PKG;
    private static final java.lang.String ATTR_URI;
    private static final java.lang.String ATTR_USER_HANDLE;
    static final long BATTERY_STATS_TIME;
    static final int BROADCAST_BG_TIMEOUT;
    static final int BROADCAST_FG_TIMEOUT;
    static final int CANCEL_HEAVY_NOTIFICATION_MSG;
    static final int CHECK_EXCESSIVE_WAKE_LOCKS_MSG;
    static final int CLEAR_DNS_CACHE_MSG;
    static final int COLLECT_PSS_BG_MSG;
    static final int CONTINUE_USER_SWITCH_MSG;
    static final int CPU_MIN_CHECK_DURATION;
    static final boolean DEBUG;
    static final boolean DEBUG_BACKGROUND_BROADCAST;
    static final boolean DEBUG_BACKUP;
    static final boolean DEBUG_BROADCAST;
    static final boolean DEBUG_BROADCAST_LIGHT;
    static final boolean DEBUG_CLEANUP;
    static final boolean DEBUG_CONFIGURATION;
    static final boolean DEBUG_FOCUS;
    static final boolean DEBUG_IMMERSIVE;
    static final boolean DEBUG_LOCKSCREEN;
    static final boolean DEBUG_LRU;
    static final boolean DEBUG_MU;
    static final boolean DEBUG_OOM_ADJ;
    static final boolean DEBUG_PAUSE;
    static final boolean DEBUG_POWER;
    static final boolean DEBUG_POWER_QUICK;
    static final boolean DEBUG_PROCESSES;
    static final boolean DEBUG_PROCESS_OBSERVERS;
    static final boolean DEBUG_PROVIDER;
    static final boolean DEBUG_PSS;
    static final boolean DEBUG_RESULTS;
    static final boolean DEBUG_SERVICE;
    static final boolean DEBUG_SERVICE_EXECUTING;
    static final boolean DEBUG_STACK;
    static final boolean DEBUG_SWITCH;
    static final boolean DEBUG_TASKS;
    static final boolean DEBUG_THUMBNAILS;
    static final boolean DEBUG_TRANSITION;
    static final boolean DEBUG_URI_PERMISSION;
    static final boolean DEBUG_USER_LEAVING;
    static final boolean DEBUG_VISBILITY;
    static final int DISPATCH_PROCESSES_CHANGED;
    static final int DISPATCH_PROCESS_DIED;
    static final int DO_PENDING_ACTIVITY_LAUNCHES_MSG;
    static final int DROPBOX_MAX_SIZE;
    static final long[] DUMP_MEM_BUCKETS;
    static final int[] DUMP_MEM_OOM_ADJ;
    static final java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL;
    static final java.lang.String[] DUMP_MEM_OOM_LABEL;
    static final java.lang.String[] EMPTY_STRING_ARRAY;
    static final int FINALIZE_PENDING_INTENT_MSG;
    static final int FIRST_ACTIVITY_STACK_MSG;
    static final int FIRST_BROADCAST_QUEUE_MSG;
    static final int FIRST_COMPAT_MODE_MSG;
    static final int FIRST_SUPERVISOR_STACK_MSG;
    static final int FULL_PSS_LOWERED_INTERVAL;
    static final int FULL_PSS_MIN_INTERVAL;
    static final int GC_BACKGROUND_PROCESSES_MSG;
    static final int GC_MIN_INTERVAL;
    static final int GC_TIMEOUT;
    static final int IMMERSIVE_MODE_LOCK_MSG;
    static final int IM_FEELING_LUCKY_MSG;
    static final int INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT;
    static final boolean IS_USER_BUILD;
    static final int KEY_DISPATCHING_TIMEOUT;
    static final int KILL_APPLICATION_MSG;
    static final int LAST_DONE_VERSION;
    private static final int MAX_DUP_SUPPRESSED_STACKS;
    static final int MAX_PERSISTED_URI_GRANTS;
    static final int MAX_RECENT_TASKS;
    static final int MAX_RUNNING_USERS;
    static final long MONITOR_CPU_MAX_TIME;
    static final long MONITOR_CPU_MIN_TIME;
    static final boolean MONITOR_CPU_USAGE;
    static final boolean MONITOR_THREAD_CPU_USAGE;
    static final int MY_PID;
    static final int PENDING_ASSIST_EXTRAS_TIMEOUT;
    static final int PERSIST_URI_GRANTS_MSG;
    static final int POST_HEAVY_NOTIFICATION_MSG;
    static final int POWER_CHECK_DELAY;
    static final int PROC_START_TIMEOUT;
    static final int PROC_START_TIMEOUT_MSG;
    static final int PROC_START_TIMEOUT_WITH_WRAPPER;
    static final int REPORT_MEM_USAGE_MSG;
    static final int REPORT_USER_SWITCH_MSG;
    static final int REQUEST_ALL_PSS_MSG;
    static final int SERVICE_TIMEOUT_MSG;
    static final boolean SHOW_ACTIVITY_START_TIME;
    static final int SHOW_COMPAT_MODE_DIALOG_MSG;
    static final int SHOW_ERROR_MSG;
    static final int SHOW_FACTORY_ERROR_MSG;
    static final int SHOW_NOT_RESPONDING_MSG;
    static final int SHOW_STRICT_MODE_VIOLATION_MSG;
    static final int SHOW_UID_ERROR_MSG;
    static final int STOCK_PM_FLAGS;
    private static final java.lang.String SYSTEM_DEBUGGABLE;
    static final java.lang.String TAG;
    static final java.lang.String TAG_MU;
    private static final java.lang.String TAG_URI_GRANT;
    private static final java.lang.String TAG_URI_GRANTS;
    static final int UPDATE_CONFIGURATION_MSG;
    static final int UPDATE_HTTP_PROXY_MSG;
    static final int UPDATE_TIME_ZONE;
    private static final java.lang.String USER_DATA_DIR;
    static final int USER_SWITCH_TIMEOUT;
    static final int USER_SWITCH_TIMEOUT_MSG;
    static final boolean VALIDATE_TOKENS;
    static final int WAIT_FOR_DEBUGGER_MSG;
    static final int WAKE_LOCK_MIN_CHECK_DURATION;
    static final boolean localLOGV;
    static com.android.server.am.ActivityManagerService mSelf;
    static android.app.ActivityThread mSystemThread;
    private static java.lang.ThreadLocal sCallerIdentity;
    final int GL_ES_VERSION;
    com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges;
    int mAdjSeq;
    boolean mAllowLowerMemLevel;
    private final java.util.HashSet mAlreadyLoggedViolatedStacks;
    boolean mAlwaysFinishActivities;
    java.util.HashMap mAppBindArgs;
    final com.android.server.AppOpsService mAppOpsService;
    long mAppSwitchesAllowedTime;
    boolean mAutoStopProfiler;
    final java.util.ArrayList mAvailProcessChanges;
    java.lang.String mBackupAppName;
    com.android.server.am.BackupRecord mBackupTarget;
    final com.android.internal.app.ProcessMap mBadProcesses;
    final com.android.server.am.BatteryStatsService mBatteryStatsService;
    com.android.server.am.BroadcastQueue mBgBroadcastQueue;
    final android.os.Handler mBgHandler;
    boolean mBooted;
    boolean mBooting;
    final com.android.server.am.BroadcastQueue[] mBroadcastQueues;
    boolean mCheckedForSetup;
    com.android.server.am.CompatModeDialog mCompatModeDialog;
    final com.android.server.am.CompatModePackages mCompatModePackages;
    android.content.res.Configuration mConfiguration;
    int mConfigurationSeq;
    android.content.Context mContext;
    android.app.IActivityController mController;
    com.android.server.am.CoreSettingsObserver mCoreSettingsObserver;
    java.lang.Object mCurUserSwitchCallback;
    int mCurrentUserId;
    java.lang.String mDebugApp;
    boolean mDebugTransient;
    boolean mDidAppSwitch;
    boolean mDidDexOpt;
    boolean mDidUpdate;
    int mFactoryTest;
    com.android.server.am.BroadcastQueue mFgBroadcastQueue;
    com.android.server.am.ActivityRecord mFocusedActivity;
    final android.util.SparseArray mForegroundProcesses;
    private final android.util.AtomicFile mGrantFile;
    private final android.util.SparseArray mGrantedUriPermissions;
    final android.os.Handler mHandler;
    private final boolean mHeadless;
    com.android.server.am.ProcessRecord mHeavyWeightProcess;
    com.android.server.am.ProcessRecord mHomeProcess;
    public com.android.server.firewall.IntentFirewall mIntentFirewall;
    final java.util.HashMap mIntentSenderRecords;
    final android.util.SparseArray mIsolatedProcesses;
    final java.util.concurrent.atomic.AtomicLong mLastCpuTime;
    long mLastFullPssTime;
    long mLastIdleTime;
    long mLastMemUsageReportTime;
    int mLastMemoryLevel;
    int mLastNumProcesses;
    long mLastPowerCheckRealtime;
    long mLastPowerCheckUptime;
    long mLastWriteTime;
    boolean mLaunchWarningShown;
    final java.util.ArrayList mLaunchingProviders;
    boolean mLockScreenShown;
    long mLowRamStartTime;
    long mLowRamTimeSinceLastIdle;
    int mLruProcessActivityStart;
    int mLruProcessServiceStart;
    final java.util.ArrayList mLruProcesses;
    int mLruSeq;
    int mNewNumAServiceProcs;
    int mNewNumServiceProcs;
    int mNextIsolatedProcessUid;
    int mNumCachedHiddenProcs;
    int mNumNonCachedProcs;
    int mNumServiceProcs;
    boolean mOnBattery;
    java.lang.String mOpenGlTraceApp;
    java.lang.String mOrigDebugApp;
    boolean mOrigWaitForDebugger;
    final java.util.ArrayList mPendingActivityLaunches;
    final java.util.ArrayList mPendingAssistExtras;
    final java.util.ArrayList mPendingProcessChanges;
    final java.util.ArrayList mPendingPssProcesses;
    final java.util.ArrayList mPendingThumbnails;
    final java.util.ArrayList mPersistentStartingProcesses;
    final android.util.SparseArray mPidsSelfLocked;
    com.android.server.am.ProcessRecord mPreviousProcess;
    long mPreviousProcessVisibleTime;
    final java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree;
    final java.lang.Thread mProcessCpuThread;
    final com.android.internal.os.ProcessCpuTracker mProcessCpuTracker;
    final com.android.internal.app.ProcessMap mProcessCrashTimes;
    int mProcessLimit;
    int mProcessLimitOverride;
    final com.android.server.am.ProcessList mProcessList;
    final com.android.internal.app.ProcessMap mProcessNames;
    final android.os.RemoteCallbackList mProcessObservers;
    final com.android.server.am.ProcessStatsService mProcessStats;
    final java.util.ArrayList mProcessesOnHold;
    boolean mProcessesReady;
    final java.util.ArrayList mProcessesToGc;
    java.lang.String mProfileApp;
    android.os.ParcelFileDescriptor mProfileFd;
    java.lang.String mProfileFile;
    com.android.server.am.ProcessRecord mProfileProc;
    int mProfileType;
    final com.android.server.am.ProviderMap mProviderMap;
    final com.android.server.IntentResolver mReceiverResolver;
    private final java.util.ArrayList mRecentTasks;
    final java.util.HashMap mRegisteredReceivers;
    final java.util.ArrayList mRemovedProcesses;
    final com.android.server.am.ActiveServices mServices;
    private boolean mShowDialogs;
    boolean mShuttingDown;
    boolean mSleeping;
    com.android.server.am.ActivityStackSupervisor mStackSupervisor;
    boolean mStartRunning;
    int[] mStartedUserArray;
    final android.util.SparseArray mStartedUsers;
    final android.util.SparseArray mStickyBroadcasts;
    private final java.lang.StringBuilder mStrictModeBuffer;
    final java.lang.StringBuilder mStringBuilder;
    boolean mSystemReady;
    java.lang.String mTopAction;
    android.content.ComponentName mTopComponent;
    java.lang.String mTopData;
    android.app.AlertDialog mUidAlert;
    final android.os.UpdateLock mUpdateLock;
    final com.android.server.am.UsageStatsService mUsageStatsService;
    private boolean mUserIsMonkey;
    final java.util.ArrayList mUserLru;
    private com.android.server.pm.UserManagerService mUserManager;
    final android.os.RemoteCallbackList mUserSwitchObservers;
    boolean mWaitForDebugger;
    boolean mWaitingUpdate;
    boolean mWentToSleep;
    com.android.server.wm.WindowManagerService mWindowManager;

    static void <clinit>()
    {
        byte b0;
        java.lang.String $r0, $r1;
        boolean $z0, $z1;
        int $i1;
        java.lang.String[] $r2, $r6, $r7;
        java.lang.ThreadLocal $r3;
        long[] $r4;
        int[] $r5;

        <com.android.server.am.ActivityManagerService: int WAKE_LOCK_MIN_CHECK_DURATION> = 300000;

        <com.android.server.am.ActivityManagerService: int WAIT_FOR_DEBUGGER_MSG> = 6;

        <com.android.server.am.ActivityManagerService: boolean VALIDATE_TOKENS> = 0;

        <com.android.server.am.ActivityManagerService: int USER_SWITCH_TIMEOUT_MSG> = 36;

        <com.android.server.am.ActivityManagerService: int USER_SWITCH_TIMEOUT> = 2000;

        <com.android.server.am.ActivityManagerService: java.lang.String USER_DATA_DIR> = "/data/user/";

        <com.android.server.am.ActivityManagerService: int UPDATE_TIME_ZONE> = 13;

        <com.android.server.am.ActivityManagerService: int UPDATE_HTTP_PROXY_MSG> = 29;

        <com.android.server.am.ActivityManagerService: int UPDATE_CONFIGURATION_MSG> = 4;

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_URI_GRANTS> = "uri-grants";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_URI_GRANT> = "uri-grant";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG_MU> = "ActivityManagerServiceMU";

        <com.android.server.am.ActivityManagerService: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ActivityManagerService: java.lang.String SYSTEM_DEBUGGABLE> = "ro.debuggable";

        <com.android.server.am.ActivityManagerService: int STOCK_PM_FLAGS> = 1024;

        <com.android.server.am.ActivityManagerService: int SHOW_UID_ERROR_MSG> = 14;

        <com.android.server.am.ActivityManagerService: int SHOW_STRICT_MODE_VIOLATION_MSG> = 26;

        <com.android.server.am.ActivityManagerService: int SHOW_NOT_RESPONDING_MSG> = 2;

        <com.android.server.am.ActivityManagerService: int SHOW_FACTORY_ERROR_MSG> = 3;

        <com.android.server.am.ActivityManagerService: int SHOW_ERROR_MSG> = 1;

        <com.android.server.am.ActivityManagerService: int SHOW_COMPAT_MODE_DIALOG_MSG> = 30;

        <com.android.server.am.ActivityManagerService: boolean SHOW_ACTIVITY_START_TIME> = 1;

        <com.android.server.am.ActivityManagerService: int SERVICE_TIMEOUT_MSG> = 12;

        <com.android.server.am.ActivityManagerService: int REQUEST_ALL_PSS_MSG> = 39;

        <com.android.server.am.ActivityManagerService: int REPORT_USER_SWITCH_MSG> = 34;

        <com.android.server.am.ActivityManagerService: int REPORT_MEM_USAGE_MSG> = 33;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT_WITH_WRAPPER> = 300000;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT_MSG> = 20;

        <com.android.server.am.ActivityManagerService: int PROC_START_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int POWER_CHECK_DELAY> = 900000;

        <com.android.server.am.ActivityManagerService: int POST_HEAVY_NOTIFICATION_MSG> = 24;

        <com.android.server.am.ActivityManagerService: int PERSIST_URI_GRANTS_MSG> = 38;

        <com.android.server.am.ActivityManagerService: int PENDING_ASSIST_EXTRAS_TIMEOUT> = 500;

        <com.android.server.am.ActivityManagerService: boolean MONITOR_THREAD_CPU_USAGE> = 0;

        <com.android.server.am.ActivityManagerService: boolean MONITOR_CPU_USAGE> = 1;

        <com.android.server.am.ActivityManagerService: long MONITOR_CPU_MIN_TIME> = 5000L;

        <com.android.server.am.ActivityManagerService: long MONITOR_CPU_MAX_TIME> = 268435455L;

        <com.android.server.am.ActivityManagerService: int MAX_RUNNING_USERS> = 3;

        <com.android.server.am.ActivityManagerService: int MAX_PERSISTED_URI_GRANTS> = 128;

        <com.android.server.am.ActivityManagerService: int MAX_DUP_SUPPRESSED_STACKS> = 5000;

        <com.android.server.am.ActivityManagerService: int LAST_DONE_VERSION> = 10000;

        <com.android.server.am.ActivityManagerService: int KILL_APPLICATION_MSG> = 22;

        <com.android.server.am.ActivityManagerService: int KEY_DISPATCHING_TIMEOUT> = 5000;

        <com.android.server.am.ActivityManagerService: int INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT> = 60000;

        <com.android.server.am.ActivityManagerService: int IM_FEELING_LUCKY_MSG> = 15;

        <com.android.server.am.ActivityManagerService: int IMMERSIVE_MODE_LOCK_MSG> = 37;

        <com.android.server.am.ActivityManagerService: int GC_TIMEOUT> = 5000;

        <com.android.server.am.ActivityManagerService: int GC_MIN_INTERVAL> = 60000;

        <com.android.server.am.ActivityManagerService: int GC_BACKGROUND_PROCESSES_MSG> = 5;

        <com.android.server.am.ActivityManagerService: int FULL_PSS_MIN_INTERVAL> = 600000;

        <com.android.server.am.ActivityManagerService: int FULL_PSS_LOWERED_INTERVAL> = 120000;

        <com.android.server.am.ActivityManagerService: int FIRST_SUPERVISOR_STACK_MSG> = 100;

        <com.android.server.am.ActivityManagerService: int FIRST_COMPAT_MODE_MSG> = 300;

        <com.android.server.am.ActivityManagerService: int FIRST_BROADCAST_QUEUE_MSG> = 200;

        <com.android.server.am.ActivityManagerService: int FIRST_ACTIVITY_STACK_MSG> = 100;

        <com.android.server.am.ActivityManagerService: int FINALIZE_PENDING_INTENT_MSG> = 23;

        <com.android.server.am.ActivityManagerService: int DROPBOX_MAX_SIZE> = 262144;

        <com.android.server.am.ActivityManagerService: int DO_PENDING_ACTIVITY_LAUNCHES_MSG> = 21;

        <com.android.server.am.ActivityManagerService: int DISPATCH_PROCESS_DIED> = 32;

        <com.android.server.am.ActivityManagerService: int DISPATCH_PROCESSES_CHANGED> = 31;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_VISBILITY> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_USER_LEAVING> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_URI_PERMISSION> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_TRANSITION> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_THUMBNAILS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_TASKS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_SWITCH> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_STACK> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_SERVICE_EXECUTING> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_SERVICE> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_RESULTS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PSS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PROVIDER> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PROCESS_OBSERVERS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PROCESSES> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_POWER_QUICK> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_POWER> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_PAUSE> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_OOM_ADJ> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_MU> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_LRU> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_LOCKSCREEN> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_IMMERSIVE> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_FOCUS> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_CONFIGURATION> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_CLEANUP> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BROADCAST_LIGHT> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BROADCAST> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BACKUP> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG_BACKGROUND_BROADCAST> = 0;

        <com.android.server.am.ActivityManagerService: boolean DEBUG> = 0;

        <com.android.server.am.ActivityManagerService: int CPU_MIN_CHECK_DURATION> = 300000;

        <com.android.server.am.ActivityManagerService: int CONTINUE_USER_SWITCH_MSG> = 35;

        <com.android.server.am.ActivityManagerService: int COLLECT_PSS_BG_MSG> = 1;

        <com.android.server.am.ActivityManagerService: int CLEAR_DNS_CACHE_MSG> = 28;

        <com.android.server.am.ActivityManagerService: int CHECK_EXCESSIVE_WAKE_LOCKS_MSG> = 27;

        <com.android.server.am.ActivityManagerService: int CANCEL_HEAVY_NOTIFICATION_MSG> = 25;

        <com.android.server.am.ActivityManagerService: int BROADCAST_FG_TIMEOUT> = 10000;

        <com.android.server.am.ActivityManagerService: int BROADCAST_BG_TIMEOUT> = 60000;

        <com.android.server.am.ActivityManagerService: long BATTERY_STATS_TIME> = 1800000L;

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_USER_HANDLE> = "userHandle";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_URI> = "uri";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_TARGET_PKG> = "targetPkg";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_SOURCE_PKG> = "sourcePkg";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_MODE_FLAGS> = "modeFlags";

        <com.android.server.am.ActivityManagerService: java.lang.String ATTR_CREATED_TIME> = "createdTime";

        <com.android.server.am.ActivityManagerService: long APP_SWITCH_DELAY_TIME> = 5000L;

        $r1 = "user";

        $r0 = <android.os.Build: java.lang.String TYPE>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        <com.android.server.am.ActivityManagerService: boolean IS_USER_BUILD> = $z0;

        $z1 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z1 == 0 goto label2;

        b0 = 10;

     label1:
        <com.android.server.am.ActivityManagerService: int MAX_RECENT_TASKS> = b0;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        <com.android.server.am.ActivityManagerService: int MY_PID> = $i1;

        $r2 = newarray (java.lang.String)[0];

        <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY> = $r2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity> = $r3;

        $r4 = newarray (long)[23];

        $r4[0] = 5120L;

        $r4[1] = 7168L;

        $r4[2] = 10240L;

        $r4[3] = 15360L;

        $r4[4] = 20480L;

        $r4[5] = 30720L;

        $r4[6] = 40960L;

        $r4[7] = 81920L;

        $r4[8] = 122880L;

        $r4[9] = 163840L;

        $r4[10] = 204800L;

        $r4[11] = 256000L;

        $r4[12] = 307200L;

        $r4[13] = 358400L;

        $r4[14] = 409600L;

        $r4[15] = 512000L;

        $r4[16] = 614400L;

        $r4[17] = 819200L;

        $r4[18] = 1048576L;

        $r4[19] = 2097152L;

        $r4[20] = 5242880L;

        $r4[21] = 10485760L;

        $r4[22] = 20971520L;

        <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS> = $r4;

        $r5 = newarray (int)[13];

        $r5[0] = -17;

        $r5[1] = -16;

        $r5[2] = -12;

        $r5[3] = 0;

        $r5[4] = 1;

        $r5[5] = 2;

        $r5[6] = 3;

        $r5[7] = 4;

        $r5[8] = 5;

        $r5[9] = 6;

        $r5[10] = 7;

        $r5[11] = 8;

        $r5[12] = 15;

        <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ> = $r5;

        $r6 = newarray (java.lang.String)[13];

        $r6[0] = "Native";

        $r6[1] = "System";

        $r6[2] = "Persistent";

        $r6[3] = "Foreground";

        $r6[4] = "Visible";

        $r6[5] = "Perceptible";

        $r6[6] = "Heavy Weight";

        $r6[7] = "Backup";

        $r6[8] = "A Services";

        $r6[9] = "Home";

        $r6[10] = "Previous";

        $r6[11] = "B Services";

        $r6[12] = "Cached";

        <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL> = $r6;

        $r7 = newarray (java.lang.String)[13];

        $r7[0] = "native";

        $r7[1] = "sys";

        $r7[2] = "pers";

        $r7[3] = "fore";

        $r7[4] = "vis";

        $r7[5] = "percept";

        $r7[6] = "heavy";

        $r7[7] = "backup";

        $r7[8] = "servicea";

        $r7[9] = "home";

        $r7[10] = "prev";

        $r7[11] = "serviceb";

        $r7[12] = "cached";

        <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL> = $r7;

        return;

     label2:
        b0 = 20;

        goto label1;

        return;
    }

    private void <init>()
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.File r1, $r63, r140, r141, r143, r145, r147, r149;
        com.android.server.am.BroadcastQueue[] $r3, $r50, $r56;
        long $l0, $l1;
        int[] $r20;
        com.android.server.am.ActivityManagerService$ProcessChangeItem[] $r34;
        android.os.Handler $r42;
        java.lang.StringBuilder $r45, $r49, r117, r125, r135;
        android.os.Looper $r47;
        java.lang.String $r48, $r59, $r78, $r83, $r84;
        int $i3, $i4;
        com.android.server.am.BroadcastQueue $r51, $r57, r136, r137;
        com.android.server.am.BatteryStatsService $r60, $r65, $r68, $r70, r142;
        com.android.internal.os.BatteryStatsImpl $r61, $r66, $r69, $r71;
        boolean $z1, $z2;
        android.util.SparseArray $r80, r101, r104, r105, r112, r120, r123;
        java.util.ArrayList $r82, r96, r97, r98, r106, r107, r108, r109, r110, r111, r113, r121, r122, r127, r128;
        android.content.res.Configuration $r86, $r88, $r90, r124;
        com.android.internal.os.ProcessCpuTracker $r87, r129;
        java.util.Locale $r89;
        java.lang.Integer $r91;
        java.lang.Thread $r93;
        com.android.server.Watchdog $r95;
        com.android.server.am.ProcessList r99;
        com.android.internal.app.ProcessMap r100, r102, r103;
        android.os.RemoteCallbackList r114, r126;
        java.util.HashMap r115, r118;
        java.util.HashSet r116;
        com.android.server.am.ActivityManagerService$1 r119;
        java.util.concurrent.atomic.AtomicLong r130;
        java.util.concurrent.atomic.AtomicBoolean r131;
        android.os.UpdateLock r132;
        com.android.server.am.ActivityManagerService$2 r133;
        com.android.server.am.ActivityManagerService$3 r134;
        com.android.server.am.ActiveServices r138;
        com.android.server.am.ProviderMap r139;
        com.android.server.am.ProcessStatsService r144;
        com.android.server.am.UsageStatsService r146;
        com.android.server.AppOpsService r148;
        android.util.AtomicFile r150;
        android.os.UserHandle r151;
        com.android.server.am.UserStartedState r152;
        com.android.server.am.CompatModePackages r153;
        com.android.server.am.ActivityManagerService$4 r154;
        com.android.internal.os.BatteryStatsImpl$BatteryCallback r155;

        r0 := @this: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<android.app.ActivityManagerNative: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mShowDialogs> = 1;

        r96 = new java.util.ArrayList;

        specialinvoke r96.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingActivityLaunches> = r96;

        $r3 = newarray (com.android.server.am.BroadcastQueue)[2];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues> = $r3;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity> = null;

        r97 = new java.util.ArrayList;

        specialinvoke r97.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks> = r97;

        r98 = new java.util.ArrayList;

        specialinvoke r98.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingAssistExtras> = r98;

        r99 = new com.android.server.am.ProcessList;

        specialinvoke r99.<com.android.server.am.ProcessList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList> = r99;

        r100 = new com.android.internal.app.ProcessMap;

        specialinvoke r100.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames> = r100;

        r101 = new android.util.SparseArray;

        specialinvoke r101.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses> = r101;

        r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid> = 0;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

        r102 = new com.android.internal.app.ProcessMap;

        specialinvoke r102.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes> = r102;

        r103 = new com.android.internal.app.ProcessMap;

        specialinvoke r103.<com.android.internal.app.ProcessMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses> = r103;

        r104 = new android.util.SparseArray;

        specialinvoke r104.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked> = r104;

        r105 = new android.util.SparseArray;

        specialinvoke r105.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses> = r105;

        r106 = new java.util.ArrayList;

        specialinvoke r106.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold> = r106;

        r107 = new java.util.ArrayList;

        specialinvoke r107.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses> = r107;

        r108 = new java.util.ArrayList;

        specialinvoke r108.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses> = r108;

        r109 = new java.util.ArrayList;

        specialinvoke r109.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses> = r109;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart> = 0;

        r110 = new java.util.ArrayList;

        specialinvoke r110.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc> = r110;

        r111 = new java.util.ArrayList;

        specialinvoke r111.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses> = r111;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime> = $l0;

        r112 = new android.util.SparseArray;

        specialinvoke r112.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers> = r112;

        r113 = new java.util.ArrayList;

        specialinvoke r113.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru> = r113;

        $r20 = newarray (int)[1];

        $r20[0] = 0;

        r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray> = $r20;

        r114 = new android.os.RemoteCallbackList;

        specialinvoke r114.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers> = r114;

        r115 = new java.util.HashMap;

        specialinvoke r115.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords> = r115;

        r116 = new java.util.HashSet;

        specialinvoke r116.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks> = r116;

        r117 = new java.lang.StringBuilder;

        specialinvoke r117.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStrictModeBuffer> = r117;

        r118 = new java.util.HashMap;

        specialinvoke r118.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers> = r118;

        r119 = new com.android.server.am.ActivityManagerService$1;

        specialinvoke r119.<com.android.server.am.ActivityManagerService$1: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver> = r119;

        r120 = new android.util.SparseArray;

        specialinvoke r120.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts> = r120;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r121 = new java.util.ArrayList;

        specialinvoke r121.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails> = r121;

        r122 = new java.util.ArrayList;

        specialinvoke r122.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders> = r122;

        r123 = new android.util.SparseArray;

        specialinvoke r123.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions> = r123;

        r124 = new android.content.res.Configuration;

        specialinvoke r124.<android.content.res.Configuration: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration> = r124;

        r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq> = 0;

        r125 = new java.lang.StringBuilder;

        specialinvoke r125.<java.lang.StringBuilder: void <init>(int)>(256);

        r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder> = r125;

        r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mDidUpdate> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mLaunchWarningShown> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mLruSeq> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumServiceProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel> = 0;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime> = $l1;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = 0L;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = 0L;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = null;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = 0;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = null;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = 0;

        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = null;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler> = 0;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp> = null;

        r126 = new android.os.RemoteCallbackList;

        specialinvoke r126.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers> = r126;

        $r34 = newarray (com.android.server.am.ActivityManagerService$ProcessChangeItem)[5];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges> = $r34;

        r127 = new java.util.ArrayList;

        specialinvoke r127.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges> = r127;

        r128 = new java.util.ArrayList;

        specialinvoke r128.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges> = r128;

        r129 = new com.android.internal.os.ProcessCpuTracker;

        specialinvoke r129.<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>(0);

        r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker> = r129;

        r130 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke r130.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime> = r130;

        r131 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke r131.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree> = r131;

        r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = 0L;

        r132 = new android.os.UpdateLock;

        specialinvoke r132.<android.os.UpdateLock: void <init>(java.lang.String)>("immersive");

        r0.<com.android.server.am.ActivityManagerService: android.os.UpdateLock mUpdateLock> = r132;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mProcessLimit> = 24;

        r0.<com.android.server.am.ActivityManagerService: int mProcessLimitOverride> = -1;

        r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId> = 0;

        r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime> = 0L;

        r133 = new com.android.server.am.ActivityManagerService$2;

        specialinvoke r133.<com.android.server.am.ActivityManagerService$2: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler> = r133;

        r134 = new com.android.server.am.ActivityManagerService$3;

        $r42 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r47 = virtualinvoke $r42.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r134.<com.android.server.am.ActivityManagerService$3: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>(r0, $r47);

        r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler> = r134;

        r135 = new java.lang.StringBuilder;

        specialinvoke r135.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Memory class: ");

        $i3 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r48);

        r136 = new com.android.server.am.BroadcastQueue;

        specialinvoke r136.<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,long,boolean)>(r0, "foreground", 10000L, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue> = r136;

        r137 = new com.android.server.am.BroadcastQueue;

        specialinvoke r137.<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,long,boolean)>(r0, "background", 60000L, 1);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue> = r137;

        $r50 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $r51 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        $r50[0] = $r51;

        $r56 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        $r57 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

        $r56[1] = $r57;

        r138 = new com.android.server.am.ActiveServices;

        specialinvoke r138.<com.android.server.am.ActiveServices: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices> = r138;

        r139 = new com.android.server.am.ProviderMap;

        specialinvoke r139.<com.android.server.am.ProviderMap: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap> = r139;

        r140 = new java.io.File;

        $r63 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke r140.<java.io.File: void <init>(java.io.File,java.lang.String)>($r63, "system");

        r1 = r140;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        r142 = new com.android.server.am.BatteryStatsService;

        r141 = new java.io.File;

        specialinvoke r141.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "batterystats.bin");

        $r59 = virtualinvoke r141.<java.io.File: java.lang.String toString()>();

        specialinvoke r142.<com.android.server.am.BatteryStatsService: void <init>(java.lang.String)>($r59);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService> = r142;

        $r60 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r61 = virtualinvoke $r60.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r61.<com.android.internal.os.BatteryStatsImpl: void readLocked()>();

        $r68 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r69 = virtualinvoke $r68.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r69.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

        $r70 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r71 = virtualinvoke $r70.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        $z1 = virtualinvoke $r71.<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = $z1;

        $r65 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r66 = virtualinvoke $r65.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r155 = (com.android.internal.os.BatteryStatsImpl$BatteryCallback) r0;

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl: void setCallback(com.android.internal.os.BatteryStatsImpl$BatteryCallback)>(r155);

        r144 = new com.android.server.am.ProcessStatsService;

        r143 = new java.io.File;

        specialinvoke r143.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "procstats");

        specialinvoke r144.<com.android.server.am.ProcessStatsService: void <init>(com.android.server.am.ActivityManagerService,java.io.File)>(r0, r143);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats> = r144;

        r146 = new com.android.server.am.UsageStatsService;

        r145 = new java.io.File;

        specialinvoke r145.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "usagestats");

        $r78 = virtualinvoke r145.<java.io.File: java.lang.String toString()>();

        specialinvoke r146.<com.android.server.am.UsageStatsService: void <init>(java.lang.String)>($r78);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService> = r146;

        r148 = new com.android.server.AppOpsService;

        r147 = new java.io.File;

        specialinvoke r147.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "appops.xml");

        specialinvoke r148.<com.android.server.AppOpsService: void <init>(java.io.File)>(r147);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService> = r148;

        r150 = new android.util.AtomicFile;

        r149 = new java.io.File;

        specialinvoke r149.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "urigrants.xml");

        specialinvoke r150.<android.util.AtomicFile: void <init>(java.io.File)>(r149);

        r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile> = r150;

        $r84 = "1";

        $r83 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.config.headless", "0");

        $z2 = virtualinvoke $r84.<java.lang.String: boolean equals(java.lang.Object)>($r83);

        r0.<com.android.server.am.ActivityManagerService: boolean mHeadless> = $z2;

        $r80 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        r152 = new com.android.server.am.UserStartedState;

        r151 = new android.os.UserHandle;

        specialinvoke r151.<android.os.UserHandle: void <init>(int)>(0);

        specialinvoke r152.<com.android.server.am.UserStartedState: void <init>(android.os.UserHandle,boolean)>(r151, 1);

        virtualinvoke $r80.<android.util.SparseArray: void put(int,java.lang.Object)>(0, r152);

        $r82 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r82.<java.util.ArrayList: boolean add(java.lang.Object)>($r91);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        $i4 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.opengles.version", 0);

        r0.<com.android.server.am.ActivityManagerService: int GL_ES_VERSION> = $i4;

        $r90 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r90.<android.content.res.Configuration: void setToDefaults()>();

        $r88 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r89 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke $r88.<android.content.res.Configuration: void setLocale(java.util.Locale)>($r89);

        $r86 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r86.<android.content.res.Configuration: int seq> = 1;

        r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq> = 1;

        $r87 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        virtualinvoke $r87.<com.android.internal.os.ProcessCpuTracker: void init()>();

        r153 = new com.android.server.am.CompatModePackages;

        specialinvoke r153.<com.android.server.am.CompatModePackages: void <init>(com.android.server.am.ActivityManagerService,java.io.File)>(r0, r1);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages> = r153;

        $r95 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r95.<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>(r0);

        r154 = new com.android.server.am.ActivityManagerService$4;

        specialinvoke r154.<com.android.server.am.ActivityManagerService$4: void <init>(com.android.server.am.ActivityManagerService,java.lang.String)>(r0, "CpuTracker");

        r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread> = r154;

        $r93 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        virtualinvoke $r93.<java.lang.Thread: void start()>();

        return;
    }

    void <init>(com.android.server.am.ActivityManagerService$1)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$1 r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService$1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void <init>()>();

        return;
    }

    static boolean access$000(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mShowDialogs>;

        return $z0;
    }

    static int access$100(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord, java.lang.String, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, int, boolean, boolean, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r4, r6, r8;
        android.content.Intent r3;
        android.content.IIntentReceiver r5;
        int i0, i1, i2, i3, i4, $i5;
        android.os.Bundle r7;
        boolean z0, z1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.Intent;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.content.IIntentReceiver;

        i0 := @parameter6: int;

        r6 := @parameter7: java.lang.String;

        r7 := @parameter8: android.os.Bundle;

        r8 := @parameter9: java.lang.String;

        i1 := @parameter10: int;

        z0 := @parameter11: boolean;

        z1 := @parameter12: boolean;

        i2 := @parameter13: int;

        i3 := @parameter14: int;

        i4 := @parameter15: int;

        $i5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(r1, r2, r3, r4, r5, i0, r6, r7, r8, i1, z0, z1, i2, i3, i4);

        return $i5;
    }

    static void access$200(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: com.android.server.am.ProcessRecord;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>(r1);

        return;
    }

    static boolean access$300(com.android.server.am.ActivityManagerService, java.lang.String, int, boolean, boolean, boolean, boolean, boolean, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, i1;
        boolean z0, z1, z2, z3, z4, $z5;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        z3 := @parameter6: boolean;

        z4 := @parameter7: boolean;

        i1 := @parameter8: int;

        r2 := @parameter9: java.lang.String;

        $z5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, i0, z0, z1, z2, z3, z4, i1, r2);

        return $z5;
    }

    static void access$400(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dispatchProcessesChanged()>();

        return;
    }

    static void access$500(com.android.server.am.ActivityManagerService, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dispatchProcessDied(int,int)>(i0, i1);

        return;
    }

    static void access$600(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void writeGrantedUriPermissions()>();

        return;
    }

    static void access$800(java.util.ArrayList)
    {
        java.util.ArrayList r0;

        r0 := @parameter0: java.util.ArrayList;

        staticinvoke <com.android.server.am.ActivityManagerService: void writeLastDonePreBootReceivers(java.util.ArrayList)>(r0);

        return;
    }

    static java.lang.StringBuilder access$900(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.StringBuilder $r1;

        r0 := @parameter0: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStrictModeBuffer>;

        return $r1;
    }

    private void addStackInfoToStackBoxInfo(android.app.ActivityManager$StackBoxInfo, java.util.List)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.ActivityManager$StackBoxInfo r1, $r6, $r8;
        java.util.List r2;
        int i0, $i1;
        java.util.Iterator r3;
        android.app.ActivityManager$StackInfo r4;
        android.app.ActivityManager$StackBoxInfo[] $r5, $r7;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.ActivityManager$StackBoxInfo;

        r2 := @parameter1: java.util.List;

        i0 = r1.<android.app.ActivityManager$StackBoxInfo: int stackId>;

        if i0 < 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.app.ActivityManager$StackInfo) $r9;

        $i1 = r4.<android.app.ActivityManager$StackInfo: int stackId>;

        if i0 != $i1 goto label1;

        r1.<android.app.ActivityManager$StackBoxInfo: android.app.ActivityManager$StackInfo stack> = r4;

        interfaceinvoke r2.<java.util.List: boolean remove(java.lang.Object)>(r4);

     label2:
        return;

     label3:
        $r5 = r1.<android.app.ActivityManager$StackBoxInfo: android.app.ActivityManager$StackBoxInfo[] children>;

        $r6 = $r5[0];

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void addStackInfoToStackBoxInfo(android.app.ActivityManager$StackBoxInfo,java.util.List)>($r6, r2);

        $r7 = r1.<android.app.ActivityManager$StackBoxInfo: android.app.ActivityManager$StackBoxInfo[] children>;

        $r8 = $r7[1];

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void addStackInfoToStackBoxInfo(android.app.ActivityManager$StackBoxInfo,java.util.List)>($r8, r2);

        return;
    }

    private void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord, java.lang.String, java.lang.StringBuilder)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r6, $r13, $r25, $r27, $r37;
        java.lang.StringBuilder r3, $r9, $r11, $r14, $r16, $r19, $r24, $r26, $r28, $r29, $r32, $r33, $r38, r39;
        java.lang.Throwable r4, $r36, r40;
        int i0, i1, $i2, $i3, $i4;
        android.content.pm.IPackageManager r5;
        android.os.RemoteException r7, $r35;
        android.content.pm.PackageInfo r8;
        android.content.pm.ApplicationInfo $r12;
        android.util.ArrayMap $r17, $r18;
        java.lang.Object $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.StringBuilder;

        if r1 != null goto label01;

        $r32 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process: ");

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        return;

     label01:
        entermonitor r0;

     label02:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i0 = $r12.<android.content.pm.ApplicationInfo: int flags>;

        r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Flags: 0x");

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i0, 16);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label03:
        i1 = 0;

     label04:
        $r17 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $i2 = virtualinvoke $r17.<android.util.ArrayMap: int size()>();

        if i1 >= $i2 goto label16;

        $r18 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $r20 = virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r6 = (java.lang.String) $r20;

        $r19 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package: ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

     label05:
        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r8 = interfaceinvoke r5.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r6, 0, $i3);

     label06:
        if r8 == null goto label08;

     label07:
        $r24 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v");

        $i4 = r8.<android.content.pm.PackageInfo: int versionCode>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r27 = r8.<android.content.pm.PackageInfo: java.lang.String versionName>;

        if $r27 == null goto label08;

        $r28 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r25 = r8.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label08:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label09:
        i1 = i1 + 1;

        goto label04;

     label10:
        $r35 := @caughtexception;

        r7 = $r35;

     label11:
        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting package info: ");

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        r40 = (java.lang.Throwable) r7;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r37, r40);

     label12:
        goto label08;

     label13:
        $r36 := @caughtexception;

        r4 = $r36;

     label14:
        exitmonitor r0;

     label15:
        throw r4;

     label16:
        exitmonitor r0;

     label17:
        return;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label16 to label17 with label13;
    }

    static final void appendMemBucket(java.lang.StringBuilder, long, java.lang.String, boolean)
    {
        java.lang.StringBuilder r0;
        long l0, $l5, $l8, $l9, $l10;
        java.lang.String r1, r2, r3;
        boolean z0;
        int i1, i2, i3, i4, $i6;
        long[] $r4, $r7, $r9;
        byte $b7;

        r0 := @parameter0: java.lang.StringBuilder;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i1 < 0 goto label4;

        i2 = i1 + 1;

     label1:
        i3 = virtualinvoke r1.<java.lang.String: int length()>();

        i4 = 0;

     label2:
        $r4 = <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS>;

        $i6 = lengthof $r4;

        if i4 >= $i6 goto label7;

        $r7 = <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS>;

        $l8 = $r7[i4];

        $b7 = $l8 cmp l0;

        if $b7 < 0 goto label6;

        $r9 = <com.android.server.am.ActivityManagerService: long[] DUMP_MEM_BUCKETS>;

        $l9 = $r9[i4];

        $l10 = $l9 / 1024L;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        if z0 == 0 goto label5;

        r3 = "MB.";

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i2, i3);

        return;

     label4:
        i2 = 0;

        goto label1;

     label5:
        r3 = "MB ";

        goto label3;

     label6:
        i4 = i4 + 1;

        goto label2;

     label7:
        $l5 = l0 / 1024L;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        if z0 == 0 goto label9;

        r2 = "MB.";

     label8:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i2, i3);

        return;

     label9:
        r2 = "MB ";

        goto label8;
    }

    private final boolean applyOomAdjLocked(com.android.server.am.ProcessRecord, boolean, com.android.server.am.ProcessRecord, boolean, boolean, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z10;
        long l0, l1, $l15, $l20, $l24, $l26, $l28, $l29, $l32, $l47, $l48, $l49;
        java.lang.Throwable r4, r7, $r21, $r22;
        java.lang.Exception r5, $r27;
        int i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i22, $i23, $i25, $i30, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i50, $i51;
        com.android.internal.os.BatteryStatsImpl r6;
        com.android.server.am.ProcessStatsService $r8;
        byte $b21, $b27, $b31;
        android.app.IApplicationThread $r9, $r11;
        java.lang.String $r10, $r13, $r15, $r30;
        java.lang.StringBuilder $r12, $r14, $r16, $r17, $r18, $r24, $r25, $r26, $r28, $r29;
        android.content.pm.ApplicationInfo $r19;
        com.android.server.am.BatteryStatsService $r20;
        android.os.RemoteException $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        l0 := @parameter5: long;

        z3 = 1;

        $i5 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int setRawAdj>;

        if $i5 == $i3 goto label04;

        if z0 == 0 goto label03;

        $z10 = r1.<com.android.server.am.ProcessRecord: boolean keeping>;

        if $z10 != 0 goto label03;

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r6 = virtualinvoke $r20.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r6;

     label01:
        $r19 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i45 = $r19.<android.content.pm.ApplicationInfo: int uid>;

        $i44 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $l48 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l47 = virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>($i45, $i44, $l48);

        r1.<com.android.server.am.ProcessRecord: long lastWakeTime> = $l47;

        exitmonitor r6;

     label02:
        $l49 = r1.<com.android.server.am.ProcessRecord: long curCpuTime>;

        r1.<com.android.server.am.ProcessRecord: long lastCpuTime> = $l49;

     label03:
        $i46 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        r1.<com.android.server.am.ProcessRecord: int setRawAdj> = $i46;

     label04:
        $i7 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i4 = r1.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i7 == $i4 goto label05;

        $i38 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i40 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $z8 = staticinvoke <android.os.Process: boolean setOomAdj(int,int)>($i38, $i40);

        if $z8 == 0 goto label16;

        $i42 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        r1.<com.android.server.am.ProcessRecord: int setAdj> = $i42;

     label05:
        $i9 = r1.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        $i6 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if $i9 == $i6 goto label06;

        $i33 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        r1.<com.android.server.am.ProcessRecord: int setSchedGroup> = $i33;

        $r10 = r1.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill>;

        if $r10 == null goto label17;

        $i39 = r1.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i39 != 0 goto label17;

        $r13 = r1.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r1, $r13);

        z3 = 0;

     label06:
        $i11 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        $i8 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i11 == $i8 goto label08;

        $i30 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        r1.<com.android.server.am.ProcessRecord: int repProcState> = $i30;

        if z2 != 0 goto label08;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 == null goto label08;

     label07:
        $r11 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $i34 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        interfaceinvoke $r11.<android.app.IApplicationThread: void setProcessState(int)>($i34);

     label08:
        $i10 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i10 < 0 goto label09;

        $i22 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $i18 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        $z6 = staticinvoke <com.android.server.am.ProcessList: boolean procStatesDifferForMem(int,int)>($i22, $i18);

        if $z6 == 0 goto label26;

     label09:
        r1.<com.android.server.am.ProcessRecord: long lastStateTime> = l0;

        $i12 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $z5 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        $l15 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,long)>($i12, 1, $z5, l0);

        r1.<com.android.server.am.ProcessRecord: long nextPssTime> = $l15;

     label10:
        $i13 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        $i16 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i13 == $i16 goto label12;

        $i14 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        r1.<com.android.server.am.ProcessRecord: int setProcState> = $i14;

        $i19 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i19 < 9 goto label11;

        r1.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle> = 0;

     label11:
        if z1 != 0 goto label28;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $i17 = virtualinvoke $r8.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void setProcessTrackerState(com.android.server.am.ProcessRecord,int,long)>(r1, $i17, l0);

     label12:
        return z3;

     label13:
        $r21 := @caughtexception;

        r7 = $r21;

     label14:
        exitmonitor r6;

     label15:
        throw r7;

     label16:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setting oom adj of ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i43 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $r14 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        z3 = 0;

        goto label05;

     label17:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label18:
        $i36 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i37 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        staticinvoke <android.os.Process: void setProcessGroup(int,int)>($i36, $i37);

     label19:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        i2 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i35 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if $i35 > 0 goto label25;

        z4 = 1;

     label20:
        staticinvoke <android.os.Process: boolean setSwappiness(int,boolean)>(i2, z4);

        goto label06;

     label21:
        $r27 := @caughtexception;

        r5 = $r27;

     label22:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed setting process group of ");

        $i51 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i50 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r30);

        virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();

     label23:
        goto label19;

     label24:
        $r22 := @caughtexception;

        r4 = $r22;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label25:
        z4 = 0;

        goto label20;

     label26:
        $l20 = r1.<com.android.server.am.ProcessRecord: long nextPssTime>;

        $b21 = l0 cmp $l20;

        if $b21 > 0 goto label27;

        $l29 = r1.<com.android.server.am.ProcessRecord: long lastPssTime>;

        $l28 = 1800000L + $l29;

        $b27 = l0 cmp $l28;

        if $b27 <= 0 goto label10;

        $l26 = r1.<com.android.server.am.ProcessRecord: long lastStateTime>;

        $l32 = 15000L + $l26;

        $b31 = l0 cmp $l32;

        if $b31 <= 0 goto label10;

     label27:
        $i25 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestPssLocked(com.android.server.am.ProcessRecord,int)>(r1, $i25);

        $i23 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $z7 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        $l24 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,long)>($i23, 0, $z7, l0);

        r1.<com.android.server.am.ProcessRecord: long nextPssTime> = $l24;

        goto label10;

     label28:
        r1.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 1;

        return z3;

     label29:
        $r23 := @caughtexception;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch android.os.RemoteException from label07 to label08 with label29;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Exception from label18 to label19 with label21;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    private int applyUserId(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i1, i0);

        return $i2;
    }

    private final boolean attachApplicationLocked(android.app.IApplicationThread, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1, $r32;
        int i0, i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i15;
        com.android.server.am.ProcessRecord r2;
        java.lang.String r3, r12, r13, r15, r16, r19, $r43, $r61, $r67, $r69, $r71, $r72, $r77, $r80, $r81, $r91;
        com.android.server.am.ActivityManagerService$AppDeathRecipient r4, r100;
        com.android.server.am.ProcessStatsService r6, r8, r11;
        java.lang.Object[] r7;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, $z16, $z19, $z20, $z21, $z22, $z23;
        java.util.List r9;
        java.lang.Exception r10, r26, $r93, $r94, $r95, $r96, $r97, $r98;
        android.os.ParcelFileDescriptor r14;
        com.android.server.am.BackupRecord r17, $r51, $r52, $r58, $r59, $r62, $r65, $r66, $r73, $r74;
        android.content.pm.ApplicationInfo r18, $r39, $r40, $r42, $r53, $r56, $r57, $r60, $r68, $r78;
        android.os.Bundle r20, $r47;
        android.app.IInstrumentationWatcher r21;
        android.content.res.CompatibilityInfo r22, $r49, $r64;
        android.content.ComponentName r23, $r41, $r70;
        android.content.res.Configuration r24, $r50, r102;
        android.app.IUiAutomationConnection r25;
        long l2;
        com.android.server.am.ActivityStackSupervisor r29;
        java.lang.Throwable r33, $r85;
        android.util.SparseArray r34, $r83;
        java.lang.Integer $r35, $r36;
        android.os.IBinder $r38;
        android.os.Handler $r44;
        com.android.server.am.CoreSettingsObserver $r45;
        java.util.HashMap $r46;
        java.util.ArrayList $r54, $r55;
        com.android.server.am.ActiveServices $r63;
        java.lang.StringBuilder $r75, $r76, $r86, $r87, $r88, $r89, $r90, r99, r101;
        java.lang.Object $r84;
        android.os.RemoteException $r92;
        android.os.IBinder$DeathRecipient r103, r104;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        $i3 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 == $i3 goto label07;

        if i0 < 0 goto label07;

        r34 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r34;

     label01:
        $r83 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r84 = virtualinvoke $r83.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ProcessRecord) $r84;

        exitmonitor r34;

     label02:
        if r2 != null goto label11;

        r99 = new java.lang.StringBuilder;

        specialinvoke r99.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No pending application record for pid ");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (IApplicationThread ");

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("); dropping process");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r91);

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30033, i0);

        if i0 <= 0 goto label08;

        $i15 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 == $i15 goto label08;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>(i0);

     label03:
        return 0;

     label04:
        $r85 := @caughtexception;

        r33 = $r85;

     label05:
        exitmonitor r34;

     label06:
        throw r33;

     label07:
        r2 = null;

        goto label02;

     label08:
        interfaceinvoke r1.<android.app.IApplicationThread: void scheduleExit()>();

     label09:
        goto label03;

     label10:
        $r96 := @caughtexception;

        goto label03;

     label11:
        $r32 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r32 == null goto label12;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r2, 1, 1);

     label12:
        r3 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label13:
        r100 = new com.android.server.am.ActivityManagerService$AppDeathRecipient;

        specialinvoke r100.<com.android.server.am.ActivityManagerService$AppDeathRecipient: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>(r0, r2, i0, r1);

        r4 = r100;

        $r38 = interfaceinvoke r1.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        r103 = (android.os.IBinder$DeathRecipient) r4;

        interfaceinvoke $r38.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r103, 0);

        r104 = (android.os.IBinder$DeathRecipient) r4;

        r2.<com.android.server.am.ProcessRecord: android.os.IBinder$DeathRecipient deathRecipient> = r104;

     label14:
        r7 = newarray (java.lang.Object)[3];

        $i5 = r2.<com.android.server.am.ProcessRecord: int userId>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r7[0] = $r35;

        $i4 = r2.<com.android.server.am.ProcessRecord: int pid>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r7[1] = $r36;

        $r43 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r7[2] = $r43;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30010, r7);

        r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void makeActive(android.app.IApplicationThread,com.android.server.am.ProcessStatsService)>(r1, r8);

        r2.<com.android.server.am.ProcessRecord: int setAdj> = -100;

        r2.<com.android.server.am.ProcessRecord: int curAdj> = -100;

        r2.<com.android.server.am.ProcessRecord: int setSchedGroup> = -1;

        r2.<com.android.server.am.ProcessRecord: int curSchedGroup> = -1;

        r2.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        r2.<com.android.server.am.ProcessRecord: boolean foregroundServices> = 0;

        r2.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 0;

        r2.<com.android.server.am.ProcessRecord: boolean debugging> = 0;

        r2.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        $r44 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r44.<android.os.Handler: void removeMessages(int,java.lang.Object)>(20, r2);

        $z16 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z16 != 0 goto label15;

        $r78 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z20 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>($r78);

        if $z20 == 0 goto label63;

     label15:
        z0 = 1;

     label16:
        if z0 == 0 goto label64;

        r9 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)>(r2);

     label17:
        if z0 != 0 goto label18;

        r101 = new java.lang.StringBuilder;

        specialinvoke r101.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Launching preboot mode app: ");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r77);

     label18:
        r12 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

     label19:
        i1 = 0;

        if r12 == null goto label25;

     label20:
        $r80 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        z1 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>(r3);

     label21:
        i1 = 0;

        if z1 == 0 goto label25;

     label22:
        $z22 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger>;

        if $z22 == 0 goto label65;

     label23:
        i1 = 2;

     label24:
        r2.<com.android.server.am.ProcessRecord: boolean debugging> = 1;

        $z21 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        if $z21 == 0 goto label25;

        $r81 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = $r81;

        $z23 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = $z23;

     label25:
        r13 = r2.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile>;

        r15 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

     label26:
        r14 = null;

        z3 = 0;

        if r15 == null goto label30;

     label27:
        $r71 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        z2 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(r3);

     label28:
        r14 = null;

        z3 = 0;

        if z2 == 0 goto label30;

     label29:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = r2;

        r13 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        r14 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        z3 = r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler>;

     label30:
        r16 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

     label31:
        z4 = 0;

        if r16 == null goto label35;

     label32:
        $r72 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        z5 = virtualinvoke $r72.<java.lang.String: boolean equals(java.lang.Object)>(r3);

     label33:
        z4 = 0;

        if z5 == 0 goto label35;

        z4 = 1;

     label34:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp> = null;

     label35:
        r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

     label36:
        z7 = 0;

        if r17 == null goto label41;

     label37:
        $r67 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName>;

        z6 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(r3);

     label38:
        z7 = 0;

        if z6 == 0 goto label41;

     label39:
        $r66 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $i10 = $r66.<com.android.server.am.BackupRecord: int backupMode>;

        if $i10 == 2 goto label79;

        $r74 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $i12 = $r74.<com.android.server.am.BackupRecord: int backupMode>;

        if $i12 == 3 goto label79;

        $r73 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $i11 = $r73.<com.android.server.am.BackupRecord: int backupMode>;

        if $i11 != 1 goto label66;

     label40:
        goto label79;

     label41:
        $r39 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo>;

        if $r39 == null goto label67;

        $r68 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo>;

        r19 = $r68.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label42:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>(r19);

        $r41 = r2.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r41 == null goto label43;

        $r70 = r2.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r69 = virtualinvoke $r70.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r69);

     label43:
        $r42 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo>;

        if $r42 == null goto label69;

        r18 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo>;

     label44:
        r22 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r18);

        r2.<com.android.server.am.ProcessRecord: android.content.res.CompatibilityInfo compat> = r22;

     label45:
        if r14 == null goto label47;

     label46:
        r14 = virtualinvoke r14.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

     label47:
        r23 = r2.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        r20 = r2.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments>;

        r21 = r2.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        r25 = r2.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

     label48:
        if z7 != 0 goto label80;

        if z0 != 0 goto label71;

        goto label80;

     label49:
        z8 = r2.<com.android.server.am.ProcessRecord: boolean persistent>;

        r102 = new android.content.res.Configuration;

        $r50 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke r102.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r50);

        r24 = r102;

        $r49 = r2.<com.android.server.am.ProcessRecord: android.content.res.CompatibilityInfo compat>;

        $r46 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.HashMap getCommonServicesLocked()>();

        $r45 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CoreSettingsObserver mCoreSettingsObserver>;

        $r47 = virtualinvoke $r45.<com.android.server.am.CoreSettingsObserver: android.os.Bundle getCoreSettingsLocked()>();

        interfaceinvoke r1.<android.app.IApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.ParcelFileDescriptor,boolean,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>(r3, r18, r9, r23, r13, r14, z3, r20, r21, r25, i1, z4, z9, z8, r24, $r49, $r46, $r47);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r2, 0, null);

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r2.<com.android.server.am.ProcessRecord: long lastLowMemory> = l2;

        r2.<com.android.server.am.ProcessRecord: long lastRequestedGc> = l2;

     label50:
        $r54 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r54.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        $r55 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r55.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        z10 = 0;

        z11 = 0;

        if z0 == 0 goto label53;

     label51:
        r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z15 = r0.<com.android.server.am.ActivityManagerService: boolean mHeadless>;

        z14 = virtualinvoke r29.<com.android.server.am.ActivityStackSupervisor: boolean attachApplicationLocked(com.android.server.am.ProcessRecord,boolean)>(r2, z15);

     label52:
        z10 = 0;

        z11 = 0;

        if z14 == 0 goto label53;

        z11 = 1;

     label53:
        if z10 != 0 goto label56;

     label54:
        $r63 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        z12 = virtualinvoke $r63.<com.android.server.am.ActiveServices: boolean attachApplicationLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r2, r3);

     label55:
        z11 = z11 | z12;

     label56:
        if z10 != 0 goto label59;

        $z19 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z19 == 0 goto label59;

     label57:
        z13 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>(r2);

     label58:
        z11 = z11 | z13;

     label59:
        if z10 != 0 goto label61;

        $r52 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r52 == null goto label61;

        $r51 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r53 = $r51.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $i8 = $r53.<android.content.pm.ApplicationInfo: int uid>;

        $i7 = r2.<com.android.server.am.ProcessRecord: int uid>;

        if $i8 != $i7 goto label61;

        $r62 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r60 = $r62.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r61 = $r60.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r61);

     label60:
        $r58 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r57 = $r58.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r59 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r56 = $r59.<com.android.server.am.BackupRecord: android.content.pm.ApplicationInfo appInfo>;

        $r64 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r56);

        $r65 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $i9 = $r65.<com.android.server.am.BackupRecord: int backupMode>;

        interfaceinvoke r1.<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>($r57, $r64, $i9);

     label61:
        if z10 == 0 goto label77;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r2, 0, 1);

        return 0;

     label62:
        $r92 := @caughtexception;

        r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>(r6);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r2, "link fail", r3);

        return 0;

     label63:
        z0 = 0;

        goto label16;

     label64:
        r9 = null;

        goto label17;

     label65:
        i1 = 1;

        goto label24;

     label66:
        z7 = 0;

        goto label41;

     label67:
        $r40 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r19 = $r40.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label68:
        goto label42;

     label69:
        r18 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

     label70:
        goto label44;

     label71:
        z9 = 0;

        goto label49;

     label72:
        $r93 := @caughtexception;

        r10 = $r93;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown during bind!", r10);

        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>(r11);

        virtualinvoke r2.<com.android.server.am.ProcessRecord: void unlinkDeathRecipient()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r2, "bind fail", r3);

        return 0;

     label73:
        $r98 := @caughtexception;

        z10 = 1;

        z11 = 0;

        goto label53;

     label74:
        $r95 := @caughtexception;

        z10 = 1;

        goto label56;

     label75:
        $r97 := @caughtexception;

        z10 = 1;

        goto label59;

     label76:
        $r94 := @caughtexception;

        r26 = $r94;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Exception scheduling backup agent creation: ");

        virtualinvoke r26.<java.lang.Exception: void printStackTrace()>();

        goto label61;

     label77:
        if z11 != 0 goto label78;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label78:
        return 1;

     label79:
        z7 = 1;

        goto label41;

     label80:
        z9 = 1;

        goto label49;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Exception from label08 to label09 with label10;
        catch android.os.RemoteException from label13 to label14 with label62;
        catch java.lang.Exception from label18 to label19 with label72;
        catch java.lang.Exception from label20 to label21 with label72;
        catch java.lang.Exception from label22 to label23 with label72;
        catch java.lang.Exception from label24 to label25 with label72;
        catch java.lang.Exception from label25 to label26 with label72;
        catch java.lang.Exception from label27 to label28 with label72;
        catch java.lang.Exception from label29 to label30 with label72;
        catch java.lang.Exception from label30 to label31 with label72;
        catch java.lang.Exception from label32 to label33 with label72;
        catch java.lang.Exception from label34 to label35 with label72;
        catch java.lang.Exception from label35 to label36 with label72;
        catch java.lang.Exception from label37 to label38 with label72;
        catch java.lang.Exception from label39 to label40 with label72;
        catch java.lang.Exception from label41 to label42 with label72;
        catch java.lang.Exception from label42 to label43 with label72;
        catch java.lang.Exception from label43 to label44 with label72;
        catch java.lang.Exception from label44 to label45 with label72;
        catch java.lang.Exception from label46 to label47 with label72;
        catch java.lang.Exception from label47 to label48 with label72;
        catch java.lang.Exception from label49 to label50 with label72;
        catch java.lang.Exception from label51 to label52 with label73;
        catch java.lang.Exception from label54 to label55 with label74;
        catch java.lang.Exception from label57 to label58 with label75;
        catch java.lang.Exception from label60 to label61 with label76;
        catch java.lang.Exception from label67 to label68 with label72;
        catch java.lang.Exception from label69 to label70 with label72;
    }

    private final int broadcastIntentLocked(com.android.server.am.ProcessRecord, java.lang.String, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, int, boolean, boolean, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r4, r6, r8, r10, r12, r25, r27, r28, r31, r38, r40, r43, r44, r49, r51, $r52, $r53, $r54, $r55, $r61, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r79, $r80, $r83, $r84, $r85, $r86, $r95, $r96, $r97, $r113, $r122, $r131, $r138, $r139, $r148, $r149, $r150, $r151, $r152, $r153, $r157, $r162, $r166, $r170, $r174, $r175, $r176, $r179, $r182, $r184, $r190, $r200, $r207, $r210;
        android.content.Intent r3, r9, r35, r36, $r106, $r119, r215, r234, r235;
        android.content.IIntentReceiver r5;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i36, $i37, $i38, $i41, $i45;
        android.os.Bundle r7, r39;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11, $z12, $z13, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z23, $z27, $z28, $z29, $z30, $z31, $z33, $z35, $z36, $z37, $z38, $z39;
        android.net.Uri r11, r20, r46;
        int[] r13;
        java.util.List r14, r15;
        android.content.ComponentName r16, $r93, $r163, $r177, $r181;
        com.android.server.am.BroadcastQueue r17, r26;
        java.lang.Object r18, $r87, $r88, $r91, $r107, $r108, $r109, $r118, $r121, $r123, $r187;
        com.android.server.am.BroadcastRecord r19, r30, r236, r238;
        java.lang.String[] r21, r22, r41, $r156;
        android.content.pm.ResolveInfo r23, $r90;
        com.android.server.am.BroadcastFilter r24;
        android.util.ArrayMap r29, r33, r232;
        java.util.ArrayList r32, r34, r233, r237;
        android.net.ProxyProperties r37;
        android.os.RemoteException r42, $r214;
        com.android.internal.os.BatteryStatsImpl r45;
        java.lang.Throwable r47, $r213, r239;
        java.lang.StringBuilder $r56, $r57, $r58, $r59, $r60, $r62, $r65, $r66, $r67, $r68, $r69, $r110, $r111, $r112, $r116, $r117, $r124, $r125, $r126, $r127, $r128, $r129, $r132, $r133, $r134, $r135, $r159, $r161, $r164, $r165, $r168, $r169, $r185, $r191, $r192, $r193, $r194, $r197, $r198, $r199, $r201, $r202, $r203, $r204, $r205, $r206, $r208, $r209, $r212, r216, r217, r218, r220, r222, r224, r226, r228, r230;
        android.content.pm.ActivityInfo $r89;
        com.android.server.IntentResolver $r92;
        android.util.SparseArray $r94, $r100, $r120, $r188;
        android.os.Handler $r140, $r141, $r143, $r144;
        android.os.Message $r142;
        android.os.Parcelable $r146;
        com.android.server.AppOpsService $r147, $r155;
        com.android.server.am.CompatModePackages $r154;
        com.android.server.am.BatteryStatsService $r158;
        android.content.pm.ApplicationInfo $r167, $r178, $r183;
        android.content.pm.IPackageManager $r173;
        java.lang.SecurityException r219, r221, r223, r225, r227, r229;
        java.lang.IllegalArgumentException r231;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.content.IIntentReceiver;

        i0 := @parameter5: int;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: android.os.Bundle;

        r8 := @parameter8: java.lang.String;

        i1 := @parameter9: int;

        z0 := @parameter10: boolean;

        z1 := @parameter11: boolean;

        i2 := @parameter12: int;

        i3 := @parameter13: int;

        i4 := @parameter14: int;

        r215 = new android.content.Intent;

        specialinvoke r215.<android.content.Intent: void <init>(android.content.Intent)>(r3);

        r9 = r215;

        virtualinvoke r9.<android.content.Intent: android.content.Intent addFlags(int)>(16);

        if r5 == null goto label01;

        if z0 != 0 goto label01;

        r216 = new java.lang.StringBuilder;

        specialinvoke r216.<java.lang.StringBuilder: void <init>()>();

        $r212 = virtualinvoke r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast ");

        $r208 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r209 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not ordered but result callback requested!");

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r210);

     label01:
        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i2, i3, i4, 1, 0, "broadcast", r2);

        if i6 == -1 goto label03;

        $r188 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r187 = virtualinvoke $r188.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        if $r187 != null goto label03;

        if i3 != 1000 goto label02;

        $i41 = virtualinvoke r9.<android.content.Intent: int getFlags()>();

        $i45 = 33554432 & $i41;

        if $i45 != 0 goto label03;

     label02:
        r217 = new java.lang.StringBuilder;

        specialinvoke r217.<java.lang.StringBuilder: void <init>()>();

        $r185 = virtualinvoke r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping broadcast of ");

        $r194 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r193 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        $r192 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r191 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        $r190 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r190);

        return 0;

     label03:
        i5 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        if i5 == 1000 goto label04;

        if i5 == 1001 goto label04;

        if i5 == 2000 goto label04;

        if i5 == 1002 goto label04;

        if i3 != 0 goto label13;

     label04:
        $r55 = "android.intent.action.UID_REMOVED";

        $r54 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        z2 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>($r54);

        $r52 = "android.intent.action.PACKAGE_REMOVED";

        $r53 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z9 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>($r53);

        if $z9 != 0 goto label05;

        $r150 = "android.intent.action.PACKAGE_CHANGED";

        $r149 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z27 = virtualinvoke $r150.<java.lang.String: boolean equals(java.lang.Object)>($r149);

        if $z27 != 0 goto label05;

        $r148 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        $r153 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z28 = virtualinvoke $r148.<java.lang.String: boolean equals(java.lang.Object)>($r153);

        if $z28 != 0 goto label05;

        if z2 == 0 goto label36;

     label05:
        $i24 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.BROADCAST_PACKAGE_REMOVED", i2, i3, -1, 1);

        if $i24 != 0 goto label35;

        if z2 == 0 goto label26;

        r39 = virtualinvoke r9.<android.content.Intent: android.os.Bundle getExtras()>();

        if r39 == null goto label22;

        i23 = virtualinvoke r39.<android.os.Bundle: int getInt(java.lang.String)>("android.intent.extra.UID");

     label06:
        if i23 < 0 goto label09;

        $r158 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r45 = virtualinvoke $r158.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r45;

     label07:
        virtualinvoke r45.<com.android.internal.os.BatteryStatsImpl: void removeUidStatsLocked(int)>(i23);

        exitmonitor r45;

     label08:
        $r147 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        virtualinvoke $r147.<com.android.server.AppOpsService: void uidRemoved(int)>(i23);

     label09:
        $r76 = "android.intent.action.TIMEZONE_CHANGED";

        $r75 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z13 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>($r75);

        if $z13 == 0 goto label10;

        $r140 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r140.<android.os.Handler: boolean sendEmptyMessage(int)>(13);

     label10:
        $r77 = "android.intent.action.CLEAR_DNS_CACHE";

        $r70 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z10 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>($r70);

        if $z10 == 0 goto label11;

        $r141 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r141.<android.os.Handler: boolean sendEmptyMessage(int)>(28);

     label11:
        $r72 = "android.intent.action.PROXY_CHANGE";

        $r71 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z11 = virtualinvoke $r72.<java.lang.String: boolean equals(java.lang.Object)>($r71);

        if $z11 == 0 goto label12;

        $r146 = virtualinvoke r9.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("proxy");

        r37 = (android.net.ProxyProperties) $r146;

        $r144 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r143 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r142 = virtualinvoke $r143.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(29, r37);

        virtualinvoke $r144.<android.os.Handler: boolean sendMessage(android.os.Message)>($r142);

     label12:
        if z1 == 0 goto label47;

        $i33 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>("android.permission.BROADCAST_STICKY", i2, i3);

        if $i33 == 0 goto label37;

        r218 = new java.lang.StringBuilder;

        specialinvoke r218.<java.lang.StringBuilder: void <init>()>();

        $r129 = virtualinvoke r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: broadcastIntent() requesting a sticky broadcast from pid=");

        $r128 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r126 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r125 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r124 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_STICKY");

        r38 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r38);

        r219 = new java.lang.SecurityException;

        specialinvoke r219.<java.lang.SecurityException: void <init>(java.lang.String)>(r38);

        throw r219;

     label13:
        if r1 == null goto label14;

        $z39 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z39 != 0 goto label04;

     label14:
        $r173 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r174 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z36 = interfaceinvoke $r173.<android.content.pm.IPackageManager: boolean isProtectedBroadcast(java.lang.String)>($r174);

        if $z36 == 0 goto label16;

        r220 = new java.lang.StringBuilder;

        specialinvoke r220.<java.lang.StringBuilder: void <init>()>();

        $r206 = virtualinvoke r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        $r207 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $r204 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r207);

        $r205 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $r202 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r203 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r201 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        r49 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r49);

        r221 = new java.lang.SecurityException;

        specialinvoke r221.<java.lang.SecurityException: void <init>(java.lang.String)>(r49);

        throw r221;

     label15:
        $r214 := @caughtexception;

        r42 = $r214;

        r239 = (java.lang.Throwable) r42;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Remote exception", r239);

        return 0;

     label16:
        $r175 = "android.appwidget.action.APPWIDGET_CONFIGURE";

        $r176 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z37 = virtualinvoke $r175.<java.lang.String: boolean equals(java.lang.Object)>($r176);

        if $z37 == 0 goto label04;

     label17:
        if r1 != null goto label19;

     label18:
        r222 = new java.lang.StringBuilder;

        specialinvoke r222.<java.lang.StringBuilder: void <init>()>();

        $r199 = virtualinvoke r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        $r200 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $r197 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r200);

        $r198 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from unknown caller.");

        r44 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r44);

        r223 = new java.lang.SecurityException;

        specialinvoke r223.<java.lang.SecurityException: void <init>(java.lang.String)>(r44);

        throw r223;

     label19:
        $r177 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r177 == null goto label20;

        $r181 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r182 = virtualinvoke $r181.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r183 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r184 = $r183.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z38 = virtualinvoke $r182.<java.lang.String: boolean equals(java.lang.Object)>($r184);

        if $z38 != 0 goto label04;

        r224 = new java.lang.StringBuilder;

        specialinvoke r224.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: not allowed to send broadcast ");

        $r162 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $r161 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r162);

        $r164 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r163 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r166 = virtualinvoke $r163.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166);

        $r168 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r167 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r170 = $r167.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r170);

        r51 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r51);

        r225 = new java.lang.SecurityException;

        specialinvoke r225.<java.lang.SecurityException: void <init>(java.lang.String)>(r51);

        throw r225;

     label20:
        $r178 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r179 = $r178.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r9.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r179);

     label21:
        goto label04;

     label22:
        i23 = -1;

        goto label06;

     label23:
        $r213 := @caughtexception;

        r47 = $r213;

     label24:
        exitmonitor r45;

     label25:
        throw r47;

     label26:
        $r74 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        $r73 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z12 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>($r73);

        if $z12 == 0 goto label29;

        r41 = virtualinvoke r9.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

        if r41 == null goto label09;

        $i38 = lengthof r41;

        if $i38 <= 0 goto label09;

        i21 = lengthof r41;

        i20 = 0;

     label27:
        if i20 >= i21 goto label28;

        $r157 = r41[i20];

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r157, -1, 0, 1, 1, 0, 0, i6, "storage unmount");

        i20 = i20 + 1;

        goto label27;

     label28:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void sendPackageBroadcastLocked(int,java.lang.String[],int)>(1, r41, i6);

        goto label09;

     label29:
        r11 = virtualinvoke r9.<android.content.Intent: android.net.Uri getData()>();

        if r11 == null goto label09;

        r12 = virtualinvoke r11.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if r12 == null goto label09;

        $r139 = "android.intent.action.PACKAGE_REMOVED";

        $r138 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        z3 = virtualinvoke $r139.<java.lang.String: boolean equals(java.lang.Object)>($r138);

        if z3 == 0 goto label33;

        $z33 = virtualinvoke r9.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        if $z33 != 0 goto label33;

        z4 = 1;

     label30:
        $z31 = virtualinvoke r9.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.DONT_KILL_APP", 0);

        if $z31 != 0 goto label32;

        $i37 = virtualinvoke r9.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        i22 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i37);

        if z3 == 0 goto label34;

        r40 = "pkg removed";

     label31:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r12, i22, 0, 1, 1, 0, z4, i6, r40);

     label32:
        if z3 == 0 goto label09;

        $r156 = newarray (java.lang.String)[1];

        $r156[0] = r12;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void sendPackageBroadcastLocked(int,java.lang.String[],int)>(0, $r156, i6);

        $z30 = virtualinvoke r9.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        if $z30 != 0 goto label09;

        $r155 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        $i36 = virtualinvoke r9.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.UID", -1);

        virtualinvoke $r155.<com.android.server.AppOpsService: void packageRemoved(int,java.lang.String)>($i36, r12);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionsForPackageLocked(java.lang.String,int,boolean)>(r12, i6, 1);

        goto label09;

     label33:
        z4 = 0;

        goto label30;

     label34:
        r40 = "pkg changed";

        goto label31;

     label35:
        r226 = new java.lang.StringBuilder;

        specialinvoke r226.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r61 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $r60 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" broadcast from ");

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r69 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_PACKAGE_REMOVED");

        r10 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r10);

        r227 = new java.lang.SecurityException;

        specialinvoke r227.<java.lang.SecurityException: void <init>(java.lang.String)>(r10);

        throw r227;

     label36:
        $r152 = "android.intent.action.PACKAGE_ADDED";

        $r151 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z29 = virtualinvoke $r152.<java.lang.String: boolean equals(java.lang.Object)>($r151);

        if $z29 == 0 goto label09;

        r46 = virtualinvoke r9.<android.content.Intent: android.net.Uri getData()>();

        if r46 == null goto label09;

        r43 = virtualinvoke r46.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if r43 == null goto label09;

        $r154 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $z35 = virtualinvoke r9.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        virtualinvoke $r154.<com.android.server.am.CompatModePackages: void handlePackageAddedLocked(java.lang.String,boolean)>(r43, $z35);

        goto label09;

     label37:
        if r8 == null goto label38;

        r228 = new java.lang.StringBuilder;

        specialinvoke r228.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t broadcast sticky intent ");

        $r134 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r133 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and enforce permission ");

        $r132 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r131 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r131);

        return -1;

     label38:
        $r93 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r93 == null goto label39;

        r229 = new java.lang.SecurityException;

        specialinvoke r229.<java.lang.SecurityException: void <init>(java.lang.String)>("Sticky broadcasts can\'t target a specific component");

        throw r229;

     label39:
        if i6 == -1 goto label42;

        $r120 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r121 = virtualinvoke $r120.<android.util.SparseArray: java.lang.Object get(int)>(-1);

        r33 = (android.util.ArrayMap) $r121;

        if r33 == null goto label42;

        $r122 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $r123 = virtualinvoke r33.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r122);

        r34 = (java.util.ArrayList) $r123;

        if r34 == null goto label42;

        i17 = virtualinvoke r34.<java.util.ArrayList: int size()>();

        i19 = 0;

     label40:
        if i19 >= i17 goto label42;

        $r118 = virtualinvoke r34.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        $r119 = (android.content.Intent) $r118;

        $z23 = virtualinvoke r9.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r119);

        if $z23 == 0 goto label41;

        r231 = new java.lang.IllegalArgumentException;

        r230 = new java.lang.StringBuilder;

        specialinvoke r230.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sticky broadcast ");

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r110 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conflicts with existing global broadcast");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r231.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r113);

        throw r231;

     label41:
        i19 = i19 + 1;

        goto label40;

     label42:
        $r94 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r108 = virtualinvoke $r94.<android.util.SparseArray: java.lang.Object get(int)>(i6);

        r29 = (android.util.ArrayMap) $r108;

        if r29 != null goto label43;

        r232 = new android.util.ArrayMap;

        specialinvoke r232.<android.util.ArrayMap: void <init>()>();

        r29 = r232;

        $r100 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r100.<android.util.SparseArray: void put(int,java.lang.Object)>(i6, r29);

     label43:
        r28 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $r109 = virtualinvoke r29.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r28);

        r32 = (java.util.ArrayList) $r109;

        if r32 != null goto label44;

        r233 = new java.util.ArrayList;

        specialinvoke r233.<java.util.ArrayList: void <init>()>();

        r32 = r233;

        r31 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r29.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r32);

     label44:
        i16 = virtualinvoke r32.<java.util.ArrayList: int size()>();

        i18 = 0;

     label45:
        if i18 >= i16 goto label46;

        $r107 = virtualinvoke r32.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        $r106 = (android.content.Intent) $r107;

        $z21 = virtualinvoke r9.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r106);

        if $z21 == 0 goto label61;

        r234 = new android.content.Intent;

        specialinvoke r234.<android.content.Intent: void <init>(android.content.Intent)>(r9);

        r36 = r234;

        virtualinvoke r32.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i18, r36);

     label46:
        if i18 < i16 goto label47;

        r235 = new android.content.Intent;

        specialinvoke r235.<android.content.Intent: void <init>(android.content.Intent)>(r9);

        r35 = r235;

        virtualinvoke r32.<java.util.ArrayList: boolean add(java.lang.Object)>(r35);

     label47:
        if i6 != -1 goto label62;

        r13 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

     label48:
        $i26 = virtualinvoke r9.<android.content.Intent: int getFlags()>();

        i7 = 1073741824 & $i26;

        r14 = null;

        if i7 != 0 goto label49;

        r14 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List collectReceiverComponents(android.content.Intent,java.lang.String,int[])>(r9, r4, r13);

     label49:
        r16 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        r15 = null;

        if r16 != null goto label50;

        $r92 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        r15 = virtualinvoke $r92.<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r9, r4, 0, i6);

     label50:
        $i29 = virtualinvoke r9.<android.content.Intent: int getFlags()>();

        $i30 = 536870912 & $i29;

        if $i30 == 0 goto label63;

        z5 = 1;

     label51:
        if r15 == null goto label64;

        i9 = interfaceinvoke r15.<java.util.List: int size()>();

     label52:
        if z0 != 0 goto label55;

        if i9 <= 0 goto label55;

        r26 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r9);

        r236 = new com.android.server.am.BroadcastRecord;

        specialinvoke r236.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int)>(r26, r9, r1, r2, i2, i3, r4, r8, i1, r15, r5, i0, r6, r7, z0, z1, 0, i6);

        r30 = r236;

        if z5 == 0 goto label65;

        $z19 = virtualinvoke r26.<com.android.server.am.BroadcastQueue: boolean replaceParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r30);

        if $z19 == 0 goto label65;

        z8 = 1;

     label53:
        if z8 != 0 goto label54;

        virtualinvoke r26.<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r30);

        virtualinvoke r26.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

     label54:
        r15 = null;

        i9 = 0;

     label55:
        i8 = 0;

        if r14 == null goto label75;

        $r79 = "android.intent.action.PACKAGE_ADDED";

        $r80 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z15 = virtualinvoke $r79.<java.lang.String: boolean equals(java.lang.Object)>($r80);

        if $z15 != 0 goto label56;

        $r86 = "android.intent.action.PACKAGE_RESTARTED";

        $r85 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z18 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>($r85);

        if $z18 != 0 goto label56;

        $r84 = "android.intent.action.PACKAGE_DATA_CLEARED";

        $r97 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        $z20 = virtualinvoke $r84.<java.lang.String: boolean equals(java.lang.Object)>($r97);

        if $z20 == 0 goto label66;

     label56:
        r20 = virtualinvoke r9.<android.content.Intent: android.net.Uri getData()>();

        r21 = null;

        if r20 == null goto label57;

        r27 = virtualinvoke r20.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        r21 = null;

        if r27 == null goto label57;

        r21 = newarray (java.lang.String)[1];

        r21[0] = r27;

     label57:
        if r21 == null goto label68;

        $i32 = lengthof r21;

        if $i32 <= 0 goto label68;

        r22 = r21;

        i12 = lengthof r22;

        i15 = 0;

     label58:
        if i15 >= i12 goto label68;

        r25 = r22[i15];

        if r25 == null goto label67;

        i14 = interfaceinvoke r14.<java.util.List: int size()>();

        i13 = 0;

     label59:
        if i13 >= i14 goto label67;

        $r91 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(i13);

        $r90 = (android.content.pm.ResolveInfo) $r91;

        $r89 = $r90.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r83 = $r89.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z17 = virtualinvoke $r83.<java.lang.String: boolean equals(java.lang.Object)>(r25);

        if $z17 == 0 goto label60;

        interfaceinvoke r14.<java.util.List: java.lang.Object remove(int)>(i13);

        i13 = i13 + -1;

        i14 = i14 + -1;

     label60:
        i13 = i13 + 1;

        goto label59;

     label61:
        i18 = i18 + 1;

        goto label45;

     label62:
        r13 = newarray (int)[1];

        r13[0] = i6;

        goto label48;

     label63:
        z5 = 0;

        goto label51;

     label64:
        i9 = 0;

        goto label52;

     label65:
        z8 = 0;

        goto label53;

     label66:
        $r95 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        $r96 = virtualinvoke r9.<android.content.Intent: java.lang.String getAction()>();

        z7 = virtualinvoke $r95.<java.lang.String: boolean equals(java.lang.Object)>($r96);

        r21 = null;

        if z7 == 0 goto label57;

        r21 = virtualinvoke r9.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

        goto label57;

     label67:
        i15 = i15 + 1;

        goto label58;

     label68:
        if r14 == null goto label73;

        i10 = interfaceinvoke r14.<java.util.List: int size()>();

     label69:
        i11 = 0;

        r23 = null;

        r24 = null;

     label70:
        if i11 >= i10 goto label75;

        if i8 >= i9 goto label75;

        if r23 != null goto label71;

        $r87 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(i11);

        r23 = (android.content.pm.ResolveInfo) $r87;

     label71:
        if r24 != null goto label72;

        $r88 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i8);

        r24 = (com.android.server.am.BroadcastFilter) $r88;

     label72:
        $i27 = virtualinvoke r24.<com.android.server.am.BroadcastFilter: int getPriority()>();

        $i28 = r23.<android.content.pm.ResolveInfo: int priority>;

        if $i27 < $i28 goto label74;

        interfaceinvoke r14.<java.util.List: void add(int,java.lang.Object)>(i11, r24);

        i8 = i8 + 1;

        i11 = i11 + 1;

        i10 = i10 + 1;

        r24 = null;

        goto label70;

     label73:
        i10 = 0;

        goto label69;

     label74:
        i11 = i11 + 1;

        r23 = null;

        goto label70;

     label75:
        if i8 >= i9 goto label77;

        if r14 != null goto label76;

        r237 = new java.util.ArrayList;

        specialinvoke r237.<java.util.ArrayList: void <init>()>();

        r14 = r237;

     label76:
        r18 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i8);

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>(r18);

        i8 = i8 + 1;

        goto label75;

     label77:
        if r14 == null goto label78;

        $i31 = interfaceinvoke r14.<java.util.List: int size()>();

        if $i31 > 0 goto label79;

     label78:
        if r5 == null goto label81;

     label79:
        r17 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r9);

        r238 = new com.android.server.am.BroadcastRecord;

        specialinvoke r238.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int)>(r17, r9, r1, r2, i2, i3, r4, r8, i1, r14, r5, i0, r6, r7, z0, z1, 0, i6);

        r19 = r238;

        if z5 == 0 goto label82;

        $z16 = virtualinvoke r17.<com.android.server.am.BroadcastQueue: boolean replaceOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>(r19);

        if $z16 == 0 goto label82;

        z6 = 1;

     label80:
        if z6 != 0 goto label81;

        virtualinvoke r17.<com.android.server.am.BroadcastQueue: void enqueueOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>(r19);

        virtualinvoke r17.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

     label81:
        return 0;

     label82:
        z6 = 0;

        goto label80;

        catch java.lang.Throwable from label07 to label08 with label23;
        catch android.os.RemoteException from label14 to label15 with label15;
        catch android.os.RemoteException from label16 to label17 with label15;
        catch android.os.RemoteException from label18 to label19 with label15;
        catch android.os.RemoteException from label19 to label20 with label15;
        catch android.os.RemoteException from label20 to label21 with label15;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private final boolean canGcNowLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1, $z2;
        com.android.server.am.BroadcastQueue[] r1;
        int i0, i1, $i2, $i3;
        com.android.server.am.BroadcastQueue r2;
        com.android.server.am.ActivityStackSupervisor $r3;
        java.util.ArrayList $r4, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 = 0;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        $r4 = r2.<com.android.server.am.BroadcastQueue: java.util.ArrayList mParallelBroadcasts>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label2;

        $r5 = r2.<com.android.server.am.BroadcastQueue: java.util.ArrayList mOrderedBroadcasts>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i3 == 0 goto label3;

     label2:
        z0 = 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if z0 != 0 goto label6;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z1 != 0 goto label5;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z2 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesIdle()>();

        if $z2 == 0 goto label6;

     label5:
        return 1;

     label6:
        return 0;
    }

    private final java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ProviderInfo r1;
        java.lang.Object r2, $r14, $r47, $r49;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12;
        android.content.pm.PathPermission[] r3;
        android.util.ArrayMap r4;
        java.lang.StringBuilder r5, r7, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r29, $r31, $r32, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r43, r54, r55;
        java.lang.String r6, $r11, $r13, $r17, $r27, $r28, $r33, $r45, $r46, $r50, $r52;
        java.util.Iterator r8;
        android.content.pm.PathPermission r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.pm.ApplicationInfo $r10, $r12, $r39, $r51, $r53;
        android.util.SparseArray $r15;
        java.util.Set $r42;
        android.net.Uri $r44;
        java.util.Map$Entry $r48;
        com.android.server.am.ProcessRecord r56, r57;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ProviderInfo;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        if r2 == null goto label04;

        r56 = (com.android.server.am.ProcessRecord) r2;

        i0 = r56.<com.android.server.am.ProcessRecord: int pid>;

     label01:
        if r2 == null goto label05;

        r57 = (com.android.server.am.ProcessRecord) r2;

        i1 = r57.<com.android.server.am.ProcessRecord: int uid>;

     label02:
        $r11 = r1.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $r10 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r11, i0, i1, $i3, $z0);

        if $i4 != 0 goto label06;

     label03:
        return null;

     label04:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        goto label01;

     label05:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        goto label02;

     label06:
        $r13 = r1.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $r12 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        $i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r13, i0, i1, $i5, $z1);

        if $i6 == 0 goto label03;

        r3 = r1.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

        if r3 == null goto label08;

        i2 = lengthof r3;

     label07:
        if i2 <= 0 goto label08;

        i2 = i2 + -1;

        r9 = r3[i2];

        $r52 = virtualinvoke r9.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

        $r53 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r53.<android.content.pm.ApplicationInfo: int uid>;

        $z6 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        $i9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r52, i0, i1, $i10, $z6);

        if $i9 == 0 goto label03;

        $r50 = virtualinvoke r9.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

        $r51 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i12 = $r51.<android.content.pm.ApplicationInfo: int uid>;

        $z5 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        $i11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>($r50, i0, i1, $i12, $z5);

        if $i11 != 0 goto label07;

        return null;

     label08:
        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r14 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r4 = (android.util.ArrayMap) $r14;

        if r4 == null goto label10;

        $r42 = virtualinvoke r4.<android.util.ArrayMap: java.util.Set entrySet()>();

        r8 = interfaceinvoke $r42.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r47 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r48 = (java.util.Map$Entry) $r47;

        $r49 = interfaceinvoke $r48.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r44 = (android.net.Uri) $r49;

        $r45 = virtualinvoke $r44.<android.net.Uri: java.lang.String getAuthority()>();

        $r46 = r1.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $z3 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r46);

        if $z3 == 0 goto label09;

        return null;

     label10:
        $z2 = r1.<android.content.pm.ProviderInfo: boolean exported>;

        if $z2 != 0 goto label14;

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: opening provider ");

        $r33 = r1.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        r7 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        if r2 == null goto label13;

     label11:
        $r38 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") that is not exported from uid ");

        $r39 = r1.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r39.<android.content.pm.ApplicationInfo: int uid>;

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        r6 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r6);

        return r6;

     label13:
        r2 = "(null)";

        goto label11;

     label14:
        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: opening provider ");

        $r17 = r1.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r5 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        if r2 == null goto label16;

     label15:
        $r19 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") requires ");

        $r28 = r1.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r27 = r1.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        r6 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label16:
        r2 = "(null)";

        goto label15;
    }

    private final boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager, android.content.pm.ProviderInfo, android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.IPackageManager r1;
        android.content.pm.ProviderInfo r2;
        android.net.Uri r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, z1, z2, z3, $z4, $z5;
        android.content.pm.PathPermission[] r5;
        java.lang.String r6, r8, r9, $r11, $r12, $r13, $r14, $r15, $r16;
        android.content.pm.PathPermission r7;
        android.content.pm.ApplicationInfo $r10;
        android.os.RemoteException $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.IPackageManager;

        r2 := @parameter1: android.content.pm.ProviderInfo;

        r3 := @parameter2: android.net.Uri;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r10 = r2.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r10.<android.content.pm.ApplicationInfo: int uid>;

        if $i4 != i0 goto label01;

        return 1;

     label01:
        $z4 = r2.<android.content.pm.ProviderInfo: boolean exported>;

        if $z4 != 0 goto label02;

        return 0;

     label02:
        $i5 = i1 & 1;

        if $i5 != 0 goto label30;

        z0 = 1;

     label03:
        $i6 = i1 & 2;

        if $i6 != 0 goto label31;

        z1 = 1;

     label04:
        if z0 != 0 goto label07;

     label05:
        $r14 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r14 == null goto label07;

        $r15 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        $i9 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>($r15, i0);

        if $i9 != 0 goto label07;

     label06:
        z0 = 1;

     label07:
        if z1 != 0 goto label10;

     label08:
        $r13 = r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r13 == null goto label10;

        $r16 = r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        $i8 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>($r16, i0);

        if $i8 != 0 goto label10;

     label09:
        z1 = 1;

     label10:
        $r11 = r2.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r11 != null goto label32;

     label11:
        z2 = 1;

     label12:
        $r12 = r2.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r12 != null goto label33;

     label13:
        z3 = 1;

     label14:
        r5 = r2.<android.content.pm.ProviderInfo: android.content.pm.PathPermission[] pathPermissions>;

     label15:
        if r5 == null goto label36;

     label16:
        r6 = virtualinvoke r3.<android.net.Uri: java.lang.String getPath()>();

        i2 = lengthof r5;

     label17:
        goto label41;

     label18:
        i2 = i2 + -1;

     label19:
        r7 = r5[i2];

        $z5 = virtualinvoke r7.<android.content.pm.PathPermission: boolean match(java.lang.String)>(r6);

        if $z5 == 0 goto label41;

     label20:
        if z0 != 0 goto label25;

     label21:
        r8 = virtualinvoke r7.<android.content.pm.PathPermission: java.lang.String getReadPermission()>();

     label22:
        if r8 == null goto label25;

     label23:
        $i7 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>(r8, i0);

        if $i7 != 0 goto label34;

     label24:
        z0 = 1;

     label25:
        if z1 != 0 goto label41;

     label26:
        r9 = virtualinvoke r7.<android.content.pm.PathPermission: java.lang.String getWritePermission()>();

     label27:
        if r9 == null goto label41;

     label28:
        i3 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>(r9, i0);

     label29:
        if i3 != 0 goto label35;

        z1 = 1;

        goto label41;

     label30:
        z0 = 0;

        goto label03;

     label31:
        z1 = 0;

        goto label04;

     label32:
        z2 = 0;

        goto label12;

     label33:
        z3 = 0;

        goto label14;

     label34:
        z2 = 0;

        goto label25;

     label35:
        z3 = 0;

        goto label41;

     label36:
        if z2 == 0 goto label37;

        z0 = 1;

     label37:
        if z3 == 0 goto label38;

        z1 = 1;

     label38:
        if z0 == 0 goto label40;

        if z1 == 0 goto label40;

        return 1;

     label39:
        $r17 := @caughtexception;

        return 0;

     label40:
        return 0;

     label41:
        if i2 <= 0 goto label36;

        if z0 == 0 goto label18;

        if z1 != 0 goto label36;

        goto label18;

        catch android.os.RemoteException from label05 to label06 with label39;
        catch android.os.RemoteException from label08 to label09 with label39;
        catch android.os.RemoteException from label10 to label11 with label39;
        catch android.os.RemoteException from label12 to label13 with label39;
        catch android.os.RemoteException from label14 to label15 with label39;
        catch android.os.RemoteException from label16 to label17 with label39;
        catch android.os.RemoteException from label19 to label20 with label39;
        catch android.os.RemoteException from label21 to label22 with label39;
        catch android.os.RemoteException from label23 to label24 with label39;
        catch android.os.RemoteException from label26 to label27 with label39;
        catch android.os.RemoteException from label28 to label29 with label39;
    }

    private final boolean checkUriPermissionLocked(android.net.Uri, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, i1, i2, $i3;
        android.util.ArrayMap r2;
        com.android.server.am.UriPermission r3;
        android.util.SparseArray $r4;
        java.lang.Object $r5, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArrayMap) $r5;

        if r2 != null goto label3;

        return 0;

     label3:
        $r6 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.am.UriPermission) $r6;

        if r3 != null goto label4;

        return 0;

     label4:
        $i3 = virtualinvoke r3.<com.android.server.am.UriPermission: int getStrength(int)>(i1);

        if $i3 >= i2 goto label1;

        return 0;
    }

    private final void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r29, $r31, $r32, $r40, $r47;
        boolean z0, z1, z2, z3, $z6, $z7, $z8, $z10, $z11, $z14, $z17, $z18, $z19;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.util.SparseArray r2, $r30, $r36;
        java.lang.Throwable r3, $r70;
        com.android.server.am.ActivityManagerService$ProcessChangeItem r4;
        com.android.server.am.ContentProviderConnection r6;
        com.android.server.am.ContentProviderRecord r7, $r60;
        java.util.ArrayList $r8, $r9, $r19, $r23, $r28, $r43, $r45, $r46, $r50, $r51, $r59, $r62, $r63, $r64;
        android.app.Dialog $r10, $r11, $r14, $r65, $r66, $r67;
        com.android.server.am.ProcessStatsService $r12, $r15;
        com.android.server.am.ActiveServices $r13;
        android.util.ArrayMap $r16, $r17, $r69;
        android.util.ArraySet $r18, $r20, $r55;
        com.android.server.am.BackupRecord $r21, $r48;
        android.content.pm.ApplicationInfo $r22, $r57;
        android.os.Message $r24, $r38;
        android.os.Handler $r25, $r37, $r39, $r42;
        com.android.internal.app.ProcessMap $r26, $r34;
        java.lang.String $r27, $r33, $r41, $r54;
        java.lang.Object $r44, $r52, $r61, $r68;
        com.android.server.am.ReceiverList $r53;
        android.app.backup.IBackupManager $r56;
        android.os.IBinder $r58;
        android.os.RemoteException $r71;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        if i0 < 0 goto label01;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r8.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r11 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog>;

        if $r11 == null goto label02;

        $z17 = r1.<com.android.server.am.ProcessRecord: boolean forceCrashReport>;

        if $z17 != 0 goto label02;

        $r65 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog>;

        virtualinvoke $r65.<android.app.Dialog: void dismiss()>();

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog crashDialog> = null;

     label02:
        $r10 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        if $r10 == null goto label03;

        $r66 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        virtualinvoke $r66.<android.app.Dialog: void dismiss()>();

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog> = null;

     label03:
        $r14 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        if $r14 == null goto label04;

        $r67 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        virtualinvoke $r67.<android.app.Dialog: void dismiss()>();

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog> = null;

     label04:
        r1.<com.android.server.am.ProcessRecord: boolean crashing> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 0;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>($r15);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void unlinkDeathRecipient()>();

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void makeInactive(com.android.server.am.ProcessStatsService)>($r12);

        r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        r1.<com.android.server.am.ProcessRecord: boolean foregroundServices> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean hasShownUi> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean hasAboveClient> = 0;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r13.<com.android.server.am.ActiveServices: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>(r1, z1);

        z2 = 0;

        $r17 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i5 = virtualinvoke $r17.<android.util.ArrayMap: int size()>();

        i1 = -1 + $i5;

     label05:
        if i1 < 0 goto label11;

        $r69 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r68 = virtualinvoke $r69.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r7 = (com.android.server.am.ContentProviderRecord) $r68;

        $z19 = r1.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z19 != 0 goto label06;

        if z1 != 0 goto label10;

     label06:
        z3 = 1;

     label07:
        $z18 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(r1, r7, z3);

        if $z18 != 0 goto label08;

        if z3 == 0 goto label09;

     label08:
        z2 = 1;

     label09:
        r7.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider> = null;

        r7.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc> = null;

        i1 = i1 + -1;

        goto label05;

     label10:
        z3 = 0;

        goto label07;

     label11:
        $r16 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        virtualinvoke $r16.<android.util.ArrayMap: void clear()>();

        $z7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 0);

        if $z7 == 0 goto label12;

        z2 = 1;

     label12:
        $r19 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $z6 = virtualinvoke $r19.<java.util.ArrayList: boolean isEmpty()>();

        if $z6 != 0 goto label15;

        i4 = 0;

     label13:
        $r64 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i23 = virtualinvoke $r64.<java.util.ArrayList: int size()>();

        if i4 >= $i23 goto label14;

        $r62 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r61 = virtualinvoke $r62.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r6 = (com.android.server.am.ContentProviderConnection) $r61;

        $r60 = r6.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r59 = $r60.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r59.<java.util.ArrayList: boolean remove(java.lang.Object)>(r6);

        i4 = i4 + 1;

        goto label13;

     label14:
        $r63 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r63.<java.util.ArrayList: void clear()>();

     label15:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r1);

        $r18 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $i6 = virtualinvoke $r18.<android.util.ArraySet: int size()>();

        i2 = -1 + $i6;

     label16:
        if i2 < 0 goto label17;

        $r55 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        $r52 = virtualinvoke $r55.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r53 = (com.android.server.am.ReceiverList) $r52;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>($r53);

        i2 = i2 + -1;

        goto label16;

     label17:
        $r20 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r20.<android.util.ArraySet: void clear()>();

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r21 == null goto label19;

        $i22 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r48 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r47 = $r48.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        $i20 = $r47.<com.android.server.am.ProcessRecord: int pid>;

        if $i22 != $i20 goto label19;

     label18:
        $r58 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r56 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r58);

        $r57 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r54 = $r57.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke $r56.<android.app.backup.IBackupManager: void agentDisconnected(java.lang.String)>($r54);

     label19:
        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i7 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        i3 = -1 + $i7;

     label20:
        if i3 < 0 goto label22;

        $r43 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r44 = virtualinvoke $r43.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r44;

        $i21 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i18 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i21 != $i18 goto label21;

        $r51 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r51.<java.util.ArrayList: java.lang.Object remove(int)>(i3);

        $r50 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        virtualinvoke $r50.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label21:
        i3 = i3 + -1;

        goto label20;

     label22:
        $r25 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $i8 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r22 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i9 = $r22.<android.content.pm.ApplicationInfo: int uid>;

        $r24 = virtualinvoke $r25.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(32, $i8, $i9, null);

        virtualinvoke $r24.<android.os.Message: void sendToTarget()>();

        if z0 == 0 goto label24;

     label23:
        return;

     label24:
        $z8 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z8 == 0 goto label25;

        $z11 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z11 == 0 goto label29;

     label25:
        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r27 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i10 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r26.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r27, $i10);

        $r30 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i11 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r30.<android.util.SparseArray: void remove(int)>($i11);

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r29 != r1 goto label26;

        $r39 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r42 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $i17 = $r40.<com.android.server.am.ProcessRecord: int userId>;

        $r38 = virtualinvoke $r42.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(25, $i17, 0);

        virtualinvoke $r39.<android.os.Handler: boolean sendMessage(android.os.Message)>($r38);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

     label26:
        $r28 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r28.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 != $r31 goto label27;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess> = null;

     label27:
        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        if r1 != $r32 goto label28;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess> = null;

     label28:
        if z2 == 0 goto label30;

        $z10 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z10 != 0 goto label30;

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r33 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i16 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r34.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r33, $i16, r1);

        $r41 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r1, "restart", $r41);

        return;

     label29:
        $z14 = r1.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z14 != 0 goto label26;

        $r45 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i19 = virtualinvoke $r45.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if $i19 >= 0 goto label26;

        $r46 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r46.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        z2 = 1;

        goto label26;

     label30:
        $i15 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i15 <= 0 goto label23;

        $i13 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i12 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i13 == $i12 goto label23;

        r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r2;

     label31:
        $r36 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i14 = r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r36.<android.util.SparseArray: void remove(int)>($i14);

        $r37 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r37.<android.os.Handler: void removeMessages(int,java.lang.Object)>(20, r1);

        exitmonitor r2;

     label32:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>(0);

        return;

     label33:
        $r70 := @caughtexception;

        r3 = $r70;

     label34:
        exitmonitor r2;

     label35:
        throw r3;

     label36:
        $r71 := @caughtexception;

        goto label19;

        catch android.os.RemoteException from label18 to label19 with label36;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
    }

    private void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, $z2;
        android.content.Intent r2, r3, $r12, $r13;
        android.content.ComponentName r4;
        java.lang.String r5, $r25;
        java.util.ArrayList r6, $r10, $r15;
        android.util.ArrayMap r7, $r21;
        com.android.server.am.ProcessRecord r8, r11, $r17;
        android.util.SparseArray r9;
        com.android.server.am.ActiveServices $r14;
        com.android.internal.app.ProcessMap $r16;
        java.lang.Object $r18, $r19, $r20;
        java.lang.StringBuilder $r22, $r23, $r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        i0 := @parameter1: int;

        virtualinvoke r1.<com.android.server.am.TaskRecord: void disposeThumbnail()>();

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r10.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $i4 = i0 & 1;

        if $i4 == 0 goto label04;

        z0 = 1;

     label01:
        $r13 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r13 == null goto label05;

        r2 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

     label02:
        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(android.content.Intent)>(r2);

        r3 = $r12;

        r4 = virtualinvoke r3.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r4 != null goto label06;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Now component for base intent of task: ");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r25);

     label03:
        return;

     label04:
        z0 = 0;

        goto label01;

     label05:
        r2 = r1.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent>;

        goto label02;

     label06:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r14.<com.android.server.am.ActiveServices: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent)>(r1, r4, r3);

        if z0 == 0 goto label03;

        r5 = virtualinvoke r4.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r6 = $r15;

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        r7 = virtualinvoke $r16.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i1 = 0;

     label07:
        $i6 = virtualinvoke r7.<android.util.ArrayMap: int size()>();

        if i1 >= $i6 goto label12;

        $r20 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r9 = (android.util.SparseArray) $r20;

        i3 = 0;

     label08:
        $i7 = virtualinvoke r9.<android.util.SparseArray: int size()>();

        if i3 >= $i7 goto label11;

        $r19 = virtualinvoke r9.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r11 = (com.android.server.am.ProcessRecord) $r19;

        $i10 = r11.<com.android.server.am.ProcessRecord: int userId>;

        $i9 = r1.<com.android.server.am.TaskRecord: int userId>;

        if $i10 == $i9 goto label10;

     label09:
        i3 = i3 + 1;

        goto label08;

     label10:
        $r21 = r11.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z2 = virtualinvoke $r21.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r5);

        if $z2 == 0 goto label09;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        goto label09;

     label11:
        i1 = i1 + 1;

        goto label07;

     label12:
        i2 = 0;

     label13:
        $i5 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if i2 >= $i5 goto label03;

        $r18 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r8 = (com.android.server.am.ProcessRecord) $r18;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r8 != $r17 goto label15;

     label14:
        i2 = i2 + 1;

        goto label13;

     label15:
        $i8 = r8.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        if $i8 != 0 goto label16;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r8, "remove task");

        goto label14;

     label16:
        r8.<com.android.server.am.ProcessRecord: java.lang.String waitingToKill> = "remove task";

        goto label14;
    }

    private void clearProfilerLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.ParcelFileDescriptor $r2, $r3;
        java.io.IOException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        if $r2 == null goto label2;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        virtualinvoke $r3.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp> = null;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile> = null;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler> = 0;

        return;

     label3:
        $r4 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.util.List collectReceiverComponents(android.content.Intent, java.lang.String, int[])
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        java.lang.String r2, $r22, $r23, $r28, $r29;
        int[] r3;
        java.util.List r4, r7;
        java.util.HashSet r5, r8, r11, r15, $r25, $r32, r39;
        boolean z0, $z2;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.content.pm.ResolveInfo r10, r14, $r34;
        android.content.ComponentName r12, r13, $r21, $r26;
        android.content.pm.IPackageManager $r16;
        java.lang.Object $r17, $r24, $r35;
        android.content.pm.ActivityInfo $r18, $r19, $r20, $r27, $r30, $r31, $r33;
        android.os.RemoteException $r36, $r38;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: int[];

        r4 = null;

        r5 = null;

        z0 = 0;

     label01:
        i0 = lengthof r3;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label29;

     label04:
        i2 = r3[i1];

        $r16 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r7 = interfaceinvoke $r16.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r1, r2, 1024, i2);

     label05:
        if i2 == 0 goto label08;

        if r7 == null goto label08;

        i6 = 0;

     label06:
        $i13 = interfaceinvoke r7.<java.util.List: int size()>();

        if i6 >= $i13 goto label08;

        $r35 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i6);

        $r34 = (android.content.pm.ResolveInfo) $r35;

        $r33 = $r34.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i14 = $r33.<android.content.pm.ActivityInfo: int flags>;

        $i15 = 536870912 & $i14;

        if $i15 == 0 goto label35;

        interfaceinvoke r7.<java.util.List: java.lang.Object remove(int)>(i6);

     label07:
        i6 = i6 + -1;

        goto label35;

     label08:
        if r7 == null goto label11;

     label09:
        i3 = interfaceinvoke r7.<java.util.List: int size()>();

     label10:
        if i3 != 0 goto label11;

        r7 = null;

     label11:
        if r4 != null goto label13;

        r4 = r7;

     label12:
        i1 = i1 + 1;

        goto label03;

     label13:
        if r7 == null goto label12;

        if z0 != 0 goto label20;

        z0 = 1;

        i5 = 0;

        r8 = r5;

     label14:
        $i10 = interfaceinvoke r4.<java.util.List: int size()>();

        if i5 >= $i10 goto label19;

        $r24 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i5);

        r14 = (android.content.pm.ResolveInfo) $r24;

        $r27 = r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i12 = $r27.<android.content.pm.ActivityInfo: int flags>;

        $i11 = 1073741824 & $i12;

        if $i11 == 0 goto label34;

        $r26 = new android.content.ComponentName;

        $r31 = r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r28 = $r31.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r30 = r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r29 = $r30.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r26.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r28, $r29);

        r13 = $r26;

     label15:
        if r8 != null goto label33;

     label16:
        $r32 = new java.util.HashSet;

        specialinvoke $r32.<java.util.HashSet: void <init>()>();

        r15 = $r32;

     label17:
        virtualinvoke r15.<java.util.HashSet: boolean add(java.lang.Object)>(r13);

     label18:
        i5 = i5 + 1;

        r8 = r15;

        goto label14;

     label19:
        r5 = r8;

     label20:
        i4 = 0;

        r39 = r5;

     label21:
        $i7 = interfaceinvoke r7.<java.util.List: int size()>();

        if i4 >= $i7 goto label32;

        $r17 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i4);

        r10 = (android.content.pm.ResolveInfo) $r17;

        $r18 = r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $i8 = $r18.<android.content.pm.ActivityInfo: int flags>;

        $i9 = 1073741824 & $i8;

        if $i9 == 0 goto label26;

        $r21 = new android.content.ComponentName;

        $r19 = r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r23 = $r19.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r20 = r10.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r22 = $r20.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r21.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r23, $r22);

        r12 = $r21;

     label22:
        if r39 != null goto label31;

     label23:
        $r25 = new java.util.HashSet;

        specialinvoke $r25.<java.util.HashSet: void <init>()>();

        r11 = $r25;

     label24:
        $z2 = virtualinvoke r11.<java.util.HashSet: boolean contains(java.lang.Object)>(r12);

        if $z2 != 0 goto label25;

        virtualinvoke r11.<java.util.HashSet: boolean add(java.lang.Object)>(r12);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10);

     label25:
        i4 = i4 + 1;

        r39 = r11;

        goto label21;

     label26:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10);

     label27:
        r11 = r39;

        goto label25;

     label28:
        $r38 := @caughtexception;

     label29:
        return r4;

     label30:
        $r36 := @caughtexception;

        return r4;

     label31:
        r11 = r39;

        goto label24;

     label32:
        r5 = r39;

        goto label12;

     label33:
        r15 = r8;

        goto label17;

     label34:
        r15 = r8;

        goto label18;

     label35:
        i6 = i6 + 1;

        goto label06;

        catch android.os.RemoteException from label01 to label02 with label28;
        catch android.os.RemoteException from label04 to label05 with label28;
        catch android.os.RemoteException from label06 to label07 with label28;
        catch android.os.RemoteException from label09 to label10 with label28;
        catch android.os.RemoteException from label14 to label15 with label30;
        catch android.os.RemoteException from label16 to label17 with label30;
        catch android.os.RemoteException from label17 to label18 with label28;
        catch android.os.RemoteException from label21 to label22 with label30;
        catch android.os.RemoteException from label23 to label24 with label30;
        catch android.os.RemoteException from label24 to label25 with label28;
        catch android.os.RemoteException from label26 to label27 with label30;
    }

    private void comeOutOfSleepIfNeededLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityStackSupervisor $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown>;

        if $z1 != 0 goto label1;

        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z2 == 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 0;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor: void comeOutOfSleepIfNeededLocked()>();

     label1:
        return;
    }

    private final int computeOomAdjLocked(com.android.server.am.ProcessRecord, int, com.android.server.am.ProcessRecord, boolean, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2, r5, r11, $r17, $r18, $r21, $r43, $r54, $r56, $r63, $r64, $r65, $r70, $r76;
        int i0, i2, i3, i4, i6, i7, i8, i9, i10, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i29, i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i88, $i89;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        long l1, $l56, $l57, $l75, $l76, $l78, $l79;
        com.android.server.am.BroadcastQueue r3, $r79;
        byte b5, b11, b28, $b55, $b77;
        com.android.server.am.ActivityManagerService$ProcessChangeItem r4, $r25;
        com.android.server.am.ContentProviderRecord r6;
        com.android.server.am.ServiceRecord r7;
        com.android.server.am.ConnectionRecord r8;
        java.util.ArrayList r9, $r14, $r24, $r26, $r29, $r31, $r32, $r34, $r39, $r41, $r74, $r78, $r90;
        com.android.server.am.ActivityRecord r10, r13, $r88;
        java.lang.String r12, $r81;
        android.app.IApplicationThread $r15;
        android.content.ComponentName $r16, $r40, $r44, $r49, $r55;
        com.android.server.am.BackupRecord $r19, $r77;
        android.util.ArraySet $r20, $r22, $r46;
        android.util.ArrayMap $r23, $r36, $r47, $r50;
        android.os.Handler $r27;
        android.os.Message $r28;
        android.content.pm.ApplicationInfo $r30;
        java.lang.Object $r33, $r35, $r38, $r42, $r45, $r51, $r52, $r71, $r89;
        com.android.server.am.ProcessList $r37;
        com.android.server.am.ContentProviderConnection $r48;
        com.android.server.am.AppBindRecord $r53, $r57, $r62;
        com.android.server.am.ActivityStack$ActivityState $r58, $r59, $r60, $r61, $r66, $r67, $r68, $r69, $r72, $r86;
        android.os.IBinder $r73, $r75;
        java.lang.StringBuilder $r80, $r82, $r83, $r84, $r85, $r87;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        z0 := @parameter3: boolean;

        l1 := @parameter4: long;

        $i32 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i33 = r1.<com.android.server.am.ProcessRecord: int adjSeq>;

        if $i32 != $i33 goto label001;

        $i88 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        return $i88;

     label001:
        $r15 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r15 != null goto label002;

        $i89 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        r1.<com.android.server.am.ProcessRecord: int adjSeq> = $i89;

        r1.<com.android.server.am.ProcessRecord: int curSchedGroup> = 0;

        r1.<com.android.server.am.ProcessRecord: int curProcState> = 13;

        r1.<com.android.server.am.ProcessRecord: int curRawAdj> = 15;

        r1.<com.android.server.am.ProcessRecord: int curAdj> = 15;

        return 15;

     label002:
        r1.<com.android.server.am.ProcessRecord: int adjTypeCode> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = null;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = null;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        $r14 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        i2 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        $i34 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        if $i34 > 0 goto label008;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "fixed";

        $i85 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        r1.<com.android.server.am.ProcessRecord: int adjSeq> = $i85;

        $i86 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        r1.<com.android.server.am.ProcessRecord: int curRawAdj> = $i86;

        r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean keeping> = 1;

        r1.<com.android.server.am.ProcessRecord: int curSchedGroup> = -1;

        r1.<com.android.server.am.ProcessRecord: int curProcState> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean systemNoUi> = 1;

        if r1 != r2 goto label005;

        r1.<com.android.server.am.ProcessRecord: boolean systemNoUi> = 0;

     label003:
        $z29 = r1.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        if $z29 != 0 goto label004;

        r1.<com.android.server.am.ProcessRecord: int curProcState> = 1;

     label004:
        i30 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        r1.<com.android.server.am.ProcessRecord: int curAdj> = i30;

        return i30;

     label005:
        if i2 <= 0 goto label003;

        i31 = 0;

     label006:
        if i31 >= i2 goto label003;

        $r90 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r89 = virtualinvoke $r90.<java.util.ArrayList: java.lang.Object get(int)>(i31);

        $r88 = (com.android.server.am.ActivityRecord) $r89;

        $z32 = $r88.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z32 == 0 goto label007;

        r1.<com.android.server.am.ProcessRecord: boolean systemNoUi> = 0;

     label007:
        i31 = i31 + 1;

        goto label006;

     label008:
        r1.<com.android.server.am.ProcessRecord: boolean keeping> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean systemNoUi> = 0;

        if r1 != r2 goto label012;

        i3 = 0;

        b5 = -1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "top-activity";

        z1 = 1;

        z2 = 1;

        i4 = 2;

     label009:
        if z1 != 0 goto label023;

        if i2 <= 0 goto label023;

        i27 = 0;

     label010:
        if i27 >= i2 goto label023;

        $r74 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r71 = virtualinvoke $r74.<java.util.ArrayList: java.lang.Object get(int)>(i27);

        r13 = (com.android.server.am.ActivityRecord) $r71;

        $r70 = r13.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r70 == r1 goto label020;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wtf, activity ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in proc activity list not using proc ");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r80 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?!?");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r81);

     label011:
        i27 = i27 + 1;

        goto label010;

     label012:
        $r16 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r16 == null goto label013;

        b5 = -1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "instrumentation";

        z2 = 1;

        i4 = 3;

        i3 = 0;

        z1 = 0;

        goto label009;

     label013:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue isReceivingBroadcast(com.android.server.am.ProcessRecord)>(r1);

        if r3 == null goto label016;

        $r79 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        if r3 != $r79 goto label015;

        b5 = -1;

     label014:
        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "broadcast";

        i4 = 8;

        i3 = 0;

        z1 = 0;

        z2 = 0;

        goto label009;

     label015:
        b5 = 0;

        goto label014;

     label016:
        $r20 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet executingServices>;

        $i36 = virtualinvoke $r20.<android.util.ArraySet: int size()>();

        if $i36 <= 0 goto label019;

        $z30 = r1.<com.android.server.am.ProcessRecord: boolean execServicesFg>;

        if $z30 == 0 goto label018;

        b5 = -1;

     label017:
        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "exec-service";

        i4 = 7;

        i3 = 0;

        z1 = 0;

        z2 = 0;

        goto label009;

     label018:
        b5 = 0;

        goto label017;

     label019:
        i3 = i0;

        i4 = 13;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 1;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-empty";

        z1 = 0;

        z2 = 0;

        b5 = 0;

        goto label009;

     label020:
        $z27 = r13.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z27 == 0 goto label045;

        if i3 <= 1 goto label021;

        i3 = 1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "visible";

     label021:
        if i4 <= 2 goto label022;

        i4 = 2;

     label022:
        b5 = -1;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 0;

        z1 = 1;

     label023:
        if i3 <= 2 goto label024;

        $z28 = r1.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if $z28 == 0 goto label053;

        i3 = 2;

        i4 = 3;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "fg-service";

        b5 = -1;

     label024:
        $z7 = r1.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if $z7 == 0 goto label025;

        z2 = 1;

     label025:
        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if r1 != $r21 goto label027;

        if i3 <= 4 goto label026;

        i3 = 4;

        b5 = 0;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "heavy";

     label026:
        if i4 <= 6 goto label027;

        i4 = 6;

     label027:
        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 != $r17 goto label029;

        if i3 <= 6 goto label028;

        i3 = 6;

        b5 = 0;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "home";

     label028:
        if i4 <= 9 goto label029;

        i4 = 9;

     label029:
        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        if r1 != $r18 goto label031;

        $r78 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i84 = virtualinvoke $r78.<java.util.ArrayList: int size()>();

        if $i84 <= 0 goto label031;

        if i3 <= 7 goto label030;

        i3 = 7;

        b5 = 0;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "previous";

     label030:
        if i4 <= 10 goto label031;

        i4 = 10;

     label031:
        $i35 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        r1.<com.android.server.am.ProcessRecord: int adjSeq> = $i35;

        r1.<com.android.server.am.ProcessRecord: int curRawAdj> = i3;

        r1.<com.android.server.am.ProcessRecord: boolean hasStartedServices> = 0;

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r19 == null goto label034;

        $r77 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r76 = $r77.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        if r1 != $r76 goto label034;

        if i3 <= 3 goto label033;

        i3 = 3;

        if i4 <= 4 goto label032;

        i4 = 4;

     label032:
        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "backup";

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

     label033:
        if i4 <= 5 goto label034;

        i4 = 5;

     label034:
        z3 = 0;

        $r22 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i39 = virtualinvoke $r22.<android.util.ArraySet: int size()>();

        i6 = -1 + $i39;

     label035:
        if i6 < 0 goto label081;

        if i3 > 0 goto label036;

        if b5 == 0 goto label036;

        if i4 <= 2 goto label081;

     label036:
        $r46 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r45 = virtualinvoke $r46.<android.util.ArraySet: java.lang.Object valueAt(int)>(i6);

        r7 = (com.android.server.am.ServiceRecord) $r45;

        $z15 = r7.<com.android.server.am.ServiceRecord: boolean startRequested>;

        if $z15 == 0 goto label039;

        r1.<com.android.server.am.ProcessRecord: boolean hasStartedServices> = 1;

        if i4 <= 7 goto label037;

        i4 = 7;

     label037:
        $z23 = r1.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z23 == 0 goto label054;

        $r64 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 == $r64 goto label054;

        if i3 <= 5 goto label038;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-started-ui-services";

     label038:
        r1.<com.android.server.am.ProcessRecord: boolean keeping> = 1;

     label039:
        $r47 = r7.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $i68 = virtualinvoke $r47.<android.util.ArrayMap: int size()>();

        i20 = -1 + $i68;

     label040:
        if i20 < 0 goto label080;

        if i3 > 0 goto label041;

        if b5 == 0 goto label041;

        if i4 <= 2 goto label080;

     label041:
        $r50 = r7.<com.android.server.am.ServiceRecord: android.util.ArrayMap connections>;

        $r51 = virtualinvoke $r50.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i20);

        r9 = (java.util.ArrayList) $r51;

        i24 = 0;

     label042:
        i23 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if i24 >= i23 goto label079;

        if i3 > 0 goto label043;

        if b5 == 0 goto label043;

        if i4 <= 2 goto label079;

     label043:
        $r52 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        r8 = (com.android.server.am.ConnectionRecord) $r52;

        $r53 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r54 = $r53.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        if $r54 != r1 goto label056;

     label044:
        i24 = i24 + 1;

        goto label042;

     label045:
        $r67 = r13.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r72 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r67 == $r72 goto label046;

        $r69 = r13.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r66 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSED>;

        if $r69 != $r66 goto label049;

     label046:
        if i3 <= 2 goto label047;

        i3 = 2;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "pausing";

     label047:
        if i4 <= 2 goto label048;

        i4 = 2;

     label048:
        b5 = -1;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 0;

        z1 = 1;

        goto label011;

     label049:
        $r86 = r13.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r68 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        if $r86 != $r68 goto label052;

        if i3 <= 2 goto label050;

        i3 = 2;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "stopping";

     label050:
        $z31 = r13.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z31 != 0 goto label051;

        if i4 <= 11 goto label051;

        i4 = 11;

     label051:
        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean empty> = 0;

        z1 = 1;

        goto label011;

     label052:
        if i4 <= 11 goto label011;

        i4 = 11;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-act";

        goto label011;

     label053:
        $r73 = r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground>;

        if $r73 == null goto label024;

        i3 = 2;

        i4 = 3;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "force-fg";

        $r75 = r1.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = $r75;

        b5 = -1;

        goto label024;

     label054:
        $l78 = r7.<com.android.server.am.ServiceRecord: long lastActivity>;

        $l79 = 1800000L + $l78;

        $b77 = l1 cmp $l79;

        if $b77 >= 0 goto label055;

        if i3 <= 5 goto label055;

        i3 = 5;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "started-services";

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

     label055:
        if i3 <= 5 goto label038;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-started-services";

        goto label038;

     label056:
        $i62 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i63 = 32 & $i62;

        if $i63 != 0 goto label065;

        $r62 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        r11 = $r62.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        i25 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r11, i0, r2, z0, l1);

        i26 = r11.<com.android.server.am.ProcessRecord: int curProcState>;

        if i26 < 11 goto label057;

        i26 = 13;

     label057:
        $i74 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        i29 = 16 & $i74;

        r12 = null;

        if i29 == 0 goto label059;

        $z24 = r1.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z24 == 0 goto label068;

        $r63 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 == $r63 goto label068;

        r12 = null;

        if i3 <= i25 goto label058;

        r12 = "cch-bound-ui-services";

     label058:
        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        i25 = i3;

        i26 = i4;

     label059:
        if i3 <= i25 goto label060;

        $z22 = r1.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z22 == 0 goto label070;

        $r65 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 == $r65 goto label070;

        if i25 <= 2 goto label070;

        r12 = "cch-bound-ui-services";

     label060:
        $i73 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i69 = 4 & $i73;

        if $i69 != 0 goto label078;

        $i70 = r11.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if $i70 != -1 goto label061;

        b5 = -1;

     label061:
        if i26 > 2 goto label062;

        if i26 != 2 goto label077;

        z3 = 1;

        i26 = 13;

     label062:
        if i4 <= i26 goto label063;

        i4 = i26;

     label063:
        if i4 >= 4 goto label064;

        $i72 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i71 = 536870912 & $i72;

        if $i71 == 0 goto label064;

        r1.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 1;

     label064:
        if r12 == null goto label065;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = r12;

        r1.<com.android.server.am.ProcessRecord: int adjTypeCode> = 2;

        $r57 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r56 = $r57.<com.android.server.am.AppBindRecord: com.android.server.am.ProcessRecord client>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = $r56;

        r1.<com.android.server.am.ProcessRecord: int adjSourceOom> = i25;

        $r55 = r7.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = $r55;

     label065:
        r10 = r8.<com.android.server.am.ConnectionRecord: com.android.server.am.ActivityRecord activity>;

        $i64 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i65 = 128 & $i64;

        if $i65 == 0 goto label044;

        if r10 == null goto label044;

        if i3 <= 0 goto label044;

        $z21 = r10.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z21 != 0 goto label066;

        $r60 = r10.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r61 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r60 == $r61 goto label066;

        $r58 = r10.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r59 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r58 != $r59 goto label044;

     label066:
        $i66 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i67 = 4 & $i66;

        if $i67 != 0 goto label067;

        b5 = -1;

     label067:
        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "service";

        r1.<com.android.server.am.ProcessRecord: int adjTypeCode> = 2;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = r10;

        r1.<com.android.server.am.ProcessRecord: int adjSourceOom> = 0;

        $r49 = r7.<com.android.server.am.ServiceRecord: android.content.ComponentName name>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = $r49;

        i3 = 0;

        goto label044;

     label068:
        $l75 = r7.<com.android.server.am.ServiceRecord: long lastActivity>;

        $l76 = 1800000L + $l75;

        b28 = l1 cmp $l76;

        r12 = null;

        if b28 < 0 goto label059;

        r12 = null;

        if i3 <= i25 goto label069;

        r12 = "cch-bound-services";

     label069:
        i25 = i3;

        goto label059;

     label070:
        $i82 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i83 = 72 & $i82;

        if $i83 == 0 goto label074;

        i3 = i25;

     label071:
        $z25 = r11.<com.android.server.am.ProcessRecord: boolean cached>;

        if $z25 != 0 goto label072;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

     label072:
        $z26 = r11.<com.android.server.am.ProcessRecord: boolean keeping>;

        if $z26 == 0 goto label073;

        r1.<com.android.server.am.ProcessRecord: boolean keeping> = 1;

     label073:
        r12 = "service";

        goto label060;

     label074:
        $i80 = r8.<com.android.server.am.ConnectionRecord: int flags>;

        $i81 = 1073741824 & $i80;

        if $i81 == 0 goto label075;

        if i25 >= 2 goto label075;

        if i3 <= 2 goto label075;

        i3 = 2;

        goto label071;

     label075:
        if i25 <= 1 goto label076;

        i3 = i25;

        goto label071;

     label076:
        if i3 <= 1 goto label071;

        i3 = 1;

        goto label071;

     label077:
        i26 = 3;

        goto label062;

     label078:
        if i26 >= 4 goto label062;

        i26 = 4;

        goto label062;

     label079:
        i20 = i20 + -1;

        goto label040;

     label080:
        i6 = i6 + -1;

        goto label035;

     label081:
        $r23 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i37 = virtualinvoke $r23.<android.util.ArrayMap: int size()>();

        i8 = -1 + $i37;

     label082:
        if i8 < 0 goto label100;

        if i3 > 0 goto label083;

        if b5 == 0 goto label083;

        if i4 <= 2 goto label100;

     label083:
        $r36 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r42 = virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r6 = (com.android.server.am.ContentProviderRecord) $r42;

        $r41 = r6.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $i60 = virtualinvoke $r41.<java.util.ArrayList: int size()>();

        i19 = -1 + $i60;

     label084:
        if i19 < 0 goto label097;

        if i3 > 0 goto label085;

        if b5 == 0 goto label085;

        if i4 <= 2 goto label097;

     label085:
        $r39 = r6.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $r38 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i19);

        $r48 = (com.android.server.am.ContentProviderConnection) $r38;

        r5 = $r48.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        if r5 != r1 goto label087;

     label086:
        i19 = i19 + -1;

        goto label084;

     label087:
        i21 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r5, i0, r2, z0, l1);

        i22 = r5.<com.android.server.am.ProcessRecord: int curProcState>;

        if i22 < 11 goto label088;

        i22 = 13;

     label088:
        if i3 <= i21 goto label090;

        $z16 = r1.<com.android.server.am.ProcessRecord: boolean hasShownUi>;

        if $z16 == 0 goto label093;

        $r43 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 == $r43 goto label093;

        if i21 <= 2 goto label093;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-ui-provider";

     label089:
        $z17 = r1.<com.android.server.am.ProcessRecord: boolean cached>;

        $z18 = r5.<com.android.server.am.ProcessRecord: boolean cached>;

        $z20 = $z17 & $z18;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = $z20;

        $z14 = r1.<com.android.server.am.ProcessRecord: boolean keeping>;

        $z19 = r5.<com.android.server.am.ProcessRecord: boolean keeping>;

        $z13 = $z14 | $z19;

        r1.<com.android.server.am.ProcessRecord: boolean keeping> = $z13;

        r1.<com.android.server.am.ProcessRecord: int adjTypeCode> = 1;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjSource> = r5;

        r1.<com.android.server.am.ProcessRecord: int adjSourceOom> = i21;

        $r44 = r6.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = $r44;

     label090:
        if i22 > 2 goto label091;

        if i22 != 2 goto label096;

        z3 = 1;

        i22 = 13;

     label091:
        if i4 <= i22 goto label092;

        i4 = i22;

     label092:
        $i61 = r5.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if $i61 != -1 goto label086;

        b5 = -1;

        goto label086;

     label093:
        if i21 <= 0 goto label095;

        i3 = i21;

     label094:
        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "provider";

        goto label089;

     label095:
        i3 = 0;

        goto label094;

     label096:
        i22 = 3;

        goto label091;

     label097:
        $z12 = virtualinvoke r6.<com.android.server.am.ContentProviderRecord: boolean hasExternalProcessHandles()>();

        if $z12 == 0 goto label099;

        if i3 <= 0 goto label098;

        i3 = 0;

        b5 = -1;

        r1.<com.android.server.am.ProcessRecord: boolean cached> = 0;

        r1.<com.android.server.am.ProcessRecord: boolean keeping> = 1;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "provider";

        $r40 = r6.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        r1.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget> = $r40;

     label098:
        if i4 <= 3 goto label099;

        i4 = 3;

     label099:
        i8 = i8 + -1;

        goto label082;

     label100:
        if z3 == 0 goto label102;

        if i4 <= 2 goto label102;

        tableswitch(i4)
        {
            case 3: goto label119;
            case 4: goto label119;
            case 5: goto label101;
            case 6: goto label101;
            case 7: goto label119;
            default: goto label101;
        };

     label101:
        i4 = 2;

     label102:
        if i4 < 13 goto label103;

        $z11 = r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        if $z11 == 0 goto label103;

        i4 = 12;

        r1.<com.android.server.am.ProcessRecord: java.lang.String adjType> = "cch-client-act";

     label103:
        if i3 != 5 goto label106;

        if z0 == 0 goto label105;

        $i53 = r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs>;

        $i54 = r0.<com.android.server.am.ActivityManagerService: int mNumServiceProcs>;

        $i52 = $i54 / 3;

        if $i53 <= $i52 goto label120;

        z6 = 1;

     label104:
        r1.<com.android.server.am.ProcessRecord: boolean serviceb> = z6;

        $i50 = r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs>;

        $i51 = 1 + $i50;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs> = $i51;

        $z9 = r1.<com.android.server.am.ProcessRecord: boolean serviceb>;

        if $z9 != 0 goto label122;

        $i49 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if $i49 <= 0 goto label121;

        $l57 = r1.<com.android.server.am.ProcessRecord: long lastPss>;

        $r37 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l56 = virtualinvoke $r37.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        $b55 = $l57 cmp $l56;

        if $b55 < 0 goto label121;

        r1.<com.android.server.am.ProcessRecord: boolean serviceHighRam> = 1;

        r1.<com.android.server.am.ProcessRecord: boolean serviceb> = 1;

     label105:
        $z10 = r1.<com.android.server.am.ProcessRecord: boolean serviceb>;

        if $z10 == 0 goto label106;

        i3 = 8;

     label106:
        r1.<com.android.server.am.ProcessRecord: int curRawAdj> = i3;

        $i38 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        if i3 <= $i38 goto label107;

        i3 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        $i46 = r1.<com.android.server.am.ProcessRecord: int maxAdj>;

        if $i46 > 2 goto label107;

        b5 = -1;

     label107:
        if i3 >= 9 goto label108;

        r1.<com.android.server.am.ProcessRecord: boolean keeping> = 1;

     label108:
        i7 = virtualinvoke r1.<com.android.server.am.ProcessRecord: int modifyRawOomAdj(int)>(i3);

        r1.<com.android.server.am.ProcessRecord: int curProcState> = i4;

        i10 = r1.<com.android.server.am.ProcessRecord: int memImportance>;

        if i10 == 0 goto label109;

        $i45 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        if i7 != $i45 goto label109;

        i18 = r1.<com.android.server.am.ProcessRecord: int curSchedGroup>;

        if b5 == i18 goto label110;

     label109:
        r1.<com.android.server.am.ProcessRecord: int curAdj> = i7;

        r1.<com.android.server.am.ProcessRecord: int curSchedGroup> = b5;

        if z2 != 0 goto label123;

        i10 = 400;

     label110:
        i9 = r1.<com.android.server.am.ProcessRecord: int memImportance>;

        if i10 == i9 goto label132;

        b11 = 2;

     label111:
        z4 = r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities>;

        if z1 == z4 goto label112;

        b11 = b11 | 1;

     label112:
        if b11 == 0 goto label118;

        r1.<com.android.server.am.ProcessRecord: int memImportance> = i10;

        r1.<com.android.server.am.ProcessRecord: boolean foregroundActivities> = z1;

        $r26 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i42 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

        i12 = -1 + $i42;

        r4 = null;

     label113:
        if i12 < 0 goto label114;

        $r32 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(i12);

        r4 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r33;

        $i48 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i47 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i48 != $i47 goto label133;

     label114:
        if i12 >= 0 goto label117;

        $r24 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        i15 = virtualinvoke $r24.<java.util.ArrayList: int size()>();

        if i15 <= 0 goto label134;

        $r34 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        $i43 = i15 - 1;

        $r35 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object remove(int)>($i43);

        r4 = (com.android.server.am.ActivityManagerService$ProcessChangeItem) $r35;

     label115:
        r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes> = 0;

        i17 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid> = i17;

        $r30 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i16 = $r30.<android.content.pm.ApplicationInfo: int uid>;

        r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid> = i16;

        $r29 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $i44 = virtualinvoke $r29.<java.util.ArrayList: int size()>();

        if $i44 != 0 goto label116;

        $r27 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r28 = virtualinvoke $r27.<android.os.Handler: android.os.Message obtainMessage(int)>(31);

        virtualinvoke $r28.<android.os.Message: void sendToTarget()>();

     label116:
        $r31 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label117:
        $i40 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        i14 = b11 | $i40;

        r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes> = i14;

        i13 = i10;

        r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int importance> = i13;

        z5 = z1;

        r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: boolean foregroundActivities> = z5;

     label118:
        $i41 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        return $i41;

     label119:
        i4 = 3;

        goto label102;

     label120:
        z6 = 0;

        goto label104;

     label121:
        $i59 = r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs>;

        $i58 = 1 + $i59;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs> = $i58;

        goto label105;

     label122:
        r1.<com.android.server.am.ProcessRecord: boolean serviceHighRam> = 0;

        goto label105;

     label123:
        if i7 < 9 goto label124;

        i10 = 400;

        goto label110;

     label124:
        if i7 < 8 goto label125;

        i10 = 300;

        goto label110;

     label125:
        if i7 < 6 goto label126;

        i10 = 400;

        goto label110;

     label126:
        if i7 < 5 goto label127;

        i10 = 300;

        goto label110;

     label127:
        if i7 < 4 goto label128;

        i10 = 170;

        goto label110;

     label128:
        if i7 < 2 goto label129;

        i10 = 130;

        goto label110;

     label129:
        if i7 < 1 goto label130;

        i10 = 200;

        goto label110;

     label130:
        if i7 < 0 goto label131;

        i10 = 100;

        goto label110;

     label131:
        i10 = 50;

        goto label110;

     label132:
        b11 = 0;

        goto label111;

     label133:
        i12 = i12 + -1;

        goto label113;

     label134:
        $r25 = new com.android.server.am.ActivityManagerService$ProcessChangeItem;

        specialinvoke $r25.<com.android.server.am.ActivityManagerService$ProcessChangeItem: void <init>()>();

        r4 = $r25;

        goto label115;
    }

    private void crashApplication(com.android.server.am.ProcessRecord, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.app.ApplicationErrorReport$CrashInfo r2;
        long l0, l1, $l6;
        java.lang.String r3, r4, r5, r16, $r27, $r34, $r36, $r41, $r44, $r52, $r58;
        com.android.server.am.AppErrorResult r6, r65;
        java.lang.Throwable r7, r13, $r59, $r60, r73;
        android.app.IActivityController r8, $r51;
        android.os.Message r9;
        java.util.HashMap r10, r71;
        android.content.Intent r11;
        int i2, i3, i4, $i5, $i7;
        android.content.ActivityNotFoundException r12, $r61;
        android.os.Bundle r14, r70;
        boolean $z0, $z2, $z3;
        android.os.Handler $r19;
        android.content.Context $r22;
        com.android.internal.app.ProcessMap $r24;
        android.content.pm.ApplicationInfo $r25;
        java.lang.Long $r26;
        android.content.ComponentName $r29, $r31;
        java.lang.StringBuilder $r32, $r33, $r35, $r37, $r38, $r39, $r40, $r45, $r47, $r48, $r49, $r50, $r54, $r55, $r56, r64, r66, r67, r68, r69;
        android.os.RemoteException $r62;
        com.android.server.Watchdog $r63;
        android.os.UserHandle r72;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.app.ApplicationErrorReport$CrashInfo;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionClassName>;

        r4 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionMessage>;

        r5 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String stackTrace>;

        if r3 == null goto label10;

        if r4 == null goto label10;

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r54 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        r65 = new com.android.server.am.AppErrorResult;

        specialinvoke r65.<com.android.server.am.AppErrorResult: void <init>()>();

        r6 = r65;

        entermonitor r0;

     label02:
        r8 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

     label03:
        if r8 == null goto label16;

        if r1 == null goto label11;

     label04:
        r16 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label05:
        if r1 == null goto label12;

     label06:
        i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

     label07:
        $r51 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r52 = r2.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String stackTrace>;

        $z3 = interfaceinvoke $r51.<android.app.IActivityController: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>(r16, i3, r3, r4, l0, $r52);

        if $z3 != 0 goto label16;

        r66 = new java.lang.StringBuilder;

        specialinvoke r66.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force-killing crashed app ");

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at watcher\'s request");

        $r58 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r58);

        staticinvoke <android.os.Process: void killProcess(int)>(i3);

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        if r3 == null goto label01;

        r4 = r3;

        goto label01;

     label11:
        r16 = null;

        goto label05;

     label12:
        i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label13:
        i3 = i4;

        goto label07;

     label14:
        $r62 := @caughtexception;

     label15:
        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r63 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r63.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label16:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label17:
        if r1 == null goto label28;

     label18:
        $r29 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r29 == null goto label28;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in app ");

        $r36 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running instrumentation ");

        $r31 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r32 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r34);

     label19:
        if r3 == null goto label21;

     label20:
        r68 = new java.lang.StringBuilder;

        specialinvoke r68.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r44);

     label21:
        if r4 == null goto label23;

     label22:
        r69 = new java.lang.StringBuilder;

        specialinvoke r69.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r41);

     label23:
        r70 = new android.os.Bundle;

        specialinvoke r70.<android.os.Bundle: void <init>()>();

        r14 = r70;

        virtualinvoke r14.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", r3);

        virtualinvoke r14.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("longMsg", r4);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r1, 0, r14);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label24:
        return;

     label25:
        $r59 := @caughtexception;

        r7 = $r59;

     label26:
        exitmonitor r0;

     label27:
        throw r7;

     label28:
        if r1 == null goto label30;

     label29:
        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r5);

        if $z0 != 0 goto label32;

     label30:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label31:
        return;

     label32:
        r9 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r9.<android.os.Message: int what> = 1;

        r71 = new java.util.HashMap;

        specialinvoke r71.<java.util.HashMap: void <init>()>();

        r10 = r71;

        virtualinvoke r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("result", r6);

        virtualinvoke r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", r1);

        r9.<android.os.Message: java.lang.Object obj> = r10;

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r19.<android.os.Handler: boolean sendMessage(android.os.Message)>(r9);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label33:
        i2 = virtualinvoke r6.<com.android.server.am.AppErrorResult: int get()>();

        entermonitor r0;

        if r1 == null goto label35;

     label34:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z2 != 0 goto label35;

        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r25 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r27 = $r25.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i7 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke $r24.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r27, $i7, $r26);

     label35:
        r11 = null;

        if i2 != 1 goto label37;

     label36:
        r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)>(r1, l0, r2);

     label37:
        exitmonitor r0;

     label38:
        if r11 == null goto label09;

     label39:
        $r22 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r72 = new android.os.UserHandle;

        $i5 = r1.<com.android.server.am.ProcessRecord: int userId>;

        specialinvoke r72.<android.os.UserHandle: void <init>(int)>($i5);

        virtualinvoke $r22.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>(r11, r72);

     label40:
        return;

     label41:
        $r61 := @caughtexception;

        r12 = $r61;

        r73 = (java.lang.Throwable) r12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "bug report receiver dissappeared", r73);

        return;

     label42:
        $r60 := @caughtexception;

        r13 = $r60;

     label43:
        exitmonitor r0;

     label44:
        throw r13;

        catch java.lang.Throwable from label02 to label03 with label25;
        catch android.os.RemoteException from label04 to label05 with label14;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch android.os.RemoteException from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch android.os.RemoteException from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label29 to label30 with label25;
        catch java.lang.Throwable from label30 to label31 with label25;
        catch java.lang.Throwable from label32 to label33 with label25;
        catch java.lang.Throwable from label34 to label35 with label42;
        catch java.lang.Throwable from label36 to label37 with label42;
        catch java.lang.Throwable from label37 to label38 with label42;
        catch android.content.ActivityNotFoundException from label39 to label40 with label41;
        catch java.lang.Throwable from label43 to label44 with label42;
    }

    private android.app.ApplicationErrorReport createAppErrorReportLocked(com.android.server.am.ProcessRecord, long, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0;
        android.app.ApplicationErrorReport$CrashInfo r2;
        android.content.ComponentName r3, $r8;
        android.app.ApplicationErrorReport r4, $r5;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.content.pm.ApplicationInfo $r6, $r11;
        java.lang.String $r7, $r9, $r10, $r15, $r16, $r21;
        int $i1, $i2;
        android.app.ActivityManager$ProcessErrorStateInfo $r12, $r17, $r18;
        android.app.ApplicationErrorReport$AnrInfo $r13, $r14, $r19, $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        r2 := @parameter2: android.app.ApplicationErrorReport$CrashInfo;

        r3 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver>;

        r4 = null;

        if r3 != null goto label2;

     label1:
        return r4;

     label2:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z2 != 0 goto label3;

        $z6 = r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z6 != 0 goto label3;

        z1 = r1.<com.android.server.am.ProcessRecord: boolean forceCrashReport>;

        r4 = null;

        if z1 == 0 goto label1;

     label3:
        $r5 = new android.app.ApplicationErrorReport;

        specialinvoke $r5.<android.app.ApplicationErrorReport: void <init>()>();

        r4 = $r5;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r7 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r4.<android.app.ApplicationErrorReport: java.lang.String packageName> = $r7;

        $r8 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver>;

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        r4.<android.app.ApplicationErrorReport: java.lang.String installerPackageName> = $r9;

        $r10 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r4.<android.app.ApplicationErrorReport: java.lang.String processName> = $r10;

        r4.<android.app.ApplicationErrorReport: long time> = l0;

        $r11 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = 1 & $i1;

        if $i2 == 0 goto label6;

        z0 = 1;

     label4:
        r4.<android.app.ApplicationErrorReport: boolean systemApp> = z0;

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z3 != 0 goto label5;

        $z5 = r1.<com.android.server.am.ProcessRecord: boolean forceCrashReport>;

        if $z5 == 0 goto label7;

     label5:
        r4.<android.app.ApplicationErrorReport: int type> = 1;

        r4.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$CrashInfo crashInfo> = r2;

        return r4;

     label6:
        z0 = 0;

        goto label4;

     label7:
        $z4 = r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z4 == 0 goto label1;

        r4.<android.app.ApplicationErrorReport: int type> = 2;

        $r13 = new android.app.ApplicationErrorReport$AnrInfo;

        specialinvoke $r13.<android.app.ApplicationErrorReport$AnrInfo: void <init>()>();

        r4.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$AnrInfo anrInfo> = $r13;

        $r14 = r4.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$AnrInfo anrInfo>;

        $r12 = r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

        $r15 = $r12.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String tag>;

        $r14.<android.app.ApplicationErrorReport$AnrInfo: java.lang.String activity> = $r15;

        $r19 = r4.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$AnrInfo anrInfo>;

        $r17 = r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

        $r16 = $r17.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String shortMsg>;

        $r19.<android.app.ApplicationErrorReport$AnrInfo: java.lang.String cause> = $r16;

        $r20 = r4.<android.app.ApplicationErrorReport: android.app.ApplicationErrorReport$AnrInfo anrInfo>;

        $r18 = r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

        $r21 = $r18.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String longMsg>;

        $r20.<android.app.ApplicationErrorReport$AnrInfo: java.lang.String info> = $r21;

        return r4;
    }

    private void dispatchProcessDied(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        android.app.IProcessObserver r1;
        android.os.RemoteCallbackList $r3, $r4, $r5;
        android.os.IInterface $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        i2 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label1:
        if i2 <= 0 goto label5;

        i2 = i2 + -1;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        $r6 = virtualinvoke $r5.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        r1 = (android.app.IProcessObserver) $r6;

        if r1 == null goto label1;

     label2:
        interfaceinvoke r1.<android.app.IProcessObserver: void onProcessDied(int,int)>(i0, i1);

     label3:
        goto label1;

     label4:
        $r7 := @caughtexception;

        goto label1;

     label5:
        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void dispatchProcessesChanged()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r20;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.app.IProcessObserver r2;
        com.android.server.am.ActivityManagerService$ProcessChangeItem r4;
        java.util.ArrayList $r5, $r9, $r10, $r11, $r12;
        com.android.server.am.ActivityManagerService$ProcessChangeItem[] $r6, $r7, $r17, $r18;
        android.os.RemoteCallbackList $r13, $r14, $r16;
        android.os.IInterface $r15;
        boolean $z1;
        android.os.RemoteException $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        $i3 = lengthof $r6;

        if $i3 >= i0 goto label02;

        $r18 = newarray (com.android.server.am.ActivityManagerService$ProcessChangeItem)[i0];

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges> = $r18;

     label02:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mAvailProcessChanges>;

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r10.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r11);

        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingProcessChanges>;

        virtualinvoke $r12.<java.util.ArrayList: void clear()>();

        exitmonitor r0;

     label03:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        i1 = virtualinvoke $r13.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label04:
        if i1 <= 0 goto label12;

        i1 = i1 + -1;

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        $r15 = virtualinvoke $r16.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i1);

        r2 = (android.app.IProcessObserver) $r15;

        if r2 == null goto label04;

        i2 = 0;

     label05:
        if i2 >= i0 goto label04;

     label06:
        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$ProcessChangeItem[] mActiveProcessChanges>;

        r4 = $r17[i2];

        $i4 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        $i6 = 1 & $i4;

        if $i6 == 0 goto label07;

        $i11 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i12 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid>;

        $z1 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: boolean foregroundActivities>;

        interfaceinvoke r2.<android.app.IProcessObserver: void onForegroundActivitiesChanged(int,int,boolean)>($i11, $i12, $z1);

     label07:
        $i5 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int changes>;

        $i9 = 2 & $i5;

        if $i9 == 0 goto label08;

        $i8 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int pid>;

        $i7 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int uid>;

        $i10 = r4.<com.android.server.am.ActivityManagerService$ProcessChangeItem: int importance>;

        interfaceinvoke r2.<android.app.IProcessObserver: void onImportanceChanged(int,int,int)>($i8, $i7, $i10);

     label08:
        i2 = i2 + 1;

        goto label05;

     label09:
        $r20 := @caughtexception;

        r1 = $r20;

     label10:
        exitmonitor r0;

     label11:
        throw r1;

     label12:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r14.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label13:
        $r19 := @caughtexception;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch android.os.RemoteException from label06 to label07 with label13;
        catch android.os.RemoteException from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private void dumpActivity(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, com.android.server.am.ActivityRecord, java.lang.String[], boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r6, $r15, $r17, $r31, $r39;
        java.io.FileDescriptor r2, $r26;
        java.io.PrintWriter r3;
        com.android.server.am.ActivityRecord r4;
        java.lang.String[] r5;
        boolean z0;
        java.lang.Throwable r7, r9, $r38, $r40;
        com.android.internal.os.TransferPipe r8, r42;
        java.io.IOException r11, $r27;
        java.lang.StringBuilder $r13, $r14, $r30, $r32, $r33, $r34, $r35, r41, r43, r44;
        int $i0, $i1;
        com.android.server.am.ProcessRecord $r16, $r18, $r20, $r21, $r29;
        android.app.IApplicationThread $r19, $r24;
        android.os.ParcelFileDescriptor $r23;
        android.view.IApplicationToken$Stub $r25;
        android.os.RemoteException $r36;
        android.os.IBinder r45;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.FileDescriptor;

        r3 := @parameter2: java.io.PrintWriter;

        r4 := @parameter3: com.android.server.am.ActivityRecord;

        r5 := @parameter4: java.lang.String[];

        z0 := @parameter5: boolean;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        entermonitor r0;

     label01:
        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("ACTIVITY ");

        $r15 = r4.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r4);

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(" pid=");

        $r16 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r16 == null goto label10;

        $r29 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r29.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke r3.<java.io.PrintWriter: void println(int)>($i1);

     label02:
        if z0 == 0 goto label04;

     label03:
        virtualinvoke r4.<com.android.server.am.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String)>(r3, r6);

     label04:
        exitmonitor r0;

     label05:
        $r18 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r18 == null goto label09;

        $r20 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r19 = $r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r19 == null goto label09;

        virtualinvoke r3.<java.io.PrintWriter: void flush()>();

     label06:
        r42 = new com.android.internal.os.TransferPipe;

        specialinvoke r42.<com.android.internal.os.TransferPipe: void <init>()>();

        r8 = r42;

     label07:
        $r21 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r24 = $r21.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r23 = virtualinvoke r8.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r26 = virtualinvoke $r23.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r25 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        r45 = (android.os.IBinder) $r25;

        interfaceinvoke $r24.<android.app.IApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>($r26, r45, r6, r5);

        virtualinvoke r8.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r2);

     label08:
        virtualinvoke r8.<com.android.internal.os.TransferPipe: void kill()>();

     label09:
        return;

     label10:
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("(not running)");

     label11:
        goto label02;

     label12:
        $r40 := @caughtexception;

        r7 = $r40;

     label13:
        exitmonitor r0;

     label14:
        throw r7;

     label15:
        $r38 := @caughtexception;

        r9 = $r38;

     label16:
        virtualinvoke r8.<com.android.internal.os.TransferPipe: void kill()>();

        throw r9;

     label17:
        $r27 := @caughtexception;

        r11 = $r27;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the activity: ");

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        return;

     label18:
        $r36 := @caughtexception;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the activity");

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label17;
        catch android.os.RemoteException from label06 to label07 with label18;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.io.IOException from label08 to label09 with label17;
        catch android.os.RemoteException from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.io.IOException from label16 to label17 with label17;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    private final void dumpApplicationMemoryUsageHeader(java.io.PrintWriter, long, long, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        long l0, l1;
        boolean z0, z1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("time,");

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>(l0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r1.<java.io.PrintWriter: void println(long)>(l1);

        return;

     label2:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Applications Memory Usage (kB):");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Realtime: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        return;
    }

    static final void dumpMemItems(java.io.PrintWriter, java.lang.String, java.lang.String, java.util.ArrayList, boolean, boolean)
    {
        java.io.PrintWriter r0;
        java.lang.String r1, r2, r5, $r8, $r12, $r14, $r16, $r20;
        java.util.ArrayList r3, $r9, $r15;
        boolean z0, z1, $z2, $z3;
        int i0, $i1, $i3;
        com.android.server.am.ActivityManagerService$MemItem r4;
        java.lang.Object[] r6;
        java.lang.Object $r7;
        long $l2, $l4, $l5;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.Long $r18;
        com.android.server.am.ActivityManagerService$19 $r19;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.ArrayList;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        if z0 == 0 goto label1;

        if z1 != 0 goto label1;

        $r19 = new com.android.server.am.ActivityManagerService$19;

        specialinvoke $r19.<com.android.server.am.ActivityManagerService$19: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r3, $r19);

     label1:
        i0 = 0;

     label2:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label9;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ActivityManagerService$MemItem) $r7;

        if z1 != 0 goto label5;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        r6 = newarray (java.lang.Object)[1];

        $l5 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        r6[0] = $r18;

        virtualinvoke r0.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%7d kB: ", r6);

        $r20 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String label>;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r20);

     label3:
        $r9 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        if $r9 == null goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("           ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        $r15 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems>;

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)>(r0, $r12, $r14, $r15, 1, z1);

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        $z2 = r4.<com.android.server.am.ActivityManagerService$MemItem: boolean isProc>;

        if $z2 == 0 goto label8;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("proc,");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r16 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r16);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $i3 = r4.<com.android.server.am.ActivityManagerService$MemItem: int id>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l4 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l4);

        $z3 = r4.<com.android.server.am.ActivityManagerService$MemItem: boolean hasActivities>;

        if $z3 == 0 goto label7;

        r5 = ",a";

     label6:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r5);

        goto label3;

     label7:
        r5 = ",e";

        goto label6;

     label8:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $r8 = r4.<com.android.server.am.ActivityManagerService$MemItem: java.lang.String shortLabel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l2 = r4.<com.android.server.am.ActivityManagerService$MemItem: long pss>;

        virtualinvoke r0.<java.io.PrintWriter: void println(long)>($l2);

        goto label3;

     label9:
        return;
    }

    private static final int dumpProcessList(java.io.PrintWriter, com.android.server.am.ActivityManagerService, java.util.List, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.io.PrintWriter r0;
        com.android.server.am.ActivityManagerService r1;
        java.util.List r2;
        java.lang.String r3, r4, r5, r6, r9, $r12, $r13, $r14;
        int i0, i1, $i2;
        com.android.server.am.ProcessRecord r7;
        java.lang.Object[] r8;
        java.lang.Object $r10;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r11;
        android.content.pm.ApplicationInfo $r15;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.am.ActivityManagerService;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        i0 = 0;

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = -1 + $i2;

     label1:
        if i1 < 0 goto label6;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (com.android.server.am.ProcessRecord) $r10;

        if r6 == null goto label3;

        $r15 = r7.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r14 = $r15.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 != 0 goto label3;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        r8 = newarray (java.lang.Object)[4];

        r8[0] = r3;

        $z0 = r7.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label5;

        r9 = r5;

     label4:
        r8[1] = r9;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r8[2] = $r11;

        $r12 = virtualinvoke r7.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        r8[3] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%s #%2d: %s", r8);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $z1 = r7.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label2;

        i0 = i0 + 1;

        goto label2;

     label5:
        r9 = r4;

        goto label4;

     label6:
        return i0;
    }

    private static final boolean dumpProcessOomList(java.io.PrintWriter, com.android.server.am.ActivityManagerService, java.util.List, java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        java.io.PrintWriter r0;
        com.android.server.am.ActivityManagerService r1;
        java.util.List r2;
        java.lang.String r3, r4, r5, r6, r9, r10, r11, $r27, $r28, $r31, $r32, $r35, $r39, $r42, $r44;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.util.ArrayList r7, $r15;
        int i0, i4, i7, $i11, $i12, $i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i41, $i42;
        long l1, l2, l3, l8, l9, l10, $l13, $l16, $l17, $l32, $l34, $l36, $l37, $l38, $l40, $l43, $l44, $l45, $l46, $l47;
        com.android.server.am.ProcessRecord r8, r14, $r45;
        char c5, c6;
        java.lang.Throwable r12, $r46;
        com.android.internal.os.BatteryStatsImpl r13;
        com.android.server.am.ActivityManagerService$18 $r16;
        java.lang.Object $r17, $r18, $r21, $r23, $r24, $r25, $r26, $r29, $r30, $r36, $r37, $r38, $r41, $r43, $r49, $r51;
        android.util.Pair $r19, $r20, $r50;
        java.lang.Integer $r22, $r48;
        byte $b35, $b39;
        android.content.pm.ApplicationInfo $r33;
        com.android.server.am.BatteryStatsService $r34;
        android.content.ComponentName $r40;
        android.util.ArrayMap $r47;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: com.android.server.am.ActivityManagerService;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        z0 := @parameter6: boolean;

        r6 := @parameter7: java.lang.String;

        $r15 = new java.util.ArrayList;

        $i11 = interfaceinvoke r2.<java.util.List: int size()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i11);

        r7 = $r15;

        i0 = 0;

     label01:
        $i12 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i12 goto label04;

        $r51 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r14 = (com.android.server.am.ProcessRecord) $r51;

        if r6 == null goto label03;

        $r47 = r14.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z11 = virtualinvoke $r47.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r6);

        if $z11 != 0 goto label03;

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $r50 = new android.util.Pair;

        $r49 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r50.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r49, $r48);

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);

        goto label02;

     label04:
        $i14 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i14 > 0 goto label05;

        return 0;

     label05:
        $r16 = new com.android.server.am.ActivityManagerService$18;

        specialinvoke $r16.<com.android.server.am.ActivityManagerService$18: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r7, $r16);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l13 = r1.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime>;

        l2 = l1 - $l13;

        $l16 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l17 = r1.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        l3 = $l16 - $l17;

        $i15 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        i4 = -1 + $i15;

     label06:
        if i4 < 0 goto label32;

        $r18 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r19 = (android.util.Pair) $r18;

        $r17 = $r19.<android.util.Pair: java.lang.Object first>;

        r8 = (com.android.server.am.ProcessRecord) $r17;

        $i18 = r8.<com.android.server.am.ProcessRecord: int setAdj>;

        r9 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeOomAdjString(int)>($i18);

        $i19 = r8.<com.android.server.am.ProcessRecord: int setSchedGroup>;

        tableswitch($i19)
        {
            case -1: goto label21;
            case 0: goto label20;
            default: goto label07;
        };

     label07:
        c5 = 63;

     label08:
        $z2 = r8.<com.android.server.am.ProcessRecord: boolean foregroundActivities>;

        if $z2 == 0 goto label22;

        c6 = 65;

     label09:
        $i20 = r8.<com.android.server.am.ProcessRecord: int curProcState>;

        r10 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i20);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        $z3 = r8.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z3 == 0 goto label24;

        r11 = r5;

     label10:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r11);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" #");

        $i22 = interfaceinvoke r2.<java.util.List: int size()>();

        $i21 = -1 + $i22;

        $r21 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r20 = (android.util.Pair) $r21;

        $r23 = $r20.<android.util.Pair: java.lang.Object second>;

        $r22 = (java.lang.Integer) $r23;

        $i24 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        i7 = $i21 - $i24;

        if i7 >= 10 goto label11;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

     label11:
        virtualinvoke r0.<java.io.PrintWriter: void print(int)>(i7);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r9);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c5);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(47);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(c6);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(47);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r10);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" trm:");

        $i23 = r8.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i23 >= 10 goto label12;

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

     label12:
        $i25 = r8.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i25);

        virtualinvoke r0.<java.io.PrintWriter: void print(char)>(32);

        $r27 = virtualinvoke r8.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r27);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $r28 = r8.<com.android.server.am.ProcessRecord: java.lang.String adjType>;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r28);

        virtualinvoke r0.<java.io.PrintWriter: void println(char)>(41);

        $r29 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r29 != null goto label13;

        $r38 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r38 == null goto label15;

     label13:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r24 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $z4 = $r24 instanceof android.content.ComponentName;

        if $z4 == 0 goto label25;

        $r41 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r40 = (android.content.ComponentName) $r41;

        $r39 = virtualinvoke $r40.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r39);

     label14:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("<=");

        $r26 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z5 = $r26 instanceof com.android.server.am.ProcessRecord;

        if $z5 == 0 goto label27;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("Proc{");

        $r36 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r45 = (com.android.server.am.ProcessRecord) $r36;

        $r44 = virtualinvoke $r45.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r44);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("}");

     label15:
        if z0 == 0 goto label19;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("oom: max=");

        $i30 = r8.<com.android.server.am.ProcessRecord: int maxAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i30);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" curRaw=");

        $i31 = r8.<com.android.server.am.ProcessRecord: int curRawAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i31);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" setRaw=");

        $i26 = r8.<com.android.server.am.ProcessRecord: int setRawAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i26);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" cur=");

        $i27 = r8.<com.android.server.am.ProcessRecord: int curAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i27);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" set=");

        $i28 = r8.<com.android.server.am.ProcessRecord: int setAdj>;

        virtualinvoke r0.<java.io.PrintWriter: void println(int)>($i28);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("state: cur=");

        $i29 = r8.<com.android.server.am.ProcessRecord: int curProcState>;

        $r31 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i29);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r31);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" set=");

        $i33 = r8.<com.android.server.am.ProcessRecord: int setProcState>;

        $r32 = staticinvoke <com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>($i33);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r32);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" lastPss=");

        $l34 = r8.<com.android.server.am.ProcessRecord: long lastPss>;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l34);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" lastCachedPss=");

        $l32 = r8.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        virtualinvoke r0.<java.io.PrintWriter: void println(long)>($l32);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("keeping=");

        $z6 = r8.<com.android.server.am.ProcessRecord: boolean keeping>;

        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>($z6);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" cached=");

        $z8 = r8.<com.android.server.am.ProcessRecord: boolean cached>;

        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>($z8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" empty=");

        $z7 = r8.<com.android.server.am.ProcessRecord: boolean empty>;

        virtualinvoke r0.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" hasAboveClient=");

        $z10 = r8.<com.android.server.am.ProcessRecord: boolean hasAboveClient>;

        virtualinvoke r0.<java.io.PrintWriter: void println(boolean)>($z10);

        $z9 = r8.<com.android.server.am.ProcessRecord: boolean keeping>;

        if $z9 != 0 goto label19;

        $l40 = r8.<com.android.server.am.ProcessRecord: long lastWakeTime>;

        $b39 = $l40 cmp 0L;

        if $b39 == 0 goto label18;

        $r34 = r1.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r13 = virtualinvoke $r34.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r13;

     label16:
        $r33 = r8.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i42 = $r33.<android.content.pm.ApplicationInfo: int uid>;

        $i41 = r8.<com.android.server.am.ProcessRecord: int pid>;

        l9 = virtualinvoke r13.<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>($i42, $i41, l1);

        exitmonitor r13;

     label17:
        $l46 = r8.<com.android.server.am.ProcessRecord: long lastWakeTime>;

        l10 = l9 - $l46;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("keep awake over ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l2, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" used ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l10, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l47 = 100L * l10;

        $l45 = $l47 / l2;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l45);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("%)");

     label18:
        $l36 = r8.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        $b35 = $l36 cmp 0L;

        if $b35 == 0 goto label19;

        $l37 = r8.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $l38 = r8.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        l8 = $l37 - $l38;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("run cpu over ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l3, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" used ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>(l8, r0);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $l43 = 100L * l8;

        $l44 = $l43 / l3;

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l44);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("%)");

     label19:
        i4 = i4 + -1;

        goto label06;

     label20:
        c5 = 66;

        goto label08;

     label21:
        c5 = 70;

        goto label08;

     label22:
        $z1 = r8.<com.android.server.am.ProcessRecord: boolean foregroundServices>;

        if $z1 == 0 goto label23;

        c6 = 83;

        goto label09;

     label23:
        c6 = 32;

        goto label09;

     label24:
        r11 = r4;

        goto label10;

     label25:
        $r25 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        if $r25 == null goto label26;

        $r43 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r42 = virtualinvoke $r43.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r42);

        goto label14;

     label26:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("{null}");

        goto label14;

     label27:
        $r30 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        if $r30 == null goto label28;

        $r37 = r8.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r35 = virtualinvoke $r37.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        goto label15;

     label28:
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("{null}");

        goto label15;

     label29:
        $r46 := @caughtexception;

        r12 = $r46;

     label30:
        exitmonitor r13;

     label31:
        throw r12;

     label32:
        return 1;

        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
    }

    public static java.io.File dumpStackTraces(boolean, java.util.ArrayList, com.android.internal.os.ProcessCpuTracker, android.util.SparseArray, java.lang.String[])
    {
        boolean z0, $z1, $z4, $z5;
        java.util.ArrayList r0;
        com.android.internal.os.ProcessCpuTracker r1;
        android.util.SparseArray r2;
        java.lang.String[] r3;
        java.lang.String r4, $r9, $r10, $r14;
        java.io.File r5, r7, $r8;
        java.io.IOException r6, $r12;
        int $i0;
        java.lang.StringBuilder $r11, $r13, $r15;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.util.ArrayList;

        r1 := @parameter2: com.android.internal.os.ProcessCpuTracker;

        r2 := @parameter3: android.util.SparseArray;

        r3 := @parameter4: java.lang.String[];

        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("dalvik.vm.stack-trace-file", null);

        if r4 == null goto label01;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r4);

        r5 = $r8;

     label03:
        r7 = virtualinvoke r5.<java.io.File: java.io.File getParentFile()>();

        $z1 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label05;

        virtualinvoke r5.<java.io.File: boolean mkdirs()>();

        $z5 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>(r7);

        if $z5 != 0 goto label05;

     label04:
        return null;

     label05:
        $r9 = virtualinvoke r7.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r9, 509, -1, -1);

     label06:
        if z0 == 0 goto label08;

     label07:
        $z4 = virtualinvoke r5.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label08;

        virtualinvoke r5.<java.io.File: boolean delete()>();

     label08:
        virtualinvoke r5.<java.io.File: boolean createNewFile()>();

        $r10 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r10, 438, -1, -1);

     label09:
        staticinvoke <com.android.server.am.ActivityManagerService: void dumpStackTraces(java.lang.String,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.lang.String[])>(r4, r0, r1, r2, r3);

        return r5;

     label10:
        $r12 := @caughtexception;

        r6 = $r12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to prepare ANR traces file: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r14, r6);

        return null;

        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    private static void dumpStackTraces(java.lang.String, java.util.ArrayList, com.android.internal.os.ProcessCpuTracker, android.util.SparseArray, java.lang.String[])
    {
        java.lang.String r0;
        java.util.ArrayList r1;
        com.android.internal.os.ProcessCpuTracker r2;
        android.util.SparseArray r3;
        java.lang.String[] r4;
        com.android.server.am.ActivityManagerService$5 r5, $r14;
        java.lang.Throwable r6, r11, r12, r15, $r17, $r21, $r22, $r23;
        int[] r7;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11;
        com.android.internal.os.ProcessCpuTracker$Stats r9;
        java.lang.InterruptedException r10, r13, $r19, $r20, $r24;
        java.lang.Object $r16;
        java.lang.Integer $r18;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: com.android.internal.os.ProcessCpuTracker;

        r3 := @parameter3: android.util.SparseArray;

        r4 := @parameter4: java.lang.String[];

        $r14 = new com.android.server.am.ActivityManagerService$5;

        specialinvoke $r14.<com.android.server.am.ActivityManagerService$5: void <init>(java.lang.String,int)>(r0, 8);

        r5 = $r14;

     label01:
        virtualinvoke r5.<android.os.FileObserver: void startWatching()>();

     label02:
        if r1 == null goto label14;

     label03:
        i7 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label04:
        i6 = 0;

     label05:
        if i6 >= i7 goto label14;

     label06:
        entermonitor r5;

     label07:
        $r16 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r18 = (java.lang.Integer) $r16;

        $i11 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i11, 3);

        virtualinvoke r5.<java.lang.Object: void wait(long)>(200L);

        exitmonitor r5;

     label08:
        i6 = i6 + 1;

        goto label05;

     label09:
        $r22 := @caughtexception;

        r15 = $r22;

     label10:
        exitmonitor r5;

     label11:
        throw r15;

     label12:
        $r20 := @caughtexception;

        r13 = $r20;

     label13:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>("ActivityManager", r13);

     label14:
        if r4 == null goto label22;

     label15:
        r7 = staticinvoke <android.os.Process: int[] getPidsForCommands(java.lang.String[])>(r4);

     label16:
        if r7 == null goto label22;

     label17:
        i0 = lengthof r7;

     label18:
        i1 = 0;

     label19:
        if i1 >= i0 goto label22;

     label20:
        $i10 = r7[i1];

        staticinvoke <android.os.Debug: void dumpNativeBacktraceToFile(int,java.lang.String)>($i10, r0);

     label21:
        i1 = i1 + 1;

        goto label19;

     label22:
        if r2 == null goto label45;

     label23:
        virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: void init()>();

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: void update()>();

     label24:
        entermonitor r2;

     label25:
        virtualinvoke r2.<java.lang.Object: void wait(long)>(500L);

        exitmonitor r2;

     label26:
        virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: void update()>();

        i2 = virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: int countWorkingStats()>();

     label27:
        i3 = 0;

        i4 = 0;

     label28:
        if i4 >= i2 goto label45;

        if i3 >= 5 goto label45;

     label29:
        r9 = virtualinvoke r2.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getWorkingStats(int)>(i4);

        $i8 = r9.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        i5 = virtualinvoke r3.<android.util.SparseArray: int indexOfKey(int)>($i8);

     label30:
        if i5 < 0 goto label33;

        i3 = i3 + 1;

     label31:
        entermonitor r5;

     label32:
        $i9 = r9.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i9, 3);

        virtualinvoke r5.<java.lang.Object: void wait(long)>(200L);

        exitmonitor r5;

     label33:
        i4 = i4 + 1;

        goto label28;

     label34:
        $r21 := @caughtexception;

        r11 = $r21;

     label35:
        exitmonitor r2;

     label36:
        throw r11;

     label37:
        $r19 := @caughtexception;

        goto label26;

     label38:
        $r17 := @caughtexception;

        r12 = $r17;

     label39:
        exitmonitor r5;

     label40:
        throw r12;

     label41:
        $r24 := @caughtexception;

        r10 = $r24;

     label42:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>("ActivityManager", r10);

     label43:
        goto label33;

     label44:
        $r23 := @caughtexception;

        r6 = $r23;

        virtualinvoke r5.<android.os.FileObserver: void stopWatching()>();

        throw r6;

     label45:
        virtualinvoke r5.<android.os.FileObserver: void stopWatching()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label44;
        catch java.lang.InterruptedException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label04 with label44;
        catch java.lang.InterruptedException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label44;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.InterruptedException from label11 to label12 with label12;
        catch java.lang.Throwable from label11 to label12 with label44;
        catch java.lang.Throwable from label13 to label14 with label44;
        catch java.lang.Throwable from label15 to label16 with label44;
        catch java.lang.Throwable from label17 to label18 with label44;
        catch java.lang.Throwable from label20 to label21 with label44;
        catch java.lang.Throwable from label23 to label24 with label44;
        catch java.lang.InterruptedException from label24 to label25 with label37;
        catch java.lang.Throwable from label24 to label25 with label44;
        catch java.lang.Throwable from label25 to label26 with label34;
        catch java.lang.Throwable from label26 to label27 with label44;
        catch java.lang.Throwable from label29 to label30 with label44;
        catch java.lang.InterruptedException from label31 to label32 with label41;
        catch java.lang.Throwable from label31 to label32 with label44;
        catch java.lang.Throwable from label32 to label33 with label38;
        catch java.lang.Throwable from label35 to label36 with label34;
        catch java.lang.InterruptedException from label36 to label37 with label37;
        catch java.lang.Throwable from label36 to label37 with label44;
        catch java.lang.Throwable from label39 to label40 with label38;
        catch java.lang.InterruptedException from label40 to label41 with label41;
        catch java.lang.Throwable from label40 to label41 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
    }

    private void fillInProcMemInfo(com.android.server.am.ProcessRecord, android.app.ActivityManager$RunningAppProcessInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r4;
        android.app.ActivityManager$RunningAppProcessInfo r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.content.pm.ApplicationInfo $r3;
        boolean $z0;
        java.util.ArrayList $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.app.ActivityManager$RunningAppProcessInfo;

        $i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int pid> = $i0;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int uid> = $i1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r4 != r1 goto label1;

        $i12 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i11 = 1 | $i12;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i11;

     label1:
        $z0 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label2;

        $i10 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i9 = 2 | $i10;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i9;

     label2:
        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label3;

        $i7 = r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags>;

        $i8 = 4 | $i7;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int flags> = $i8;

     label3:
        $i3 = r1.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int lastTrimLevel> = $i3;

        $i4 = r1.<com.android.server.am.ProcessRecord: int curAdj>;

        $i5 = staticinvoke <com.android.server.am.ActivityManagerService: int oomAdjToImportance(int,android.app.ActivityManager$RunningAppProcessInfo)>($i4, r2);

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int importance> = $i5;

        $i6 = r1.<com.android.server.am.ProcessRecord: int adjTypeCode>;

        r2.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonCode> = $i6;

        return;
    }

    private com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1, $r25;
        java.lang.String r2, $r17;
        java.lang.Throwable r3, $r24;
        int i0, i1, i2, i3, $i4, $i5;
        android.util.SparseArray r4;
        com.android.server.am.ProcessRecord r5;
        com.android.internal.app.ProcessMap $r6, $r18;
        android.util.ArrayMap $r7, $r20;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.Object $r19, $r23;
        android.app.IApplicationThread $r21, $r22;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label01;

        return null;

     label01:
        entermonitor r0;

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

     label03:
        i1 = 0;

     label04:
        if i1 >= i0 goto label15;

     label05:
        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r20 = virtualinvoke $r18.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r19 = virtualinvoke $r20.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r4 = (android.util.SparseArray) $r19;

        i2 = virtualinvoke r4.<android.util.SparseArray: int size()>();

     label06:
        i3 = 0;

     label07:
        if i3 >= i2 goto label14;

     label08:
        $r23 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r5 = (com.android.server.am.ProcessRecord) $r23;

        $r21 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r21 == null goto label13;

        $r22 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r25 = interfaceinvoke $r22.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r25 != r1 goto label13;

        exitmonitor r0;

     label09:
        return r5;

     label10:
        $r24 := @caughtexception;

        r3 = $r24;

     label11:
        exitmonitor r0;

     label12:
        throw r3;

     label13:
        i3 = i3 + 1;

        goto label07;

     label14:
        i1 = i1 + 1;

        goto label04;

     label15:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find mystery application for ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        exitmonitor r0;

     label16:
        return null;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
    }

    private com.android.server.am.UriPermission findOrCreateUriPermissionLocked(java.lang.String, java.lang.String, int, android.net.Uri)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0;
        android.net.Uri r3;
        android.util.ArrayMap r4;
        com.android.server.am.UriPermission r5, $r9;
        android.util.SparseArray $r6, $r11;
        java.lang.Object $r7, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.net.Uri;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (android.util.ArrayMap) $r7;

        if r4 != null goto label1;

        r4 = staticinvoke <com.google.android.collect.Maps: android.util.ArrayMap newArrayMap()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r4);

     label1:
        $r8 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (com.android.server.am.UriPermission) $r8;

        if r5 != null goto label2;

        $r9 = new com.android.server.am.UriPermission;

        specialinvoke $r9.<com.android.server.am.UriPermission: void <init>(java.lang.String,java.lang.String,int,android.net.Uri)>(r1, r2, i0, r3);

        r5 = $r9;

        virtualinvoke r4.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5);

     label2:
        return r5;
    }

    private com.android.server.am.ProcessRecord findProcessLocked(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.server.am.ProcessRecord r3, r6;
        android.util.SparseArray r5, r7, $r10;
        java.lang.Throwable r8, $r16;
        java.lang.Object $r9, $r12, $r14, $r15;
        com.android.internal.app.ProcessMap $r11;
        android.util.ArrayMap $r13;
        java.lang.NumberFormatException $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i4, $i5, i0, 1, 1, r2, null);

        r3 = null;

     label01:
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r7;

     label02:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r9 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ProcessRecord) $r9;

        exitmonitor r7;

     label03:
        if r3 != null goto label05;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r13 = virtualinvoke $r11.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r12 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.util.SparseArray) $r12;

        if r5 == null goto label05;

        $i6 = virtualinvoke r5.<android.util.SparseArray: int size()>();

        if $i6 <= 0 goto label05;

        $r14 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(0);

        r3 = (com.android.server.am.ProcessRecord) $r14;

        if i1 == -1 goto label05;

        $i8 = r3.<com.android.server.am.ProcessRecord: int userId>;

        if $i8 == i1 goto label05;

        i2 = 1;

     label04:
        $i7 = virtualinvoke r5.<android.util.SparseArray: int size()>();

        if i2 >= $i7 goto label05;

        $r15 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r6 = (com.android.server.am.ProcessRecord) $r15;

        $i9 = r6.<com.android.server.am.ProcessRecord: int userId>;

        if $i9 != i1 goto label10;

        r3 = r6;

     label05:
        return r3;

     label06:
        $r16 := @caughtexception;

        r8 = $r16;

     label07:
        exitmonitor r7;

     label08:
        throw r8;

     label09:
        $r17 := @caughtexception;

        goto label03;

     label10:
        i2 = i2 + 1;

        goto label04;

        catch java.lang.NumberFormatException from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.NumberFormatException from label08 to label09 with label09;
    }

    private com.android.server.am.UriPermission findUriPermissionLocked(int, android.net.Uri)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        android.net.Uri r1;
        android.util.ArrayMap r2;
        android.util.SparseArray $r3;
        java.lang.Object $r4, $r5;
        com.android.server.am.UriPermission $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.util.ArrayMap) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (com.android.server.am.UriPermission) $r5;

        return $r6;

     label1:
        return null;
    }

    private final boolean finishReceiverLocked(android.os.IBinder, int, java.lang.String, android.os.Bundle, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0;
        java.lang.String r2;
        android.os.Bundle r3;
        boolean z0, $z1;
        com.android.server.am.BroadcastRecord r4;
        com.android.server.am.BroadcastQueue $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        z0 := @parameter4: boolean;

        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord broadcastRecordForReceiverLocked(android.os.IBinder)>(r1);

        if r4 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "finishReceiver called but not found on queue");

        return 0;

     label1:
        $r5 = r4.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        $z1 = virtualinvoke $r5.<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>(r4, i0, r2, r3, z0, 0);

        return $z1;
    }

    private void forceStopPackageLocked(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Intent r3, $r4;
        boolean $z1;
        android.net.Uri $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, $i1, 0, 0, 1, 0, 0, $i2, r2);

        $r4 = new android.content.Intent;

        $r5 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r1, null);

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.PACKAGE_RESTARTED", $r5);

        r3 = $r4;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z1 != 0 goto label1;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

     label1:
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i0);

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i3);

        $i5 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r3, null, null, 0, null, null, null, -1, 0, 0, $i5, 1000, $i4);

        return;
    }

    private final boolean forceStopPackageLocked(java.lang.String, int, boolean, boolean, boolean, boolean, boolean, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, r3, $r31, $r44, $r53;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i22;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z11, $z12, $z13;
        java.util.ArrayList r4, $r16;
        java.util.Iterator r5;
        com.android.server.AttributeCache r6;
        com.android.server.am.PendingIntentRecord r7;
        java.lang.ref.WeakReference r8, $r33;
        android.util.ArrayMap r9;
        android.util.SparseArray r10, $r41;
        java.lang.StringBuilder $r12, $r13, $r14, $r36, $r37, $r38, $r42, $r43, $r45, $r46, $r47, $r50, $r51, $r54, $r55, $r56, $r57, $r58, $r59, $r60;
        com.android.server.am.ActivityStackSupervisor $r15, $r20, $r21;
        com.android.server.am.ProviderMap $r17;
        com.android.server.am.ActiveServices $r18;
        java.util.HashMap $r19, $r23;
        java.util.Collection $r22;
        java.lang.Object $r24, $r25, $r40, $r48;
        com.android.server.am.PendingIntentRecord$Key $r26, $r28, $r30, $r32, $r35;
        com.android.server.am.ActivityRecord $r27, $r29;
        java.util.HashSet $r34;
        com.android.server.am.ContentProviderRecord $r39;
        com.android.internal.app.ProcessMap $r49;
        android.os.RemoteException $r61;
        android.content.pm.IPackageManager $r62;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        z4 := @parameter6: boolean;

        i1 := @parameter7: int;

        r2 := @parameter8: java.lang.String;

        if i1 != -1 goto label01;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Can\'t force stop all processes of all users, that is insane!");

     label01:
        if i0 >= 0 goto label04;

        if r1 == null goto label04;

     label02:
        $r62 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i22 = interfaceinvoke $r62.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, 0);

        i11 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i22);

     label03:
        i0 = i11;

     label04:
        if z2 == 0 goto label15;

        if r1 == null goto label10;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force stopping ");

        $r60 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appid=");

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user=");

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r53);

     label05:
        $r49 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        r9 = virtualinvoke $r49.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i20 = virtualinvoke r9.<android.util.ArrayMap: int size()>();

        i4 = -1 + $i20;

     label06:
        if i4 < 0 goto label15;

        $r48 = virtualinvoke r9.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r10 = (android.util.SparseArray) $r48;

        $i18 = virtualinvoke r10.<android.util.SparseArray: int size()>();

        i5 = -1 + $i18;

     label07:
        if i5 < 0 goto label13;

        i7 = virtualinvoke r10.<android.util.SparseArray: int keyAt(int)>(i5);

        if r1 == null goto label12;

        if i1 != -1 goto label11;

        i9 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i7);

        i10 = i0;

        z6 = 0;

        if i9 != i10 goto label08;

        z6 = 1;

     label08:
        if z6 == 0 goto label09;

        virtualinvoke r10.<android.util.SparseArray: void removeAt(int)>(i5);

     label09:
        i5 = i5 + -1;

        goto label07;

     label10:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force stopping u");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r44);

        goto label05;

     label11:
        i8 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i1, i0);

        z6 = 0;

        if i7 != i8 goto label08;

        z6 = 1;

        goto label08;

     label12:
        i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i7);

        z6 = 0;

        if i6 != i1 goto label08;

        z6 = 1;

        goto label08;

     label13:
        $i19 = virtualinvoke r10.<android.util.SparseArray: int size()>();

        if $i19 != 0 goto label14;

        virtualinvoke r9.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i4);

     label14:
        i4 = i4 + -1;

        goto label06;

     label15:
        if r1 != null goto label17;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stop user ");

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        r3 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        z5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String)>(r1, i0, i1, -100, z0, 1, z2, z3, r3);

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z7 = virtualinvoke $r15.<com.android.server.am.ActivityStackSupervisor: boolean forceStopPackageLocked(java.lang.String,boolean,boolean,int)>(r1, z2, z3, i1);

        if $z7 == 0 goto label19;

        if z2 != 0 goto label18;

        return 1;

     label17:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stop ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label16;

     label18:
        z5 = 1;

     label19:
        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $z8 = virtualinvoke $r18.<com.android.server.am.ActiveServices: boolean forceStopLocked(java.lang.String,int,boolean,boolean)>(r1, i1, z3, z2);

        if $z8 == 0 goto label21;

        if z2 != 0 goto label20;

        return 1;

     label20:
        z5 = 1;

     label21:
        if r1 != null goto label22;

        $r41 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r41.<android.util.SparseArray: void remove(int)>(i1);

     label22:
        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r4 = $r16;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $z9 = virtualinvoke $r17.<com.android.server.am.ProviderMap: boolean collectForceStopProviders(java.lang.String,int,boolean,boolean,int,java.util.ArrayList)>(r1, i0, z2, z3, i1, r4);

        if $z9 == 0 goto label24;

        if z2 != 0 goto label23;

        return 1;

     label23:
        z5 = 1;

     label24:
        i2 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i3 = 0;

     label25:
        if i3 >= i2 goto label26;

        $r40 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r39 = (com.android.server.am.ContentProviderRecord) $r40;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(null, $r39, 1);

        i3 = i3 + 1;

        goto label25;

     label26:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionsForPackageLocked(java.lang.String,int,boolean)>(r1, i1, 0);

        if r1 == null goto label27;

        if z4 == 0 goto label35;

     label27:
        $r19 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $i12 = virtualinvoke $r19.<java.util.HashMap: int size()>();

        if $i12 <= 0 goto label35;

        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r22 = virtualinvoke $r23.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

     label28:
        $z12 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label35;

        $r25 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.ref.WeakReference) $r25;

        if r8 != null goto label29;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

        goto label28;

     label29:
        $r24 = virtualinvoke r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (com.android.server.am.PendingIntentRecord) $r24;

        if r7 != null goto label30;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

        goto label28;

     label30:
        if r1 != null goto label32;

        $r32 = r7.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $i16 = $r32.<com.android.server.am.PendingIntentRecord$Key: int userId>;

        if $i16 != i1 goto label28;

     label31:
        if z2 != 0 goto label34;

        return 1;

     label32:
        $i13 = r7.<com.android.server.am.PendingIntentRecord: int uid>;

        $i14 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i13);

        if $i14 != i0 goto label28;

        if i1 == -1 goto label33;

        $r35 = r7.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $i15 = $r35.<com.android.server.am.PendingIntentRecord$Key: int userId>;

        if $i15 != i1 goto label28;

     label33:
        $r30 = r7.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r31 = $r30.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $z13 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z13 != 0 goto label31;

        goto label28;

     label34:
        z5 = 1;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

        r7.<com.android.server.am.PendingIntentRecord: boolean canceled> = 1;

        $r26 = r7.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r27 = $r26.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.ActivityRecord activity>;

        if $r27 == null goto label28;

        $r28 = r7.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r29 = $r28.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.ActivityRecord activity>;

        $r34 = $r29.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        $r33 = r7.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r34.<java.util.HashSet: boolean remove(java.lang.Object)>($r33);

        goto label28;

     label35:
        if z2 == 0 goto label37;

        if z1 == 0 goto label36;

        if r1 == null goto label36;

        r6 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        if r6 == null goto label36;

        virtualinvoke r6.<com.android.server.AttributeCache: void removePackage(java.lang.String)>(r1);

     label36:
        $z11 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z11 == 0 goto label37;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r21.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r20.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

     label37:
        return z5;

     label38:
        $r61 := @caughtexception;

        goto label04;

        catch android.os.RemoteException from label02 to label03 with label38;
    }

    private void forceStopUserLocked(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        java.lang.String r1;
        android.content.Intent r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(null, -1, 0, 0, 1, 0, 0, i0, r1);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STOPPED");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r2, null, null, 0, null, null, null, -1, 0, 0, $i1, 1000, -1);

        return;
    }

    private final java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.util.List r3, r7;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.pm.ProviderInfo r4;
        boolean z0, $z1, $z3;
        android.content.ComponentName r5, $r17;
        com.android.server.am.ContentProviderRecord r6, $r32;
        android.content.pm.IPackageManager $r8;
        java.lang.String $r9, $r14, $r15, $r16, $r18, $r19, $r26, $r27, $r28, $r29;
        android.util.ArrayMap $r10, $r11, $r22;
        java.lang.Object $r12;
        android.content.pm.ApplicationInfo $r13, $r21, $r24, $r31;
        com.android.server.am.ProviderMap $r20, $r30;
        com.android.server.am.ProcessStatsService $r25;
        android.os.RemoteException $r33;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

     label01:
        $r8 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r9 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i3 = r1.<com.android.server.am.ProcessRecord: int uid>;

        r7 = interfaceinvoke $r8.<android.content.pm.IPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>($r9, $i3, 3072);

     label02:
        r3 = r7;

     label03:
        i0 = r1.<com.android.server.am.ProcessRecord: int userId>;

        if r3 == null goto label10;

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $r10 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r11 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $i5 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        $i4 = i1 + $i5;

        virtualinvoke $r10.<android.util.ArrayMap: void ensureCapacity(int)>($i4);

        i2 = 0;

     label04:
        if i2 >= i1 goto label10;

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (android.content.pm.ProviderInfo) $r12;

        $r15 = r4.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r13 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r14 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        $i6 = r4.<android.content.pm.ProviderInfo: int flags>;

        z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r15, $r13, $r14, $i6);

        if z0 == 0 goto label06;

        $i7 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $i8 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i7);

        if $i8 == 0 goto label06;

        interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(i2);

        i1 = i1 + -1;

        i2 = i2 + -1;

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        $r17 = new android.content.ComponentName;

        $r19 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r16 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r17.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r19, $r16);

        r5 = $r17;

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r6 = virtualinvoke $r20.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r5, i0);

        if r6 != null goto label07;

        $r32 = new com.android.server.am.ContentProviderRecord;

        $r31 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        specialinvoke $r32.<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo,android.content.ComponentName,boolean)>(r0, r4, $r31, r5, z0);

        r6 = $r32;

        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r30.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>(r5, r6);

     label07:
        $r22 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r18 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r6);

        $z1 = r4.<android.content.pm.ProviderInfo: boolean multiprocess>;

        if $z1 == 0 goto label08;

        $r27 = "android";

        $r29 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z3 != 0 goto label09;

     label08:
        $r21 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r26 = $r21.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,com.android.server.am.ProcessStatsService)>($r26, $r25);

     label09:
        $r24 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r28 = $r24.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>($r28);

        goto label05;

     label10:
        return r3;

     label11:
        $r33 := @caughtexception;

        r3 = null;

        goto label03;

        catch android.os.RemoteException from label01 to label02 with label11;
    }

    private android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1, $i2;
        java.lang.String r2, r3, r4, r5, $r8;
        android.app.ActivityManager$ProcessErrorStateInfo r6, $r7;
        android.content.pm.ApplicationInfo $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        $r7 = new android.app.ActivityManager$ProcessErrorStateInfo;

        specialinvoke $r7.<android.app.ActivityManager$ProcessErrorStateInfo: void <init>()>();

        r6 = $r7;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: int condition> = i0;

        $r8 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String processName> = $r8;

        $i1 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: int pid> = $i1;

        $r9 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: int uid> = $i2;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String tag> = r2;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String shortMsg> = r3;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String longMsg> = r4;

        r6.<android.app.ActivityManager$ProcessErrorStateInfo: java.lang.String stackTrace> = r5;

        return r6;
    }

    private static java.io.File getCalledPreBootReceiversFile()
    {
        java.io.File $r0, $r1, $r2;

        $r0 = new java.io.File;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "system");

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "called_pre_boots.dat");

        return $r0;
    }

    private com.android.server.am.ActivityRecord getCallingRecordLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        return $r3;
    }

    private java.util.HashMap getCommonServicesLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.HashMap $r1, $r2, $r3, $r4, $r7, $r10;
        android.os.IBinder $r5, $r8, $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        if $r1 != null goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs> = $r3;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("package", $r5);

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("window", $r8);

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        $r11 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("alarm");

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("alarm", $r11);

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mAppBindArgs>;

        return $r2;
    }

    private android.app.IActivityManager$ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        int i0;
        android.app.IActivityManager$ContentProviderHolder $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        $r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread,java.lang.String,android.os.IBinder,boolean,int)>(null, r1, r2, 1, i0);

        return $r3;
    }

    private final android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread, java.lang.String, android.os.IBinder, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1, $r95, $r99, $r136;
        java.lang.String r2, r8, r17, r20, $r41, $r47, $r51, $r53, $r54, $r65, $r66, $r67, $r69, $r74, $r75, $r81, $r87, $r92, $r96, $r108, $r109, $r112, $r116, $r121, $r126, $r129, $r142, $r154, $r157;
        android.os.IBinder r3;
        boolean z0, z1, z2, z3, z4, $z5, $z7, $z8, $z9, $z10, $z11, $z12;
        int i0, i2, i3, $i5, $i7, $i8, $i9, $i10, $i12, $i13, $i17, $i18, $i19, $i20, $i21, $i22, $i24;
        com.android.server.am.ProcessRecord r4, r19, $r35, $r131, $r132, $r134, $r135, $r137, $r138, $r139;
        com.android.server.am.ContentProviderRecord r5, r18, $r93;
        android.content.pm.ProviderInfo r6, r30;
        com.android.server.am.ContentProviderConnection r7;
        java.lang.Throwable r9, r10, r13, r22, $r141, $r162, $r164, $r166;
        long l1, l4;
        android.app.IActivityManager$ContentProviderHolder r12, r28, r32;
        java.lang.Object[] r14;
        android.content.ComponentName r16, r24, $r58, $r77, $r130;
        android.content.pm.ApplicationInfo r23, r27, $r37, $r40, $r43, $r48, $r52, $r55, $r60, $r61, $r68, $r70, $r76, $r84, $r88, $r91, $r94, $r102, $r105, $r160;
        java.lang.IllegalArgumentException r25, $r114, $r163;
        com.android.server.am.ProviderMap $r31, $r62, $r64, $r72;
        android.content.IContentProvider $r33;
        java.lang.StringBuilder $r34, $r36, $r38, $r39, $r42, $r44, $r45, $r46, $r78, $r79, $r80, $r82, $r83, $r85, $r86, $r89, $r103, $r104, $r106, $r107, $r110, $r111, $r113, $r117, $r118, $r119, $r120, $r122, $r123, $r124, $r125, $r127, $r128, $r133, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r155, $r156, $r158, $r159, $r161;
        java.lang.Integer $r49, $r50;
        android.content.pm.IPackageManager $r56, $r71, $r90;
        java.lang.Object $r57, $r101;
        android.util.SparseArray $r59;
        java.util.ArrayList $r63, $r73, $r100;
        android.util.ArrayMap $r97;
        java.lang.SecurityException $r115, $r150, $r151;
        android.os.RemoteException $r140, $r152, $r165, $r167;
        java.lang.InterruptedException $r153;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        entermonitor r0;

        r4 = null;

        if r1 == null goto label007;

     label001:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

     label002:
        if r4 != null goto label007;

     label003:
        $r150 = new java.lang.SecurityException;

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        $r148 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r147 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r146 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i24 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r145 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when getting content provider ");

        $r143 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r142 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r150.<java.lang.SecurityException: void <init>(java.lang.String)>($r142);

        throw $r150;

     label004:
        $r141 := @caughtexception;

        r9 = $r141;

     label005:
        exitmonitor r0;

     label006:
        throw r9;

     label007:
        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r5 = virtualinvoke $r31.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r2, i0);

     label008:
        if r5 == null goto label107;

        z1 = 1;

     label009:
        r6 = null;

        r7 = null;

        if z1 == 0 goto label024;

     label010:
        r6 = r5.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        r8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord)>(r6, r4);

     label011:
        if r8 == null goto label013;

     label012:
        $r151 = new java.lang.SecurityException;

        specialinvoke $r151.<java.lang.SecurityException: void <init>(java.lang.String)>(r8);

        throw $r151;

     label013:
        if r4 == null goto label016;

     label014:
        $z12 = virtualinvoke r5.<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>(r4);

        if $z12 == 0 goto label016;

        r32 = virtualinvoke r5.<com.android.server.am.ContentProviderRecord: android.app.IActivityManager$ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(null);

        r32.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider> = null;

        exitmonitor r0;

     label015:
        return r32;

     label016:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r4, r5, r3, z0);

     label017:
        if r7 == null goto label019;

     label018:
        $i20 = r7.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i19 = r7.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i21 = $i20 + $i19;

        if $i21 != 1 goto label019;

        $r135 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r135 == null goto label019;

        $i18 = r4.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i18 > 2 goto label019;

        $r134 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r134, 0, null);

     label019:
        $r132 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r132 == null goto label023;

        $r131 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $z11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>($r131);

        if $z11 != 0 goto label023;

        $r133 = new java.lang.StringBuilder;

        specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();

        $r128 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Existing provider ");

        $r130 = r5.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r129 = virtualinvoke $r130.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r125 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r124 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is crashing; detaching ");

        $r127 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r126 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r126);

        z4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r7, r5, r3, z0);

        $r137 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r138 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i22 = $r138.<com.android.server.am.ProcessRecord: int pid>;

        $r139 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $r136 = $r139.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>($r137, $i22, $r136);

     label020:
        if z4 != 0 goto label108;

     label021:
        exitmonitor r0;

     label022:
        return null;

     label023:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label024:
        if z1 != 0 goto label069;

     label025:
        $r56 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r30 = interfaceinvoke $r56.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r2, 3072, i0);

     label026:
        r6 = r30;

     label027:
        if r6 != null goto label030;

     label028:
        exitmonitor r0;

     label029:
        return null;

     label030:
        $r54 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r55 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r53 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        $i10 = r6.<android.content.pm.ProviderInfo: int flags>;

        z2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>($r54, $r55, $r53, $i10);

     label031:
        if z2 == 0 goto label032;

        i0 = 0;

     label032:
        $r61 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r60 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r61, i0);

        r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo> = $r60;

        r17 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord)>(r6, r4);

     label033:
        if r17 == null goto label035;

     label034:
        $r115 = new java.lang.SecurityException;

        specialinvoke $r115.<java.lang.SecurityException: void <init>(java.lang.String)>(r17);

        throw $r115;

     label035:
        $z5 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z5 != 0 goto label036;

        $z8 = r0.<com.android.server.am.ActivityManagerService: boolean mDidUpdate>;

        if $z8 != 0 goto label036;

        $z9 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate>;

        if $z9 != 0 goto label036;

        $r116 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $z10 = virtualinvoke $r116.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z10 != 0 goto label036;

        $r114 = new java.lang.IllegalArgumentException;

        specialinvoke $r114.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attempt to launch content provider before system ready");

        throw $r114;

     label036:
        $r59 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r57 = virtualinvoke $r59.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r57 != null goto label038;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r102 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r108 = $r102.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r107 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r106 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r105 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i17 = $r105.<android.content.pm.ApplicationInfo: int uid>;

        $r119 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r117 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r122 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r120 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r121);

        exitmonitor r0;

     label037:
        return null;

     label038:
        $r58 = new android.content.ComponentName;

        $r66 = r6.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r65 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r58.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r66, $r65);

        r16 = $r58;

        $r64 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r18 = virtualinvoke $r64.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r16, i0);

     label039:
        if r18 != null goto label046;

        z3 = 1;

     label040:
        if z3 == 0 goto label106;

     label041:
        $r90 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r91 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r92 = $r91.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r27 = interfaceinvoke $r90.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r92, 1024, i0);

     label042:
        if r27 != null goto label047;

     label043:
        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package info for content provider ");

        $r109 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r113 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r112 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r112);

     label044:
        exitmonitor r0;

     label045:
        return null;

     label046:
        z3 = 0;

        goto label040;

     label047:
        $r93 = new com.android.server.am.ContentProviderRecord;

        $r94 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>(r27, i0);

        specialinvoke $r93.<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo,android.content.ComponentName,boolean)>(r0, r6, $r94, r16, z2);

        r5 = $r93;

     label048:
        if r4 == null goto label051;

     label049:
        $z7 = virtualinvoke r5.<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>(r4);

        if $z7 == 0 goto label051;

        r28 = virtualinvoke r5.<com.android.server.am.ContentProviderRecord: android.app.IActivityManager$ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(null);

        exitmonitor r0;

     label050:
        return r28;

     label051:
        $r63 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i3 = virtualinvoke $r63.<java.util.ArrayList: int size()>();

     label052:
        i2 = 0;

     label053:
        if i2 >= i3 goto label055;

     label054:
        $r100 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r101 = virtualinvoke $r100.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r101 != r5 goto label076;

     label055:
        if i2 < i3 goto label064;

     label056:
        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label057:
        $r71 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r70 = r5.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r69 = $r70.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke $r71.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r69, 0, i0);

     label058:
        $r67 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        $r68 = r5.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $i12 = $r68.<android.content.pm.ApplicationInfo: int uid>;

        r19 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r67, $i12, 0);

     label059:
        if r19 == null goto label082;

     label060:
        $r95 = r19.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r95 == null goto label082;

        $r97 = r19.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r96 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        virtualinvoke $r97.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r96, r5);

     label061:
        $r99 = r19.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r99.<android.app.IApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>(r6);

     label062:
        r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp> = r19;

        $r73 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r73.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label063:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

     label064:
        if z3 == 0 goto label066;

     label065:
        $r72 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r72.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>(r16, r5);

     label066:
        $r62 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r62.<com.android.server.am.ProviderMap: void putProviderByName(java.lang.String,com.android.server.am.ContentProviderRecord)>(r2, r5);

        r7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r4, r5, r3, z0);

     label067:
        if r7 == null goto label069;

     label068:
        r7.<com.android.server.am.ContentProviderConnection: boolean waiting> = 1;

     label069:
        exitmonitor r0;

     label070:
        entermonitor r5;

     label071:
        $r33 = r5.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        if $r33 != null goto label096;

        $r35 = r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r35 != null goto label087;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r40 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r41 = $r40.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r36 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r37 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r37.<android.content.pm.ApplicationInfo: int uid>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": launching app became null");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r47);

        r14 = newarray (java.lang.Object)[4];

        $r43 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r43.<android.content.pm.ApplicationInfo: int uid>;

        $i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i7);

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        r14[0] = $r50;

        $r52 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r51 = $r52.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r14[1] = $r51;

        $r48 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r48.<android.content.pm.ApplicationInfo: int uid>;

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        r14[2] = $r49;

        r14[3] = r2;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30036, r14);

        exitmonitor r5;

     label072:
        return null;

     label073:
        $r164 := @caughtexception;

        r10 = $r164;

     label074:
        exitmonitor r5;

     label075:
        throw r10;

     label076:
        i2 = i2 + 1;

        goto label053;

     label077:
        $r163 := @caughtexception;

        r25 = $r163;

     label078:
        $r161 = new java.lang.StringBuilder;

        specialinvoke $r161.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r160 = r5.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r157 = $r160.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r158 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r157);

        $r155 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r154 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r154);

     label079:
        goto label058;

     label080:
        $r162 := @caughtexception;

        r22 = $r162;

     label081:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw r22;

     label082:
        r20 = r6.<android.content.pm.ProviderInfo: java.lang.String processName>;

        r23 = r5.<com.android.server.am.ContentProviderRecord: android.content.pm.ApplicationInfo appInfo>;

        $r77 = new android.content.ComponentName;

        $r76 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r74 = $r76.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r75 = r6.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r77.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r74, $r75);

        r24 = $r77;

        r19 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>(r20, r23, 0, 0, "content provider", r24, 0, 0, 0);

     label083:
        if r19 != null goto label062;

     label084:
        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to launch app ");

        $r84 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r87 = $r84.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r88 = r6.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i13 = $r88.<android.content.pm.ApplicationInfo: int uid>;

        $r78 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for provider ");

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": process is bad");

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r81);

     label085:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        exitmonitor r0;

     label086:
        return null;

     label087:
        if r7 == null goto label089;

     label088:
        r7.<com.android.server.am.ContentProviderConnection: boolean waiting> = 1;

     label089:
        virtualinvoke r5.<java.lang.Object: void wait()>();

     label090:
        if r7 == null goto label071;

     label091:
        r7.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

     label092:
        goto label071;

     label093:
        $r166 := @caughtexception;

        r13 = $r166;

        if r7 == null goto label095;

     label094:
        r7.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

     label095:
        throw r13;

     label096:
        exitmonitor r5;

     label097:
        if r5 == null goto label099;

        r12 = virtualinvoke r5.<com.android.server.am.ContentProviderRecord: android.app.IActivityManager$ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>(r7);

     label098:
        return r12;

     label099:
        r12 = null;

        goto label098;

     label100:
        $r153 := @caughtexception;

        if r7 == null goto label071;

     label101:
        r7.<com.android.server.am.ContentProviderConnection: boolean waiting> = 0;

     label102:
        goto label071;

     label103:
        $r167 := @caughtexception;

        goto label062;

     label104:
        $r165 := @caughtexception;

        goto label058;

     label105:
        $r152 := @caughtexception;

        goto label027;

     label106:
        r5 = r18;

        goto label048;

     label107:
        z1 = 0;

        goto label009;

     label108:
        r7 = null;

        z1 = 0;

        goto label023;

     label109:
        $r140 := @caughtexception;

        r5 = r18;

        goto label048;

        catch java.lang.Throwable from label001 to label002 with label004;
        catch java.lang.Throwable from label003 to label004 with label004;
        catch java.lang.Throwable from label005 to label006 with label004;
        catch java.lang.Throwable from label007 to label008 with label004;
        catch java.lang.Throwable from label010 to label011 with label004;
        catch java.lang.Throwable from label012 to label013 with label004;
        catch java.lang.Throwable from label014 to label015 with label004;
        catch java.lang.Throwable from label016 to label017 with label004;
        catch java.lang.Throwable from label018 to label019 with label004;
        catch java.lang.Throwable from label019 to label020 with label004;
        catch java.lang.Throwable from label021 to label022 with label004;
        catch java.lang.Throwable from label023 to label024 with label004;
        catch android.os.RemoteException from label025 to label026 with label105;
        catch java.lang.Throwable from label025 to label026 with label004;
        catch java.lang.Throwable from label028 to label029 with label004;
        catch java.lang.Throwable from label030 to label031 with label004;
        catch java.lang.Throwable from label032 to label033 with label004;
        catch java.lang.Throwable from label034 to label035 with label004;
        catch java.lang.Throwable from label035 to label036 with label004;
        catch java.lang.Throwable from label036 to label037 with label004;
        catch java.lang.Throwable from label038 to label039 with label004;
        catch android.os.RemoteException from label041 to label042 with label109;
        catch java.lang.Throwable from label041 to label042 with label004;
        catch android.os.RemoteException from label043 to label044 with label109;
        catch java.lang.Throwable from label043 to label044 with label004;
        catch java.lang.Throwable from label044 to label045 with label004;
        catch android.os.RemoteException from label047 to label048 with label109;
        catch java.lang.Throwable from label047 to label048 with label004;
        catch java.lang.Throwable from label049 to label050 with label004;
        catch java.lang.Throwable from label051 to label052 with label004;
        catch java.lang.Throwable from label054 to label055 with label004;
        catch java.lang.Throwable from label056 to label057 with label004;
        catch android.os.RemoteException from label057 to label058 with label104;
        catch java.lang.IllegalArgumentException from label057 to label058 with label077;
        catch java.lang.Throwable from label057 to label058 with label080;
        catch java.lang.Throwable from label058 to label059 with label080;
        catch java.lang.Throwable from label060 to label061 with label080;
        catch android.os.RemoteException from label061 to label062 with label103;
        catch java.lang.Throwable from label061 to label062 with label080;
        catch java.lang.Throwable from label062 to label063 with label080;
        catch java.lang.Throwable from label063 to label064 with label004;
        catch java.lang.Throwable from label065 to label066 with label004;
        catch java.lang.Throwable from label066 to label067 with label004;
        catch java.lang.Throwable from label068 to label069 with label004;
        catch java.lang.Throwable from label069 to label070 with label004;
        catch java.lang.Throwable from label071 to label072 with label073;
        catch java.lang.Throwable from label074 to label075 with label073;
        catch java.lang.Throwable from label078 to label079 with label080;
        catch java.lang.Throwable from label081 to label082 with label004;
        catch java.lang.Throwable from label082 to label083 with label080;
        catch java.lang.Throwable from label084 to label085 with label080;
        catch java.lang.Throwable from label085 to label086 with label004;
        catch java.lang.InterruptedException from label088 to label089 with label100;
        catch java.lang.Throwable from label088 to label089 with label093;
        catch java.lang.InterruptedException from label089 to label090 with label100;
        catch java.lang.Throwable from label089 to label090 with label093;
        catch java.lang.Throwable from label091 to label092 with label073;
        catch java.lang.Throwable from label094 to label095 with label073;
        catch java.lang.Throwable from label095 to label096 with label073;
        catch java.lang.Throwable from label096 to label097 with label073;
        catch java.lang.Throwable from label101 to label102 with label073;
    }

    public static long getInputDispatchingTimeoutLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ProcessRecord $r1;
        long $l0;

        r0 := @parameter0: com.android.server.am.ActivityRecord;

        if r0 == null goto label1;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $l0 = staticinvoke <com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)>($r1);

        return $l0;

     label1:
        return 5000L;
    }

    public static long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessRecord r0;
        android.content.ComponentName $r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.ProcessRecord;

        if r0 == null goto label2;

        $r1 = r0.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r1 != null goto label1;

        $z0 = r0.<com.android.server.am.ProcessRecord: boolean usingWrapper>;

        if $z0 == 0 goto label2;

     label1:
        return 60000L;

     label2:
        return 5000L;
    }

    private final int getLRURecordIndexForAppLocked(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1, $r7, $r8;
        android.os.IBinder r2, $r9;
        int i0, $i1;
        com.android.server.am.ProcessRecord r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 = interfaceinvoke r1.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label2;

        $r8 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r9 = interfaceinvoke $r8.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r9 != r2 goto label2;

        return i0;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return -1;
    }

    private long getLowRamTimeSinceIdle(long)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l1, l2, $l3, $l5, $l6;
        byte $b4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        l1 = 0L;

        l2 = r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle>;

        $l3 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b4 = $l3 cmp 0L;

        if $b4 <= 0 goto label1;

        $l6 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        l1 = l0 - $l6;

     label1:
        $l5 = l1 + l2;

        return $l5;
    }

    private android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0;
        com.android.server.am.ContentProviderRecord r2;
        android.content.pm.ProviderInfo r4, $r7;
        com.android.server.am.ProviderMap $r5;
        android.content.pm.IPackageManager $r6;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r2 = virtualinvoke $r5.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r1, i0);

        if r2 == null goto label1;

        $r7 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        return $r7;

     label1:
        $r6 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r4 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r1, 2048, i0);

     label2:
        return r4;

     label3:
        $r8 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private java.util.ArrayList getStacks()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.ArrayList r1, r6, $r11, $r12;
        java.lang.Throwable r2, $r24;
        java.util.Iterator r3;
        com.android.server.am.ActivityStack r4;
        android.app.ActivityManager$StackInfo r5, $r16;
        int i0, i1, i2, $i3;
        int[] r7;
        java.lang.String[] r8;
        com.android.server.am.TaskRecord r9;
        java.lang.String r10;
        com.android.server.am.ActivityStackSupervisor $r13;
        boolean $z0;
        java.lang.Object $r14, $r18;
        com.android.server.wm.WindowManagerService $r15;
        android.graphics.Rect $r17;
        android.content.ComponentName $r19, $r20, $r21, $r25;
        com.android.server.am.ActivityRecord $r22, $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r1 = $r11;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r12 = virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList getStacks()>();

        r3 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.am.ActivityStack) $r14;

        $r16 = new android.app.ActivityManager$StackInfo;

        specialinvoke $r16.<android.app.ActivityManager$StackInfo: void <init>()>();

        r5 = $r16;

        i0 = r4.<com.android.server.am.ActivityStack: int mStackId>;

        r5.<android.app.ActivityManager$StackInfo: int stackId> = i0;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r17 = virtualinvoke $r15.<com.android.server.wm.WindowManagerService: android.graphics.Rect getStackBounds(int)>(i0);

        r5.<android.app.ActivityManager$StackInfo: android.graphics.Rect bounds> = $r17;

        r6 = virtualinvoke r4.<com.android.server.am.ActivityStack: java.util.ArrayList getAllTasks()>();

        i1 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        r7 = newarray (int)[i1];

        r8 = newarray (java.lang.String)[i1];

     label03:
        i2 = 0;

     label04:
        if i2 >= i1 goto label12;

     label05:
        $r18 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r9 = (com.android.server.am.TaskRecord) $r18;

        $i3 = r9.<com.android.server.am.TaskRecord: int taskId>;

        r7[i2] = $i3;

        $r20 = r9.<com.android.server.am.TaskRecord: android.content.ComponentName origActivity>;

        if $r20 == null goto label08;

        $r25 = r9.<com.android.server.am.TaskRecord: android.content.ComponentName origActivity>;

        r10 = virtualinvoke $r25.<android.content.ComponentName: java.lang.String flattenToString()>();

     label06:
        r8[i2] = r10;

     label07:
        i2 = i2 + 1;

        goto label04;

     label08:
        $r19 = r9.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        if $r19 == null goto label10;

        $r21 = r9.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        r10 = virtualinvoke $r21.<android.content.ComponentName: java.lang.String flattenToString()>();

     label09:
        goto label06;

     label10:
        $r22 = virtualinvoke r9.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if $r22 == null goto label19;

        $r23 = virtualinvoke r9.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        r10 = $r23.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

     label11:
        goto label06;

     label12:
        r5.<android.app.ActivityManager$StackInfo: int[] taskIds> = r7;

        r5.<android.app.ActivityManager$StackInfo: java.lang.String[] taskNames> = r8;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label13:
        goto label02;

     label14:
        $r24 := @caughtexception;

        r2 = $r24;

     label15:
        exitmonitor r0;

     label16:
        throw r2;

     label17:
        exitmonitor r0;

     label18:
        return r1;

     label19:
        r10 = "unknown";

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
    }

    private final java.util.List getStickiesLocked(java.lang.String, android.content.IntentFilter, java.util.List, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.content.IntentFilter r2;
        java.util.List r3;
        int i0, i1, i2, $i3;
        android.content.ContentResolver r4;
        android.util.ArrayMap r5;
        java.util.ArrayList r6, $r13;
        android.content.Intent r7;
        android.content.Context $r8;
        android.util.SparseArray $r9;
        java.lang.Object $r10, $r11, $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.IntentFilter;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r4 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (android.util.ArrayMap) $r10;

        if r5 != null goto label1;

        return r3;

     label1:
        $r11 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.util.ArrayList) $r11;

        if r6 != null goto label2;

        return r3;

     label2:
        i1 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        i2 = 0;

     label3:
        if i2 >= i1 goto label6;

        $r12 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (android.content.Intent) $r12;

        $i3 = virtualinvoke r2.<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>(r4, r7, 1, "ActivityManager");

        if $i3 < 0 goto label5;

        if r3 != null goto label4;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r3 = $r13;

     label4:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r7);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return r3;
    }

    private boolean handleAppCrashLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r14, $r21;
        java.lang.String r2, r3, r4, $r19, $r25, $r27, $r30, $r34, $r37, $r42, $r48, $r52, $r58, $r61, $r63, $r65;
        long l0, $l10, $l14;
        java.lang.Long r5, $r17;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i16, $i17, $i19, $i20, $i22, $i23, $i24;
        java.util.ArrayList r6;
        com.android.server.am.ActivityRecord r7;
        com.android.server.am.ServiceRecord r9;
        java.lang.Object[] r10, r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        android.util.ArraySet $r12, $r29;
        com.android.server.am.ActivityStackSupervisor $r13, $r44, $r45, $r46;
        com.android.internal.app.ProcessMap $r15, $r54, $r56, $r59;
        android.content.pm.ApplicationInfo $r16, $r20, $r36, $r41, $r49, $r51, $r55, $r60;
        java.lang.Object $r22, $r28, $r57;
        java.lang.StringBuilder $r23, $r24, $r26, $r32, $r33, $r35, $r38, $r64, $r66, $r67;
        android.content.pm.IPackageManager $r31;
        byte $b13;
        java.lang.Integer $r39, $r40, $r43, $r47;
        com.android.server.am.ActivityManagerService$BadProcessInfo $r53;
        android.os.RemoteException $r62;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mHeadless>;

        if $z0 == 0 goto label01;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleAppCrashLocked: ");

        $r65 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r64 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityManager", $r63);

        return 0;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z1 != 0 goto label04;

        $r56 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r60 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r58 = $r60.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i23 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r57 = virtualinvoke $r56.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r58, $i23);

        r5 = (java.lang.Long) $r57;

     label02:
        if r5 == null goto label08;

        $l10 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        $l14 = 60000L + $l10;

        $b13 = l0 cmp $l14;

        if $b13 >= 0 goto label08;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r36 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r37 = $r36.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r33 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has crashed too many times: killing!");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r34);

        r10 = newarray (java.lang.Object)[3];

        $i16 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        r10[0] = $r40;

        $r41 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r42 = $r41.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r10[1] = $r42;

        $i17 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        r10[2] = $r39;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30032, r10);

        $r44 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r44.<com.android.server.am.ActivityStackSupervisor: void handleAppCrashLocked(com.android.server.am.ProcessRecord)>(r1);

        $z4 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 != 0 goto label05;

        r11 = newarray (java.lang.Object)[3];

        $i19 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        r11[0] = $r43;

        $i20 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        r11[1] = $r47;

        $r49 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r48 = $r49.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r11[2] = $r48;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30015, r11);

        $z6 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z6 != 0 goto label03;

        $r54 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r55 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r52 = $r55.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i22 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r53 = new com.android.server.am.ActivityManagerService$BadProcessInfo;

        specialinvoke $r53.<com.android.server.am.ActivityManagerService$BadProcessInfo: void <init>(long,java.lang.String,java.lang.String,java.lang.String)>(l0, r2, r3, r4);

        virtualinvoke $r54.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r52, $i22, $r53);

        $r59 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r51 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r61 = $r51.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i24 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r59.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r61, $i24);

     label03:
        r1.<com.android.server.am.ProcessRecord: boolean bad> = 1;

        r1.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>(r1, 0, 0, "crash");

        $r46 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r46.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        return 0;

     label04:
        r5 = null;

        goto label02;

     label05:
        $r45 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r45.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label06:
        $r12 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i3 = virtualinvoke $r12.<android.util.ArraySet: int size()>();

        i1 = -1 + $i3;

     label07:
        if i1 < 0 goto label09;

        $r29 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $r28 = virtualinvoke $r29.<android.util.ArraySet: java.lang.Object valueAt(int)>(i1);

        r9 = (com.android.server.am.ServiceRecord) $r28;

        $i12 = r9.<com.android.server.am.ServiceRecord: int crashCount>;

        $i11 = 1 + $i12;

        r9.<com.android.server.am.ServiceRecord: int crashCount> = $i11;

        i1 = i1 + -1;

        goto label07;

     label08:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: void finishTopRunningActivityLocked(com.android.server.am.ProcessRecord)>(r1);

        goto label06;

     label09:
        r6 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r1 != $r14 goto label13;

        $i6 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label13;

        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r20 = $r21.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i5 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i8 = 1 & $i5;

        if $i8 != 0 goto label13;

        $i7 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        i2 = -1 + $i7;

     label10:
        if i2 < 0 goto label13;

        $r22 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.am.ActivityRecord) $r22;

        $z3 = virtualinvoke r7.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z3 == 0 goto label12;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing package preferred activities from ");

        $r27 = r7.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r25);

     label11:
        $r31 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r30 = r7.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        interfaceinvoke $r31.<android.content.pm.IPackageManager: void clearPackagePreferredActivities(java.lang.String)>($r30);

     label12:
        i2 = i2 + -1;

        goto label10;

     label13:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z2 != 0 goto label14;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r16 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r19 = $r16.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i4 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r15.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r19, $i4, $r17);

     label14:
        return 1;

     label15:
        $r62 := @caughtexception;

        goto label12;

        catch android.os.RemoteException from label11 to label12 with label15;
    }

    private final void handleAppDiedLocked(com.android.server.am.ProcessRecord, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r3;
        boolean z0, z1, z2, $z3;
        android.os.Bundle r2, $r17;
        com.android.server.am.ActivityStackSupervisor $r4, $r7, $r8;
        java.util.ArrayList $r5;
        android.content.ComponentName $r6, $r13;
        java.lang.StringBuilder $r9, $r10, $r11, $r14, $r16;
        java.lang.String $r12, $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int)>(r1, z0, z1, -1);

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if $r3 != r1 goto label2;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label2:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z2 = virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)>(r1);

        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r6 == null goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crash of app ");

        $r12 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running instrumentation ");

        $r13 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        $r17 = new android.os.Bundle;

        specialinvoke $r17.<android.os.Bundle: void <init>()>();

        r2 = $r17;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", "Process crashed.");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r1, 0, r2);

     label3:
        if z0 != 0 goto label4;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z3 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        if $z3 != 0 goto label4;

        if z2 == 0 goto label4;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r8.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

     label4:
        return;
    }

    public static final void installSystemProviders()
    {
        com.android.server.am.ActivityManagerService r0, $r5, $r8, $r10, $r11, $r13;
        java.lang.Throwable r1, $r23;
        com.android.server.am.ProcessRecord r2;
        java.util.List r3;
        int i0, $i1, $i2, $i3;
        android.content.pm.ProviderInfo r4;
        com.android.internal.app.ProcessMap $r6;
        java.lang.Object $r7, $r15;
        com.android.server.am.CoreSettingsObserver $r9;
        com.android.server.am.UsageStatsService $r12;
        android.app.ActivityThread $r14;
        android.content.pm.ApplicationInfo $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r22;
        java.lang.String $r20, $r21;

        r0 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        entermonitor r0;

     label01:
        $r5 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r7 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>("system", 1000);

        r2 = (com.android.server.am.ProcessRecord) $r7;

        $r8 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        r3 = specialinvoke $r8.<com.android.server.am.ActivityManagerService: java.util.List generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)>(r2);

     label02:
        if r3 == null goto label07;

     label03:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        i0 = -1 + $i1;

     label04:
        if i0 < 0 goto label07;

     label05:
        $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (android.content.pm.ProviderInfo) $r15;

        $r16 = r4.<android.content.pm.ProviderInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r16.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = 1 & $i2;

        if $i3 != 0 goto label13;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not installing system proc provider ");

        $r20 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not system .apk");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(i0);

     label06:
        goto label13;

     label07:
        exitmonitor r0;

     label08:
        if r3 == null goto label09;

        $r14 = <com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        virtualinvoke $r14.<android.app.ActivityThread: void installSystemProviders(java.util.List)>(r3);

     label09:
        $r11 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r9 = new com.android.server.am.CoreSettingsObserver;

        $r10 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        specialinvoke $r9.<com.android.server.am.CoreSettingsObserver: void <init>(com.android.server.am.ActivityManagerService)>($r10);

        $r11.<com.android.server.am.ActivityManagerService: com.android.server.am.CoreSettingsObserver mCoreSettingsObserver> = $r9;

        $r13 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r12 = $r13.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        virtualinvoke $r12.<com.android.server.am.UsageStatsService: void monitorPackages()>();

        return;

     label10:
        $r23 := @caughtexception;

        r1 = $r23;

     label11:
        exitmonitor r0;

     label12:
        throw r1;

     label13:
        i0 = i0 + -1;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private com.android.server.am.BroadcastQueue isReceivingBroadcast(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r7;
        com.android.server.am.BroadcastRecord r2, r6;
        java.lang.Throwable r3, $r9;
        com.android.server.am.BroadcastQueue[] r4;
        int i0, i1;
        com.android.server.am.BroadcastQueue r5, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = r1.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if r2 == null goto label01;

        $r8 = r2.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        return $r8;

     label01:
        entermonitor r0;

     label02:
        r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r4;

     label03:
        i1 = 0;

     label04:
        if i1 >= i0 goto label13;

     label05:
        r5 = r4[i1];

        r6 = r5.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord mPendingBroadcast>;

     label06:
        if r6 == null goto label12;

     label07:
        $r7 = r6.<com.android.server.am.BroadcastRecord: com.android.server.am.ProcessRecord curApp>;

        if $r7 != r1 goto label12;

        exitmonitor r0;

     label08:
        return r5;

     label09:
        $r9 := @caughtexception;

        r3 = $r9;

     label10:
        exitmonitor r0;

     label11:
        throw r3;

     label12:
        i1 = i1 + 1;

        goto label04;

     label13:
        exitmonitor r0;

     label14:
        return null;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label09;
    }

    private final boolean killPackageProcessesLocked(java.lang.String, int, int, int, boolean, boolean, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0, z1, z2, z3, $z5, $z6, $z7;
        java.util.ArrayList r3, $r7;
        android.util.SparseArray r4;
        com.android.server.am.ProcessRecord r5, $r10;
        com.android.internal.app.ProcessMap $r6, $r12;
        android.util.ArrayMap $r8, $r11, $r15;
        java.lang.Object $r9, $r13, $r14;
        java.lang.StringBuilder $r16, $r17, $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        r2 := @parameter8: java.lang.String;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        if r1 == null goto label05;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r8 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i3 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        i4 = 0;

     label02:
        if i4 >= i3 goto label13;

        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r11 = virtualinvoke $r12.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r13 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r4 = (android.util.SparseArray) $r13;

        i7 = virtualinvoke r4.<android.util.SparseArray: int size()>();

        i8 = 0;

     label03:
        if i8 >= i7 goto label12;

        $r14 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i8);

        r5 = (com.android.server.am.ProcessRecord) $r14;

        $z6 = r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z6 == 0 goto label06;

        if z3 != 0 goto label06;

     label04:
        i8 = i8 + 1;

        goto label03;

     label05:
        goto label01;

     label06:
        $z5 = r5.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z5 == 0 goto label07;

        if z2 == 0 goto label04;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label04;

     label07:
        $i9 = r5.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i9 < i2 goto label04;

        if r1 != null goto label09;

        $i12 = r5.<com.android.server.am.ProcessRecord: int userId>;

        if $i12 != i1 goto label04;

        if i0 < 0 goto label08;

        $i13 = r5.<com.android.server.am.ProcessRecord: int uid>;

        $i15 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i13);

        if $i15 != i0 goto label04;

     label08:
        if z2 != 0 goto label11;

        return 1;

     label09:
        $i10 = r5.<com.android.server.am.ProcessRecord: int uid>;

        $i11 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i10);

        if $i11 != i0 goto label04;

        if i1 == -1 goto label10;

        $i14 = r5.<com.android.server.am.ProcessRecord: int userId>;

        if $i14 != i1 goto label04;

     label10:
        $r15 = r5.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z7 = virtualinvoke $r15.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        if $z7 != 0 goto label08;

        goto label04;

     label11:
        r5.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label04;

     label12:
        i4 = i4 + 1;

        goto label02;

     label13:
        i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i6 = 0;

     label14:
        if i6 >= i5 goto label15;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r10 = (com.android.server.am.ProcessRecord) $r9;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>($r10, z0, z1, r2);

        i6 = i6 + 1;

        goto label14;

     label15:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        if i5 <= 0 goto label16;

        return 1;

     label16:
        return 0;
    }

    private boolean killProcessesBelowAdj(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i5;
        java.lang.String r1;
        boolean z0, $z1;
        android.util.SparseArray r2, $r5, $r6, $r7;
        java.lang.Throwable r3, $r10;
        com.android.server.am.ProcessRecord r4;
        java.lang.Object $r8;
        java.lang.SecurityException $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i3 == 1000 goto label01;

        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("killProcessesBelowAdj() only available to system");

        throw $r9;

     label01:
        z0 = 0;

        r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r2;

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        i1 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

     label03:
        i2 = 0;

     label04:
        if i2 >= i1 goto label09;

     label05:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r6.<android.util.SparseArray: int keyAt(int)>(i2);

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r4 = (com.android.server.am.ProcessRecord) $r8;

     label06:
        if r4 != null goto label07;

        goto label14;

     label07:
        $i5 = r4.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i5 <= i0 goto label14;

        $z1 = r4.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z1 != 0 goto label14;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r4, r1);

     label08:
        z0 = 1;

        goto label14;

     label09:
        exitmonitor r2;

     label10:
        return z0;

     label11:
        $r10 := @caughtexception;

        r3 = $r10;

     label12:
        exitmonitor r2;

     label13:
        throw r3;

     label14:
        i2 = i2 + 1;

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void killUnneededProcessLocked(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, $r6, $r12, $r15;
        java.lang.Object[] r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i2, $i3, $i4, $i5;
        java.lang.Integer $r13, $r14, $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing ");

        $r6 = virtualinvoke r1.<com.android.server.am.ProcessRecord: java.lang.String toShortString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (adj ");

        $i0 = r1.<com.android.server.am.ProcessRecord: int setAdj>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        r3 = newarray (java.lang.Object)[5];

        $i2 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r3[0] = $r13;

        $i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r3[1] = $r14;

        $r15 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r3[2] = $r15;

        $i4 = r1.<com.android.server.am.ProcessRecord: int setAdj>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r3[3] = $r16;

        r3[4] = r2;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30023, r3);

        r1.<com.android.server.am.ProcessRecord: boolean killedByAm> = 1;

        $i5 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>($i5);

     label1:
        return;
    }

    private void logStrictModeViolationToDropBox(com.android.server.am.ProcessRecord, android.os.StrictMode$ViolationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.os.StrictMode$ViolationInfo r2;
        boolean z0, z1, z2, $z3;
        java.lang.String r3, r4, r10, $r15, $r23, $r31, $r34, $r38, $r40, $r50;
        android.os.DropBoxManager r5;
        java.lang.StringBuilder r6, $r12, $r13, $r14, $r16, $r18, $r19, $r21, $r28, $r32, $r33, $r35, $r36, $r37, $r42, $r43, $r46, $r47, $r49, $r51, $r53, $r54, $r56, $r58, $r59, $r61;
        java.lang.Throwable r7, $r63;
        java.lang.String[] r8, $r26;
        int i0, i1, $i2, $i4, $i5, $i8, $i9, $i11, $i12, $i13, $i14, $i15;
        android.content.Context $r9;
        java.lang.Object $r11;
        long $l3, $l6, $l10;
        byte $b7;
        android.app.ApplicationErrorReport$CrashInfo $r24, $r39, $r41;
        com.android.server.am.ActivityManagerService$15 $r29;
        com.android.server.am.ActivityManagerService$16 $r30;
        android.content.pm.ApplicationInfo $r62;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.os.StrictMode$ViolationInfo;

        if r2 != null goto label02;

     label01:
        return;

     label02:
        if r1 == null goto label03;

        $r62 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i14 = $r62.<android.content.pm.ApplicationInfo: int flags>;

        $i15 = 129 & $i14;

        if $i15 == 0 goto label20;

     label03:
        z0 = 1;

     label04:
        if r1 != null goto label21;

        r3 = "unknown";

     label05:
        if z0 == 0 goto label22;

        r4 = "system_app_strictmode";

     label06:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r9.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("dropbox");

        r5 = (android.os.DropBoxManager) $r11;

        if r5 == null goto label01;

        $z3 = virtualinvoke r5.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r4);

        if $z3 == 0 goto label01;

        if z0 == 0 goto label23;

        r6 = r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStrictModeBuffer>;

     label07:
        entermonitor r6;

     label08:
        $i2 = virtualinvoke r6.<java.lang.StringBuilder: int length()>();

        if $i2 != 0 goto label24;

     label09:
        z1 = 1;

     label10:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord,java.lang.String,java.lang.StringBuilder)>(r1, r3, r6);

        $r13 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build: ");

        $r15 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("System-App: ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime-Millis: ");

        $l3 = r2.<android.os.StrictMode$ViolationInfo: long violationUptimeMillis>;

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $i4 = r2.<android.os.StrictMode$ViolationInfo: int violationNumThisLoop>;

        if $i4 == 0 goto label11;

        $r56 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loop-Violation-Number: ");

        $i12 = r2.<android.os.StrictMode$ViolationInfo: int violationNumThisLoop>;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label11:
        $i5 = r2.<android.os.StrictMode$ViolationInfo: int numAnimationsRunning>;

        if $i5 == 0 goto label12;

        $r59 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Animations-Running: ");

        $i13 = r2.<android.os.StrictMode$ViolationInfo: int numAnimationsRunning>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label12:
        $r23 = r2.<android.os.StrictMode$ViolationInfo: java.lang.String broadcastIntentAction>;

        if $r23 == null goto label13;

        $r49 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broadcast-Intent-Action: ");

        $r50 = r2.<android.os.StrictMode$ViolationInfo: java.lang.String broadcastIntentAction>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label13:
        $i8 = r2.<android.os.StrictMode$ViolationInfo: int durationMillis>;

        if $i8 == -1 goto label14;

        $r53 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duration-Millis: ");

        $i11 = r2.<android.os.StrictMode$ViolationInfo: int durationMillis>;

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label14:
        $l6 = r2.<android.os.StrictMode$ViolationInfo: long numInstances>;

        $b7 = $l6 cmp -1L;

        if $b7 == 0 goto label15;

        $r42 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instance-Count: ");

        $l10 = r2.<android.os.StrictMode$ViolationInfo: long numInstances>;

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label15:
        $r26 = r2.<android.os.StrictMode$ViolationInfo: java.lang.String[] tags>;

        if $r26 == null goto label25;

        r8 = r2.<android.os.StrictMode$ViolationInfo: java.lang.String[] tags>;

        i1 = lengthof r8;

     label16:
        i0 = 0;

     label17:
        if i0 >= i1 goto label25;

     label18:
        r10 = r8[i0];

        $r46 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span-Tag: ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label19:
        i0 = i0 + 1;

        goto label17;

     label20:
        z0 = 0;

        goto label04;

     label21:
        r3 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        goto label05;

     label22:
        r4 = "data_app_strictmode";

        goto label06;

     label23:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>(1024);

        r6 = $r12;

        goto label07;

     label24:
        z1 = 0;

        goto label10;

     label25:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r24 = r2.<android.os.StrictMode$ViolationInfo: android.app.ApplicationErrorReport$CrashInfo crashInfo>;

        if $r24 == null goto label26;

        $r41 = r2.<android.os.StrictMode$ViolationInfo: android.app.ApplicationErrorReport$CrashInfo crashInfo>;

        $r40 = $r41.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String stackTrace>;

        if $r40 == null goto label26;

        $r39 = r2.<android.os.StrictMode$ViolationInfo: android.app.ApplicationErrorReport$CrashInfo crashInfo>;

        $r38 = $r39.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String stackTrace>;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

     label26:
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $i9 = virtualinvoke r6.<java.lang.StringBuilder: int length()>();

        if $i9 <= 65536 goto label31;

     label27:
        z2 = 1;

     label28:
        exitmonitor r6;

     label29:
        if z0 == 0 goto label30;

        if z2 == 0 goto label35;

     label30:
        $r29 = new com.android.server.am.ActivityManagerService$15;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error dump: ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<com.android.server.am.ActivityManagerService$15: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.StringBuilder,android.os.DropBoxManager,java.lang.String)>(r0, $r31, r6, r5, r4);

        virtualinvoke $r29.<com.android.server.am.ActivityManagerService$15: void start()>();

        return;

     label31:
        z2 = 0;

        goto label28;

     label32:
        $r63 := @caughtexception;

        r7 = $r63;

     label33:
        exitmonitor r6;

     label34:
        throw r7;

     label35:
        if z1 == 0 goto label01;

        $r30 = new com.android.server.am.ActivityManagerService$16;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error dump: ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<com.android.server.am.ActivityManagerService$16: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,android.os.DropBoxManager,java.lang.String)>(r0, $r34, r5, r4);

        virtualinvoke $r30.<com.android.server.am.ActivityManagerService$16: void start()>();

        return;

        catch java.lang.Throwable from label08 to label09 with label32;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label11 to label12 with label32;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.lang.Throwable from label13 to label14 with label32;
        catch java.lang.Throwable from label14 to label15 with label32;
        catch java.lang.Throwable from label15 to label16 with label32;
        catch java.lang.Throwable from label18 to label19 with label32;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label26 to label27 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Throwable from label33 to label34 with label32;
    }

    public static final android.content.Context main(int)
    {
        int i0;
        com.android.server.am.ActivityManagerService$AThread r0, $r8;
        java.lang.Throwable r1, r6, $r17, $r19;
        com.android.server.am.ActivityManagerService r2, r3;
        android.app.ActivityThread r4;
        android.app.ContextImpl r5;
        com.android.server.am.ActivityManagerService$IntentFirewallInterface $r10;
        com.android.server.firewall.IntentFirewall $r11;
        android.os.Looper $r12;
        com.android.server.am.ActivityStackSupervisor $r13;
        com.android.server.am.UsageStatsService $r14;
        com.android.server.am.BatteryStatsService $r15;
        com.android.server.AppOpsService $r16;
        java.lang.InterruptedException $r18;

        i0 := @parameter0: int;

        $r8 = new com.android.server.am.ActivityManagerService$AThread;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$AThread: void <init>()>();

        r0 = $r8;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService$AThread: void start()>();

        entermonitor r0;

     label01:
        r2 = r0.<com.android.server.am.ActivityManagerService$AThread: com.android.server.am.ActivityManagerService mService>;

     label02:
        if r2 != null goto label06;

     label03:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label04:
        goto label01;

     label05:
        $r18 := @caughtexception;

        goto label01;

     label06:
        exitmonitor r0;

     label07:
        r3 = r0.<com.android.server.am.ActivityManagerService$AThread: com.android.server.am.ActivityManagerService mService>;

        <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf> = r3;

        r4 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread systemMain()>();

        <com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread> = r4;

        r5 = virtualinvoke r4.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        virtualinvoke r5.<android.content.Context: void setTheme(int)>(16973931);

        r3.<com.android.server.am.ActivityManagerService: android.content.Context mContext> = r5;

        r3.<com.android.server.am.ActivityManagerService: int mFactoryTest> = i0;

        virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = new com.android.server.firewall.IntentFirewall;

        $r10 = new com.android.server.am.ActivityManagerService$IntentFirewallInterface;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$IntentFirewallInterface: void <init>(com.android.server.am.ActivityManagerService)>(r3);

        specialinvoke $r11.<com.android.server.firewall.IntentFirewall: void <init>(com.android.server.firewall.IntentFirewall$AMSInterface)>($r10);

        r3.<com.android.server.am.ActivityManagerService: com.android.server.firewall.IntentFirewall mIntentFirewall> = $r11;

        $r13 = new com.android.server.am.ActivityStackSupervisor;

        $r12 = r0.<com.android.server.am.ActivityManagerService$AThread: android.os.Looper mLooper>;

        specialinvoke $r13.<com.android.server.am.ActivityStackSupervisor: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.os.Looper)>(r3, r5, $r12);

        r3.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor> = $r13;

        $r15 = r3.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r15.<com.android.server.am.BatteryStatsService: void publish(android.content.Context)>(r5);

        $r14 = r3.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        virtualinvoke $r14.<com.android.server.am.UsageStatsService: void publish(android.content.Context)>(r5);

        $r16 = r3.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        virtualinvoke $r16.<com.android.server.AppOpsService: void publish(android.content.Context)>(r5);

        entermonitor r0;

     label08:
        r0.<com.android.server.am.ActivityManagerService$AThread: boolean mReady> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label09:
        virtualinvoke r3.<com.android.server.am.ActivityManagerService: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, null, null, null);

        return r5;

     label10:
        $r17 := @caughtexception;

        r1 = $r17;

     label11:
        exitmonitor r0;

     label12:
        throw r1;

     label13:
        $r19 := @caughtexception;

        r6 = $r19;

     label14:
        exitmonitor r0;

     label15:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3, r4;
        android.app.ActivityManager$ProcessErrorStateInfo $r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r1.<com.android.server.am.ProcessRecord: boolean crashing> = 1;

        $r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, 1, null, r2, r3, r4);

        r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport> = $r5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void stopFreezingAllLocked()>();

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return $z0;
    }

    private void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3, r4;
        android.app.ActivityManager$ProcessErrorStateInfo $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 1;

        $r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ActivityManager$ProcessErrorStateInfo generateProcessError(com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, 2, r2, r3, r4, null);

        r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport> = $r5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void stopFreezingAllLocked()>();

        return;
    }

    private boolean maybePrunePersistedUriGrantsLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5;
        android.util.ArrayMap r1;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        com.android.server.am.UriPermission r4, r5;
        android.util.SparseArray $r6;
        java.lang.Object $r7, $r10, $r11;
        java.util.Collection $r8;
        boolean $z0;
        com.android.server.am.UriPermission$PersistedTimeComparator $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.util.ArrayMap) $r7;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $i3 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        if $i3 < 128 goto label1;

        r2 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        $r8 = virtualinvoke r1.<android.util.ArrayMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.am.UriPermission) $r11;

        $i5 = r5.<com.android.server.am.UriPermission: int persistedModeFlags>;

        if $i5 == 0 goto label3;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label3;

     label4:
        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = -128 + $i4;

        if i1 <= 0 goto label1;

        $r9 = new com.android.server.am.UriPermission$PersistedTimeComparator;

        specialinvoke $r9.<com.android.server.am.UriPermission$PersistedTimeComparator: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r9);

        i2 = 0;

     label5:
        if i2 >= i1 goto label6;

        $r10 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.UriPermission) $r10;

        virtualinvoke r4.<com.android.server.am.UriPermission: boolean releasePersistableModes(int)>(-1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r4);

        i2 = i2 + 1;

        goto label5;

     label6:
        return 1;
    }

    private final void moveTaskBackwardsLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "moveTaskBackwards not yet implemented!");

        return;
    }

    static int oomAdjToImportance(int, android.app.ActivityManager$RunningAppProcessInfo)
    {
        int i0, $i1, $i2;
        android.app.ActivityManager$RunningAppProcessInfo r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.app.ActivityManager$RunningAppProcessInfo;

        if i0 < 9 goto label2;

        if r0 == null goto label1;

        $i1 = i0 - 9;

        $i2 = 1 + $i1;

        r0.<android.app.ActivityManager$RunningAppProcessInfo: int lru> = $i2;

     label1:
        return 400;

     label2:
        if i0 < 8 goto label3;

        return 300;

     label3:
        if i0 < 6 goto label4;

        if r0 == null goto label1;

        r0.<android.app.ActivityManager$RunningAppProcessInfo: int lru> = 0;

        return 400;

     label4:
        if i0 < 5 goto label5;

        return 300;

     label5:
        if i0 < 4 goto label6;

        return 170;

     label6:
        if i0 < 2 goto label7;

        return 130;

     label7:
        if i0 < 1 goto label8;

        return 200;

     label8:
        return 100;
    }

    private static java.lang.String processClass(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ProcessRecord r0;
        int $i0, $i1, $i2, $i3;
        android.content.pm.ApplicationInfo $r1;

        r0 := @parameter0: com.android.server.am.ProcessRecord;

        if r0 == null goto label1;

        $i1 = r0.<com.android.server.am.ProcessRecord: int pid>;

        $i0 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i1 != $i0 goto label2;

     label1:
        return "system_server";

     label2:
        $r1 = r0.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r1.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = 1 & $i2;

        if $i3 == 0 goto label3;

        return "system_app";

     label3:
        return "data_app";
    }

    private final void processStartTimedOutLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r4, $r28, $r29, $r33;
        int i0, $i3, $i4, $i6, $i7, $i10, $i11;
        android.util.SparseArray r2, $r8, $r23, $r36;
        java.lang.Throwable r3, $r38;
        boolean z0, $z2;
        android.app.IApplicationThread r5;
        java.lang.Object[] r6;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r15, $r16, $r18;
        java.lang.String $r13, $r17, $r22, $r24, $r34;
        java.lang.Integer $r19, $r20, $r21;
        com.android.internal.app.ProcessMap $r25;
        com.android.server.am.BackupRecord $r26, $r30;
        com.android.server.am.ActiveServices $r27;
        android.app.backup.IBackupManager $r31;
        android.os.IBinder $r32;
        android.content.pm.ApplicationInfo $r35;
        android.os.RemoteException $r37;
        android.os.Handler $r39, $r40;
        android.os.Message $r41;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r2;

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ProcessRecord) $r9;

     label02:
        z0 = 0;

        if r4 == null goto label07;

     label03:
        r5 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label04:
        z0 = 0;

        if r5 != null goto label07;

     label05:
        $r36 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r36.<android.util.SparseArray: void remove(int)>(i0);

     label06:
        z0 = 1;

     label07:
        exitmonitor r2;

     label08:
        if z0 == 0 goto label16;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed to attach");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        r6 = newarray (java.lang.Object)[4];

        $i3 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r6[0] = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r6[1] = $r20;

        $i4 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r6[2] = $r21;

        $r22 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r6[3] = $r22;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30037, r6);

        $r25 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r24 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i6 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r25.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r24, $i6);

        $r23 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i7 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r23.<android.util.SparseArray: void remove(int)>($i7);

        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r28 != r1 goto label09;

        $r40 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r39 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $i11 = $r33.<com.android.server.am.ProcessRecord: int userId>;

        $r41 = virtualinvoke $r39.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(25, $i11, 0);

        virtualinvoke $r40.<android.os.Handler: boolean sendMessage(android.os.Message)>($r41);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

     label09:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 1);

        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r27.<com.android.server.am.ActiveServices: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>(r1);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r1, "start timeout");

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        if $r26 == null goto label11;

        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        $r29 = $r30.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        $i10 = $r29.<com.android.server.am.ProcessRecord: int pid>;

        if $i10 != i0 goto label11;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before backup, skipping");

     label10:
        $r32 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r31 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r32);

        $r35 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r34 = $r35.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke $r31.<android.app.backup.IBackupManager: void agentDisconnected(java.lang.String)>($r34);

     label11:
        $z2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z2 == 0 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before broadcast acknowledged, skipping");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void skipPendingBroadcastLocked(int)>(i0);

     label12:
        return;

     label13:
        $r38 := @caughtexception;

        r3 = $r38;

     label14:
        exitmonitor r2;

     label15:
        throw r3;

     label16:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spurious process start timeout - pid not known for ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        return;

     label17:
        $r37 := @caughtexception;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch android.os.RemoteException from label10 to label11 with label17;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private void readGrantedUriPermissionsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l4;
        java.io.FileInputStream r1;
        org.xmlpull.v1.XmlPullParserException r2, $r27;
        java.lang.Throwable r3, $r32, r34;
        java.io.IOException r4, $r30;
        org.xmlpull.v1.XmlPullParser r6;
        int i1, i2, i3, i5, i6;
        java.lang.String r7, r8, r9, $r14, $r15, $r17, $r21, $r26;
        android.net.Uri r10;
        boolean z0, $z1;
        android.content.pm.ProviderInfo r11;
        android.util.AtomicFile $r13;
        java.lang.StringBuilder $r18, $r19, $r20, $r22, $r23, $r24, r33;
        android.content.pm.IPackageManager $r25;
        com.android.server.am.UriPermission $r28;
        java.io.FileNotFoundException $r29;
        android.os.RemoteException $r31;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1 = null;

     label01:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile>;

        r1 = virtualinvoke $r13.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r6 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label02:
        i1 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: int next()>();

     label03:
        if i1 == 1 goto label16;

     label04:
        r7 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label05:
        if i1 != 2 goto label02;

     label06:
        $r14 = "uri-grant";

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label02;

        i2 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r6, "userHandle");

        r8 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "sourcePkg");

        r9 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "targetPkg");

        $r15 = interfaceinvoke r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uri");

        r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r15);

        i3 = staticinvoke <com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r6, "modeFlags");

        l4 = staticinvoke <com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r6, "createdTime", l0);

        $r17 = virtualinvoke r10.<android.net.Uri: java.lang.String getAuthority()>();

        r11 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>($r17, i2);

     label07:
        if r11 == null goto label17;

     label08:
        $r26 = r11.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r26);

     label09:
        if z0 == 0 goto label17;

        i5 = -1;

     label10:
        $r25 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i6 = interfaceinvoke $r25.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r9, i2);

     label11:
        i5 = i6;

     label12:
        if i5 == -1 goto label02;

     label13:
        $r28 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findOrCreateUriPermissionLocked(java.lang.String,java.lang.String,int,android.net.Uri)>(r8, r9, i5, r10);

        virtualinvoke $r28.<com.android.server.am.UriPermission: void initPersistedModes(int,long)>(i3, l4);

     label14:
        goto label02;

     label15:
        $r29 := @caughtexception;

     label16:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        return;

     label17:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Persisted grant for ");

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" had source ");

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but instead found ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

     label18:
        goto label02;

     label19:
        $r30 := @caughtexception;

        r4 = $r30;

     label20:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed reading Uri grants", r4);

     label21:
        goto label16;

     label22:
        $r32 := @caughtexception;

        r3 = $r32;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r3;

     label23:
        $r27 := @caughtexception;

        r2 = $r27;

     label24:
        r34 = (java.lang.Throwable) r2;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failed reading Uri grants", r34);

     label25:
        goto label16;

     label26:
        $r31 := @caughtexception;

        goto label12;

        catch java.io.FileNotFoundException from label01 to label02 with label15;
        catch java.io.IOException from label01 to label02 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label23;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.io.FileNotFoundException from label02 to label03 with label15;
        catch java.io.IOException from label02 to label03 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label23;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.io.FileNotFoundException from label04 to label05 with label15;
        catch java.io.IOException from label04 to label05 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label23;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.io.FileNotFoundException from label06 to label07 with label15;
        catch java.io.IOException from label06 to label07 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label23;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.io.FileNotFoundException from label08 to label09 with label15;
        catch java.io.IOException from label08 to label09 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label23;
        catch java.lang.Throwable from label08 to label09 with label22;
        catch android.os.RemoteException from label10 to label11 with label26;
        catch java.io.FileNotFoundException from label10 to label11 with label15;
        catch java.io.IOException from label10 to label11 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label23;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.io.FileNotFoundException from label13 to label14 with label15;
        catch java.io.IOException from label13 to label14 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label23;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.io.FileNotFoundException from label17 to label18 with label15;
        catch java.io.IOException from label17 to label18 with label19;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label23;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label24 to label25 with label22;
    }

    private static java.util.ArrayList readLastDonePreBootReceivers()
    {
        java.util.ArrayList r0, $r15;
        java.io.File r1;
        java.io.FileInputStream r2, r3, r10, $r17;
        java.io.DataInputStream r4, $r19;
        java.io.IOException r5, $r24, $r28, $r29, $r30, $r33;
        java.lang.Throwable r6, $r27, $r34;
        java.lang.String r12, r13, r14, $r20, $r21, $r23, $r25, $r26;
        int i0, $i1;
        java.io.BufferedInputStream $r18;
        boolean $z0, $z1, $z2;
        android.content.ComponentName $r22;
        java.io.FileNotFoundException $r31, $r32;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r0 = $r15;

        r1 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File getCalledPreBootReceiversFile()>();

        r2 = null;

     label01:
        $r17 = new java.io.FileInputStream;

        specialinvoke $r17.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r3 = $r17;

     label02:
        $r19 = new java.io.DataInputStream;

        $r18 = new java.io.BufferedInputStream;

        specialinvoke $r18.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r3, 2048);

        specialinvoke $r19.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r18);

        r4 = $r19;

        $i1 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();

        if $i1 != 10000 goto label10;

        r12 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        r13 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        r14 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r20 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z0 == 0 goto label10;

        $r21 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z1 == 0 goto label10;

        $r23 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z2 == 0 goto label10;

        i0 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();

     label03:
        if i0 <= 0 goto label10;

        i0 = i0 + -1;

     label04:
        $r22 = new android.content.ComponentName;

        $r25 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r26 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();

        specialinvoke $r22.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r25, $r26);

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label05:
        goto label03;

     label06:
        $r31 := @caughtexception;

        r10 = r3;

     label07:
        if r10 == null goto label09;

     label08:
        virtualinvoke r10.<java.io.FileInputStream: void close()>();

     label09:
        return r0;

     label10:
        if r3 == null goto label12;

     label11:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label12:
        return r0;

     label13:
        $r33 := @caughtexception;

        r5 = $r33;

     label14:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failure reading last done pre-boot receivers", r5);

     label15:
        if r2 == null goto label09;

     label16:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label17:
        return r0;

     label18:
        $r29 := @caughtexception;

        return r0;

     label19:
        $r34 := @caughtexception;

        r6 = $r34;

     label20:
        if r2 == null goto label22;

     label21:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label22:
        throw r6;

     label23:
        $r28 := @caughtexception;

        goto label22;

     label24:
        $r30 := @caughtexception;

        goto label12;

     label25:
        $r27 := @caughtexception;

        r6 = $r27;

        r2 = r3;

        goto label20;

     label26:
        $r24 := @caughtexception;

        r5 = $r24;

        r2 = r3;

        goto label14;

     label27:
        $r32 := @caughtexception;

        r10 = null;

        goto label07;

        catch java.io.FileNotFoundException from label01 to label02 with label27;
        catch java.io.IOException from label01 to label02 with label13;
        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.io.FileNotFoundException from label02 to label03 with label06;
        catch java.io.IOException from label02 to label03 with label26;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.io.FileNotFoundException from label04 to label05 with label06;
        catch java.io.IOException from label04 to label05 with label26;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label21 to label22 with label23;
    }

    private com.android.server.am.TaskRecord recentTaskForIdLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3;
        com.android.server.am.TaskRecord r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.am.TaskRecord) $r4;

        $i3 = r1.<com.android.server.am.TaskRecord: int taskId>;

        if $i3 != i0 goto label2;

        return r1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private void removeContentProviderExternalUnchecked(java.lang.String, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r11, $r12, $r18, $r23;
        android.os.IBinder r2;
        int i0;
        java.lang.Throwable r3, $r26;
        com.android.server.am.ContentProviderRecord r4, r6;
        android.content.ComponentName r5, $r8;
        com.android.server.am.ProviderMap $r7, $r13;
        android.content.pm.ProviderInfo $r9, $r10;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r24, $r25;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        entermonitor r0;

     label01:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r4 = virtualinvoke $r7.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>(r1, i0);

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        $r8 = new android.content.ComponentName;

        $r9 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r12 = $r9.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r10 = r4.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r11 = $r10.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r8.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r12, $r11);

        r5 = $r8;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        r6 = virtualinvoke $r13.<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>(r5, i0);

        $z0 = virtualinvoke r6.<com.android.server.am.ContentProviderRecord: boolean hasExternalProcessHandles()>();

        if $z0 == 0 goto label13;

        $z1 = virtualinvoke r6.<com.android.server.am.ContentProviderRecord: boolean removeExternalProcessHandleLocked(android.os.IBinder)>(r2);

        if $z1 == 0 goto label11;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r26 := @caughtexception;

        r3 = $r26;

     label09:
        exitmonitor r0;

     label10:
        throw r3;

     label11:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attmpt to remove content provider ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with no external reference for token: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r23);

     label12:
        goto label06;

     label13:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attmpt to remove content provider: ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with no external references.");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r18);

     label14:
        goto label06;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
    }

    private final boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord, com.android.server.am.ContentProviderRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r6, $r26;
        com.android.server.am.ContentProviderRecord r2, $r19, $r24;
        boolean z0, z1, $z2, $z4;
        java.lang.Throwable r3, $r41;
        java.lang.String[] r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.android.server.am.ContentProviderConnection r5;
        java.lang.StringBuilder r8, $r31, $r32, $r33, $r38;
        java.util.ArrayList $r9, $r15, $r16, $r18, $r27, $r28;
        java.lang.String r10, $r14, $r34, $r37, $r40;
        android.content.ComponentName $r11, $r35;
        com.android.server.am.ProviderMap $r12, $r36;
        android.content.pm.ProviderInfo $r13;
        java.lang.Object $r17;
        android.content.IContentProvider $r20, $r25;
        android.app.IApplicationThread $r21, $r22, $r30;
        android.os.IBinder $r23;
        android.os.RemoteException $r39;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        z0 := @parameter2: boolean;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        z1 = virtualinvoke $r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if z1 == 0 goto label01;

        if z0 == 0 goto label08;

     label01:
        entermonitor r2;

     label02:
        r2.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp> = null;

        virtualinvoke r2.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label03:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r11 = r2.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $i2 = r2.<com.android.server.am.ContentProviderRecord: int uid>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        virtualinvoke $r12.<com.android.server.am.ProviderMap: void removeProviderByClass(android.content.ComponentName,int)>($r11, $i3);

        $r13 = r2.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r14 = $r13.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r4 = virtualinvoke $r14.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i0 = 0;

     label04:
        $i4 = lengthof r4;

        if i0 >= $i4 goto label08;

        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r40 = r4[i0];

        $i10 = r2.<com.android.server.am.ContentProviderRecord: int uid>;

        $i11 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i10);

        virtualinvoke $r36.<com.android.server.am.ProviderMap: void removeProviderByName(java.lang.String,int)>($r40, $i11);

        i0 = i0 + 1;

        goto label04;

     label05:
        $r41 := @caughtexception;

        r3 = $r41;

     label06:
        exitmonitor r2;

     label07:
        throw r3;

     label08:
        i1 = 0;

     label09:
        $r15 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $i5 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if i1 >= $i5 goto label17;

        $r18 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        $r17 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.am.ContentProviderConnection) $r17;

        $z2 = r5.<com.android.server.am.ContentProviderConnection: boolean waiting>;

        if $z2 == 0 goto label11;

        if z1 == 0 goto label11;

        if z0 != 0 goto label11;

     label10:
        i1 = i1 + 1;

        goto label09;

     label11:
        r6 = r5.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        r5.<com.android.server.am.ContentProviderConnection: boolean dead> = 1;

        $i6 = r5.<com.android.server.am.ContentProviderConnection: int stableCount>;

        if $i6 <= 0 goto label14;

        $z4 = r6.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 != 0 goto label10;

        $r30 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r30 == null goto label10;

        $i7 = r6.<com.android.server.am.ProcessRecord: int pid>;

        if $i7 == 0 goto label10;

        $i8 = r6.<com.android.server.am.ProcessRecord: int pid>;

        $i9 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i8 == $i9 goto label10;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("depends on provider ");

        $r35 = r2.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r34 = virtualinvoke $r35.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        r8 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in dying proc ");

        if r1 == null goto label13;

        r10 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

     label12:
        $r38 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r6, $r37);

        goto label10;

     label13:
        r10 = "??";

        goto label12;

     label14:
        $r21 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r21 == null goto label10;

        $r19 = r5.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r20 = $r19.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        if $r20 == null goto label10;

     label15:
        $r22 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r24 = r5.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r25 = $r24.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        $r23 = interfaceinvoke $r25.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        interfaceinvoke $r22.<android.app.IApplicationThread: void unstableProviderDied(android.os.IBinder)>($r23);

     label16:
        $r28 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r28.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        $r26 = r5.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $r27 = $r26.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r27.<java.util.ArrayList: boolean remove(java.lang.Object)>(r5);

        goto label10;

     label17:
        if z1 == 0 goto label18;

        if z0 == 0 goto label18;

        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r16.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

     label18:
        return z1;

     label19:
        $r39 := @caughtexception;

        goto label16;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch android.os.RemoteException from label15 to label16 with label19;
    }

    private final boolean removeProcessLocked(com.android.server.am.ProcessRecord, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r8, $r14;
        boolean z0, z1, $z3, $z4;
        java.lang.String r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.util.SparseArray r4, $r7, $r10;
        java.lang.Throwable r5, $r17;
        com.android.internal.app.ProcessMap $r6;
        java.util.ArrayList $r9;
        android.os.Handler $r11, $r15, $r16;
        android.content.pm.ApplicationInfo $r13;
        android.os.Message $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        i0 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        virtualinvoke $r6.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>(r3, i0);

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i2 = r1.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>($i2);

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r8 != r1 goto label1;

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $i6 = $r14.<com.android.server.am.ProcessRecord: int userId>;

        $r18 = virtualinvoke $r16.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(25, $i6, 0);

        virtualinvoke $r15.<android.os.Handler: boolean sendMessage(android.os.Message)>($r18);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

     label1:
        $i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i3 <= 0 goto label9;

        $i4 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i5 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i4 == $i5 goto label9;

        i1 = r1.<com.android.server.am.ProcessRecord: int pid>;

        r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r4;

     label2:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        virtualinvoke $r10.<android.util.SparseArray: void remove(int)>(i1);

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r11.<android.os.Handler: void removeMessages(int,java.lang.Object)>(20, r1);

        exitmonitor r4;

     label3:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r1, r2);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r1, 1, z1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>(r1);

        $z4 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z4 == 0 goto label4;

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z3 != 0 goto label4;

        if z0 != 0 goto label8;

        $r13 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean)>($r13, 0);

     label4:
        return 0;

     label5:
        $r17 := @caughtexception;

        r5 = $r17;

     label6:
        exitmonitor r4;

     label7:
        throw r5;

     label8:
        return 1;

     label9:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return 0;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private void removeUriPermissionsForPackageLocked(java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r10, $r11;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.Iterator r2;
        com.android.server.am.UriPermission r3;
        android.util.SparseArray $r4, $r5, $r12;
        java.lang.Object $r6, $r9;
        android.util.ArrayMap $r7;
        java.util.Collection $r8;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != -1 goto label1;

        if r1 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must narrow by either package or user");

        throw $r13;

     label1:
        z1 = 0;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label7;

        if i0 == -1 goto label3;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i4 = virtualinvoke $r12.<android.util.SparseArray: int keyAt(int)>(i2);

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        if i0 != $i5 goto label6;

     label3:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r7 = (android.util.ArrayMap) $r6;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.am.UriPermission) $r9;

        if r1 == null goto label5;

        $r10 = r3.<com.android.server.am.UriPermission: java.lang.String sourcePkg>;

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 != 0 goto label5;

        $r11 = r3.<com.android.server.am.UriPermission: java.lang.String targetPkg>;

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label4;

     label5:
        $z3 = virtualinvoke r3.<com.android.server.am.UriPermission: boolean clearModes(int,boolean)>(-1, z0);

        z1 = z1 | $z3;

        $i3 = r3.<com.android.server.am.UriPermission: int modeFlags>;

        if $i3 != 0 goto label4;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label4;

     label6:
        i2 = i2 + 1;

        goto label2;

     label7:
        if z1 == 0 goto label8;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

     label8:
        return;
    }

    private void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher, android.content.ComponentName, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IInstrumentationWatcher r1;
        android.content.ComponentName r2;
        java.lang.String r3;
        android.os.Bundle r4, r8;
        android.os.RemoteException r5, $r7;
        java.lang.Throwable r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IInstrumentationWatcher;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: java.lang.String;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        if r1 == null goto label2;

     label1:
        r8 = new android.os.Bundle;

        specialinvoke r8.<android.os.Bundle: void <init>()>();

        r4 = r8;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", "ActivityManagerService");

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("Error", r3);

        interfaceinvoke r1.<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>(r2, -1, r4);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        r9 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.Throwable)>("ActivityManager", r9);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        int i0, i1;
        android.content.ComponentName r2;
        android.content.pm.ResolveInfo r4;
        android.content.pm.ActivityInfo r5, $r11;
        android.content.pm.IPackageManager $r6, $r10;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        java.lang.String $r9;
        android.os.RemoteException $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if r2 == null goto label2;

     label1:
        $r10 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r11 = interfaceinvoke $r10.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r2, i0, i1);

        return $r11;

     label2:
        $r6 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r9 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r8);

        r4 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r1, $r9, i0, i1);

     label3:
        if r4 == null goto label7;

     label4:
        r5 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label5:
        return r5;

     label6:
        $r12 := @caughtexception;

     label7:
        return null;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private final com.android.server.am.ActivityRecord resumedAppLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityStackSupervisor $r1;
        com.android.server.am.ActivityRecord $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r2 = virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord resumedAppLocked()>();

        return $r2;
    }

    private void retrieveSettings()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.ContentResolver r1;
        java.lang.String r2, r3;
        boolean z0, z1, z2;
        android.content.res.Configuration r4, $r7;
        java.lang.Throwable r5, $r9;
        android.content.Context $r6;
        int $i0, $i1, $i2;
        java.util.Locale $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "debug_app");

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wait_for_debugger", 0);

        if $i0 == 0 goto label08;

        z0 = 1;

     label01:
        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "always_finish_activities", 0);

        if $i1 == 0 goto label09;

        z1 = 1;

     label02:
        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "debug.force_rtl", 0);

        if $i2 == 0 goto label10;

        z2 = 1;

     label03:
        if z2 == 0 goto label11;

        r3 = "1";

     label04:
        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("debug.force_rtl", r3);

        $r7 = new android.content.res.Configuration;

        specialinvoke $r7.<android.content.res.Configuration: void <init>()>();

        r4 = $r7;

        staticinvoke <android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>(r1, r4);

        if z2 == 0 goto label05;

        $r8 = r4.<android.content.res.Configuration: java.util.Locale locale>;

        virtualinvoke r4.<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>($r8);

     label05:
        entermonitor r0;

     label06:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = r2;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = r2;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = z0;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = z0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = z1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r4, null, 0, 1);

        exitmonitor r0;

     label07:
        return;

     label08:
        z0 = 0;

        goto label01;

     label09:
        z1 = 0;

        goto label02;

     label10:
        z2 = 0;

        goto label03;

     label11:
        r3 = "0";

        goto label04;

     label12:
        $r9 := @caughtexception;

        r5 = $r9;

     label13:
        exitmonitor r0;

     label14:
        throw r5;

        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private void revokeUriPermissionLocked(int, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10;
        android.net.Uri r1, r9;
        android.content.pm.IPackageManager r2;
        java.lang.String r3, $r18, $r21, $r28, $r30, $r32;
        android.content.pm.ProviderInfo r4;
        java.util.List r5, r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.util.ArrayMap r6;
        java.util.Iterator r7;
        com.android.server.am.UriPermission r8;
        android.util.SparseArray $r11, $r12, $r15, $r16;
        java.util.Collection $r13;
        java.lang.Object $r14, $r17, $r19, $r22;
        java.lang.SecurityException $r20;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r27, $r29, $r31, $r33;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        i1 := @parameter2: int;

        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>(r3, $i6);

        if r4 != null goto label02;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission revoke: ");

        $r32 = virtualinvoke r1.<android.net.Uri: java.lang.String toSafeString()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r30);

     label01:
        return;

     label02:
        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,android.net.Uri,int,int)>(r2, r4, r1, i0, i1);

        if $z1 != 0 goto label03;

        $r20 = new java.lang.SecurityException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uid ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to uri ");

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.SecurityException: void <init>(java.lang.String)>($r28);

        throw $r20;

     label03:
        r5 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        z0 = 0;

        if r5 == null goto label10;

        i2 = interfaceinvoke r5.<java.util.List: int size()>();

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i3 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

        i4 = 0;

     label04:
        if i4 >= i3 goto label10;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r14 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r6 = (android.util.ArrayMap) $r14;

        $r13 = virtualinvoke r6.<android.util.ArrayMap: java.util.Collection values()>();

        r7 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.server.am.UriPermission) $r17;

        r9 = r8.<com.android.server.am.UriPermission: android.net.Uri uri>;

        $r18 = virtualinvoke r9.<android.net.Uri: java.lang.String getAuthority()>();

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z3 == 0 goto label05;

        r10 = virtualinvoke r9.<android.net.Uri: java.util.List getPathSegments()>();

        if r10 == null goto label05;

        $i10 = interfaceinvoke r10.<java.util.List: int size()>();

        if $i10 < i2 goto label05;

        i5 = 0;

     label06:
        if i5 >= i2 goto label07;

        $r19 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i5);

        $r21 = (java.lang.String) $r19;

        $r22 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i5);

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z5 == 0 goto label05;

        i5 = i5 + 1;

        goto label06;

     label07:
        $z4 = virtualinvoke r8.<com.android.server.am.UriPermission: boolean clearModes(int,boolean)>(i1, 1);

        z0 = z0 | $z4;

        $i9 = r8.<com.android.server.am.UriPermission: int modeFlags>;

        if $i9 != 0 goto label05;

        interfaceinvoke r7.<java.util.Iterator: void remove()>();

        goto label05;

     label08:
        $i8 = virtualinvoke r6.<android.util.ArrayMap: int size()>();

        if $i8 != 0 goto label09;

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i7 = virtualinvoke $r16.<android.util.SparseArray: int keyAt(int)>(i4);

        virtualinvoke $r15.<android.util.SparseArray: void remove(int)>($i7);

        i3 = i3 + -1;

        i4 = i4 + -1;

     label09:
        i4 = i4 + 1;

        goto label04;

     label10:
        if z0 == 0 goto label01;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

        return;
    }

    private void saveLocaleLocked(java.util.Locale, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.Locale r1;
        boolean z0, z1;
        java.lang.String $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.util.Locale;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("user.language", $r5);

        $r6 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("user.region", $r6);

     label1:
        if z1 == 0 goto label2;

        $r2 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.language", $r2);

        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.country", $r3);

        $r4 = virtualinvoke r1.<java.util.Locale: java.lang.String getVariant()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.sys.localevar", $r4);

     label2:
        return;
    }

    private static boolean scanArgs(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.String r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label3;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void schedulePersistUriGrants()
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.Handler $r1, $r2, $r3;
        boolean $z0;
        android.os.Message $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r1.<android.os.Handler: boolean hasMessages(int)>(38);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(38);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r4, 10000L);

     label1:
        return;
    }

    public static com.android.server.am.ActivityManagerService self()
    {
        com.android.server.am.ActivityManagerService $r0;

        $r0 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        return $r0;
    }

    private final void sendPackageBroadcastLocked(int, java.lang.String[], int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.String[] r1;
        com.android.server.am.ProcessRecord r2;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7, $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i1 := @parameter2: int;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i2 = -1 + $i3;

     label1:
        if i2 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label3;

        if i1 == -1 goto label2;

        $i4 = r2.<com.android.server.am.ProcessRecord: int userId>;

        if $i4 != i1 goto label3;

     label2:
        $r8 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>(i0, r1);

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    private final void setProcessTrackerState(com.android.server.am.ProcessRecord, int, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i2;
        long l1;
        android.app.IApplicationThread $r2;
        com.android.internal.app.ProcessStats$ProcessState $r3, $r5;
        android.util.ArrayMap $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r2 == null goto label1;

        $r3 = r1.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        if $r3 == null goto label1;

        $r5 = r1.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $i2 = r1.<com.android.server.am.ProcessRecord: int repProcState>;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r5.<com.android.internal.app.ProcessStats$ProcessState: void setState(int,int,long,android.util.ArrayMap)>($i2, i0, l1, $r4);

     label1:
        return;
    }

    public static void setSystemProcess()
    {
        android.content.pm.PackageManager$NameNotFoundException r0, $r35;
        com.android.server.am.ActivityManagerService r1, r3, $r15, $r18, $r22, $r23, $r26, $r30, $r31, $r32;
        android.content.pm.ApplicationInfo r2;
        java.lang.Throwable r4, r7, $r33, $r36, r50;
        com.android.server.am.ProcessRecord r5;
        android.util.SparseArray r6, $r29;
        com.android.server.am.ProcessStatsService $r8, $r24;
        android.content.Context $r14;
        android.content.pm.PackageManager $r16;
        android.app.ActivityThread $r17, $r21;
        java.lang.String $r19, $r27;
        int $i0, $i1, $i2;
        android.app.ActivityThread$ApplicationThread $r20;
        com.android.internal.app.ProcessMap $r28;
        com.android.server.am.ActivityManagerService$MemBinder r37;
        com.android.server.am.ActivityManagerService$GraphicsBinder r38;
        com.android.server.am.ActivityManagerService$DbBinder r39;
        com.android.server.am.ActivityManagerService$CpuBinder r40;
        com.android.server.am.ActivityManagerService$PermissionController r41;
        java.lang.RuntimeException r42;
        android.os.IBinder r43, r44, r45, r46, r47, r48, r49;

     label01:
        r1 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        r43 = (android.os.IBinder) r1;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>("activity", r43, 1);

        $r8 = r1.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        r44 = (android.os.IBinder) $r8;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("procstats", r44);

        r37 = new com.android.server.am.ActivityManagerService$MemBinder;

        specialinvoke r37.<com.android.server.am.ActivityManagerService$MemBinder: void <init>(com.android.server.am.ActivityManagerService)>(r1);

        r45 = (android.os.IBinder) r37;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("meminfo", r45);

        r38 = new com.android.server.am.ActivityManagerService$GraphicsBinder;

        specialinvoke r38.<com.android.server.am.ActivityManagerService$GraphicsBinder: void <init>(com.android.server.am.ActivityManagerService)>(r1);

        r46 = (android.os.IBinder) r38;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("gfxinfo", r46);

        r39 = new com.android.server.am.ActivityManagerService$DbBinder;

        specialinvoke r39.<com.android.server.am.ActivityManagerService$DbBinder: void <init>(com.android.server.am.ActivityManagerService)>(r1);

        r47 = (android.os.IBinder) r39;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("dbinfo", r47);

        r40 = new com.android.server.am.ActivityManagerService$CpuBinder;

        specialinvoke r40.<com.android.server.am.ActivityManagerService$CpuBinder: void <init>(com.android.server.am.ActivityManagerService)>(r1);

        r48 = (android.os.IBinder) r40;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("cpuinfo", r48);

        r41 = new com.android.server.am.ActivityManagerService$PermissionController;

        specialinvoke r41.<com.android.server.am.ActivityManagerService$PermissionController: void <init>(com.android.server.am.ActivityManagerService)>(r1);

        r49 = (android.os.IBinder) r41;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("permission", r49);

        $r15 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r14 = $r15.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r16 = virtualinvoke $r14.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r16.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>("android", 1024);

        $r17 = <com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        virtualinvoke $r17.<android.app.ActivityThread: void installSystemApplicationInfo(android.content.pm.ApplicationInfo)>(r2);

        r3 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        entermonitor r3;

     label02:
        $r18 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r19 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r5 = virtualinvoke $r18.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean)>(r2, $r19, 0);

        r5.<com.android.server.am.ProcessRecord: boolean persistent> = 1;

        $i0 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r5.<com.android.server.am.ProcessRecord: int pid> = $i0;

        r5.<com.android.server.am.ProcessRecord: int maxAdj> = -16;

        $r21 = <com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        $r20 = virtualinvoke $r21.<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>();

        $r23 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r24 = $r23.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r5.<com.android.server.am.ProcessRecord: void makeActive(android.app.IApplicationThread,com.android.server.am.ProcessStatsService)>($r20, $r24);

        $r22 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r28 = $r22.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r27 = r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i1 = r5.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r28.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r27, $i1, r5);

        $r26 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        r6 = $r26.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r6;

     label03:
        $r30 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r29 = $r30.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i2 = r5.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r29.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, r5);

        exitmonitor r6;

     label04:
        $r32 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        virtualinvoke $r32.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r5, 0, null);

        $r31 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        virtualinvoke $r31.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        exitmonitor r3;

     label05:
        return;

     label06:
        $r36 := @caughtexception;

        r7 = $r36;

     label07:
        exitmonitor r6;

     label08:
        throw r7;

     label09:
        $r33 := @caughtexception;

        r4 = $r33;

     label10:
        exitmonitor r3;

     label11:
        throw r4;

     label12:
        $r35 := @caughtexception;

        r0 = $r35;

        r42 = new java.lang.RuntimeException;

        r50 = (java.lang.Throwable) r0;

        specialinvoke r42.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to find android system package", r50);

        throw r42;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label12;
    }

    private static final boolean shouldShowDialogs(android.content.res.Configuration)
    {
        android.content.res.Configuration r0;
        int $i0, $i1;

        r0 := @parameter0: android.content.res.Configuration;

        $i0 = r0.<android.content.res.Configuration: int keyboard>;

        if $i0 != 1 goto label1;

        $i1 = r0.<android.content.res.Configuration: int touchscreen>;

        if $i1 == 1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private final void startProcessLocked(com.android.server.am.ProcessRecord, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2, r3, r6, r7, r12, $r26, $r27, $r28, $r29, $r30, $r31, $r37, $r41, $r51, $r54, $r55, $r62, $r63, $r69, $r71, $r72, $r74;
        java.lang.RuntimeException r4, $r81;
        int i0, i2, i4, i5, i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12;
        int[] r5, r18;
        byte b1, b3;
        com.android.internal.os.BatteryStatsImpl r8;
        android.os.Process$ProcessStartResult r9;
        java.lang.Object[] r10;
        java.lang.Throwable r11, r17, r21, $r75, $r77, $r82, r84;
        java.lang.StringBuilder r13, $r73, $r79, r83;
        android.os.Message r14;
        android.os.Handler r15, $r53, $r78;
        android.util.SparseArray r16, r22, $r50, $r70;
        long l6;
        android.content.pm.PackageManager$NameNotFoundException r19, $r76;
        android.content.pm.PackageManager r20;
        android.content.pm.ApplicationInfo $r23, $r25, $r33, $r34, $r65, $r67, $r68;
        java.util.ArrayList $r24;
        com.android.server.am.BatteryStatsService $r32;
        java.lang.Integer $r35, $r36, $r42;
        com.android.server.Watchdog $r56;
        android.content.ComponentName $r60, $r61;
        android.content.Context $r64;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc $r66;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i8 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i8 <= 0 goto label03;

        $i31 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i30 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i31 == $i30 goto label03;

        r22 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r22;

     label01:
        $r70 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i32 = r1.<com.android.server.am.ProcessRecord: int pid>;

        virtualinvoke $r70.<android.util.SparseArray: void remove(int)>($i32);

        $r78 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r78.<android.os.Handler: void removeMessages(int,java.lang.Object)>(20, r1);

        exitmonitor r22;

     label02:
        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>(0);

     label03:
        $r24 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r24.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

     label04:
        i0 = r1.<com.android.server.am.ProcessRecord: int uid>;

        z0 = r1.<com.android.server.am.ProcessRecord: boolean isolated>;

     label05:
        r5 = null;

        b1 = 0;

        if z0 != 0 goto label13;

        r18 = null;

     label06:
        $r64 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r20 = virtualinvoke $r64.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r65 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r71 = $r65.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r18 = virtualinvoke r20.<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String)>($r71);

        z1 = staticinvoke <android.os.Environment: boolean isExternalStorageEmulated()>();

     label07:
        b1 = 0;

        if z1 == 0 goto label10;

     label08:
        $r68 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r69 = $r68.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        i9 = virtualinvoke r20.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_ALL_EXTERNAL_STORAGE", $r69);

     label09:
        if i9 != 0 goto label46;

        b1 = 3;

     label10:
        if r18 != null goto label51;

     label11:
        r5 = newarray (int)[1];

     label12:
        $i35 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        $i36 = staticinvoke <android.os.UserHandle: int getSharedAppGid(int)>($i35);

        r5[0] = $i36;

     label13:
        $i10 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i10 == 0 goto label17;

        $i25 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i25 != 1 goto label15;

        $r61 = r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        if $r61 == null goto label15;

        $r63 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r60 = r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        $r62 = virtualinvoke $r60.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z11 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>($r62);

        if $z11 == 0 goto label15;

     label14:
        i0 = 0;

     label15:
        $i27 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i27 != 2 goto label17;

        $r67 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i29 = $r67.<android.content.pm.ApplicationInfo: int flags>;

        $i28 = 16 & $i29;

        if $i28 == 0 goto label17;

     label16:
        i0 = 0;

     label17:
        $r23 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i13 = $r23.<android.content.pm.ApplicationInfo: int flags>;

        i2 = 2 & $i13;

     label18:
        b3 = 0;

        if i2 == 0 goto label19;

        b3 = 3;

     label19:
        $r25 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i12 = $r25.<android.content.pm.ApplicationInfo: int flags>;

        $i11 = 16384 & $i12;

        if $i11 != 0 goto label65;

        $z12 = <dalvik.system.Zygote: boolean systemInSafeMode>;

        if $z12 != 1 goto label21;

     label20:
        goto label65;

     label21:
        $r29 = "1";

        $r30 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.checkjni");

        $z4 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z4 == 0 goto label23;

     label22:
        b3 = b3 | 2;

     label23:
        $r31 = "1";

        $r26 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.jni.logging");

        $z3 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z3 == 0 goto label25;

     label24:
        b3 = b3 | 16;

     label25:
        $r27 = "1";

        $r28 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("debug.assert");

        $z6 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z6 == 0 goto label27;

     label26:
        b3 = b3 | 4;

     label27:
        r6 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r33 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i4 = $r33.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $r34 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r7 = $r34.<android.content.pm.ApplicationInfo: java.lang.String seinfo>;

        r9 = staticinvoke <android.os.Process: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String[])>("android.app.ActivityThread", r6, i0, i0, r5, b3, b1, i4, r7, null);

        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r8 = virtualinvoke $r32.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r8;

     label28:
        $z5 = virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        if $z5 == 0 goto label29;

        $i23 = r1.<com.android.server.am.ProcessRecord: int uid>;

        $r54 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r66 = virtualinvoke r8.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>($i23, $r54);

        virtualinvoke $r66.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void incStartsLocked()>();

     label29:
        exitmonitor r8;

     label30:
        r10 = newarray (java.lang.Object)[6];

        $i15 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        r10[0] = $r36;

        $i14 = r9.<android.os.Process$ProcessStartResult: int pid>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        r10[1] = $r35;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r10[2] = $r42;

        $r41 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r10[3] = $r41;

        r10[4] = r2;

     label31:
        if r3 == null goto label66;

        r12 = r3;

     label32:
        r10[5] = r12;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30014, r10);

        $z7 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z7 == 0 goto label33;

        $r56 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        $r55 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i24 = r9.<android.os.Process$ProcessStartResult: int pid>;

        virtualinvoke $r56.<com.android.server.Watchdog: void processStarted(java.lang.String,int)>($r55, $i24);

     label33:
        r13 = r0.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder>;

        virtualinvoke r13.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start proc ");

        $r37 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label34:
        if r3 == null goto label36;

     label35:
        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label36:
        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": pid=");

        $i17 = r9.<android.os.Process$ProcessStartResult: int pid>;

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gids={");

     label37:
        if r5 == null goto label56;

        i5 = 0;

     label38:
        $i22 = lengthof r5;

        if i5 >= $i22 goto label56;

     label39:
        if i5 == 0 goto label41;

     label40:
        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label41:
        $i21 = r5[i5];

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

     label42:
        i5 = i5 + 1;

        goto label38;

     label43:
        $r82 := @caughtexception;

        r21 = $r82;

     label44:
        exitmonitor r22;

     label45:
        throw r21;

     label46:
        b1 = 2;

        goto label10;

     label47:
        $r76 := @caughtexception;

        r19 = $r76;

     label48:
        r84 = (java.lang.Throwable) r19;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Unable to retrieve gids", r84);

     label49:
        b1 = 0;

        goto label10;

     label50:
        $r81 := @caughtexception;

        r4 = $r81;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>(0);

        r83 = new java.lang.StringBuilder;

        specialinvoke r83.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure starting process ");

        $r74 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r73 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r72, r4);

        return;

     label51:
        $i33 = lengthof r18;

        $i34 = 1 + $i33;

        r5 = newarray (int)[$i34];

        i7 = lengthof r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, 0, r5, 1, i7);

     label52:
        goto label12;

     label53:
        $r75 := @caughtexception;

        r11 = $r75;

     label54:
        exitmonitor r8;

     label55:
        throw r11;

     label56:
        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r51 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r51);

        $i20 = r9.<android.os.Process$ProcessStartResult: int pid>;

        virtualinvoke r1.<com.android.server.am.ProcessRecord: void setPid(int)>($i20);

        $z8 = r9.<android.os.Process$ProcessStartResult: boolean usingWrapper>;

        r1.<com.android.server.am.ProcessRecord: boolean usingWrapper> = $z8;

        r1.<com.android.server.am.ProcessRecord: boolean removed> = 0;

        r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r16;

     label57:
        $r50 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i18 = r9.<android.os.Process$ProcessStartResult: int pid>;

        virtualinvoke $r50.<android.util.SparseArray: void put(int,java.lang.Object)>($i18, r1);

        $r53 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r14 = virtualinvoke $r53.<android.os.Handler: android.os.Message obtainMessage(int)>(20);

        r14.<android.os.Message: java.lang.Object obj> = r1;

        r15 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $z10 = r9.<android.os.Process$ProcessStartResult: boolean usingWrapper>;

        if $z10 == 0 goto label64;

     label58:
        l6 = 300000L;

     label59:
        virtualinvoke r15.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r14, l6);

        exitmonitor r16;

     label60:
        return;

     label61:
        $r77 := @caughtexception;

        r17 = $r77;

     label62:
        exitmonitor r16;

     label63:
        throw r17;

     label64:
        l6 = 10000L;

        goto label59;

     label65:
        b3 = b3 | 8;

        goto label21;

     label66:
        r12 = "";

        goto label32;

        catch java.lang.Throwable from label01 to label02 with label43;
        catch java.lang.RuntimeException from label04 to label05 with label50;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label47;
        catch java.lang.RuntimeException from label06 to label07 with label50;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label47;
        catch java.lang.RuntimeException from label08 to label09 with label50;
        catch java.lang.RuntimeException from label11 to label12 with label50;
        catch java.lang.RuntimeException from label12 to label13 with label50;
        catch java.lang.RuntimeException from label13 to label14 with label50;
        catch java.lang.RuntimeException from label15 to label16 with label50;
        catch java.lang.RuntimeException from label17 to label18 with label50;
        catch java.lang.RuntimeException from label19 to label20 with label50;
        catch java.lang.RuntimeException from label21 to label22 with label50;
        catch java.lang.RuntimeException from label23 to label24 with label50;
        catch java.lang.RuntimeException from label25 to label26 with label50;
        catch java.lang.RuntimeException from label27 to label28 with label50;
        catch java.lang.Throwable from label28 to label29 with label53;
        catch java.lang.Throwable from label29 to label30 with label53;
        catch java.lang.RuntimeException from label30 to label31 with label50;
        catch java.lang.RuntimeException from label32 to label33 with label50;
        catch java.lang.RuntimeException from label33 to label34 with label50;
        catch java.lang.RuntimeException from label35 to label36 with label50;
        catch java.lang.RuntimeException from label36 to label37 with label50;
        catch java.lang.RuntimeException from label38 to label39 with label50;
        catch java.lang.RuntimeException from label40 to label41 with label50;
        catch java.lang.RuntimeException from label41 to label42 with label50;
        catch java.lang.Throwable from label44 to label45 with label43;
        catch java.lang.RuntimeException from label48 to label49 with label50;
        catch java.lang.RuntimeException from label51 to label52 with label50;
        catch java.lang.Throwable from label54 to label55 with label53;
        catch java.lang.RuntimeException from label55 to label56 with label50;
        catch java.lang.RuntimeException from label56 to label57 with label50;
        catch java.lang.Throwable from label57 to label58 with label61;
        catch java.lang.Throwable from label59 to label60 with label61;
        catch java.lang.Throwable from label62 to label63 with label61;
        catch java.lang.RuntimeException from label63 to label64 with label50;
    }

    private void stopProfilerLocked(com.android.server.am.ProcessRecord, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r5;
        java.lang.String r2;
        int i0;
        android.app.IApplicationThread $r4;
        android.os.RemoteException $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 == null goto label1;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if r1 != $r5 goto label2;

     label1:
        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        r2 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        i0 = r0.<com.android.server.am.ActivityManagerService: int mProfileType>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label2:
        if r1 != null goto label3;

        return;

     label3:
        $r4 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r4.<android.app.IApplicationThread: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>(0, r2, null, i0);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r7;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private int stopUserLocked(int, android.app.IStopUserCallback)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2, $i3, $i4, $i6;
        android.app.IStopUserCallback r1;
        com.android.server.am.UserStartedState r2;
        long l1;
        android.content.Intent r3, r19, r20;
        java.lang.Throwable r4, $r17;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        java.util.ArrayList $r14;
        android.os.Handler $r15;
        com.android.server.am.ActivityManagerService$24 r18;
        com.android.server.am.ActivityManagerService$25 r21;
        com.android.server.am.ActivityManagerService$26 r22;
        android.content.IIntentReceiver r23, r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.IStopUserCallback;

        $i2 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        if $i2 != i0 goto label1;

        return -2;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.UserStartedState) $r6;

        if r2 != null goto label3;

        if r1 == null goto label2;

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r18 = new com.android.server.am.ActivityManagerService$24;

        specialinvoke r18.<com.android.server.am.ActivityManagerService$24: void <init>(com.android.server.am.ActivityManagerService,android.app.IStopUserCallback,int)>(r0, r1, i0);

        virtualinvoke $r15.<android.os.Handler: boolean post(java.lang.Runnable)>(r18);

     label2:
        return 0;

     label3:
        if r1 == null goto label4;

        $r14 = r2.<com.android.server.am.UserStartedState: java.util.ArrayList mStopCallbacks>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label4:
        $i3 = r2.<com.android.server.am.UserStartedState: int mState>;

        if $i3 == 2 goto label7;

        $i4 = r2.<com.android.server.am.UserStartedState: int mState>;

        if $i4 == 3 goto label7;

        r2.<com.android.server.am.UserStartedState: int mState> = 2;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label5:
        r19 = new android.content.Intent;

        specialinvoke r19.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STOPPING");

        r3 = r19;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.SHUTDOWN_USERSPACE_ONLY", 1);

        r22 = new com.android.server.am.ActivityManagerService$26;

        r20 = new android.content.Intent;

        specialinvoke r20.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        r21 = new com.android.server.am.ActivityManagerService$25;

        specialinvoke r21.<com.android.server.am.ActivityManagerService$25: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.UserStartedState)>(r0, r2);

        r23 = (android.content.IIntentReceiver) r21;

        specialinvoke r22.<com.android.server.am.ActivityManagerService$26: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.UserStartedState,android.content.Intent,android.content.IIntentReceiver,int)>(r0, r2, r20, r23, i0);

        $i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r24 = (android.content.IIntentReceiver) r22;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r3, null, r24, 0, null, null, "android.permission.INTERACT_ACROSS_USERS", -1, 1, 0, $i6, 1000, -1);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label7:
        return 0;

     label8:
        $r17 := @caughtexception;

        r4 = $r17;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

        catch java.lang.Throwable from label5 to label6 with label8;
    }

    private void updateEventDispatchingLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.WindowManagerService r1;
        boolean z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep>;

        if $z2 != 0 goto label2;

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z3 != 0 goto label2;

        z0 = 1;

     label1:
        virtualinvoke r1.<com.android.server.wm.WindowManagerService: void setEventDispatching(boolean)>(z0);

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    private final int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord, long, int, java.lang.String, java.lang.Object, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r4;
        long l0;
        int i1, i2, $i3, $i4;
        java.lang.String r2, $r18;
        java.lang.Object r3;
        java.util.ArrayList $r5, $r6, $r7, $r10;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.Object;

        r4 := @parameter5: com.android.server.am.ProcessRecord;

        r1.<com.android.server.am.ProcessRecord: long lastActivityTime> = l0;

        $r5 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label1;

        return i1;

     label1:
        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i2 = virtualinvoke $r6.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        if i2 >= 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding dependent process ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not on LRU list: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r18);

        return i1;

     label2:
        if i2 < i1 goto label3;

        return i1;

     label3:
        $i4 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        if i2 < $i4 goto label4;

        return i1;

     label4:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        if i1 <= 0 goto label5;

        i1 = i1 + -1;

     label5:
        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r10.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, r1);

        return i1;
    }

    private final boolean updateOomAdjLocked(com.android.server.am.ProcessRecord, int, com.android.server.am.ProcessRecord, boolean, boolean, long)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2;
        int i0;
        boolean z0, z1, z2, $z3;
        long l1;
        android.app.IApplicationThread $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        l1 := @parameter5: long;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 != null goto label1;

        return 0;

     label1:
        z2 = r1.<com.android.server.am.ProcessRecord: boolean keeping>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r1, i0, r2, z0, l1);

        $z3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean applyOomAdjLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord,boolean,boolean,long)>(r1, z2, r2, z0, z1, l1);

        return $z3;
    }

    private void updateStartedUserArrayLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.android.server.am.UserStartedState r1, r2;
        android.util.SparseArray $r3, $r5, $r6, $r9, $r10;
        int[] $r4, $r8;
        java.lang.Object $r7, $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 = 0;

        i1 = 0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i4 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i1 >= $i4 goto label3;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r2 = (com.android.server.am.UserStartedState) $r11;

        $i9 = r2.<com.android.server.am.UserStartedState: int mState>;

        if $i9 == 2 goto label2;

        $i10 = r2.<com.android.server.am.UserStartedState: int mState>;

        if $i10 == 3 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = newarray (int)[i0];

        r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray> = $r4;

        i2 = 0;

        i3 = 0;

     label4:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i5 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if i3 >= $i5 goto label6;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r1 = (com.android.server.am.UserStartedState) $r7;

        $i6 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i6 == 2 goto label5;

        $i7 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i7 == 3 goto label5;

        $r8 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i8 = virtualinvoke $r9.<android.util.SparseArray: int keyAt(int)>(i3);

        $r8[i2] = $i8;

        i2 = i2 + 1;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return;
    }

    private boolean userExists(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService r1;
        android.content.pm.UserInfo $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        if i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        if r1 == null goto label3;

        $r2 = virtualinvoke r1.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

        if $r2 != null goto label1;

        return 0;

     label3:
        return 0;
    }

    private void writeGrantedUriPermissions()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r32;
        int i0, i1, $i2, $i3, $i5;
        java.util.Iterator r3, r8;
        com.android.server.am.UriPermission r4;
        java.io.FileOutputStream r5;
        com.android.internal.util.FastXmlSerializer r7, $r12;
        com.android.server.am.UriPermission$Snapshot r9, $r33;
        android.util.SparseArray $r10, $r29;
        android.util.AtomicFile $r11, $r15, $r34;
        java.lang.Boolean $r14;
        boolean $z0, $z1;
        java.lang.Object $r18, $r26, $r30;
        java.lang.String $r20, $r21, $r24;
        android.net.Uri $r23;
        long $l4;
        android.util.ArrayMap $r27;
        java.util.Collection $r31;
        java.io.IOException $r35;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        entermonitor r0;

     label01:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i0 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label11;

     label04:
        $r29 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r26 = virtualinvoke $r29.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r27 = (android.util.ArrayMap) $r26;

        $r31 = virtualinvoke $r27.<android.util.ArrayMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r30 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.am.UriPermission) $r30;

        $i5 = r4.<com.android.server.am.UriPermission: int persistedModeFlags>;

        if $i5 == 0 goto label05;

        $r33 = virtualinvoke r4.<com.android.server.am.UriPermission: com.android.server.am.UriPermission$Snapshot snapshot()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r33);

     label06:
        goto label05;

     label07:
        $r32 := @caughtexception;

        r2 = $r32;

     label08:
        exitmonitor r0;

     label09:
        throw r2;

     label10:
        i1 = i1 + 1;

        goto label03;

     label11:
        exitmonitor r0;

     label12:
        r5 = null;

     label13:
        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile>;

        r5 = virtualinvoke $r11.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r12 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r12.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r7 = $r12;

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r5, "utf-8");

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r14);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uri-grants");

        r8 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r18 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.am.UriPermission$Snapshot) $r18;

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uri-grant");

        $i2 = r9.<com.android.server.am.UriPermission$Snapshot: int userHandle>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r7, "userHandle", $i2);

        $r21 = r9.<com.android.server.am.UriPermission$Snapshot: java.lang.String sourcePkg>;

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "sourcePkg", $r21);

        $r20 = r9.<com.android.server.am.UriPermission$Snapshot: java.lang.String targetPkg>;

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "targetPkg", $r20);

        $r23 = r9.<com.android.server.am.UriPermission$Snapshot: android.net.Uri uri>;

        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r23);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "uri", $r24);

        $i3 = r9.<com.android.server.am.UriPermission$Snapshot: int persistedModeFlags>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>(r7, "modeFlags", $i3);

        $l4 = r9.<com.android.server.am.UriPermission$Snapshot: long persistedCreateTime>;

        staticinvoke <com.android.internal.util.XmlUtils: void writeLongAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>(r7, "createdTime", $l4);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uri-grant");

     label15:
        goto label14;

     label16:
        $r35 := @caughtexception;

        if r5 == null goto label17;

        $r34 = r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile>;

        virtualinvoke $r34.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r5);

     label17:
        return;

     label18:
        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uri-grants");

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.AtomicFile mGrantFile>;

        virtualinvoke $r15.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r5);

     label19:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.io.IOException from label13 to label14 with label16;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label18 to label19 with label16;
    }

    private static void writeLastDonePreBootReceivers(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        java.io.File r1;
        java.io.FileOutputStream r2, r8, $r12;
        java.io.DataOutputStream r3, r9, $r11;
        java.lang.Throwable r4, $r29, $r30, $r31;
        java.io.IOException r5, r6, r7, r10, $r21, $r24, $r25, $r26, $r27, $r28;
        int i0, $i2, $i3;
        java.lang.String $r13, $r15, $r16, $r18, $r20;
        java.io.BufferedOutputStream $r14;
        java.lang.Object $r17, $r22;
        android.content.ComponentName $r19, $r23;

        r0 := @parameter0: java.util.ArrayList;

        r1 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File getCalledPreBootReceiversFile()>();

        r2 = null;

        r3 = null;

     label01:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "Writing new set of last done pre-boot receivers...");

        $r12 = new java.io.FileOutputStream;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r8 = $r12;

     label02:
        $r11 = new java.io.DataOutputStream;

        $r14 = new java.io.BufferedOutputStream;

        specialinvoke $r14.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r8, 2048);

        specialinvoke $r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14);

        r9 = $r11;

     label03:
        virtualinvoke r9.<java.io.DataOutputStream: void writeInt(int)>(10000);

        $r13 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        virtualinvoke r9.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r13);

        $r16 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        virtualinvoke r9.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r16);

        $r15 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        virtualinvoke r9.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r15);

        $i3 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        virtualinvoke r9.<java.io.DataOutputStream: void writeInt(int)>($i3);

     label04:
        i0 = 0;

     label05:
        $i2 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label07;

        $r17 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r19 = (android.content.ComponentName) $r17;

        $r18 = virtualinvoke $r19.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r9.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r18);

        $r22 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r23 = (android.content.ComponentName) $r22;

        $r20 = virtualinvoke $r23.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke r9.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r20);

     label06:
        i0 = i0 + 1;

        goto label05;

     label07:
        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r8);

        if r9 == null goto label09;

     label08:
        virtualinvoke r9.<java.io.DataOutputStream: void close()>();

     label09:
        return;

     label10:
        $r25 := @caughtexception;

        r6 = $r25;

     label11:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Failure writing last done pre-boot receivers", r6);

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label12:
        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        if r3 == null goto label09;

     label13:
        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

     label14:
        return;

     label15:
        $r28 := @caughtexception;

        r7 = $r28;

        virtualinvoke r7.<java.io.IOException: void printStackTrace()>();

        return;

     label16:
        $r31 := @caughtexception;

        r4 = $r31;

     label17:
        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        if r3 == null goto label19;

     label18:
        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

     label19:
        throw r4;

     label20:
        $r27 := @caughtexception;

        r5 = $r27;

        virtualinvoke r5.<java.io.IOException: void printStackTrace()>();

        goto label19;

     label21:
        $r26 := @caughtexception;

        r10 = $r26;

        virtualinvoke r10.<java.io.IOException: void printStackTrace()>();

        goto label09;

     label22:
        $r29 := @caughtexception;

        r4 = $r29;

        r2 = r8;

        r3 = null;

        goto label17;

     label23:
        $r30 := @caughtexception;

        r4 = $r30;

        r3 = r9;

        r2 = r8;

        goto label17;

     label24:
        $r24 := @caughtexception;

        r6 = $r24;

        r2 = r8;

        r3 = null;

        goto label11;

     label25:
        $r21 := @caughtexception;

        r6 = $r21;

        r3 = r9;

        r2 = r8;

        goto label11;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.io.IOException from label02 to label03 with label24;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch java.io.IOException from label03 to label04 with label25;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.io.IOException from label05 to label06 with label25;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.io.IOException from label08 to label09 with label21;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label18 to label19 with label20;
    }

    public final void activityDestroyed(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r4;
        com.android.server.am.ActivityStack r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r3.<com.android.server.am.ActivityStack: void activityDestroyedLocked(android.os.IBinder)>(r1);

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

        r2 = $r4;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final void activityIdle(android.os.IBinder, android.content.res.Configuration, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.content.res.Configuration r2;
        boolean z0;
        long l0;
        java.lang.Throwable r3, $r11;
        com.android.server.am.ActivityRecord r4;
        android.os.ParcelFileDescriptor r5, $r12;
        com.android.server.am.ActivityStack $r7;
        com.android.server.am.ActivityStackSupervisor $r8;
        com.android.server.am.ProcessRecord $r9, $r10;
        java.io.IOException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.res.Configuration;

        z0 := @parameter2: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        entermonitor r0;

     label01:
        $r7 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if $r7 == null goto label07;

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r4 = virtualinvoke $r8.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord activityIdleInternalLocked(android.os.IBinder,boolean,android.content.res.Configuration)>(r1, 0, r2);

     label02:
        if z0 == 0 goto label07;

     label03:
        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        $r10 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r9 != $r10 goto label07;

        r5 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

     label04:
        if r5 == null goto label07;

     label05:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        virtualinvoke $r12.<android.os.ParcelFileDescriptor: void close()>();

     label06:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void clearProfilerLocked()>();

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label09:
        $r11 := @caughtexception;

        r3 = $r11;

     label10:
        exitmonitor r0;

     label11:
        throw r3;

     label12:
        $r13 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public final void activityPaused(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        long l0;
        java.lang.Throwable r2, $r4;
        com.android.server.am.ActivityStack r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r3.<com.android.server.am.ActivityStack: void activityPausedLocked(android.os.IBinder,boolean)>(r1, 0);

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label6:
        $r4 := @caughtexception;

        r2 = $r4;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final void activityResumed(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        long l0;
        java.lang.Throwable r2, $r4;
        com.android.server.am.ActivityStack $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        entermonitor r0;

     label1:
        $r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        if $r3 == null goto label2;

        staticinvoke <com.android.server.am.ActivityRecord: void activityResumedLocked(android.os.IBinder)>(r1);

     label2:
        exitmonitor r0;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r0;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final void activitySlept(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        long l0;
        java.lang.Throwable r2, $r5;
        com.android.server.am.ActivityRecord r3;
        com.android.server.am.ActivityStackSupervisor $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 == null goto label4;

     label3:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: void activitySleptLocked(com.android.server.am.ActivityRecord)>(r3);

     label4:
        exitmonitor r0;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final void activityStopped(android.os.IBinder, android.os.Bundle, android.graphics.Bitmap, java.lang.CharSequence)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.os.Bundle r2;
        android.graphics.Bitmap r3;
        java.lang.CharSequence r4;
        long l0;
        java.lang.Throwable r5, $r9;
        com.android.server.am.ActivityRecord r6;
        com.android.server.am.TaskRecord $r7;
        com.android.server.am.ActivityStack $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.graphics.Bitmap;

        r4 := @parameter3: java.lang.CharSequence;

        if r2 == null goto label01;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 == 0 goto label01;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r10;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        entermonitor r0;

     label02:
        r6 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label03:
        if r6 == null goto label05;

     label04:
        $r7 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r8 = $r7.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r8.<com.android.server.am.ActivityStack: void activityStoppedLocked(com.android.server.am.ActivityRecord,android.os.Bundle,android.graphics.Bitmap,java.lang.CharSequence)>(r6, r2, r3, r4);

     label05:
        exitmonitor r0;

     label06:
        if r6 == null goto label07;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.ActivityRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>(r6, null, null, null, 0);

     label07:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label08:
        $r9 := @caughtexception;

        r5 = $r9;

     label09:
        exitmonitor r0;

     label10:
        throw r5;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    final com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        boolean z0;
        com.android.server.am.ProcessRecord r2;
        java.lang.IllegalArgumentException r4, $r17;
        android.content.pm.IPackageManager $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r6, $r10, $r12, $r15, $r18, $r21;
        android.app.IApplicationThread $r7;
        java.util.ArrayList $r8, $r9;
        com.android.internal.app.ProcessMap $r11;
        android.util.SparseArray $r14;
        java.lang.StringBuilder $r16, $r19, $r20, $r22, $r23;
        android.os.RemoteException $r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label7;

        $r15 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i7 = r1.<android.content.pm.ApplicationInfo: int uid>;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r15, $i7, 1);

     label1:
        if r2 != null goto label3;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean)>(r1, null, z0);

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r12 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i5 = r2.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r11.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>($r12, $i5, r2);

        if z0 == 0 goto label2;

        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i6 = r2.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>($i6, r2);

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>(r2, 0, null);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label3:
        $r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r6 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i0 = r2.<com.android.server.am.ProcessRecord: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r6, 0, $i1);

     label4:
        $i2 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = 9 & $i2;

        if $i3 != 9 goto label5;

        r2.<com.android.server.am.ProcessRecord: boolean persistent> = 1;

        r2.<com.android.server.am.ProcessRecord: int maxAdj> = -12;

     label5:
        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 != null goto label6;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i4 = virtualinvoke $r8.<java.util.ArrayList: int indexOf(java.lang.Object)>(r2);

        if $i4 >= 0 goto label6;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r10 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r2, "added application", $r10);

     label6:
        return r2;

     label7:
        r2 = null;

        goto label1;

     label8:
        $r17 := @caughtexception;

        r4 = $r17;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r18 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        goto label4;

     label9:
        $r24 := @caughtexception;

        goto label4;

        catch android.os.RemoteException from label3 to label4 with label9;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
    }

    public void addErrorToDropBox(java.lang.String, com.android.server.am.ProcessRecord, java.lang.String, com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, java.lang.String, java.lang.String, java.io.File, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, r6, r7, r10, $r14, $r22, $r33, $r35, $r42, $r45;
        com.android.server.am.ProcessRecord r2, $r39, $r41, $r43;
        com.android.server.am.ActivityRecord r4, r5;
        java.io.File r8;
        android.app.ApplicationErrorReport$CrashInfo r9;
        android.os.DropBoxManager r11;
        java.lang.StringBuilder r12, $r15, $r16, $r17, $r18, $r21, $r23, $r25, $r27, $r28, $r30, $r31, $r32, $r36, $r38, $r44, $r46, $r48, $r50;
        com.android.server.am.ActivityManagerService$17 r13, $r29;
        java.lang.Object $r19;
        android.content.Context $r20;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.server.am.ActivityRecord;

        r5 := @parameter4: com.android.server.am.ActivityRecord;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: java.io.File;

        r9 := @parameter8: android.app.ApplicationErrorReport$CrashInfo;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = staticinvoke <com.android.server.am.ActivityManagerService: java.lang.String processClass(com.android.server.am.ProcessRecord)>(r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r10 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r19 = virtualinvoke $r20.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("dropbox");

        r11 = (android.os.DropBoxManager) $r19;

        if r11 == null goto label1;

        $z0 = virtualinvoke r11.<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>(r10);

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(int)>(1024);

        r12 = $r21;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord,java.lang.String,java.lang.StringBuilder)>(r2, r3, r12);

        if r4 == null goto label3;

        $r46 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity: ");

        $r45 = r4.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label3:
        if r5 == null goto label4;

        $r41 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r41 == null goto label4;

        $r39 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r39.<com.android.server.am.ProcessRecord: int pid>;

        $i0 = r2.<com.android.server.am.ProcessRecord: int pid>;

        if $i1 == $i0 goto label4;

        $r44 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent-Process: ");

        $r43 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r42 = $r43.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r48 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label4:
        if r5 == null goto label5;

        if r5 == r4 goto label5;

        $r38 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent-Activity: ");

        $r35 = r5.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label5:
        if r6 == null goto label6;

        $r31 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subject: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label6:
        $r23 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build: ");

        $r22 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $z1 = staticinvoke <android.os.Debug: boolean isDebuggerConnected()>();

        if $z1 == 0 goto label7;

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Debugger: Connected\n");

     label7:
        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r29 = new com.android.server.am.ActivityManagerService$17;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error dump: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<com.android.server.am.ActivityManagerService$17: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.String,java.lang.StringBuilder,java.io.File,android.app.ApplicationErrorReport$CrashInfo,java.lang.String,android.os.DropBoxManager)>(r0, $r33, r7, r12, r8, r9, r10, r11);

        r13 = $r29;

        if r2 != null goto label8;

        virtualinvoke r13.<java.lang.Thread: void run()>();

        return;

     label8:
        virtualinvoke r13.<java.lang.Thread: void start()>();

        return;
    }

    final void addProcessToGcListLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r6;
        int i0, $i1, $i5;
        boolean z0;
        java.util.ArrayList $r2, $r3, $r4, $r7;
        java.lang.Object $r5;
        long $l2, $l3;
        byte $b4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        z0 = 0;

        if i0 < 0 goto label2;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.am.ProcessRecord) $r5;

        $l3 = $r6.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l2 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $b4 = $l3 cmp $l2;

        if $b4 >= 0 goto label4;

        z0 = 1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i5 = i0 + 1;

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>($i5, r1);

     label2:
        if z0 != 0 goto label3;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r1);

     label3:
        return;

     label4:
        i0 = i0 + -1;

        goto label1;
    }

    final void addRecentTaskLocked(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.TaskRecord r1, r2, $r7;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList $r3, $r4, $r5, $r8, $r15, $r20;
        java.lang.Object $r6, $r9, $r19;
        java.lang.String $r10, $r16, $r18;
        android.content.Intent $r11, $r12, $r13, $r17;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label1;

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r19 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(0);

        if $r19 != r1 goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.TaskRecord) $r9;

        $i5 = r1.<com.android.server.am.TaskRecord: int userId>;

        $i4 = r2.<com.android.server.am.TaskRecord: int userId>;

        if $i5 != $i4 goto label5;

        $r10 = r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        if $r10 == null goto label3;

        $r18 = r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $r16 = r2.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z1 != 0 goto label4;

     label3:
        $r12 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r12 == null goto label5;

        $r13 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $r11 = r2.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $z0 = virtualinvoke $r13.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r11);

        if $z0 == 0 goto label5;

     label4:
        virtualinvoke r2.<com.android.server.am.TaskRecord: void disposeThumbnail()>();

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r15.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        i1 = i1 + -1;

        i0 = i0 + -1;

        $r17 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r17 != null goto label5;

        r1 = r2;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        $i2 = <com.android.server.am.ActivityManagerService: int MAX_RECENT_TASKS>;

        if i0 < $i2 goto label7;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i3 = i0 - 1;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>($i3);

        $r7 = (com.android.server.am.TaskRecord) $r6;

        virtualinvoke $r7.<com.android.server.am.TaskRecord: void disposeThumbnail()>();

     label7:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r1);

        return;
    }

    final void appDiedLocked(com.android.server.am.ProcessRecord, int, android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10;
        android.app.IApplicationThread r2, $r22, $r24;
        com.android.internal.os.BatteryStatsImpl r3;
        java.lang.Throwable r4, $r38;
        java.lang.Object[] r5, r6;
        boolean z0, z1, $z2;
        com.android.server.am.BatteryStatsService $r7;
        android.content.pm.ApplicationInfo $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r28, $r31, $r33, $r35, $r36, $r37;
        java.lang.String $r10, $r17, $r21, $r29, $r32, $r34;
        java.lang.Integer $r19, $r20, $r27, $r30;
        android.os.IBinder $r23, $r25;
        android.content.ComponentName $r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: android.app.IApplicationThread;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r3 = virtualinvoke $r7.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r3;

     label01:
        $r8 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl: void noteProcessDiedLocked(int,int)>($i1, i0);

        exitmonitor r3;

     label02:
        $i3 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i3 != i0 goto label12;

        $r24 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r24 == null goto label12;

        $r22 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r23 = interfaceinvoke $r22.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        $r25 = interfaceinvoke r2.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        if $r23 != $r25 goto label12;

        $r26 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r26 != null goto label10;

        z0 = 1;

     label03:
        z1 = z0;

        $z2 = r1.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z2 != 0 goto label11;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r32 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has died.");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r34);

        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 1;

     label04:
        r6 = newarray (java.lang.Object)[3];

        $i9 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        r6[0] = $r27;

        $i10 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        r6[1] = $r30;

        $r29 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r6[2] = $r29;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30011, r6);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r1, 0, 1);

        if z1 == 0 goto label05;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label05:
        if z0 == 0 goto label06;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)>(r1);

     label06:
        return;

     label07:
        $r38 := @caughtexception;

        r4 = $r38;

     label08:
        exitmonitor r3;

     label09:
        throw r4;

     label10:
        z0 = 0;

        goto label03;

     label11:
        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 0;

        z0 = 0;

        goto label04;

     label12:
        $i2 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i2 == i0 goto label06;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r10 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has died and restarted (pid ");

        $i4 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r17);

        r5 = newarray (java.lang.Object)[3];

        $i6 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        r5[0] = $r19;

        $i7 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        r5[1] = $r20;

        $r21 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r5[2] = $r21;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30011, r5);

        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    final void appNotResponding(com.android.server.am.ProcessRecord, com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r9, $r82, $r83, $r86;
        com.android.server.am.ActivityRecord r2, r3;
        boolean z0, z1, $z2, $z3, $z4, $z7, $z8;
        java.lang.String r4, r14, r16, r18, $r28, $r36, $r45, $r46, $r51, $r53, $r58, $r64, $r66, $r68, $r79, $r81, $r96, $r98, $r103, $r105;
        java.util.ArrayList r5, $r23, $r37, $r71;
        android.util.SparseArray r6, $r26;
        long l0;
        java.lang.Throwable r7, r15, r20, r21, $r102, $r111, $r115, $r116;
        java.lang.Object[] r8;
        int i1, i2, i3, i4, i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i32, $i33, $i34, $i35, $i36;
        java.lang.StringBuilder r10, $r33, $r34, $r41, $r43, $r59, $r60, $r61, $r65, $r69, $r74, $r76, $r77, $r80, $r84, $r85, $r91, $r92, $r93, $r94, $r95, $r97, $r99, $r100, $r101, $r106, $r107, $r108, $r109;
        com.android.internal.os.ProcessCpuTracker r11, $r38, $r48;
        java.lang.Thread r12;
        java.io.File r13;
        java.util.HashMap r17, $r57;
        byte b5;
        android.os.Message r19;
        android.app.IActivityController $r25, $r52, $r67, $r104;
        java.lang.Integer $r27, $r30, $r31, $r32, $r87, $r89, $r90;
        android.content.pm.ApplicationInfo $r29;
        java.lang.String[] $r40;
        android.content.Context $r49;
        android.content.ContentResolver $r50;
        android.os.Handler $r55;
        com.android.server.am.ActiveServices $r63;
        java.lang.Object $r72;
        android.app.IApplicationThread $r73;
        java.lang.Boolean $r88;
        com.android.server.Watchdog $r110, $r113;
        android.os.RemoteException $r112, $r114;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: com.android.server.am.ActivityRecord;

        z0 := @parameter3: boolean;

        r4 := @parameter4: java.lang.String;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>(int)>(5);

        r5 = $r23;

        $r26 = new android.util.SparseArray;

        specialinvoke $r26.<android.util.SparseArray: void <init>(int)>(20);

        r6 = $r26;

        $r25 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r25 == null goto label02;

     label01:
        $r104 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r103 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i35 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i36 = interfaceinvoke $r104.<android.app.IActivityController: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>($r103, $i35, r4);

        if $i36 >= 0 goto label02;

        $i32 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i33 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i32 == $i33 goto label02;

        $i34 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcess(int)>($i34);

     label02:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        entermonitor r0;

     label03:
        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z4 == 0 goto label06;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("During shutdown skipping ANR: ");

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r108 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r106 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r105 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r105);

        exitmonitor r0;

     label04:
        return;

     label05:
        $r114 := @caughtexception;

        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r110 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r110.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

        goto label02;

     label06:
        $z3 = r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z3 == 0 goto label11;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping duplicate ANR: ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r91 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r96 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r96);

        exitmonitor r0;

     label07:
        return;

     label08:
        $r111 := @caughtexception;

        r7 = $r111;

     label09:
        exitmonitor r0;

     label10:
        throw r7;

     label11:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z2 == 0 goto label13;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crashing app skipping ANR: ");

        $r99 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r97 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r98);

        exitmonitor r0;

     label12:
        return;

     label13:
        r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 1;

        r8 = newarray (java.lang.Object)[5];

        $i7 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        r8[0] = $r30;

        $i9 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        r8[1] = $r27;

        $r28 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r8[2] = $r28;

        $r29 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i8 = $r29.<android.content.pm.ApplicationInfo: int flags>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        r8[3] = $r32;

        r8[4] = r4;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30008, r8);

        $i13 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

        i1 = r1.<com.android.server.am.ProcessRecord: int pid>;

     label14:
        if r3 == null goto label16;

     label15:
        $r83 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r83 == null goto label16;

        $r82 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i27 = $r82.<com.android.server.am.ProcessRecord: int pid>;

        if $i27 <= 0 goto label16;

        $r86 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        i1 = $r86.<com.android.server.am.ProcessRecord: int pid>;

     label16:
        i2 = r1.<com.android.server.am.ProcessRecord: int pid>;

     label17:
        if i1 == i2 goto label19;

     label18:
        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r89);

     label19:
        $i11 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i10 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i11 == $i10 goto label20;

        $i28 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i28 == i1 goto label20;

        $i29 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $r90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r90);

     label20:
        $r37 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i14 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        i3 = -1 + $i14;

     label21:
        if i3 < 0 goto label32;

     label22:
        $r71 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r72 = virtualinvoke $r71.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r9 = (com.android.server.am.ProcessRecord) $r72;

     label23:
        if r9 == null goto label75;

     label24:
        $r73 = r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r73 == null goto label75;

        i4 = r9.<com.android.server.am.ProcessRecord: int pid>;

     label25:
        if i4 <= 0 goto label75;

     label26:
        $i25 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if i4 == $i25 goto label75;

     label27:
        if i4 == i1 goto label75;

     label28:
        $i26 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i4 == $i26 goto label75;

        $z8 = r9.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z8 == 0 goto label30;

        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r87);

     label29:
        goto label75;

     label30:
        $r88 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i4, $r88);

     label31:
        goto label75;

     label32:
        exitmonitor r0;

     label33:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        r10 = $r34;

        virtualinvoke r10.<java.lang.StringBuilder: void setLength(int)>(0);

        $r33 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANR in ");

        $r36 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        if r2 == null goto label34;

        $r79 = r2.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        if $r79 == null goto label34;

        $r80 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r81 = r2.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r69 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label34:
        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r41 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PID: ");

        $i15 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        if r4 == null goto label35;

        $r76 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reason: ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label35:
        if r3 == null goto label36;

        if r3 == r2 goto label36;

        $r65 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parent: ");

        $r64 = r3.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r74 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label36:
        $r38 = new com.android.internal.os.ProcessCpuTracker;

        specialinvoke $r38.<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>(1);

        r11 = $r38;

        $r40 = <com.android.server.Watchdog: java.lang.String[] NATIVE_STACKS_OF_INTEREST>;

        r13 = staticinvoke <com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.lang.String[])>(1, r5, r11, r6, $r40);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        r12 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        entermonitor r12;

     label37:
        $r48 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r14 = virtualinvoke $r48.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentState(long)>(l0);

        exitmonitor r12;

     label38:
        $r46 = virtualinvoke r11.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentLoad()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r45 = virtualinvoke r11.<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentState(long)>(l0);

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r53 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r53);

        if r13 != null goto label39;

        $i21 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i21, 3);

     label39:
        $r51 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>("anr", r1, $r51, r2, r3, r4, r14, r13, null);

        $r52 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r52 == null goto label45;

     label40:
        $r67 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r66 = r1.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i24 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $r68 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        i6 = interfaceinvoke $r67.<android.app.IActivityController: int appNotResponding(java.lang.String,int,java.lang.String)>($r66, $i24, $r68);

     label41:
        if i6 == 0 goto label45;

        if i6 >= 0 goto label55;

     label42:
        $i19 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i20 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i19 == $i20 goto label55;

        $i22 = r1.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcess(int)>($i22);

     label43:
        return;

     label44:
        $r112 := @caughtexception;

        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r113 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r113.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label45:
        $r49 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r50 = virtualinvoke $r49.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i17 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r50, "anr_show_background", 0);

        if $i17 == 0 goto label61;

        z1 = 1;

     label46:
        entermonitor r0;

        if z1 != 0 goto label62;

     label47:
        $z7 = virtualinvoke r1.<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>();

        if $z7 != 0 goto label62;

        $i23 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i18 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i23 == $i18 goto label62;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r1, "background ANR");

        exitmonitor r0;

     label48:
        return;

     label49:
        $r102 := @caughtexception;

        r20 = $r102;

     label50:
        exitmonitor r0;

     label51:
        throw r20;

     label52:
        $r115 := @caughtexception;

        r15 = $r115;

     label53:
        exitmonitor r12;

     label54:
        throw r15;

     label55:
        entermonitor r0;

     label56:
        $r63 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r63.<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>(r1);

        exitmonitor r0;

     label57:
        return;

     label58:
        $r116 := @caughtexception;

        r21 = $r116;

     label59:
        exitmonitor r0;

     label60:
        throw r21;

     label61:
        z1 = 0;

        goto label46;

     label62:
        if r2 == null goto label76;

     label63:
        r16 = r2.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

     label64:
        if r4 == null goto label73;

     label65:
        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANR ");

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r18 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

     label66:
        $r58 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>(r1, r16, r18, $r58);

        r19 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r57 = new java.util.HashMap;

        specialinvoke $r57.<java.util.HashMap: void <init>()>();

        r17 = $r57;

        r19.<android.os.Message: int what> = 2;

        r19.<android.os.Message: java.lang.Object obj> = r17;

     label67:
        if z0 == 0 goto label74;

        b5 = 1;

     label68:
        r19.<android.os.Message: int arg1> = b5;

        virtualinvoke r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", r1);

     label69:
        if r2 == null goto label71;

     label70:
        virtualinvoke r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("activity", r2);

     label71:
        $r55 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r55.<android.os.Handler: boolean sendMessage(android.os.Message)>(r19);

        exitmonitor r0;

     label72:
        return;

     label73:
        r18 = "ANR";

        goto label66;

     label74:
        b5 = 0;

        goto label68;

     label75:
        i3 = i3 + -1;

        goto label21;

     label76:
        r16 = null;

        goto label64;

        catch android.os.RemoteException from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
        catch java.lang.Throwable from label16 to label17 with label08;
        catch java.lang.Throwable from label18 to label19 with label08;
        catch java.lang.Throwable from label19 to label20 with label08;
        catch java.lang.Throwable from label20 to label21 with label08;
        catch java.lang.Throwable from label22 to label23 with label08;
        catch java.lang.Throwable from label24 to label25 with label08;
        catch java.lang.Throwable from label26 to label27 with label08;
        catch java.lang.Throwable from label28 to label29 with label08;
        catch java.lang.Throwable from label30 to label31 with label08;
        catch java.lang.Throwable from label32 to label33 with label08;
        catch java.lang.Throwable from label37 to label38 with label52;
        catch android.os.RemoteException from label40 to label41 with label44;
        catch android.os.RemoteException from label42 to label43 with label44;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Throwable from label50 to label51 with label49;
        catch java.lang.Throwable from label53 to label54 with label52;
        catch android.os.RemoteException from label55 to label56 with label44;
        catch java.lang.Throwable from label56 to label57 with label58;
        catch java.lang.Throwable from label59 to label60 with label58;
        catch android.os.RemoteException from label60 to label61 with label44;
        catch java.lang.Throwable from label63 to label64 with label49;
        catch java.lang.Throwable from label65 to label66 with label49;
        catch java.lang.Throwable from label66 to label67 with label49;
        catch java.lang.Throwable from label68 to label69 with label49;
        catch java.lang.Throwable from label70 to label71 with label49;
        catch java.lang.Throwable from label71 to label72 with label49;
    }

    public void appNotRespondingViaProvider(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ContentProviderConnection r2;
        com.android.server.am.ProcessRecord r3;
        long l0;
        java.lang.Throwable r4, $r6;
        com.android.server.am.ContentProviderRecord $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REMOVE_TASKS", "appNotRespondingViaProvider()");

        r2 = (com.android.server.am.ContentProviderConnection) r1;

        if r2 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "ContentProviderConnection is null");

        return;

     label1:
        $r5 = r2.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r3 = $r5.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if r3 != null goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Failed to find hosting ProcessRecord");

        return;

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r3, null, null, 0, "ContentProvider not responding");

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    final void applyUpdateLockStateLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        byte b0, b1;
        android.os.Handler r2, r3;
        android.os.Message $r4;
        boolean $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        b0 = 1;

        if r1 == null goto label3;

        $z1 = r1.<com.android.server.am.ActivityRecord: boolean immersive>;

        if $z1 == 0 goto label3;

        b1 = 1;

     label1:
        r2 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r3 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        if b1 == 0 goto label4;

     label2:
        $r4 = virtualinvoke r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(37, b0, 0, r1);

        virtualinvoke r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;

     label3:
        b1 = 0;

        goto label1;

     label4:
        b0 = 0;

        goto label2;
    }

    public final void attachApplication(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.Throwable r2, $r3;
        int i0;
        long l1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        entermonitor r0;

     label1:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean attachApplicationLocked(android.app.IApplicationThread,int)>(r1, i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void backgroundServicesFinishedLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        com.android.server.am.BroadcastQueue[] r1;
        com.android.server.am.BroadcastQueue $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r1[i2];

        virtualinvoke $r2.<com.android.server.am.BroadcastQueue: void backgroundServicesFinishedLocked(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void backupAgentCreated(java.lang.String, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r7, $r13;
        android.os.IBinder r2, $r8;
        java.lang.Throwable r3, r5, $r15, $r17;
        long l0;
        java.lang.Exception r6, $r18;
        boolean $z0;
        android.app.backup.IBackupManager $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        entermonitor r0;

     label01:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label03;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup agent created for ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but not requested!");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        exitmonitor r0;

     label02:
        return;

     label03:
        exitmonitor r0;

     label04:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label05:
        $r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r9 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r8);

        interfaceinvoke $r9.<android.app.backup.IBackupManager: void agentConnected(java.lang.String,android.os.IBinder)>(r1, r2);

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label07:
        $r15 := @caughtexception;

        r3 = $r15;

     label08:
        exitmonitor r0;

     label09:
        throw r3;

     label10:
        $r18 := @caughtexception;

        r6 = $r18;

     label11:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Exception trying to deliver BackupAgent binding: ");

        virtualinvoke r6.<java.lang.Exception: void printStackTrace()>();

     label12:
        goto label06;

     label13:
        $r17 := @caughtexception;

        r5 = $r17;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label14:
        $r16 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch android.os.RemoteException from label05 to label06 with label14;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public void batteryNeedsCpuUpdate()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        return;
    }

    public void batteryPowerChanged(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        java.lang.Throwable r1, r3, $r4, $r5;
        android.util.SparseArray r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        entermonitor r0;

     label01:
        r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r2;

     label02:
        r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery> = z0;

        exitmonitor r2;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        $r4 := @caughtexception;

        r3 = $r4;

     label06:
        exitmonitor r2;

     label07:
        throw r3;

     label08:
        $r5 := @caughtexception;

        r1 = $r5;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean bindBackupAgent(android.content.pm.ApplicationInfo, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        int i0, $i1, $i2, $i3;
        java.lang.Throwable r2, r4, $r30, $r31;
        com.android.internal.os.BatteryStatsImpl r3;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv r5;
        com.android.server.am.BackupRecord r7, $r19;
        android.content.ComponentName r8, $r18, $r28;
        com.android.server.am.ProcessRecord r9;
        android.app.IApplicationThread r10, $r24;
        java.lang.IllegalArgumentException r12, $r34;
        com.android.server.am.BatteryStatsService $r13;
        java.lang.String $r14, $r15, $r17, $r20, $r21, $r26, $r29, $r32, $r37, $r39;
        android.content.pm.IPackageManager $r16;
        android.content.res.CompatibilityInfo $r22;
        java.lang.StringBuilder $r23, $r25, $r27, $r33, $r36, $r38, $r40, $r41;
        android.os.RemoteException $r35, $r42;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.BACKUP", "bindBackupAgent");

        entermonitor r0;

     label01:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r3 = virtualinvoke $r13.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r3;

     label02:
        $i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $r14 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r15 = r1.<android.content.pm.ApplicationInfo: java.lang.String name>;

        r5 = virtualinvoke r3.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>($i1, $r14, $r15);

        exitmonitor r3;

     label03:
        $r16 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r17 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i2 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        interfaceinvoke $r16.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r17, 0, $i3);

     label04:
        $r19 = new com.android.server.am.BackupRecord;

        specialinvoke $r19.<com.android.server.am.BackupRecord: void <init>(com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.pm.ApplicationInfo,int)>(r5, r1, i0);

        r7 = $r19;

     label05:
        if i0 != 0 goto label20;

     label06:
        $r28 = new android.content.ComponentName;

        $r32 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r29 = r1.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        specialinvoke $r28.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r32, $r29);

        r8 = $r28;

     label07:
        $r21 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>($r21, r1, 0, 0, "backup", r8, 0, 0, 0);

     label08:
        if r9 != null goto label22;

     label09:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to start backup agent process ");

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r26);

        exitmonitor r0;

     label10:
        return 0;

     label11:
        $r31 := @caughtexception;

        r4 = $r31;

     label12:
        exitmonitor r3;

     label13:
        throw r4;

     label14:
        $r30 := @caughtexception;

        r2 = $r30;

     label15:
        exitmonitor r0;

     label16:
        throw r2;

     label17:
        $r34 := @caughtexception;

        r12 = $r34;

     label18:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r37 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r39);

     label19:
        goto label04;

     label20:
        $r18 = new android.content.ComponentName;

        specialinvoke $r18.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", "FullBackupAgent");

        r8 = $r18;

     label21:
        goto label07;

     label22:
        r7.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app> = r9;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = r7;

        $r20 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = $r20;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>(r9);

        r10 = r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label23:
        if r10 == null goto label25;

     label24:
        $r24 = r9.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r1);

        interfaceinvoke $r24.<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>(r1, $r22, i0);

     label25:
        exitmonitor r0;

     label26:
        return 1;

     label27:
        $r35 := @caughtexception;

        goto label25;

     label28:
        $r42 := @caughtexception;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch android.os.RemoteException from label03 to label04 with label28;
        catch java.lang.IllegalArgumentException from label03 to label04 with label17;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label14;
        catch java.lang.Throwable from label20 to label21 with label14;
        catch java.lang.Throwable from label22 to label23 with label14;
        catch android.os.RemoteException from label24 to label25 with label27;
        catch java.lang.Throwable from label24 to label25 with label14;
        catch java.lang.Throwable from label25 to label26 with label14;
    }

    public int bindService(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.os.IBinder r2;
        android.content.Intent r3;
        java.lang.String r4;
        android.app.IServiceConnection r5;
        int i0, i1, i2;
        java.lang.Throwable r6, $r9;
        com.android.server.am.ActiveServices $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.IServiceConnection;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("bindService");

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r8;

     label1:
        entermonitor r0;

     label2:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        i2 = virtualinvoke $r7.<com.android.server.am.ActiveServices: int bindServiceLocked(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>(r1, r2, r3, r4, r5, i0, i1);

        exitmonitor r0;

     label3:
        return i2;

     label4:
        $r9 := @caughtexception;

        r6 = $r9;

     label5:
        exitmonitor r0;

     label6:
        throw r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final int broadcastIntent(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, int, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2, r9;
        java.lang.String r3, r5, r7, r11;
        android.content.IIntentReceiver r4;
        int i0, i1, i2, i3, i4, i6;
        android.os.Bundle r6;
        boolean z0, z1;
        java.lang.Throwable r8, $r12;
        com.android.server.am.ProcessRecord r10;
        long l5;
        android.content.pm.ApplicationInfo $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.content.IIntentReceiver;

        i0 := @parameter4: int;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: android.os.Bundle;

        r7 := @parameter7: java.lang.String;

        i1 := @parameter8: int;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        i2 := @parameter11: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("broadcastIntent");

        entermonitor r0;

     label1:
        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>(r2);

        r10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

        i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l5 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        if r10 == null goto label9;

     label3:
        $r13 = r10.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r11 = $r13.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label4:
        i6 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(r10, r11, r9, r3, r4, i0, r5, r6, r7, i1, z0, z1, i4, i3, i2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l5);

        exitmonitor r0;

     label5:
        return i6;

     label6:
        $r12 := @caughtexception;

        r8 = $r12;

     label7:
        exitmonitor r0;

     label8:
        throw r8;

     label9:
        r11 = null;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    int broadcastIntentInPackage(java.lang.String, int, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, boolean, boolean, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, r5, r7;
        int i0, i1, i2, i4;
        android.content.Intent r2, r9;
        android.content.IIntentReceiver r4;
        android.os.Bundle r6;
        boolean z0, z1;
        java.lang.Throwable r8, $r10;
        long l3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.IIntentReceiver;

        i1 := @parameter5: int;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: android.os.Bundle;

        r7 := @parameter8: java.lang.String;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        i2 := @parameter11: int;

        entermonitor r0;

     label1:
        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>(r2);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, r1, r9, r3, r4, i1, r5, r6, r7, -1, z0, z1, -1, i0, i2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        exitmonitor r0;

     label2:
        return i4;

     label3:
        $r10 := @caughtexception;

        r8 = $r10;

     label4:
        exitmonitor r0;

     label5:
        throw r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        boolean z0;
        int $i0, $i1;
        com.android.server.am.BroadcastQueue $r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        $i0 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i1 = 268435456 & $i0;

        if $i1 == 0 goto label2;

        z0 = 1;

     label1:
        if z0 == 0 goto label3;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        return $r3;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

        return $r2;
    }

    com.android.server.am.BroadcastRecord broadcastRecordForReceiverLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.BroadcastQueue[] r2;
        int i0, i1;
        com.android.server.am.BroadcastRecord r3;
        com.android.server.am.BroadcastQueue $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r2[i1];

        r3 = virtualinvoke $r4.<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>(r1);

        if r3 == null goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void cancelIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        java.lang.Throwable r2, $r19, r25;
        com.android.server.am.PendingIntentRecord r3;
        android.os.RemoteException r4, $r20;
        java.lang.String r5, $r8, $r15;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r6;
        com.android.server.am.PendingIntentRecord$Key $r7, $r16;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r17, r22;
        java.lang.SecurityException r23, r24;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label01;

        return;

     label01:
        entermonitor r0;

     label02:
        r3 = (com.android.server.am.PendingIntentRecord) r1;

     label03:
        $r6 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r7 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r8 = $r7.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $i1 = interfaceinvoke $r6.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>($r8, $i0);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i1, $i2);

        if $z1 != 0 goto label09;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: cancelIntentSender() from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to cancel packges ");

        $r16 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r15 = $r16.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r5);

        r23 = new java.lang.SecurityException;

        specialinvoke r23.<java.lang.SecurityException: void <init>(java.lang.String)>(r5);

        throw r23;

     label04:
        $r20 := @caughtexception;

        r4 = $r20;

     label05:
        r24 = new java.lang.SecurityException;

        r25 = (java.lang.Throwable) r4;

        specialinvoke r24.<java.lang.SecurityException: void <init>(java.lang.Throwable)>(r25);

        throw r24;

     label06:
        $r19 := @caughtexception;

        r2 = $r19;

     label07:
        exitmonitor r0;

     label08:
        throw r2;

     label09:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord,boolean)>(r3, 1);

        exitmonitor r0;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch android.os.RemoteException from label03 to label04 with label04;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.PendingIntentRecord r1;
        boolean z0;
        com.android.server.am.PendingIntentRecord$Key $r2, $r5, $r7;
        java.util.HashMap $r3;
        com.android.server.am.ActivityRecord $r6, $r8;
        java.lang.ref.WeakReference $r9;
        java.util.HashSet $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.PendingIntentRecord;

        z0 := @parameter1: boolean;

        r1.<com.android.server.am.PendingIntentRecord: boolean canceled> = 1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r2 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        if z0 == 0 goto label1;

        $r5 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r6 = $r5.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.ActivityRecord activity>;

        if $r6 == null goto label1;

        $r7 = r1.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r8 = $r7.<com.android.server.am.PendingIntentRecord$Key: com.android.server.am.ActivityRecord activity>;

        $r10 = $r8.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        $r9 = r1.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r10.<java.util.HashSet: boolean remove(java.lang.Object)>($r9);

     label1:
        return;
    }

    boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, $r6;
        boolean z0, z1, $z3;
        int i0, i1;
        com.android.server.am.ContentProviderRecord r2;
        java.util.ArrayList $r3, $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        z1 = 0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ContentProviderRecord) $r5;

        $r6 = r2.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord launchingApp>;

        if $r6 != r1 goto label2;

        if z0 != 0 goto label3;

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean bad>;

        if $z3 != 0 goto label3;

        z1 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)>(r1, r2, 1);

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i1 = i1 + -1;

        goto label2;

     label4:
        return z1;
    }

    boolean checkAppSwitchAllowedLocked(int, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i5;
        java.lang.String r1, $r7;
        long $l2, $l3;
        byte $b4;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $l2 = r0.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime>;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b4 = $l2 cmp $l3;

        if $b4 >= 0 goto label2;

     label1:
        return 1;

     label2:
        $i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.STOP_APP_SWITCHES", i0, i1, -1, 1);

        if $i5 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request from ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stopped");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        return 0;
    }

    int checkCallingPermission(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i1);

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>(r1, $i0, $i2);

        return $i3;
    }

    int checkComponentPermission(java.lang.String, int, int, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r11;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        boolean z0;
        com.android.server.am.ActivityManagerService$Identity r2;
        java.lang.ThreadLocal $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r3 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.android.server.am.ActivityManagerService$Identity) $r4;

        if r2 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkComponentPermission() adjusting {pid,uid} to {");

        $i5 = r2.<com.android.server.am.ActivityManagerService$Identity: int pid>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i6 = r2.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r11);

        i1 = r2.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        i0 = r2.<com.android.server.am.ActivityManagerService$Identity: int pid>;

     label1:
        $i3 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 != $i3 goto label2;

        return 0;

     label2:
        $i4 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>(r1, i1, i2, z0);

        return $i4;
    }

    final void checkExcessivePowerUsageLocked(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, z1, z2, $z3, $z4;
        com.android.internal.os.BatteryStatsImpl r1;
        long l0, l1, l2, l3, l5, l6, l7, $l9, $l11, $l12, $l14, $l18, $l19, $l20, $l21, $l23, $l24, $l28, $l29;
        int i4, $i16, $i17, $i26, $i30;
        com.android.server.am.ProcessRecord r2;
        java.lang.Throwable r3, r4, r5, $r27, $r32, $r33;
        com.android.server.am.BatteryStatsService $r6;
        byte $b8, $b10, $b13, $b15, $b22, $b25, $b27, $b31;
        java.util.ArrayList $r7, $r8;
        android.content.pm.ApplicationInfo $r9, $r12, $r23;
        java.lang.Object $r10;
        java.lang.String $r11, $r19, $r24, $r30;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r18, $r21, $r22, $r28, $r29, $r31;
        com.android.internal.app.ProcessStats$ProcessState $r16, $r25;
        android.util.ArrayMap $r20, $r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r1 = virtualinvoke $r6.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        z1 = z0;

        z2 = z0;

        $l9 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime>;

        $b8 = $l9 cmp 0L;

        if $b8 != 0 goto label01;

        z1 = 0;

     label01:
        $l11 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        $b10 = $l11 cmp 0L;

        if $b10 != 0 goto label02;

        z2 = 0;

     label02:
        $z3 = virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn()>();

        if $z3 == 0 goto label03;

        z1 = 0;

     label03:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l14 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime>;

        l1 = l0 - $l14;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l12 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        l3 = l2 - $l12;

        r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime> = l0;

        r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime> = l2;

        $b13 = l1 cmp 300000L;

        if $b13 >= 0 goto label04;

        z1 = 0;

     label04:
        $b15 = l3 cmp 300000L;

        if $b15 >= 0 goto label05;

        z2 = 0;

     label05:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i4 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label06:
        if i4 <= 0 goto label24;

        i4 = i4 + -1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r10 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r2 = (com.android.server.am.ProcessRecord) $r10;

        $z4 = r2.<com.android.server.am.ProcessRecord: boolean keeping>;

        if $z4 != 0 goto label06;

        entermonitor r1;

     label07:
        $r9 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i17 = $r9.<android.content.pm.ApplicationInfo: int uid>;

        $i16 = r2.<com.android.server.am.ProcessRecord: int pid>;

        l5 = virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>($i17, $i16, l0);

        exitmonitor r1;

     label08:
        $l21 = r2.<com.android.server.am.ProcessRecord: long lastWakeTime>;

        l6 = l5 - $l21;

        $l19 = r2.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $l20 = r2.<com.android.server.am.ProcessRecord: long lastCpuTime>;

        l7 = $l19 - $l20;

        if z1 == 0 goto label17;

        $b27 = l1 cmp 0L;

        if $b27 <= 0 goto label17;

        $l28 = 100L * l6;

        $l29 = $l28 / l1;

        $b31 = $l29 cmp 50L;

        if $b31 < 0 goto label17;

        entermonitor r1;

     label09:
        $r23 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i30 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        $r24 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: void reportExcessiveWakeLocked(int,java.lang.String,long,long)>($i30, $r24, l1, l6);

        exitmonitor r1;

     label10:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("excessive wake held ");

        $r29 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during ");

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r2, $r30);

        $r25 = r2.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r26 = r2.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r25.<com.android.internal.app.ProcessStats$ProcessState: void reportExcessiveWake(android.util.ArrayMap)>($r26);

        goto label06;

     label11:
        $r27 := @caughtexception;

        r3 = $r27;

     label12:
        exitmonitor r1;

     label13:
        throw r3;

     label14:
        $r33 := @caughtexception;

        r4 = $r33;

     label15:
        exitmonitor r1;

     label16:
        throw r4;

     label17:
        if z2 == 0 goto label23;

        $b25 = l3 cmp 0L;

        if $b25 <= 0 goto label23;

        $l24 = 100L * l7;

        $l23 = $l24 / l3;

        $b22 = $l23 cmp 50L;

        if $b22 < 0 goto label23;

        entermonitor r1;

     label18:
        $r12 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i26 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        $r11 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r1.<com.android.internal.os.BatteryStatsImpl: void reportExcessiveCpuLocked(int,java.lang.String,long,long)>($i26, $r11, l3, l7);

        exitmonitor r1;

     label19:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("excessive cpu ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" during ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r2, $r19);

        $r16 = r2.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r20 = r2.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r16.<com.android.internal.app.ProcessStats$ProcessState: void reportExcessiveCpu(android.util.ArrayMap)>($r20);

        goto label06;

     label20:
        $r32 := @caughtexception;

        r5 = $r32;

     label21:
        exitmonitor r1;

     label22:
        throw r5;

     label23:
        r2.<com.android.server.am.ProcessRecord: long lastWakeTime> = l5;

        $l18 = r2.<com.android.server.am.ProcessRecord: long curCpuTime>;

        r2.<com.android.server.am.ProcessRecord: long lastCpuTime> = $l18;

        goto label06;

     label24:
        return;

        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
    }

    public int checkGrantUriPermission(int, java.lang.String, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.net.Uri r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("checkGrantUriPermission");

        entermonitor r0;

     label1:
        i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,int)>(i0, r1, r2, i1, -1);

        exitmonitor r0;

     label2:
        return i2;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int, java.lang.String, android.content.Intent, int, com.android.server.am.ActivityManagerService$NeededUriGrants)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.String r1;
        android.content.Intent r2, r7;
        com.android.server.am.ActivityManagerService$NeededUriGrants r3, r8, $r11, $r12;
        android.net.Uri r4, r6;
        android.content.ClipData r5;
        android.content.ClipData$Item $r9, $r10;
        java.lang.NullPointerException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        r3 := @parameter4: com.android.server.am.ActivityManagerService$NeededUriGrants;

        if r1 != null goto label01;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("targetPkg");

        throw $r13;

     label01:
        if r2 != null goto label02;

        return null;

     label02:
        r4 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        r5 = virtualinvoke r2.<android.content.Intent: android.content.ClipData getClipData()>();

        if r4 != null goto label03;

        if r5 != null goto label03;

        return null;

     label03:
        if r4 == null goto label06;

        if r3 == null goto label11;

        i7 = r3.<com.android.server.am.ActivityManagerService$NeededUriGrants: int targetUid>;

     label04:
        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,int)>(i0, r1, r4, i1, i7);

        if i6 <= 0 goto label06;

        if r3 != null goto label05;

        $r12 = new com.android.server.am.ActivityManagerService$NeededUriGrants;

        specialinvoke $r12.<com.android.server.am.ActivityManagerService$NeededUriGrants: void <init>(java.lang.String,int,int)>(r1, i6, i1);

        r3 = $r12;

     label05:
        virtualinvoke r3.<com.android.server.am.ActivityManagerService$NeededUriGrants: boolean add(java.lang.Object)>(r4);

     label06:
        if r5 == null goto label14;

        i2 = 0;

     label07:
        i3 = virtualinvoke r5.<android.content.ClipData: int getItemCount()>();

        if i2 >= i3 goto label14;

        $r9 = virtualinvoke r5.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i2);

        r6 = virtualinvoke $r9.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if r6 == null goto label13;

        if r3 == null goto label12;

        i4 = r3.<com.android.server.am.ActivityManagerService$NeededUriGrants: int targetUid>;

     label08:
        i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,int)>(i0, r1, r6, i1, i4);

        if i5 <= 0 goto label10;

        if r3 != null goto label09;

        $r11 = new com.android.server.am.ActivityManagerService$NeededUriGrants;

        specialinvoke $r11.<com.android.server.am.ActivityManagerService$NeededUriGrants: void <init>(java.lang.String,int,int)>(r1, i5, i1);

        r3 = $r11;

     label09:
        virtualinvoke r3.<com.android.server.am.ActivityManagerService$NeededUriGrants: boolean add(java.lang.Object)>(r6);

     label10:
        i2 = i2 + 1;

        goto label07;

     label11:
        i7 = -1;

        goto label04;

     label12:
        i4 = -1;

        goto label08;

     label13:
        $r10 = virtualinvoke r5.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i2);

        r7 = virtualinvoke $r10.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r7 == null goto label10;

        r8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants)>(i0, r1, r7, i1, r3);

        if r8 == null goto label10;

        r3 = r8;

        goto label10;

     label14:
        return r3;
    }

    int checkGrantUriPermissionLocked(int, java.lang.String, android.net.Uri, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i6, i7, i8, $i9, i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String r1, $r6, $r7, $r8, $r18, $r23, $r27, $r31, $r33, $r36, $r41, $r42, $r44, $r49, $r50, $r51;
        android.net.Uri r2;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.content.pm.IPackageManager r3;
        android.content.pm.ProviderInfo r4;
        byte b5;
        android.os.PatternMatcher[] $r9, $r19, $r28, $r30;
        java.lang.SecurityException $r10, $r16, $r32;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r17, $r20, $r21, $r22, $r24, $r25, $r26, $r35, $r37, $r38, $r39, $r40, $r43, $r45, $r46, $r47, $r48, $r52;
        android.os.PatternMatcher $r29, $r34;
        android.os.RemoteException $r53;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $i9 = i1 & 64;

        if $i9 == 0 goto label03;

        z0 = 1;

     label01:
        i3 = i1 & 3;

        if i3 != 0 goto label04;

        i4 = -1;

     label02:
        return i4;

     label03:
        z0 = 0;

        goto label01;

     label04:
        if r1 == null goto label05;

     label05:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r6 = "content";

        $r7 = virtualinvoke r2.<android.net.Uri: java.lang.String getScheme()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label06;

        return -1;

     label06:
        $r8 = virtualinvoke r2.<android.net.Uri: java.lang.String getAuthority()>();

        $i11 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>($r8, $i11);

        if r4 != null goto label07;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission check: ");

        $r49 = virtualinvoke r2.<android.net.Uri: java.lang.String toSafeString()>();

        $r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r51);

        return -1;

     label07:
        i4 = i2;

        if i4 >= 0 goto label11;

        if r1 == null goto label11;

     label08:
        $i15 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        i10 = interfaceinvoke r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, $i15);

     label09:
        i4 = i10;

        if i4 >= 0 goto label11;

        return -1;

     label10:
        $r53 := @caughtexception;

        return -1;

     label11:
        if i4 < 0 goto label12;

        $z8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,android.net.Uri,int,int)>(r3, r4, r2, i4, i3);

        if $z8 == 0 goto label15;

        return -1;

     label12:
        z1 = r4.<android.content.pm.ProviderInfo: boolean exported>;

        $i12 = i3 & 1;

        if $i12 == 0 goto label13;

        $r50 = r4.<android.content.pm.ProviderInfo: java.lang.String readPermission>;

        if $r50 == null goto label13;

        z1 = 0;

     label13:
        $i13 = i3 & 2;

        if $i13 == 0 goto label14;

        $r42 = r4.<android.content.pm.ProviderInfo: java.lang.String writePermission>;

        if $r42 == null goto label14;

        z1 = 0;

     label14:
        if z1 == 0 goto label15;

        return -1;

     label15:
        $z4 = r4.<android.content.pm.ProviderInfo: boolean grantUriPermissions>;

        if $z4 != 0 goto label16;

        $r32 = new java.lang.SecurityException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r36 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r43 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r44 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not allow granting of Uri permissions (uri ");

        $r39 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.SecurityException: void <init>(java.lang.String)>($r41);

        throw $r32;

     label16:
        $r9 = r4.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        if $r9 == null goto label20;

        $r19 = r4.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        i6 = lengthof $r19;

        i7 = 0;

     label17:
        i8 = i7;

        z2 = 0;

        if i8 >= i6 goto label18;

        $r30 = r4.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r29 = $r30[i7];

        if $r29 == null goto label19;

        $r28 = r4.<android.content.pm.ProviderInfo: android.os.PatternMatcher[] uriPermissionPatterns>;

        $r34 = $r28[i7];

        $r33 = virtualinvoke r2.<android.net.Uri: java.lang.String getPath()>();

        $z7 = virtualinvoke $r34.<android.os.PatternMatcher: boolean match(java.lang.String)>($r33);

        if $z7 == 0 goto label19;

        z2 = 1;

     label18:
        if z2 != 0 goto label20;

        $r16 = new java.lang.SecurityException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r23 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r27 = r4.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not allow granting of permission to path of Uri ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r31 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>($r31);

        throw $r16;

     label19:
        i7 = i7 + 1;

        goto label17;

     label20:
        $i14 = staticinvoke <android.os.Process: int myUid()>();

        if i0 == $i14 goto label02;

        $z5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,android.net.Uri,int,int)>(r3, r4, r2, i0, i3);

        if $z5 != 0 goto label02;

        if z0 == 0 goto label22;

        b5 = 3;

     label21:
        $z6 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkUriPermissionLocked(android.net.Uri,int,int,int)>(r2, i0, i3, b5);

        if $z6 != 0 goto label02;

        $r10 = new java.lang.SecurityException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uid ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission to uri ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r18);

        throw $r10;

     label22:
        b5 = 1;

        goto label21;

        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public int checkPermission(java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return -1;

     label1:
        $i2 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i1);

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r1, i0, $i2, -1, 1);

        return $i3;
    }

    public int checkUriPermission(android.net.Uri, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, i1, i2, $i4;
        com.android.server.am.ActivityManagerService$Identity r2;
        java.lang.Throwable r3, $r6;
        boolean z0;
        byte b3;
        java.lang.ThreadLocal $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("checkUriPermission");

        $r4 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r5 = virtualinvoke $r4.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (com.android.server.am.ActivityManagerService$Identity) $r5;

        if r2 == null goto label01;

        i1 = r2.<com.android.server.am.ActivityManagerService$Identity: int uid>;

        i0 = r2.<com.android.server.am.ActivityManagerService$Identity: int pid>;

     label01:
        $i4 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if i0 != $i4 goto label02;

        return 0;

     label02:
        entermonitor r0;

     label03:
        z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkUriPermissionLocked(android.net.Uri,int,int,int)>(r1, i1, i2, 1);

     label04:
        b3 = 0;

        if z0 == 0 goto label10;

     label05:
        exitmonitor r0;

     label06:
        return b3;

     label07:
        $r6 := @caughtexception;

        r3 = $r6;

     label08:
        exitmonitor r0;

     label09:
        throw r3;

     label10:
        b3 = -1;

        goto label05;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public boolean clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r22, $r24;
        android.content.pm.IPackageDataObserver r2;
        int i0, i1, i2, i3, i5, i6, $i8;
        long l4;
        java.lang.Throwable r3, r8, $r28, $r29;
        android.content.pm.IPackageManager r4;
        android.content.Intent r7, $r10;
        android.net.Uri $r11;
        java.lang.StringBuilder $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r25;
        java.lang.SecurityException $r15;
        android.os.RemoteException $r26, $r27, $r30;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("clearApplicationUserData");

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i2, i1, i0, 0, 1, "clearApplicationUserData", null);

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r4 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label02:
        i5 = -1;

     label03:
        entermonitor r0;

     label04:
        i6 = interfaceinvoke r4.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, i3);

     label05:
        i5 = i6;

     label06:
        if i5 != -1 goto label19;

     label07:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r24);

     label08:
        if r2 == null goto label10;

     label09:
        interfaceinvoke r2.<android.content.pm.IPackageDataObserver: void onRemoveCompleted(java.lang.String,boolean)>(r1, 0);

     label10:
        exitmonitor r0;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return 0;

     label12:
        $r27 := @caughtexception;

     label13:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "Observer no longer exists.");

     label14:
        goto label10;

     label15:
        $r29 := @caughtexception;

        r8 = $r29;

     label16:
        exitmonitor r0;

     label17:
        throw r8;

     label18:
        $r28 := @caughtexception;

        r3 = $r28;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw r3;

     label19:
        if i1 == i5 goto label21;

     label20:
        $i8 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.CLEAR_APP_USER_DATA", i2, i1, -1, 1);

        if $i8 != 0 goto label24;

     label21:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int,java.lang.String)>(r1, i5, "clear data");

        exitmonitor r0;

     label22:
        interfaceinvoke r4.<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>(r1, r2, i3);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionsForPackageLocked(java.lang.String,int,boolean)>(r1, i3, 1);

        $r10 = new android.content.Intent;

        $r11 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("package", r1, null);

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.PACKAGE_DATA_CLEARED", $r11);

        r7 = $r10;

        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.UID", i5);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentInPackage(java.lang.String,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)>("android", 1000, r7, null, null, 0, null, null, null, 0, 0, i3);

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        return 1;

     label24:
        $r15 = new java.lang.SecurityException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have permission:");

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.CLEAR_APP_USER_DATA");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to clear data");

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for process:");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label25:
        $r26 := @caughtexception;

        goto label06;

     label26:
        $r30 := @caughtexception;

        goto label23;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch android.os.RemoteException from label04 to label05 with label25;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch android.os.RemoteException from label09 to label10 with label12;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label17 to label18 with label18;
        catch java.lang.Throwable from label20 to label21 with label15;
        catch java.lang.Throwable from label21 to label22 with label15;
        catch android.os.RemoteException from label22 to label23 with label26;
        catch java.lang.Throwable from label22 to label23 with label18;
        catch java.lang.Throwable from label24 to label25 with label15;
    }

    public void clearPendingBackup()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.BACKUP", "clearPendingBackup");

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void closeSystemDialogs(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r13;
        int i0, i1, $i3;
        long l2;
        java.lang.Throwable r2, r3, r5, $r15, $r16, $r17;
        android.util.SparseArray r4, $r7;
        com.android.server.am.ProcessRecord r6;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("closeSystemDialogs");

        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        entermonitor r0;

     label02:
        if i1 < 10000 goto label14;

     label03:
        r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r4;

     label04:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.am.ProcessRecord) $r8;

        exitmonitor r4;

     label05:
        $i3 = r6.<com.android.server.am.ProcessRecord: int curRawAdj>;

        if $i3 <= 2 goto label14;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring closeSystemDialogs ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from background process ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

        exitmonitor r0;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label07:
        $r15 := @caughtexception;

        r5 = $r15;

     label08:
        exitmonitor r4;

     label09:
        throw r5;

     label10:
        $r17 := @caughtexception;

        r3 = $r17;

     label11:
        exitmonitor r0;

     label12:
        throw r3;

     label13:
        $r16 := @caughtexception;

        r2 = $r16;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label14:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void closeSystemDialogsLocked(java.lang.String)>(r1);

        exitmonitor r0;

     label15:
        goto label06;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label10;
    }

    void closeSystemDialogsLocked(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.content.Intent r2, $r3;
        com.android.server.wm.WindowManagerService $r5;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CLOSE_SYSTEM_DIALOGS");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        if r1 == null goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", r1);

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void closeSystemDialogs(java.lang.String)>(r1);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: void closeSystemDialogsLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r2, null, null, 0, null, null, null, -1, 0, 0, -1, 1000, -1);

        return;
    }

    java.util.ArrayList collectProcesses(java.io.PrintWriter, int, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8;
        java.lang.String[] r2;
        java.util.ArrayList r3, $r7, $r8, $r11, $r12, $r14;
        java.lang.Throwable r4, $r18;
        com.android.server.am.ProcessRecord r6;
        char $c5;
        java.lang.String $r9, $r10, $r15, $r16;
        java.lang.Object $r13;
        boolean $z2;
        java.lang.NumberFormatException $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String[];

        entermonitor r0;

        if r2 == null goto label16;

     label01:
        $i4 = lengthof r2;

        if $i4 <= i0 goto label16;

        $r9 = r2[i0];

        $c5 = virtualinvoke $r9.<java.lang.String: char charAt(int)>(0);

        if $c5 == 45 goto label16;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = $r11;

     label02:
        i1 = -1;

     label03:
        $r10 = r2[i0];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

     label04:
        i1 = i3;

     label05:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i6 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i2 = -1 + $i6;

     label06:
        if i2 < 0 goto label14;

     label07:
        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r13 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (com.android.server.am.ProcessRecord) $r13;

        $i8 = r6.<com.android.server.am.ProcessRecord: int pid>;

        if $i8 != i1 goto label09;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label08:
        goto label20;

     label09:
        $r16 = r6.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r15 = r2[i0];

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 == 0 goto label20;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label10:
        goto label20;

     label11:
        $r18 := @caughtexception;

        r4 = $r18;

     label12:
        exitmonitor r0;

     label13:
        throw r4;

     label14:
        $i7 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i7 > 0 goto label17;

        exitmonitor r0;

     label15:
        return null;

     label16:
        $r7 = new java.util.ArrayList;

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r3 = $r7;

     label17:
        exitmonitor r0;

     label18:
        return r3;

     label19:
        $r17 := @caughtexception;

        goto label05;

     label20:
        i2 = i2 + -1;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.NumberFormatException from label03 to label04 with label19;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.lang.Throwable from label16 to label17 with label11;
        catch java.lang.Throwable from label17 to label18 with label11;
    }

    android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        com.android.server.am.CompatModePackages $r2;
        android.content.res.CompatibilityInfo $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $r3 = virtualinvoke $r2.<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r1);

        return $r3;
    }

    void completeSwitchAndInitalize(com.android.server.am.UserStartedState, int, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1, i2, $i3;
        boolean z0, z1, z2, z3, z4;
        java.lang.Throwable r2, $r12;
        android.os.RemoteCallbackList $r4, $r5, $r6;
        android.app.IUserSwitchObserver $r7;
        android.os.IInterface $r8;
        com.android.server.pm.UserManagerService $r9;
        com.android.server.wm.WindowManagerService $r10;
        android.os.UserHandle $r11;
        android.os.RemoteException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        entermonitor r0;

        if z0 == 0 goto label02;

     label01:
        r1.<com.android.server.am.UserStartedState: boolean initializing> = 0;

        $r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $r11 = r1.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        $i3 = virtualinvoke $r11.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke $r9.<com.android.server.pm.UserManagerService: void makeInitialized(int)>($i3);

     label02:
        if z1 == 0 goto label04;

     label03:
        r1.<com.android.server.am.UserStartedState: boolean switching> = 0;

     label04:
        z2 = r1.<com.android.server.am.UserStartedState: boolean switching>;

     label05:
        z3 = 0;

        if z2 != 0 goto label10;

     label06:
        z4 = r1.<com.android.server.am.UserStartedState: boolean initializing>;

     label07:
        z3 = 0;

        if z4 != 0 goto label10;

     label08:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void stopFreezingScreen()>();

     label09:
        z3 = 1;

     label10:
        exitmonitor r0;

     label11:
        if z3 == 0 goto label19;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        i1 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label12:
        if i2 >= i1 goto label18;

     label13:
        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r8 = virtualinvoke $r5.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r7 = (android.app.IUserSwitchObserver) $r8;

        interfaceinvoke $r7.<android.app.IUserSwitchObserver: void onUserSwitchComplete(int)>(i0);

     label14:
        i2 = i2 + 1;

        goto label12;

     label15:
        $r12 := @caughtexception;

        r2 = $r12;

     label16:
        exitmonitor r0;

     label17:
        throw r2;

     label18:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

     label19:
        return;

     label20:
        $r13 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch android.os.RemoteException from label13 to label14 with label20;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    void continueUserSwitch(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void completeSwitchAndInitalize(com.android.server.am.UserStartedState,int,boolean,boolean)>(r1, i1, 0, 1);

        return;
    }

    public boolean convertFromTranslucent(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        long l0;
        java.lang.Throwable r2, r3, $r7, $r8;
        com.android.server.am.ActivityRecord r4;
        boolean $z0;
        com.android.server.wm.WindowManagerService $r5;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        entermonitor r0;

     label02:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label03:
        if r4 != null goto label06;

     label04:
        exitmonitor r0;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 0;

     label06:
        $z0 = virtualinvoke r4.<com.android.server.am.ActivityRecord: boolean changeWindowTranslucency(boolean)>(1);

        if $z0 == 0 goto label08;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void setAppFullscreen(android.os.IBinder,boolean)>(r1, 1);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

        exitmonitor r0;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return 1;

     label08:
        exitmonitor r0;

     label09:
        goto label05;

     label10:
        $r7 := @caughtexception;

        r3 = $r7;

     label11:
        exitmonitor r0;

     label12:
        throw r3;

     label13:
        $r8 := @caughtexception;

        r2 = $r8;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
    }

    public boolean convertToTranslucent(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        boolean z0, $z1;
        long l0;
        java.lang.Throwable r2, r3, $r9, $r10;
        com.android.server.am.ActivityRecord r4;
        com.android.server.am.TaskRecord $r5;
        com.android.server.am.ActivityStack $r6;
        com.android.server.wm.WindowManagerService $r7;
        com.android.server.am.ActivityStackSupervisor $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 = 0;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        entermonitor r0;

     label02:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label03:
        if r4 != null goto label06;

     label04:
        exitmonitor r0;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label06:
        $z1 = virtualinvoke r4.<com.android.server.am.ActivityRecord: boolean changeWindowTranslucency(boolean)>(0);

        if $z1 == 0 goto label14;

        $r5 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r6 = $r5.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r6.<com.android.server.am.ActivityStack: void convertToTranslucent(com.android.server.am.ActivityRecord)>(r4);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void setAppFullscreen(android.os.IBinder,boolean)>(r1, 0);

        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r8.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

     label07:
        z0 = 1;

     label08:
        exitmonitor r0;

     label09:
        goto label05;

     label10:
        $r9 := @caughtexception;

        r3 = $r9;

     label11:
        exitmonitor r0;

     label12:
        throw r3;

     label13:
        $r10 := @caughtexception;

        r2 = $r10;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label14:
        exitmonitor r0;

     label15:
        z0 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label10;
    }

    public void crashApplication(int, int, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13;
        java.lang.String r1, r2, r9, $r18;
        com.android.server.am.ProcessRecord r3, r8;
        java.lang.Throwable r4, r6, $r32, $r34;
        android.util.SparseArray r5, $r10, $r21;
        long l3;
        android.app.IApplicationThread $r11, $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r24, $r25, $r26, $r27, $r28, $r29, $r31;
        java.lang.Object $r22;
        android.util.ArrayMap $r23;
        boolean $z0;
        java.lang.SecurityException $r30;
        android.os.RemoteException $r33;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i4 == 0 goto label01;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: crashApplication() from pid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i13 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r9 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r9);

        $r30 = new java.lang.SecurityException;

        specialinvoke $r30.<java.lang.SecurityException: void <init>(java.lang.String)>(r9);

        throw $r30;

     label01:
        entermonitor r0;

        r3 = null;

     label02:
        r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r5;

     label03:
        i2 = 0;

     label04:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i5 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        if i2 >= $i5 goto label08;

        $r21 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r22 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r8 = (com.android.server.am.ProcessRecord) $r22;

        $i10 = r8.<com.android.server.am.ProcessRecord: int uid>;

        if $i10 == i0 goto label06;

     label05:
        goto label28;

     label06:
        $i11 = r8.<com.android.server.am.ProcessRecord: int pid>;

        if $i11 != i1 goto label12;

     label07:
        r3 = r8;

     label08:
        exitmonitor r5;

     label09:
        if r3 != null goto label20;

     label10:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("crashApplication: nothing for uid=");

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" initialPid=");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packageName=");

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r18);

        exitmonitor r0;

     label11:
        return;

     label12:
        $r23 = r8.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z0 = virtualinvoke $r23.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label28;

     label13:
        r3 = r8;

        goto label28;

     label14:
        $r32 := @caughtexception;

        r6 = $r32;

     label15:
        exitmonitor r5;

     label16:
        throw r6;

     label17:
        $r34 := @caughtexception;

        r4 = $r34;

     label18:
        exitmonitor r0;

     label19:
        throw r4;

     label20:
        $r11 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r11 == null goto label25;

        $i6 = r3.<com.android.server.am.ProcessRecord: int pid>;

        $i7 = staticinvoke <android.os.Process: int myPid()>();

        if $i6 != $i7 goto label22;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActivityManager", "crashApplication: trying to crash self!");

        exitmonitor r0;

     label21:
        return;

     label22:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label23:
        $r12 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r12.<android.app.IApplicationThread: void scheduleCrash(java.lang.String)>(r2);

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

     label25:
        exitmonitor r0;

     label26:
        return;

     label27:
        $r33 := @caughtexception;

        goto label24;

     label28:
        i2 = i2 + 1;

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label20 to label21 with label17;
        catch java.lang.Throwable from label22 to label23 with label17;
        catch android.os.RemoteException from label23 to label24 with label27;
        catch java.lang.Throwable from label23 to label24 with label17;
        catch java.lang.Throwable from label24 to label25 with label17;
        catch java.lang.Throwable from label25 to label26 with label17;
    }

    android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord, long, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0;
        android.app.ApplicationErrorReport$CrashInfo r2;
        android.app.ApplicationErrorReport r3;
        android.content.Intent r4, $r5;
        android.content.ComponentName $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        r2 := @parameter2: android.app.ApplicationErrorReport$CrashInfo;

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.ApplicationErrorReport createAppErrorReportLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)>(r1, l0, r2);

        if r3 != null goto label1;

        return null;

     label1:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.APP_ERROR");

        r4 = $r5;

        $r6 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r6);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.BUG_REPORT", r3);

        virtualinvoke r4.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        return r4;
    }

    public int createStack(int, int, int, float)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i4;
        float f0;
        java.lang.Throwable r1, r2, $r5, $r6;
        long l3;
        com.android.server.am.ActivityStackSupervisor $r3;
        com.android.server.wm.WindowManagerService $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "createStack()");

        entermonitor r0;

     label01:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        i4 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: int createStack()>();

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void createStack(int,int,int,float)>(i4, i1, i2, f0);

     label03:
        if i0 <= 0 goto label05;

     label04:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void moveTaskToStack(int,int,boolean)>(i0, i4, 1);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        exitmonitor r0;

     label06:
        return i4;

     label07:
        $r6 := @caughtexception;

        r2 = $r6;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r2;

     label09:
        $r5 := @caughtexception;

        r1 = $r5;

     label10:
        exitmonitor r0;

     label11:
        throw r1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection, com.android.server.am.ContentProviderRecord, android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ContentProviderConnection r1;
        com.android.server.am.ContentProviderRecord r2, r4;
        android.os.IBinder r3;
        boolean z0, z1;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList $r5, $r7;
        com.android.server.am.ProcessRecord $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ContentProviderConnection;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        r3 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        if r1 == null goto label4;

        r4 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        if z0 == 0 goto label3;

        $i5 = r1.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i4 = -1 + $i5;

        r1.<com.android.server.am.ContentProviderConnection: int stableCount> = $i4;

     label1:
        i0 = r1.<com.android.server.am.ContentProviderConnection: int stableCount>;

        z1 = 0;

        if i0 != 0 goto label2;

        i1 = r1.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        z1 = 0;

        if i1 != 0 goto label2;

        $r5 = r4.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r6 = r1.<com.android.server.am.ContentProviderConnection: com.android.server.am.ProcessRecord client>;

        $r7 = $r6.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        z1 = 1;

     label2:
        return z1;

     label3:
        $i2 = r1.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i3 = -1 + $i2;

        r1.<com.android.server.am.ContentProviderConnection: int unstableCount> = $i3;

        goto label1;

     label4:
        virtualinvoke r2.<com.android.server.am.ContentProviderRecord: boolean removeExternalProcessHandleLocked(android.os.IBinder)>(r3);

        return 0;
    }

    public void dismissKeyguardOnNextActivity()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        java.lang.Throwable r1, r2, $r4, $r5;
        boolean $z0;
        com.android.server.am.ActivityStackSupervisor $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("dismissKeyguardOnNextActivity");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        entermonitor r0;

     label2:
        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown>;

        if $z0 == 0 goto label3;

        r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown> = 0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void comeOutOfSleepIfNeededLocked()>();

     label3:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void setDismissKeyguard(boolean)>(1);

        exitmonitor r0;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

     label6:
        exitmonitor r0;

     label7:
        throw r2;

     label8:
        $r4 := @caughtexception;

        r1 = $r4;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    void dispatchUserSwitch(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1, i2, i3;
        com.android.server.am.ActivityManagerService$23 r2, r15;
        java.lang.Throwable r3, r5, $r13, $r14;
        android.os.RemoteCallbackList $r6, $r7, $r10;
        android.os.IInterface $r9;
        android.os.RemoteException $r11;
        android.app.IUserSwitchObserver $r12;
        android.os.IRemoteCallback r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        i2 = virtualinvoke $r6.<android.os.RemoteCallbackList: int beginBroadcast()>();

        if i2 <= 0 goto label09;

        r15 = new com.android.server.am.ActivityManagerService$23;

        specialinvoke r15.<com.android.server.am.ActivityManagerService$23: void <init>(com.android.server.am.ActivityManagerService,int,com.android.server.am.UserStartedState,int,int)>(r0, i2, r1, i0, i1);

        r2 = r15;

        entermonitor r0;

     label01:
        r1.<com.android.server.am.UserStartedState: boolean switching> = 1;

        r0.<com.android.server.am.ActivityManagerService: java.lang.Object mCurUserSwitchCallback> = r2;

        exitmonitor r0;

     label02:
        i3 = 0;

     label03:
        if i3 >= i2 goto label11;

     label04:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        $r9 = virtualinvoke $r10.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r12 = (android.app.IUserSwitchObserver) $r9;

        r16 = (android.os.IRemoteCallback) r2;

        interfaceinvoke $r12.<android.app.IUserSwitchObserver: void onUserSwitching(int,android.os.IRemoteCallback)>(i1, r16);

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        $r14 := @caughtexception;

        r3 = $r14;

     label07:
        exitmonitor r0;

     label08:
        throw r3;

     label09:
        entermonitor r0;

     label10:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendContinueUserSwitchLocked(com.android.server.am.UserStartedState,int,int)>(r1, i0, i1);

        exitmonitor r0;

     label11:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r7.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

     label12:
        $r13 := @caughtexception;

        r5 = $r13;

     label13:
        exitmonitor r0;

     label14:
        throw r5;

     label15:
        $r11 := @caughtexception;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch android.os.RemoteException from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    final void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r4, r5;
        int i0, i2, $i4, $i6, $i7, $i9, $i13, $i14, $i15, $i18, $i20;
        boolean z0, z1;
        java.util.ArrayList r2, $r6, $r9, $r10, $r14, $r18, $r20, $r21, $r25;
        long l1, l3, $l8, $l10, $l11, $l16, $l17;
        android.os.Message r3;
        java.lang.String $r7, $r8, $r17, $r19, $r22;
        android.os.Handler $r11, $r12;
        android.app.IApplicationThread $r13, $r23;
        java.lang.Object $r15, $r24;
        byte $b12, $b19;
        com.android.server.am.ProcessMemInfo $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i4 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = -1 + $i4;

     label01:
        z0 = 0;

        if i0 < 0 goto label02;

        $r25 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r24 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ProcessRecord) $r24;

        $r23 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r23 == null goto label07;

        $i20 = r5.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i20 < 11 goto label07;

        z0 = 1;

     label02:
        if z0 != 0 goto label16;

        $r7 = "1";

        $r8 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if z1 == 0 goto label03;

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l17 = r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime>;

        $l16 = 300000L + $l17;

        $b19 = l3 cmp $l16;

        if $b19 >= 0 goto label08;

        z1 = 0;

     label03:
        if z1 == 0 goto label09;

        $r21 = new java.util.ArrayList;

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i18 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i18);

        r2 = $r21;

     label04:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i6 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(30017, $i6);

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i7 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        i2 = -1 + $i7;

     label05:
        if i2 < 0 goto label14;

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.ProcessRecord) $r15;

        if r4 == r1 goto label06;

        $r13 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 != null goto label10;

     label06:
        i2 = i2 + -1;

        goto label05;

     label07:
        i0 = i0 + -1;

        goto label01;

     label08:
        r0.<com.android.server.am.ActivityManagerService: long mLastMemUsageReportTime> = l3;

        goto label03;

     label09:
        r2 = null;

        goto label04;

     label10:
        if z1 == 0 goto label11;

        $r16 = new com.android.server.am.ProcessMemInfo;

        $r17 = r4.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i15 = r4.<com.android.server.am.ProcessRecord: int pid>;

        $i14 = r4.<com.android.server.am.ProcessRecord: int setAdj>;

        $i13 = r4.<com.android.server.am.ProcessRecord: int setProcState>;

        $r19 = r4.<com.android.server.am.ProcessRecord: java.lang.String adjType>;

        $r22 = virtualinvoke r4.<com.android.server.am.ProcessRecord: java.lang.String makeAdjReason()>();

        specialinvoke $r16.<com.android.server.am.ProcessMemInfo: void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String)>($r17, $i15, $i14, $i13, $r19, $r22);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label11:
        $l8 = r4.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        $l11 = 60000L + $l8;

        $b12 = $l11 cmp l1;

        if $b12 > 0 goto label06;

        $i9 = r4.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i9 > 4 goto label13;

        r4.<com.android.server.am.ProcessRecord: long lastRequestedGc> = 0L;

     label12:
        r4.<com.android.server.am.ProcessRecord: boolean reportLowMemory> = 1;

        r4.<com.android.server.am.ProcessRecord: long lastLowMemory> = l1;

        $r18 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        virtualinvoke $r18.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r4);

        goto label06;

     label13:
        $l10 = r4.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        r4.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l10;

        goto label12;

     label14:
        if z1 == 0 goto label15;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r3 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(33, r2);

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r11.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

     label15:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label16:
        return;
    }

    final void doPendingActivityLaunchesLocked(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, z1;
        int i0, i1, i2, $i4;
        com.android.server.am.ActivityManagerService$PendingActivityLaunch r1;
        com.android.server.am.ActivityStackSupervisor r2;
        com.android.server.am.ActivityRecord r3, r4;
        java.util.ArrayList $r5, $r6, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingActivityLaunches>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 > 0 goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingActivityLaunches>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.ActivityManagerService$PendingActivityLaunch) $r8;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r3 = r1.<com.android.server.am.ActivityManagerService$PendingActivityLaunch: com.android.server.am.ActivityRecord r>;

        r4 = r1.<com.android.server.am.ActivityManagerService$PendingActivityLaunch: com.android.server.am.ActivityRecord sourceRecord>;

        i2 = r1.<com.android.server.am.ActivityManagerService$PendingActivityLaunch: int startFlags>;

        if z0 == 0 goto label4;

        $i4 = i0 - 1;

        if i1 != $i4 goto label4;

        z1 = 1;

     label3:
        virtualinvoke r2.<com.android.server.am.ActivityStackSupervisor: int startActivityUncheckedLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,int,boolean,android.os.Bundle)>(r3, r4, i2, z1, null);

        i1 = i1 + 1;

        goto label2;

     label4:
        z1 = 0;

        goto label3;

     label5:
        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingActivityLaunches>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3, r5, r7, r11, r12, r14, r16, r18, r21, r22, r23, r28, r30, r32, $r38, $r40, $r45;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i48, $i49, $i50;
        long l1;
        java.lang.String r4, r8, r9, r15, r19, r27, r29, r31, $r33, $r35, $r36, $r37, $r39, $r41, $r42, $r43, $r44, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r55, $r57, $r60, $r64, $r65, $r69, $r73, $r75, $r83;
        java.lang.Throwable r6, r10, r13, r17, r20, r24, r25, r26, $r78, $r79, $r86, $r87, $r88, $r89, $r90, $r91;
        com.android.server.am.ActiveServices $r34, $r56, $r61;
        java.lang.StringBuilder $r53, $r54, $r58, $r59, $r62, $r63, $r66, $r67, $r68, $r70, $r71, $r72, $r74, $r76, $r77, $r80, $r81, $r82, $r84, $r85;
        char $c46;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $i16 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i16 == 0 goto label01;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ActivityManager from from pid=");

        $i50 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r85 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i49 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r76 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r74 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r75);

        return;

     label01:
        z0 = 0;

        z1 = 0;

        i0 = 0;

     label02:
        $i15 = lengthof r3;

        if i0 >= $i15 goto label03;

        r31 = r3[i0];

        if r31 == null goto label03;

        $i47 = virtualinvoke r31.<java.lang.String: int length()>();

        if $i47 <= 0 goto label03;

        $c46 = virtualinvoke r31.<java.lang.String: char charAt(int)>(0);

        if $c46 == 45 goto label07;

     label03:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z2 = 0;

        i2 = lengthof r3;

        r4 = null;

        if i0 >= i2 goto label72;

        r8 = r3[i0];

        i0 = i0 + 1;

        $r35 = "activities";

        $z8 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z8 != 0 goto label04;

        $r33 = "a";

        $z7 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z7 == 0 goto label14;

     label04:
        entermonitor r0;

        r7 = r3;

     label05:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r7, i0, 1, z1, null);

        exitmonitor r0;

     label06:
        if z2 != 0 goto label72;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label07:
        i0 = i0 + 1;

        $r73 = "-a";

        $z26 = virtualinvoke $r73.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z26 == 0 goto label08;

        z0 = 1;

        goto label02;

     label08:
        $r65 = "-c";

        $z25 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z25 == 0 goto label09;

        z1 = 1;

        goto label02;

     label09:
        $r64 = "-h";

        $z27 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z27 == 0 goto label10;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Activity manager dump options:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  [-a] [-c] [-h] [cmd] ...");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  cmd may be one of:");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    a[ctivities]: activity stack state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    b[roadcasts] [PACKAGE_NAME] [history [-s]]: broadcast state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    i[ntents] [PACKAGE_NAME]: pending intent state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    p[rocesses] [PACKAGE_NAME]: process state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    o[om]: out of memory management");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    prov[iders] [COMP_SPEC ...]: content provider state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    provider [COMP_SPEC]: provider client-side state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    s[ervices] [COMP_SPEC ...]: service state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    service [COMP_SPEC]: service client-side state");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    package [PACKAGE_NAME]: all state related to given package");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    all: dump all activities");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    top: dump the top activity");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  cmd may also be a COMP_SPEC to dump activities.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  COMP_SPEC may be a component name (com.foo/.myApp),");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    a partial substring in a component name, a");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    hex object identifier.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -a: include all available server state.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -c: include client state.");

        return;

     label10:
        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r82 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r83);

        goto label02;

     label11:
        $r91 := @caughtexception;

        r10 = $r91;

     label12:
        exitmonitor r0;

     label13:
        throw r10;

     label14:
        $r36 = "broadcasts";

        $z9 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z9 != 0 goto label15;

        $r39 = "b";

        $z11 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z11 == 0 goto label23;

     label15:
        $i19 = lengthof r3;

        if i0 < $i19 goto label22;

        r9 = null;

        $r38 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

     label16:
        entermonitor r0;

        r12 = r3;

        i5 = i0;

     label17:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r12, i5, 1, r9);

        exitmonitor r0;

     label18:
        r4 = null;

        z2 = 0;

        goto label06;

     label19:
        $r89 := @caughtexception;

        r13 = $r89;

     label20:
        exitmonitor r0;

     label21:
        throw r13;

     label22:
        r9 = r3[i0];

        i0 = i0 + 1;

        $i20 = lengthof r3;

        $i17 = $i20 - i0;

        r11 = newarray (java.lang.String)[$i17];

        $i18 = lengthof r3;

        if $i18 <= 2 goto label16;

        $i23 = lengthof r3;

        i4 = $i23 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r11, 0, i4);

        goto label16;

     label23:
        $r37 = "intents";

        $z10 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z10 != 0 goto label24;

        $r41 = "i";

        $z12 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z12 == 0 goto label32;

     label24:
        $i22 = lengthof r3;

        if i0 < $i22 goto label31;

        r15 = null;

        $r40 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

     label25:
        entermonitor r0;

        r16 = r3;

        i7 = i0;

     label26:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r16, i7, 1, r15);

        exitmonitor r0;

     label27:
        r4 = null;

        z2 = 0;

        goto label06;

     label28:
        $r79 := @caughtexception;

        r17 = $r79;

     label29:
        exitmonitor r0;

     label30:
        throw r17;

     label31:
        r15 = r3[i0];

        i0 = i0 + 1;

        $i21 = lengthof r3;

        $i26 = $i21 - i0;

        r14 = newarray (java.lang.String)[$i26];

        $i25 = lengthof r3;

        if $i25 <= 2 goto label25;

        $i24 = lengthof r3;

        i6 = $i24 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r14, 0, i6);

        goto label25;

     label32:
        $r42 = "processes";

        $z13 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z13 != 0 goto label33;

        $r44 = "p";

        $z16 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z16 == 0 goto label41;

     label33:
        $i29 = lengthof r3;

        if i0 < $i29 goto label40;

        r19 = null;

        $r45 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

     label34:
        entermonitor r0;

        r21 = r3;

        i9 = i0;

     label35:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r21, i9, 1, r19);

        exitmonitor r0;

     label36:
        r4 = null;

        z2 = 0;

        goto label06;

     label37:
        $r87 := @caughtexception;

        r20 = $r87;

     label38:
        exitmonitor r0;

     label39:
        throw r20;

     label40:
        r19 = r3[i0];

        i0 = i0 + 1;

        $i30 = lengthof r3;

        $i27 = $i30 - i0;

        r18 = newarray (java.lang.String)[$i27];

        $i28 = lengthof r3;

        if $i28 <= 2 goto label34;

        $i31 = lengthof r3;

        i8 = $i31 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r18, 0, i8);

        goto label34;

     label41:
        $r43 = "oom";

        $z15 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z15 != 0 goto label42;

        $r48 = "o";

        $z19 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z19 == 0 goto label48;

     label42:
        entermonitor r0;

        r23 = r3;

     label43:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean)>(r1, r2, r23, i0, 1);

        exitmonitor r0;

     label44:
        r4 = null;

        z2 = 0;

        goto label06;

     label45:
        $r78 := @caughtexception;

        r24 = $r78;

     label46:
        exitmonitor r0;

     label47:
        throw r24;

     label48:
        $r47 = "provider";

        $z18 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z18 == 0 goto label51;

        $i38 = lengthof r3;

        if i0 < $i38 goto label50;

        r29 = null;

        r32 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

     label49:
        z6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r29, r32, 0, z0);

        r4 = null;

        z2 = 0;

        if z6 != 0 goto label06;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No providers match: ");

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r69);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

        r4 = null;

        z2 = 0;

        goto label06;

     label50:
        r29 = r3[i0];

        i0 = i0 + 1;

        $i39 = lengthof r3;

        $i40 = $i39 - i0;

        r32 = newarray (java.lang.String)[$i40];

        $i41 = lengthof r3;

        if $i41 <= 2 goto label49;

        $i48 = lengthof r3;

        i14 = $i48 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r32, 0, i14);

        goto label49;

     label51:
        $r46 = "providers";

        $z17 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z17 != 0 goto label52;

        $r52 = "prov";

        $z22 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z22 == 0 goto label58;

     label52:
        entermonitor r0;

        r22 = r3;

        i10 = i0;

     label53:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r22, i10, 1, null);

        exitmonitor r0;

     label54:
        r4 = null;

        z2 = 0;

        goto label06;

     label55:
        $r88 := @caughtexception;

        r26 = $r88;

     label56:
        exitmonitor r0;

     label57:
        throw r26;

     label58:
        $r51 = "service";

        $z21 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z21 == 0 goto label61;

        $i42 = lengthof r3;

        if i0 < $i42 goto label60;

        r27 = null;

        r30 = <com.android.server.am.ActivityManagerService: java.lang.String[] EMPTY_STRING_ARRAY>;

     label59:
        $r61 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        z5 = virtualinvoke $r61.<com.android.server.am.ActiveServices: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r27, r30, 0, z0);

        r4 = null;

        z2 = 0;

        if z5 != 0 goto label06;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No services match: ");

        $r59 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

        r4 = null;

        z2 = 0;

        goto label06;

     label60:
        r27 = r3[i0];

        i0 = i0 + 1;

        $i43 = lengthof r3;

        $i44 = $i43 - i0;

        r30 = newarray (java.lang.String)[$i44];

        $i45 = lengthof r3;

        if $i45 <= 2 goto label59;

        $i37 = lengthof r3;

        i13 = $i37 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i0, r30, 0, i13);

        goto label59;

     label61:
        $r50 = "package";

        $z20 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z20 == 0 goto label64;

        $i32 = lengthof r3;

        if i0 < $i32 goto label62;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("package: no package name specified");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

        r4 = null;

        z2 = 0;

        goto label06;

     label62:
        r4 = r3[i0];

        i12 = i0 + 1;

        $i34 = lengthof r3;

        $i33 = $i34 - i12;

        r28 = newarray (java.lang.String)[$i33];

        $i36 = lengthof r3;

        if $i36 <= 2 goto label63;

        $i35 = lengthof r3;

        i11 = $i35 - i12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i12, r28, 0, i11);

     label63:
        r3 = r28;

        z2 = 1;

        i0 = 0;

        goto label06;

     label64:
        $r49 = "services";

        $z23 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z23 != 0 goto label65;

        $r57 = "s";

        $z24 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z24 == 0 goto label71;

     label65:
        entermonitor r0;

     label66:
        $r56 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r56.<com.android.server.am.ActiveServices: void dumpServicesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, 1, z1, null);

        exitmonitor r0;

     label67:
        r4 = null;

        z2 = 0;

        goto label06;

     label68:
        $r86 := @caughtexception;

        r25 = $r86;

     label69:
        exitmonitor r0;

     label70:
        throw r25;

     label71:
        z4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r8, r3, i0, z0);

        r4 = null;

        z2 = 0;

        if z4 != 0 goto label06;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad activity command, or no activities match: ");

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Use -h for help.");

        r4 = null;

        z2 = 0;

        goto label06;

     label72:
        entermonitor r0;

        r5 = r3;

        i3 = i0;

        z3 = z0;

     label73:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r5, i3, z3, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label74:
        if z0 == 0 goto label76;

     label75:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label76:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, z0, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label77:
        if z0 == 0 goto label79;

     label78:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label79:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, z0, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label80:
        if z0 == 0 goto label82;

     label81:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label82:
        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r34.<com.android.server.am.ActiveServices: void dumpServicesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z0, z1, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label83:
        if z0 == 0 goto label85;

     label84:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label85:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z0, z1, r4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label86:
        if z0 == 0 goto label88;

     label87:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("-------------------------------------------------------------------------------");

     label88:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>(r1, r2, r3, i0, z0, r4);

        exitmonitor r0;

     label89:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label90:
        $r90 := @caughtexception;

        r6 = $r90;

     label91:
        exitmonitor r0;

     label92:
        throw r6;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label38 to label39 with label37;
        catch java.lang.Throwable from label43 to label44 with label45;
        catch java.lang.Throwable from label46 to label47 with label45;
        catch java.lang.Throwable from label53 to label54 with label55;
        catch java.lang.Throwable from label56 to label57 with label55;
        catch java.lang.Throwable from label66 to label67 with label68;
        catch java.lang.Throwable from label69 to label70 with label68;
        catch java.lang.Throwable from label73 to label74 with label90;
        catch java.lang.Throwable from label75 to label76 with label90;
        catch java.lang.Throwable from label76 to label77 with label90;
        catch java.lang.Throwable from label78 to label79 with label90;
        catch java.lang.Throwable from label79 to label80 with label90;
        catch java.lang.Throwable from label81 to label82 with label90;
        catch java.lang.Throwable from label82 to label83 with label90;
        catch java.lang.Throwable from label84 to label85 with label90;
        catch java.lang.Throwable from label85 to label86 with label90;
        catch java.lang.Throwable from label87 to label88 with label90;
        catch java.lang.Throwable from label88 to label89 with label90;
        catch java.lang.Throwable from label91 to label92 with label90;
    }

    void dumpActivitiesLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, $i3;
        boolean z0, z1, z2, z3, z4, $z5, $z6;
        java.lang.String r4;
        com.android.server.am.TaskRecord r5, $r15;
        com.android.server.am.ActivityStackSupervisor $r6, $r17;
        com.android.server.am.ActivityRecord $r7;
        java.util.ArrayList $r8, $r9, $r11, $r13;
        java.lang.Object $r10, $r12;
        android.content.ComponentName $r14, $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER ACTIVITIES (dumpsys activity activities)");

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z2 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,boolean,java.lang.String)>(r1, r2, z0, z1, r4);

        z3 = z2;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        $z5 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>(r2, $r7, r4, z3, "  mFocusedActivity: ");

        if $z5 == 0 goto label01;

        z2 = 1;

        z3 = 0;

     label01:
        if r4 != null goto label03;

        if z3 == 0 goto label02;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label02:
        z3 = 1;

        z2 = 1;

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r17.<com.android.server.am.ActivityStackSupervisor: void dump(java.io.PrintWriter,java.lang.String)>(r2, "  ");

     label03:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label09;

        z4 = 0;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i1 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i2 = 0;

     label04:
        if i2 >= i1 goto label09;

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.TaskRecord) $r10;

        if r4 == null goto label06;

        $r14 = r5.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        if $r14 == null goto label05;

        $r16 = r5.<com.android.server.am.TaskRecord: android.content.ComponentName realActivity>;

        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z6 != 0 goto label06;

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        if z4 != 0 goto label08;

        if z3 == 0 goto label07;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label07:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Recent tasks:");

        z4 = 1;

        z2 = 1;

     label08:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Recent #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        if z0 == 0 goto label05;

        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r12 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r15 = (com.android.server.am.TaskRecord) $r12;

        virtualinvoke $r15.<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label05;

     label09:
        if z2 != 0 goto label10;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label10:
        return;
    }

    protected boolean dumpActivity(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3, $r17;
        java.lang.String[] r4, r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1;
        java.lang.Throwable r5, r10, $r15, $r18;
        java.util.ArrayList r6;
        com.android.server.am.TaskRecord r8, $r13;
        com.android.server.am.ActivityRecord r9, $r16;
        com.android.server.am.ActivityStackSupervisor $r11;
        java.lang.Object $r12, $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        entermonitor r0;

     label01:
        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r6 = virtualinvoke $r11.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList getDumpActivitiesLocked(java.lang.String)>(r3);

        exitmonitor r0;

     label02:
        $i2 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i2 > 0 goto label06;

        return 0;

     label03:
        $r18 := @caughtexception;

        r5 = $r18;

     label04:
        exitmonitor r0;

     label05:
        throw r5;

     label06:
        $i4 = lengthof r4;

        $i3 = $i4 - i0;

        r7 = newarray (java.lang.String)[$i3];

        $i6 = lengthof r4;

        $i5 = $i6 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i0, r7, 0, $i5);

        r8 = null;

        z1 = 0;

        $i7 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        i1 = -1 + $i7;

     label07:
        if i1 < 0 goto label17;

        $r12 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r9 = (com.android.server.am.ActivityRecord) $r12;

        if z1 == 0 goto label08;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label08:
        z1 = 1;

        entermonitor r0;

     label09:
        $r13 = r9.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r8 == $r13 goto label12;

        r8 = r9.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("TASK ");

        $r17 = r8.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" id=");

        $i8 = r8.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i8);

     label10:
        if z0 == 0 goto label12;

     label11:
        virtualinvoke r8.<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "  ");

     label12:
        exitmonitor r0;

     label13:
        $r14 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r16 = (com.android.server.am.ActivityRecord) $r14;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpActivity(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String[],boolean)>("  ", r1, r2, $r16, r7, z0);

        i1 = i1 + -1;

        goto label07;

     label14:
        $r15 := @caughtexception;

        r10 = $r15;

     label15:
        exitmonitor r0;

     label16:
        throw r10;

     label17:
        return 1;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    final void dumpApplicationMemoryUsage(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], boolean, java.io.PrintWriter)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2, r5, r25;
        java.lang.String r3, r24, r26, r34, r50, $r69, $r76, $r78, $r82, $r86, $r87, $r99, $r102, $r105, $r109, $r115, $r116, $r122, $r124, $r126, $r127, $r131, $r136, $r137, $r142, $r143, $r144, $r145, $r146, $r147, $r148;
        java.lang.String[] r4, r8, $r47, $r48, $r64, $r67;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z16, $z17, $z18, $z19, $z26, $z27, $z28, $z29, $z30, $z31, $z33;
        int i0, i1, i4, i10, i11, i12, i13, i14, i15, i20, i22, i24, i25, i29, i31, i32, i33, i34, i35, i36, i37, i38, i39, $i40, $i41, $i42, $i43, $i44, $i46, $i47, $i50, $i51, $i65, $i66, $i116, $i117, $i122, $i124, $i126, $i129, $i130, $i132, $i134, $i135, $i136, $i137, $i138, $i139, $i141, $i146, $i147, $i148, $i149, $i150, $i152, $i153, $i154, $i156, $i160, $i161, $i163, $i166, $i168, $i169, $i170, $i171, $i173;
        long l2, l3, l5, l6, l7, l8, l9, l16, l17, l18, l19, l21, l23, l26, l27, l28, l30, $l45, $l48, $l49, $l52, $l53, $l54, $l56, $l57, $l58, $l59, $l60, $l62, $l63, $l64, $l68, $l69, $l70, $l71, $l72, $l73, $l74, $l75, $l76, $l77, $l78, $l79, $l82, $l83, $l84, $l85, $l86, $l87, $l88, $l89, $l90, $l91, $l92, $l93, $l94, $l95, $l96, $l97, $l98, $l99, $l101, $l102, $l103, $l104, $l105, $l106, $l107, $l108, $l109, $l110, $l111, $l112, $l113, $l114, $l115, $l118, $l120, $l121, $l123, $l125, $l127, $l128, $l131, $l133, $l140, $l142, $l143, $l144, $l145, $l151, $l155, $l157, $l158, $l159, $l162, $l164, $l165;
        java.util.ArrayList r6, r10, r17, r20, r40, $r46, $r53, $r56, $r66, $r70, $r71, $r72, $r91, $r106, $r107, $r108, $r123;
        long[] r7, r12, r13, r21;
        android.util.SparseArray r9, $r45;
        java.util.ArrayList[] r11, $r49;
        android.os.Debug$MemoryInfo r14, r18, r29, r43, $r89, $r98, $r112;
        java.lang.Throwable r15, r31, r35, r37, $r130, $r132, $r134, $r149, $r150;
        java.lang.Thread r16, r38;
        com.android.internal.util.MemInfoReader r19, $r54;
        int[] r22, $r58, $r68, $r88;
        com.android.server.am.ActivityManagerService$MemItem r23, r27, r36, $r51, $r52, $r57, $r63, $r65, $r73, $r85;
        com.android.internal.os.ProcessCpuTracker$Stats r28, r42, r44;
        android.app.IApplicationThread r30, $r92;
        com.android.server.am.ProcessRecord r32;
        java.lang.StringBuilder r33, $r74, $r75, $r77, $r79, $r80, $r81, $r83, $r84, $r93, $r94, $r95, $r96, $r97, $r100, $r101, $r103, $r104, $r113, $r114, $r117, $r119, $r120, $r121, $r125, $r138, $r139, $r140, $r141;
        com.android.internal.os.ProcessCpuTracker $r55, $r62, $r118, $r129;
        byte $b55, $b61, $b67, $b80, $b81, $b100, $b119;
        com.android.server.am.ProcessList $r59, $r60, $r61;
        java.lang.Object $r90, $r128;
        android.util.ArrayMap $r110;
        com.android.internal.app.ProcessStats$ProcessState $r111;
        char $c167, $c172;
        java.lang.NumberFormatException $r133;
        android.os.RemoteException $r135;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        z0 := @parameter4: boolean;

        r5 := @parameter5: java.io.PrintWriter;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        i0 = 0;

     label001:
        i1 = lengthof r4;

        if i0 >= i1 goto label002;

        r50 = r4[i0];

        if r50 == null goto label002;

        $i173 = virtualinvoke r50.<java.lang.String: int length()>();

        if $i173 <= 0 goto label002;

        $c172 = virtualinvoke r50.<java.lang.String: char charAt(int)>(0);

        if $c172 == 45 goto label012;

     label002:
        z7 = staticinvoke <com.android.server.am.ActivityManagerService: boolean scanArgs(java.lang.String[],java.lang.String)>(r4, "--checkin");

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r7 = newarray (long)[1];

        r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,java.lang.String[])>(r2, i0, r4);

        if r6 != null goto label033;

        if r4 == null goto label032;

        $i168 = lengthof r4;

        if $i168 <= i0 goto label032;

        $r127 = r4[i0];

        $c167 = virtualinvoke $r127.<java.lang.String: char charAt(int)>(0);

        if $c167 == 45 goto label032;

        $r123 = new java.util.ArrayList;

        specialinvoke $r123.<java.util.ArrayList: void <init>()>();

        r40 = $r123;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        i35 = -1;

     label003:
        $r124 = r4[i0];

        i36 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r124);

     label004:
        i35 = i36;

     label005:
        r38 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        entermonitor r38;

     label006:
        $r129 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i34 = virtualinvoke $r129.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

     label007:
        i39 = 0;

     label008:
        if i39 >= i34 goto label020;

     label009:
        $r118 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r44 = virtualinvoke $r118.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i39);

        $i171 = r44.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        if $i171 == i35 goto label010;

        $r147 = r44.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        if $r147 == null goto label011;

        $r148 = r44.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        $r146 = r4[i0];

        $z33 = virtualinvoke $r148.<java.lang.String: boolean equals(java.lang.Object)>($r146);

        if $z33 == 0 goto label011;

     label010:
        virtualinvoke r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r44);

     label011:
        i39 = i39 + 1;

        goto label008;

     label012:
        i0 = i0 + 1;

        $r143 = "-a";

        $z29 = virtualinvoke $r143.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z29 == 0 goto label013;

        z1 = 1;

        z2 = 1;

        z3 = 1;

        goto label001;

     label013:
        $r142 = "-d";

        $z28 = virtualinvoke $r142.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z28 == 0 goto label014;

        z3 = 1;

        goto label001;

     label014:
        $r145 = "-c";

        $z31 = virtualinvoke $r145.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z31 == 0 goto label015;

        z5 = 1;

        goto label001;

     label015:
        $r144 = "--oom";

        $z30 = virtualinvoke $r144.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z30 == 0 goto label016;

        z4 = 1;

        goto label001;

     label016:
        $r137 = "--local";

        $z27 = virtualinvoke $r137.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z27 == 0 goto label017;

        z6 = 1;

        goto label001;

     label017:
        $r136 = "-h";

        $z26 = virtualinvoke $r136.<java.lang.String: boolean equals(java.lang.Object)>(r50);

        if $z26 == 0 goto label019;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("meminfo dump options: [-a] [-d] [-c] [--oom] [process]");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -a: include all available information for each process.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -d: include dalvik details when dumping process details.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  -c: dump in a compact machine-parseable representation.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --oom: only show processes organized by oom adj.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  --local: only collect details locally, don\'t call process.");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("If [process] is specified it can be the name or ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("pid of a specific process to dump.");

     label018:
        return;

     label019:
        $r140 = new java.lang.StringBuilder;

        specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown argument: ");

        $r138 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; use -h for help");

        $r131 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r131);

        goto label001;

     label020:
        exitmonitor r38;

     label021:
        $i169 = virtualinvoke r40.<java.util.ArrayList: int size()>();

        if $i169 <= 0 goto label032;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsageHeader(java.io.PrintWriter,long,long,boolean,boolean)>(r2, l2, l3, z7, z5);

        r43 = null;

        $i170 = virtualinvoke r40.<java.util.ArrayList: int size()>();

        i38 = -1 + $i170;

     label022:
        if i38 < 0 goto label018;

        $r128 = virtualinvoke r40.<java.util.ArrayList: java.lang.Object get(int)>(i38);

        r42 = (com.android.internal.os.ProcessCpuTracker$Stats) $r128;

        i37 = r42.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        if z7 != 0 goto label023;

        if z1 == 0 goto label023;

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        $r113 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** MEMINFO in pid ");

        $r120 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i37);

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r122 = r42.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        $r117 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r116 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r116);

     label023:
        if r43 != null goto label024;

        $r112 = new android.os.Debug$MemoryInfo;

        specialinvoke $r112.<android.os.Debug$MemoryInfo: void <init>()>();

        r43 = $r112;

     label024:
        if z1 != 0 goto label025;

        if z0 != 0 goto label031;

        if z4 != 0 goto label031;

     label025:
        staticinvoke <android.os.Debug: void getMemoryInfo(int,android.os.Debug$MemoryInfo)>(i37, r43);

     label026:
        $r115 = r42.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String baseName>;

        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>(r2, r43, z7, z2, z3, i37, $r115, 0L, 0L, 0L, 0L, 0L, 0L);

        if z7 == 0 goto label027;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label027:
        i38 = i38 + -1;

        goto label022;

     label028:
        $r130 := @caughtexception;

        r37 = $r130;

     label029:
        exitmonitor r38;

     label030:
        throw r37;

     label031:
        $l164 = staticinvoke <android.os.Debug: long getPss(int,long[])>(i37, r7);

        $i166 = (int) $l164;

        r43.<android.os.Debug$MemoryInfo: int dalvikPss> = $i166;

        $l165 = r7[0];

        $i163 = (int) $l165;

        r43.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i163;

        goto label026;

     label032:
        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r99 = r4[i0];

        $r125 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r126);

        return;

     label033:
        if z0 != 0 goto label035;

        if z4 != 0 goto label035;

        $i153 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i153 == 1 goto label034;

        if z7 == 0 goto label035;

     label034:
        z1 = 1;

     label035:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsageHeader(java.io.PrintWriter,long,long,boolean,boolean)>(r2, l2, l3, z7, z5);

        $i42 = lengthof r4;

        $i44 = $i42 - i0;

        r8 = newarray (java.lang.String)[$i44];

        $i43 = lengthof r4;

        i4 = $i43 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i0, r8, 0, i4);

        $r46 = new java.util.ArrayList;

        specialinvoke $r46.<java.util.ArrayList: void <init>()>();

        r10 = $r46;

        $r45 = new android.util.SparseArray;

        specialinvoke $r45.<android.util.SparseArray: void <init>()>();

        r9 = $r45;

        l5 = 0L;

        l6 = 0L;

        l7 = 0L;

        r12 = newarray (long)[16];

        $r47 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        $i40 = lengthof $r47;

        r13 = newarray (long)[$i40];

        $r48 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        $i41 = lengthof $r48;

        $r49 = newarray (java.util.ArrayList)[$i41];

        r11 = (java.util.ArrayList[]) $r49;

        l8 = 0L;

        l9 = 0L;

        r14 = null;

        $i46 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        i11 = -1 + $i46;

     label036:
        if i11 < 0 goto label070;

        $r90 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r32 = (com.android.server.am.ProcessRecord) $r90;

        entermonitor r0;

     label037:
        r30 = r32.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        i25 = r32.<com.android.server.am.ProcessRecord: int pid>;

        i24 = virtualinvoke r32.<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>();

        $r91 = r32.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i147 = virtualinvoke $r91.<java.util.ArrayList: int size()>();

        if $i147 <= 0 goto label051;

     label038:
        z8 = 1;

     label039:
        exitmonitor r0;

     label040:
        if r30 == null goto label068;

        if z7 != 0 goto label041;

        if z1 == 0 goto label041;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** MEMINFO in pid ");

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r105 = r32.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r104 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r102);

     label041:
        if r14 != null goto label042;

        $r98 = new android.os.Debug$MemoryInfo;

        specialinvoke $r98.<android.os.Debug$MemoryInfo: void <init>()>();

        r14 = $r98;

     label042:
        if z1 != 0 goto label043;

        if z0 != 0 goto label055;

        if z4 != 0 goto label055;

     label043:
        staticinvoke <android.os.Debug: void getMemoryInfo(int,android.os.Debug$MemoryInfo)>(i25, r14);

     label044:
        if z1 == 0 goto label045;

        if z6 == 0 goto label056;

        $r109 = r32.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        staticinvoke <android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug$MemoryInfo,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>(r2, r14, z7, z2, z3, i25, $r109, 0L, 0L, 0L, 0L, 0L, 0L);

        if z7 == 0 goto label045;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label045:
        $i148 = virtualinvoke r14.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l28 = (long) $i148;

        $i149 = virtualinvoke r14.<android.os.Debug$MemoryInfo: int getTotalUss()>();

        l27 = (long) $i149;

        entermonitor r0;

     label046:
        $r92 = r32.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r92 == null goto label047;

        $i160 = virtualinvoke r32.<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>();

        if i24 != $i160 goto label047;

        $r111 = r32.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r110 = r32.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r111.<com.android.internal.app.ProcessStats$ProcessState: void addPss(long,long,boolean,android.util.ArrayMap)>(l28, l27, 1, $r110);

     label047:
        exitmonitor r0;

     label048:
        if z7 != 0 goto label068;

        if r14 == null goto label068;

        l8 = l8 + l28;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r82 = r32.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r81 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        r33 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        if z8 == 0 goto label062;

        r34 = " / activities)";

     label049:
        $r85 = new com.android.server.am.ActivityManagerService$MemItem;

        $r84 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        $r86 = r32.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        specialinvoke $r85.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int,boolean)>($r87, $r86, l28, i25, z8);

        r36 = $r85;

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r36);

        virtualinvoke r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i25, r36);

        $i138 = r14.<android.os.Debug$MemoryInfo: int nativePss>;

        $l140 = (long) $i138;

        l5 = l5 + $l140;

        $i139 = r14.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $l142 = (long) $i139;

        l6 = l6 + $l142;

        $i141 = r14.<android.os.Debug$MemoryInfo: int otherPss>;

        $l143 = (long) $i141;

        l7 = l7 + $l143;

        i32 = 0;

     label050:
        if i32 >= 16 goto label063;

        $i161 = virtualinvoke r14.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i32);

        l30 = (long) $i161;

        $l162 = r12[i32];

        $l159 = l30 + $l162;

        r12[i32] = $l159;

        l7 = l7 - l30;

        i32 = i32 + 1;

        goto label050;

     label051:
        z8 = 0;

        goto label039;

     label052:
        $r134 := @caughtexception;

        r31 = $r134;

     label053:
        exitmonitor r0;

     label054:
        throw r31;

     label055:
        $l158 = staticinvoke <android.os.Debug: long getPss(int,long[])>(i25, r7);

        $i152 = (int) $l158;

        r14.<android.os.Debug$MemoryInfo: int dalvikPss> = $i152;

        $l151 = r7[0];

        $i150 = (int) $l151;

        r14.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i150;

        goto label044;

     label056:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        interfaceinvoke r30.<android.app.IApplicationThread: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug$MemoryInfo,boolean,boolean,boolean,java.lang.String[])>(r1, r14, z7, z2, z3, r8);

     label057:
        goto label045;

     label058:
        $r135 := @caughtexception;

        if z7 != 0 goto label045;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Got RemoteException!");

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        goto label045;

     label059:
        $r132 := @caughtexception;

        r35 = $r132;

     label060:
        exitmonitor r0;

     label061:
        throw r35;

     label062:
        r34 = ")";

        goto label049;

     label063:
        if i24 < 9 goto label064;

        l9 = l9 + l28;

     label064:
        i33 = 0;

     label065:
        i31 = lengthof r13;

        if i33 >= i31 goto label068;

        $r88 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        $i156 = $r88[i33];

        if i24 <= $i156 goto label066;

        $i154 = lengthof r13;

        i29 = -1 + $i154;

        if i33 != i29 goto label069;

     label066:
        $l157 = r13[i33];

        $l155 = l28 + $l157;

        r13[i33] = $l155;

        $r108 = r11[i33];

        if $r108 != null goto label067;

        $r106 = new java.util.ArrayList;

        specialinvoke $r106.<java.util.ArrayList: void <init>()>();

        r11[i33] = $r106;

     label067:
        $r107 = r11[i33];

        virtualinvoke $r107.<java.util.ArrayList: boolean add(java.lang.Object)>(r36);

     label068:
        i11 = i11 + -1;

        goto label036;

     label069:
        i33 = i33 + 1;

        goto label065;

     label070:
        if z7 != 0 goto label018;

        $i47 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i47 <= 1 goto label018;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>();

        r16 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        entermonitor r16;

     label071:
        $r55 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i10 = virtualinvoke $r55.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

     label072:
        i12 = 0;

        r18 = r14;

     label073:
        if i12 >= i10 goto label093;

     label074:
        $r62 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r28 = virtualinvoke $r62.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i12);

        $l118 = r28.<com.android.internal.os.ProcessCpuTracker$Stats: long vsize>;

        $b119 = $l118 cmp 0L;

        if $b119 <= 0 goto label125;

        $i116 = r28.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $i117 = virtualinvoke r9.<android.util.SparseArray: int indexOfKey(int)>($i116);

        if $i117 >= 0 goto label125;

     label075:
        if r18 != null goto label124;

     label076:
        $r89 = new android.os.Debug$MemoryInfo;

        specialinvoke $r89.<android.os.Debug$MemoryInfo: void <init>()>();

        r29 = $r89;

     label077:
        if z0 != 0 goto label086;

        if z4 != 0 goto label086;

     label078:
        $i146 = r28.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        staticinvoke <android.os.Debug: void getMemoryInfo(int,android.os.Debug$MemoryInfo)>($i146, r29);

     label079:
        $i135 = virtualinvoke r29.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        l23 = (long) $i135;

     label080:
        l8 = l8 + l23;

     label081:
        $r73 = new com.android.server.am.ActivityManagerService$MemItem;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r76 = r28.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $r77 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r75 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $i136 = r28.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $r79 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i136);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        $r69 = r28.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $i137 = r28.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        specialinvoke $r73.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int,boolean)>($r78, $r69, l23, $i137, 0);

        r27 = $r73;

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r27);

        $i122 = r29.<android.os.Debug$MemoryInfo: int nativePss>;

        $l121 = (long) $i122;

        l5 = l5 + $l121;

        $i126 = r29.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $l125 = (long) $i126;

        l6 = l6 + $l125;

        $i124 = r29.<android.os.Debug$MemoryInfo: int otherPss>;

        $l123 = (long) $i124;

        l7 = l7 + $l123;

     label082:
        i22 = 0;

     label083:
        if i22 >= 16 goto label090;

     label084:
        $i129 = virtualinvoke r29.<android.os.Debug$MemoryInfo: int getOtherPss(int)>(i22);

        l26 = (long) $i129;

        $l144 = r12[i22];

        $l145 = l26 + $l144;

        r12[i22] = $l145;

     label085:
        l7 = l7 - l26;

        i22 = i22 + 1;

        goto label083;

     label086:
        $i132 = r28.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $l133 = staticinvoke <android.os.Debug: long getPss(int,long[])>($i132, r7);

        $i130 = (int) $l133;

        r29.<android.os.Debug$MemoryInfo: int nativePss> = $i130;

        $l131 = r7[0];

        $i134 = (int) $l131;

        r29.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i134;

     label087:
        goto label079;

     label088:
        exitmonitor r16;

     label089:
        throw r15;

     label090:
        $l128 = r13[0];

        $l127 = l23 + $l128;

        r13[0] = $l127;

        $r71 = r11[0];

        if $r71 != null goto label091;

        $r72 = new java.util.ArrayList;

        specialinvoke $r72.<java.util.ArrayList: void <init>()>();

        r11[0] = $r72;

     label091:
        $r70 = r11[0];

        virtualinvoke $r70.<java.util.ArrayList: boolean add(java.lang.Object)>(r27);

     label092:
        i12 = i12 + 1;

        r18 = r29;

        goto label073;

     label093:
        exitmonitor r16;

     label094:
        $r56 = new java.util.ArrayList;

        specialinvoke $r56.<java.util.ArrayList: void <init>()>();

        r17 = $r56;

        $r57 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r57.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>("Native", "Native", l5, -1);

        virtualinvoke r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r57);

        $r51 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r51.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>("Dalvik", "Dalvik", l6, -2);

        virtualinvoke r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r51);

        $r52 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r52.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>("Unknown", "Unknown", l7, -3);

        virtualinvoke r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r52);

        i13 = 0;

     label095:
        if i13 >= 16 goto label096;

        r24 = staticinvoke <android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>(i13);

        $r63 = new com.android.server.am.ActivityManagerService$MemItem;

        $l120 = r12[i13];

        specialinvoke $r63.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>(r24, r24, $l120, i13);

        virtualinvoke r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r63);

        i13 = i13 + 1;

        goto label095;

     label096:
        $r53 = new java.util.ArrayList;

        specialinvoke $r53.<java.util.ArrayList: void <init>()>();

        r20 = $r53;

        i15 = 0;

     label097:
        i14 = lengthof r13;

        if i15 >= i14 goto label101;

        $l101 = r13[i15];

        $b100 = $l101 cmp 0L;

        if $b100 == 0 goto label099;

        if z5 == 0 goto label100;

        $r64 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_COMPACT_LABEL>;

        r26 = $r64[i15];

     label098:
        l21 = r13[i15];

        $r68 = <com.android.server.am.ActivityManagerService: int[] DUMP_MEM_OOM_ADJ>;

        i20 = $r68[i15];

        $r65 = new com.android.server.am.ActivityManagerService$MemItem;

        specialinvoke $r65.<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>(r26, r26, l21, i20);

        r23 = $r65;

        $r66 = r11[i15];

        r23.<com.android.server.am.ActivityManagerService$MemItem: java.util.ArrayList subitems> = $r66;

        virtualinvoke r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

     label099:
        i15 = i15 + 1;

        goto label097;

     label100:
        $r67 = <com.android.server.am.ActivityManagerService: java.lang.String[] DUMP_MEM_OOM_LABEL>;

        r26 = $r67[i15];

        goto label098;

     label101:
        if z0 != 0 goto label102;

        if z4 != 0 goto label102;

        if z5 != 0 goto label102;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by process:");

        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)>(r2, "  ", "proc", r10, 1, z5);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label102:
        if z5 != 0 goto label103;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by OOM adjustment:");

     label103:
        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)>(r2, "  ", "oom", r20, 0, z5);

        if z0 != 0 goto label106;

        if z4 != 0 goto label106;

        if r5 == null goto label115;

        r25 = r5;

     label104:
        if z5 != 0 goto label105;

        virtualinvoke r25.<java.io.PrintWriter: void println()>();

        virtualinvoke r25.<java.io.PrintWriter: void println(java.lang.String)>("Total PSS by category:");

     label105:
        staticinvoke <com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)>(r25, "  ", "cat", r17, 1, z5);

     label106:
        if z5 != 0 goto label107;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label107:
        $r54 = new com.android.internal.util.MemInfoReader;

        specialinvoke $r54.<com.android.internal.util.MemInfoReader: void <init>()>();

        r19 = $r54;

        virtualinvoke r19.<com.android.internal.util.MemInfoReader: void readMemInfo()>();

        if z0 != 0 goto label108;

        if z5 != 0 goto label116;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Total RAM: ");

        $l108 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l108);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Free RAM: ");

        $l107 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l106 = l9 + $l107;

        $l105 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l104 = $l106 + $l105;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l104);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB (");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l9);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" cached pss + ");

        $l103 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l103);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" cached + ");

        $l102 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l102);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" free)");

     label108:
        if z5 != 0 goto label109;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Used RAM: ");

        $l75 = l8 - l9;

        $l74 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getBuffersSizeKb()>();

        $l69 = $l75 + $l74;

        $l68 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getShmemSizeKb()>();

        $l71 = $l69 + $l68;

        $l70 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getSlabSizeKb()>();

        $l96 = $l71 + $l70;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l96);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB (");

        $l97 = l8 - l9;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l97);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" used pss + ");

        $l98 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getBuffersSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l98);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" buffers + ");

        $l99 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getShmemSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l99);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" shmem + ");

        $l92 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getSlabSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l92);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" slab)");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Lost RAM: ");

        $l93 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        $l94 = $l93 - l8;

        $l95 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l88 = $l94 - $l95;

        $l89 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l90 = $l88 - $l89;

        $l91 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getBuffersSizeKb()>();

        $l84 = $l90 - $l91;

        $l85 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getShmemSizeKb()>();

        $l86 = $l84 - $l85;

        $l87 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getSlabSizeKb()>();

        $l115 = $l86 - $l87;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l115);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB");

     label109:
        if z0 != 0 goto label121;

        $l45 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        $b55 = $l45 cmp 0L;

        if $b55 == 0 goto label110;

        if z5 != 0 goto label117;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("     ZRAM: ");

        $l76 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l76);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB physical used for ");

        $l79 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        $l78 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>();

        $l73 = $l79 - $l78;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l73);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB in swap (");

        $l72 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l72);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB total swap)");

     label110:
        $r58 = newarray (int)[1];

        $r58[0] = 8224;

        r22 = $r58;

        r21 = newarray (long)[1];

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_shared", r22, null, r21, null);

        $l54 = r21[0];

        $l58 = 4096L * $l54;

        l17 = $l58 / 1024L;

        r21[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_sharing", r22, null, r21, null);

        $l57 = r21[0];

        $l56 = 4096L * $l57;

        l16 = $l56 / 1024L;

        r21[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_unshared", r22, null, r21, null);

        $l49 = r21[0];

        $l48 = 4096L * $l49;

        l19 = $l48 / 1024L;

        r21[0] = 0L;

        staticinvoke <android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>("/sys/kernel/mm/ksm/pages_volatile", r22, null, r21, null);

        $l53 = r21[0];

        $l52 = 4096L * $l53;

        l18 = $l52 / 1024L;

        if z5 != 0 goto label118;

        $b67 = l16 cmp 0L;

        if $b67 != 0 goto label111;

        $b61 = l17 cmp 0L;

        if $b61 != 0 goto label111;

        $b81 = l19 cmp 0L;

        if $b81 != 0 goto label111;

        $b80 = l18 cmp 0L;

        if $b80 == 0 goto label112;

     label111:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      KSM: ");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l16);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB saved from shared ");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l17);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("           ");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l19);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB unshared; ");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l18);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" kB volatile");

     label112:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("   Tuning: ");

        $i65 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i65);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (large ");

        $i66 = staticinvoke <android.app.ActivityManager: int staticGetLargeMemoryClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i66);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("), oom ");

        $r60 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l60 = virtualinvoke $r60.<com.android.server.am.ProcessList: long getMemLevel(int)>(15);

        $l59 = $l60 / 1024L;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l59);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", restore limit ");

        $r59 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l62 = virtualinvoke $r59.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l62);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" kB");

        $z17 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z17 == 0 goto label113;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (low-ram)");

     label113:
        $z16 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z16 == 0 goto label114;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (high-end-gfx)");

     label114:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        return;

     label115:
        r25 = r2;

        goto label104;

     label116:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("ram,");

        $l114 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l114);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l113 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>();

        $l112 = l9 + $l113;

        $l111 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>();

        $l110 = $l112 + $l111;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l110);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l109 = l8 - l9;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l109);

        goto label108;

     label117:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("zram,");

        $l83 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l83);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l82 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l82);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $l77 = virtualinvoke r19.<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l77);

        goto label110;

     label118:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("ksm,");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l16);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l17);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>(l19);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",");

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>(l18);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("tuning,");

        $i51 = staticinvoke <android.app.ActivityManager: int staticGetMemoryClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i51);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(44);

        $i50 = staticinvoke <android.app.ActivityManager: int staticGetLargeMemoryClass()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i50);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(44);

        $r61 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l64 = virtualinvoke $r61.<com.android.server.am.ProcessList: long getMemLevel(int)>(15);

        $l63 = $l64 / 1024L;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l63);

        $z18 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        if $z18 == 0 goto label119;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",low-ram");

     label119:
        $z19 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z19 == 0 goto label120;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(",high-end-gfx");

     label120:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label121:
        return;

     label122:
        $r149 := @caughtexception;

        r15 = $r149;

        goto label088;

     label123:
        $r133 := @caughtexception;

        goto label005;

     label124:
        r29 = r18;

        goto label077;

     label125:
        r29 = r18;

        goto label092;

     label126:
        $r150 := @caughtexception;

        r15 = $r150;

        goto label088;

        catch java.lang.NumberFormatException from label003 to label004 with label123;
        catch java.lang.Throwable from label006 to label007 with label028;
        catch java.lang.Throwable from label009 to label010 with label028;
        catch java.lang.Throwable from label010 to label011 with label028;
        catch java.lang.Throwable from label020 to label021 with label028;
        catch java.lang.Throwable from label029 to label030 with label028;
        catch java.lang.Throwable from label037 to label038 with label052;
        catch java.lang.Throwable from label039 to label040 with label052;
        catch java.lang.Throwable from label046 to label047 with label059;
        catch java.lang.Throwable from label047 to label048 with label059;
        catch java.lang.Throwable from label053 to label054 with label052;
        catch android.os.RemoteException from label056 to label057 with label058;
        catch java.lang.Throwable from label060 to label061 with label059;
        catch java.lang.Throwable from label071 to label072 with label126;
        catch java.lang.Throwable from label074 to label075 with label122;
        catch java.lang.Throwable from label076 to label077 with label122;
        catch java.lang.Throwable from label078 to label079 with label126;
        catch java.lang.Throwable from label079 to label080 with label126;
        catch java.lang.Throwable from label081 to label082 with label126;
        catch java.lang.Throwable from label084 to label085 with label126;
        catch java.lang.Throwable from label086 to label087 with label126;
        catch java.lang.Throwable from label088 to label089 with label126;
        catch java.lang.Throwable from label090 to label091 with label126;
        catch java.lang.Throwable from label091 to label092 with label126;
        catch java.lang.Throwable from label093 to label094 with label122;
    }

    void dumpBroadcastsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String r4, r13, r16, $r20, $r21, $r26, $r37, $r40, $r48, $r55, $r56;
        com.android.server.am.BroadcastQueue[] r5, r6;
        com.android.server.am.BroadcastQueue r7, $r49;
        java.lang.StringBuilder r8, $r22, $r23, $r24, $r25, $r27, $r33;
        java.util.Map$Entry r9;
        java.util.Iterator r10, r17;
        java.util.ArrayList r11;
        android.os.Bundle r12;
        com.android.server.IntentResolver r14;
        com.android.server.am.ReceiverList r15;
        android.util.PrintWriterPrinter $r18;
        android.os.Handler $r19;
        android.util.SparseArray $r28, $r29, $r30, $r32;
        java.lang.Object $r31, $r36, $r38, $r39, $r41, $r44, $r54;
        java.util.Set $r34;
        android.util.ArrayMap $r35;
        android.content.Intent $r42, $r45;
        java.util.HashMap $r46, $r50;
        java.util.Collection $r47;
        android.content.pm.ApplicationInfo $r51;
        com.android.server.am.ProcessRecord $r52, $r53;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        $r20 = "history";

        z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        z2 = 0;

        if z1 == 0 goto label02;

        $i11 = lengthof r3;

        if i0 >= $i11 goto label01;

        $r55 = "-s";

        $r56 = r3[i0];

        $z12 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>($r56);

        if $z12 == 0 goto label01;

        z0 = 0;

     label01:
        z2 = 1;

        r4 = null;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)");

        z3 = 0;

        z4 = 0;

        if z2 != 0 goto label08;

        z3 = 0;

        z4 = 0;

        if z0 == 0 goto label08;

        $r50 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        i9 = virtualinvoke $r50.<java.util.HashMap: int size()>();

        z3 = 0;

        z4 = 0;

        if i9 <= 0 goto label06;

        z6 = 0;

        $r46 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r47 = virtualinvoke $r46.<java.util.HashMap: java.util.Collection values()>();

        r17 = interfaceinvoke $r47.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z11 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label06;

        $r54 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.android.server.am.ReceiverList) $r54;

        if r4 == null goto label04;

        $r53 = r15.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r53 == null goto label03;

        $r52 = r15.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r51 = $r52.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        r16 = $r51.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z10 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z10 == 0 goto label03;

     label04:
        if z6 != 0 goto label05;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Registered Receivers:");

        z3 = 1;

        z6 = 1;

        z4 = 1;

     label05:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r15);

        virtualinvoke r15.<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label03;

     label06:
        r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        if z3 == 0 goto label10;

        r13 = "\n  Receiver Resolver Table:";

     label07:
        $z9 = virtualinvoke r14.<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>(r2, r13, "    ", r4, 0);

        if $z9 == 0 goto label08;

        z3 = 1;

        z4 = 1;

     label08:
        r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i1 = lengthof r5;

        i2 = 0;

     label09:
        if i2 >= i1 goto label11;

        $r49 = r5[i2];

        z3 = virtualinvoke $r49.<com.android.server.am.BroadcastQueue: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean)>(r1, r2, r3, i0, z0, r4, z3);

        z4 = z4 | z3;

        i2 = i2 + 1;

        goto label09;

     label10:
        r13 = "  Receiver Resolver Table:";

        goto label07;

     label11:
        z5 = 1;

        if z2 != 0 goto label19;

        $r30 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        if $r30 == null goto label19;

        if r4 != null goto label19;

        i5 = 0;

     label12:
        $r29 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        i6 = virtualinvoke $r29.<android.util.SparseArray: int size()>();

        if i5 >= i6 goto label19;

        if z5 == 0 goto label13;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label13:
        z5 = 1;

        z4 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Sticky broadcasts for user ");

        $r28 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $i10 = virtualinvoke $r28.<android.util.SparseArray: int keyAt(int)>(i5);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i10);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(int)>(128);

        r8 = $r33;

        $r32 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r31 = virtualinvoke $r32.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r35 = (android.util.ArrayMap) $r31;

        $r34 = virtualinvoke $r35.<android.util.ArrayMap: java.util.Set entrySet()>();

        r10 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z8 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label18;

        $r39 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r39;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * Sticky action ");

        $r38 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r37 = (java.lang.String) $r38;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r37);

        if z0 == 0 goto label17;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r36 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11 = (java.util.ArrayList) $r36;

        i7 = virtualinvoke r11.<java.util.ArrayList: int size()>();

        i8 = 0;

     label15:
        if i8 >= i7 goto label14;

        virtualinvoke r8.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Intent: ");

        $r44 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r45 = (android.content.Intent) $r44;

        virtualinvoke $r45.<android.content.Intent: void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean)>(r8, 0, 1, 0, 0);

        $r40 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        $r41 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        $r42 = (android.content.Intent) $r41;

        r12 = virtualinvoke $r42.<android.content.Intent: android.os.Bundle getExtras()>();

        if r12 == null goto label16;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $r48 = virtualinvoke r12.<android.os.Bundle: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r48);

     label16:
        i8 = i8 + 1;

        goto label15;

     label17:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

        goto label14;

     label18:
        i5 = i5 + 1;

        goto label12;

     label19:
        if z2 != 0 goto label22;

        if z0 == 0 goto label22;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i4 = lengthof r6;

        i3 = 0;

     label20:
        if i3 >= i4 goto label21;

        r7 = r6[i3];

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBroadcastsScheduled [");

        $r21 = r7.<com.android.server.am.BroadcastQueue: java.lang.String mQueueName>;

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $z7 = r7.<com.android.server.am.BroadcastQueue: boolean mBroadcastsScheduled>;

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        i3 = i3 + 1;

        goto label20;

     label21:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  mHandler:");

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r18 = new android.util.PrintWriterPrinter;

        specialinvoke $r18.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r2);

        virtualinvoke $r19.<android.os.Handler: void dump(android.util.Printer,java.lang.String)>($r18, "    ");

        z4 = 1;

     label22:
        if z4 != 0 goto label23;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label23:
        return;
    }

    final void dumpDbInfo(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1, $r24;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.ArrayList r4;
        int i0, $i1, $i2;
        com.android.server.am.ProcessRecord r5;
        com.android.internal.os.TransferPipe r6, $r19;
        java.lang.Throwable r7, $r39;
        java.lang.Object $r10;
        android.app.IApplicationThread $r11, $r22;
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r17, $r18, $r23, $r26, $r28, $r29, $r33, $r34, $r35, $r37, $r38;
        java.lang.String $r15, $r20, $r25, $r30, $r31, $r36;
        android.os.ParcelFileDescriptor $r21;
        java.io.IOException $r27;
        android.os.RemoteException $r32;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,java.lang.String[])>(r2, 0, r3);

        if r4 != null goto label02;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r25 = r3[0];

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r30);

     label01:
        return;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Applications Database Info:");

        $i1 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label03:
        if i0 < 0 goto label01;

        $r10 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ProcessRecord) $r10;

        $r11 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r11 == null goto label12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** Database info for pid ");

        $i2 = r5.<com.android.server.am.ProcessRecord: int pid>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r15 = r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label04:
        $r19 = new com.android.internal.os.TransferPipe;

        specialinvoke $r19.<com.android.internal.os.TransferPipe: void <init>()>();

        r6 = $r19;

     label05:
        $r22 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r21 = virtualinvoke r6.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r24 = virtualinvoke $r21.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke $r22.<android.app.IApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>($r24, r3);

        virtualinvoke r6.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r1);

     label06:
        virtualinvoke r6.<com.android.internal.os.TransferPipe: void kill()>();

     label07:
        goto label12;

     label08:
        $r39 := @caughtexception;

        r7 = $r39;

     label09:
        virtualinvoke r6.<com.android.internal.os.TransferPipe: void kill()>();

        throw r7;

     label10:
        $r27 := @caughtexception;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the app: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        goto label12;

     label11:
        $r32 := @caughtexception;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the app ");

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label12:
        i0 = i0 + -1;

        goto label03;

        catch java.io.IOException from label04 to label05 with label10;
        catch android.os.RemoteException from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label10;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label10;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    final void dumpGraphicsHardwareUsage(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1, $r31;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.ArrayList r4;
        long l0, l1;
        int i2, $i3, $i4;
        com.android.server.am.ProcessRecord r5;
        com.android.internal.os.TransferPipe r6, $r28;
        java.lang.Throwable r7, $r37;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r29, $r32, $r34, $r35, $r39, $r40, $r41, $r42, $r43;
        java.lang.String $r14, $r24, $r27, $r30, $r36, $r38, $r45;
        android.app.IApplicationThread $r16, $r25;
        java.lang.Object $r17;
        android.os.ParcelFileDescriptor $r26;
        android.os.RemoteException $r33;
        java.io.IOException $r44;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,java.lang.String[])>(r2, 0, r3);

        if r4 != null goto label02;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No process found for: ");

        $r30 = r3[0];

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r36);

     label01:
        return;

     label02:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Applications Graphics Acceleration Info:");

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uptime: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Realtime: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $i3 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i2 = -1 + $i3;

     label03:
        if i2 < 0 goto label01;

        $r17 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.ProcessRecord) $r17;

        $r16 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 == null goto label12;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n** Graphics info for pid ");

        $i4 = r5.<com.android.server.am.ProcessRecord: int pid>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r24 = r5.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] **");

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label04:
        $r28 = new com.android.internal.os.TransferPipe;

        specialinvoke $r28.<com.android.internal.os.TransferPipe: void <init>()>();

        r6 = $r28;

     label05:
        $r25 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r26 = virtualinvoke r6.<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        $r31 = virtualinvoke $r26.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        interfaceinvoke $r25.<android.app.IApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>($r31, r3);

        virtualinvoke r6.<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>(r1);

     label06:
        virtualinvoke r6.<com.android.internal.os.TransferPipe: void kill()>();

     label07:
        goto label12;

     label08:
        $r37 := @caughtexception;

        r7 = $r37;

     label09:
        virtualinvoke r6.<com.android.internal.os.TransferPipe: void kill()>();

        throw r7;

     label10:
        $r44 := @caughtexception;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure while dumping the app: ");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        goto label12;

     label11:
        $r33 := @caughtexception;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a RemoteException while dumping the app ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label12:
        i2 = i2 + -1;

        goto label03;

        catch java.io.IOException from label04 to label05 with label10;
        catch android.os.RemoteException from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.IOException from label06 to label07 with label10;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label10;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    public boolean dumpHeap(java.lang.String, int, boolean, java.lang.String, android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, $r10, $r12, $r14, $r19;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1;
        android.os.ParcelFileDescriptor r3;
        java.lang.Throwable r4, r5, $r28, $r29;
        com.android.server.am.ProcessRecord r6;
        java.lang.IllegalArgumentException $r7, $r20;
        java.lang.StringBuilder $r8, $r9, $r11, $r17, $r21, $r22;
        android.app.IApplicationThread $r13, $r15;
        android.content.pm.ApplicationInfo $r16;
        java.lang.SecurityException $r18, $r25;
        java.lang.IllegalStateException $r23;
        android.os.RemoteException $r26;
        java.io.IOException $r27;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.ParcelFileDescriptor;

     label01:
        entermonitor r0;

     label02:
        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i1 == 0 goto label11;

        $r25 = new java.lang.SecurityException;

        specialinvoke $r25.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r25;

     label03:
        $r29 := @caughtexception;

        r5 = $r29;

     label04:
        exitmonitor r0;

     label05:
        throw r5;

     label06:
        $r26 := @caughtexception;

     label07:
        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r23;

     label08:
        $r28 := @caughtexception;

        r4 = $r28;

        if r3 == null goto label10;

     label09:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label10:
        throw r4;

     label11:
        if r3 != null goto label13;

     label12:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null fd");

        throw $r20;

     label13:
        r6 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findProcessLocked(java.lang.String,int,java.lang.String)>(r1, i0, "dumpHeap");

     label14:
        if r6 == null goto label16;

     label15:
        $r13 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 != null goto label17;

     label16:
        $r7 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label17:
        $r12 = "1";

        $r14 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label18;

        $r16 = r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i3 = $r16.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = 2 & $i3;

        if $i2 != 0 goto label18;

        $r18 = new java.lang.SecurityException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.SecurityException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label18:
        $r15 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r15.<android.app.IApplicationThread: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>(z0, r2, r3);

     label19:
        r3 = null;

     label20:
        exitmonitor r0;

     label21:
        goto label22;

     label22:
        return 1;

     label23:
        $r27 := @caughtexception;

        goto label10;

        catch android.os.RemoteException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch android.os.RemoteException from label05 to label06 with label06;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.io.IOException from label09 to label10 with label23;
        catch java.lang.Throwable from label12 to label13 with label03;
        catch java.lang.Throwable from label13 to label14 with label03;
        catch java.lang.Throwable from label15 to label16 with label03;
        catch java.lang.Throwable from label16 to label17 with label03;
        catch java.lang.Throwable from label17 to label18 with label03;
        catch java.lang.Throwable from label18 to label19 with label03;
        catch java.lang.Throwable from label20 to label21 with label03;
    }

    boolean dumpOomLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1;
        java.util.ArrayList $r4, $r20, $r22, $r23, $r24;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r11, $r12, $r16, $r17, $r18;
        com.android.server.am.ProcessRecord $r7, $r13, $r14, $r19;
        java.lang.String $r9, $r15, $r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        z1 = 0;

        if i1 <= 0 goto label2;

        goto label1;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  OOM levels:");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SYSTEM_ADJ", -16);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERSISTENT_PROC_ADJ", -12);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "FOREGROUND_APP_ADJ", 0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "VISIBLE_APP_ADJ", 1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PERCEPTIBLE_APP_ADJ", 2);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "BACKUP_APP_ADJ", 3);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "HEAVY_WEIGHT_APP_ADJ", 4);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SERVICE_ADJ", 5);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "HOME_APP_ADJ", 6);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "PREVIOUS_APP_ADJ", 7);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "SERVICE_B_ADJ", 8);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "CACHED_APP_MIN_ADJ", 9);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>(r2, "CACHED_APP_MAX_ADJ", 15);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Process OOM control (");

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i2 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" total, non-act at ");

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i4 = virtualinvoke $r22.<java.util.ArrayList: int size()>();

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i7 = $i4 - $i3;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", non-svc at ");

        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i5 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        $i6 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i8 = $i5 - $i6;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i8);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $r24 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean dumpProcessOomList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r2, r0, $r24, "    ", "Proc", "PERS", 1, null);

        z1 = 1;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z1, z0, null);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHomeProcess: ");

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcess: ");

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r14 == null goto label3;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHeavyWeightProcess: ");

        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r21);

     label3:
        return 1;
    }

    void dumpPendingIntentsLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1;
        boolean z0, z1, $z2, $z3;
        java.lang.String r4, $r13;
        java.util.Iterator r5;
        java.lang.ref.WeakReference r6;
        com.android.server.am.PendingIntentRecord r7;
        java.util.HashMap $r8, $r9;
        java.util.Collection $r10;
        com.android.server.am.PendingIntentRecord$Key $r11;
        java.lang.Object $r12, $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER PENDING INTENTS (dumpsys activity intents)");

        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        i1 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        z1 = 0;

        if i1 <= 0 goto label6;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.ref.WeakReference) $r12;

        if r6 == null goto label4;

        $r14 = virtualinvoke r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (com.android.server.am.PendingIntentRecord) $r14;

     label2:
        if r4 == null goto label3;

        if r7 == null goto label1;

        $r11 = r7.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r13 = $r11.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label1;

     label3:
        z1 = 1;

        if r7 == null goto label5;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r7);

        if z0 == 0 goto label1;

        virtualinvoke r7.<com.android.server.am.PendingIntentRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        goto label1;

     label4:
        r7 = null;

        goto label2;

     label5:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

        goto label1;

     label6:
        if z1 != 0 goto label7;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label7:
        return;
    }

    void dumpProcessesLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i53, $i54, $i55, $i57, $i58, $i59, $i60, $i61, $i66, $i67, $i68, $i69, $i70, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z47, $z48;
        java.lang.String r4, r10, r13, r17, r18, r21, r30, $r46, $r47, $r52, $r53, $r62, $r65, $r66, $r67, $r73, $r78, $r83, $r87, $r90, $r97, $r112, $r118, $r124, $r131, $r133, $r145, $r147, $r153, $r154, $r155, $r156, $r157, $r158, $r162, $r164, $r171, $r182, $r186, $r197, $r207, $r222, $r229, $r241, $r242, $r243, $r246, $r247, $r248, $r249, $r250, $r251, $r278, $r279;
        android.util.SparseArray r5, r14, r20, r23, $r31, r32, $r33, $r34, $r213, $r232, $r252, $r253, $r256, $r258, $r261, $r263, $r266, $r267, $r283, $r285;
        java.lang.Throwable r6, r26, $r289, $r290;
        java.lang.StringBuilder r7, $r45, $r48, $r49, $r50, $r54, $r55, $r56, $r57, $r58, $r60, $r61, $r63, $r64, $r68, $r69, $r70, $r71, $r72, $r74, $r75, $r76, $r77, $r80, $r82, $r84, $r85, $r86, $r88, $r89, $r91, $r92, $r93, $r94, $r95, $r96, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r107, $r108, $r110, $r113, $r114, $r115, $r116, $r117, $r119, $r120, $r121, $r122, $r123, $r125, $r126, $r127, $r128, $r130, $r132, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r142, $r143, $r148, $r149, $r150, $r151, $r152, $r159, $r160, $r161, $r165, $r167, $r168, $r172, $r176, $r177, $r178, $r179, $r180, $r181, $r183, $r184, $r185, $r187, $r190, $r192, $r193, $r194, $r203, $r204, $r206, $r208, $r209, $r225, $r226, $r227;
        long l3, l18, $l42, $l43, $l51, $l52, $l56, $l62, $l63, $l64;
        java.util.Map$Entry r8;
        java.util.Iterator r9;
        com.android.server.am.UserStartedState r11;
        android.util.ArrayMap r12, r19, $r41, $r44, $r188, $r198, $r221, $r235, $r255, $r260, $r269, $r272, $r274, $r280, $r291;
        com.android.server.am.ProcessRecord r15, r22, r24, r27, r28, r29, $r39, $r40, $r51, $r59, $r144, $r189, $r195, $r196, $r210, $r223, $r224;
        com.android.server.am.ActivityManagerService$BadProcessInfo r16;
        java.lang.Object[] r25;
        java.util.ArrayList $r35, $r36, $r37, $r38, $r141, $r216, $r230, $r268, $r270, $r271, $r282, $r286, $r287, $r288;
        com.android.internal.app.ProcessMap $r42, $r43, $r217, $r220, $r236, $r240, $r273, $r281;
        android.os.ParcelFileDescriptor $r79, $r163;
        android.app.IActivityController $r81, $r146;
        android.os.PowerManager$WakeLock $r106, $r129;
        com.android.server.am.ActivityStackSupervisor $r109, $r111;
        com.android.server.am.ActivityStack $r166;
        java.util.HashMap $r169, $r174;
        com.android.server.am.CompatModePackages $r170, $r175;
        java.util.Set $r173;
        java.lang.Object $r199, $r200, $r201, $r212, $r215, $r218, $r219, $r233, $r234, $r238, $r239, $r244, $r245, $r254, $r257, $r259, $r262, $r265, $r275, $r276, $r284;
        java.lang.Integer $r202, $r277;
        android.content.res.Configuration $r205;
        android.os.UserHandle $r211;
        int[] $r214, $r228, $r231;
        java.lang.Long $r237;
        char $c65;
        com.android.server.am.ActivityManagerService$ForegroundToken $r264;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER RUNNING PROCESSES (dumpsys activity processes)");

        z1 = 0;

        i1 = 0;

        z2 = 0;

        if z0 == 0 goto label009;

        $r281 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r272 = virtualinvoke $r281.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i28 = virtualinvoke $r272.<android.util.ArrayMap: int size()>();

        i29 = 0;

     label001:
        if i29 >= i28 goto label009;

        $r273 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r274 = virtualinvoke $r273.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r275 = virtualinvoke $r274.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i29);

        r32 = (android.util.SparseArray) $r275;

        i30 = virtualinvoke r32.<android.util.SparseArray: int size()>();

        i27 = 0;

     label002:
        if i27 >= i30 goto label008;

        $r276 = virtualinvoke r32.<android.util.SparseArray: java.lang.Object valueAt(int)>(i27);

        r29 = (com.android.server.am.ProcessRecord) $r276;

        if r4 == null goto label004;

        $r291 = r29.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z47 = virtualinvoke $r291.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z47 != 0 goto label004;

     label003:
        i27 = i27 + 1;

        goto label002;

     label004:
        if z1 != 0 goto label005;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  All known processes:");

        z1 = 1;

        z2 = 1;

     label005:
        $z44 = r29.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z44 == 0 goto label007;

        r30 = "  *PERS*";

     label006:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r30);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" UID ");

        $i82 = virtualinvoke r32.<android.util.SparseArray: int keyAt(int)>(i27);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i82);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r29);

        virtualinvoke r29.<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

        $z48 = r29.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z48 == 0 goto label003;

        i1 = i1 + 1;

        goto label003;

     label007:
        r30 = "  *APP*";

        goto label006;

     label008:
        i29 = i29 + 1;

        goto label001;

     label009:
        $r31 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i32 = virtualinvoke $r31.<android.util.SparseArray: int size()>();

        if $i32 <= 0 goto label015;

        z8 = 0;

        i26 = 0;

     label010:
        $r283 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i76 = virtualinvoke $r283.<android.util.SparseArray: int size()>();

        if i26 >= $i76 goto label015;

        $r285 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $r284 = virtualinvoke $r285.<android.util.SparseArray: java.lang.Object valueAt(int)>(i26);

        r24 = (com.android.server.am.ProcessRecord) $r284;

        if r4 == null goto label012;

        $r280 = r24.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z45 = virtualinvoke $r280.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z45 != 0 goto label012;

     label011:
        i26 = i26 + 1;

        goto label010;

     label012:
        if z8 != 0 goto label014;

        if z1 == 0 goto label013;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label013:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Isolated process list (sorted by uid):");

        z2 = 1;

        z8 = 1;

        z1 = 1;

     label014:
        r25 = newarray (java.lang.Object)[3];

        r25[0] = "    ";

        $r277 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i26);

        r25[1] = $r277;

        $r278 = virtualinvoke r24.<com.android.server.am.ProcessRecord: java.lang.String toString()>();

        r25[2] = $r278;

        $r279 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%sIsolated #%2d: %s", r25);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r279);

        goto label011;

     label015:
        $r35 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i33 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        if $i33 <= 0 goto label017;

        if z1 == 0 goto label016;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label016:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Process LRU list (sorted by oom_adj, ");

        $r286 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i77 = virtualinvoke $r286.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i77);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" total, non-act at ");

        $r287 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i78 = virtualinvoke $r287.<java.util.ArrayList: int size()>();

        $i80 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i79 = $i78 - $i80;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i79);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", non-svc at ");

        $r288 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i81 = virtualinvoke $r288.<java.util.ArrayList: int size()>();

        $i75 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i74 = $i81 - $i75;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i74);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("):");

        $r282 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: boolean dumpProcessOomList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)>(r2, r0, $r282, "    ", "Proc", "PERS", 0, r4);

        z1 = 1;

        z2 = 1;

     label017:
        if z0 != 0 goto label018;

        if r4 == null goto label034;

     label018:
        r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r5;

        z3 = 0;

        i2 = 0;

     label019:
        $r33 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i31 = virtualinvoke $r33.<android.util.SparseArray: int size()>();

        if i2 >= $i31 goto label033;

        $r253 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r254 = virtualinvoke $r253.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r28 = (com.android.server.am.ProcessRecord) $r254;

     label020:
        if r4 == null goto label023;

     label021:
        $r255 = r28.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z41 = virtualinvoke $r255.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z41 != 0 goto label023;

     label022:
        goto label119;

     label023:
        if z3 != 0 goto label028;

        if z1 == 0 goto label025;

     label024:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label025:
        z1 = 1;

     label026:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  PID mappings:");

     label027:
        z3 = 1;

        z2 = 1;

     label028:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    PID #");

        $r252 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i67 = virtualinvoke $r252.<android.util.SparseArray: int keyAt(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i67);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r256 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r257 = virtualinvoke $r256.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r257);

     label029:
        goto label119;

     label030:
        $r289 := @caughtexception;

        r6 = $r289;

     label031:
        exitmonitor r5;

     label032:
        throw r6;

     label033:
        exitmonitor r5;

     label034:
        $r34 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i36 = virtualinvoke $r34.<android.util.SparseArray: int size()>();

        if $i36 <= 0 goto label050;

        r23 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r23;

        z7 = 0;

        i25 = 0;

     label035:
        $r263 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i70 = virtualinvoke $r263.<android.util.SparseArray: int size()>();

        if i25 >= $i70 goto label049;

        $r266 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r267 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $r265 = virtualinvoke $r267.<android.util.SparseArray: java.lang.Object valueAt(int)>(i25);

        $r264 = (com.android.server.am.ActivityManagerService$ForegroundToken) $r265;

        $i69 = $r264.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        $r259 = virtualinvoke $r266.<android.util.SparseArray: java.lang.Object get(int)>($i69);

        r27 = (com.android.server.am.ProcessRecord) $r259;

     label036:
        if r4 == null goto label039;

        if r27 == null goto label120;

     label037:
        $r260 = r27.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z42 = virtualinvoke $r260.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z42 != 0 goto label039;

     label038:
        goto label120;

     label039:
        if z7 != 0 goto label044;

        if z1 == 0 goto label041;

     label040:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label041:
        z1 = 1;

     label042:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Foreground Processes:");

     label043:
        z7 = 1;

        z2 = 1;

     label044:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    PID #");

        $r258 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i68 = virtualinvoke $r258.<android.util.SparseArray: int keyAt(int)>(i25);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i68);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r261 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $r262 = virtualinvoke $r261.<android.util.SparseArray: java.lang.Object valueAt(int)>(i25);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r262);

     label045:
        goto label120;

     label046:
        $r290 := @caughtexception;

        r26 = $r290;

     label047:
        exitmonitor r23;

     label048:
        throw r26;

     label049:
        exitmonitor r23;

     label050:
        $r37 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        $i37 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        if $i37 <= 0 goto label052;

        if z1 == 0 goto label051;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label051:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Persisent processes that are starting:");

        $r270 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPersistentStartingProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r0, $r270, "    ", "Starting Norm", "Restarting PERS", r4);

        z1 = 1;

     label052:
        $r38 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $i34 = virtualinvoke $r38.<java.util.ArrayList: int size()>();

        if $i34 <= 0 goto label054;

        if z1 == 0 goto label053;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label053:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are being removed:");

        $r271 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r0, $r271, "    ", "Removed Norm", "Removed PERS", r4);

        z1 = 1;

     label054:
        $r36 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $i35 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        if $i35 <= 0 goto label056;

        if z1 == 0 goto label055;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label055:
        z2 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are on old until the system is ready:");

        $r268 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        staticinvoke <com.android.server.am.ActivityManagerService: int dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r0, $r268, "    ", "OnHold Norm", "OnHold PERS", r4);

        z1 = 1;

     label056:
        z4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>(r1, r2, r3, i0, z1, z0, r4);

        $r43 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r44 = virtualinvoke $r43.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i39 = virtualinvoke $r44.<android.util.ArrayMap: int size()>();

        if $i39 <= 0 goto label064;

        z6 = 0;

        l18 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r236 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        r19 = virtualinvoke $r236.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i21 = virtualinvoke r19.<android.util.ArrayMap: int size()>();

        i20 = 0;

     label057:
        if i20 >= i21 goto label064;

        $r234 = virtualinvoke r19.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i20);

        r21 = (java.lang.String) $r234;

        $r233 = virtualinvoke r19.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i20);

        r20 = (android.util.SparseArray) $r233;

        i23 = virtualinvoke r20.<android.util.SparseArray: int size()>();

        i22 = 0;

     label058:
        if i22 >= i23 goto label063;

        i24 = virtualinvoke r20.<android.util.SparseArray: int keyAt(int)>(i22);

        $r240 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r239 = virtualinvoke $r240.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r21, i24);

        r22 = (com.android.server.am.ProcessRecord) $r239;

        if r4 == null goto label060;

        if r22 == null goto label059;

        $r269 = r22.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z43 = virtualinvoke $r269.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z43 != 0 goto label060;

     label059:
        i22 = i22 + 1;

        goto label058;

     label060:
        if z6 != 0 goto label062;

        if z4 == 0 goto label061;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label061:
        z4 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Time since processes crashed:");

        z6 = 1;

        z2 = 1;

     label062:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Process ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r21);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" uid ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i24);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": last crashed ");

        $r238 = virtualinvoke r20.<android.util.SparseArray: java.lang.Object valueAt(int)>(i22);

        $r237 = (java.lang.Long) $r238;

        $l63 = virtualinvoke $r237.<java.lang.Long: long longValue()>();

        $l62 = l18 - $l63;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l62, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" ago");

        goto label059;

     label063:
        i20 = i20 + 1;

        goto label057;

     label064:
        $r42 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r41 = virtualinvoke $r42.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i38 = virtualinvoke $r41.<android.util.ArrayMap: int size()>();

        if $i38 <= 0 goto label076;

        $r220 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        r12 = virtualinvoke $r220.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i8 = virtualinvoke r12.<android.util.ArrayMap: int size()>();

        i9 = 0;

     label065:
        if i9 >= i8 goto label076;

        $r219 = virtualinvoke r12.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i9);

        r13 = (java.lang.String) $r219;

        $r218 = virtualinvoke r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i9);

        r14 = (android.util.SparseArray) $r218;

        i12 = virtualinvoke r14.<android.util.SparseArray: int size()>();

        i10 = 0;

     label066:
        if i10 >= i12 goto label075;

        i11 = virtualinvoke r14.<android.util.SparseArray: int keyAt(int)>(i10);

        $r217 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r244 = virtualinvoke $r217.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r13, i11);

        r15 = (com.android.server.am.ProcessRecord) $r244;

        if r4 == null goto label068;

        if r15 == null goto label067;

        $r235 = r15.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z40 = virtualinvoke $r235.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z40 != 0 goto label068;

     label067:
        i10 = i10 + 1;

        goto label066;

     label068:
        if z4 == 0 goto label069;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label069:
        z4 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Bad processes:");

        z2 = 1;

        $r245 = virtualinvoke r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i10);

        r16 = (com.android.server.am.ActivityManagerService$BadProcessInfo) $r245;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Bad process ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r13);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" uid ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i11);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": crashed at time ");

        $l64 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: long time>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l64);

        $r246 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String shortMsg>;

        if $r246 == null goto label070;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      Short msg: ");

        $r249 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String shortMsg>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r249);

     label070:
        $r241 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String longMsg>;

        if $r241 == null goto label071;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      Long msg: ");

        $r248 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String longMsg>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r248);

     label071:
        $r242 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        if $r242 == null goto label067;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("      Stack:");

        i13 = 0;

        i14 = 0;

     label072:
        $r243 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        i16 = virtualinvoke $r243.<java.lang.String: int length()>();

        if i14 >= i16 goto label074;

        $r247 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $c65 = virtualinvoke $r247.<java.lang.String: char charAt(int)>(i14);

        if $c65 != 10 goto label073;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        r18 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        i19 = i14 - i13;

        virtualinvoke r2.<java.io.PrintWriter: void write(java.lang.String,int,int)>(r18, i13, i19);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        i13 = i14 + 1;

     label073:
        i14 = i14 + 1;

        goto label072;

     label074:
        $r250 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        i17 = virtualinvoke $r250.<java.lang.String: int length()>();

        if i13 >= i17 goto label067;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        r17 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $r251 = r16.<com.android.server.am.ActivityManagerService$BadProcessInfo: java.lang.String stack>;

        $i66 = virtualinvoke $r251.<java.lang.String: int length()>();

        i15 = $i66 - i13;

        virtualinvoke r2.<java.io.PrintWriter: void write(java.lang.String,int,int)>(r17, i13, i15);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label067;

     label075:
        i9 = i9 + 1;

        goto label065;

     label076:
        if r4 != null goto label085;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  mStartedUsers:");

        i6 = 0;

     label077:
        $r232 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i61 = virtualinvoke $r232.<android.util.SparseArray: int size()>();

        if i6 >= $i61 goto label078;

        $r213 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r212 = virtualinvoke $r213.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        r11 = (com.android.server.am.UserStartedState) $r212;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    User #");

        $r211 = r11.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        $i57 = virtualinvoke $r211.<android.os.UserHandle: int getIdentifier()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i57);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r11.<com.android.server.am.UserStartedState: void dump(java.lang.String,java.io.PrintWriter)>("", r2);

        i6 = i6 + 1;

        goto label077;

     label078:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mStartedUserArray: [");

        i5 = 0;

     label079:
        $r231 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        $i60 = lengthof $r231;

        if i5 >= $i60 goto label081;

        if i5 <= 0 goto label080;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label080:
        $r214 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        $i58 = $r214[i5];

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i58);

        i5 = i5 + 1;

        goto label079;

     label081:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("]");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mUserLru: [");

        i7 = 0;

     label082:
        $r230 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $i59 = virtualinvoke $r230.<java.util.ArrayList: int size()>();

        if i7 >= $i59 goto label084;

        if i7 <= 0 goto label083;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label083:
        $r216 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $r215 = virtualinvoke $r216.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>($r215);

        i7 = i7 + 1;

        goto label082;

     label084:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("]");

        z4 = 0;

        if z0 == 0 goto label085;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mStartedUserArray: ");

        $r228 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        $r229 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r228);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r229);

     label085:
        $r39 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if $r39 == null goto label088;

        if r4 == null goto label086;

        $r223 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r221 = $r223.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z39 = virtualinvoke $r221.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z39 == 0 goto label088;

     label086:
        if z4 == 0 goto label087;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z4 = 0;

     label087:
        $r226 = new java.lang.StringBuilder;

        specialinvoke $r226.<java.lang.StringBuilder: void <init>()>();

        $r227 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHomeProcess: ");

        $r224 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r225 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r224);

        $r222 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r222);

     label088:
        $r40 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        if $r40 == null goto label091;

        if r4 == null goto label089;

        $r196 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        $r198 = $r196.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z36 = virtualinvoke $r198.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z36 == 0 goto label091;

     label089:
        if z4 == 0 goto label090;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z4 = 0;

     label090:
        $r193 = new java.lang.StringBuilder;

        specialinvoke $r193.<java.lang.StringBuilder: void <init>()>();

        $r192 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcess: ");

        $r195 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        $r194 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r195);

        $r197 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r197);

     label091:
        if z0 == 0 goto label092;

        $r190 = new java.lang.StringBuilder;

        specialinvoke $r190.<java.lang.StringBuilder: void <init>(int)>(128);

        r7 = $r190;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPreviousProcessVisibleTime: ");

        $l56 = r0.<com.android.server.am.ActivityManagerService: long mPreviousProcessVisibleTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l56, r7);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r7);

     label092:
        $r51 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r51 == null goto label095;

        if r4 == null goto label093;

        $r189 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r188 = $r189.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z35 = virtualinvoke $r188.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r4);

        if $z35 == 0 goto label095;

     label093:
        if z4 == 0 goto label094;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z4 = 0;

     label094:
        $r208 = new java.lang.StringBuilder;

        specialinvoke $r208.<java.lang.StringBuilder: void <init>()>();

        $r209 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mHeavyWeightProcess: ");

        $r210 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r187 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r210);

        $r186 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r186);

     label095:
        if r4 != null goto label096;

        $r203 = new java.lang.StringBuilder;

        specialinvoke $r203.<java.lang.StringBuilder: void <init>()>();

        $r204 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mConfiguration: ");

        $r205 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r206 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r205);

        $r207 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r207);

     label096:
        if z0 == 0 goto label100;

        $r168 = new java.lang.StringBuilder;

        specialinvoke $r168.<java.lang.StringBuilder: void <init>()>();

        $r167 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mConfigWillChange: ");

        $r166 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        $z28 = $r166.<com.android.server.am.ActivityStack: boolean mConfigWillChange>;

        $r172 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z28);

        $r171 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r171);

        $r170 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $r169 = virtualinvoke $r170.<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>();

        $i55 = virtualinvoke $r169.<java.util.HashMap: int size()>();

        if $i55 <= 0 goto label100;

        z5 = 0;

        $r175 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        $r174 = virtualinvoke $r175.<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>();

        $r173 = virtualinvoke $r174.<java.util.HashMap: java.util.Set entrySet()>();

        r9 = interfaceinvoke $r173.<java.util.Set: java.util.Iterator iterator()>();

     label097:
        $z37 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z37 == 0 goto label100;

        $r199 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r199;

        $r200 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r200;

        $r201 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r202 = (java.lang.Integer) $r201;

        i4 = virtualinvoke $r202.<java.lang.Integer: int intValue()>();

        if r4 == null goto label098;

        $z38 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z38 == 0 goto label097;

     label098:
        if z5 != 0 goto label099;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  mScreenCompatPackages:");

        z5 = 1;

     label099:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r10);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i4);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label097;

     label100:
        if r4 != null goto label103;

        $z30 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z30 != 0 goto label101;

        $z27 = r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep>;

        if $z27 != 0 goto label101;

        $z26 = r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown>;

        if $z26 == 0 goto label102;

     label101:
        $r177 = new java.lang.StringBuilder;

        specialinvoke $r177.<java.lang.StringBuilder: void <init>()>();

        $r176 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSleeping=");

        $z29 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        $r179 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z29);

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWentToSleep=");

        $z31 = r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep>;

        $r178 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z31);

        $r183 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLockScreenShown ");

        $z32 = r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown>;

        $r181 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z32);

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r182);

     label102:
        $z34 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z34 == 0 goto label103;

        $r185 = new java.lang.StringBuilder;

        specialinvoke $r185.<java.lang.StringBuilder: void <init>()>();

        $r184 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mShuttingDown=");

        $z33 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        $r165 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z33);

        $r164 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r164);

     label103:
        $r52 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        if $r52 != null goto label104;

        $r153 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        if $r153 != null goto label104;

        $z21 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        if $z21 != 0 goto label104;

        $z22 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        if $z22 == 0 goto label107;

     label104:
        if r4 == null goto label105;

        $r155 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $z24 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r155);

        if $z24 != 0 goto label105;

        $r154 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        $z23 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r154);

        if $z23 == 0 goto label107;

     label105:
        if z4 == 0 goto label106;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z4 = 0;

     label106:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDebugApp=");

        $r47 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        $r48 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r45 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/orig=");

        $r46 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp>;

        $r58 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDebugTransient=");

        $z10 = r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient>;

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mOrigWaitForDebugger=");

        $z9 = r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger>;

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r53);

     label107:
        $r66 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        if $r66 == null goto label110;

        if r4 == null goto label108;

        $r157 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        $z25 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r157);

        if $z25 == 0 goto label110;

     label108:
        if z4 == 0 goto label109;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        z4 = 0;

     label109:
        $r160 = new java.lang.StringBuilder;

        specialinvoke $r160.<java.lang.StringBuilder: void <init>()>();

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mOpenGlTraceApp=");

        $r158 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp>;

        $r159 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r158);

        $r156 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r156);

     label110:
        $r65 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        if $r65 != null goto label111;

        $r144 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        if $r144 != null goto label111;

        $r162 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        if $r162 != null goto label111;

        $r163 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        if $r163 == null goto label114;

     label111:
        if r4 == null goto label112;

        $r145 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        $z19 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r145);

        if $z19 == 0 goto label114;

     label112:
        if z4 == 0 goto label113;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label113:
        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileApp=");

        $r62 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp>;

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mProfileProc=");

        $r59 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc>;

        $r74 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r73);

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileFile=");

        $r78 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mProfileFd=");

        $r79 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        $r68 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r79);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mProfileType=");

        $i40 = r0.<com.android.server.am.ActivityManagerService: int mProfileType>;

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAutoStopProfiler=");

        $z11 = r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler>;

        $r89 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r90);

     label114:
        if r4 != null goto label117;

        $z12 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        if $z12 != 0 goto label115;

        $r146 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r146 == null goto label116;

     label115:
        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAlwaysFinishActivities=");

        $z13 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mController=");

        $r81 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r82 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r83);

     label116:
        if z0 == 0 goto label117;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Total persistent processes: ");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r87);

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mStartRunning=");

        $z16 = r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning>;

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z16);

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mProcessesReady=");

        $z18 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        $r105 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSystemReady=");

        $z17 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        $r98 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z17);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r97);

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mBooting=");

        $z15 = r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        $r100 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBooted=");

        $z14 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        $r115 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFactoryTest=");

        $i41 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        $r114 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r118 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r118);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mLastPowerCheckRealtime=");

        $l43 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckRealtime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l43, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mLastPowerCheckUptime=");

        $l42 = r0.<com.android.server.am.ActivityManagerService: long mLastPowerCheckUptime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l42, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("");

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mGoingToSleep=");

        $r109 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r106 = $r109.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mGoingToSleep>;

        $r107 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r106);

        $r112 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r112);

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mLaunchingActivity=");

        $r111 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r129 = $r111.<com.android.server.am.ActivityStackSupervisor: android.os.PowerManager$WakeLock mLaunchingActivity>;

        $r128 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r129);

        $r131 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r131);

        $r130 = new java.lang.StringBuilder;

        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAdjSeq=");

        $i46 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        $r126 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLruSeq=");

        $i45 = r0.<com.android.server.am.ActivityManagerService: int mLruSeq>;

        $r122 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);

        $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r124);

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNumNonCachedProcs=");

        $i44 = r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs>;

        $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i44);

        $r120 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r141 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i50 = virtualinvoke $r141.<java.util.ArrayList: int size()>();

        $r142 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total)");

        $r138 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNumCachedHiddenProcs=");

        $i49 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i49);

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNumServiceProcs=");

        $i47 = r0.<com.android.server.am.ActivityManagerService: int mNumServiceProcs>;

        $r136 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i47);

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewNumServiceProcs=");

        $i48 = r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs>;

        $r132 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r133);

        $r134 = new java.lang.StringBuilder;

        specialinvoke $r134.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mAllowLowerMemLevel=");

        $z20 = r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel>;

        $r152 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z20);

        $r151 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastMemoryLevel");

        $i54 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        $r150 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i54);

        $r149 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastNumProcesses");

        $i53 = r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses>;

        $r148 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        $r147 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r147);

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mLastIdleTime=");

        $l52 = r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>(l3, $l52, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" mLowRamSinceLastIdle=");

        $l51 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long getLowRamTimeSinceIdle(long)>(l3);

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l51, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label117:
        if z2 != 0 goto label118;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label118:
        return;

     label119:
        i2 = i2 + 1;

        goto label019;

     label120:
        i25 = i25 + 1;

        goto label035;

        catch java.lang.Throwable from label019 to label020 with label030;
        catch java.lang.Throwable from label021 to label022 with label030;
        catch java.lang.Throwable from label024 to label025 with label030;
        catch java.lang.Throwable from label026 to label027 with label030;
        catch java.lang.Throwable from label028 to label029 with label030;
        catch java.lang.Throwable from label031 to label032 with label030;
        catch java.lang.Throwable from label033 to label034 with label030;
        catch java.lang.Throwable from label035 to label036 with label046;
        catch java.lang.Throwable from label037 to label038 with label046;
        catch java.lang.Throwable from label040 to label041 with label046;
        catch java.lang.Throwable from label042 to label043 with label046;
        catch java.lang.Throwable from label044 to label045 with label046;
        catch java.lang.Throwable from label047 to label048 with label046;
        catch java.lang.Throwable from label049 to label050 with label046;
    }

    boolean dumpProcessesToGc(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i2, $i3, $i4;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String r4, $r11;
        long l1, $l5, $l6, $l7, $l8;
        com.android.server.am.ProcessRecord r5;
        java.util.ArrayList $r6, $r7, $r9;
        java.lang.Object $r8;
        android.content.pm.ApplicationInfo $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label6;

        z2 = 0;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        i2 = 0;

     label1:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i2 >= $i4 goto label6;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.ProcessRecord) $r8;

        if r4 == null goto label3;

        $r10 = r5.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z4 != 0 goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if z2 != 0 goto label5;

        if z0 == 0 goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label4:
        z0 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Processes that are waiting to GC:");

        z2 = 1;

     label5:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Process ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      lowMem=");

        $z3 = r5.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", last gced=");

        $l5 = r5.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l7 = l1 - $l5;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ms ago, last lowMem=");

        $l6 = r5.<com.android.server.am.ProcessRecord: long lastLowMemory>;

        $l8 = l1 - $l6;

        virtualinvoke r2.<java.io.PrintWriter: void print(long)>($l8);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" ms ago");

        goto label2;

     label6:
        return z0;
    }

    protected boolean dumpProvider(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String, java.lang.String[], int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String r3;
        java.lang.String[] r4;
        int i0;
        boolean z0, $z1;
        com.android.server.am.ProviderMap $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $z1 = virtualinvoke $r5.<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>(r1, r2, r3, r4, i0, z0);

        return $z1;
    }

    void dumpProvidersLocked(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, i3, i4, i5, $i7, $i8, $i9, $i10, $i11;
        boolean z0, z1, z2, z3, z4, $z5, $z6;
        java.lang.String r4, $r24;
        android.util.ArrayMap r5;
        java.util.Iterator r6;
        com.android.server.am.UriPermission r8;
        com.android.server.am.ContentProviderRecord r9;
        com.android.server.am.ActivityManagerService$ItemMatcher $r10;
        com.android.server.am.ProviderMap $r11;
        java.util.ArrayList $r12, $r22, $r23;
        android.util.SparseArray $r13, $r14, $r15, $r17;
        java.lang.Object $r16, $r18, $r26;
        java.util.Collection $r19;
        android.content.pm.PackageManager $r20;
        android.content.Context $r21;
        android.content.ComponentName $r25;
        android.content.pm.PackageManager$NameNotFoundException $r27;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        r4 := @parameter5: java.lang.String;

        $r10 = new com.android.server.am.ActivityManagerService$ItemMatcher;

        specialinvoke $r10.<com.android.server.am.ActivityManagerService$ItemMatcher: void <init>()>();

        virtualinvoke $r10.<com.android.server.am.ActivityManagerService$ItemMatcher: int build(java.lang.String[],int)>(r3, i0);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)");

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        z1 = virtualinvoke $r11.<com.android.server.am.ProviderMap: boolean dumpProvidersLocked(java.io.PrintWriter,boolean,java.lang.String)>(r2, z0, r4);

        z2 = 0 | z1;

        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i7 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label06;

        z4 = 0;

        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $i11 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        i5 = -1 + $i11;

     label01:
        if i5 < 0 goto label06;

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r26 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r9 = (com.android.server.am.ContentProviderRecord) $r26;

        if r4 == null goto label03;

        $r25 = r9.<com.android.server.am.ContentProviderRecord: android.content.ComponentName name>;

        $r24 = virtualinvoke $r25.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z6 != 0 goto label03;

     label02:
        i5 = i5 + -1;

        goto label01;

     label03:
        if z4 != 0 goto label05;

        if z1 == 0 goto label04;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label04:
        z1 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Launching content providers:");

        z4 = 1;

        z2 = 1;

     label05:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Launching #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r9);

        goto label02;

     label06:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i8 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

        if $i8 <= 0 goto label17;

        z3 = 0;

        i1 = -2;

        if r4 == null goto label09;

     label07:
        $r21 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r20 = virtualinvoke $r21.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        i4 = virtualinvoke $r20.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r4, 0);

     label08:
        i1 = i4;

     label09:
        i2 = 0;

     label10:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i9 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

        if i2 >= $i9 goto label17;

        $r17 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i3 = virtualinvoke $r17.<android.util.SparseArray: int keyAt(int)>(i2);

        if i1 < -1 goto label13;

        $i10 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i3);

        if $i10 == i1 goto label13;

     label11:
        i2 = i2 + 1;

        goto label10;

     label12:
        $r27 := @caughtexception;

        i1 = -1;

        goto label09;

     label13:
        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r5 = (android.util.ArrayMap) $r16;

        if z3 != 0 goto label15;

        if z1 == 0 goto label14;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label14:
        z1 = 1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Granted Uri Permissions:");

        z3 = 1;

        z2 = 1;

     label15:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  * UID ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i3);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" holds:");

        $r19 = virtualinvoke r5.<android.util.ArrayMap: java.util.Collection values()>();

        r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label16:
        $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.server.am.UriPermission) $r18;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r8);

        if z0 == 0 goto label16;

        virtualinvoke r8.<com.android.server.am.UriPermission: void dump(java.io.PrintWriter,java.lang.String)>(r2, "      ");

        goto label16;

     label17:
        if z2 != 0 goto label18;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  (nothing)");

     label18:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label12;
    }

    void enableScreenAfterBoot()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r3;
        long $l0;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3050, $l0);

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void enableScreenAfterBoot()>();

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateEventDispatchingLocked()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void enforceCallingPermission(java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, r3;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>(r1);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r13;
    }

    void enforceNotIsolatedCaller(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r6;
        int $i0;
        boolean $z0;
        java.lang.SecurityException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = staticinvoke <android.os.UserHandle: boolean isIsolated(int)>($i0);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.SecurityException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Isolated process not allowed to call ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        return;
    }

    final void ensureBootCompleted()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, z1, $z2;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 = 1;

        entermonitor r0;

     label1:
        z1 = r0.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 0;

        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z2 != 0 goto label6;

     label2:
        r0.<com.android.server.am.ActivityManagerService: boolean mBooted> = 1;

        exitmonitor r0;

     label3:
        if z1 == 0 goto label4;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishBooting()>();

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enableScreenAfterBoot()>();

     label5:
        return;

     label6:
        z0 = 0;

        goto label2;

     label7:
        $r2 := @caughtexception;

        r1 = $r2;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void ensurePackageDexOpt(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.content.pm.IPackageManager r2;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label1:
        $z0 = interfaceinvoke r2.<android.content.pm.IPackageManager: boolean performDexOpt(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        r0.<com.android.server.am.ActivityManagerService: boolean mDidDexOpt> = 1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public final void enterSafeMode()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r4;
        boolean z0;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

     label2:
        if z0 != 0 goto label4;

     label3:
        $r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void enterSafeMode()>();

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

        r1 = $r4;

     label7:
        exitmonitor r0;

     label8:
        throw r1;

     label9:
        $r5 := @caughtexception;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label9;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final boolean finishActivity(android.os.IBinder, int, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0;
        android.content.Intent r2;
        java.lang.Throwable r3, $r14;
        com.android.server.am.ActivityRecord r4, r5;
        long l1;
        boolean z0, z1, z2, $z3;
        android.app.IActivityController $r7, $r12;
        com.android.server.am.TaskRecord $r8, $r10;
        com.android.server.am.ActivityStack $r9, $r11;
        java.lang.String $r13;
        java.lang.IllegalArgumentException $r15;
        com.android.server.Watchdog $r16;
        android.os.RemoteException $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        if r2 == null goto label01;

        $z3 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z3 != 1 goto label01;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r15;

     label01:
        entermonitor r0;

     label02:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label03:
        if r4 != null goto label06;

     label04:
        exitmonitor r0;

     label05:
        return 1;

     label06:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r7 == null goto label19;

        $r10 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r11 = $r10.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        r5 = virtualinvoke $r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(android.os.IBinder,int)>(r1, 0);

     label07:
        if r5 == null goto label19;

        z1 = 1;

     label08:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r13 = r5.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        z2 = interfaceinvoke $r12.<android.app.IActivityController: boolean activityResuming(java.lang.String)>($r13);

     label09:
        z1 = z2;

     label10:
        if z1 != 0 goto label19;

     label11:
        exitmonitor r0;

     label12:
        return 0;

     label13:
        $r14 := @caughtexception;

        r3 = $r14;

     label14:
        exitmonitor r0;

     label15:
        throw r3;

     label16:
        $r17 := @caughtexception;

     label17:
        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r16 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r16.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label18:
        goto label10;

     label19:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r8 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r9 = $r8.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        z0 = virtualinvoke $r9.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>(r1, i0, r2, "app-request", 1);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label20:
        return z0;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch android.os.RemoteException from label08 to label09 with label16;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label13;
        catch java.lang.Throwable from label19 to label20 with label13;
    }

    public boolean finishActivityAffinity(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r6;
        long l0;
        com.android.server.am.ActivityRecord r3;
        boolean z0;
        com.android.server.am.TaskRecord $r4;
        com.android.server.am.ActivityStack $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        z0 = 0;

        if r3 == null goto label4;

     label3:
        $r4 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r5 = $r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        z0 = virtualinvoke $r5.<com.android.server.am.ActivityStack: boolean finishActivityAffinityLocked(com.android.server.am.ActivityRecord)>(r3);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label5:
        return z0;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    final void finishBooting()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IntentFilter r1, r27;
        java.lang.Throwable r2, $r24;
        int i0, i1, i2, i3, i4, $i5, $i6, $i8;
        java.util.ArrayList r3, $r11, $r25, r29;
        android.os.Message r4;
        com.android.server.am.UserStartedState r5;
        android.content.Intent r6, r30;
        android.content.Context $r10;
        android.os.Handler $r12, $r13;
        android.util.SparseArray $r14, $r15, $r19;
        java.lang.Object $r16, $r26;
        com.android.server.am.ProcessRecord $r23;
        com.android.server.am.ActivityManagerService$7 r28;
        com.android.server.am.ActivityManagerService$8 r31;
        android.content.IIntentReceiver r32;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r27 = new android.content.IntentFilter;

        specialinvoke r27.<android.content.IntentFilter: void <init>()>();

        r1 = r27;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.QUERY_PACKAGE_RESTART");

        virtualinvoke r1.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r28 = new com.android.server.am.ActivityManagerService$7;

        specialinvoke r28.<com.android.server.am.ActivityManagerService$7: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        virtualinvoke $r10.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r28, r1);

        entermonitor r0;

     label01:
        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

     label02:
        if i0 <= 0 goto label08;

     label03:
        r29 = new java.util.ArrayList;

        $r25 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        specialinvoke r29.<java.util.ArrayList: void <init>(java.util.Collection)>($r25);

        r3 = r29;

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label08;

     label06:
        $r26 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r23 = (com.android.server.am.ProcessRecord) $r26;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>($r23, "on-hold", null);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        $i5 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i5 == 1 goto label14;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r4 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int)>(27);

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r13.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r4, 900000L);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.boot_completed", "1");

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("dev.bootcomplete", "1");

     label09:
        i2 = 0;

     label10:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        i3 = virtualinvoke $r14.<android.util.SparseArray: int size()>();

     label11:
        if i2 >= i3 goto label14;

     label12:
        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r5 = (com.android.server.am.UserStartedState) $r16;

        $i6 = r5.<com.android.server.am.UserStartedState: int mState>;

        if $i6 != 0 goto label19;

        r5.<com.android.server.am.UserStartedState: int mState> = 1;

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        i4 = virtualinvoke $r19.<android.util.SparseArray: int keyAt(int)>(i2);

        r30 = new android.content.Intent;

        specialinvoke r30.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.BOOT_COMPLETED", null);

        r6 = r30;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i4);

        virtualinvoke r6.<android.content.Intent: android.content.Intent addFlags(int)>(134217728);

        r31 = new com.android.server.am.ActivityManagerService$8;

        specialinvoke r31.<com.android.server.am.ActivityManagerService$8: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $i8 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r32 = (android.content.IIntentReceiver) r31;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r6, null, r32, 0, null, null, "android.permission.RECEIVE_BOOT_COMPLETED", -1, 1, 0, $i8, 1000, i4);

     label13:
        goto label19;

     label14:
        exitmonitor r0;

     label15:
        return;

     label16:
        $r24 := @caughtexception;

        r2 = $r24;

     label17:
        exitmonitor r0;

     label18:
        throw r2;

     label19:
        i2 = i2 + 1;

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public final void finishHeavyWeightApp()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r24;
        java.util.ArrayList r2, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.am.ActivityRecord r3;
        java.lang.String r4;
        com.android.server.am.ProcessRecord $r5, $r7, $r9;
        android.os.Handler $r10, $r12;
        android.os.Message $r11;
        boolean $z1;
        java.lang.Object $r13;
        com.android.server.am.ActivityStack $r14;
        com.android.server.am.TaskRecord $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r21, $r23;
        java.lang.SecurityException $r22;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i1 == 0 goto label01;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: finishHeavyWeightApp() from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r4 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r4);

        $r22 = new java.lang.SecurityException;

        specialinvoke $r22.<java.lang.SecurityException: void <init>(java.lang.String)>(r4);

        throw $r22;

     label01:
        entermonitor r0;

     label02:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        if $r5 != null goto label04;

        exitmonitor r0;

     label03:
        return;

     label04:
        $r6 = new java.util.ArrayList;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r2 = $r6;

     label05:
        i0 = 0;

     label06:
        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label08;

        $r13 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActivityRecord) $r13;

        $z1 = r3.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label13;

        $r15 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r14 = $r15.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r14.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r3, 0, null, "finish-heavy", 1);

     label07:
        goto label13;

     label08:
        $r12 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $i3 = $r9.<com.android.server.am.ProcessRecord: int userId>;

        $r11 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(25, $i3, 0);

        virtualinvoke $r12.<android.os.Handler: boolean sendMessage(android.os.Message)>($r11);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

        exitmonitor r0;

     label09:
        return;

     label10:
        $r24 := @caughtexception;

        r1 = $r24;

     label11:
        exitmonitor r0;

     label12:
        throw r1;

     label13:
        i0 = i0 + 1;

        goto label06;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void finishInstrumentation(android.app.IApplicationThread, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        int i0;
        android.os.Bundle r2;
        java.lang.Throwable r3, $r10;
        com.android.server.am.ProcessRecord r4;
        long l1;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7;
        java.lang.IllegalArgumentException $r9;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if r2 == null goto label01;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z0 == 0 goto label01;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r9;

     label01:
        entermonitor r0;

     label02:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

     label03:
        if r4 != null goto label06;

     label04:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishInstrumentation: no app for ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        exitmonitor r0;

     label05:
        return;

     label06:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r4, i0, r2);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

     label09:
        exitmonitor r0;

     label10:
        throw r3;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void finishInstrumentationLocked(com.android.server.am.ProcessRecord, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1;
        android.os.Bundle r2;
        android.app.IInstrumentationWatcher $r5, $r11;
        android.app.IUiAutomationConnection $r6, $r9;
        android.content.pm.ApplicationInfo $r7;
        java.lang.String $r8;
        android.content.ComponentName $r10;
        android.os.RemoteException $r12, $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        if $r5 == null goto label2;

     label1:
        $r11 = r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher>;

        $r10 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        interfaceinvoke $r11.<android.app.IInstrumentationWatcher: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>($r10, i0, r2);

     label2:
        $r6 = r1.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        if $r6 == null goto label5;

     label3:
        $r9 = r1.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        interfaceinvoke $r9.<android.app.IUiAutomationConnection: void shutdown()>();

     label4:
        r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey> = 0;

     label5:
        r1.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher> = null;

        r1.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection> = null;

        r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass> = null;

        r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo> = null;

        r1.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile> = null;

        r1.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments> = null;

        $r7 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r8 = $r7.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $i1 = r1.<com.android.server.am.ProcessRecord: int userId>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r8, -1, 0, 0, 1, 1, 0, $i1, "finished inst");

        return;

     label6:
        $r12 := @caughtexception;

        goto label4;

     label7:
        $r13 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public void finishReceiver(android.os.IBinder, int, java.lang.String, android.os.Bundle, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0;
        java.lang.String r2;
        android.os.Bundle r3;
        boolean z0, z1, $z2;
        long l1;
        java.lang.Throwable r4, r5, $r9, $r11;
        com.android.server.am.BroadcastRecord r6;
        com.android.server.am.BroadcastQueue $r7, $r8;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        z0 := @parameter4: boolean;

        if r3 == null goto label01;

        $z2 = virtualinvoke r3.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z2 == 0 goto label01;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r10;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        entermonitor r0;

     label03:
        r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord broadcastRecordForReceiverLocked(android.os.IBinder)>(r1);

     label04:
        z1 = 0;

        if r6 == null goto label06;

     label05:
        $r7 = r6.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        z1 = virtualinvoke $r7.<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>(r6, i0, r2, r3, z0, 1);

     label06:
        exitmonitor r0;

     label07:
        if z1 == 0 goto label09;

     label08:
        $r8 = r6.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        virtualinvoke $r8.<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>(0);

     label09:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label11:
        $r9 := @caughtexception;

        r5 = $r9;

     label12:
        exitmonitor r0;

     label13:
        throw r5;

     label14:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label14 with label14;
    }

    public final void finishSubActivity(android.os.IBinder, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0;
        java.lang.Throwable r3, $r7;
        long l1;
        com.android.server.am.ActivityRecord r4;
        com.android.server.am.TaskRecord $r5;
        com.android.server.am.ActivityStack $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        entermonitor r0;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        if r4 == null goto label4;

     label3:
        $r5 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r6 = $r5.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r6.<com.android.server.am.ActivityStack: void finishSubActivityLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>(r4, r2, i0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        exitmonitor r0;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void finishUserStop(com.android.server.am.UserStartedState)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r2, $r6, $r7, $r10;
        java.lang.Throwable r3, $r19;
        boolean z0;
        android.os.UserHandle $r5;
        android.util.SparseArray $r8, $r11;
        java.lang.Object $r9, $r13, $r15;
        java.lang.Integer $r12;
        com.android.server.am.ActivityStackSupervisor $r14;
        android.app.IStopUserCallback $r16, $r18;
        android.os.RemoteException $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        $r5 = r1.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        i0 = virtualinvoke $r5.<android.os.UserHandle: int getIdentifier()>();

        entermonitor r0;

     label01:
        $r6 = new java.util.ArrayList;

        $r7 = r1.<com.android.server.am.UserStartedState: java.util.ArrayList mStopCallbacks>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        r2 = $r6;

        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r9 == r1 goto label08;

     label02:
        z0 = 0;

     label03:
        exitmonitor r0;

     label04:
        i1 = 0;

     label05:
        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i3 goto label19;

        if z0 == 0 goto label16;

     label06:
        $r15 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r18 = (android.app.IStopUserCallback) $r15;

        interfaceinvoke $r18.<android.app.IStopUserCallback: void userStopped(int)>(i0);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        $i2 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i2 == 3 goto label10;

     label09:
        z0 = 0;

        goto label03;

     label10:
        z0 = 1;

     label11:
        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        virtualinvoke $r11.<android.util.SparseArray: void remove(int)>(i0);

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r10.<java.util.ArrayList: boolean remove(java.lang.Object)>($r12);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopUserLocked(int,java.lang.String)>(i0, "finish user");

     label12:
        goto label03;

     label13:
        $r19 := @caughtexception;

        r3 = $r19;

     label14:
        exitmonitor r0;

     label15:
        throw r3;

     label16:
        $r13 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r16 = (android.app.IStopUserCallback) $r13;

        interfaceinvoke $r16.<android.app.IStopUserCallback: void userStopAborted(int)>(i0);

     label17:
        goto label07;

     label18:
        $r17 := @caughtexception;

        goto label07;

     label19:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r14.<com.android.server.am.ActivityStackSupervisor: void removeUserLocked(int)>(i0);

        return;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch android.os.RemoteException from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch android.os.RemoteException from label16 to label17 with label18;
    }

    void finishUserSwitch(com.android.server.am.UserStartedState)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1, r4;
        java.lang.Throwable r2, $r21;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14;
        java.lang.Integer r3;
        android.content.Intent r5, $r16;
        java.util.ArrayList $r6, $r7, $r8, $r12;
        android.util.SparseArray $r9, $r13;
        java.lang.Object $r10, $r11, $r17;
        android.os.UserHandle $r15, $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        entermonitor r0;

     label01:
        $i4 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i4 != 0 goto label02;

        $r13 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r15 = r1.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        $i13 = virtualinvoke $r15.<android.os.UserHandle: int getIdentifier()>();

        $r17 = virtualinvoke $r13.<android.util.SparseArray: java.lang.Object get(int)>($i13);

        if $r17 != r1 goto label02;

        r1.<com.android.server.am.UserStartedState: int mState> = 1;

        $r18 = r1.<com.android.server.am.UserStartedState: android.os.UserHandle mHandle>;

        i3 = virtualinvoke $r18.<android.os.UserHandle: int getIdentifier()>();

        $r16 = new android.content.Intent;

        specialinvoke $r16.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.BOOT_COMPLETED", null);

        r5 = $r16;

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i3);

        virtualinvoke r5.<android.content.Intent: android.content.Intent addFlags(int)>(134217728);

        $i14 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r5, null, null, 0, null, null, "android.permission.RECEIVE_BOOT_COMPLETED", -1, 1, 0, $i14, 1000, i3);

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label03:
        i1 = 0;

     label04:
        if i0 <= 3 goto label17;

     label05:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label06:
        if i1 >= i2 goto label17;

     label07:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (java.lang.Integer) $r10;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r11 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>($i5);

        r4 = (com.android.server.am.UserStartedState) $r11;

     label08:
        if r4 != null goto label11;

     label09:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        virtualinvoke $r12.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label10:
        i0 = i0 + -1;

        goto label04;

     label11:
        $i7 = r4.<com.android.server.am.UserStartedState: int mState>;

        if $i7 == 2 goto label22;

        $i6 = r4.<com.android.server.am.UserStartedState: int mState>;

        if $i6 != 3 goto label13;

     label12:
        goto label22;

     label13:
        $i9 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i9 == 0 goto label23;

        $i8 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i11 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        if $i8 != $i11 goto label15;

     label14:
        goto label23;

     label15:
        $i10 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int stopUserLocked(int,android.app.IStopUserCallback)>($i10, null);

     label16:
        i0 = i0 + -1;

        i1 = i1 + 1;

        goto label04;

     label17:
        exitmonitor r0;

     label18:
        return;

     label19:
        $r21 := @caughtexception;

        r2 = $r21;

     label20:
        exitmonitor r0;

     label21:
        throw r2;

     label22:
        i0 = i0 + -1;

        i1 = i1 + 1;

        goto label04;

     label23:
        i1 = i1 + 1;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public void forceStopPackage(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r10, r11, $r16, $r34;
        int i0, i1, i2, i4, i5, i6, i7, i8, $i9, $i10, $i12, $i13;
        long l3;
        java.lang.Throwable r2, r4, $r27, $r32;
        android.content.pm.IPackageManager r3;
        int[] r5, r6;
        java.lang.IllegalArgumentException r9, $r30;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r29, $r33, $r35, $r36, $r37;
        boolean $z0;
        android.os.RemoteException $r26, $r31;
        java.lang.SecurityException $r28;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        if $i9 == 0 goto label01;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: forceStopPackage() from pid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i13 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.FORCE_STOP_PACKAGES");

        r11 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r11);

        $r28 = new java.lang.SecurityException;

        specialinvoke $r28.<java.lang.SecurityException: void <init>(java.lang.String)>(r11);

        throw $r28;

     label01:
        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i10 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i1, $i10, i0, 1, 1, "forceStopPackage", null);

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        entermonitor r0;

     label03:
        if i2 != -1 goto label16;

     label04:
        r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

     label05:
        r6 = r5;

     label06:
        i4 = lengthof r6;

     label07:
        i5 = 0;

     label08:
        if i5 >= i4 goto label28;

     label09:
        i6 = r6[i5];

     label10:
        i7 = -1;

     label11:
        i8 = interfaceinvoke r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, i6);

     label12:
        i7 = i8;

     label13:
        if i7 != -1 goto label22;

     label14:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r16);

     label15:
        goto label32;

     label16:
        r5 = newarray (int)[1];

        r5[0] = i2;

     label17:
        goto label05;

     label18:
        $r27 := @caughtexception;

        r4 = $r27;

     label19:
        exitmonitor r0;

     label20:
        throw r4;

     label21:
        $r32 := @caughtexception;

        r2 = $r32;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r2;

     label22:
        interfaceinvoke r3.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>(r1, 1, i6);

     label23:
        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isUserRunningLocked(int,boolean)>(i6, 0);

        if $z0 == 0 goto label32;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from pid ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int,java.lang.String)>(r1, i7, r10);

     label24:
        goto label32;

     label25:
        $r30 := @caughtexception;

        r9 = $r30;

     label26:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r33 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r34);

     label27:
        goto label23;

     label28:
        exitmonitor r0;

     label29:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return;

     label30:
        $r31 := @caughtexception;

        goto label13;

     label31:
        $r26 := @caughtexception;

        goto label23;

     label32:
        i5 = i5 + 1;

        goto label08;

        catch java.lang.Throwable from label02 to label03 with label21;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch android.os.RemoteException from label11 to label12 with label30;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Throwable from label20 to label21 with label21;
        catch android.os.RemoteException from label22 to label23 with label31;
        catch java.lang.IllegalArgumentException from label22 to label23 with label25;
        catch java.lang.Throwable from label22 to label23 with label18;
        catch java.lang.Throwable from label23 to label24 with label18;
        catch java.lang.Throwable from label26 to label27 with label18;
        catch java.lang.Throwable from label28 to label29 with label18;
    }

    void foregroundTokenDied(com.android.server.am.ActivityManagerService$ForegroundToken)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$ForegroundToken r1, $r8;
        java.lang.Throwable r2, r4, $r12, $r13;
        android.util.SparseArray r3, $r6, $r9, $r10;
        com.android.server.am.ProcessRecord r5;
        int $i0, $i1, $i2;
        java.lang.Object $r7, $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService$ForegroundToken;

        entermonitor r0;

     label01:
        r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r3;

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i0 = r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r8 = (com.android.server.am.ActivityManagerService$ForegroundToken) $r7;

        if $r8 == r1 goto label05;

        exitmonitor r3;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $i1 = r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>($i1);

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i2 = r1.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r5 = (com.android.server.am.ProcessRecord) $r11;

     label06:
        if r5 != null goto label13;

     label07:
        exitmonitor r3;

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r12 := @caughtexception;

        r2 = $r12;

     label11:
        exitmonitor r0;

     label12:
        throw r2;

     label13:
        r5.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

        r5.<com.android.server.am.ProcessRecord: boolean foregroundServices> = 0;

        exitmonitor r3;

     label14:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        exitmonitor r0;

     label15:
        return;

     label16:
        $r13 := @caughtexception;

        r4 = $r13;

     label17:
        exitmonitor r3;

     label18:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label10;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public android.content.ComponentName getActivityClassForToken(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r6;
        com.android.server.am.ActivityRecord r3;
        android.content.ComponentName r4;
        android.content.Intent $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 != null goto label5;

     label3:
        exitmonitor r0;

     label4:
        return null;

     label5:
        $r5 = r3.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        r4 = virtualinvoke $r5.<android.content.Intent: android.content.ComponentName getComponent()>();

        exitmonitor r0;

     label6:
        return r4;

     label7:
        $r6 := @caughtexception;

        r2 = $r6;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ActivityInfo r1, r2, $r3;
        int i0, $i1;
        android.content.pm.ApplicationInfo $r4, $r5, $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ActivityInfo;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        if i0 >= 1 goto label2;

        $r6 = r1.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r6.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 >= 100000 goto label2;

     label1:
        return r1;

     label2:
        $r3 = new android.content.pm.ActivityInfo;

        specialinvoke $r3.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>(r1);

        r2 = $r3;

        $r4 = r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r4, i0);

        r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r5;

        return r2;
    }

    android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1, r2, $r3;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = new android.content.pm.ApplicationInfo;

        specialinvoke $r3.<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>(r1);

        r2 = $r3;

        $i1 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $i2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int applyUserId(int,int)>($i1, i0);

        r2.<android.content.pm.ApplicationInfo: int uid> = $i2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/user/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r2.<android.content.pm.ApplicationInfo: java.lang.String dataDir> = $r10;

        return r2;
    }

    public com.android.internal.app.IAppOpsService getAppOpsService()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.AppOpsService $r1;
        com.android.internal.app.IAppOpsService r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        r2 = (com.android.internal.app.IAppOpsService) $r1;

        return r2;
    }

    public android.os.Bundle getAssistContextExtras(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2, $i3;
        android.os.Bundle r1, $r27, $r28, r43;
        java.lang.Throwable r2, r6, r7, $r34, $r35, $r39;
        com.android.server.am.ActivityRecord r3;
        com.android.server.am.ActivityManagerService$PendingAssistExtras r4, r46;
        boolean z0;
        com.android.server.am.ActivityStack $r10;
        com.android.server.am.ProcessRecord $r11, $r17, $r18, $r21;
        java.lang.String $r12, $r16, $r33, $r41;
        java.lang.StringBuilder $r14, $r15, $r30, $r31, $r37, $r38, r44, r45, r47;
        android.app.IApplicationThread $r19, $r24;
        java.util.ArrayList $r22, $r26;
        android.view.IApplicationToken$Stub $r23;
        android.os.Handler $r25, $r29;
        android.os.RemoteException $r40;
        java.lang.InterruptedException $r42;
        android.os.IBinder r48, r49;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.GET_TOP_ACTIVITY_INFO", "getAssistContextExtras()");

        r43 = new android.os.Bundle;

        specialinvoke r43.<android.os.Bundle: void <init>()>();

        r1 = r43;

        entermonitor r0;

     label01:
        $r10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r3 = $r10.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

     label02:
        if r3 != null goto label05;

     label03:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "getAssistContextExtras failed: no resumed activity");

        exitmonitor r0;

     label04:
        return null;

     label05:
        $r12 = r3.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.intent.extra.ASSIST_PACKAGE", $r12);

        $r11 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == null goto label06;

        $r17 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r19 = $r17.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r19 != null goto label11;

     label06:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAssistContextExtras failed: no process for ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r16);

        exitmonitor r0;

     label07:
        return r1;

     label08:
        $r35 := @caughtexception;

        r2 = $r35;

     label09:
        exitmonitor r0;

     label10:
        throw r2;

     label11:
        $r18 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i2 = $r18.<com.android.server.am.ProcessRecord: int pid>;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if $i2 != $i3 goto label13;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAssistContextExtras failed: request process same as ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r33);

        exitmonitor r0;

     label12:
        return r1;

     label13:
        r46 = new com.android.server.am.ActivityManagerService$PendingAssistExtras;

        specialinvoke r46.<com.android.server.am.ActivityManagerService$PendingAssistExtras: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityRecord)>(r0, r3);

        r4 = r46;

     label14:
        $r21 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r24 = $r21.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r23 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        r48 = (android.os.IBinder) $r23;

        r49 = (android.os.IBinder) r4;

        interfaceinvoke $r24.<android.app.IApplicationThread: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int)>(r48, r49, i0);

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingAssistExtras>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $r25 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r25.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r4, 500L);

     label15:
        exitmonitor r0;

     label16:
        entermonitor r4;

     label17:
        z0 = r4.<com.android.server.am.ActivityManagerService$PendingAssistExtras: boolean haveResult>;

     label18:
        if z0 != 0 goto label25;

     label19:
        virtualinvoke r4.<java.lang.Object: void wait()>();

     label20:
        goto label17;

     label21:
        $r42 := @caughtexception;

        goto label17;

     label22:
        $r40 := @caughtexception;

     label23:
        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAssistContextExtras failed: crash calling ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r41);

        exitmonitor r0;

     label24:
        return r1;

     label25:
        $r27 = r4.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.os.Bundle result>;

        if $r27 == null goto label26;

        $r28 = r4.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.os.Bundle result>;

        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("android.intent.extra.ASSIST_CONTEXT", $r28);

     label26:
        exitmonitor r4;

     label27:
        entermonitor r0;

     label28:
        $r26 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingAssistExtras>;

        virtualinvoke $r26.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        $r29 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r29.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r4);

        exitmonitor r0;

     label29:
        return r1;

     label30:
        $r39 := @caughtexception;

        r7 = $r39;

     label31:
        exitmonitor r0;

     label32:
        throw r7;

     label33:
        $r34 := @caughtexception;

        r6 = $r34;

     label34:
        exitmonitor r4;

     label35:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch android.os.RemoteException from label14 to label15 with label22;
        catch java.lang.Throwable from label14 to label15 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.lang.InterruptedException from label19 to label20 with label21;
        catch java.lang.Throwable from label19 to label20 with label33;
        catch java.lang.Throwable from label23 to label24 with label08;
        catch java.lang.Throwable from label25 to label26 with label33;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.lang.Throwable from label34 to label35 with label33;
    }

    public android.content.ComponentName getCallingActivity(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r6;
        com.android.server.am.ActivityRecord r3;
        android.content.ComponentName r4;
        android.content.Intent $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord getCallingRecordLocked(android.os.IBinder)>(r1);

     label2:
        if r3 == null goto label9;

     label3:
        $r5 = r3.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        r4 = virtualinvoke $r5.<android.content.Intent: android.content.ComponentName getComponent()>();

     label4:
        exitmonitor r0;

     label5:
        return r4;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

     label9:
        r4 = null;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String getCallingPackage(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r6;
        com.android.server.am.ActivityRecord r3;
        java.lang.String r4;
        android.content.pm.ActivityInfo $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord getCallingRecordLocked(android.os.IBinder)>(r1);

     label2:
        if r3 == null goto label9;

     label3:
        $r5 = r3.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        r4 = $r5.<android.content.pm.ActivityInfo: java.lang.String packageName>;

     label4:
        exitmonitor r0;

     label5:
        return r4;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

     label9:
        r4 = null;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public android.content.res.Configuration getConfiguration()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.res.Configuration r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        $r3 = new android.content.res.Configuration;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r3.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r4);

        r1 = $r3;

        exitmonitor r0;

     label2:
        return r1;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread, java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r3;
        int i0, $i1, $i2, $i3;
        boolean z0;
        android.app.IActivityManager$ContentProviderHolder $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getContentProvider");

        if r1 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null IApplicationThread when getting content provider ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r8;

     label1:
        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i1, $i2, i0, 0, 1, "getContentProvider", null);

        $r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderImpl(android.app.IApplicationThread,java.lang.String,android.os.IBinder,boolean,int)>(r1, r2, null, z0, $i3);

        return $r4;
    }

    public android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String, int, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        android.os.IBinder r2;
        android.app.IActivityManager$ContentProviderHolder $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.IBinder;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY", "Do not have permission in call getContentProviderExternal()");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i1, $i2, i0, 0, 1, "getContentProvider", null);

        $r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, r2, $i3);

        return $r3;
    }

    public android.content.pm.UserInfo getCurrentUser()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r12;
        android.content.pm.UserInfo r2;
        java.lang.String r3;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.server.pm.UserManagerService $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.SecurityException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i0 == 0 goto label1;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i2 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getCurrentUser() from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r13 = new java.lang.SecurityException;

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r13;

     label1:
        entermonitor r0;

     label2:
        $r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        r2 = virtualinvoke $r4.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>($i1);

        exitmonitor r0;

     label3:
        return r2;

     label4:
        $r12 := @caughtexception;

        r1 = $r12;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    int getCurrentUserIdLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        return $i0;
    }

    public android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ConfigurationInfo r1, $r3;
        java.lang.Throwable r2, $r11;
        android.content.res.Configuration $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = new android.content.pm.ConfigurationInfo;

        specialinvoke $r3.<android.content.pm.ConfigurationInfo: void <init>()>();

        r1 = $r3;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i0 = $r4.<android.content.res.Configuration: int touchscreen>;

        r1.<android.content.pm.ConfigurationInfo: int reqTouchScreen> = $i0;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i1 = $r5.<android.content.res.Configuration: int keyboard>;

        r1.<android.content.pm.ConfigurationInfo: int reqKeyboardType> = $i1;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i2 = $r6.<android.content.res.Configuration: int navigation>;

        r1.<android.content.pm.ConfigurationInfo: int reqNavigation> = $i2;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i3 = $r7.<android.content.res.Configuration: int navigation>;

        if $i3 == 2 goto label2;

        $r10 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i11 = $r10.<android.content.res.Configuration: int navigation>;

        if $i11 != 3 goto label3;

     label2:
        $i4 = r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i5 = 2 | $i4;

        r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i5;

     label3:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i7 = $r8.<android.content.res.Configuration: int keyboard>;

        if $i7 == 0 goto label4;

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $i9 = $r9.<android.content.res.Configuration: int keyboard>;

        if $i9 == 1 goto label4;

        $i8 = r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures>;

        $i10 = 1 | $i8;

        r1.<android.content.pm.ConfigurationInfo: int reqInputFeatures> = $i10;

     label4:
        $i6 = r0.<com.android.server.am.ActivityManagerService: int GL_ES_VERSION>;

        r1.<android.content.pm.ConfigurationInfo: int reqGlEsVersion> = $i6;

        exitmonitor r0;

     label5:
        return r1;

     label6:
        $r11 := @caughtexception;

        r2 = $r11;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    com.android.server.am.ActivityStack getFocusedStack()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityStackSupervisor $r1;
        com.android.server.am.ActivityStack $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r2 = virtualinvoke $r1.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        return $r2;
    }

    public int getFrontActivityScreenCompatMode()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r3;
        int i0;
        com.android.server.am.CompatModePackages $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getFrontActivityScreenCompatMode");

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        i0 = virtualinvoke $r2.<com.android.server.am.CompatModePackages: int getFrontActivityScreenCompatModeLocked()>();

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    android.content.Intent getHomeIntent()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r4, $r9;
        android.net.Uri r2;
        android.content.Intent r3, $r5;
        android.content.ComponentName $r6;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction>;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData>;

        if $r4 == null goto label3;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData>;

        r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r9);

     label1:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>(r1, r2);

        r3 = $r5;

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r6);

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i0 == 1 goto label2;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.HOME");

     label2:
        return r3;

     label3:
        r2 = null;

        goto label1;
    }

    public android.content.Intent getIntentForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r3;
        android.content.Intent r4, $r6, $r7, $r9;
        boolean $z0;
        com.android.server.am.PendingIntentRecord$Key $r5, $r8;
        java.lang.ClassCastException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = (com.android.server.am.PendingIntentRecord) r1;

        $r5 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r6 = $r5.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if $r6 == null goto label3;

        $r7 = new android.content.Intent;

        $r8 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r9 = $r8.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Intent)>($r9);

        r4 = $r7;

     label2:
        return r4;

     label3:
        r4 = null;

        goto label2;

     label4:
        $r10 := @caughtexception;

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label4;
    }

    public android.content.IIntentSender getIntentSender(int, java.lang.String, android.os.IBinder, java.lang.String, int, android.content.Intent[], java.lang.String[], int, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20;
        java.lang.String r1, r3, r10;
        android.os.IBinder r2;
        android.content.Intent[] r4;
        java.lang.String[] r5;
        android.os.Bundle r6;
        java.lang.Throwable r7, $r32, r42;
        boolean z0, $z1, $z2, $z3;
        android.os.RemoteException r8, $r30;
        android.content.IIntentSender r9;
        android.content.Intent r11, r36;
        android.content.pm.IPackageManager $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, r39;
        java.lang.IllegalArgumentException r33, r34, r35, r37, r38;
        java.lang.SecurityException r40, r41;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.IBinder;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        r4 := @parameter5: android.content.Intent[];

        r5 := @parameter6: java.lang.String[];

        i2 := @parameter7: int;

        r6 := @parameter8: android.os.Bundle;

        i3 := @parameter9: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getIntentSender");

        if r4 == null goto label07;

        $i18 = lengthof r4;

        if $i18 >= 1 goto label01;

        r33 = new java.lang.IllegalArgumentException;

        specialinvoke r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Intents array length must be >= 1");

        throw r33;

     label01:
        i10 = 0;

     label02:
        i11 = lengthof r4;

        if i10 >= i11 goto label06;

        r11 = r4[i10];

        if r11 == null goto label05;

        $z3 = virtualinvoke r11.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z3 == 0 goto label03;

        r34 = new java.lang.IllegalArgumentException;

        specialinvoke r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw r34;

     label03:
        if i0 != 1 goto label04;

        $i20 = virtualinvoke r11.<android.content.Intent: int getFlags()>();

        $i19 = 33554432 & $i20;

        if $i19 == 0 goto label04;

        r35 = new java.lang.IllegalArgumentException;

        specialinvoke r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here");

        throw r35;

     label04:
        r36 = new android.content.Intent;

        specialinvoke r36.<android.content.Intent: void <init>(android.content.Intent)>(r11);

        r4[i10] = r36;

     label05:
        i10 = i10 + 1;

        goto label02;

     label06:
        if r5 == null goto label07;

        $i16 = lengthof r5;

        $i17 = lengthof r4;

        if $i16 == $i17 goto label07;

        r37 = new java.lang.IllegalArgumentException;

        specialinvoke r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Intent array length does not match resolvedTypes length");

        throw r37;

     label07:
        if r6 == null goto label08;

        $z2 = virtualinvoke r6.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z2 == 0 goto label08;

        r38 = new java.lang.IllegalArgumentException;

        specialinvoke r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in options");

        throw r38;

     label08:
        entermonitor r0;

     label09:
        i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label10:
        if i0 != 1 goto label20;

        z0 = 1;

     label11:
        i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i5, i4, i3, z0, 0, "getIntentSender", null);

     label12:
        i8 = i6;

        if i3 != -2 goto label13;

        i8 = -2;

     label13:
        if i4 == 0 goto label21;

        if i4 == 1000 goto label21;

     label14:
        $r12 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i12 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i4);

        i9 = interfaceinvoke $r12.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, $i12);

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i4, i9);

        if $z1 != 0 goto label21;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getIntentSender() from pid=");

        $i13 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i14 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", (need uid=");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not allowed to send as package ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r10 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r10);

        r40 = new java.lang.SecurityException;

        specialinvoke r40.<java.lang.SecurityException: void <init>(java.lang.String)>(r10);

        throw r40;

     label15:
        $r30 := @caughtexception;

        r8 = $r30;

     label16:
        r41 = new java.lang.SecurityException;

        r42 = (java.lang.Throwable) r8;

        specialinvoke r41.<java.lang.SecurityException: void <init>(java.lang.Throwable)>(r42);

        throw r41;

     label17:
        $r32 := @caughtexception;

        r7 = $r32;

     label18:
        exitmonitor r0;

     label19:
        throw r7;

     label20:
        z0 = 0;

        goto label11;

     label21:
        i7 = i8;

     label22:
        r9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>(i0, r1, i4, i7, r2, r3, i1, r4, r5, i2, r6);

     label23:
        exitmonitor r0;

     label24:
        return r9;

        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch android.os.RemoteException from label14 to label15 with label15;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch android.os.RemoteException from label22 to label23 with label15;
        catch java.lang.Throwable from label22 to label23 with label17;
        catch java.lang.Throwable from label23 to label24 with label17;
    }

    android.content.IIntentSender getIntentSenderLocked(int, java.lang.String, int, int, android.os.IBinder, java.lang.String, int, android.content.Intent[], java.lang.String[], int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r1, r3;
        android.os.IBinder r2;
        android.content.Intent[] r4;
        java.lang.String[] r5;
        android.os.Bundle r6;
        com.android.server.am.ActivityRecord r7;
        boolean z0, z1, z2, $z4;
        java.lang.ref.WeakReference r8, $r19, $r22;
        com.android.server.am.PendingIntentRecord$Key r9, $r24, $r28, $r29, $r30, $r31, $r32, $r35, r37;
        com.android.server.am.PendingIntentRecord r10, r38;
        android.content.Intent r11, r12, $r25, $r33;
        java.util.HashMap $r14, $r20, $r26;
        java.lang.Object $r16, $r36;
        java.util.HashSet $r18, $r23, r39;
        android.content.IIntentSender r40, r41, r42, r43;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.IBinder;

        r3 := @parameter5: java.lang.String;

        i3 := @parameter6: int;

        r4 := @parameter7: android.content.Intent[];

        r5 := @parameter8: java.lang.String[];

        i4 := @parameter9: int;

        r6 := @parameter10: android.os.Bundle;

        r7 = null;

        if i0 != 3 goto label03;

        r7 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r2);

        if r7 != null goto label02;

        r10 = null;

     label01:
        r40 = (android.content.IIntentSender) r10;

        return r40;

     label02:
        $z4 = r7.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z4 == 0 goto label03;

        return null;

     label03:
        $i6 = 536870912 & i4;

        if $i6 == 0 goto label10;

        z0 = 1;

     label04:
        $i5 = 268435456 & i4;

        if $i5 == 0 goto label11;

        z1 = 1;

     label05:
        $i7 = 134217728 & i4;

        if $i7 == 0 goto label12;

        z2 = 1;

     label06:
        r37 = new com.android.server.am.PendingIntentRecord$Key;

        $i8 = i4 & -939524097;

        specialinvoke r37.<com.android.server.am.PendingIntentRecord$Key: void <init>(int,java.lang.String,com.android.server.am.ActivityRecord,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>(i0, r1, r7, r3, i3, r4, r5, $i8, r6, i2);

        r9 = r37;

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r8 = (java.lang.ref.WeakReference) $r16;

        if r8 == null goto label13;

        $r36 = virtualinvoke r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r10 = (com.android.server.am.PendingIntentRecord) $r36;

     label07:
        if r10 == null goto label17;

        if z1 != 0 goto label16;

        if z2 == 0 goto label01;

        $r24 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r25 = $r24.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if $r25 == null goto label09;

        $r35 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        r12 = $r35.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        if r4 == null goto label14;

        $i12 = lengthof r4;

        $i11 = -1 + $i12;

        r11 = r4[$i11];

     label08:
        virtualinvoke r12.<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>(r11);

     label09:
        if r4 == null goto label15;

        $i9 = lengthof r4;

        $i10 = -1 + $i9;

        $r28 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r33 = $r28.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent requestIntent>;

        r4[$i10] = $r33;

        $r32 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r32.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents> = r4;

        $r31 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r31.<com.android.server.am.PendingIntentRecord$Key: java.lang.String[] allResolvedTypes> = r5;

        r41 = (android.content.IIntentSender) r10;

        return r41;

     label10:
        z0 = 0;

        goto label04;

     label11:
        z1 = 0;

        goto label05;

     label12:
        z2 = 0;

        goto label06;

     label13:
        r10 = null;

        goto label07;

     label14:
        r11 = null;

        goto label08;

     label15:
        $r29 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r29.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents> = null;

        $r30 = r10.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r30.<com.android.server.am.PendingIntentRecord$Key: java.lang.String[] allResolvedTypes> = null;

        r42 = (android.content.IIntentSender) r10;

        return r42;

     label16:
        r10.<com.android.server.am.PendingIntentRecord: boolean canceled> = 1;

        $r26 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r9);

     label17:
        if z0 != 0 goto label01;

        r38 = new com.android.server.am.PendingIntentRecord;

        specialinvoke r38.<com.android.server.am.PendingIntentRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.PendingIntentRecord$Key,int)>(r0, r9, i1);

        r10 = r38;

        $r20 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mIntentSenderRecords>;

        $r19 = r10.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r19);

        if i0 != 3 goto label01;

        $r18 = r7.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        if $r18 != null goto label18;

        r39 = new java.util.HashSet;

        specialinvoke r39.<java.util.HashSet: void <init>()>();

        r7.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults> = r39;

     label18:
        $r23 = r7.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        $r22 = r10.<com.android.server.am.PendingIntentRecord: java.lang.ref.WeakReference ref>;

        virtualinvoke $r23.<java.util.HashSet: boolean add(java.lang.Object)>($r22);

        r43 = (android.content.IIntentSender) r10;

        return r43;
    }

    public java.lang.String getLaunchedFromPackage(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = r2.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        return $r3;
    }

    public int getLaunchedFromUid(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r2 != null goto label1;

        return -1;

     label1:
        $i0 = r2.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        return $i0;
    }

    public void getMemoryInfo(android.app.ActivityManager$MemoryInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.ActivityManager$MemoryInfo r1;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l8, $l9, $l10, $l11;
        boolean z0;
        com.android.server.am.ProcessList $r2, $r3, $r4, $r5, $r6;
        byte $b7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.ActivityManager$MemoryInfo;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        l0 = virtualinvoke $r2.<com.android.server.am.ProcessList: long getMemLevel(int)>(6);

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        l1 = virtualinvoke $r3.<com.android.server.am.ProcessList: long getMemLevel(int)>(9);

        $l2 = staticinvoke <android.os.Process: long getFreeMemory()>();

        r1.<android.app.ActivityManager$MemoryInfo: long availMem> = $l2;

        $l3 = staticinvoke <android.os.Process: long getTotalMemory()>();

        r1.<android.app.ActivityManager$MemoryInfo: long totalMem> = $l3;

        r1.<android.app.ActivityManager$MemoryInfo: long threshold> = l0;

        $l8 = r1.<android.app.ActivityManager$MemoryInfo: long availMem>;

        $l4 = l1 - l0;

        $l5 = $l4 / 2L;

        $l6 = l0 + $l5;

        $b7 = $l8 cmp $l6;

        if $b7 >= 0 goto label2;

        z0 = 1;

     label1:
        r1.<android.app.ActivityManager$MemoryInfo: boolean lowMemory> = z0;

        r1.<android.app.ActivityManager$MemoryInfo: long hiddenAppThreshold> = l1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l9 = virtualinvoke $r4.<com.android.server.am.ProcessList: long getMemLevel(int)>(5);

        r1.<android.app.ActivityManager$MemoryInfo: long secondaryServerThreshold> = $l9;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l10 = virtualinvoke $r5.<com.android.server.am.ProcessList: long getMemLevel(int)>(1);

        r1.<android.app.ActivityManager$MemoryInfo: long visibleAppThreshold> = $l10;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l11 = virtualinvoke $r6.<com.android.server.am.ProcessList: long getMemLevel(int)>(0);

        r1.<android.app.ActivityManager$MemoryInfo: long foregroundAppThreshold> = $l11;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    com.android.server.am.TaskRecord getMostRecentTask()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        com.android.server.am.TaskRecord $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (com.android.server.am.TaskRecord) $r2;

        return $r3;
    }

    public void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.ActivityManager$RunningAppProcessInfo r1;
        java.lang.Throwable r2, r4, $r8, $r9;
        android.util.SparseArray r3, $r6;
        com.android.server.am.ProcessRecord r5;
        int $i0;
        java.lang.Object $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.ActivityManager$RunningAppProcessInfo;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getMyMemoryState");

        entermonitor r0;

     label01:
        r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r3;

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r5 = (com.android.server.am.ProcessRecord) $r7;

        exitmonitor r3;

     label03:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void fillInProcMemInfo(com.android.server.am.ProcessRecord,android.app.ActivityManager$RunningAppProcessInfo)>(r5, r1);

        exitmonitor r0;

     label04:
        return;

     label05:
        $r9 := @caughtexception;

        r4 = $r9;

     label06:
        exitmonitor r3;

     label07:
        throw r4;

     label08:
        $r8 := @caughtexception;

        r2 = $r8;

     label09:
        exitmonitor r0;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean getPackageAskScreenCompat(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r4;
        boolean z0;
        com.android.server.am.CompatModePackages $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getPackageAskScreenCompat");

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        z0 = virtualinvoke $r3.<com.android.server.am.CompatModePackages: boolean getPackageAskCompatModeLocked(java.lang.String)>(r1);

        exitmonitor r0;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getPackageForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        java.lang.String r3;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r4;
        com.android.server.am.PendingIntentRecord$Key $r5;
        java.lang.ClassCastException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = (com.android.server.am.PendingIntentRecord) r1;

        $r5 = $r4.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        r3 = $r5.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public java.lang.String getPackageForToken(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r5;
        com.android.server.am.ActivityRecord r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 != null goto label5;

     label3:
        exitmonitor r0;

     label4:
        return null;

     label5:
        r4 = r3.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        exitmonitor r0;

     label6:
        return r4;

     label7:
        $r5 := @caughtexception;

        r2 = $r5;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getPackageScreenCompatMode(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r4;
        int i0;
        com.android.server.am.CompatModePackages $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getPackageScreenCompatMode");

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        i0 = virtualinvoke $r3.<com.android.server.am.CompatModePackages: int getPackageScreenCompatModeLocked(java.lang.String)>(r1);

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r17, $r21, $r24, $r32;
        boolean z0, $z1, $z3;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10;
        android.content.pm.IPackageManager r2;
        java.util.ArrayList r4;
        java.lang.Throwable r5, $r31;
        android.util.ArrayMap r6, r8;
        com.android.server.am.UriPermission r7, r10;
        android.util.SparseArray $r11, $r14, $r19;
        android.content.pm.ParceledListSlice $r12;
        java.lang.Object $r13, $r15, $r18, $r20;
        android.content.UriPermission $r16, $r23;
        java.lang.StringBuilder $r22, $r25, $r26, $r27, $r28, $r29, $r33, $r34;
        java.lang.SecurityException $r30, $r36;
        android.os.RemoteException $r35;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getPersistedUriPermissions");

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "packageName");

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label01:
        $i8 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i7 = interfaceinvoke r2.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, $i8);

        if $i7 == i0 goto label03;

        $r30 = new java.lang.SecurityException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not belong to calling UID ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.SecurityException: void <init>(java.lang.String)>($r32);

        throw $r30;

     label02:
        $r35 := @caughtexception;

        $r36 = new java.lang.SecurityException;

        specialinvoke $r36.<java.lang.SecurityException: void <init>(java.lang.String)>("Failed to verify package name ownership");

        throw $r36;

     label03:
        r4 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        entermonitor r0;

        if z0 == 0 goto label14;

     label04:
        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r18 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r8 = (android.util.ArrayMap) $r18;

     label05:
        if r8 != null goto label09;

     label06:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission grants found for ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r24);

     label07:
        exitmonitor r0;

     label08:
        $r12 = new android.content.pm.ParceledListSlice;

        specialinvoke $r12.<android.content.pm.ParceledListSlice: void <init>(java.util.List)>(r4);

        return $r12;

     label09:
        i6 = virtualinvoke r8.<android.util.ArrayMap: int size()>();

     label10:
        i5 = 0;

     label11:
        if i5 >= i6 goto label07;

     label12:
        $r20 = virtualinvoke r8.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r10 = (com.android.server.am.UriPermission) $r20;

        $r21 = r10.<com.android.server.am.UriPermission: java.lang.String targetPkg>;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z3 == 0 goto label25;

        $i10 = r10.<com.android.server.am.UriPermission: int persistedModeFlags>;

        if $i10 == 0 goto label25;

        $r23 = virtualinvoke r10.<com.android.server.am.UriPermission: android.content.UriPermission buildPersistedPublicApiObject()>();

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

     label13:
        goto label25;

     label14:
        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        i1 = virtualinvoke $r11.<android.util.SparseArray: int size()>();

     label15:
        i2 = 0;

     label16:
        if i2 >= i1 goto label07;

     label17:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $r15 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r6 = (android.util.ArrayMap) $r15;

        i3 = virtualinvoke r6.<android.util.ArrayMap: int size()>();

     label18:
        i4 = 0;

     label19:
        if i4 >= i3 goto label27;

     label20:
        $r13 = virtualinvoke r6.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r7 = (com.android.server.am.UriPermission) $r13;

        $r17 = r7.<com.android.server.am.UriPermission: java.lang.String sourcePkg>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 == 0 goto label26;

        $i9 = r7.<com.android.server.am.UriPermission: int persistedModeFlags>;

        if $i9 == 0 goto label26;

        $r16 = virtualinvoke r7.<com.android.server.am.UriPermission: android.content.UriPermission buildPersistedPublicApiObject()>();

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label21:
        goto label26;

     label22:
        $r31 := @caughtexception;

        r5 = $r31;

     label23:
        exitmonitor r0;

     label24:
        throw r5;

     label25:
        i5 = i5 + 1;

        goto label11;

     label26:
        i4 = i4 + 1;

        goto label19;

     label27:
        i2 = i2 + 1;

        goto label16;

        catch android.os.RemoteException from label01 to label02 with label02;
        catch java.lang.Throwable from label04 to label05 with label22;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
    }

    public int getProcessLimit()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r2;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimitOverride>;

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])
    {
        com.android.server.am.ActivityManagerService r0;
        int[] r1;
        android.os.Debug$MemoryInfo[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Throwable r3, r5, r7, $r16, $r18, $r19;
        android.util.SparseArray r4, $r8;
        com.android.server.am.ProcessRecord r6;
        java.lang.Object $r9;
        android.os.Debug$MemoryInfo $r10, $r11, $r14, $r15;
        android.app.IApplicationThread $r12;
        com.android.internal.app.ProcessStats$ProcessState $r13;
        long $l9, $l10;
        android.util.ArrayMap $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: int[];

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessMemoryInfo");

        $i2 = lengthof r1;

        r2 = newarray (android.os.Debug$MemoryInfo)[$i2];

        $i3 = lengthof r1;

        i0 = -1 + $i3;

     label01:
        if i0 < 0 goto label22;

        entermonitor r0;

     label02:
        r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r4;

     label03:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i4 = r1[i0];

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        r6 = (com.android.server.am.ProcessRecord) $r9;

     label04:
        if r6 == null goto label12;

     label05:
        i1 = r6.<com.android.server.am.ProcessRecord: int setAdj>;

     label06:
        exitmonitor r4;

     label07:
        exitmonitor r0;

     label08:
        $r10 = new android.os.Debug$MemoryInfo;

        specialinvoke $r10.<android.os.Debug$MemoryInfo: void <init>()>();

        r2[i0] = $r10;

        $i5 = r1[i0];

        $r11 = r2[i0];

        staticinvoke <android.os.Debug: void getMemoryInfo(int,android.os.Debug$MemoryInfo)>($i5, $r11);

        if r6 == null goto label11;

        entermonitor r0;

     label09:
        $r12 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r12 == null goto label10;

        $i6 = r6.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i6 != i1 goto label10;

        $r13 = r6.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r14 = r2[i0];

        $i7 = virtualinvoke $r14.<android.os.Debug$MemoryInfo: int getTotalPss()>();

        $l9 = (long) $i7;

        $r15 = r2[i0];

        $i8 = virtualinvoke $r15.<android.os.Debug$MemoryInfo: int getTotalUss()>();

        $l10 = (long) $i8;

        $r17 = r6.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r13.<com.android.internal.app.ProcessStats$ProcessState: void addPss(long,long,boolean,android.util.ArrayMap)>($l9, $l10, 0, $r17);

     label10:
        exitmonitor r0;

     label11:
        i0 = i0 + -1;

        goto label01;

     label12:
        i1 = 0;

        goto label06;

     label13:
        $r19 := @caughtexception;

        r5 = $r19;

     label14:
        exitmonitor r4;

     label15:
        throw r5;

     label16:
        $r16 := @caughtexception;

        r3 = $r16;

     label17:
        exitmonitor r0;

     label18:
        throw r3;

     label19:
        $r18 := @caughtexception;

        r7 = $r18;

     label20:
        exitmonitor r0;

     label21:
        throw r7;

     label22:
        return r2;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public long[] getProcessPss(int[])
    {
        com.android.server.am.ActivityManagerService r0;
        int[] r1;
        long[] r2, r7;
        int i0, i1, $i2, $i3, $i4, $i6, $i7;
        java.lang.Throwable r3, r5, r8, $r14, $r15, $r16;
        android.util.SparseArray r4, $r10;
        com.android.server.am.ProcessRecord r6;
        java.lang.Object $r9;
        long $l5, $l8, $l9;
        android.app.IApplicationThread $r11;
        android.util.ArrayMap $r12;
        com.android.internal.app.ProcessStats$ProcessState $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: int[];

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessPss");

        $i2 = lengthof r1;

        r2 = newarray (long)[$i2];

        $i3 = lengthof r1;

        i0 = -1 + $i3;

     label01:
        if i0 < 0 goto label22;

        entermonitor r0;

     label02:
        r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r4;

     label03:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i4 = r1[i0];

        $r9 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        r6 = (com.android.server.am.ProcessRecord) $r9;

     label04:
        if r6 == null goto label12;

     label05:
        i1 = r6.<com.android.server.am.ProcessRecord: int setAdj>;

     label06:
        exitmonitor r4;

     label07:
        exitmonitor r0;

     label08:
        r7 = newarray (long)[1];

        $i6 = r1[i0];

        $l5 = staticinvoke <android.os.Debug: long getPss(int,long[])>($i6, r7);

        r2[i0] = $l5;

        if r6 == null goto label11;

        entermonitor r0;

     label09:
        $r11 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r11 == null goto label10;

        $i7 = r6.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i7 != i1 goto label10;

        $r13 = r6.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $l9 = r2[i0];

        $l8 = r7[0];

        $r12 = r6.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        virtualinvoke $r13.<com.android.internal.app.ProcessStats$ProcessState: void addPss(long,long,boolean,android.util.ArrayMap)>($l9, $l8, 0, $r12);

     label10:
        exitmonitor r0;

     label11:
        i0 = i0 + -1;

        goto label01;

     label12:
        i1 = 0;

        goto label06;

     label13:
        $r15 := @caughtexception;

        r5 = $r15;

     label14:
        exitmonitor r4;

     label15:
        throw r5;

     label16:
        $r16 := @caughtexception;

        r3 = $r16;

     label17:
        exitmonitor r0;

     label18:
        throw r3;

     label19:
        $r14 := @caughtexception;

        r8 = $r14;

     label20:
        exitmonitor r0;

     label21:
        throw r8;

     label22:
        return r2;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    final com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r9, $r12;
        int i0, i1, i2, $i3, $i4, $i10;
        boolean z0, $z1;
        com.android.server.am.ProcessRecord r2, $r19;
        android.util.SparseArray r3;
        com.android.internal.app.ProcessMap $r4, $r16;
        java.lang.Object $r5, $r17, $r18;
        com.android.server.am.ProcessList $r6;
        long $l5, $l6, $l8, $l9;
        byte $b7;
        java.lang.StringBuilder $r7, $r10, $r11;
        com.android.internal.app.ProcessStats$ProcessState $r8, $r13;
        android.util.ArrayMap $r14, $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != 1000 goto label4;

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r15 = virtualinvoke $r16.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r17 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.util.SparseArray) $r17;

        if r3 != null goto label1;

        return null;

     label1:
        i1 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        $i10 = virtualinvoke r3.<android.util.SparseArray: int keyAt(int)>(i2);

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameUser(int,int)>($i10, i0);

        if $z1 == 0 goto label3;

        $r18 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r19 = (com.android.server.am.ProcessRecord) $r18;

        return $r19;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r1, i0);

        r2 = (com.android.server.am.ProcessRecord) $r5;

        if r2 == null goto label6;

        if z0 != 0 goto label6;

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if $i3 <= 0 goto label6;

        $i4 = r2.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i4 < 13 goto label6;

        $l5 = r2.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l6 = virtualinvoke $r6.<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>();

        $b7 = $l5 cmp $l6;

        if $b7 < 0 goto label6;

        $r8 = r2.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        if $r8 == null goto label5;

        $r13 = r2.<com.android.server.am.ProcessRecord: com.android.internal.app.ProcessStats$ProcessState baseProcessTracker>;

        $r14 = r2.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $l9 = r2.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        virtualinvoke $r13.<com.android.internal.app.ProcessStats$ProcessState: void reportCachedKill(android.util.ArrayMap,long)>($r14, $l9);

     label5:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $l8 = r2.<com.android.server.am.ProcessRecord: long lastCachedPss>;

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l8);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("k from cached");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r2, $r12);

     label6:
        return r2;
    }

    public java.util.List getProcessesInErrorState()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z7;
        int i0, i1, i2, $i3, $i4, $i5, $i7;
        java.lang.Throwable r1, $r19, $r21;
        java.util.ArrayList r2, r4, $r6, $r7, $r20;
        com.android.server.am.ProcessRecord r3;
        android.app.ActivityManager$ProcessErrorStateInfo r5;
        android.app.IApplicationThread $r8;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.String $r11, $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 = 1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProcessesInErrorState");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", $i3);

        if $i4 != 0 goto label28;

     label01:
        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i5);

        entermonitor r0;

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label03:
        i2 = i1 - 1;

        r2 = null;

     label04:
        if i2 < 0 goto label23;

     label05:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.ProcessRecord) $r9;

     label06:
        if z0 != 0 goto label09;

     label07:
        $i7 = r3.<com.android.server.am.ProcessRecord: int userId>;

        if $i7 == i0 goto label09;

     label08:
        r4 = r2;

        goto label27;

     label09:
        $r8 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label30;

        $z3 = r3.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z3 != 0 goto label10;

        $z7 = r3.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z7 == 0 goto label30;

     label10:
        $z2 = r3.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z2 == 0 goto label17;

        r5 = r3.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport>;

     label11:
        if r5 == null goto label21;

        if r2 != null goto label26;

     label12:
        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>(1);

        r4 = $r20;

     label13:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

     label14:
        goto label27;

     label15:
        exitmonitor r0;

     label16:
        throw r1;

     label17:
        z1 = r3.<com.android.server.am.ProcessRecord: boolean notResponding>;

     label18:
        r5 = null;

        if z1 == 0 goto label11;

     label19:
        r5 = r3.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport>;

     label20:
        goto label11;

     label21:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing app error report, app = ");

        $r11 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" crashing = ");

        $z5 = r3.<com.android.server.am.ProcessRecord: boolean crashing>;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notResponding = ");

        $z4 = r3.<com.android.server.am.ProcessRecord: boolean notResponding>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r18);

     label22:
        goto label30;

     label23:
        exitmonitor r0;

     label24:
        return r2;

     label25:
        $r19 := @caughtexception;

        r1 = $r19;

        goto label15;

     label26:
        r4 = r2;

        goto label13;

     label27:
        i2 = i2 + -1;

        r2 = r4;

        goto label04;

     label28:
        z0 = 0;

        goto label01;

     label29:
        $r21 := @caughtexception;

        r1 = $r21;

        goto label15;

     label30:
        r4 = r2;

        goto label27;

        catch java.lang.Throwable from label02 to label03 with label29;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public java.lang.String getProviderMimeType(android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, i1, $i3, $i4;
        java.lang.String r2, r6, $r11;
        long l2;
        android.app.IActivityManager$ContentProviderHolder r3;
        java.lang.Throwable r4, $r13, r15;
        android.os.RemoteException r5, $r9;
        android.content.IContentProvider $r7;
        java.lang.StringBuilder $r10, $r12, r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getProviderMimeType");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i3, $i4, i0, 0, 1, "getProviderMimeType", null);

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r3 = null;

     label01:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i1);

     label02:
        if r3 == null goto label12;

     label03:
        $r7 = r3.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        r6 = interfaceinvoke $r7.<android.content.IContentProvider: java.lang.String getType(android.net.Uri)>(r1);

     label04:
        if r3 == null goto label05;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i1);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return r6;

     label06:
        $r9 := @caughtexception;

        r5 = $r9;

     label07:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content provider dead retrieving ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r15 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r11, r15);

     label08:
        if r3 == null goto label09;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i1);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return null;

     label10:
        $r13 := @caughtexception;

        r4 = $r13;

        if r3 == null goto label11;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i1);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r4;

     label12:
        if r3 == null goto label09;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i1);

        goto label09;

        catch android.os.RemoteException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch android.os.RemoteException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }

    public java.util.List getRecentTasks(int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.Throwable r1, $r30;
        boolean z0;
        android.content.pm.IPackageManager r2;
        java.util.ArrayList r3, $r10, $r11, $r12;
        com.android.server.am.TaskRecord r4;
        android.app.ActivityManager$RecentTaskInfo r5, $r13;
        android.content.Intent r6, $r15, $r17, $r20, $r21, $r25, $r27, $r28;
        java.util.List r7;
        android.content.pm.ActivityInfo r9;
        java.lang.Object $r14;
        android.content.ComponentName $r16, $r22, $r24;
        java.lang.CharSequence $r18;
        com.android.server.am.ActivityStack $r19;
        android.os.Bundle $r23;
        android.os.RemoteException $r29;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i8, $i9, i2, 0, 1, "getRecentTasks", null);

        entermonitor r0;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.GET_TASKS", "getRecentTasks()");

        $i10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.GET_DETAILED_TASKS");

        if $i10 != 0 goto label34;

     label02:
        z0 = 1;

     label03:
        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        i4 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

     label04:
        if i0 >= i4 goto label35;

        i5 = i0;

     label05:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(i5);

        r3 = $r11;

     label06:
        i6 = 0;

     label07:
        if i6 >= i4 goto label27;

        if i0 <= 0 goto label27;

     label08:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        $r14 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r4 = (com.android.server.am.TaskRecord) $r14;

        $i12 = r4.<com.android.server.am.TaskRecord: int userId>;

        if $i12 == i3 goto label10;

     label09:
        goto label33;

     label10:
        if i6 == 0 goto label12;

        $i16 = i1 & 1;

        if $i16 != 0 goto label12;

     label11:
        $r25 = r4.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r25 == null goto label12;

        $r28 = r4.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $i18 = virtualinvoke $r28.<android.content.Intent: int getFlags()>();

        $i17 = 8388608 & $i18;

        if $i17 != 0 goto label33;

     label12:
        $r13 = new android.app.ActivityManager$RecentTaskInfo;

        specialinvoke $r13.<android.app.ActivityManager$RecentTaskInfo: void <init>()>();

        r5 = $r13;

        $i11 = r4.<com.android.server.am.TaskRecord: int numActivities>;

        if $i11 <= 0 goto label36;

        i7 = r4.<com.android.server.am.TaskRecord: int taskId>;

     label13:
        r5.<android.app.ActivityManager$RecentTaskInfo: int id> = i7;

        $i13 = r4.<com.android.server.am.TaskRecord: int taskId>;

        r5.<android.app.ActivityManager$RecentTaskInfo: int persistentId> = $i13;

        $r17 = r4.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        if $r17 == null goto label23;

        r6 = r4.<com.android.server.am.TaskRecord: android.content.Intent intent>;

     label14:
        $r15 = new android.content.Intent;

        specialinvoke $r15.<android.content.Intent: void <init>(android.content.Intent)>(r6);

        r5.<android.app.ActivityManager$RecentTaskInfo: android.content.Intent baseIntent> = $r15;

     label15:
        if z0 != 0 goto label17;

     label16:
        $r27 = r5.<android.app.ActivityManager$RecentTaskInfo: android.content.Intent baseIntent>;

        $r23 = (android.os.Bundle) null;

        virtualinvoke $r27.<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>($r23);

     label17:
        $r16 = r4.<com.android.server.am.TaskRecord: android.content.ComponentName origActivity>;

        r5.<android.app.ActivityManager$RecentTaskInfo: android.content.ComponentName origActivity> = $r16;

        $r18 = r4.<com.android.server.am.TaskRecord: java.lang.CharSequence lastDescription>;

        r5.<android.app.ActivityManager$RecentTaskInfo: java.lang.CharSequence description> = $r18;

        $r19 = r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $i14 = $r19.<com.android.server.am.ActivityStack: int mStackId>;

        r5.<android.app.ActivityManager$RecentTaskInfo: int stackId> = $i14;

     label18:
        $i15 = i1 & 2;

        if $i15 == 0 goto label21;

     label19:
        $r22 = r5.<android.app.ActivityManager$RecentTaskInfo: android.content.ComponentName origActivity>;

        if $r22 == null goto label25;

        $r24 = r5.<android.app.ActivityManager$RecentTaskInfo: android.content.ComponentName origActivity>;

        r9 = interfaceinvoke r2.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>($r24, 0, i3);

     label20:
        if r9 == null goto label33;

     label21:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label22:
        i0 = i0 + -1;

        goto label33;

     label23:
        r6 = r4.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent>;

     label24:
        goto label14;

     label25:
        $r20 = r5.<android.app.ActivityManager$RecentTaskInfo: android.content.Intent baseIntent>;

        if $r20 == null goto label21;

        $r21 = r5.<android.app.ActivityManager$RecentTaskInfo: android.content.Intent baseIntent>;

        r7 = interfaceinvoke r2.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>($r21, null, 0, i3);

     label26:
        if r7 != null goto label21;

        goto label33;

     label27:
        exitmonitor r0;

     label28:
        return r3;

     label29:
        $r30 := @caughtexception;

        r1 = $r30;

     label30:
        exitmonitor r0;

     label31:
        throw r1;

     label32:
        $r29 := @caughtexception;

        goto label21;

     label33:
        i6 = i6 + 1;

        goto label07;

     label34:
        z0 = 0;

        goto label03;

     label35:
        i5 = i4;

        goto label05;

     label36:
        i7 = -1;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.lang.Throwable from label03 to label04 with label29;
        catch java.lang.Throwable from label05 to label06 with label29;
        catch java.lang.Throwable from label08 to label09 with label29;
        catch java.lang.Throwable from label11 to label12 with label29;
        catch java.lang.Throwable from label12 to label13 with label29;
        catch java.lang.Throwable from label13 to label14 with label29;
        catch java.lang.Throwable from label14 to label15 with label29;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch android.os.RemoteException from label19 to label20 with label32;
        catch java.lang.Throwable from label19 to label20 with label29;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch android.os.RemoteException from label25 to label26 with label32;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
    }

    final com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        int i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.android.server.am.ProcessRecord $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        i0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int getLRURecordIndexForAppLocked(android.app.IApplicationThread)>(r1);

        if i0 < 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (com.android.server.am.ProcessRecord) $r3;

        return $r4;
    }

    public int getRequestedOrientation(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r6;
        com.android.server.am.ActivityRecord r3;
        int i0;
        android.view.IApplicationToken$Stub $r4;
        com.android.server.wm.WindowManagerService $r5;
        android.view.IApplicationToken r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 != null goto label5;

     label3:
        exitmonitor r0;

     label4:
        return -1;

     label5:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r4 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        r7 = (android.view.IApplicationToken) $r4;

        i0 = virtualinvoke $r5.<com.android.server.wm.WindowManagerService: int getAppOrientation(android.view.IApplicationToken)>(r7);

        exitmonitor r0;

     label6:
        return i0;

     label7:
        $r6 := @caughtexception;

        r2 = $r6;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.util.List getRunningAppProcesses()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.Throwable r1, $r25, $r26;
        java.util.ArrayList r2, r4, $r7, $r8, $r19;
        com.android.server.am.ProcessRecord r3, $r20, $r22, $r24;
        android.app.ActivityManager$RunningAppProcessInfo r5, $r12;
        com.android.server.am.ActivityRecord r6;
        android.app.IApplicationThread $r9;
        java.lang.Object $r10, $r14, $r15, $r16, $r17, $r21, $r23;
        java.lang.String $r11;
        java.lang.String[] $r13;
        android.content.ComponentName $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningAppProcesses");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS_FULL", $i3);

        if $i4 != 0 goto label24;

        z0 = 1;

     label01:
        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i5);

        entermonitor r0;

     label02:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label03:
        i2 = i1 - 1;

        r2 = null;

     label04:
        if i2 < 0 goto label19;

     label05:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.ProcessRecord) $r10;

     label06:
        if z0 != 0 goto label09;

     label07:
        $i10 = r3.<com.android.server.am.ProcessRecord: int userId>;

        if $i10 == i0 goto label09;

     label08:
        r4 = r2;

        goto label23;

     label09:
        $r9 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 == null goto label22;

        $z2 = r3.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z2 != 0 goto label22;

        $z1 = r3.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z1 != 0 goto label22;

        $r12 = new android.app.ActivityManager$RunningAppProcessInfo;

        $r11 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $i6 = r3.<com.android.server.am.ProcessRecord: int pid>;

        $r13 = virtualinvoke r3.<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>();

        specialinvoke $r12.<android.app.ActivityManager$RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>($r11, $i6, $r13);

        r5 = $r12;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void fillInProcMemInfo(com.android.server.am.ProcessRecord,android.app.ActivityManager$RunningAppProcessInfo)>(r3, r5);

        $r14 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z3 = $r14 instanceof com.android.server.am.ProcessRecord;

        if $z3 == 0 goto label17;

        $r23 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $r24 = (com.android.server.am.ProcessRecord) $r23;

        $i8 = $r24.<com.android.server.am.ProcessRecord: int pid>;

        r5.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonPid> = $i8;

        $i9 = r3.<com.android.server.am.ProcessRecord: int adjSourceOom>;

        $i11 = staticinvoke <com.android.server.am.ActivityManagerService: int oomAdjToImportance(int,android.app.ActivityManager$RunningAppProcessInfo)>($i9, null);

        r5.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonImportance> = $i11;

     label10:
        $r15 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $z4 = $r15 instanceof android.content.ComponentName;

        if $z4 == 0 goto label11;

        $r17 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjTarget>;

        $r18 = (android.content.ComponentName) $r17;

        r5.<android.app.ActivityManager$RunningAppProcessInfo: android.content.ComponentName importanceReasonComponent> = $r18;

     label11:
        if r2 != null goto label21;

     label12:
        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r4 = $r19;

     label13:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

     label14:
        goto label23;

     label15:
        exitmonitor r0;

     label16:
        throw r1;

     label17:
        $r16 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        $z5 = $r16 instanceof com.android.server.am.ActivityRecord;

        if $z5 == 0 goto label10;

        $r21 = r3.<com.android.server.am.ProcessRecord: java.lang.Object adjSource>;

        r6 = (com.android.server.am.ActivityRecord) $r21;

        $r22 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r22 == null goto label10;

        $r20 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i7 = $r20.<com.android.server.am.ProcessRecord: int pid>;

        r5.<android.app.ActivityManager$RunningAppProcessInfo: int importanceReasonPid> = $i7;

     label18:
        goto label10;

     label19:
        exitmonitor r0;

     label20:
        return r2;

     label21:
        r4 = r2;

        goto label13;

     label22:
        r4 = r2;

     label23:
        i2 = i2 + -1;

        r2 = r4;

        goto label04;

     label24:
        z0 = 0;

        goto label01;

     label25:
        $r25 := @caughtexception;

        r1 = $r25;

        goto label15;

     label26:
        $r26 := @caughtexception;

        r1 = $r26;

        goto label15;

        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label05 to label06 with label26;
        catch java.lang.Throwable from label07 to label08 with label26;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label19 to label20 with label26;
    }

    public java.util.List getRunningExternalApplications()
    {
        com.android.server.am.ActivityManagerService r0;
        java.util.List r1;
        java.util.ArrayList r2, $r12;
        java.util.HashSet r3, $r13;
        java.util.Iterator r4, r6;
        android.content.pm.IPackageManager r5;
        java.lang.String r7, $r18;
        android.content.pm.ApplicationInfo r9;
        android.app.ActivityManager$RunningAppProcessInfo r10;
        java.lang.String[] r11, $r17;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        java.lang.Object $r14, $r15;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningExternalApplications");

        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>();

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r2 = $r12;

        if r1 == null goto label8;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i2 <= 0 goto label8;

        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        r3 = $r13;

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.app.ActivityManager$RunningAppProcessInfo) $r15;

        $r17 = r10.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String[] pkgList>;

        if $r17 == null goto label1;

        r11 = r10.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String[] pkgList>;

        i0 = lengthof r11;

        i1 = 0;

     label2:
        if i1 >= i0 goto label1;

        $r18 = r11[i1];

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r18);

        i1 = i1 + 1;

        goto label2;

     label3:
        r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r6 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r14;

     label5:
        $i3 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r9 = interfaceinvoke r5.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r7, 0, $i3);

        $i5 = r9.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = 262144 & $i5;

        if $i4 == 0 goto label4;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r9);

     label6:
        goto label4;

     label7:
        $r16 := @caughtexception;

        goto label4;

     label8:
        return r2;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.ComponentName r1;
        java.lang.Throwable r2, $r5;
        android.app.PendingIntent r3;
        com.android.server.am.ActiveServices $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getRunningServiceControlPanel");

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r3 = virtualinvoke $r4.<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)>(r1);

        exitmonitor r0;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int[] getRunningUserIds()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r11;
        int[] r2;
        java.lang.String r3;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.SecurityException $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: isUserRunning() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r12 = new java.lang.SecurityException;

        specialinvoke $r12.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r12;

     label1:
        entermonitor r0;

     label2:
        r2 = r0.<com.android.server.am.ActivityManagerService: int[] mStartedUserArray>;

        exitmonitor r0;

     label3:
        return r2;

     label4:
        $r11 := @caughtexception;

        r1 = $r11;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.util.List getServices(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        java.lang.Throwable r1, $r4;
        java.util.List r2;
        com.android.server.am.ActiveServices $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("getServices");

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r2 = virtualinvoke $r3.<com.android.server.am.ActiveServices: java.util.List getRunningServiceInfoLocked(int,int)>(i0, i1);

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.app.ActivityManager$StackBoxInfo getStackBoxInfo(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2;
        long l1;
        java.lang.Throwable r1, r4, $r10, $r11;
        java.util.ArrayList r2, r5;
        android.app.ActivityManager$StackBoxInfo r3, r7;
        java.util.Iterator r6;
        com.android.server.wm.WindowManagerService $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "getStackBoxInfo()");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r8 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r2 = virtualinvoke $r8.<com.android.server.wm.WindowManagerService: java.util.ArrayList getStackBoxInfos()>();

     label02:
        r3 = null;

     label03:
        entermonitor r0;

     label04:
        r5 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList getStacks()>();

        r6 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.app.ActivityManager$StackBoxInfo) $r9;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void addStackInfoToStackBoxInfo(android.app.ActivityManager$StackBoxInfo,java.util.List)>(r7, r5);

        $i2 = r7.<android.app.ActivityManager$StackBoxInfo: int stackBoxId>;

        if $i2 != i0 goto label05;

     label06:
        r3 = r7;

        goto label05;

     label07:
        exitmonitor r0;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r3;

     label09:
        $r11 := @caughtexception;

        r4 = $r11;

     label10:
        exitmonitor r0;

     label11:
        throw r4;

     label12:
        $r10 := @caughtexception;

        r1 = $r10;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public java.util.List getStackBoxes()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        java.lang.Throwable r1, r3, $r9, $r10;
        java.util.ArrayList r2, r4;
        java.util.Iterator r5;
        com.android.server.wm.WindowManagerService $r6;
        boolean $z0;
        android.app.ActivityManager$StackBoxInfo $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "getStackBoxes()");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r2 = virtualinvoke $r6.<com.android.server.wm.WindowManagerService: java.util.ArrayList getStackBoxInfos()>();

        entermonitor r0;

     label02:
        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList getStacks()>();

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.app.ActivityManager$StackBoxInfo) $r8;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void addStackInfoToStackBoxInfo(android.app.ActivityManager$StackBoxInfo,java.util.List)>($r7, r4);

     label04:
        goto label03;

     label05:
        $r9 := @caughtexception;

        r3 = $r9;

     label06:
        exitmonitor r0;

     label07:
        throw r3;

     label08:
        $r10 := @caughtexception;

        r1 = $r10;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

     label09:
        exitmonitor r0;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label05;
    }

    public int getTaskForActivity(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        boolean z0;
        java.lang.Throwable r2, $r3;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        i0 = staticinvoke <com.android.server.am.ActivityRecord: int getTaskForActivityLocked(android.os.IBinder,boolean)>(r1, z0);

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.Throwable r1, $r4;
        com.android.server.am.TaskRecord r2;
        android.app.ActivityManager$TaskThumbnails r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.READ_FRAME_BUFFER", "getTaskThumbnails()");

        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

     label2:
        if r2 == null goto label5;

     label3:
        r3 = virtualinvoke r2.<com.android.server.am.TaskRecord: android.app.ActivityManager$TaskThumbnails getTaskThumbnailsLocked()>();

        exitmonitor r0;

     label4:
        return r3;

     label5:
        exitmonitor r0;

     label6:
        return null;

     label7:
        $r4 := @caughtexception;

        r1 = $r4;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.graphics.Bitmap getTaskTopThumbnail(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.Throwable r1, $r4;
        com.android.server.am.TaskRecord r2;
        android.graphics.Bitmap r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.READ_FRAME_BUFFER", "getTaskTopThumbnail()");

        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

     label2:
        if r2 == null goto label5;

     label3:
        r3 = virtualinvoke r2.<com.android.server.am.TaskRecord: android.graphics.Bitmap getTaskTopThumbnailLocked()>();

        exitmonitor r0;

     label4:
        return r3;

     label5:
        exitmonitor r0;

     label6:
        return null;

     label7:
        $r4 := @caughtexception;

        r1 = $r4;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.util.List getTasks(int, int, android.app.IThumbnailReceiver)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4;
        android.app.IThumbnailReceiver r1;
        java.util.ArrayList r2, $r17, r31;
        com.android.server.am.PendingThumbnailsRecord r3, r32;
        java.lang.Throwable r4, $r25;
        com.android.server.am.ActivityRecord r5;
        java.lang.Exception r7, $r29;
        java.lang.String r8;
        com.android.server.am.ActivityStackSupervisor $r12;
        boolean $z0;
        java.util.HashSet $r13;
        com.android.server.am.ProcessRecord $r14;
        android.app.IApplicationThread $r15;
        android.view.IApplicationToken$Stub $r16, $r27;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r23, $r24, r33;
        android.os.RemoteException $r28, $r30;
        java.lang.SecurityException r34;
        android.os.IBinder r35, r36;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.app.IThumbnailReceiver;

        r31 = new java.util.ArrayList;

        specialinvoke r31.<java.util.ArrayList: void <init>()>();

        r2 = r31;

        r32 = new com.android.server.am.PendingThumbnailsRecord;

        specialinvoke r32.<com.android.server.am.PendingThumbnailsRecord: void <init>(android.app.IThumbnailReceiver)>(r1);

        r3 = r32;

        entermonitor r0;

     label01:
        i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.GET_TASKS");

     label02:
        if i2 == 0 goto label08;

        if r1 == null goto label04;

     label03:
        interfaceinvoke r1.<android.app.IThumbnailReceiver: void finished()>();

     label04:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: getTasks() from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.GET_TASKS");

        r8 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r8);

        r34 = new java.lang.SecurityException;

        specialinvoke r34.<java.lang.SecurityException: void <init>(java.lang.String)>(r8);

        throw r34;

     label05:
        $r25 := @caughtexception;

        r4 = $r25;

     label06:
        exitmonitor r0;

     label07:
        throw r4;

     label08:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r5 = virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord getTasksLocked(int,android.app.IThumbnailReceiver,com.android.server.am.PendingThumbnailsRecord,java.util.List)>(i0, r1, r3, r2);

        $r13 = r3.<com.android.server.am.PendingThumbnailsRecord: java.util.HashSet pendingRecords>;

        $z0 = virtualinvoke $r13.<java.util.HashSet: boolean isEmpty()>();

        if $z0 != 0 goto label09;

        $r17 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label09:
        exitmonitor r0;

     label10:
        if r5 == null goto label12;

     label11:
        $r14 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r14.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r16 = r5.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        r35 = (android.os.IBinder) $r16;

        interfaceinvoke $r15.<android.app.IApplicationThread: void requestThumbnail(android.os.IBinder)>(r35);

     label12:
        if r3 != null goto label14;

        if r1 == null goto label14;

     label13:
        interfaceinvoke r1.<android.app.IThumbnailReceiver: void finished()>();

     label14:
        return r2;

     label15:
        $r29 := @caughtexception;

        r7 = $r29;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown when requesting thumbnail", r7);

        $r27 = r5.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        r36 = (android.os.IBinder) $r27;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.ActivityRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>(null, r36, null, null, 1);

        goto label12;

     label16:
        $r30 := @caughtexception;

        goto label04;

     label17:
        $r28 := @caughtexception;

        return r2;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch android.os.RemoteException from label03 to label04 with label16;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Exception from label11 to label12 with label15;
        catch android.os.RemoteException from label13 to label14 with label17;
    }

    public int getUidForIntentSender(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        int i0;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r3;
        java.lang.ClassCastException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 == 0 goto label4;

     label1:
        $r3 = (com.android.server.am.PendingIntentRecord) r1;

        i0 = $r3.<com.android.server.am.PendingIntentRecord: int uid>;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

     label4:
        return -1;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    com.android.server.pm.UserManagerService getUserManagerLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.pm.UserManagerService $r1, $r2, $r5;
        android.os.IBinder $r3;
        android.os.IUserManager $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r4 = staticinvoke <android.os.IUserManager$Stub: android.os.IUserManager asInterface(android.os.IBinder)>($r3);

        $r5 = (com.android.server.pm.UserManagerService) $r4;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager> = $r5;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService mUserManager>;

        return $r2;
    }

    int[] getUsersLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.pm.UserManagerService r1;
        int[] $r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.server.pm.UserManagerService: int[] getUserIds()>();

        return $r3;

     label1:
        $r2 = newarray (int)[1];

        $r2[0] = 0;

        return $r2;
    }

    public void goingToSleep()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r8;
        android.os.Message r2;
        int $i0;
        boolean $z0;
        com.android.server.am.ActivityStackSupervisor $r3;
        android.os.Handler $r4, $r5, $r6;
        java.lang.SecurityException $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DEVICE_POWER");

        if $i0 == 0 goto label1;

        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.DEVICE_POWER");

        throw $r7;

     label1:
        entermonitor r0;

     label2:
        r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep> = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateEventDispatchingLocked()>();

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z0 != 0 goto label3;

        r0.<com.android.server.am.ActivityManagerService: boolean mSleeping> = 1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void goingToSleepLocked()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void checkExcessivePowerUsageLocked(boolean)>(0);

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>(27);

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int)>(27);

        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 900000L);

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        r1 = $r8;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void grantUriPermission(android.app.IApplicationThread, java.lang.String, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, $r13;
        android.net.Uri r3;
        int i0, $i1;
        java.lang.Throwable r4, $r15;
        com.android.server.am.ProcessRecord r5;
        java.lang.IllegalArgumentException $r6, $r7;
        java.lang.SecurityException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.Uri;

        i0 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("grantUriPermission");

        entermonitor r0;

     label01:
        r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

     label02:
        if r5 != null goto label07;

     label03:
        $r8 = new java.lang.SecurityException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when granting permission to uri ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label04:
        $r15 := @caughtexception;

        r4 = $r15;

     label05:
        exitmonitor r0;

     label06:
        throw r4;

     label07:
        if r2 != null goto label09;

     label08:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null target");

        throw $r7;

     label09:
        if r3 != null goto label11;

     label10:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null uri");

        throw $r6;

     label11:
        staticinvoke <com.android.internal.util.Preconditions: void checkFlagsArgument(int,int)>(i0, 3);

        $i1 = r5.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)>($i1, r2, r3, i0, null);

        exitmonitor r0;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
    }

    void grantUriPermissionFromIntentLocked(int, java.lang.String, android.content.Intent, com.android.server.am.UriPermissionOwner)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        java.lang.String r1;
        android.content.Intent r2;
        com.android.server.am.UriPermissionOwner r3;
        com.android.server.am.ActivityManagerService$NeededUriGrants r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: com.android.server.am.UriPermissionOwner;

        if r2 == null goto label2;

        i1 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

     label1:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants)>(i0, r1, r2, i1, null);

        if r4 != null goto label3;

        return;

     label2:
        i1 = 0;

        goto label1;

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants,com.android.server.am.UriPermissionOwner)>(r4, r3);

        return;
    }

    public void grantUriPermissionFromOwner(android.os.IBinder, int, java.lang.String, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r2, $r12;
        android.net.Uri r3;
        java.lang.Throwable r4, $r14;
        com.android.server.am.UriPermissionOwner r5;
        java.lang.IllegalArgumentException $r6, $r7, $r8;
        java.lang.SecurityException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.net.Uri;

        i1 := @parameter4: int;

        entermonitor r0;

     label01:
        r5 = staticinvoke <com.android.server.am.UriPermissionOwner: com.android.server.am.UriPermissionOwner fromExternalToken(android.os.IBinder)>(r1);

     label02:
        if r5 != null goto label07;

     label03:
        $r8 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown owner: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label04:
        $r14 := @caughtexception;

        r4 = $r14;

     label05:
        exitmonitor r0;

     label06:
        throw r4;

     label07:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == $i2 goto label08;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i4 = staticinvoke <android.os.Process: int myUid()>();

        if $i3 == $i4 goto label08;

        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("nice try");

        throw $r9;

     label08:
        if r2 != null goto label10;

     label09:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null target");

        throw $r7;

     label10:
        if r3 != null goto label12;

     label11:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null uri");

        throw $r6;

     label12:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)>(i0, r2, r3, i1, r5);

        exitmonitor r0;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Throwable from label12 to label13 with label04;
    }

    void grantUriPermissionLocked(int, java.lang.String, android.net.Uri, int, com.android.server.am.UriPermissionOwner)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.net.Uri r2;
        com.android.server.am.UriPermissionOwner r3;
        java.lang.NullPointerException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        r3 := @parameter4: com.android.server.am.UriPermissionOwner;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("targetPkg");

        throw $r4;

     label1:
        i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,int)>(i0, r1, r2, i1, -1);

        if i2 >= 0 goto label2;

        return;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)>(i2, r1, r2, i1, r3);

        return;
    }

    void grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants, com.android.server.am.UriPermissionOwner)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$NeededUriGrants r1;
        com.android.server.am.UriPermissionOwner r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r3;
        java.lang.Object $r4;
        android.net.Uri $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService$NeededUriGrants;

        r2 := @parameter1: com.android.server.am.UriPermissionOwner;

        if r1 == null goto label2;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: int size()>();

        if i0 >= $i1 goto label2;

        $i2 = r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: int targetUid>;

        $r3 = r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: java.lang.String targetPkg>;

        $r4 = virtualinvoke r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: java.lang.Object get(int)>(i0);

        $r5 = (android.net.Uri) $r4;

        $i3 = r1.<com.android.server.am.ActivityManagerService$NeededUriGrants: int flags>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)>($i2, $r3, $r5, $i3, r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    void grantUriPermissionUncheckedLocked(int, java.lang.String, android.net.Uri, int, com.android.server.am.UriPermissionOwner)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r1, $r5, $r6, $r11, $r12;
        android.net.Uri r2;
        com.android.server.am.UriPermissionOwner r3;
        boolean z0;
        android.content.pm.ProviderInfo r4;
        com.android.server.am.UriPermission $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.net.Uri;

        i1 := @parameter3: int;

        r3 := @parameter4: com.android.server.am.UriPermissionOwner;

        $i3 = i1 & 64;

        if $i3 == 0 goto label2;

        z0 = 1;

     label1:
        i2 = i1 & 3;

        if i2 != 0 goto label3;

        return;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r5 = virtualinvoke r2.<android.net.Uri: java.lang.String getAuthority()>();

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>($r5, $i4);

        if r4 != null goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for grant: ");

        $r11 = virtualinvoke r2.<android.net.Uri: java.lang.String toSafeString()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        return;

     label4:
        $r6 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r7 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findOrCreateUriPermissionLocked(java.lang.String,java.lang.String,int,android.net.Uri)>($r6, r1, i0, r2);

        virtualinvoke $r7.<com.android.server.am.UriPermission: void grantModes(int,boolean,com.android.server.am.UriPermissionOwner)>(i2, z0, r3);

        return;
    }

    public void handleApplicationCrash(android.os.IBinder, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.app.ApplicationErrorReport$CrashInfo r2;
        com.android.server.am.ProcessRecord r3;
        java.lang.String r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.app.ApplicationErrorReport$CrashInfo;

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r1, "Crash");

        if r1 != null goto label2;

        r4 = "system_server";

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void handleApplicationCrashInner(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>("crash", r3, r4, r2);

        return;

     label2:
        if r3 != null goto label3;

        r4 = "unknown";

        goto label1;

     label3:
        r4 = r3.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        goto label1;
    }

    void handleApplicationCrashInner(java.lang.String, com.android.server.am.ProcessRecord, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, $r9, $r11, $r12;
        com.android.server.am.ProcessRecord r2;
        android.app.ApplicationErrorReport$CrashInfo r4;
        java.lang.Object[] r5;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r6, $r7, $r10, $r13;
        android.content.pm.ApplicationInfo $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.ApplicationErrorReport$CrashInfo;

        r5 = newarray (java.lang.Object)[8];

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r5[0] = $r6;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r5[1] = $r7;

        r5[2] = r3;

        if r2 != null goto label2;

        i0 = -1;

     label1:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r5[3] = $r10;

        $r9 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionClassName>;

        r5[4] = $r9;

        $r12 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionMessage>;

        r5[5] = $r12;

        $r11 = r4.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String throwFileName>;

        r5[6] = $r11;

        $i4 = r4.<android.app.ApplicationErrorReport$CrashInfo: int throwLineNumber>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r5[7] = $r13;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30039, r5);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>(r1, r2, r3, null, null, null, null, null, r4);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>(r2, r4);

        return;

     label2:
        $r8 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i0 = $r8.<android.content.pm.ApplicationInfo: int flags>;

        goto label1;
    }

    public void handleApplicationStrictModeViolation(android.os.IBinder, int, android.os.StrictMode$ViolationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0, i2, $i3, $i4, $i5, $i7;
        android.os.StrictMode$ViolationInfo r2;
        com.android.server.am.ProcessRecord r3;
        com.android.server.am.AppErrorResult r4, $r11;
        java.lang.Throwable r5, r9, $r26, $r27;
        long l1;
        android.os.Message r6;
        java.util.HashMap r7, $r12;
        boolean z0, $z2;
        java.lang.Integer r8, $r17;
        java.util.HashSet r10, $r23, $r24, $r25, $r28;
        android.os.Handler $r18;
        java.lang.StringBuilder $r19, $r20, $r21;
        java.lang.String $r22;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.StrictMode$ViolationInfo;

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r1, "StrictMode");

        if r3 != null goto label02;

     label01:
        return;

     label02:
        $i3 = i0 & 128;

        if $i3 == 0 goto label07;

        $i5 = virtualinvoke r2.<android.os.StrictMode$ViolationInfo: int hashCode()>();

        r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        z0 = 1;

        r10 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        entermonitor r10;

     label03:
        $r24 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        $z2 = virtualinvoke $r24.<java.util.HashSet: boolean contains(java.lang.Object)>(r8);

        if $z2 == 0 goto label10;

     label04:
        z0 = 0;

     label05:
        exitmonitor r10;

     label06:
        if z0 == 0 goto label07;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void logStrictModeViolationToDropBox(com.android.server.am.ProcessRecord,android.os.StrictMode$ViolationInfo)>(r3, r2);

     label07:
        $i4 = i0 & 32;

        if $i4 == 0 goto label01;

        $r11 = new com.android.server.am.AppErrorResult;

        specialinvoke $r11.<com.android.server.am.AppErrorResult: void <init>()>();

        r4 = $r11;

        entermonitor r0;

     label08:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r6 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r6.<android.os.Message: int what> = 26;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r7 = $r12;

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("result", r4);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("app", r3);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("violationMask", $r17);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("info", r2);

        r6.<android.os.Message: java.lang.Object obj> = r7;

        $r18 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r18.<android.os.Handler: boolean sendMessage(android.os.Message)>(r6);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label09:
        i2 = virtualinvoke r4.<com.android.server.am.AppErrorResult: int get()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleApplicationStrictModeViolation; res=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r22);

        return;

     label10:
        $r23 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        $i7 = virtualinvoke $r23.<java.util.HashSet: int size()>();

        if $i7 < 5000 goto label11;

        $r28 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        virtualinvoke $r28.<java.util.HashSet: void clear()>();

     label11:
        $r25 = r0.<com.android.server.am.ActivityManagerService: java.util.HashSet mAlreadyLoggedViolatedStacks>;

        virtualinvoke $r25.<java.util.HashSet: boolean add(java.lang.Object)>(r8);

     label12:
        goto label05;

     label13:
        $r27 := @caughtexception;

        r9 = $r27;

     label14:
        exitmonitor r10;

     label15:
        throw r9;

     label16:
        $r26 := @caughtexception;

        r5 = $r26;

     label17:
        exitmonitor r0;

     label18:
        throw r5;

        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public boolean handleApplicationWtf(android.os.IBinder, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2, r5, $r10;
        android.app.ApplicationErrorReport$CrashInfo r3;
        com.android.server.am.ProcessRecord r4;
        java.lang.Object[] r6;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7;
        java.lang.Integer $r7, $r8, $r11;
        android.content.pm.ApplicationInfo $r9;
        android.content.Context $r12;
        android.content.ContentResolver $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.ApplicationErrorReport$CrashInfo;

        r4 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findAppProcess(android.os.IBinder,java.lang.String)>(r1, "WTF");

        if r1 != null goto label3;

        r5 = "system_server";

     label1:
        r6 = newarray (java.lang.Object)[6];

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r6[0] = $r7;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r6[1] = $r8;

        r6[2] = r5;

        if r4 != null goto label5;

        i0 = -1;

     label2:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r6[3] = $r11;

        r6[4] = r2;

        $r10 = r3.<android.app.ApplicationErrorReport$CrashInfo: java.lang.String exceptionMessage>;

        r6[5] = $r10;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30040, r6);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>("wtf", r4, r5, null, null, r2, null, null, r3);

        if r4 == null goto label6;

        $i4 = r4.<com.android.server.am.ProcessRecord: int pid>;

        $i6 = staticinvoke <android.os.Process: int myPid()>();

        if $i4 == $i6 goto label6;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i7 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r13, "wtf_is_fatal", 0);

        if $i7 == 0 goto label6;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>(r4, r3);

        return 1;

     label3:
        if r4 != null goto label4;

        r5 = "unknown";

        goto label1;

     label4:
        r5 = r4.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        goto label1;

     label5:
        $r9 = r4.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i0 = $r9.<android.content.pm.ApplicationInfo: int flags>;

        goto label2;

     label6:
        return 0;
    }

    public int handleIncomingUser(int, int, int, boolean, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, $i4, $i5, $i7;
        boolean z0, z1;
        java.lang.String r1, r2, r4, $r9;
        java.lang.StringBuilder r3, $r5, $r7, $r8, $r11;
        java.lang.IllegalArgumentException $r6;
        java.lang.SecurityException $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        if i3 == i2 goto label8;

        if i1 == 0 goto label2;

        if i1 == 1000 goto label2;

        if z1 != 0 goto label1;

        $i7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS", i0, i1, -1, 1);

        if $i7 == 0 goto label2;

     label1:
        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>("android.permission.INTERACT_ACROSS_USERS_FULL", i0, i1, -1, 1);

        if $i4 == 0 goto label2;

        if i2 != -3 goto label5;

        i2 = i3;

     label2:
        if i2 == -2 goto label3;

        if i2 != -3 goto label4;

     label3:
        i2 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

     label4:
        if z0 != 0 goto label8;

        if i2 >= 0 goto label8;

        $r6 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call does not support special user #");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label5:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>(128);

        r3 = $r11;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        if r2 == null goto label6;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label6:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" asks to run as user ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is calling from user ");

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; this requires ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if z1 != 0 goto label7;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

     label7:
        r4 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r4);

        $r19 = new java.lang.SecurityException;

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>(r4);

        throw $r19;

     label8:
        return i2;
    }

    public void hang(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        boolean z0, z1;
        com.android.server.am.ActivityManagerService$11 r2, r20;
        java.lang.Throwable r4, r5, $r15, $r17;
        int $i0, $i1;
        com.android.server.Watchdog $r8, $r13;
        java.lang.StringBuilder $r10, $r11, r21;
        java.lang.String $r12;
        java.lang.InterruptedException $r16;
        android.os.RemoteException $r18;
        java.lang.SecurityException r19;
        android.os.IBinder$DeathRecipient r22;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 == 0 goto label01;

        r19 = new java.lang.SecurityException;

        specialinvoke r19.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw r19;

     label01:
        r20 = new com.android.server.am.ActivityManagerService$11;

        specialinvoke r20.<com.android.server.am.ActivityManagerService$11: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r2 = r20;

     label02:
        r22 = (android.os.IBinder$DeathRecipient) r2;

        interfaceinvoke r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r22, 0);

     label03:
        entermonitor r0;

     label04:
        $r8 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r8.<com.android.server.Watchdog: void setAllowRestart(boolean)>(z0);

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hanging system process at request of pid ");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        entermonitor r2;

     label05:
        z1 = interfaceinvoke r1.<android.os.IBinder: boolean isBinderAlive()>();

     label06:
        if z1 == 0 goto label11;

     label07:
        virtualinvoke r2.<java.lang.Object: void wait()>();

     label08:
        goto label05;

     label09:
        $r16 := @caughtexception;

        goto label05;

     label10:
        $r18 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "hang: given caller IBinder is already dead.");

        return;

     label11:
        exitmonitor r2;

     label12:
        $r13 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r13.<com.android.server.Watchdog: void setAllowRestart(boolean)>(1);

        exitmonitor r0;

     label13:
        return;

     label14:
        $r15 := @caughtexception;

        r4 = $r15;

     label15:
        exitmonitor r0;

     label16:
        throw r4;

     label17:
        $r17 := @caughtexception;

        r5 = $r17;

     label18:
        exitmonitor r2;

     label19:
        throw r5;

        catch android.os.RemoteException from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord, com.android.server.am.ContentProviderRecord, android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ContentProviderRecord r2, $r11;
        android.os.IBinder r3;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.server.am.ContentProviderConnection r4, r5, $r7;
        java.util.ArrayList $r6, $r8, $r9, $r10;
        java.lang.Object $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ContentProviderRecord;

        r3 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        if r1 == null goto label7;

        i0 = 0;

     label1:
        $r6 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label4;

        $r10 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ContentProviderConnection) $r12;

        $r11 = r5.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        if $r11 != r2 goto label3;

        if z0 == 0 goto label2;

        $i7 = r5.<com.android.server.am.ContentProviderConnection: int stableCount>;

        $i6 = 1 + $i7;

        r5.<com.android.server.am.ContentProviderConnection: int stableCount> = $i6;

        $i9 = r5.<com.android.server.am.ContentProviderConnection: int numStableIncs>;

        $i8 = 1 + $i9;

        r5.<com.android.server.am.ContentProviderConnection: int numStableIncs> = $i8;

        return r5;

     label2:
        $i3 = r5.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        $i2 = 1 + $i3;

        r5.<com.android.server.am.ContentProviderConnection: int unstableCount> = $i2;

        $i5 = r5.<com.android.server.am.ContentProviderConnection: int numUnstableIncs>;

        $i4 = 1 + $i5;

        r5.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = $i4;

        return r5;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r7 = new com.android.server.am.ContentProviderConnection;

        specialinvoke $r7.<com.android.server.am.ContentProviderConnection: void <init>(com.android.server.am.ContentProviderRecord,com.android.server.am.ProcessRecord)>(r2, r1);

        r4 = $r7;

        if z0 == 0 goto label6;

        r4.<com.android.server.am.ContentProviderConnection: int stableCount> = 1;

        r4.<com.android.server.am.ContentProviderConnection: int numStableIncs> = 1;

     label5:
        $r8 = r2.<com.android.server.am.ContentProviderRecord: java.util.ArrayList connections>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $r9 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        return r4;

     label6:
        r4.<com.android.server.am.ContentProviderConnection: int unstableCount> = 1;

        r4.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = 1;

        goto label5;

     label7:
        virtualinvoke r2.<com.android.server.am.ContentProviderRecord: void addExternalProcessHandleLocked(android.os.IBinder)>(r3);

        return null;
    }

    public long inputDispatchingTimedOut(int, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2;
        boolean z0, $z1;
        java.lang.String r1;
        java.lang.Throwable r2, r4, $r9, $r10;
        android.util.SparseArray r3, $r6;
        com.android.server.am.ProcessRecord r5;
        long l1;
        java.lang.Object $r7;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FILTER_EVENTS");

        if $i2 == 0 goto label01;

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.FILTER_EVENTS");

        throw $r8;

     label01:
        entermonitor r0;

     label02:
        r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r3;

     label03:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ProcessRecord) $r7;

        exitmonitor r3;

     label04:
        l1 = staticinvoke <com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)>(r5);

        exitmonitor r0;

     label05:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r5, null, null, z0, r1);

        if $z1 != 0 goto label06;

        l1 = -1L;

     label06:
        return l1;

     label07:
        $r10 := @caughtexception;

        r4 = $r10;

     label08:
        exitmonitor r3;

     label09:
        throw r4;

     label10:
        $r9 := @caughtexception;

        r2 = $r9;

     label11:
        exitmonitor r0;

     label12:
        throw r2;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord, com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.ActivityRecord r2, r3;
        boolean z0, $z1, $z2;
        java.lang.String r4, r5;
        java.lang.Throwable r6, $r17;
        android.os.Bundle r7, $r15;
        int $i0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        android.content.ComponentName $r12;
        android.os.Handler $r13;
        com.android.server.am.ActivityManagerService$10 $r14;
        java.lang.SecurityException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: com.android.server.am.ActivityRecord;

        z0 := @parameter3: boolean;

        r4 := @parameter4: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.FILTER_EVENTS");

        if $i0 == 0 goto label01;

        $r16 = new java.lang.SecurityException;

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.FILTER_EVENTS");

        throw $r16;

     label01:
        if r4 != null goto label05;

        r5 = "Input dispatching timed out";

     label02:
        if r1 == null goto label15;

        entermonitor r0;

     label03:
        $z2 = r1.<com.android.server.am.ProcessRecord: boolean debugging>;

        if $z2 == 0 goto label06;

        exitmonitor r0;

     label04:
        return 0;

     label05:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input dispatching timed out (");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label06:
        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mDidDexOpt>;

        if $z1 == 0 goto label11;

        r0.<com.android.server.am.ActivityManagerService: boolean mDidDexOpt> = 0;

        exitmonitor r0;

     label07:
        return 0;

     label08:
        $r17 := @caughtexception;

        r6 = $r17;

     label09:
        exitmonitor r0;

     label10:
        throw r6;

     label11:
        $r12 = r1.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r12 == null goto label13;

        $r15 = new android.os.Bundle;

        specialinvoke $r15.<android.os.Bundle: void <init>()>();

        r7 = $r15;

        virtualinvoke r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("shortMsg", "keyDispatchingTimedOut");

        virtualinvoke r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("longMsg", r5);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>(r1, 0, r7);

        exitmonitor r0;

     label12:
        return 1;

     label13:
        exitmonitor r0;

     label14:
        $r13 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r14 = new com.android.server.am.ActivityManagerService$10;

        specialinvoke $r14.<com.android.server.am.ActivityManagerService$10: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r0, r1, r2, r3, z0, r5);

        virtualinvoke $r13.<android.os.Handler: boolean post(java.lang.Runnable)>($r14);

     label15:
        return 1;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
    }

    boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 8 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isImmersive(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r5;
        com.android.server.am.ActivityRecord r3;
        boolean z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 != null goto label7;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        exitmonitor r0;

     label6:
        throw r2;

     label7:
        z0 = r3.<com.android.server.am.ActivityRecord: boolean immersive>;

        exitmonitor r0;

     label8:
        return z0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
    }

    public boolean isIntentSenderAnActivity(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        int i0;
        boolean $z0;
        com.android.server.am.PendingIntentRecord $r3;
        com.android.server.am.PendingIntentRecord$Key $r4;
        java.lang.ClassCastException $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = (com.android.server.am.PendingIntentRecord) r1;

        $r4 = $r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        i0 = $r4.<com.android.server.am.PendingIntentRecord$Key: int type>;

     label3:
        if i0 != 2 goto label1;

        return 1;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label2 to label3 with label4;
    }

    public boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.server.am.PendingIntentRecord r3;
        int i0, $i1;
        android.content.Intent r4;
        android.content.ComponentName r5;
        boolean $z0;
        com.android.server.am.PendingIntentRecord$Key $r6, $r8, $r10;
        android.content.Intent[] $r7, $r9, $r11;
        java.lang.String $r12;
        java.lang.ClassCastException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r3 = (com.android.server.am.PendingIntentRecord) r1;

        $r6 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r7 = $r6.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        if $r7 == null goto label1;

     label3:
        i0 = 0;

     label4:
        $r8 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r9 = $r8.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        $i1 = lengthof $r9;

        if i0 >= $i1 goto label7;

        $r10 = r3.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r11 = $r10.<com.android.server.am.PendingIntentRecord$Key: android.content.Intent[] allIntents>;

        r4 = $r11[i0];

        $r12 = virtualinvoke r4.<android.content.Intent: java.lang.String getPackage()>();

        if $r12 == null goto label6;

        r5 = virtualinvoke r4.<android.content.Intent: android.content.ComponentName getComponent()>();

     label5:
        if r5 != null goto label1;

     label6:
        i0 = i0 + 1;

        goto label4;

     label7:
        return 1;

     label8:
        $r13 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label2 to label3 with label8;
        catch java.lang.ClassCastException from label4 to label5 with label8;
    }

    boolean isNextTransitionForward()
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        i0 = virtualinvoke $r1.<com.android.server.wm.WindowManagerService: int getPendingAppTransition()>();

        if i0 == 4102 goto label1;

        if i0 == 4104 goto label1;

        if i0 != 4106 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isPendingBroadcastProcessLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        com.android.server.am.BroadcastQueue $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mFgBroadcastQueue>;

        $z0 = virtualinvoke $r1.<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue mBgBroadcastQueue>;

        $z1 = virtualinvoke $r2.<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isSingleton(java.lang.String, android.content.pm.ApplicationInfo, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, r5, $r6, $r7, $r10, $r11;
        android.content.pm.ApplicationInfo r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, z1;
        android.content.ComponentName r4, $r8;
        java.lang.StringBuilder $r9, $r12, $r13, $r14, $r15;
        java.lang.SecurityException $r16;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $i2 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $i3 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i2);

        if $i3 < 10000 goto label3;

        i1 = 1073741824 & i0;

        z1 = 0;

        if i1 == 0 goto label2;

        $i5 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $i7 = staticinvoke <android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>("android.permission.INTERACT_ACROSS_USERS", $i5);

        if $i7 == 0 goto label1;

        $r8 = new android.content.ComponentName;

        $r10 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        specialinvoke $r8.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, r3);

        r4 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: Component ");

        $r11 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requests FLAG_SINGLE_USER, but app does not hold ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r5);

        $r16 = new java.lang.SecurityException;

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>(r5);

        throw $r16;

     label1:
        z1 = 1;

     label2:
        return z1;

     label3:
        $r6 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        if r1 != $r6 goto label5;

        $i4 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = 8 & $i4;

        if $i6 == 0 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        $r7 = "system";

        z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        z1 = 0;

        if z0 == 0 goto label2;

        return 1;
    }

    public boolean isSleepingOrShuttingDown()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown>;

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isTopActivityImmersive()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r4;
        com.android.server.am.ActivityRecord r2;
        boolean z0;
        com.android.server.am.ActivityStack $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivity");

        entermonitor r0;

     label1:
        $r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        r2 = virtualinvoke $r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label2:
        if r2 == null goto label9;

     label3:
        z0 = r2.<com.android.server.am.ActivityRecord: boolean immersive>;

     label4:
        exitmonitor r0;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

        r1 = $r4;

     label7:
        exitmonitor r0;

     label8:
        throw r1;

     label9:
        z0 = 0;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isUserAMonkey()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r3;
        boolean z0, $z1;
        android.app.IActivityController $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey>;

        if $z1 != 0 goto label8;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r2 == null goto label9;

     label2:
        goto label8;

     label3:
        exitmonitor r0;

     label4:
        return z0;

     label5:
        $r3 := @caughtexception;

        r1 = $r3;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

     label8:
        z0 = 1;

        goto label3;

     label9:
        z0 = 0;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean isUserRunning(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3;
        boolean z0, z1;
        java.lang.Throwable r1, $r11;
        java.lang.String r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.SecurityException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        if $i1 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: isUserRunning() from pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS");

        r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r2);

        $r10 = new java.lang.SecurityException;

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>(r2);

        throw $r10;

     label1:
        entermonitor r0;

     label2:
        z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isUserRunningLocked(int,boolean)>(i0, z0);

        exitmonitor r0;

     label3:
        return z1;

     label4:
        $r11 := @caughtexception;

        r1 = $r11;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    boolean isUserRunningLocked(int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2;
        boolean z0, z1;
        com.android.server.am.UserStartedState r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 = 1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.am.UserStartedState) $r3;

        if r1 != null goto label2;

        z1 = 0;

     label1:
        return z1;

     label2:
        if z0 != 0 goto label1;

        $i1 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i1 == 2 goto label3;

        $i2 = r1.<com.android.server.am.UserStartedState: int mState>;

        if $i2 != 3 goto label1;

     label3:
        return 0;
    }

    public void killAllBackgroundProcesses()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0;
        java.lang.Throwable r1, r3, $r24, $r26;
        java.util.ArrayList r2, $r8;
        int i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10;
        android.util.SparseArray r4;
        com.android.server.am.ProcessRecord r5, $r12;
        java.lang.String r6;
        java.lang.SecurityException r7, $r25;
        android.util.ArrayMap $r9, $r15;
        com.android.internal.app.ProcessMap $r10, $r14;
        java.lang.Object $r11, $r13, $r16;
        boolean $z1, $z2;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21, $r22, $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i7 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        if $i7 == 0 goto label01;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: killAllBackgroundProcesses() from pid=");

        $i10 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r6);

        $r25 = new java.lang.SecurityException;

        specialinvoke $r25.<java.lang.SecurityException: void <init>(java.lang.String)>(r6);

        r7 = $r25;

        throw r7;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        entermonitor r0;

     label03:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r9 = virtualinvoke $r10.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i1 = virtualinvoke $r9.<android.util.ArrayMap: int size()>();

     label04:
        i2 = 0;

     label05:
        if i2 >= i1 goto label19;

     label06:
        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r15 = virtualinvoke $r14.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r13 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r4 = (android.util.SparseArray) $r13;

        i3 = virtualinvoke r4.<android.util.SparseArray: int size()>();

     label07:
        i4 = 0;

     label08:
        if i4 >= i3 goto label27;

     label09:
        $r16 = virtualinvoke r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r5 = (com.android.server.am.ProcessRecord) $r16;

        $z2 = r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z2 == 0 goto label11;

     label10:
        goto label26;

     label11:
        $z1 = r5.<com.android.server.am.ProcessRecord: boolean removed>;

        if $z1 == 0 goto label17;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label12:
        goto label26;

     label13:
        $r24 := @caughtexception;

        r3 = $r24;

     label14:
        exitmonitor r0;

     label15:
        throw r3;

     label16:
        $r26 := @caughtexception;

        r1 = $r26;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

     label17:
        $i8 = r5.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i8 < 9 goto label26;

        r5.<com.android.server.am.ProcessRecord: boolean removed> = 1;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label18:
        goto label26;

     label19:
        i5 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label20:
        i6 = 0;

     label21:
        if i6 >= i5 goto label24;

     label22:
        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r12 = (com.android.server.am.ProcessRecord) $r11;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>($r12, 0, 1, "kill all background");

     label23:
        i6 = i6 + 1;

        goto label21;

     label24:
        r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel> = 1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)>(null);

        exitmonitor r0;

     label25:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label26:
        i4 = i4 + 1;

        goto label08;

     label27:
        i2 = i2 + 1;

        goto label05;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label13;
        catch java.lang.Throwable from label19 to label20 with label13;
        catch java.lang.Throwable from label22 to label23 with label13;
        catch java.lang.Throwable from label24 to label25 with label13;
    }

    void killAppAtUsersRequest(com.android.server.am.ProcessRecord, android.app.Dialog)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.app.Dialog r2, $r4, $r5;
        java.lang.Throwable r3, $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.app.Dialog;

        entermonitor r0;

     label1:
        r1.<com.android.server.am.ProcessRecord: boolean crashing> = 0;

        r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo crashingReport> = null;

        r1.<com.android.server.am.ProcessRecord: boolean notResponding> = 0;

        r1.<com.android.server.am.ProcessRecord: android.app.ActivityManager$ProcessErrorStateInfo notRespondingReport> = null;

        $r4 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog>;

        if $r4 != r2 goto label2;

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog anrDialog> = null;

     label2:
        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog>;

        if $r5 != r2 goto label3;

        r1.<com.android.server.am.ProcessRecord: android.app.Dialog waitDialog> = null;

     label3:
        $i0 = r1.<com.android.server.am.ProcessRecord: int pid>;

        if $i0 <= 0 goto label4;

        $i2 = r1.<com.android.server.am.ProcessRecord: int pid>;

        $i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i2 == $i1 goto label4;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>(r1, null, null, null);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r1, "user request after error");

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

     label7:
        exitmonitor r0;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void killApplicationProcess(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r11, $r17;
        int i0, i1;
        java.lang.Throwable r2, $r19;
        com.android.server.am.ProcessRecord r3;
        android.app.IApplicationThread r4, $r18;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16;
        android.os.RemoteException $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label01;

        return;

     label01:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 != 1000 goto label14;

        entermonitor r0;

     label02:
        r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r1, i0, 1);

     label03:
        if r3 == null goto label12;

     label04:
        r4 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label05:
        if r4 == null goto label12;

     label06:
        $r18 = r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r18.<android.app.IApplicationThread: void scheduleSuicide()>();

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        $r19 := @caughtexception;

        r2 = $r19;

     label10:
        exitmonitor r0;

     label11:
        throw r2;

     label12:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process/uid not found attempting kill of ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r17);

     label13:
        goto label07;

     label14:
        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot kill app process: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label15:
        $r20 := @caughtexception;

        goto label07;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch android.os.RemoteException from label06 to label07 with label15;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public void killApplicationWithAppId(java.lang.String, int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, $r10, $r16;
        int i0, i1;
        android.os.Message r3;
        android.os.Bundle r4, $r13;
        java.lang.SecurityException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r14, $r15, $r17;
        android.os.Handler $r11, $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        if i0 >= 0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid appid specified for pkg : ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r16);

        return;

     label2:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i1 != 1000 goto label3;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r3 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int)>(22);

        r3.<android.os.Message: int arg1> = i0;

        r3.<android.os.Message: int arg2> = 0;

        $r13 = new android.os.Bundle;

        specialinvoke $r13.<android.os.Bundle: void <init>()>();

        r4 = $r13;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("pkg", r1);

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("reason", r2);

        r3.<android.os.Message: java.lang.Object obj> = r4;

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r12.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

        return;

     label3:
        $r5 = new java.lang.SecurityException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot kill pkg: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }

    public void killBackgroundProcesses(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r6, $r10;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12;
        long l2;
        java.lang.Throwable r2, r5, $r18, $r21;
        android.content.pm.IPackageManager r3;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.SecurityException $r19;
        android.os.RemoteException $r20;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        if $i5 == 0 goto label01;

        $i10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.RESTART_PACKAGES");

        if $i10 == 0 goto label01;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: killBackgroundProcesses() from pid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i11 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.KILL_BACKGROUND_PROCESSES");

        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r6);

        $r19 = new java.lang.SecurityException;

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>(r6);

        throw $r19;

     label01:
        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i7, $i6, i0, 1, 1, "killBackgroundProcesses", null);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        entermonitor r0;

     label03:
        i3 = -1;

     label04:
        $i8 = interfaceinvoke r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, 0);

        i4 = staticinvoke <android.os.UserHandle: int getAppId(int)>($i8);

     label05:
        i3 = i4;

     label06:
        if i3 != -1 goto label09;

     label07:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        exitmonitor r0;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label09:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String)>(r1, i3, i1, 5, 0, 1, 1, 0, "kill background");

        exitmonitor r0;

     label10:
        goto label08;

     label11:
        $r18 := @caughtexception;

        r5 = $r18;

     label12:
        exitmonitor r0;

     label13:
        throw r5;

     label14:
        $r21 := @caughtexception;

        r2 = $r21;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label15:
        $r20 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch android.os.RemoteException from label04 to label05 with label15;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label14 with label14;
    }

    public boolean killPids(int[], java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int[] r1, r6;
        java.lang.String r2, r3, $r14;
        boolean z0, z1, $z2;
        android.util.SparseArray r4, $r15, $r19;
        java.lang.Throwable r5, $r18;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;
        com.android.server.am.ProcessRecord r7, r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;
        java.lang.Object $r16, $r20;
        java.lang.SecurityException $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: int[];

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i4 == 1000 goto label01;

        $r17 = new java.lang.SecurityException;

        specialinvoke $r17.<java.lang.SecurityException: void <init>(java.lang.String)>("killPids only available to the system");

        throw $r17;

     label01:
        if r2 != null goto label21;

        r3 = "Unknown";

     label02:
        z1 = 0;

        r4 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r4;

     label03:
        $i6 = lengthof r1;

        r6 = newarray (int)[$i6];

     label04:
        i0 = 0;

        i1 = 0;

     label05:
        $i5 = lengthof r1;

        if i1 >= $i5 goto label22;

        $r19 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i10 = r1[i1];

        $r20 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object get(int)>($i10);

        r8 = (com.android.server.am.ProcessRecord) $r20;

     label06:
        if r8 == null goto label20;

     label07:
        i3 = r8.<com.android.server.am.ProcessRecord: int setAdj>;

        r6[i1] = i3;

     label08:
        if i3 <= i0 goto label20;

        i0 = i3;

        goto label20;

     label09:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing processes ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at adjustment ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r14);

     label10:
        i2 = 0;

     label11:
        $i8 = lengthof r1;

        if i2 >= $i8 goto label15;

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i9 = r1[i2];

        $r16 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>($i9);

        r7 = (com.android.server.am.ProcessRecord) $r16;

     label12:
        if r7 != null goto label13;

        goto label24;

     label13:
        $i11 = r7.<com.android.server.am.ProcessRecord: int setAdj>;

        if $i11 < i0 goto label24;

        $z2 = r7.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z2 != 0 goto label24;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r7, r3);

     label14:
        z1 = 1;

        goto label24;

     label15:
        exitmonitor r4;

     label16:
        return z1;

     label17:
        $r18 := @caughtexception;

        r5 = $r18;

     label18:
        exitmonitor r4;

     label19:
        throw r5;

     label20:
        i1 = i1 + 1;

        goto label05;

     label21:
        r3 = r2;

        goto label02;

     label22:
        if i0 >= 15 goto label23;

        if i0 <= 9 goto label23;

        i0 = 9;

     label23:
        if z0 != 0 goto label09;

        if i0 >= 5 goto label09;

        i0 = 5;

        goto label09;

     label24:
        i2 = i2 + 1;

        goto label11;

        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public boolean killProcessesBelowForeground(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("killProcessesBelowForeground() only available to system");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killProcessesBelowAdj(int,java.lang.String)>(0, r1);

        return $z0;
    }

    public void killUid(int, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3;
        java.lang.String r1, r3;
        java.lang.Throwable r2, $r5;
        java.lang.SecurityException $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i3 == 1000 goto label1;

        $r4 = new java.lang.SecurityException;

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>("killUid only available to the system");

        throw $r4;

     label1:
        entermonitor r0;

     label2:
        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

     label3:
        if r1 == null goto label9;

        r3 = r1;

     label4:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String)>(null, i1, i2, -1, 0, 1, 1, 0, r3);

        exitmonitor r0;

     label5:
        return;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

     label9:
        r3 = "kill uid";

        goto label4;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    final void logAppTooSlow(com.android.server.am.ProcessRecord, long, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0;
        java.lang.String r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String;

        return;
    }

    void logLockScreen(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void monitor()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label1:
        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean moveActivityTaskToBack(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        boolean z0, z1, z2;
        java.lang.Throwable r2, $r4;
        long l0;
        int i1;
        com.android.server.am.ActivityStack $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("moveActivityTaskToBack");

        entermonitor r0;

     label01:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        if z0 != 0 goto label12;

        z1 = 1;

     label03:
        i1 = staticinvoke <com.android.server.am.ActivityRecord: int getTaskForActivityLocked(android.os.IBinder,boolean)>(r1, z1);

     label04:
        if i1 < 0 goto label07;

     label05:
        $r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

        z2 = virtualinvoke $r3.<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int,com.android.server.am.ActivityRecord)>(i1, null);

        exitmonitor r0;

     label06:
        return z2;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label08:
        return 0;

     label09:
        $r4 := @caughtexception;

        r2 = $r4;

     label10:
        exitmonitor r0;

     label11:
        throw r2;

     label12:
        z1 = 0;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void moveTaskBackwards(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2, $i3;
        java.lang.Throwable r1, $r2;
        long l1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskBackwards()");

        entermonitor r0;

     label1:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,java.lang.String)>($i2, $i3, "Task backwards");

        if $z0 != 0 goto label3;

        exitmonitor r0;

     label2:
        return;

     label3:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void moveTaskBackwardsLocked(int)>(i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        r1 = $r2;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void moveTaskToBack(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i2, $i3;
        java.lang.Throwable r1, r4, $r8, $r9;
        com.android.server.am.TaskRecord r2, $r7;
        com.android.server.am.ActivityStack r3;
        long l1;
        com.android.server.am.ActivityRecord $r5, $r6;
        boolean $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskToBack()");

        entermonitor r0;

     label01:
        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

     label02:
        if r2 == null goto label08;

     label03:
        r3 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r5 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r5 == null goto label05;

        $r6 = r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        $r7 = $r6.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r7 != r2 goto label05;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,java.lang.String)>($i3, $i2, "Task to back");

        if $z1 != 0 goto label05;

        exitmonitor r0;

     label04:
        return;

     label05:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        virtualinvoke r3.<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int,com.android.server.am.ActivityRecord)>(i0, null);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r8 := @caughtexception;

        r1 = $r8;

     label11:
        exitmonitor r0;

     label12:
        throw r1;

     label13:
        $r9 := @caughtexception;

        r4 = $r9;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label15:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label14 to label15 with label10;
    }

    public void moveTaskToFront(int, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i3, $i4;
        android.os.Bundle r1;
        java.lang.Throwable r2, r3, $r5, $r6;
        long l2;
        boolean $z0;
        com.android.server.am.ActivityStackSupervisor $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REORDER_TASKS", "moveTaskToFront()");

        entermonitor r0;

     label01:
        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,java.lang.String)>($i3, $i4, "Task to front");

        if $z0 != 0 goto label03;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r1);

        exitmonitor r0;

     label02:
        return;

     label03:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: void findTaskToMoveToFrontLocked(int,int,android.os.Bundle)>(i0, i1, r1);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r1);

        exitmonitor r0;

     label06:
        return;

     label07:
        $r5 := @caughtexception;

        r2 = $r5;

     label08:
        exitmonitor r0;

     label09:
        throw r2;

     label10:
        $r6 := @caughtexception;

        r3 = $r6;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
    }

    public void moveTaskToStack(int, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        boolean z0;
        java.lang.Throwable r1, r2, $r9, $r11, $r12;
        long l2;
        com.android.server.am.ActivityStackSupervisor $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;
        java.lang.String $r7;
        java.lang.RuntimeException $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "moveTaskToStack()");

        if i1 != 0 goto label01;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTaskToStack: Attempt to move task ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to home stack");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        $r9 = virtualinvoke $r10.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r7, $r9);

     label01:
        entermonitor r0;

     label02:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void moveTaskToStack(int,int,boolean)>(i0, i1, z0);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r0;

     label05:
        return;

     label06:
        $r12 := @caughtexception;

        r2 = $r12;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label08:
        $r11 := @caughtexception;

        r1 = $r11;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean navigateUpTo(android.os.IBinder, android.content.Intent, int, android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.content.Intent r2, r3;
        int i0;
        java.lang.Throwable r4, $r6;
        com.android.server.am.ActivityStack r5;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        entermonitor r0;

     label1:
        r5 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

     label2:
        if r5 == null goto label5;

     label3:
        z0 = virtualinvoke r5.<com.android.server.am.ActivityStack: boolean navigateUpToLocked(android.os.IBinder,android.content.Intent,int,android.content.Intent)>(r1, r2, i0, r3);

        exitmonitor r0;

     label4:
        return z0;

     label5:
        exitmonitor r0;

     label6:
        return 0;

     label7:
        $r6 := @caughtexception;

        r4 = $r6;

     label8:
        exitmonitor r0;

     label9:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    final com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo, java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, r3;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.android.server.am.BatteryStatsService $r5;
        com.android.server.am.ProcessRecord $r6;
        android.util.SparseArray $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if r2 == null goto label6;

        r3 = r2;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r4 = virtualinvoke $r5.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        if z0 == 0 goto label5;

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        i2 = 1000;

     label2:
        $i3 = r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid>;

        if $i3 < 99000 goto label3;

        $i8 = r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid>;

        if $i8 <= 99999 goto label4;

     label3:
        r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid> = 99000;

     label4:
        $i4 = r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid>;

        i0 = staticinvoke <android.os.UserHandle: int getUid(int,int)>(i1, $i4);

        $i6 = r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid>;

        $i5 = 1 + $i6;

        r0.<com.android.server.am.ActivityManagerService: int mNextIsolatedProcessUid> = $i5;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i7 = virtualinvoke $r7.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i7 >= 0 goto label7;

     label5:
        $r6 = new com.android.server.am.ProcessRecord;

        specialinvoke $r6.<com.android.server.am.ProcessRecord: void <init>(com.android.internal.os.BatteryStatsImpl,android.content.pm.ApplicationInfo,java.lang.String,int)>(r4, r1, r3, i0);

        return $r6;

     label6:
        r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        goto label1;

     label7:
        i2 = i2 + -1;

        if i2 > 0 goto label2;

        return null;
    }

    public android.os.IBinder newUriPermissionOwner(java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r5;
        android.os.Binder r3;
        com.android.server.am.UriPermissionOwner r6;
        android.os.IBinder r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("newUriPermissionOwner");

        entermonitor r0;

     label1:
        r6 = new com.android.server.am.UriPermissionOwner;

        specialinvoke r6.<com.android.server.am.UriPermissionOwner: void <init>(com.android.server.am.ActivityManagerService,java.lang.Object)>(r0, r1);

        r3 = virtualinvoke r6.<com.android.server.am.UriPermissionOwner: android.os.Binder getExternalTokenLocked()>();

        exitmonitor r0;

     label2:
        r7 = (android.os.IBinder) r3;

        return r7;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWakeupAlarm(android.content.IIntentSender)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentSender r1;
        com.android.internal.os.BatteryStatsImpl r2;
        java.lang.Throwable r3, $r11;
        com.android.server.am.PendingIntentRecord r4;
        int i0, i1, $i2;
        boolean $z0, $z1;
        com.android.server.am.BatteryStatsService $r5, $r6, $r7;
        com.android.server.am.PendingIntentRecord$Key $r8;
        com.android.internal.os.BatteryStatsImpl$Uid$Pkg $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentSender;

        $z0 = r1 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r2 = virtualinvoke $r5.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r2;

     label02:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $z1 = virtualinvoke $r6.<com.android.server.am.BatteryStatsService: boolean isOnBattery()>();

        if $z1 == 0 goto label05;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r7.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r4 = (com.android.server.am.PendingIntentRecord) r1;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = r4.<com.android.server.am.PendingIntentRecord: int uid>;

        if $i2 != i0 goto label10;

     label03:
        i1 = 1000;

     label04:
        $r8 = r4.<com.android.server.am.PendingIntentRecord: com.android.server.am.PendingIntentRecord$Key key>;

        $r10 = $r8.<com.android.server.am.PendingIntentRecord$Key: java.lang.String packageName>;

        $r9 = virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>(i1, $r10);

        virtualinvoke $r9.<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void incWakeupsLocked()>();

     label05:
        exitmonitor r2;

     label06:
        return;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        i1 = r4.<com.android.server.am.PendingIntentRecord: int uid>;

     label11:
        goto label04;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public void notifyActivityDrawn(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r7;
        com.android.server.am.ActivityRecord r3;
        com.android.server.am.ActivityStackSupervisor $r4;
        com.android.server.am.TaskRecord $r5;
        com.android.server.am.ActivityStack $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r3 = virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord isInAnyStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 == null goto label4;

     label3:
        $r5 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r6 = $r5.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        virtualinvoke $r6.<com.android.server.am.ActivityStack: void notifyActivityDrawnLocked(com.android.server.am.ActivityRecord)>(r3);

     label4:
        exitmonitor r0;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    void onCoreSettingsChange(android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.Bundle r1;
        int i0, $i1;
        com.android.server.am.ProcessRecord r2;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        android.app.IApplicationThread $r7, $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.Bundle;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label4;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ProcessRecord) $r6;

     label2:
        $r7 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r7 == null goto label3;

        $r8 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r8.<android.app.IApplicationThread: void setCoreSettings(android.os.Bundle)>(r1);

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        android.os.Parcel r1, r2, r8;
        java.util.ArrayList r3, $r10;
        java.lang.Throwable r4, $r21;
        android.util.SparseArray r5;
        com.android.server.am.ProcessRecord r6;
        java.lang.RuntimeException r7, $r24;
        boolean z0, $z3;
        android.util.ArrayMap $r11, $r15;
        com.android.internal.app.ProcessMap $r12, $r17;
        android.os.IBinder $r13, $r22;
        java.lang.Object $r14, $r16, $r20;
        android.app.IApplicationThread $r18, $r19;
        android.os.RemoteException $r23;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        if i0 != 1599295570 goto label17;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = $r10;

        entermonitor r0;

     label01:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r11 = virtualinvoke $r12.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        i2 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

     label02:
        i3 = 0;

     label03:
        if i3 >= i2 goto label09;

     label04:
        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r15 = virtualinvoke $r17.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $r16 = virtualinvoke $r15.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r5 = (android.util.SparseArray) $r16;

        i4 = virtualinvoke r5.<android.util.SparseArray: int size()>();

     label05:
        i5 = 0;

     label06:
        if i5 >= i4 goto label23;

     label07:
        $r20 = virtualinvoke r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r6 = (com.android.server.am.ProcessRecord) $r20;

        $r18 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r18 == null goto label22;

        $r19 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = interfaceinvoke $r19.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label08:
        goto label22;

     label09:
        exitmonitor r0;

     label10:
        i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i7 = 0;

     label11:
        if i7 >= i6 goto label17;

        r8 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label12:
        $r14 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r13 = (android.os.IBinder) $r14;

        interfaceinvoke $r13.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1599295570, r8, null, 0);

     label13:
        virtualinvoke r8.<android.os.Parcel: void recycle()>();

        i7 = i7 + 1;

        goto label11;

     label14:
        $r21 := @caughtexception;

        r4 = $r21;

     label15:
        exitmonitor r0;

     label16:
        throw r4;

     label17:
        z0 = specialinvoke r0.<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label18:
        return z0;

     label19:
        $r24 := @caughtexception;

        r7 = $r24;

        $z3 = r7 instanceof java.lang.SecurityException;

        if $z3 != 0 goto label20;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Activity Manager Crash", r7);

     label20:
        throw r7;

     label21:
        $r23 := @caughtexception;

        goto label13;

     label22:
        i5 = i5 + 1;

        goto label06;

     label23:
        i3 = i3 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch android.os.RemoteException from label12 to label13 with label21;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.RuntimeException from label17 to label18 with label19;
    }

    public android.os.ParcelFileDescriptor openContentUri(android.net.Uri) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, $i2, $i3;
        java.lang.String r2, $r12;
        android.app.IActivityManager$ContentProviderHolder r3;
        java.lang.ThreadLocal r5, $r15, $r19;
        android.os.ParcelFileDescriptor r6, r8;
        java.lang.Throwable r7, $r17;
        java.lang.StringBuilder $r9, $r10, $r11, $r13;
        com.android.server.am.ActivityManagerService$Identity $r14;
        android.content.IContentProvider $r16;
        java.io.FileNotFoundException $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("openContentUri");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i0);

        if r3 == null goto label5;

        $r15 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        $r14 = new com.android.server.am.ActivityManagerService$Identity;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r14.<com.android.server.am.ActivityManagerService$Identity: void <init>(com.android.server.am.ActivityManagerService,int,int)>(r0, $i2, $i3);

        virtualinvoke $r15.<java.lang.ThreadLocal: void set(java.lang.Object)>($r14);

     label1:
        $r16 = r3.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        r8 = interfaceinvoke $r16.<android.content.IContentProvider: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>(null, r1, "r", null);

     label2:
        r6 = r8;

        r5 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

     label3:
        virtualinvoke r5.<java.lang.ThreadLocal: void remove()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r2, null, i0);

        return r6;

     label4:
        $r17 := @caughtexception;

        r7 = $r17;

        $r19 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        virtualinvoke $r19.<java.lang.ThreadLocal: void remove()>();

        throw r7;

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get provider for authority \'");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        return null;

     label6:
        $r18 := @caughtexception;

        r5 = <com.android.server.am.ActivityManagerService: java.lang.ThreadLocal sCallerIdentity>;

        r6 = null;

        goto label3;

        catch java.io.FileNotFoundException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void overridePendingTransition(android.os.IBinder, java.lang.String, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0, i1;
        java.lang.Throwable r3, $r10;
        com.android.server.am.ActivityRecord r4;
        long l2;
        com.android.server.am.ActivityStack$ActivityState $r5, $r6, $r8, $r9;
        com.android.server.wm.WindowManagerService $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        entermonitor r0;

     label01:
        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r6 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r5 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r6 == $r5 goto label06;

        $r8 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r9 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r8 != $r9 goto label07;

     label06:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>(r2, i0, i1, null);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r0;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

        r3 = $r10;

     label10:
        exitmonitor r0;

     label11:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public android.os.IBinder peekService(android.content.Intent, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1;
        java.lang.String r2;
        java.lang.Throwable r3, $r7;
        android.os.IBinder r4;
        com.android.server.am.ActiveServices $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("peekService");

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r6;

     label1:
        entermonitor r0;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r4 = virtualinvoke $r5.<com.android.server.am.ActiveServices: android.os.IBinder peekServiceLocked(android.content.Intent,java.lang.String)>(r1, r2);

        exitmonitor r0;

     label3:
        return r4;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

     label5:
        exitmonitor r0;

     label6:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    final void performAppGcLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long $l0;
        android.app.IApplicationThread $r3, $r4, $r5;
        boolean $z0;
        java.lang.Exception $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ProcessRecord: long lastRequestedGc> = $l0;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r3 == null goto label6;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        if $z0 == 0 goto label3;

        r1.<com.android.server.am.ProcessRecord: boolean reportLowMemory> = 0;

        $r5 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r5.<android.app.IApplicationThread: void scheduleLowMemory()>();

     label2:
        return;

     label3:
        $r4 = r1.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r4.<android.app.IApplicationThread: void processInBackground()>();

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    final void performAppGcsIfAppropriateLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canGcNowLocked()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void performAppGcsLocked()>();

        return;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;
    }

    final void performAppGcsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.Object $r5;
        long $l3, $l4, $l5;
        byte $b6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label2;

     label1:
        return;

     label2:
        $z0 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean canGcNowLocked()>();

        if $z0 == 0 goto label1;

     label3:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label6;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r1 = (com.android.server.am.ProcessRecord) $r5;

        $i2 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        if $i2 > 2 goto label4;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean reportLowMemory>;

        if $z1 == 0 goto label3;

     label4:
        $l3 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l4 = 60000L + $l3;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b6 = $l4 cmp $l5;

        if $b6 > 0 goto label5;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void performAppGcLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;

     label5:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r1);

     label6:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;
    }

    public void performIdleMaintenance()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r18;
        long l0, l1, l2, $l5, $l7, $l10, $l13, $l15, $l19, $l20, $l21, $l22, $l23, $l25;
        java.lang.StringBuilder r2, $r5, $r13, $r14, $r15, $r16, $r17, $r21;
        boolean z0, $z2, $z3;
        int i3, $i4, $i11, $i12, $i14, $i17, $i18;
        com.android.server.am.ProcessRecord r3;
        byte $b6, $b9, $b16, $b24;
        java.lang.String $r7, $r20;
        java.util.ArrayList $r8, $r12;
        android.os.Handler $r9, $r10;
        java.lang.Object $r11;
        java.lang.SecurityException $r19;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i4 == 0 goto label01;

        $r19 = new java.lang.SecurityException;

        specialinvoke $r19.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r19;

     label01:
        entermonitor r0;

     label02:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime>;

        l1 = l0 - $l5;

        l2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: long getLowRamTimeSinceIdle(long)>(l0);

        r0.<com.android.server.am.ActivityManagerService: long mLastIdleTime> = l0;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = 0L;

        $l7 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b6 = $l7 cmp 0L;

        if $b6 == 0 goto label03;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = l0;

     label03:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(128);

        r2 = $r5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Idle maintenance over ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l1, r2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" low RAM for ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l2, r2);

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r7);

        $l10 = l1 / 3L;

        $b9 = l2 cmp $l10;

        if $b9 <= 0 goto label19;

     label04:
        z0 = 1;

     label05:
        $r8 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i11 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i3 = -1 + $i11;

     label06:
        if i3 < 0 goto label16;

     label07:
        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r11 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.am.ProcessRecord) $r11;

        $z2 = r3.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle>;

        if $z2 == 0 goto label11;

        $i17 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i17 <= 2 goto label18;

        $i18 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i18 > 7 goto label18;

     label08:
        if z0 == 0 goto label18;

     label09:
        $l15 = r3.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $b16 = $l15 cmp 0L;

        if $b16 == 0 goto label18;

        $l19 = r3.<com.android.server.am.ProcessRecord: long lastPss>;

        $l22 = r3.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $l21 = 3L * $l22;

        $l20 = $l21 / 2L;

        $b24 = $l19 cmp $l20;

        if $b24 <= 0 goto label18;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("idle maint (pss ");

        $l23 = r3.<com.android.server.am.ProcessRecord: long lastPss>;

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l23);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $l25 = r3.<com.android.server.am.ProcessRecord: long initialIdlePss>;

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l25);

        $r21 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r3, $r20);

     label10:
        goto label18;

     label11:
        $i14 = r3.<com.android.server.am.ProcessRecord: int setProcState>;

        if $i14 >= 9 goto label18;

        r3.<com.android.server.am.ProcessRecord: boolean notCachedSinceIdle> = 1;

        r3.<com.android.server.am.ProcessRecord: long initialIdlePss> = 0L;

        $i12 = r3.<com.android.server.am.ProcessRecord: int curProcState>;

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        $l13 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,long)>($i12, 1, $z3, l0);

        r3.<com.android.server.am.ProcessRecord: long nextPssTime> = $l13;

     label12:
        goto label18;

     label13:
        $r18 := @caughtexception;

        r1 = $r18;

     label14:
        exitmonitor r0;

     label15:
        throw r1;

     label16:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r10.<android.os.Handler: void removeMessages(int)>(39);

        $r9 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(39, 120000L);

        exitmonitor r0;

     label17:
        return;

     label18:
        i3 = i3 + -1;

        goto label06;

     label19:
        z0 = 0;

        goto label05;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label16 to label17 with label13;
    }

    void printOomLevel(java.io.PrintWriter, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        int i0;
        com.android.server.am.ProcessList $r3;
        long $l1, $l2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        if i0 < 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        if i0 >= 10 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $l1 = virtualinvoke $r3.<com.android.server.am.ProcessList: long getMemLevel(int)>(i0);

        $l2 = $l1 / 1024L;

        virtualinvoke r1.<java.io.PrintWriter: void print(long)>($l2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(" kB)");

        return;

     label2:
        if i0 <= -10 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(char)>(32);

        goto label1;
    }

    public boolean profileControl(java.lang.String, int, boolean, java.lang.String, android.os.ParcelFileDescriptor, int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, $r13, $r19;
        int i0, i1, $i2;
        boolean z0;
        android.os.ParcelFileDescriptor r3, r11;
        java.lang.Throwable r4, r7, $r27, $r29;
        com.android.server.am.ProcessRecord r8;
        android.content.pm.ApplicationInfo $r14;
        java.lang.IllegalArgumentException $r15, $r23;
        android.app.IApplicationThread $r16, $r21;
        java.lang.StringBuilder $r17, $r18, $r20;
        java.lang.SecurityException $r22;
        java.io.IOException $r24, $r25, $r26, $r28;
        android.os.RemoteException $r30;
        java.lang.IllegalStateException $r31;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.os.ParcelFileDescriptor;

        i1 := @parameter5: int;

     label01:
        entermonitor r0;

     label02:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i2 == 0 goto label11;

        $r22 = new java.lang.SecurityException;

        specialinvoke $r22.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r22;

     label03:
        $r29 := @caughtexception;

        r7 = $r29;

     label04:
        exitmonitor r0;

     label05:
        throw r7;

     label06:
        $r30 := @caughtexception;

     label07:
        $r31 = new java.lang.IllegalStateException;

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Process disappeared");

        throw $r31;

     label08:
        $r27 := @caughtexception;

        r4 = $r27;

        if r3 == null goto label10;

     label09:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label10:
        throw r4;

     label11:
        if z0 == 0 goto label13;

        if r3 != null goto label13;

     label12:
        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null fd");

        throw $r23;

     label13:
        r8 = null;

        if r1 == null goto label15;

     label14:
        r8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord findProcessLocked(java.lang.String,int,java.lang.String)>(r1, i0, "profileControl");

     label15:
        if z0 == 0 goto label18;

        if r8 == null goto label17;

     label16:
        $r21 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r21 != null goto label18;

     label17:
        $r15 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label18:
        if z0 == 0 goto label30;

     label19:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void stopProfilerLocked(com.android.server.am.ProcessRecord,java.lang.String,int)>(null, null, 0);

        $r14 = r8.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r13 = r8.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,java.lang.String,android.os.ParcelFileDescriptor,boolean)>($r14, $r13, r2, r3, 0);

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mProfileProc> = r8;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = i1;

     label20:
        r11 = virtualinvoke r3.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

     label21:
        r3 = r11;

     label22:
        $r16 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r16.<android.app.IApplicationThread: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>(z0, r2, r3, i1);

     label23:
        r3 = null;

     label24:
        r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd> = null;

     label25:
        exitmonitor r0;

     label26:
        if r3 == null goto label28;

     label27:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label28:
        return 1;

     label29:
        $r25 := @caughtexception;

        r3 = null;

        goto label22;

     label30:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void stopProfilerLocked(com.android.server.am.ProcessRecord,java.lang.String,int)>(r8, r2, i1);

     label31:
        if r3 == null goto label25;

     label32:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label33:
        goto label25;

     label34:
        $r24 := @caughtexception;

        goto label25;

     label35:
        $r28 := @caughtexception;

        goto label10;

     label36:
        $r26 := @caughtexception;

        return 1;

        catch android.os.RemoteException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch android.os.RemoteException from label05 to label06 with label06;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.io.IOException from label09 to label10 with label35;
        catch java.lang.Throwable from label12 to label13 with label03;
        catch java.lang.Throwable from label14 to label15 with label03;
        catch java.lang.Throwable from label16 to label17 with label03;
        catch java.lang.Throwable from label17 to label18 with label03;
        catch java.lang.Throwable from label19 to label20 with label03;
        catch java.io.IOException from label20 to label21 with label29;
        catch java.lang.Throwable from label20 to label21 with label03;
        catch java.lang.Throwable from label22 to label23 with label03;
        catch java.lang.Throwable from label24 to label25 with label03;
        catch java.lang.Throwable from label25 to label26 with label03;
        catch java.io.IOException from label27 to label28 with label36;
        catch java.lang.Throwable from label30 to label31 with label03;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.lang.Throwable from label32 to label33 with label03;
    }

    public final void publishContentProviders(android.app.IApplicationThread, java.util.List)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.util.List r2;
        java.lang.Throwable r3, r9, $r40, $r41;
        com.android.server.am.ProcessRecord r4;
        long l0;
        int i1, i2, i3, i4, i5, $i6, $i7;
        android.app.IActivityManager$ContentProviderHolder r5;
        com.android.server.am.ContentProviderRecord r6;
        android.content.ComponentName r7, $r18;
        java.lang.String[] r8;
        java.lang.Object $r10, $r15, $r28;
        android.content.IContentProvider $r11, $r25;
        android.content.pm.ProviderInfo $r12, $r14, $r17, $r21, $r23;
        java.lang.String $r13, $r19, $r22, $r24, $r30, $r42;
        android.util.ArrayMap $r16;
        com.android.server.am.ProviderMap $r20, $r29;
        java.util.ArrayList $r26, $r27, $r32;
        java.lang.StringBuilder $r33, $r34, $r35, $r37, $r38, $r39;
        java.lang.SecurityException $r36;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.util.List;

        if r2 != null goto label01;

        return;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("publishContentProviders");

        entermonitor r0;

     label02:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

     label03:
        if r4 != null goto label08;

     label04:
        $r36 = new java.lang.SecurityException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when publishing content providers");

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.SecurityException: void <init>(java.lang.String)>($r42);

        throw $r36;

     label05:
        $r41 := @caughtexception;

        r3 = $r41;

     label06:
        exitmonitor r0;

     label07:
        throw r3;

     label08:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label09:
        i2 = 0;

     label10:
        if i2 >= i1 goto label33;

     label11:
        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (android.app.IActivityManager$ContentProviderHolder) $r10;

     label12:
        if r5 == null goto label35;

     label13:
        $r12 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        if $r12 == null goto label35;

        $r11 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        if $r11 != null goto label15;

     label14:
        goto label35;

     label15:
        $r16 = r4.<com.android.server.am.ProcessRecord: android.util.ArrayMap pubProviders>;

        $r14 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.pm.ProviderInfo info>;

        $r13 = $r14.<android.content.pm.ProviderInfo: java.lang.String name>;

        $r15 = virtualinvoke $r16.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r13);

        r6 = (com.android.server.am.ContentProviderRecord) $r15;

     label16:
        if r6 == null goto label35;

     label17:
        $r18 = new android.content.ComponentName;

        $r17 = r6.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r19 = $r17.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r21 = r6.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r22 = $r21.<android.content.pm.ProviderInfo: java.lang.String name>;

        specialinvoke $r18.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r19, $r22);

        r7 = $r18;

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        virtualinvoke $r20.<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>(r7, r6);

        $r23 = r6.<com.android.server.am.ContentProviderRecord: android.content.pm.ProviderInfo info>;

        $r24 = $r23.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r8 = virtualinvoke $r24.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

     label18:
        i3 = 0;

     label19:
        $i6 = lengthof r8;

        if i3 >= $i6 goto label21;

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProviderMap mProviderMap>;

        $r30 = r8[i3];

        virtualinvoke $r29.<com.android.server.am.ProviderMap: void putProviderByName(java.lang.String,com.android.server.am.ContentProviderRecord)>($r30, r6);

     label20:
        i3 = i3 + 1;

        goto label19;

     label21:
        $r26 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        i4 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

     label22:
        i5 = 0;

     label23:
        if i5 >= i4 goto label26;

     label24:
        $r27 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        $r28 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        if $r28 != r6 goto label36;

        $r32 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLaunchingProviders>;

        virtualinvoke $r32.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

     label25:
        i5 = i5 + -1;

        i4 = i4 + -1;

        goto label36;

     label26:
        entermonitor r6;

     label27:
        $r25 = r5.<android.app.IActivityManager$ContentProviderHolder: android.content.IContentProvider provider>;

        r6.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider> = $r25;

        r6.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc> = r4;

        virtualinvoke r6.<java.lang.Object: void notifyAll()>();

        exitmonitor r6;

     label28:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>(r4);

     label29:
        goto label35;

     label30:
        $r40 := @caughtexception;

        r9 = $r40;

     label31:
        exitmonitor r6;

     label32:
        throw r9;

     label33:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label34:
        return;

     label35:
        i2 = i2 + 1;

        goto label10;

     label36:
        i5 = i5 + 1;

        goto label23;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label11 to label12 with label05;
        catch java.lang.Throwable from label13 to label14 with label05;
        catch java.lang.Throwable from label15 to label16 with label05;
        catch java.lang.Throwable from label17 to label18 with label05;
        catch java.lang.Throwable from label19 to label20 with label05;
        catch java.lang.Throwable from label21 to label22 with label05;
        catch java.lang.Throwable from label24 to label25 with label05;
        catch java.lang.Throwable from label26 to label27 with label05;
        catch java.lang.Throwable from label27 to label28 with label30;
        catch java.lang.Throwable from label28 to label29 with label05;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.lang.Throwable from label32 to label33 with label05;
        catch java.lang.Throwable from label33 to label34 with label05;
    }

    public void publishService(android.os.IBinder, android.content.Intent, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1, r3;
        android.content.Intent r2;
        java.lang.Throwable r4, $r9;
        boolean $z0, $z1;
        com.android.server.am.ServiceRecord $r5;
        com.android.server.am.ActiveServices $r6;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.IBinder;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r8;

     label1:
        entermonitor r0;

     label2:
        $z0 = r1 instanceof com.android.server.am.ServiceRecord;

        if $z0 != 0 goto label6;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw $r7;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

     label4:
        exitmonitor r0;

     label5:
        throw r4;

     label6:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r5 = (com.android.server.am.ServiceRecord) r1;

        virtualinvoke $r6.<com.android.server.am.ActiveServices: void publishServiceLocked(com.android.server.am.ServiceRecord,android.content.Intent,android.os.IBinder)>($r5, r2, r3);

        exitmonitor r0;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.lang.Throwable from label6 to label7 with label3;
    }

    public boolean refContentProvider(android.os.IBinder, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r3, $r13, $r16, $r23;
        com.android.server.am.ContentProviderConnection r4;
        java.lang.Throwable r5, $r30;
        boolean z0, $z1;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r14, $r15, $r17, $r18, $r19, $r21, $r24, $r25, $r27, $r29;
        java.lang.IllegalStateException $r7, $r12, $r20;
        java.lang.NullPointerException $r22;
        java.lang.ClassCastException $r26;
        java.lang.IllegalArgumentException $r28;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label01:
        r4 = (com.android.server.am.ContentProviderConnection) r1;

     label02:
        if r4 != null goto label04;

        $r22 = new java.lang.NullPointerException;

        specialinvoke $r22.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw $r22;

     label03:
        $r26 := @caughtexception;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refContentProvider: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r3 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r3);

        throw $r28;

     label04:
        entermonitor r0;

        if i0 <= 0 goto label06;

     label05:
        $i10 = r4.<com.android.server.am.ContentProviderConnection: int numStableIncs>;

        $i9 = i0 + $i10;

        r4.<com.android.server.am.ContentProviderConnection: int numStableIncs> = $i9;

     label06:
        $i4 = r4.<com.android.server.am.ContentProviderConnection: int stableCount>;

        i2 = i0 + $i4;

     label07:
        if i2 >= 0 goto label12;

     label08:
        $r20 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stableCount < 0: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r20;

     label09:
        $r30 := @caughtexception;

        r5 = $r30;

     label10:
        exitmonitor r0;

     label11:
        throw r5;

     label12:
        if i1 <= 0 goto label14;

     label13:
        $i8 = r4.<com.android.server.am.ContentProviderConnection: int numUnstableIncs>;

        $i7 = i1 + $i8;

        r4.<com.android.server.am.ContentProviderConnection: int numUnstableIncs> = $i7;

     label14:
        $i5 = r4.<com.android.server.am.ContentProviderConnection: int unstableCount>;

        i3 = i1 + $i5;

     label15:
        if i3 >= 0 goto label17;

     label16:
        $r12 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unstableCount < 0: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label17:
        $i6 = i2 + i3;

        if $i6 > 0 goto label19;

     label18:
        $r7 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ref counts can\'t go to zero here: stable=");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unstable=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label19:
        r4.<com.android.server.am.ContentProviderConnection: int stableCount> = i2;

        r4.<com.android.server.am.ContentProviderConnection: int unstableCount> = i3;

        $z1 = r4.<com.android.server.am.ContentProviderConnection: boolean dead>;

        if $z1 != 0 goto label23;

     label20:
        z0 = 1;

     label21:
        exitmonitor r0;

     label22:
        return z0;

     label23:
        z0 = 0;

        goto label21;

        catch java.lang.ClassCastException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label18 to label19 with label09;
        catch java.lang.Throwable from label19 to label20 with label09;
        catch java.lang.Throwable from label21 to label22 with label09;
    }

    public void registerProcessObserver(android.app.IProcessObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IProcessObserver r1;
        java.lang.Throwable r2, $r4;
        android.os.RemoteCallbackList $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IProcessObserver;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER", "registerProcessObserver()");

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.content.Intent registerReceiver(android.app.IApplicationThread, java.lang.String, android.content.IIntentReceiver, android.content.IntentFilter, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r5, r17, $r31, $r36, $r43, $r59, $r63, $r80;
        android.content.IIntentReceiver r3;
        android.content.IntentFilter r4;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16;
        com.android.server.am.ProcessRecord r6, $r51, $r52;
        java.util.Iterator r7;
        java.util.List r8, $r18, $r56;
        android.content.Intent r9, r16;
        java.lang.Throwable r10, $r78;
        com.android.server.am.ReceiverList r11, r85;
        com.android.server.am.BroadcastFilter r13, r86;
        java.util.ArrayList r14, r87;
        com.android.server.am.BroadcastQueue r15;
        java.util.HashMap $r19, $r54;
        android.os.IBinder $r20, $r49, $r55;
        java.lang.Object $r21, $r26, $r57, $r58;
        boolean $z0, $z4, $z5, $z6;
        com.android.server.IntentResolver $r22;
        java.lang.StringBuilder $r27, $r28, $r32, $r33, $r34, $r35, $r39, $r40, $r41, $r42, $r46, $r47, $r65, $r66, $r67, $r68, $r71, $r72, $r73, $r74, $r75, $r76, r81, r83, r89, r91, r93;
        android.util.ArraySet $r50;
        android.util.ArrayMap $r60;
        android.content.pm.ApplicationInfo $r61, $r62;
        android.os.RemoteException $r79;
        java.lang.SecurityException r82, r84;
        com.android.server.am.BroadcastRecord r88;
        java.lang.IllegalArgumentException r90, r92, r94;
        android.os.IBinder$DeathRecipient r95;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.IIntentReceiver;

        r4 := @parameter3: android.content.IntentFilter;

        r5 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("registerReceiver");

        entermonitor r0;

        if r1 == null goto label13;

     label01:
        r6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

     label02:
        if r6 != null goto label07;

     label03:
        r82 = new java.lang.SecurityException;

        r81 = new java.lang.StringBuilder;

        specialinvoke r81.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid=");

        $i16 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") when registering receiver ");

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r80 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r82.<java.lang.SecurityException: void <init>(java.lang.String)>($r80);

        throw r82;

     label04:
        $r78 := @caughtexception;

        r10 = $r78;

     label05:
        exitmonitor r0;

     label06:
        throw r10;

     label07:
        $r62 = r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i15 = $r62.<android.content.pm.ApplicationInfo: int uid>;

        if $i15 == 1000 goto label08;

        $r60 = r6.<com.android.server.am.ProcessRecord: android.util.ArrayMap pkgList>;

        $z6 = virtualinvoke $r60.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z6 != 0 goto label08;

        $r59 = "android";

        $z5 = virtualinvoke $r59.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 != 0 goto label08;

        r84 = new java.lang.SecurityException;

        r83 = new java.lang.StringBuilder;

        specialinvoke r83.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given caller package ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r65 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not running in process ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r63 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r84.<java.lang.SecurityException: void <init>(java.lang.String)>($r63);

        throw r84;

     label08:
        $r61 = r6.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i1 = $r61.<android.content.pm.ApplicationInfo: int uid>;

        i2 = r6.<com.android.server.am.ProcessRecord: int pid>;

     label09:
        i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i2, i1, i0, 1, 1, "registerReceiver", r2);

        r7 = virtualinvoke r4.<android.content.IntentFilter: java.util.Iterator actionsIterator()>();

     label10:
        r8 = null;

        if r7 == null goto label15;

     label11:
        $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r57 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r57;

        $r56 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)>(r17, r4, r8, -1);

        $i14 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        r8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)>(r17, r4, $r56, $i14);

     label12:
        goto label11;

     label13:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

     label14:
        r6 = null;

        r2 = null;

        goto label09;

     label15:
        $r18 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)>(null, r4, null, -1);

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        r8 = specialinvoke r0.<com.android.server.am.ActivityManagerService: java.util.List getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)>(null, r4, $r18, $i6);

     label16:
        if r8 == null goto label44;

     label17:
        $r58 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        r9 = (android.content.Intent) $r58;

     label18:
        if r3 != null goto label21;

     label19:
        exitmonitor r0;

     label20:
        return r9;

     label21:
        $r19 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r20 = interfaceinvoke r3.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        $r21 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r20);

        r11 = (com.android.server.am.ReceiverList) $r21;

     label22:
        if r11 != null goto label39;

     label23:
        r85 = new com.android.server.am.ReceiverList;

        specialinvoke r85.<com.android.server.am.ReceiverList: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,int,int,android.content.IIntentReceiver)>(r0, r6, i2, i1, i3, r3);

        r11 = r85;

        $r52 = r11.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r52 == null goto label33;

        $r51 = r11.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r50 = $r51.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r50.<android.util.ArraySet: boolean add(java.lang.Object)>(r11);

     label24:
        $r54 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r49 = interfaceinvoke r3.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r49, r11);

     label25:
        r86 = new com.android.server.am.BroadcastFilter;

        specialinvoke r86.<com.android.server.am.BroadcastFilter: void <init>(android.content.IntentFilter,com.android.server.am.ReceiverList,java.lang.String,java.lang.String,int,int)>(r4, r11, r2, r5, i1, i3);

        r13 = r86;

        virtualinvoke r11.<com.android.server.am.ReceiverList: boolean add(java.lang.Object)>(r13);

        $z0 = virtualinvoke r13.<com.android.server.am.BroadcastFilter: boolean debugCheck()>();

        if $z0 != 0 goto label26;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "==> For Dynamic broadast");

     label26:
        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        virtualinvoke $r22.<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>(r13);

     label27:
        if r8 == null goto label42;

     label28:
        r87 = new java.util.ArrayList;

        specialinvoke r87.<java.util.ArrayList: void <init>()>();

        r14 = r87;

        virtualinvoke r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        i5 = interfaceinvoke r8.<java.util.List: int size()>();

     label29:
        i4 = 0;

     label30:
        if i4 >= i5 goto label42;

     label31:
        $r26 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i4);

        r16 = (android.content.Intent) $r26;

        r15 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>(r16);

        r88 = new com.android.server.am.BroadcastRecord;

        specialinvoke r88.<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.lang.String,int,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int)>(r15, r16, null, null, -1, -1, null, null, -1, r14, null, 0, null, null, 0, 1, 1, -1);

        virtualinvoke r15.<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>(r88);

        virtualinvoke r15.<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>();

     label32:
        i4 = i4 + 1;

        goto label30;

     label33:
        $r55 = interfaceinvoke r3.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        r95 = (android.os.IBinder$DeathRecipient) r11;

        interfaceinvoke $r55.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r95, 0);

     label34:
        r11.<com.android.server.am.ReceiverList: boolean linkedToDeath> = 1;

     label35:
        goto label24;

     label36:
        $r79 := @caughtexception;

     label37:
        exitmonitor r0;

     label38:
        return r9;

     label39:
        $i9 = r11.<com.android.server.am.ReceiverList: int uid>;

        if $i9 == i1 goto label40;

        r90 = new java.lang.IllegalArgumentException;

        r89 = new java.lang.StringBuilder;

        specialinvoke r89.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for uid ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r41 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for uid ");

        $i13 = r11.<com.android.server.am.ReceiverList: int uid>;

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r90.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r43);

        throw r90;

     label40:
        $i7 = r11.<com.android.server.am.ReceiverList: int pid>;

        if $i7 == i2 goto label41;

        r92 = new java.lang.IllegalArgumentException;

        r91 = new java.lang.StringBuilder;

        specialinvoke r91.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for pid ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r34 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for pid ");

        $i12 = r11.<com.android.server.am.ReceiverList: int pid>;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r92.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw r92;

     label41:
        $i8 = r11.<com.android.server.am.ReceiverList: int userId>;

        if $i8 == i3 goto label25;

        r94 = new java.lang.IllegalArgumentException;

        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiver requested to register for user ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was previously registered for user ");

        $i11 = r11.<com.android.server.am.ReceiverList: int userId>;

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r94.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw r94;

     label42:
        exitmonitor r0;

     label43:
        return r9;

     label44:
        r9 = null;

        goto label18;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Throwable from label13 to label14 with label04;
        catch java.lang.Throwable from label15 to label16 with label04;
        catch java.lang.Throwable from label17 to label18 with label04;
        catch java.lang.Throwable from label19 to label20 with label04;
        catch java.lang.Throwable from label21 to label22 with label04;
        catch java.lang.Throwable from label23 to label24 with label04;
        catch java.lang.Throwable from label24 to label25 with label04;
        catch java.lang.Throwable from label25 to label26 with label04;
        catch java.lang.Throwable from label26 to label27 with label04;
        catch java.lang.Throwable from label28 to label29 with label04;
        catch java.lang.Throwable from label31 to label32 with label04;
        catch android.os.RemoteException from label33 to label34 with label36;
        catch java.lang.Throwable from label33 to label34 with label04;
        catch java.lang.Throwable from label34 to label35 with label04;
        catch java.lang.Throwable from label37 to label38 with label04;
        catch java.lang.Throwable from label39 to label40 with label04;
        catch java.lang.Throwable from label40 to label41 with label04;
        catch java.lang.Throwable from label41 to label42 with label04;
        catch java.lang.Throwable from label42 to label43 with label04;
    }

    public void registerUserSwitchObserver(android.app.IUserSwitchObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IUserSwitchObserver r1;
        java.lang.String r2;
        int $i0, $i1, $i2;
        android.os.RemoteCallbackList $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.SecurityException $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IUserSwitchObserver;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: registerUserSwitchObserver() from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r2);

        $r11 = new java.lang.SecurityException;

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>(r2);

        throw $r11;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        return;
    }

    public void releasePersistableUriPermission(android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, i1;
        java.lang.Throwable r2, $r11;
        com.android.server.am.UriPermission r3;
        boolean z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("releasePersistableUriPermission");

        staticinvoke <com.android.internal.util.Preconditions: void checkFlagsArgument(int,int)>(i0, 3);

        entermonitor r0;

     label01:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findUriPermissionLocked(int,android.net.Uri)>(i1, r1);

     label02:
        if r3 != null goto label05;

     label03:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission grant found for UID ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and Uri ");

        $r9 = virtualinvoke r1.<android.net.Uri: java.lang.String toSafeString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        exitmonitor r0;

     label04:
        return;

     label05:
        z0 = virtualinvoke r3.<com.android.server.am.UriPermission: boolean releasePersistableModes(int)>(i0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r3);

     label06:
        if z0 == 0 goto label08;

     label07:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        $r11 := @caughtexception;

        r2 = $r11;

     label11:
        exitmonitor r0;

     label12:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void removeContentProvider(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        boolean z0, $z1;
        java.lang.String r3;
        java.lang.Throwable r4, $r7;
        com.android.server.am.ContentProviderConnection r5;
        java.lang.NullPointerException $r6;
        java.lang.ClassCastException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("removeContentProvider");

        entermonitor r0;

     label01:
        r5 = (com.android.server.am.ContentProviderConnection) r1;

     label02:
        if r5 != null goto label09;

     label03:
        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw $r6;

     label04:
        $r7 := @caughtexception;

        r4 = $r7;

     label05:
        exitmonitor r0;

     label06:
        throw r4;

     label07:
        $r8 := @caughtexception;

     label08:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeContentProvider: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r3);

        throw $r13;

     label09:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>(r5, null, null, z0);

        if $z1 == 0 goto label10;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label10:
        exitmonitor r0;

     label11:
        return;

        catch java.lang.ClassCastException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
    }

    public void removeContentProviderExternal(java.lang.String, android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY", "Do not have permission in call removeContentProviderExternal()");

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)>(r1, r2, $i0);

        return;
    }

    final void removeLruProcessLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label3;

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        if i0 > $i1 goto label1;

        $i5 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i6 = -1 + $i5;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart> = $i6;

     label1:
        $i2 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        if i0 > $i2 goto label2;

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i4 = -1 + $i3;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart> = $i4;

     label2:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label3:
        return;
    }

    void removeReceiverLocked(com.android.server.am.ReceiverList)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ReceiverList r1;
        int i0, i1;
        android.content.IIntentReceiver $r2;
        java.util.HashMap $r3;
        android.os.IBinder $r4;
        com.android.server.IntentResolver $r6;
        java.lang.Object $r7;
        android.content.IntentFilter $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ReceiverList;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r2 = r1.<com.android.server.am.ReceiverList: android.content.IIntentReceiver receiver>;

        $r4 = interfaceinvoke $r2.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r4);

        i0 = virtualinvoke r1.<com.android.server.am.ReceiverList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.IntentResolver mReceiverResolver>;

        $r7 = virtualinvoke r1.<com.android.server.am.ReceiverList: java.lang.Object get(int)>(i1);

        $r8 = (android.content.IntentFilter) $r7;

        virtualinvoke $r6.<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean removeSubTask(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        boolean z0;
        java.lang.Throwable r1, r2, $r5, $r6;
        long l2;
        com.android.server.am.TaskRecord r3;
        com.android.server.am.ActivityRecord r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 1;

        entermonitor r0;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REMOVE_TASKS", "removeSubTask()");

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

     label03:
        if r3 == null goto label08;

     label04:
        r4 = virtualinvoke r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord removeTaskActivitiesLocked(int,boolean)>(i1, 1);

     label05:
        if r4 == null goto label15;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r0;

     label07:
        return z0;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r0;

     label09:
        return 0;

     label10:
        $r6 := @caughtexception;

        r2 = $r6;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label12:
        $r5 := @caughtexception;

        r1 = $r5;

     label13:
        exitmonitor r0;

     label14:
        throw r1;

     label15:
        z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean removeTask(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i3, $i4;
        java.lang.Throwable r1, r2, $r15, $r16;
        long l2;
        com.android.server.am.TaskRecord r3;
        com.android.server.am.ActivityRecord $r4;
        java.util.ArrayList $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        java.lang.String $r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label01:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.REMOVE_TASKS", "removeTask()");

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskRecord recentTaskForIdLocked(int)>(i0);

     label03:
        if r3 == null goto label14;

     label04:
        $r4 = virtualinvoke r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord removeTaskActivitiesLocked(int,boolean)>(-1, 0);

        if $r4 == null goto label07;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,int)>(r3, i1);

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r0;

     label06:
        return 1;

     label07:
        $r5 = r3.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label13;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,int)>(r3, i1);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r0;

     label09:
        return 1;

     label10:
        $r16 := @caughtexception;

        r1 = $r16;

     label11:
        exitmonitor r0;

     label12:
        throw r1;

     label13:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeTask: task ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have activities to remove, ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but numActivities=");

        $i4 = r3.<com.android.server.am.TaskRecord: int numActivities>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r13);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r0;

     label15:
        return 0;

     label16:
        $r15 := @caughtexception;

        r2 = $r15;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label18:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label10;
        catch java.lang.Throwable from label17 to label18 with label10;
    }

    void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UriPermission r1;
        android.util.ArrayMap r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.util.SparseArray $r3, $r7;
        java.lang.Object $r4;
        android.net.Uri $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UriPermission;

        $i0 = r1.<com.android.server.am.UriPermission: int modeFlags>;

        $i1 = 3 & $i0;

        if $i1 != 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i2 = r1.<com.android.server.am.UriPermission: int targetUid>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r2 = (android.util.ArrayMap) $r4;

        if r2 == null goto label1;

        $r5 = r1.<com.android.server.am.UriPermission: android.net.Uri uri>;

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r5);

        $i3 = virtualinvoke r2.<android.util.ArrayMap: int size()>();

        if $i3 != 0 goto label1;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mGrantedUriPermissions>;

        $i4 = r1.<com.android.server.am.UriPermission: int targetUid>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>($i4);

     label1:
        return;
    }

    public void reportActivityFullyDrawn(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r4;
        com.android.server.am.ActivityRecord r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 != null goto label5;

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        virtualinvoke r3.<com.android.server.am.ActivityRecord: void reportFullyDrawnLocked()>();

        exitmonitor r0;

     label6:
        return;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void reportAssistContextExtras(android.os.IBinder, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.os.Bundle r2;
        com.android.server.am.ActivityManagerService$PendingAssistExtras r3;
        java.lang.Throwable r4, $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.Bundle;

        r3 = (com.android.server.am.ActivityManagerService$PendingAssistExtras) r1;

        entermonitor r3;

     label1:
        r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: android.os.Bundle result> = r2;

        r3.<com.android.server.am.ActivityManagerService$PendingAssistExtras: boolean haveResult> = 1;

        virtualinvoke r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void reportThumbnail(android.os.IBinder, android.graphics.Bitmap, java.lang.CharSequence)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.graphics.Bitmap r2;
        java.lang.CharSequence r3;
        long l0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.graphics.Bitmap;

        r3 := @parameter2: java.lang.CharSequence;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.ActivityRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>(null, r1, r2, r3, 1);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;
    }

    public void requestBugReport()
    {
        com.android.server.am.ActivityManagerService r0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "requestBugReport");

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("ctl.start", "bugreport");

        return;
    }

    void requestPssAllProcsLocked(long, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, l2, $l8, $l9, $l11, $l13, $l14;
        boolean z0, z1, $z3;
        int i1, i3, $i4, $i5, $i6, $i7;
        com.android.server.am.ProcessRecord r1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r7, $r9;
        android.os.Handler $r6;
        java.lang.Object $r8;
        byte $b10, $b12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 != 0 goto label3;

        l2 = r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime>;

        if z1 == 0 goto label2;

        i3 = 120000;

     label1:
        $l13 = (long) i3;

        $l14 = l2 + $l13;

        $b12 = l0 cmp $l14;

        if $b12 >= 0 goto label3;

        return;

     label2:
        i3 = 600000;

        goto label1;

     label3:
        r0.<com.android.server.am.ActivityManagerService: long mLastFullPssTime> = l0;

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i4 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        virtualinvoke $r3.<java.util.ArrayList: void ensureCapacity(int)>($i4);

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i5 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = -1 + $i5;

     label4:
        if i1 < 0 goto label7;

        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.ProcessRecord) $r8;

        if z1 != 0 goto label5;

        $l9 = r1.<com.android.server.am.ProcessRecord: long lastStateTime>;

        $l11 = 600000L + $l9;

        $b10 = l0 cmp $l11;

        if $b10 <= 0 goto label6;

     label5:
        $i6 = r1.<com.android.server.am.ProcessRecord: int setProcState>;

        r1.<com.android.server.am.ProcessRecord: int pssProcState> = $i6;

        $i7 = r1.<com.android.server.am.ProcessRecord: int curProcState>;

        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        $l8 = staticinvoke <com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,long)>($i7, 1, $z3, l0);

        r1.<com.android.server.am.ProcessRecord: long nextPssTime> = $l8;

        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label6:
        i1 = i1 + -1;

        goto label4;

     label7:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

        return;
    }

    void requestPssLocked(com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int i0, $i1;
        java.util.ArrayList $r2, $r3, $r4;
        boolean $z0;
        android.os.Handler $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mBgHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

     label2:
        r1.<com.android.server.am.ProcessRecord: int pssProcState> = i0;

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingPssProcesses>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void resizeStackBox(int, float)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        float f0;
        long l1;
        java.lang.Throwable r1, $r3;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_ACTIVITY_STACKS", "resizeStackBox()");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void resizeStackBox(int,float)>(i0, f0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void restart()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityManagerService$12 r1, $r3;
        android.content.Intent r2, $r4;
        int $i0;
        android.content.Context $r7;
        java.lang.SecurityException $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER");

        if $i0 == 0 goto label1;

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SET_ACTIVITY_WATCHER");

        throw $r8;

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", "Sending shutdown broadcast...");

        $r3 = new com.android.server.am.ActivityManagerService$12;

        specialinvoke $r3.<com.android.server.am.ActivityManagerService$12: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r1 = $r3;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_SHUTDOWN");

        r2 = $r4;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.SHUTDOWN_USERSPACE_ONLY", 1);

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke r1.<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>($r7, r2);

        return;
    }

    public void resumeAppSwitches()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r3;
        int $i0;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.STOP_APP_SWITCHES");

        if $i0 == 0 goto label1;

        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.STOP_APP_SWITCHES");

        throw $r2;

     label1:
        entermonitor r0;

     label2:
        r0.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime> = 0L;

        exitmonitor r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void revokeUriPermission(android.app.IApplicationThread, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.net.Uri r2;
        int i0, i1, $i2, $i3;
        java.lang.Throwable r3, $r20;
        com.android.server.am.ProcessRecord r4;
        java.lang.String $r6, $r11, $r12, $r19;
        android.content.pm.ProviderInfo $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r15, $r16, $r17, $r18;
        java.lang.SecurityException $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("revokeUriPermission");

        entermonitor r0;

     label01:
        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

     label02:
        if r4 != null goto label07;

     label03:
        $r14 = new java.lang.SecurityException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find app for caller ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when revoking permission to uri ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label04:
        $r20 := @caughtexception;

        r3 = $r20;

     label05:
        exitmonitor r0;

     label06:
        throw r3;

     label07:
        if r2 != null goto label10;

     label08:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "revokeUriPermission: null uri");

        exitmonitor r0;

     label09:
        return;

     label10:
        i1 = i0 & 3;

        if i1 != 0 goto label13;

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r6 = virtualinvoke r2.<android.net.Uri: java.lang.String getAuthority()>();

        $i2 = r4.<com.android.server.am.ProcessRecord: int userId>;

        $r7 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ProviderInfo getProviderInfoLocked(java.lang.String,int)>($r6, $i2);

        if $r7 != null goto label15;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content provider found for permission revoke: ");

        $r11 = virtualinvoke r2.<android.net.Uri: java.lang.String toSafeString()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        exitmonitor r0;

     label14:
        return;

     label15:
        $i3 = r4.<com.android.server.am.ProcessRecord: int uid>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void revokeUriPermissionLocked(int,android.net.Uri,int)>($i3, r2, i1);

        exitmonitor r0;

     label16:
        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Throwable from label13 to label14 with label04;
        catch java.lang.Throwable from label15 to label16 with label04;
    }

    public void revokeUriPermissionFromOwner(android.os.IBinder, android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.net.Uri r2;
        int i0;
        java.lang.Throwable r3, $r10;
        com.android.server.am.UriPermissionOwner r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        entermonitor r0;

     label01:
        r4 = staticinvoke <com.android.server.am.UriPermissionOwner: com.android.server.am.UriPermissionOwner fromExternalToken(android.os.IBinder)>(r1);

     label02:
        if r4 != null goto label07;

     label03:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown owner: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label04:
        $r10 := @caughtexception;

        r3 = $r10;

     label05:
        exitmonitor r0;

     label06:
        throw r3;

     label07:
        if r2 != null goto label11;

     label08:
        virtualinvoke r4.<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked(int)>(i0);

     label09:
        exitmonitor r0;

     label10:
        return;

     label11:
        virtualinvoke r4.<com.android.server.am.UriPermissionOwner: void removeUriPermissionLocked(android.net.Uri,int)>(r2, i0);

     label12:
        goto label09;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
    }

    final void scheduleAppGcLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        long l0, $l1, $l2;
        byte $b3;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        $l2 = 60000L + $l1;

        $b3 = $l2 cmp l0;

        if $b3 <= 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

        return;
    }

    final void scheduleAppGcsLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        android.os.Message r2;
        long l0, l1, $l3, $l5;
        android.os.Handler $r3, $r7, $r8;
        java.util.ArrayList $r4, $r5;
        int $i2;
        java.lang.Object $r6;
        byte $b4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(5);

        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesToGc>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.am.ProcessRecord) $r6;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(5);

        $l3 = r1.<com.android.server.am.ProcessRecord: long lastRequestedGc>;

        l0 = 60000L + $l3;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = l1 + 5000L;

        $b4 = l0 cmp $l5;

        if $b4 >= 0 goto label1;

        l0 = l1 + 5000L;

     label1:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>(r2, l0);

     label2:
        return;
    }

    void sendContinueUserSwitchLocked(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1;
        android.os.Handler $r2, $r3, $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.android.server.am.ActivityManagerService: java.lang.Object mCurUserSwitchCallback> = null;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(36);

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(35, i0, i1, r1);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        return;
    }

    boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        boolean z0, $z1;
        com.android.server.am.BroadcastQueue[] r2;
        int i0, i1;
        com.android.server.am.BroadcastQueue $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 = 0;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        $z1 = virtualinvoke $r3.<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>(r1);

        z0 = z0 | $z1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return z0;
    }

    final void sendPendingThumbnail(com.android.server.am.ActivityRecord, android.os.IBinder, android.graphics.Bitmap, java.lang.CharSequence, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        android.os.IBinder r2;
        android.graphics.Bitmap r3;
        java.lang.CharSequence r4;
        boolean z0, $z1, $z2;
        java.lang.Throwable r5, $r27, $r28;
        com.android.server.am.TaskRecord r6;
        int i0, i1, i2, i3, i4, i5, $i6;
        java.util.ArrayList r7, r12, $r13, $r15, $r19, $r24;
        java.lang.Exception r8, $r25;
        android.app.IThumbnailReceiver r9, $r16;
        com.android.server.am.PendingThumbnailsRecord r10, r11;
        java.lang.Object $r14, $r17;
        java.util.HashSet $r18, $r21;
        com.android.server.am.ThumbnailHolder $r22, $r23, $r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: android.os.IBinder;

        r3 := @parameter2: android.graphics.Bitmap;

        r4 := @parameter3: java.lang.CharSequence;

        z0 := @parameter4: boolean;

        entermonitor r0;

        if r1 != null goto label05;

     label01:
        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r2);

     label02:
        if r1 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        if r3 != null goto label07;

     label06:
        $r22 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        if $r22 == null goto label07;

        $r23 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        r3 = $r23.<com.android.server.am.ThumbnailHolder: android.graphics.Bitmap lastThumbnail>;

        $r26 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        r4 = $r26.<com.android.server.am.ThumbnailHolder: java.lang.CharSequence lastDescription>;

     label07:
        if r3 != null goto label12;

        if z0 != 0 goto label12;

     label08:
        exitmonitor r0;

     label09:
        return;

     label10:
        exitmonitor r0;

     label11:
        throw r5;

     label12:
        r6 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

     label13:
        i1 = i0;

        i2 = 0;

        r7 = null;

     label14:
        if i2 >= i1 goto label22;

     label15:
        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        $r17 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r11 = (com.android.server.am.PendingThumbnailsRecord) $r17;

        $r18 = r11.<com.android.server.am.PendingThumbnailsRecord: java.util.HashSet pendingRecords>;

        $z2 = virtualinvoke $r18.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        if $z2 == 0 goto label20;

     label16:
        if r7 != null goto label34;

     label17:
        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r12 = $r24;

     label18:
        virtualinvoke r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r11);

        $r21 = r11.<com.android.server.am.PendingThumbnailsRecord: java.util.HashSet pendingRecords>;

        $i6 = virtualinvoke $r21.<java.util.HashSet: int size()>();

        if $i6 != 0 goto label21;

        r11.<com.android.server.am.PendingThumbnailsRecord: boolean finished> = 1;

        $r19 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mPendingThumbnails>;

        virtualinvoke $r19.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

     label19:
        i1 = i1 + -1;

        r7 = r12;

        goto label14;

     label20:
        r12 = r7;

     label21:
        i2 = i2 + 1;

        r7 = r12;

        goto label14;

     label22:
        exitmonitor r0;

     label23:
        if r7 == null goto label32;

        i3 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        i4 = 0;

     label24:
        if i4 >= i3 goto label32;

     label25:
        $r14 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r10 = (com.android.server.am.PendingThumbnailsRecord) $r14;

        r9 = r10.<com.android.server.am.PendingThumbnailsRecord: android.app.IThumbnailReceiver receiver>;

     label26:
        if r6 == null goto label30;

     label27:
        i5 = r6.<com.android.server.am.TaskRecord: int taskId>;

     label28:
        interfaceinvoke r9.<android.app.IThumbnailReceiver: void newThumbnail(int,android.graphics.Bitmap,java.lang.CharSequence)>(i5, r3, r4);

        $z1 = r10.<com.android.server.am.PendingThumbnailsRecord: boolean finished>;

        if $z1 == 0 goto label29;

        $r16 = r10.<com.android.server.am.PendingThumbnailsRecord: android.app.IThumbnailReceiver receiver>;

        interfaceinvoke $r16.<android.app.IThumbnailReceiver: void finished()>();

     label29:
        i4 = i4 + 1;

        goto label24;

     label30:
        i5 = -1;

        goto label28;

     label31:
        $r25 := @caughtexception;

        r8 = $r25;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown when sending thumbnail", r8);

        goto label29;

     label32:
        return;

     label33:
        $r27 := @caughtexception;

        r5 = $r27;

        goto label10;

     label34:
        r12 = r7;

        goto label18;

     label35:
        $r28 := @caughtexception;

        r5 = $r28;

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label03 to label04 with label35;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Throwable from label08 to label09 with label35;
        catch java.lang.Throwable from label10 to label11 with label35;
        catch java.lang.Throwable from label12 to label13 with label35;
        catch java.lang.Throwable from label15 to label16 with label33;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.lang.Throwable from label18 to label19 with label35;
        catch java.lang.Throwable from label22 to label23 with label33;
        catch java.lang.Exception from label25 to label26 with label31;
        catch java.lang.Exception from label27 to label28 with label31;
        catch java.lang.Exception from label28 to label29 with label31;
    }

    void sendUserSwitchBroadcastsLocked(int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i3, $i6, $i7;
        long l2;
        android.content.Intent r1, r3, r4, $r6, $r8, $r12;
        java.lang.Throwable r2, $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if i0 < 0 goto label2;

     label1:
        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_BACKGROUND");

        r4 = $r12;

        virtualinvoke r4.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $i7 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r4, null, null, 0, null, null, null, -1, 0, 0, $i7, 1000, i0);

     label2:
        if i1 < 0 goto label4;

     label3:
        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_FOREGROUND");

        r1 = $r6;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i1);

        $i3 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r1, null, null, 0, null, null, null, -1, 0, 0, $i3, 1000, i1);

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_SWITCHED");

        r3 = $r8;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i1);

        $i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r3, null, null, 0, null, null, "android.permission.MANAGE_USERS", -1, 0, 0, $i6, 1000, -1);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label5:
        $r14 := @caughtexception;

        r2 = $r14;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void serviceDoneExecuting(android.os.IBinder, int, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        int i0, i1, i2;
        java.lang.Throwable r2, $r6;
        boolean $z0;
        com.android.server.am.ServiceRecord $r3;
        com.android.server.am.ActiveServices $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        entermonitor r0;

     label1:
        $z0 = r1 instanceof com.android.server.am.ServiceRecord;

        if $z0 != 0 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid service token");

        throw $r5;

     label2:
        $r6 := @caughtexception;

        r2 = $r6;

     label3:
        exitmonitor r0;

     label4:
        throw r2;

     label5:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r3 = (com.android.server.am.ServiceRecord) r1;

        virtualinvoke $r4.<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,int,int,int)>($r3, i0, i1, i2);

        exitmonitor r0;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void setActivityController(android.app.IActivityController)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IActivityController r1;
        java.lang.Throwable r2, $r4;
        com.android.server.Watchdog $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IActivityController;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ACTIVITY_WATCHER", "setActivityController()");

        entermonitor r0;

     label1:
        r0.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = r1;

        $r3 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r3.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(r1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setAlwaysFinish(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        android.content.ContentResolver r1;
        byte b0;
        java.lang.Throwable r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_ALWAYS_FINISH", "setAlwaysFinish()");

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if z0 == 0 goto label7;

        b0 = 1;

     label1:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r1, "always_finish_activities", b0);

        entermonitor r0;

     label2:
        r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities> = z0;

        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r0;

     label6:
        throw r2;

     label7:
        b0 = 0;

        goto label1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setDebugApp(java.lang.String, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, $r5;
        boolean z0, z1, z2, $z4;
        long l0;
        java.lang.Throwable r2, r3, $r7, $r8;
        android.content.ContentResolver r4;
        byte b1;
        android.content.Context $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_DEBUG_APP", "setDebugApp()");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if z1 == 0 goto label04;

     label01:
        $r6 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r4 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r4, "debug_app", r1);

     label02:
        if z0 == 0 goto label14;

        b1 = 1;

     label03:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r4, "wait_for_debugger", b1);

     label04:
        entermonitor r0;

     label05:
        if z1 != 0 goto label07;

     label06:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp>;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOrigDebugApp> = $r5;

        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger>;

        r0.<com.android.server.am.ActivityManagerService: boolean mOrigWaitForDebugger> = $z4;

     label07:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mDebugApp> = r1;

        r0.<com.android.server.am.ActivityManagerService: boolean mWaitForDebugger> = z0;

     label08:
        if z1 != 0 goto label15;

        z2 = 1;

     label09:
        r0.<com.android.server.am.ActivityManagerService: boolean mDebugTransient> = z2;

     label10:
        if r1 == null goto label12;

     label11:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>(r1, -1, 0, 0, 1, 1, 0, -1, "set debug app");

     label12:
        exitmonitor r0;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label14:
        b1 = 0;

        goto label03;

     label15:
        z2 = 0;

        goto label09;

     label16:
        $r7 := @caughtexception;

        r3 = $r7;

     label17:
        exitmonitor r0;

     label18:
        throw r3;

     label19:
        $r8 := @caughtexception;

        r2 = $r8;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    final void setFocusedActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1, $r2;
        com.android.server.am.ActivityStackSupervisor $r3;
        android.view.IApplicationToken$Stub $r4;
        com.android.server.wm.WindowManagerService $r5;
        android.os.IBinder r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        if $r2 == r1 goto label2;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity> = r1;

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void setFocusedStack(com.android.server.am.ActivityRecord)>(r1);

        if r1 == null goto label1;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r4 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        r6 = (android.os.IBinder) $r4;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)>(r6, 1);

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void applyUpdateLockStateLocked(com.android.server.am.ActivityRecord)>(r1);

     label2:
        return;
    }

    public void setFocusedStack(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.Throwable r1, $r5;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.ActivityRecord r3;
        com.android.server.am.ActivityStackSupervisor $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>(i0);

     label02:
        if r2 == null goto label06;

     label03:
        r3 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label04:
        if r3 == null goto label06;

     label05:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r3);

     label06:
        exitmonitor r0;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

        r1 = $r5;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void setFrontActivityScreenCompatMode(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0;
        java.lang.Throwable r1, $r3;
        com.android.server.am.CompatModePackages $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_SCREEN_COMPATIBILITY", "setFrontActivityScreenCompatMode");

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        virtualinvoke $r2.<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)>(i0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setImmersive(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        boolean z0;
        java.lang.Throwable r2, $r6;
        com.android.server.am.ActivityRecord r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 != null goto label7;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        exitmonitor r0;

     label6:
        throw r2;

     label7:
        r3.<com.android.server.am.ActivityRecord: boolean immersive> = z0;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        if r3 != $r4 goto label8;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void applyUpdateLockStateLocked(com.android.server.am.ActivityRecord)>(r3);

     label8:
        exitmonitor r0;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    public void setLockScreenShown(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        java.lang.Throwable r1, r2, $r4, $r5;
        long l0;
        int $i1;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DEVICE_POWER");

        if $i1 == 0 goto label01;

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.DEVICE_POWER");

        throw $r3;

     label01:
        entermonitor r0;

     label02:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        r0.<com.android.server.am.ActivityManagerService: boolean mLockScreenShown> = z0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void comeOutOfSleepIfNeededLocked()>();

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label05:
        return;

     label06:
        $r4 := @caughtexception;

        r2 = $r4;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label08:
        $r5 := @caughtexception;

        r1 = $r5;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void setOpenGlTraceApp(android.content.pm.ApplicationInfo, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, $r4, $r5, $r9, $r12;
        java.lang.Throwable r3, $r11;
        boolean $z0;
        int $i0, $i1;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = "1";

        $r5 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label5;

        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 2 & $i0;

        if $i1 != 0 goto label5;

        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r9 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label2:
        $r11 := @caughtexception;

        r3 = $r11;

     label3:
        exitmonitor r0;

     label4:
        throw r3;

     label5:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mOpenGlTraceApp> = r2;

        exitmonitor r0;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void setPackageAskScreenCompat(java.lang.String, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Throwable r2, $r4;
        com.android.server.am.CompatModePackages $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_SCREEN_COMPATIBILITY", "setPackageAskScreenCompat");

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        virtualinvoke $r3.<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)>(r1, z0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setPackageScreenCompatMode(java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1;
        int i0;
        java.lang.Throwable r2, $r4;
        com.android.server.am.CompatModePackages $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_SCREEN_COMPATIBILITY", "setPackageScreenCompatMode");

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.CompatModePackages mCompatModePackages>;

        virtualinvoke $r3.<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setProcessForeground(android.os.IBinder, int, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1, $r14;
        int i0;
        boolean z0, z1;
        java.lang.Throwable r2, r4, $r22, $r23;
        android.util.SparseArray r3, $r9, $r10, $r15, $r16;
        com.android.server.am.ProcessRecord r5;
        com.android.server.am.ActivityManagerService$ForegroundToken r6;
        com.android.server.am.ActivityManagerService$9 r7, r25;
        java.lang.Object $r11, $r12;
        java.lang.StringBuilder $r18, $r19, r24;
        java.lang.String $r20;
        android.os.RemoteException $r21;
        android.os.IBinder$DeathRecipient r26, r27;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_PROCESS_LIMIT", "setProcessForeground()");

        entermonitor r0;

     label01:
        r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r3;

     label02:
        $r9 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r11 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.ProcessRecord) $r11;

     label03:
        if r5 != null goto label07;

        if z0 == 0 goto label07;

     label04:
        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setProcessForeground called on unknown pid: ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r20);

        exitmonitor r3;

     label05:
        exitmonitor r0;

     label06:
        return;

     label07:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        $r12 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.am.ActivityManagerService$ForegroundToken) $r12;

     label08:
        z1 = 0;

        if r6 == null goto label13;

     label09:
        $r14 = r6.<com.android.server.am.ActivityManagerService$ForegroundToken: android.os.IBinder token>;

        r26 = (android.os.IBinder$DeathRecipient) r6;

        interfaceinvoke $r14.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r26, 0);

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        virtualinvoke $r16.<android.util.SparseArray: void remove(int)>(i0);

     label10:
        if r5 == null goto label29;

     label11:
        r5.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = null;

     label12:
        goto label29;

     label13:
        if z0 == 0 goto label17;

        if r1 == null goto label17;

     label14:
        r25 = new com.android.server.am.ActivityManagerService$9;

        specialinvoke r25.<com.android.server.am.ActivityManagerService$9: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        r7 = r25;

        r7.<com.android.server.am.ActivityManagerService$ForegroundToken: int pid> = i0;

        r7.<com.android.server.am.ActivityManagerService$ForegroundToken: android.os.IBinder token> = r1;

     label15:
        r27 = (android.os.IBinder$DeathRecipient) r7;

        interfaceinvoke r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r27, 0);

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mForegroundProcesses>;

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r7);

        r5.<com.android.server.am.ProcessRecord: android.os.IBinder forcingToForeground> = r1;

     label16:
        z1 = 1;

     label17:
        exitmonitor r3;

     label18:
        if z1 == 0 goto label20;

     label19:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label20:
        exitmonitor r0;

     label21:
        return;

     label22:
        $r22 := @caughtexception;

        r2 = $r22;

     label23:
        exitmonitor r0;

     label24:
        throw r2;

     label25:
        $r23 := @caughtexception;

        r4 = $r23;

     label26:
        exitmonitor r3;

     label27:
        throw r4;

     label28:
        $r21 := @caughtexception;

        goto label17;

     label29:
        z1 = 1;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch android.os.RemoteException from label15 to label16 with label28;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label19 to label20 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label27 to label28 with label22;
    }

    public void setProcessLimit(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SET_PROCESS_LIMIT", "setProcessLimit()");

        entermonitor r0;

        if i0 >= 0 goto label3;

        i1 = 24;

     label1:
        r0.<com.android.server.am.ActivityManagerService: int mProcessLimit> = i1;

        r0.<com.android.server.am.ActivityManagerService: int mProcessLimitOverride> = i0;

        exitmonitor r0;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

        return;

     label3:
        i1 = i0;

        goto label1;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void setProfileApp(android.content.pm.ApplicationInfo, java.lang.String, java.lang.String, android.os.ParcelFileDescriptor, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.String r2, r3, $r8, $r9, $r15, $r17;
        android.os.ParcelFileDescriptor r4, r6, $r10;
        boolean z0, $z1;
        java.lang.Throwable r5, $r16;
        int $i0, $i1;
        java.lang.SecurityException $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.io.IOException $r18;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.ParcelFileDescriptor;

        z0 := @parameter4: boolean;

        entermonitor r0;

     label01:
        $r8 = "1";

        $r9 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.debuggable", "0");

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label05;

        $i0 = r1.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 2 & $i0;

        if $i1 != 0 goto label05;

        $r11 = new java.lang.SecurityException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process not debuggable: ");

        $r15 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.SecurityException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label02:
        $r16 := @caughtexception;

        r5 = $r16;

     label03:
        exitmonitor r0;

     label04:
        throw r5;

     label05:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileApp> = r2;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mProfileFile> = r3;

        r6 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

     label06:
        if r6 == null goto label09;

     label07:
        $r10 = r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd>;

        virtualinvoke $r10.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd> = null;

     label09:
        r0.<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor mProfileFd> = r4;

        r0.<com.android.server.am.ActivityManagerService: int mProfileType> = 0;

        r0.<com.android.server.am.ActivityManagerService: boolean mAutoStopProfiler> = z0;

        exitmonitor r0;

     label10:
        return;

     label11:
        $r18 := @caughtexception;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label08 to label09 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
    }

    public void setRequestedOrientation(android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1, r14;
        int i0;
        java.lang.Throwable r2, $r12;
        com.android.server.am.ActivityRecord r3;
        long l1;
        com.android.server.wm.WindowManagerService r4, $r9;
        android.content.res.Configuration r5, r7;
        android.view.IApplicationToken$Stub r6, $r8;
        boolean $z0, $z1;
        com.android.server.am.ProcessRecord $r10;
        com.android.server.am.ActivityStackSupervisor $r11;
        android.view.IApplicationToken r13;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        entermonitor r0;

     label01:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label02:
        if r3 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r8 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        r13 = (android.view.IApplicationToken) $r8;

        virtualinvoke $r9.<com.android.server.wm.WindowManagerService: void setAppOrientation(android.view.IApplicationToken,int)>(r13, i0);

        r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r5 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r10 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $z0 = virtualinvoke r3.<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>($r10);

        if $z0 == 0 goto label14;

        r6 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

     label06:
        r14 = (android.os.IBinder) r6;

        r7 = virtualinvoke r4.<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>(r5, r14);

     label07:
        if r7 == null goto label09;

     label08:
        r3.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy> = 1;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r7, r3, 0, 0);

        if $z1 != 0 goto label09;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r11.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r0;

     label10:
        return;

     label11:
        $r12 := @caughtexception;

        r2 = $r12;

     label12:
        exitmonitor r0;

     label13:
        throw r2;

     label14:
        r6 = null;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void setServiceForeground(android.content.ComponentName, android.os.IBinder, int, android.app.Notification, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0;
        android.app.Notification r3;
        boolean z0;
        java.lang.Throwable r4, $r6;
        com.android.server.am.ActiveServices $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        r3 := @parameter3: android.app.Notification;

        z0 := @parameter4: boolean;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r5.<com.android.server.am.ActiveServices: void setServiceForegroundLocked(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>(r1, r2, i0, r3, z0);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        exitmonitor r0;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setUserIsMonkey(boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        boolean z0;
        java.lang.Throwable r1, r3, $r13, $r15;
        android.util.SparseArray r2, $r5;
        int i0;
        com.android.server.am.ProcessRecord r4;
        java.lang.Object $r6;
        android.app.IUiAutomationConnection $r7;
        java.lang.SecurityException $r8, $r10;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.String $r14;

        r0 := @this: com.android.server.am.ActivityManagerService;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label01:
        r2 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r2;

     label02:
        i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ProcessRecord) $r6;

     label03:
        if r4 != null goto label11;

     label04:
        $r10 = new java.lang.SecurityException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown process: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label05:
        $r13 := @caughtexception;

        r3 = $r13;

     label06:
        exitmonitor r2;

     label07:
        throw r3;

     label08:
        $r15 := @caughtexception;

        r1 = $r15;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

     label11:
        $r7 = r4.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection>;

        if $r7 != null goto label12;

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Only an instrumentation process with a UiAutomation can call setUserIsMonkey");

        throw $r8;

     label12:
        exitmonitor r2;

     label13:
        r0.<com.android.server.am.ActivityManagerService: boolean mUserIsMonkey> = z0;

        exitmonitor r0;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label05;
        catch java.lang.Throwable from label12 to label13 with label05;
        catch java.lang.Throwable from label13 to label14 with label08;
    }

    public void setWindowManager(com.android.server.wm.WindowManagerService)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.wm.WindowManagerService r1;
        com.android.server.am.ActivityStackSupervisor $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager> = r1;

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor: void setWindowManager(com.android.server.wm.WindowManagerService)>(r1);

        virtualinvoke r1.<com.android.server.wm.WindowManagerService: void createStack(int,int,int,float)>(0, -1, 6, 1.0F);

        return;
    }

    final void showAskCompatModeDialogLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        android.os.Message r2;
        com.android.server.am.TaskRecord $r3;
        boolean $z0;
        android.os.Handler $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = 30;

        $r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z0 = $r3.<com.android.server.am.TaskRecord: boolean askedCompatMode>;

        if $z0 == 0 goto label1;

        r1 = null;

     label1:
        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void showBootMessage(java.lang.CharSequence, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.CharSequence r1;
        boolean z0;
        com.android.server.wm.WindowManagerService $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("showBootMessage");

        $r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void showBootMessage(java.lang.CharSequence,boolean)>(r1, z0);

        return;
    }

    final void showLaunchWarningLocked(com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1, r2;
        boolean $z0;
        com.android.server.am.ActivityManagerService$6 $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mLaunchWarningShown>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService: boolean mLaunchWarningShown> = 1;

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r3 = new com.android.server.am.ActivityManagerService$6;

        specialinvoke $r3.<com.android.server.am.ActivityManagerService$6: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>(r0, r1, r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    public final void showSafeModeOverlay()
    {
        com.android.server.am.ActivityManagerService r0;
        android.view.View r1;
        android.view.WindowManager$LayoutParams r2, $r5;
        android.content.Context $r3, $r7;
        android.view.LayoutInflater $r4;
        android.graphics.drawable.Drawable $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r8;
        android.view.WindowManager $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r3);

        r1 = virtualinvoke $r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367179, null);

        $r5 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r5.<android.view.WindowManager$LayoutParams: void <init>()>();

        r2 = $r5;

        r2.<android.view.WindowManager$LayoutParams: int type> = 2015;

        r2.<android.view.WindowManager$LayoutParams: int width> = -2;

        r2.<android.view.WindowManager$LayoutParams: int height> = -2;

        r2.<android.view.WindowManager$LayoutParams: int gravity> = 8388691;

        $r6 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $i0 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getOpacity()>();

        r2.<android.view.WindowManager$LayoutParams: int format> = $i0;

        r2.<android.view.WindowManager$LayoutParams: int flags> = 24;

        $i1 = r2.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i2 = 16 | $i1;

        r2.<android.view.WindowManager$LayoutParams: int privateFlags> = $i2;

        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r9 = (android.view.WindowManager) $r8;

        interfaceinvoke $r9.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void showWaitingForDebugger(android.app.IApplicationThread, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        boolean z0;
        com.android.server.am.ProcessRecord r2;
        java.lang.Throwable r3, $r6;
        android.os.Message r4;
        byte b0;
        android.os.Handler $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        z0 := @parameter1: boolean;

        entermonitor r0;

        if r1 == null goto label13;

     label01:
        r2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>(r1);

     label02:
        if r2 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        r4 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r4.<android.os.Message: int what> = 6;

        r4.<android.os.Message: java.lang.Object obj> = r2;

     label06:
        if z0 == 0 goto label12;

        b0 = 1;

     label07:
        r4.<android.os.Message: int arg1> = b0;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

        exitmonitor r0;

     label08:
        return;

     label09:
        $r6 := @caughtexception;

        r3 = $r6;

     label10:
        exitmonitor r0;

     label11:
        throw r3;

     label12:
        b0 = 0;

        goto label07;

     label13:
        r2 = null;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public boolean shutdown(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1;
        java.lang.Throwable r1, r2, $r8, $r10;
        boolean z0;
        com.android.server.am.ActivityStackSupervisor $r3;
        com.android.server.AppOpsService $r4;
        com.android.server.am.UsageStatsService $r5;
        com.android.server.am.BatteryStatsService $r6;
        com.android.server.am.ProcessStatsService $r7;
        java.lang.SecurityException $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SHUTDOWN");

        if $i1 == 0 goto label01;

        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SHUTDOWN");

        throw $r9;

     label01:
        entermonitor r0;

     label02:
        r0.<com.android.server.am.ActivityManagerService: boolean mShuttingDown> = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateEventDispatchingLocked()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z0 = virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: boolean shutdownLocked(int)>(i0);

        exitmonitor r0;

     label03:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        virtualinvoke $r4.<com.android.server.AppOpsService: void shutdown()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        virtualinvoke $r5.<com.android.server.am.UsageStatsService: void shutdown()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        virtualinvoke $r6.<com.android.server.am.BatteryStatsService: void shutdown()>();

        entermonitor r0;

     label04:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke $r7.<com.android.server.am.ProcessStatsService: void shutdownLocked()>();

        exitmonitor r0;

     label05:
        return z0;

     label06:
        $r10 := @caughtexception;

        r1 = $r10;

     label07:
        exitmonitor r0;

     label08:
        throw r1;

     label09:
        $r8 := @caughtexception;

        r2 = $r8;

     label10:
        exitmonitor r0;

     label11:
        throw r2;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void signalPersistentProcesses(int) throws android.os.RemoteException
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Throwable r1, $r9;
        com.android.server.am.ProcessRecord r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        android.app.IApplicationThread $r6;
        boolean $z0;
        java.lang.SecurityException $r7, $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        if i0 == 10 goto label01;

        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>("Only SIGNAL_USR1 is allowed");

        throw $r7;

     label01:
        entermonitor r0;

     label02:
        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.SIGNAL_PERSISTENT_PROCESSES");

        if $i2 == 0 goto label06;

        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES");

        throw $r8;

     label03:
        $r9 := @caughtexception;

        r1 = $r9;

     label04:
        exitmonitor r0;

     label05:
        throw r1;

     label06:
        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = -1 + $i3;

     label07:
        if i1 < 0 goto label10;

     label08:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ProcessRecord) $r5;

        $r6 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 == null goto label12;

        $z0 = r2.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label12;

        $i4 = r2.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>($i4, i0);

     label09:
        goto label12;

     label10:
        exitmonitor r0;

     label11:
        return;

     label12:
        i1 = i1 + -1;

        goto label07;

        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label08 to label09 with label03;
        catch java.lang.Throwable from label10 to label11 with label03;
    }

    void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        com.android.server.am.BroadcastQueue[] r2;
        int i0, i1;
        com.android.server.am.BroadcastQueue $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        virtualinvoke $r3.<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void skipPendingBroadcastLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2;
        com.android.server.am.BroadcastQueue[] r1;
        com.android.server.am.BroadcastQueue $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unattached app died before broadcast acknowledged, skipping");

        r1 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue[] mBroadcastQueues>;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r1[i2];

        virtualinvoke $r2.<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public final int startActivities(android.app.IApplicationThread, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2;
        android.content.Intent[] r3;
        java.lang.String[] r4;
        android.os.IBinder r5;
        android.os.Bundle r6;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.am.ActivityStackSupervisor $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent[];

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: android.os.Bundle;

        i0 := @parameter6: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivities");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i2, $i3, i0, 0, 1, "startActivity", null);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i4 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: int startActivities(android.app.IApplicationThread,int,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>(r1, -1, r2, r3, r4, r5, r6, i1);

        return $i4;
    }

    final int startActivitiesInPackage(int, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r1;
        android.content.Intent[] r2;
        java.lang.String[] r3;
        android.os.IBinder r4;
        android.os.Bundle r5;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent[];

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: android.os.IBinder;

        r5 := @parameter5: android.os.Bundle;

        i1 := @parameter6: int;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i3, $i4, i1, 0, 1, "startActivityInPackage", null);

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i5 = virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: int startActivities(android.app.IApplicationThread,int,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>(null, i0, r1, r2, r3, r4, r5, i2);

        return $i5;
    }

    public final int startActivity(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, java.lang.String, android.os.ParcelFileDescriptor, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6, r7;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, $i2, $i3;
        android.os.ParcelFileDescriptor r8;
        android.os.Bundle r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: java.lang.String;

        r8 := @parameter9: android.os.ParcelFileDescriptor;

        r9 := @parameter10: android.os.Bundle;

        $i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)>(r1, r2, r3, r4, r5, r6, i0, i1, r7, r8, r9, $i2);

        return $i3;
    }

    public final android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, java.lang.String, android.os.ParcelFileDescriptor, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6, r7;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, i2, $i3, $i5, $i7;
        android.os.ParcelFileDescriptor r8;
        android.os.Bundle r9;
        android.app.IActivityManager$WaitResult r10, $r12;
        com.android.server.am.ActivityStackSupervisor $r11;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: java.lang.String;

        r8 := @parameter9: android.os.ParcelFileDescriptor;

        r9 := @parameter10: android.os.Bundle;

        i2 := @parameter11: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivityAndWait");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i3, $i5, i2, 0, 1, "startActivityAndWait", null);

        $r12 = new android.app.IActivityManager$WaitResult;

        specialinvoke $r12.<android.app.IActivityManager$WaitResult: void <init>()>();

        r10 = $r12;

        $r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i7 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke $r11.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int)>(r1, -1, r2, r3, r4, r5, r6, i0, i1, r7, r8, r10, null, r9, $i7);

        return r10;
    }

    public final int startActivityAsUser(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, java.lang.String, android.os.ParcelFileDescriptor, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6, r7;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.os.ParcelFileDescriptor r8;
        android.os.Bundle r9;
        com.android.server.am.ActivityStackSupervisor $r10;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: java.lang.String;

        r8 := @parameter9: android.os.ParcelFileDescriptor;

        r9 := @parameter10: android.os.Bundle;

        i2 := @parameter11: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivity");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i4, $i5, i2, 0, 1, "startActivity", null);

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i6 = virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int)>(r1, -1, r2, r3, r4, r5, r6, i0, i1, r7, r8, null, null, r9, i3);

        return $i6;
    }

    final int startActivityInPackage(int, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.lang.String r1, r3, r5;
        android.content.Intent r2;
        android.os.IBinder r4;
        android.os.Bundle r6;
        com.android.server.am.ActivityStackSupervisor $r7;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.IBinder;

        r5 := @parameter5: java.lang.String;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r6 := @parameter8: android.os.Bundle;

        i3 := @parameter9: int;

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i5, $i6, i3, 0, 1, "startActivityInPackage", null);

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i7 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int)>(null, i0, r1, r2, r3, r4, r5, i1, i2, null, null, null, null, r6, i4);

        return $i7;
    }

    public int startActivityIntentSender(android.app.IApplicationThread, android.content.IntentSender, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, int, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.content.IntentSender r2;
        android.content.Intent r3;
        java.lang.String r4, r6;
        android.os.IBinder r5;
        int i0, i1, i2, $i3, $i4, $i5;
        android.os.Bundle r7;
        android.content.IIntentSender r8;
        com.android.server.am.PendingIntentRecord r9;
        java.lang.Throwable r10, $r18;
        com.android.server.am.ActivityStack r11;
        boolean $z0, $z1;
        com.android.server.am.ActivityRecord $r12, $r14;
        android.content.pm.ActivityInfo $r13;
        android.content.pm.ApplicationInfo $r15;
        java.lang.IllegalArgumentException $r16, $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.IntentSender;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        r7 := @parameter9: android.os.Bundle;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivityIntentSender");

        if r3 == null goto label1;

        $z1 = virtualinvoke r3.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 == 0 goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r17;

     label1:
        r8 = virtualinvoke r2.<android.content.IntentSender: android.content.IIntentSender getTarget()>();

        $z0 = r8 instanceof com.android.server.am.PendingIntentRecord;

        if $z0 != 0 goto label2;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad PendingIntent object");

        throw $r16;

     label2:
        r9 = (com.android.server.am.PendingIntentRecord) r8;

        entermonitor r0;

     label3:
        r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        $r12 = r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r12 == null goto label4;

        $r14 = r11.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        $r13 = $r14.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r15 = $r13.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r15.<android.content.pm.ApplicationInfo: int uid>;

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i4 != $i5 goto label4;

        r0.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime> = 0L;

     label4:
        exitmonitor r0;

     label5:
        $i3 = virtualinvoke r9.<com.android.server.am.PendingIntentRecord: int sendInner(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>(0, r3, r4, null, null, r5, r6, i0, i1, i2, r7);

        return $i3;

     label6:
        $r18 := @caughtexception;

        r10 = $r18;

     label7:
        exitmonitor r0;

     label8:
        throw r10;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final int startActivityWithConfig(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.content.res.Configuration, android.os.Bundle, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        java.lang.String r2, r4, r6;
        android.content.Intent r3;
        android.os.IBinder r5;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.content.res.Configuration r7;
        android.os.Bundle r8;
        com.android.server.am.ActivityStackSupervisor $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.os.IBinder;

        r6 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        r7 := @parameter8: android.content.res.Configuration;

        r8 := @parameter9: android.os.Bundle;

        i2 := @parameter10: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startActivityWithConfig");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i4, $i5, i2, 0, 1, "startActivityWithConfig", null);

        $r9 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i6 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int)>(r1, -1, r2, r3, r4, r5, r6, i0, i1, null, null, null, r7, r8, i3);

        return $i6;
    }

    void startAppProblemLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        int $i0, $i1, $i2;
        android.content.pm.ApplicationInfo $r2, $r3;
        java.lang.String $r4;
        android.content.Context $r5;
        android.content.ComponentName $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $i1 = r1.<com.android.server.am.ProcessRecord: int userId>;

        $i0 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        if $i1 != $i0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r2 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $r4 = $r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r3 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i2 = $r3.<android.content.pm.ApplicationInfo: int flags>;

        $r6 = staticinvoke <android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>($r5, $r4, $i2);

        r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver> = $r6;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>(r1);

        return;

     label2:
        r1.<com.android.server.am.ProcessRecord: android.content.ComponentName errorReportReceiver> = null;

        goto label1;
    }

    boolean startHomeActivityLocked(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, $i1, $i2, $i3, $i4;
        android.content.Intent r1;
        android.content.pm.ActivityInfo r2, r3, $r11;
        com.android.server.am.ProcessRecord r4;
        boolean $z0;
        android.content.ComponentName $r5, $r18;
        android.content.pm.ApplicationInfo $r6, $r10, $r12, $r13;
        java.lang.String $r7, $r8, $r14, $r17;
        com.android.server.am.ActivityStackSupervisor $r15;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mHeadless>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void ensureBootCompleted()>();

     label1:
        return 0;

     label2:
        $i1 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i1 != 1 goto label3;

        $r17 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction>;

        if $r17 == null goto label1;

     label3:
        r1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.Intent getHomeIntent()>();

        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent,int,int)>(r1, 1024, i0);

        if r2 == null goto label5;

        $r5 = new android.content.ComponentName;

        $r6 = r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r8 = $r6.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r7 = r2.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r5.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r8, $r7);

        virtualinvoke r1.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r5);

        $r11 = new android.content.pm.ActivityInfo;

        specialinvoke $r11.<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>(r2);

        r3 = $r11;

        $r10 = r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r13 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>($r10, i0);

        r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo> = $r13;

        $r14 = r3.<android.content.pm.ActivityInfo: java.lang.String processName>;

        $r12 = r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        r4 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>($r14, $i2, 1);

        if r4 == null goto label4;

        $r18 = r4.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass>;

        if $r18 != null goto label5;

     label4:
        $i4 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $i3 = 268435456 | $i4;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>($i3);

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r15.<com.android.server.am.ActivityStackSupervisor: void startHomeActivity(android.content.Intent,android.content.pm.ActivityInfo)>(r1, r3);

     label5:
        return 1;
    }

    public boolean startInstrumentation(android.content.ComponentName, java.lang.String, int, android.os.Bundle, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.ComponentName r1;
        java.lang.String r2, r12, $r16, $r19, $r21, $r22, $r29, $r33, $r39, $r41, $r47;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8;
        android.os.Bundle r3;
        android.app.IInstrumentationWatcher r4;
        android.app.IUiAutomationConnection r5;
        android.content.pm.InstrumentationInfo r6;
        android.content.pm.ApplicationInfo r8, r13;
        java.lang.Throwable r9, $r48;
        long l4;
        com.android.server.am.ProcessRecord r10;
        android.content.Context $r14, $r18;
        android.content.pm.PackageManager $r15, $r20;
        android.content.pm.IPackageManager $r17;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r35, $r36, $r37, $r40, $r44, $r45, $r46;
        java.lang.SecurityException $r38;
        boolean $z1;
        java.lang.IllegalArgumentException $r42;
        android.os.RemoteException $r43;
        android.content.pm.PackageManager$NameNotFoundException $r49;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        r4 := @parameter4: android.app.IInstrumentationWatcher;

        r5 := @parameter5: android.app.IUiAutomationConnection;

        i1 := @parameter6: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startInstrumentation");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i5, $i6, i1, 0, 1, "startInstrumentation", null);

        if r3 == null goto label01;

        $z1 = virtualinvoke r3.<android.os.Bundle: boolean hasFileDescriptors()>();

        if $z1 == 0 goto label01;

        $r42 = new java.lang.IllegalArgumentException;

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Bundle");

        throw $r42;

     label01:
        entermonitor r0;

        r6 = null;

     label02:
        $r14 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r6 = virtualinvoke $r15.<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>(r1, 1024);

        $r17 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r16 = r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        r13 = interfaceinvoke $r17.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r16, 1024, i2);

     label03:
        r8 = r13;

     label04:
        if r6 != null goto label07;

     label05:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation info for: ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r4, r1, $r47);

        exitmonitor r0;

     label06:
        return 0;

     label07:
        if r8 != null goto label13;

     label08:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find instrumentation target package: ");

        $r41 = r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r4, r1, $r39);

        exitmonitor r0;

     label09:
        return 0;

     label10:
        $r48 := @caughtexception;

        r9 = $r48;

     label11:
        exitmonitor r0;

     label12:
        throw r9;

     label13:
        $r18 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r20 = virtualinvoke $r18.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r19 = r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r21 = r6.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        i3 = virtualinvoke $r20.<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>($r19, $r21);

     label14:
        if i3 >= 0 goto label16;

        if i3 == -1 goto label16;

     label15:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: starting instrumentation ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not allowed because package ");

        $r29 = r6.<android.content.pm.InstrumentationInfo: java.lang.String packageName>;

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a signature matching the target ");

        $r33 = r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        r12 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)>(r4, r1, r12);

        $r38 = new java.lang.SecurityException;

        specialinvoke $r38.<java.lang.SecurityException: void <init>(java.lang.String)>(r12);

        throw $r38;

     label16:
        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r22 = r6.<android.content.pm.InstrumentationInfo: java.lang.String targetPackage>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>($r22, -1, 1, 0, 1, 1, 0, i2, "start instr");

        r10 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean)>(r8, 0);

        r10.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationClass> = r1;

        r10.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo instrumentationInfo> = r8;

        r10.<com.android.server.am.ProcessRecord: java.lang.String instrumentationProfileFile> = r2;

        r10.<com.android.server.am.ProcessRecord: android.os.Bundle instrumentationArguments> = r3;

        r10.<com.android.server.am.ProcessRecord: android.app.IInstrumentationWatcher instrumentationWatcher> = r4;

        r10.<com.android.server.am.ProcessRecord: android.app.IUiAutomationConnection instrumentationUiAutomationConnection> = r5;

        r10.<com.android.server.am.ProcessRecord: android.content.ComponentName instrumentationResultClass> = r1;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        exitmonitor r0;

     label17:
        return 1;

     label18:
        $r43 := @caughtexception;

        r8 = null;

        goto label04;

     label19:
        $r49 := @caughtexception;

        r8 = null;

        goto label04;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label19;
        catch android.os.RemoteException from label02 to label03 with label18;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
        catch java.lang.Throwable from label16 to label17 with label10;
    }

    public boolean startNextMatchingActivity(android.os.IBinder, android.content.Intent, android.os.Bundle)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1, r73;
        android.content.Intent r2, r6, $r19, $r25, r69;
        android.os.Bundle r3;
        java.lang.Throwable r4, $r62, $r66;
        com.android.server.am.ActivityRecord r5, r10;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, z1, $z2, $z3, $z4;
        android.content.pm.ActivityInfo r7, $r38, $r39, $r41, $r51;
        java.lang.String r9, r12, $r26, $r27, $r31, $r32, $r36, $r37, $r42, $r45, $r46, $r47, $r49, $r54, $r55, $r56, $r61;
        long l1;
        com.android.server.am.ActivityStackSupervisor r11;
        android.app.IApplicationThread r13, $r21;
        android.view.IApplicationToken$Stub r14;
        java.util.List r15;
        android.content.pm.ResolveInfo r16, $r65;
        com.android.server.am.ProcessRecord $r17, $r18, $r35;
        android.net.Uri $r20;
        android.content.pm.IPackageManager $r28;
        android.content.pm.ApplicationInfo $r33;
        java.lang.Object $r40, $r64;
        java.lang.StringBuilder $r43, $r44, $r52, $r53, $r57, $r58, $r59, $r60, r70, r71;
        android.os.RemoteException $r67;
        java.lang.IllegalArgumentException r68;
        android.content.ComponentName r72;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: android.os.Bundle;

        if r2 == null goto label01;

        $z4 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z4 != 1 goto label01;

        r68 = new java.lang.IllegalArgumentException;

        specialinvoke r68.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw r68;

     label01:
        entermonitor r0;

     label02:
        r5 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

     label03:
        if r5 != null goto label06;

     label04:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        exitmonitor r0;

     label05:
        return 0;

     label06:
        $r18 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r18 == null goto label07;

        $r17 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r21 = $r17.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r21 != null goto label11;

     label07:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        exitmonitor r0;

     label08:
        return 0;

     label09:
        exitmonitor r0;

     label10:
        throw r4;

     label11:
        r69 = new android.content.Intent;

        specialinvoke r69.<android.content.Intent: void <init>(android.content.Intent)>(r2);

        r6 = r69;

     label12:
        $r19 = r5.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r20 = virtualinvoke $r19.<android.content.Intent: android.net.Uri getData()>();

        $r25 = r5.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r26 = virtualinvoke $r25.<android.content.Intent: java.lang.String getType()>();

        virtualinvoke r6.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r20, $r26);

        virtualinvoke r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(null);

        i0 = virtualinvoke r6.<android.content.Intent: int getFlags()>();

     label13:
        $i10 = i0 & 8;

        if $i10 == 0 goto label47;

        z0 = 1;

     label14:
        r7 = null;

     label15:
        $r28 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r27 = r5.<com.android.server.am.ActivityRecord: java.lang.String resolvedType>;

        $i11 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r15 = interfaceinvoke $r28.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r6, $r27, 66560, $i11);

     label16:
        r7 = null;

        if r15 == null goto label48;

     label17:
        i5 = interfaceinvoke r15.<java.util.List: int size()>();

     label18:
        goto label46;

     label19:
        i7 = i4;

        i6 = i5;

        r7 = null;

        if i7 >= i6 goto label25;

     label20:
        $r40 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i4);

        r16 = (android.content.pm.ResolveInfo) $r40;

        $r41 = r16.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r37 = $r41.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r42 = r5.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $z2 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z2 == 0 goto label49;

        $r38 = r16.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r46 = $r38.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r39 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r47 = $r39.<android.content.pm.ActivityInfo: java.lang.String name>;

        $z3 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r47);

        if $z3 == 0 goto label49;

     label21:
        i9 = i4 + 1;

        i8 = i5;

        r7 = null;

        if i9 >= i8 goto label23;

     label22:
        $r64 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(i9);

        $r65 = (android.content.pm.ResolveInfo) $r64;

        r7 = $r65.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

     label23:
        if z0 == 0 goto label25;

     label24:
        r70 = new java.lang.StringBuilder;

        specialinvoke r70.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Next matching activity: found current ");

        $r45 = r5.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r52 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r51 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r54 = $r51.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r49 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", $r49);

        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Next matching activity: next is ");

        $r61 = r7.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r56 = r7.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r55 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityManager", $r55);

     label25:
        if r7 != null goto label31;

     label26:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

     label27:
        if z0 == 0 goto label29;

     label28:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", "Next matching activity: nothing found");

     label29:
        exitmonitor r0;

     label30:
        return 0;

     label31:
        r72 = new android.content.ComponentName;

        $r33 = r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r31 = $r33.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r32 = r7.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r72.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r31, $r32);

        virtualinvoke r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r72);

        $i13 = virtualinvoke r6.<android.content.Intent: int getFlags()>();

        $i12 = -503316481 & $i13;

        virtualinvoke r6.<android.content.Intent: android.content.Intent setFlags(int)>($i12);

        z1 = r5.<com.android.server.am.ActivityRecord: boolean finishing>;

        r5.<com.android.server.am.ActivityRecord: boolean finishing> = 1;

        r10 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        r9 = r5.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        i2 = r5.<com.android.server.am.ActivityRecord: int requestCode>;

        r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = null;

     label32:
        if r10 == null goto label34;

     label33:
        virtualinvoke r10.<com.android.server.am.ActivityRecord: void removeResultsLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>(r5, r9, i2);

     label34:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r11 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r35 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        r13 = $r35.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r12 = r5.<com.android.server.am.ActivityRecord: java.lang.String resolvedType>;

     label35:
        if r10 == null goto label50;

     label36:
        r14 = r10.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

     label37:
        $i14 = r5.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        $r36 = r5.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        r73 = (android.os.IBinder) r14;

        i3 = virtualinvoke r11.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[])>(r13, r6, r12, r7, r73, r9, i2, -1, $i14, $r36, 0, r3, 0, null);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        r5.<com.android.server.am.ActivityRecord: boolean finishing> = z1;

     label38:
        if i3 == 0 goto label41;

     label39:
        exitmonitor r0;

     label40:
        return 0;

     label41:
        exitmonitor r0;

     label42:
        return 1;

     label43:
        $r62 := @caughtexception;

        r4 = $r62;

        goto label09;

     label44:
        $r67 := @caughtexception;

        goto label25;

     label45:
        $r66 := @caughtexception;

        r4 = $r66;

        goto label09;

     label46:
        i4 = 0;

        goto label19;

     label47:
        z0 = 0;

        goto label14;

     label48:
        i5 = 0;

        goto label46;

     label49:
        i4 = i4 + 1;

        goto label19;

     label50:
        r14 = null;

        goto label37;

        catch java.lang.Throwable from label02 to label03 with label45;
        catch java.lang.Throwable from label04 to label05 with label45;
        catch java.lang.Throwable from label06 to label07 with label45;
        catch java.lang.Throwable from label07 to label08 with label45;
        catch java.lang.Throwable from label09 to label10 with label45;
        catch java.lang.Throwable from label11 to label12 with label45;
        catch java.lang.Throwable from label12 to label13 with label43;
        catch android.os.RemoteException from label15 to label16 with label44;
        catch java.lang.Throwable from label15 to label16 with label43;
        catch android.os.RemoteException from label17 to label18 with label44;
        catch java.lang.Throwable from label17 to label18 with label43;
        catch android.os.RemoteException from label20 to label21 with label44;
        catch java.lang.Throwable from label20 to label21 with label43;
        catch android.os.RemoteException from label22 to label23 with label44;
        catch java.lang.Throwable from label22 to label23 with label43;
        catch android.os.RemoteException from label24 to label25 with label44;
        catch java.lang.Throwable from label24 to label25 with label43;
        catch java.lang.Throwable from label26 to label27 with label43;
        catch java.lang.Throwable from label28 to label29 with label43;
        catch java.lang.Throwable from label29 to label30 with label43;
        catch java.lang.Throwable from label31 to label32 with label43;
        catch java.lang.Throwable from label33 to label34 with label43;
        catch java.lang.Throwable from label34 to label35 with label43;
        catch java.lang.Throwable from label36 to label37 with label43;
        catch java.lang.Throwable from label37 to label38 with label43;
        catch java.lang.Throwable from label39 to label40 with label43;
        catch java.lang.Throwable from label41 to label42 with label43;
    }

    public void startObservingNativeCrashes()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.NativeCrashListener $r1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $r1 = new com.android.server.am.NativeCrashListener;

        specialinvoke $r1.<com.android.server.am.NativeCrashListener: void <init>()>();

        virtualinvoke $r1.<com.android.server.am.NativeCrashListener: void start()>();

        return;
    }

    final com.android.server.am.ProcessRecord startProcessLocked(java.lang.String, android.content.pm.ApplicationInfo, boolean, int, java.lang.String, android.content.ComponentName, boolean, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r3, r6, $r9, $r20, $r23, $r27, $r29, $r32, $r34, $r35;
        android.content.pm.ApplicationInfo r2;
        boolean z0, z1, z2, z3, $z5, $z6, $z7;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16;
        android.content.ComponentName r4;
        com.android.server.am.ProcessRecord r5;
        com.android.server.am.ProcessStatsService $r7, $r33;
        java.lang.Object[] r8;
        java.util.ArrayList $r10, $r11;
        com.android.internal.app.ProcessMap $r12, $r24, $r26, $r31, $r36;
        java.lang.StringBuilder $r14, $r16, $r17, $r18, $r19, $r21, $r22;
        android.util.SparseArray $r15;
        java.lang.Object $r25, $r37;
        java.lang.Integer $r28, $r30;
        android.app.IApplicationThread $r38;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.content.ComponentName;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        if z2 != 0 goto label03;

        $i16 = r2.<android.content.pm.ApplicationInfo: int uid>;

        r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>(r1, $i16, z3);

     label01:
        if r5 == null goto label05;

        $i14 = r5.<com.android.server.am.ProcessRecord: int pid>;

        if $i14 <= 0 goto label05;

        if z0 == 0 goto label02;

        $r38 = r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r38 != null goto label04;

     label02:
        $r34 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r5.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,com.android.server.am.ProcessStatsService)>($r34, $r33);

        return r5;

     label03:
        r5 = null;

        goto label01;

     label04:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>(r5, 1, 1);

     label05:
        if r4 == null goto label07;

        r6 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

     label06:
        if z2 != 0 goto label09;

        $i6 = i0 & 4;

        if $i6 == 0 goto label08;

        $r36 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r35 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i15 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r37 = virtualinvoke $r36.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r35, $i15);

        if $r37 == null goto label09;

        return null;

     label07:
        r6 = null;

        goto label06;

     label08:
        $r24 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessCrashTimes>;

        $r23 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i7 = r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r24.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r23, $i7);

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r27 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i8 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r25 = virtualinvoke $r26.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r27, $i8);

        if $r25 == null goto label09;

        r8 = newarray (java.lang.Object)[3];

        $i10 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $i9 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i10);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        r8[0] = $r28;

        $i11 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        r8[1] = $r30;

        $r29 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        r8[2] = $r29;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30016, r8);

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mBadProcesses>;

        $r32 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i12 = r2.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke $r31.<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>($r32, $i12);

        if r5 == null goto label09;

        r5.<com.android.server.am.ProcessRecord: boolean bad> = 0;

     label09:
        if r5 != null goto label13;

        r5 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean)>(r2, r1, z2);

        if r5 != null goto label10;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed making new process record for ");

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i4 = r2.<android.content.pm.ApplicationInfo: int uid>;

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isolated=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r20);

        return null;

     label10:
        $r12 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $i2 = r5.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r12.<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>(r1, $i2, r5);

        if z2 == 0 goto label11;

        $r15 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mIsolatedProcesses>;

        $i3 = r5.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r5);

     label11:
        $z5 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z5 != 0 goto label14;

        $z6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>(r2);

        if $z6 != 0 goto label14;

        if z1 != 0 goto label14;

        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        $z7 = virtualinvoke $r10.<java.util.ArrayList: boolean contains(java.lang.Object)>(r5);

        if $z7 != 0 goto label12;

        $r11 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mProcessesOnHold>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label12:
        return r5;

     label13:
        $r9 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        virtualinvoke r5.<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,com.android.server.am.ProcessStatsService)>($r9, $r7);

        goto label11;

     label14:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>(r5, r3, r6);

        $i1 = r5.<com.android.server.am.ProcessRecord: int pid>;

        if $i1 == 0 goto label15;

        return r5;

     label15:
        return null;
    }

    public final void startRunning(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.String r1, r2, r3, r4;
        java.lang.Throwable r5, $r8;
        android.content.ComponentName r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        entermonitor r0;

     label01:
        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning>;

        if $z0 == 0 goto label03;

        exitmonitor r0;

     label02:
        return;

     label03:
        r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning> = 1;

     label04:
        if r1 == null goto label13;

        if r2 == null goto label13;

     label05:
        $r7 = new android.content.ComponentName;

        specialinvoke $r7.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r6 = $r7;

     label06:
        r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent> = r6;

     label07:
        if r3 == null goto label14;

     label08:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = r3;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData> = r4;

        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z1 != 0 goto label15;

        exitmonitor r0;

     label09:
        return;

     label10:
        $r8 := @caughtexception;

        r5 = $r8;

     label11:
        exitmonitor r0;

     label12:
        throw r5;

     label13:
        r6 = null;

        goto label06;

     label14:
        r3 = "android.intent.action.MAIN";

        goto label08;

     label15:
        exitmonitor r0;

     label16:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>(null);

        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
    }

    public android.content.ComponentName startService(android.app.IApplicationThread, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3;
        int i0, i1, i2;
        java.lang.Throwable r4, $r8;
        long l3;
        android.content.ComponentName r5;
        com.android.server.am.ActiveServices $r6;
        java.lang.IllegalArgumentException $r7;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("startService");

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r7;

     label1:
        entermonitor r0;

     label2:
        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r5 = virtualinvoke $r6.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int)>(r1, r2, r3, i1, i2, i0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        exitmonitor r0;

     label3:
        return r5;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        exitmonitor r0;

     label6:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    android.content.ComponentName startServiceInPackage(int, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1;
        android.content.Intent r1;
        java.lang.String r2;
        java.lang.Throwable r3, $r6;
        long l2;
        android.content.ComponentName r4;
        com.android.server.am.ActiveServices $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        r4 = virtualinvoke $r5.<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,int)>(null, r1, r2, -1, i0, i1);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r0;

     label2:
        return r4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r0;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void startSetupActivityLocked()
    {
        com.android.server.am.ActivityManagerService r0, $r8;
        android.content.ContentResolver r1;
        android.content.Intent r2, $r9;
        java.util.List r3;
        int i0, i1, i2, $i3, $i4, $i6, $i7;
        android.content.pm.ResolveInfo r4, $r32;
        java.lang.String r5, r6, $r17, $r21;
        boolean $z0, $z1;
        android.content.Context $r7, $r11;
        android.content.pm.PackageManager $r10;
        android.content.pm.ActivityInfo $r12, $r15, $r18, $r19, $r25, $r27, $r29, $r31;
        android.os.Bundle $r13, $r24, $r26, $r30;
        android.content.ComponentName $r16;
        com.android.server.am.ActivityStackSupervisor $r20;
        android.content.pm.ApplicationInfo $r23, $r28, $r35;
        java.lang.Object $r33, $r34;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mCheckedForSetup>;

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r7 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i4 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i4 == 1 goto label1;

        $i3 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "device_provisioned", 0);

        if $i3 == 0 goto label1;

        r0.<com.android.server.am.ActivityManagerService: boolean mCheckedForSetup> = 1;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.UPGRADE_SETUP");

        r2 = $r9;

        $r8 = <com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService mSelf>;

        $r11 = $r8.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r11.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke $r10.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r2, 128);

        i0 = 0;

     label3:
        r4 = null;

        if r3 == null goto label4;

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

        i2 = i0;

        r4 = null;

        if i2 >= i1 goto label4;

        $r33 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r32 = (android.content.pm.ResolveInfo) $r33;

        $r31 = $r32.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r35 = $r31.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i7 = $r35.<android.content.pm.ApplicationInfo: int flags>;

        $i6 = 1 & $i7;

        if $i6 == 0 goto label7;

        $r34 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (android.content.pm.ResolveInfo) $r34;

     label4:
        if r4 == null goto label1;

        $r12 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = $r12.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r13 == null goto label8;

        $r29 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r30 = $r29.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r5 = virtualinvoke $r30.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.SETUP_VERSION");

     label5:
        if r5 != null goto label6;

        $r25 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r23 = $r25.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = $r23.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r24 == null goto label6;

        $r27 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r28 = $r27.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r26 = $r28.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        r5 = virtualinvoke $r26.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.SETUP_VERSION");

     label6:
        r6 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "last_setup_shown");

        if r5 == null goto label1;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 != 0 goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r16 = new android.content.ComponentName;

        $r15 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r21 = $r15.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r18 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r17 = $r18.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r16.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r21, $r17);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r16);

        $r20 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r19 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        virtualinvoke $r20.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[])>(null, r2, null, $r19, null, null, 0, 0, 0, null, 0, null, 0, null);

        return;

     label7:
        i0 = i0 + 1;

        goto label3;

     label8:
        r5 = null;

        goto label5;
    }

    public void stopAppSwitches()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r7;
        android.os.Message r2;
        int $i0;
        long $l1, $l2;
        android.os.Handler $r3, $r4, $r5;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.STOP_APP_SWITCHES");

        if $i0 == 0 goto label1;

        $r6 = new java.lang.SecurityException;

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.STOP_APP_SWITCHES");

        throw $r6;

     label1:
        entermonitor r0;

     label2:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = 5000L + $l1;

        r0.<com.android.server.am.ActivityManagerService: long mAppSwitchesAllowedTime> = $l2;

        r0.<com.android.server.am.ActivityManagerService: boolean mDidAppSwitch> = 0;

        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(21);

        $r4 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(21);

        $r5 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 5000L);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int stopService(android.app.IApplicationThread, android.content.Intent, java.lang.String, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2;
        java.lang.String r3;
        int i0, i1;
        java.lang.Throwable r4, $r7;
        com.android.server.am.ActiveServices $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("stopService");

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z0 != 1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r6;

     label1:
        entermonitor r0;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        i1 = virtualinvoke $r5.<com.android.server.am.ActiveServices: int stopServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>(r1, r2, r3, i0);

        exitmonitor r0;

     label3:
        return i1;

     label4:
        $r7 := @caughtexception;

        r4 = $r7;

     label5:
        exitmonitor r0;

     label6:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean stopServiceToken(android.content.ComponentName, android.os.IBinder, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        int i0;
        java.lang.Throwable r3, $r5;
        boolean z0;
        com.android.server.am.ActiveServices $r4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        z0 = virtualinvoke $r4.<com.android.server.am.ActiveServices: boolean stopServiceTokenLocked(android.content.ComponentName,android.os.IBinder,int)>(r1, r2, i0);

        exitmonitor r0;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r0;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int stopUser(int, android.app.IStopUserCallback)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        android.app.IStopUserCallback r1;
        java.lang.Throwable r2, $r16;
        java.lang.String r3, $r8;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.SecurityException $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.IStopUserCallback;

        $i2 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i2 == 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: switchUser() from pid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r17 = new java.lang.SecurityException;

        specialinvoke $r17.<java.lang.SecurityException: void <init>(java.lang.String)>(r3);

        throw $r17;

     label1:
        if i0 > 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t stop primary user ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        entermonitor r0;

     label3:
        i1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int stopUserLocked(int,android.app.IStopUserCallback)>(i0, r1);

        exitmonitor r0;

     label4:
        return i1;

     label5:
        $r16 := @caughtexception;

        r2 = $r16;

     label6:
        exitmonitor r0;

     label7:
        throw r2;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean switchUser(int)
    {
        com.android.server.am.ActivityManagerService r0;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i16, $i17;
        long l1;
        java.lang.Throwable r1, r2, $r54, $r55;
        android.content.pm.UserInfo r3;
        boolean z0, z1, $z6;
        java.lang.Object r4, $r20;
        java.lang.Integer r5;
        com.android.server.am.UserStartedState r6, r63;
        android.content.Intent r7, r8, r9, r64, r65, r67;
        java.lang.String r10, $r45;
        com.android.server.pm.UserManagerService $r11, $r33, $r34;
        android.util.SparseArray $r12, $r17, $r47;
        com.android.server.wm.WindowManagerService $r13, $r16, $r18;
        java.util.ArrayList $r14, $r15;
        android.os.Handler $r19, $r22, $r23, $r24, $r26, $r27;
        android.os.Message $r21, $r25;
        com.android.server.am.ActivityStackSupervisor $r28, $r32;
        java.lang.StringBuilder $r44, $r46, $r49, $r50, $r51, $r52, $r57, $r58, r59, r61;
        java.lang.SecurityException r60;
        android.os.UserHandle r62;
        com.android.server.am.ActivityManagerService$21 r66;
        com.android.server.am.ActivityManagerService$22 r68;
        android.content.IIntentReceiver r69, r70;

        r0 := @this: com.android.server.am.ActivityManagerService;

        i0 := @parameter0: int;

        $i3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i3 == 0 goto label01;

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: switchUser() from pid=");

        $i17 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i16 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r58 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        r10 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r10);

        r60 = new java.lang.SecurityException;

        specialinvoke r60.<java.lang.SecurityException: void <init>(java.lang.String)>(r10);

        throw r60;

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        entermonitor r0;

     label03:
        i2 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

     label04:
        if i2 != i0 goto label07;

        z0 = 1;

     label05:
        exitmonitor r0;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label07:
        $r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        r3 = virtualinvoke $r11.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>(i0);

     label08:
        if r3 != null goto label15;

     label09:
        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No user info for user #");

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r45);

        exitmonitor r0;

     label10:
        z0 = 0;

        goto label06;

     label11:
        $r54 := @caughtexception;

        r2 = $r54;

     label12:
        exitmonitor r0;

     label13:
        throw r2;

     label14:
        $r55 := @caughtexception;

        r1 = $r55;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

     label15:
        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r13.<com.android.server.wm.WindowManagerService: void startFreezingScreen(int,int)>(17432653, 17432652);

        $r12 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        r4 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i0);

     label16:
        z1 = 0;

        if r4 != null goto label19;

     label17:
        $r47 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        r63 = new com.android.server.am.UserStartedState;

        r62 = new android.os.UserHandle;

        specialinvoke r62.<android.os.UserHandle: void <init>(int)>(i0);

        specialinvoke r63.<com.android.server.am.UserStartedState: void <init>(android.os.UserHandle,boolean)>(r62, 0);

        virtualinvoke $r47.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r63);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

     label18:
        z1 = 1;

     label19:
        r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId> = i0;

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        virtualinvoke $r15.<java.util.ArrayList: boolean remove(java.lang.Object)>(r5);

        $r14 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mUserLru>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r18.<com.android.server.wm.WindowManagerService: void setCurrentUser(int)>(i0);

        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r16.<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>(null);

        $r17 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $r20 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r6 = (com.android.server.am.UserStartedState) $r20;

        $i5 = r6.<com.android.server.am.UserStartedState: int mState>;

        if $i5 != 2 goto label33;

        r6.<com.android.server.am.UserStartedState: int mState> = 1;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

     label20:
        z1 = 1;

     label21:
        $r19 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r19.<android.os.Handler: void removeMessages(int)>(34);

        $r24 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r24.<android.os.Handler: void removeMessages(int)>(36);

        $r22 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r23 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r21 = virtualinvoke $r23.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(34, i2, i0, r6);

        virtualinvoke $r22.<android.os.Handler: boolean sendMessage(android.os.Message)>($r21);

        $r26 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r27 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r25 = virtualinvoke $r27.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(36, i2, i0, r6);

        virtualinvoke $r26.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r25, 2000L);

     label22:
        if z1 == 0 goto label24;

     label23:
        r64 = new android.content.Intent;

        specialinvoke r64.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTED");

        r7 = r64;

        virtualinvoke r7.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $i13 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r7, null, null, 0, null, null, null, -1, 0, 0, $i13, 1000, i0);

     label24:
        $i7 = r3.<android.content.pm.UserInfo: int flags>;

        $i6 = 16 & $i7;

        if $i6 != 0 goto label27;

     label25:
        if i0 == 0 goto label35;

     label26:
        r65 = new android.content.Intent;

        specialinvoke r65.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_INITIALIZE");

        r8 = r65;

        virtualinvoke r8.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        r66 = new com.android.server.am.ActivityManagerService$21;

        specialinvoke r66.<com.android.server.am.ActivityManagerService$21: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.UserStartedState,int)>(r0, r6, i0);

        $i10 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r69 = (android.content.IIntentReceiver) r66;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r8, null, r69, 0, null, null, null, -1, 1, 0, $i10, 1000, i0);

        r6.<com.android.server.am.UserStartedState: boolean initializing> = 1;

     label27:
        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z6 = virtualinvoke $r28.<com.android.server.am.ActivityStackSupervisor: boolean switchUserLocked(int,com.android.server.am.UserStartedState)>(i0, r6);

        if $z6 == 0 goto label37;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean startHomeActivityLocked(int)>(i0);

     label28:
        staticinvoke <com.android.server.am.EventLogTags: void writeAmSwitchUser(int)>(i0);

        $r33 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        virtualinvoke $r33.<com.android.server.pm.UserManagerService: void userForeground(int)>(i0);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendUserSwitchBroadcastsLocked(int,int)>(i2, i0);

     label29:
        if z1 == 0 goto label31;

     label30:
        r67 = new android.content.Intent;

        specialinvoke r67.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTING");

        r9 = r67;

        virtualinvoke r9.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        virtualinvoke r9.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        r68 = new com.android.server.am.ActivityManagerService$22;

        specialinvoke r68.<com.android.server.am.ActivityManagerService$22: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $i8 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r70 = (android.content.IIntentReceiver) r68;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r9, null, r70, 0, null, null, "android.permission.INTERACT_ACROSS_USERS", -1, 1, 0, $i8, 1000, -1);

     label31:
        exitmonitor r0;

     label32:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return 1;

     label33:
        $i4 = r6.<com.android.server.am.UserStartedState: int mState>;

        if $i4 != 3 goto label21;

        r6.<com.android.server.am.UserStartedState: int mState> = 0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateStartedUserArrayLocked()>();

     label34:
        z1 = 1;

        goto label21;

     label35:
        $r34 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>();

        $i11 = r3.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r34.<com.android.server.pm.UserManagerService: void makeInitialized(int)>($i11);

     label36:
        goto label27;

     label37:
        $r32 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r32.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label38:
        goto label28;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label17 to label18 with label11;
        catch java.lang.Throwable from label19 to label20 with label11;
        catch java.lang.Throwable from label21 to label22 with label11;
        catch java.lang.Throwable from label23 to label24 with label11;
        catch java.lang.Throwable from label24 to label25 with label11;
        catch java.lang.Throwable from label26 to label27 with label11;
        catch java.lang.Throwable from label27 to label28 with label11;
        catch java.lang.Throwable from label28 to label29 with label11;
        catch java.lang.Throwable from label30 to label31 with label11;
        catch java.lang.Throwable from label31 to label32 with label11;
        catch java.lang.Throwable from label33 to label34 with label11;
        catch java.lang.Throwable from label35 to label36 with label11;
        catch java.lang.Throwable from label37 to label38 with label11;
    }

    public void systemReady(java.lang.Runnable)
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Runnable r1;
        java.lang.Throwable r2, r4, r6, r7, r8, r9, r12, $r103, $r104, $r107, $r108, $r109, $r112, $r113, $r114;
        android.util.SparseArray r3, $r39, $r76;
        int i0, i1, i2, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, $i20, $i22, $i23, $i24, $i25, $i27, $i29, $i30, $i31, $i32, $i34, $i36, $i37, $i38, $i39, $i41, $i42, $i43;
        java.util.ArrayList r5, r27, r29, r30, r116, r121;
        long l3, $l19;
        android.content.Intent r11, r13, r26, r115, r123, r125, r126;
        android.os.Message r14, r22;
        android.content.pm.ApplicationInfo r16, r21, $r69, $r95;
        java.util.List r17, r28, r38;
        java.lang.CharSequence r18;
        android.content.pm.ActivityInfo r19, r32, r35, $r94;
        android.content.pm.ResolveInfo r20, $r80, $r93, $r97;
        com.android.server.am.ProcessRecord r23, r24;
        android.content.ComponentName r31, r33, $r89, r117, r118, r124;
        int[] r34;
        com.android.server.am.ActivityManagerService$13 r36, r119;
        boolean $z0, $z1, $z2, $z3, $z6, $z9, $z10, $z12, $z14;
        com.android.server.AppOpsService $r37;
        android.content.pm.IPackageManager $r40, $r56, $r70;
        com.android.server.am.ActivityStackSupervisor $r48;
        android.content.Context $r49, $r53, $r66;
        android.content.pm.PackageManager $r52;
        android.content.res.Resources $r54, $r67;
        android.os.Handler $r55, $r65;
        java.lang.Object $r57, $r62, $r75, $r77, $r92, $r102;
        java.lang.String $r58, $r60, $r61, $r72, $r78, $r79, $r84, $r99, $r100;
        android.os.Bundle $r64;
        java.lang.StringBuilder $r73, $r74, $r85, $r86, $r87, $r90, r120, r122;
        android.os.RemoteException $r105, $r106, $r110;
        com.android.server.am.ActivityManagerService$14 r127;
        android.content.IIntentReceiver r128, r129;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: java.lang.Runnable;

        entermonitor r0;

     label001:
        $z2 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        if $z2 == 0 goto label006;

     label002:
        if r1 == null goto label004;

     label003:
        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label004:
        exitmonitor r0;

     label005:
        return;

     label006:
        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mDidUpdate>;

        if $z1 != 0 goto label047;

        $z10 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate>;

        if $z10 == 0 goto label011;

        exitmonitor r0;

     label007:
        return;

     label008:
        $r103 := @caughtexception;

        r2 = $r103;

     label009:
        exitmonitor r0;

     label010:
        throw r2;

     label011:
        r115 = new android.content.Intent;

        specialinvoke r115.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PRE_BOOT_COMPLETED");

        r26 = r115;

     label012:
        $r70 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r38 = interfaceinvoke $r70.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r26, null, 0, 0);

     label013:
        r28 = r38;

     label014:
        if r28 == null goto label044;

     label015:
        $i34 = interfaceinvoke r28.<java.util.List: int size()>();

        i7 = -1 + $i34;

     label016:
        if i7 < 0 goto label019;

     label017:
        $r92 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(i7);

        $r93 = (android.content.pm.ResolveInfo) $r92;

        $r94 = $r93.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r95 = $r94.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i43 = $r95.<android.content.pm.ApplicationInfo: int flags>;

        $i42 = 1 & $i43;

        if $i42 != 0 goto label121;

        interfaceinvoke r28.<java.util.List: java.lang.Object remove(int)>(i7);

     label018:
        goto label121;

     label019:
        virtualinvoke r26.<android.content.Intent: android.content.Intent addFlags(int)>(33554432);

        r30 = staticinvoke <com.android.server.am.ActivityManagerService: java.util.ArrayList readLastDonePreBootReceivers()>();

        r116 = new java.util.ArrayList;

        specialinvoke r116.<java.util.ArrayList: void <init>()>();

        r29 = r116;

     label020:
        i9 = 0;

     label021:
        i8 = interfaceinvoke r28.<java.util.List: int size()>();

     label022:
        if i9 >= i8 goto label027;

     label023:
        $r102 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(i9);

        $r97 = (android.content.pm.ResolveInfo) $r102;

        r32 = $r97.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r117 = new android.content.ComponentName;

        $r100 = r32.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r99 = r32.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r117.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r100, $r99);

        r31 = r117;

        $z14 = virtualinvoke r30.<java.util.ArrayList: boolean contains(java.lang.Object)>(r31);

        if $z14 == 0 goto label122;

        interfaceinvoke r28.<java.util.List: java.lang.Object remove(int)>(i9);

     label024:
        i9 = i9 + -1;

     label025:
        virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>(r31);

     label026:
        goto label122;

     label027:
        r34 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>();

     label028:
        i11 = 0;

     label029:
        i12 = interfaceinvoke r28.<java.util.List: int size()>();

     label030:
        if i11 >= i12 goto label044;

     label031:
        $r77 = interfaceinvoke r28.<java.util.List: java.lang.Object get(int)>(i11);

        $r80 = (android.content.pm.ResolveInfo) $r77;

        r35 = $r80.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r118 = new android.content.ComponentName;

        $r79 = r35.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r78 = r35.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r118.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r79, $r78);

        r33 = r118;

        virtualinvoke r29.<java.util.ArrayList: boolean add(java.lang.Object)>(r33);

        virtualinvoke r26.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r33);

     label032:
        i10 = 0;

     label033:
        i15 = lengthof r34;

     label034:
        if i10 >= i15 goto label124;

     label035:
        $i39 = interfaceinvoke r28.<java.util.List: int size()>();

        i16 = -1 + $i39;

     label036:
        i17 = i11;

        r36 = null;

        if i17 != i16 goto label040;

     label037:
        $i41 = lengthof r34;

        i13 = -1 + $i41;

     label038:
        i14 = i10;

        r36 = null;

        if i14 != i13 goto label040;

     label039:
        r119 = new com.android.server.am.ActivityManagerService$13;

        specialinvoke r119.<com.android.server.am.ActivityManagerService$13: void <init>(com.android.server.am.ActivityManagerService,java.util.ArrayList,java.lang.Runnable)>(r0, r29, r1);

        r36 = r119;

     label040:
        r120 = new java.lang.StringBuilder;

        specialinvoke r120.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending system update to ");

        $r89 = virtualinvoke r26.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r86 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89);

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $i38 = r34[i10];

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r84 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r84);

        $i36 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i37 = r34[i10];

        r128 = (android.content.IIntentReceiver) r36;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r26, null, r128, 0, null, null, null, -1, 1, 0, $i36, 1000, $i37);

     label041:
        if r36 == null goto label123;

     label042:
        r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate> = 1;

     label043:
        goto label123;

     label044:
        $z12 = r0.<com.android.server.am.ActivityManagerService: boolean mWaitingUpdate>;

        if $z12 == 0 goto label046;

        exitmonitor r0;

     label045:
        return;

     label046:
        r0.<com.android.server.am.ActivityManagerService: boolean mDidUpdate> = 1;

     label047:
        $r37 = r0.<com.android.server.am.ActivityManagerService: com.android.server.AppOpsService mAppOpsService>;

        virtualinvoke $r37.<com.android.server.AppOpsService: void systemReady()>();

        r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady> = 1;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mStartRunning>;

        if $z0 != 0 goto label049;

        exitmonitor r0;

     label048:
        return;

     label049:
        exitmonitor r0;

     label050:
        r3 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r3;

     label051:
        $r39 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        i0 = virtualinvoke $r39.<android.util.SparseArray: int size()>();

     label052:
        i1 = i0 - 1;

        r5 = null;

     label053:
        if i1 < 0 goto label059;

     label054:
        $r76 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r75 = virtualinvoke $r76.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r23 = (com.android.server.am.ProcessRecord) $r75;

        $r69 = r23.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $z9 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>($r69);

        if $z9 != 0 goto label120;

     label055:
        if r5 != null goto label119;

     label056:
        r121 = new java.util.ArrayList;

        specialinvoke r121.<java.util.ArrayList: void <init>()>();

        r27 = r121;

     label057:
        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>(r23);

     label058:
        i1 = i1 + -1;

        r5 = r27;

        goto label053;

     label059:
        exitmonitor r3;

     label060:
        entermonitor r0;

        if r5 == null goto label068;

     label061:
        $i30 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i6 = -1 + $i30;

     label062:
        if i6 < 0 goto label068;

     label063:
        $r62 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r24 = (com.android.server.am.ProcessRecord) $r62;

        r122 = new java.lang.StringBuilder;

        specialinvoke r122.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing system update proc: ");

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r72);

        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>(r24, 1, 0, "system update done");

     label064:
        i6 = i6 + -1;

        goto label062;

     label065:
        $r104 := @caughtexception;

        r4 = $r104;

     label066:
        exitmonitor r3;

     label067:
        throw r4;

     label068:
        r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady> = 1;

        exitmonitor r0;

     label069:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", "System now ready");

        $l19 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3040, $l19);

        entermonitor r0;

     label070:
        $i20 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

        if $i20 != 1 goto label075;

        $r49 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r52 = virtualinvoke $r49.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r123 = new android.content.Intent;

        specialinvoke r123.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.FACTORY_TEST");

        r20 = virtualinvoke $r52.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r123, 1024);

     label071:
        r18 = null;

        if r20 == null goto label096;

     label072:
        r19 = r20.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r21 = r19.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i31 = r21.<android.content.pm.ApplicationInfo: int flags>;

        $i32 = 1 & $i31;

        if $i32 == 0 goto label094;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = "android.intent.action.FACTORY_TEST";

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData> = null;

        r124 = new android.content.ComponentName;

        $r61 = r21.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r60 = r19.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke r124.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r61, $r60);

        r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent> = r124;

     label073:
        if r18 == null goto label075;

     label074:
        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopAction> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mTopData> = null;

        r0.<com.android.server.am.ActivityManagerService: android.content.ComponentName mTopComponent> = null;

        r22 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r22.<android.os.Message: int what> = 3;

        $r64 = virtualinvoke r22.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r64.<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>("msg", r18);

        $r65 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r65.<android.os.Handler: boolean sendMessage(android.os.Message)>(r22);

     label075:
        exitmonitor r0;

     label076:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void retrieveSettings()>();

        entermonitor r0;

     label077:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void readGrantedUriPermissionsLocked()>();

        exitmonitor r0;

     label078:
        if r1 == null goto label079;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label079:
        entermonitor r0;

     label080:
        i2 = r0.<com.android.server.am.ActivityManagerService: int mFactoryTest>;

     label081:
        if i2 == 1 goto label105;

     label082:
        $r56 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r17 = interfaceinvoke $r56.<android.content.pm.IPackageManager: java.util.List getPersistentApplications(int)>(1024);

     label083:
        if r17 == null goto label105;

     label084:
        i5 = interfaceinvoke r17.<java.util.List: int size()>();

     label085:
        i4 = 0;

     label086:
        if i4 >= i5 goto label105;

     label087:
        $r57 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(i4);

        r16 = (android.content.pm.ApplicationInfo) $r57;

     label088:
        if r16 == null goto label090;

     label089:
        $r58 = r16.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z6 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>("android");

        if $z6 != 0 goto label090;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean)>(r16, 0);

     label090:
        i4 = i4 + 1;

        goto label086;

     label091:
        $r108 := @caughtexception;

        r6 = $r108;

     label092:
        exitmonitor r0;

     label093:
        throw r6;

     label094:
        $r66 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r67 = virtualinvoke $r66.<android.content.Context: android.content.res.Resources getResources()>();

        r18 = virtualinvoke $r67.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040224);

     label095:
        goto label073;

     label096:
        $r53 = r0.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        $r54 = virtualinvoke $r53.<android.content.Context: android.content.res.Resources getResources()>();

        r18 = virtualinvoke $r54.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040225);

     label097:
        goto label073;

     label098:
        $r113 := @caughtexception;

        r7 = $r113;

     label099:
        exitmonitor r0;

     label100:
        throw r7;

     label101:
        $r107 := @caughtexception;

        r8 = $r107;

     label102:
        exitmonitor r0;

     label103:
        throw r8;

     label104:
        $r105 := @caughtexception;

     label105:
        r0.<com.android.server.am.ActivityManagerService: boolean mBooting> = 1;

     label106:
        $r40 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $z3 = interfaceinvoke $r40.<android.content.pm.IPackageManager: boolean hasSystemUidErrors()>();

        if $z3 == 0 goto label107;

        r14 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r14.<android.os.Message: int what> = 14;

        $r55 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r55.<android.os.Handler: boolean sendMessage(android.os.Message)>(r14);

     label107:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label108:
        r125 = new android.content.Intent;

        specialinvoke r125.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTED");

        r11 = r125;

        virtualinvoke r11.<android.content.Intent: android.content.Intent addFlags(int)>(1342177280);

        $i24 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke r11.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i24);

        $i23 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        $i22 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r11, null, null, 0, null, null, null, -1, 0, 0, $i23, 1000, $i22);

        r126 = new android.content.Intent;

        specialinvoke r126.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_STARTING");

        r13 = r126;

        virtualinvoke r13.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $i25 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke r13.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i25);

        r127 = new com.android.server.am.ActivityManagerService$14;

        specialinvoke r127.<com.android.server.am.ActivityManagerService$14: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        $i29 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        r129 = (android.content.IIntentReceiver) r127;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r13, null, r129, 0, null, null, "android.permission.INTERACT_ACROSS_USERS", -1, 1, 0, $i29, 1000, -1);

     label109:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        $r48 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r48.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        $i27 = r0.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendUserSwitchBroadcastsLocked(int,int)>(-1, $i27);

        exitmonitor r0;

     label110:
        return;

     label111:
        $r112 := @caughtexception;

        r9 = $r112;

     label112:
        exitmonitor r0;

     label113:
        throw r9;

     label114:
        $r114 := @caughtexception;

        r12 = $r114;

     label115:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r12;

     label116:
        $r110 := @caughtexception;

        goto label107;

     label117:
        $r109 := @caughtexception;

        r4 = $r109;

        goto label066;

     label118:
        $r106 := @caughtexception;

        r28 = null;

        goto label014;

     label119:
        r27 = r5;

        goto label057;

     label120:
        r27 = r5;

        goto label058;

     label121:
        i7 = i7 + -1;

        goto label016;

     label122:
        i9 = i9 + 1;

        goto label021;

     label123:
        i10 = i10 + 1;

        goto label033;

     label124:
        i11 = i11 + 1;

        goto label029;

        catch java.lang.Throwable from label001 to label002 with label008;
        catch java.lang.Throwable from label003 to label004 with label008;
        catch java.lang.Throwable from label004 to label005 with label008;
        catch java.lang.Throwable from label006 to label007 with label008;
        catch java.lang.Throwable from label009 to label010 with label008;
        catch java.lang.Throwable from label011 to label012 with label008;
        catch android.os.RemoteException from label012 to label013 with label118;
        catch java.lang.Throwable from label012 to label013 with label008;
        catch java.lang.Throwable from label015 to label016 with label008;
        catch java.lang.Throwable from label017 to label018 with label008;
        catch java.lang.Throwable from label019 to label020 with label008;
        catch java.lang.Throwable from label021 to label022 with label008;
        catch java.lang.Throwable from label023 to label024 with label008;
        catch java.lang.Throwable from label025 to label026 with label008;
        catch java.lang.Throwable from label027 to label028 with label008;
        catch java.lang.Throwable from label029 to label030 with label008;
        catch java.lang.Throwable from label031 to label032 with label008;
        catch java.lang.Throwable from label033 to label034 with label008;
        catch java.lang.Throwable from label035 to label036 with label008;
        catch java.lang.Throwable from label037 to label038 with label008;
        catch java.lang.Throwable from label039 to label040 with label008;
        catch java.lang.Throwable from label040 to label041 with label008;
        catch java.lang.Throwable from label042 to label043 with label008;
        catch java.lang.Throwable from label044 to label045 with label008;
        catch java.lang.Throwable from label046 to label047 with label008;
        catch java.lang.Throwable from label047 to label048 with label008;
        catch java.lang.Throwable from label049 to label050 with label008;
        catch java.lang.Throwable from label051 to label052 with label065;
        catch java.lang.Throwable from label054 to label055 with label117;
        catch java.lang.Throwable from label056 to label057 with label117;
        catch java.lang.Throwable from label057 to label058 with label065;
        catch java.lang.Throwable from label059 to label060 with label117;
        catch java.lang.Throwable from label061 to label062 with label091;
        catch java.lang.Throwable from label063 to label064 with label091;
        catch java.lang.Throwable from label066 to label067 with label065;
        catch java.lang.Throwable from label068 to label069 with label091;
        catch java.lang.Throwable from label070 to label071 with label098;
        catch java.lang.Throwable from label072 to label073 with label098;
        catch java.lang.Throwable from label074 to label075 with label098;
        catch java.lang.Throwable from label075 to label076 with label098;
        catch java.lang.Throwable from label077 to label078 with label101;
        catch java.lang.Throwable from label080 to label081 with label111;
        catch android.os.RemoteException from label082 to label083 with label104;
        catch java.lang.Throwable from label082 to label083 with label111;
        catch android.os.RemoteException from label084 to label085 with label104;
        catch java.lang.Throwable from label084 to label085 with label111;
        catch android.os.RemoteException from label087 to label088 with label104;
        catch java.lang.Throwable from label087 to label088 with label111;
        catch android.os.RemoteException from label089 to label090 with label104;
        catch java.lang.Throwable from label089 to label090 with label111;
        catch java.lang.Throwable from label092 to label093 with label091;
        catch java.lang.Throwable from label094 to label095 with label098;
        catch java.lang.Throwable from label096 to label097 with label098;
        catch java.lang.Throwable from label099 to label100 with label098;
        catch java.lang.Throwable from label102 to label103 with label101;
        catch java.lang.Throwable from label105 to label106 with label111;
        catch android.os.RemoteException from label106 to label107 with label116;
        catch java.lang.Throwable from label106 to label107 with label111;
        catch java.lang.Throwable from label107 to label108 with label111;
        catch java.lang.Throwable from label108 to label109 with label114;
        catch java.lang.Throwable from label109 to label110 with label111;
        catch java.lang.Throwable from label112 to label113 with label111;
        catch java.lang.Throwable from label115 to label116 with label111;
    }

    public void takePersistableUriPermission(android.net.Uri, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.net.Uri r1;
        int i0, i1;
        java.lang.Throwable r2, $r11;
        com.android.server.am.UriPermission r3;
        boolean $z0, $z1, $z2;
        java.lang.SecurityException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10, $r12;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>("takePersistableUriPermission");

        staticinvoke <com.android.internal.util.Preconditions: void checkFlagsArgument(int,int)>(i0, 3);

        entermonitor r0;

     label1:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UriPermission findUriPermissionLocked(int,android.net.Uri)>(i1, r1);

     label2:
        if r3 != null goto label7;

     label3:
        $r4 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No permission grant found for UID ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and Uri ");

        $r10 = virtualinvoke r1.<android.net.Uri: java.lang.String toSafeString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

     label5:
        exitmonitor r0;

     label6:
        throw r2;

     label7:
        $z0 = virtualinvoke r3.<com.android.server.am.UriPermission: boolean takePersistableModes(int)>(i0);

        $z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean maybePrunePersistedUriGrantsLocked(int)>(i1);

        $z2 = $z0 | $z1;

        if $z2 == 0 goto label8;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void schedulePersistUriGrants()>();

     label8:
        exitmonitor r0;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    public boolean targetTaskAffinityMatchesActivity(android.os.IBinder, java.lang.String)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2, $r5, $r7;
        com.android.server.am.ActivityRecord r3;
        com.android.server.am.TaskRecord $r4, $r6;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r3 == null goto label1;

        $r4 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r5 = $r4.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        if $r5 == null goto label1;

        $r6 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r7 = $r6.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean testIsSystemReady()
    {
        com.android.server.am.ActivityManagerService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mSystemReady>;

        return $z0;
    }

    void timeoutUserSwitch(com.android.server.am.UserStartedState, int, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0, i1;
        java.lang.Throwable r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        entermonitor r0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User switch timeout: from ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void sendContinueUserSwitchLocked(com.android.server.am.UserStartedState,int,int)>(r1, i0, i1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    final void trimApplications()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r30;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11;
        com.android.server.am.ProcessRecord r2;
        java.lang.StringBuilder r3, $r13, $r15, $r16, $r18, $r19;
        android.os.IBinder r4;
        java.lang.Object[] r6;
        java.util.ArrayList $r7, $r9, $r10, $r22;
        java.lang.Object $r8;
        android.util.ArraySet $r11;
        com.android.server.am.BroadcastRecord $r12;
        java.lang.String $r14, $r21, $r27;
        android.app.IApplicationThread $r17, $r20, $r31;
        boolean $z0, $z1;
        android.content.pm.ApplicationInfo $r24;
        java.lang.Integer $r26, $r28, $r29;
        java.lang.Exception $r32;

        r0 := @this: com.android.server.am.ActivityManagerService;

        entermonitor r0;

     label01:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label02:
        if i0 < 0 goto label11;

     label03:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.ProcessRecord) $r8;

        $r10 = r2.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i2 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label06;

        $r12 = r2.<com.android.server.am.ProcessRecord: com.android.server.am.BroadcastRecord curReceiver>;

        if $r12 != null goto label06;

        $r11 = r2.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i3 = virtualinvoke $r11.<android.util.ArraySet: int size()>();

        if $i3 != 0 goto label06;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exiting empty application process ");

        $r14 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r17 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r17 == null goto label07;

        $r31 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        r4 = interfaceinvoke $r31.<android.app.IApplicationThread: android.os.IBinder asBinder()>();

     label04:
        $r19 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        $i4 = r2.<com.android.server.am.ProcessRecord: int pid>;

        if $i4 <= 0 goto label08;

        $i7 = r2.<com.android.server.am.ProcessRecord: int pid>;

        $i6 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        if $i7 == $i6 goto label08;

        r6 = newarray (java.lang.Object)[5];

        $i9 = r2.<com.android.server.am.ProcessRecord: int userId>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        r6[0] = $r26;

        $i8 = r2.<com.android.server.am.ProcessRecord: int pid>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        r6[1] = $r28;

        $r27 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r6[2] = $r27;

        $i10 = r2.<com.android.server.am.ProcessRecord: int setAdj>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        r6[3] = $r29;

        r6[4] = "empty";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30023, r6);

        r2.<com.android.server.am.ProcessRecord: boolean killedByAm> = 1;

        $i11 = r2.<com.android.server.am.ProcessRecord: int pid>;

        staticinvoke <android.os.Process: void killProcessQuiet(int)>($i11);

     label05:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int)>(r2, 0, 1, -1);

        $r22 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRemovedProcesses>;

        virtualinvoke $r22.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $z0 = r2.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label06;

        $z1 = r2.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z1 == 0 goto label06;

        $r24 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean)>($r24, 0);

     label06:
        i0 = i0 + -1;

        goto label02;

     label07:
        r4 = null;

        goto label04;

     label08:
        $r20 = r2.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r20.<android.app.IApplicationThread: void scheduleExit()>();

     label09:
        goto label05;

     label10:
        $r32 := @caughtexception;

        goto label05;

     label11:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        exitmonitor r0;

     label12:
        return;

     label13:
        $r30 := @caughtexception;

        r1 = $r30;

     label14:
        exitmonitor r0;

     label15:
        throw r1;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void unbindBackupAgent(android.content.pm.ApplicationInfo)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.Throwable r2, r3, $r19, $r20;
        com.android.server.am.ProcessRecord r4;
        android.app.IApplicationThread r5, $r12;
        java.lang.Exception r6, $r18;
        java.lang.String $r7, $r8, $r9, $r16;
        boolean $z0;
        com.android.server.am.BackupRecord $r10;
        android.content.res.CompatibilityInfo $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        if r1 != null goto label01;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "unbind backup agent for null app");

        return;

     label01:
        entermonitor r0;

     label02:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName>;

        if $r7 != null goto label08;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Unbinding backup agent with no active backup");

     label03:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        exitmonitor r0;

     label04:
        return;

     label05:
        $r19 := @caughtexception;

        r3 = $r19;

     label06:
        exitmonitor r0;

     label07:
        throw r3;

     label08:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName>;

        $r8 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label11;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unbind of ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is not the current backup target");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r16);

     label09:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        exitmonitor r0;

     label10:
        return;

     label11:
        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget>;

        r4 = $r10.<com.android.server.am.BackupRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)>(r4);

        r5 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

     label12:
        if r5 == null goto label14;

     label13:
        $r12 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r11 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>(r1);

        interfaceinvoke $r12.<android.app.IApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>(r1, $r11);

     label14:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

        exitmonitor r0;

     label15:
        return;

     label16:
        $r18 := @caughtexception;

        r6 = $r18;

     label17:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", "Exception when unbinding backup agent:");

        virtualinvoke r6.<java.lang.Exception: void printStackTrace()>();

     label18:
        goto label14;

     label19:
        $r20 := @caughtexception;

        r2 = $r20;

     label20:
        r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BackupRecord mBackupTarget> = null;

        r0.<com.android.server.am.ActivityManagerService: java.lang.String mBackupAppName> = null;

     label21:
        throw r2;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Exception from label13 to label14 with label16;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label15 with label05;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label05;
    }

    public void unbindFinished(android.os.IBinder, android.content.Intent, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        android.content.Intent r2;
        boolean z0, $z1;
        java.lang.Throwable r3, $r7;
        com.android.server.am.ServiceRecord $r4;
        com.android.server.am.ActiveServices $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        z0 := @parameter2: boolean;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r6;

     label1:
        entermonitor r0;

     label2:
        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r4 = (com.android.server.am.ServiceRecord) r1;

        virtualinvoke $r5.<com.android.server.am.ActiveServices: void unbindFinishedLocked(com.android.server.am.ServiceRecord,android.content.Intent,boolean)>($r4, r2, z0);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

     label5:
        exitmonitor r0;

     label6:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean unbindService(android.app.IServiceConnection)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IServiceConnection r1;
        java.lang.Throwable r2, $r4;
        boolean z0;
        com.android.server.am.ActiveServices $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IServiceConnection;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        z0 = virtualinvoke $r3.<com.android.server.am.ActiveServices: boolean unbindServiceLocked(android.app.IServiceConnection)>(r1);

        exitmonitor r0;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void unbroadcastIntent(android.app.IApplicationThread, android.content.Intent, int)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IApplicationThread r1;
        android.content.Intent r2, $r15;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Throwable r3, $r25;
        android.util.ArrayMap r4;
        java.util.ArrayList r5;
        java.lang.String r6, $r9, $r12;
        java.lang.Object $r7, $r10, $r13;
        android.util.SparseArray $r8, $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.IllegalArgumentException $r24;
        java.lang.SecurityException $r26;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IApplicationThread;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        if r2 == null goto label01;

        $z1 = virtualinvoke r2.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 1 goto label01;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r24;

     label01:
        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i4, $i5, i0, 1, 0, "removeStickyBroadcast", null);

        entermonitor r0;

     label02:
        $i6 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.BROADCAST_STICKY");

        if $i6 == 0 goto label06;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: unbroadcastIntent() from pid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i10 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BROADCAST_STICKY");

        r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r6);

        $r26 = new java.lang.SecurityException;

        specialinvoke $r26.<java.lang.SecurityException: void <init>(java.lang.String)>(r6);

        throw $r26;

     label03:
        $r25 := @caughtexception;

        r3 = $r25;

     label04:
        exitmonitor r0;

     label05:
        throw r3;

     label06:
        $r8 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        $r7 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r4 = (android.util.ArrayMap) $r7;

     label07:
        if r4 == null goto label16;

     label08:
        $r9 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $r10 = virtualinvoke r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r9);

        r5 = (java.util.ArrayList) $r10;

     label09:
        if r5 == null goto label15;

     label10:
        i2 = virtualinvoke r5.<java.util.ArrayList: int size()>();

     label11:
        i3 = 0;

     label12:
        if i3 >= i2 goto label14;

     label13:
        $r13 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r15 = (android.content.Intent) $r13;

        $z0 = virtualinvoke r2.<android.content.Intent: boolean filterEquals(android.content.Intent)>($r15);

        if $z0 == 0 goto label18;

        virtualinvoke r5.<java.util.ArrayList: java.lang.Object remove(int)>(i3);

     label14:
        $i8 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if $i8 > 0 goto label15;

        $r12 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        virtualinvoke r4.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r12);

     label15:
        $i7 = virtualinvoke r4.<android.util.ArrayMap: int size()>();

        if $i7 > 0 goto label16;

        $r11 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStickyBroadcasts>;

        virtualinvoke $r11.<android.util.SparseArray: void remove(int)>(i1);

     label16:
        exitmonitor r0;

     label17:
        return;

     label18:
        i3 = i3 + 1;

        goto label12;

        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label08 to label09 with label03;
        catch java.lang.Throwable from label10 to label11 with label03;
        catch java.lang.Throwable from label13 to label14 with label03;
        catch java.lang.Throwable from label14 to label15 with label03;
        catch java.lang.Throwable from label15 to label16 with label03;
        catch java.lang.Throwable from label16 to label17 with label03;
    }

    public void unhandledBack()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, r2, $r4, $r5;
        long l0;
        com.android.server.am.ActivityStack $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.FORCE_BACK", "unhandledBack()");

        entermonitor r0;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>();

        virtualinvoke $r3.<com.android.server.am.ActivityStack: void unhandledBackLocked()>();

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label7:
        $r5 := @caughtexception;

        r1 = $r5;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void unregisterProcessObserver(android.app.IProcessObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IProcessObserver r1;
        java.lang.Throwable r2, $r4;
        android.os.RemoteCallbackList $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IProcessObserver;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mProcessObservers>;

        virtualinvoke $r3.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unregisterReceiver(android.content.IIntentReceiver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.IIntentReceiver r1, $r11;
        long l0;
        java.lang.Throwable r2, r3, $r19, $r20;
        com.android.server.am.ReceiverList r4;
        boolean z0, z1, $z2, $z5;
        com.android.server.am.BroadcastRecord r5, r6;
        java.util.HashMap $r7;
        android.os.IBinder $r8, $r12, $r15;
        java.lang.Object $r9;
        com.android.server.am.ProcessRecord $r10, $r14;
        android.util.ArraySet $r13;
        android.os.Bundle $r16;
        int $i1;
        java.lang.String $r17;
        com.android.server.am.BroadcastQueue $r18;
        android.os.IBinder$DeathRecipient r21;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.IIntentReceiver;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        entermonitor r0;

     label02:
        $r7 = r0.<com.android.server.am.ActivityManagerService: java.util.HashMap mRegisteredReceivers>;

        $r8 = interfaceinvoke r1.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r4 = (com.android.server.am.ReceiverList) $r9;

     label03:
        z0 = 0;

        if r4 == null goto label11;

     label04:
        r5 = r4.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast>;

     label05:
        z0 = 0;

        if r5 == null goto label09;

     label06:
        r6 = r4.<com.android.server.am.ReceiverList: com.android.server.am.BroadcastRecord curBroadcast>;

        $r15 = interfaceinvoke r1.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        $i1 = r6.<com.android.server.am.BroadcastRecord: int resultCode>;

        $r17 = r6.<com.android.server.am.BroadcastRecord: java.lang.String resultData>;

        $r16 = r6.<com.android.server.am.BroadcastRecord: android.os.Bundle resultExtras>;

        $z5 = r6.<com.android.server.am.BroadcastRecord: boolean resultAbort>;

        z1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>($r15, $i1, $r17, $r16, $z5);

     label07:
        z0 = 0;

        if z1 == 0 goto label09;

        z0 = 1;

     label08:
        $r18 = r6.<com.android.server.am.BroadcastRecord: com.android.server.am.BroadcastQueue queue>;

        virtualinvoke $r18.<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>(0);

     label09:
        $r10 = r4.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        if $r10 == null goto label10;

        $r14 = r4.<com.android.server.am.ReceiverList: com.android.server.am.ProcessRecord app>;

        $r13 = $r14.<com.android.server.am.ProcessRecord: android.util.ArraySet receivers>;

        virtualinvoke $r13.<android.util.ArraySet: boolean remove(java.lang.Object)>(r4);

     label10:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>(r4);

        $z2 = r4.<com.android.server.am.ReceiverList: boolean linkedToDeath>;

        if $z2 == 0 goto label11;

        r4.<com.android.server.am.ReceiverList: boolean linkedToDeath> = 0;

        $r11 = r4.<com.android.server.am.ReceiverList: android.content.IIntentReceiver receiver>;

        $r12 = interfaceinvoke $r11.<android.content.IIntentReceiver: android.os.IBinder asBinder()>();

        r21 = (android.os.IBinder$DeathRecipient) r4;

        interfaceinvoke $r12.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r21, 0);

     label11:
        exitmonitor r0;

     label12:
        if z0 == 0 goto label14;

     label13:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void trimApplications()>();

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label15:
        $r20 := @caughtexception;

        r3 = $r20;

     label16:
        exitmonitor r0;

     label17:
        throw r3;

     label18:
        $r19 := @caughtexception;

        r2 = $r19;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label17 to label18 with label18;
    }

    public void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)
    {
        com.android.server.am.ActivityManagerService r0;
        android.app.IUserSwitchObserver r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.app.IUserSwitchObserver;

        $r2 = r0.<com.android.server.am.ActivityManagerService: android.os.RemoteCallbackList mUserSwitchObservers>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    public void unstableProviderDied(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1, $r12;
        java.lang.String r3, $r18, $r23, $r29;
        com.android.server.am.ContentProviderConnection r4;
        java.lang.Throwable r5, r7, r9, r10, $r39, $r41, $r42, $r43;
        android.content.IContentProvider r6, $r15;
        com.android.server.am.ProcessRecord r8;
        long l0;
        com.android.server.am.ContentProviderRecord $r11, $r13, $r14;
        boolean $z0;
        android.app.IApplicationThread $r16, $r25;
        java.lang.StringBuilder $r17, $r19, $r20, $r21, $r22, $r24, $r26, $r27, $r28, $r30, $r31, $r32, $r35, $r36, $r37, $r38;
        int $i1, $i2, $i4;
        java.lang.ClassCastException $r33;
        java.lang.NullPointerException $r34;
        java.lang.IllegalArgumentException $r40;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

     label01:
        r4 = (com.android.server.am.ContentProviderConnection) r1;

     label02:
        if r4 != null goto label04;

        $r34 = new java.lang.NullPointerException;

        specialinvoke $r34.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection is null");

        throw $r34;

     label03:
        $r33 := @caughtexception;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refContentProvider: ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a ContentProviderConnection");

        r3 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", r3);

        $r40 = new java.lang.IllegalArgumentException;

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r3);

        throw $r40;

     label04:
        entermonitor r0;

     label05:
        $r11 = r4.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r6 = $r11.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        exitmonitor r0;

     label06:
        if r6 != null goto label10;

        return;

     label07:
        $r39 := @caughtexception;

        r5 = $r39;

     label08:
        exitmonitor r0;

     label09:
        throw r5;

     label10:
        $r12 = interfaceinvoke r6.<android.content.IContentProvider: android.os.IBinder asBinder()>();

        $z0 = interfaceinvoke $r12.<android.os.IBinder: boolean pingBinder()>();

        if $z0 == 0 goto label16;

        entermonitor r0;

     label11:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unstableProviderDied: caller ");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" says ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" died, but we don\'t agree");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r29);

        exitmonitor r0;

     label12:
        return;

     label13:
        $r41 := @caughtexception;

        r10 = $r41;

     label14:
        exitmonitor r0;

     label15:
        throw r10;

     label16:
        entermonitor r0;

     label17:
        $r13 = r4.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r15 = $r13.<com.android.server.am.ContentProviderRecord: android.content.IContentProvider provider>;

        if $r15 == r6 goto label22;

        exitmonitor r0;

     label18:
        return;

     label19:
        $r43 := @caughtexception;

        r7 = $r43;

     label20:
        exitmonitor r0;

     label21:
        throw r7;

     label22:
        $r14 = r4.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        r8 = $r14.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

     label23:
        if r8 == null goto label25;

     label24:
        $r16 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r16 != null goto label27;

     label25:
        exitmonitor r0;

     label26:
        return;

     label27:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ");

        $r18 = r8.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (pid ");

        $i1 = r8.<com.android.server.am.ProcessRecord: int pid>;

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") early provider death");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r23);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label28:
        $i2 = r8.<com.android.server.am.ProcessRecord: int pid>;

        $r25 = r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>(r8, $i2, $r25);

     label29:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label30:
        return;

     label31:
        $r42 := @caughtexception;

        r9 = $r42;

     label32:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label33:
        throw r9;

        catch java.lang.ClassCastException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label22 to label23 with label19;
        catch java.lang.Throwable from label24 to label25 with label19;
        catch java.lang.Throwable from label25 to label26 with label19;
        catch java.lang.Throwable from label27 to label28 with label19;
        catch java.lang.Throwable from label28 to label29 with label31;
        catch java.lang.Throwable from label29 to label30 with label19;
        catch java.lang.Throwable from label32 to label33 with label19;
    }

    public void updateConfiguration(android.content.res.Configuration)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.res.Configuration r1;
        java.lang.Throwable r2, $r8;
        long l0;
        com.android.server.wm.WindowManagerService $r3, $r4, $r6, $r7;
        com.android.server.am.ProcessList $r5;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.res.Configuration;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updateConfiguration()");

        entermonitor r0;

        if r1 != null goto label02;

     label01:
        $r6 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        if $r6 == null goto label02;

        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r1 = virtualinvoke $r7.<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfiguration()>();

     label02:
        $r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        if $r3 == null goto label03;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessList mProcessList>;

        $r4 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r5.<com.android.server.am.ProcessList: void applyDisplaySize(com.android.server.wm.WindowManagerService)>($r4);

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        if r1 == null goto label06;

     label05:
        staticinvoke <android.provider.Settings$System: void clearConfiguration(android.content.res.Configuration)>(r1);

     label06:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r1, null, 0, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label07:
        return;

     label08:
        $r8 := @caughtexception;

        r2 = $r8;

     label09:
        exitmonitor r0;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    boolean updateConfigurationLocked(android.content.res.Configuration, com.android.server.am.ActivityRecord, boolean, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.res.Configuration r1, r3, r5, $r16, $r17, $r20, $r28, $r29, $r38, $r45;
        com.android.server.am.ActivityRecord r2;
        boolean z0, z1, z2, z3, $z4, $z5, $z7, $z8, $z9;
        int i0, i1, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i13;
        com.android.server.am.ActivityStack r4;
        com.android.server.AttributeCache r6;
        android.content.Intent r7, r8, $r33, $r36;
        com.android.server.am.ProcessRecord r10;
        android.os.Message r11;
        java.util.Locale r12, $r19, $r44, $r46;
        com.android.server.am.ActivityStackSupervisor $r13, $r18;
        com.android.server.wm.WindowManagerService $r14, $r15;
        java.lang.StringBuilder $r21, $r23, $r25, $r26, $r27;
        java.lang.String $r22, $r24;
        java.util.ArrayList $r30, $r34;
        android.app.ActivityThread $r31;
        java.lang.Object $r35;
        android.os.Handler $r39, $r42;
        android.app.IApplicationThread $r40, $r41;
        java.lang.Exception $r43;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.res.Configuration;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mHeadless>;

        if $z4 == 0 goto label02;

        z2 = 1;

     label01:
        return z2;

     label02:
        i0 = 0;

        if r1 == null goto label13;

        $r17 = new android.content.res.Configuration;

        $r20 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r17.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r20);

        r3 = $r17;

        i0 = virtualinvoke r3.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(r1);

        if i0 == 0 goto label13;

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(2719, i0);

        $r19 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        if $r19 == null goto label04;

        if z1 != 0 goto label04;

        r12 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r46 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r45 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r44 = $r45.<android.content.res.Configuration: java.util.Locale locale>;

        $z9 = virtualinvoke $r46.<java.util.Locale: boolean equals(java.lang.Object)>($r44);

        if $z9 != 0 goto label11;

        z3 = 1;

     label03:
        $z8 = r1.<android.content.res.Configuration: boolean userSetLocale>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void saveLocaleLocked(java.util.Locale,boolean,boolean)>(r12, z3, $z8);

     label04:
        $i5 = r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq>;

        $i6 = 1 + $i5;

        r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq> = $i6;

        $i3 = r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq>;

        if $i3 > 0 goto label05;

        r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq> = 1;

     label05:
        $i4 = r0.<com.android.server.am.ActivityManagerService: int mConfigurationSeq>;

        r3.<android.content.res.Configuration: int seq> = $i4;

        r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration> = r3;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config changes=");

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        $r29 = new android.content.res.Configuration;

        $r28 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r29.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r28);

        r5 = $r29;

        $z5 = staticinvoke <com.android.server.am.ActivityManagerService: boolean shouldShowDialogs(android.content.res.Configuration)>(r3);

        r0.<com.android.server.am.ActivityManagerService: boolean mShowDialogs> = $z5;

        r6 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        if r6 == null goto label06;

        virtualinvoke r6.<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>(r5);

     label06:
        $r31 = <com.android.server.am.ActivityManagerService: android.app.ActivityThread mSystemThread>;

        virtualinvoke $r31.<android.app.ActivityThread: void applyConfigurationToResources(android.content.res.Configuration)>(r5);

        if z0 == 0 goto label07;

        $z7 = staticinvoke <android.provider.Settings$System: boolean hasInterestingConfigurationChanges(int)>(i0);

        if $z7 == 0 goto label07;

        $r42 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        r11 = virtualinvoke $r42.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        $r38 = new android.content.res.Configuration;

        specialinvoke $r38.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r5);

        r11.<android.os.Message: java.lang.Object obj> = $r38;

        $r39 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        virtualinvoke $r39.<android.os.Handler: boolean sendMessage(android.os.Message)>(r11);

     label07:
        $r30 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i9 = virtualinvoke $r30.<java.util.ArrayList: int size()>();

        i1 = -1 + $i9;

     label08:
        if i1 < 0 goto label12;

        $r34 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r35 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r10 = (com.android.server.am.ProcessRecord) $r35;

     label09:
        $r40 = r10.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r40 == null goto label10;

        $r41 = r10.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r41.<android.app.IApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>(r5);

     label10:
        i1 = i1 + -1;

        goto label08;

     label11:
        z3 = 0;

        goto label03;

     label12:
        $r33 = new android.content.Intent;

        specialinvoke $r33.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CONFIGURATION_CHANGED");

        r7 = $r33;

        virtualinvoke r7.<android.content.Intent: android.content.Intent addFlags(int)>(1879048192);

        $i8 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r7, null, null, 0, null, null, null, -1, 0, 0, $i8, 1000, -1);

        $i13 = i0 & 4;

        if $i13 == 0 goto label13;

        $r36 = new android.content.Intent;

        specialinvoke $r36.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        r8 = $r36;

        virtualinvoke r8.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $i10 = <com.android.server.am.ActivityManagerService: int MY_PID>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)>(null, null, r8, null, null, 0, null, null, null, -1, 0, 0, $i10, 1000, -1);

     label13:
        z2 = 1;

        $r13 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r4 = virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        if i0 == 0 goto label14;

        if r2 != null goto label14;

        r2 = virtualinvoke r4.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label14:
        if r2 == null goto label15;

        z2 = virtualinvoke r4.<com.android.server.am.ActivityStack: boolean ensureActivityConfigurationLocked(com.android.server.am.ActivityRecord,int)>(r2, i0);

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r18.<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(r2, i0);

     label15:
        if r1 == null goto label01;

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        if $r14 == null goto label01;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r16 = r0.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        virtualinvoke $r15.<com.android.server.wm.WindowManagerService: void setNewConfiguration(android.content.res.Configuration)>($r16);

        return z2;

     label16:
        $r43 := @caughtexception;

        goto label10;

        catch java.lang.Exception from label09 to label10 with label16;
    }

    void updateCpuStats()
    {
        com.android.server.am.ActivityManagerService r0;
        long l0, $l1, $l2;
        java.lang.Thread r1, $r5;
        java.lang.Throwable r2, $r6;
        java.util.concurrent.atomic.AtomicLong $r3;
        byte $b3;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        $l1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l2 = l0 - 5000L;

        $b3 = $l1 cmp $l2;

        if $b3 < 0 goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(1, 0);

        if $z0 == 0 goto label1;

        r1 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        entermonitor r1;

     label3:
        $r5 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        virtualinvoke $r5.<java.lang.Object: void notify()>();

        exitmonitor r1;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    void updateCpuStatsNow()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Thread r1;
        java.lang.Throwable r2, r5, r7, $r40, $r43, $r44;
        long l0, $l17, $l18, $l19, $l20, $l43, $l46, $l47;
        byte b1, $b21;
        boolean z0, $z1, $z2, $z3;
        long[] r3;
        com.android.internal.os.BatteryStatsImpl r4, $r20;
        android.util.SparseArray r6, $r23;
        int i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i66, $i67, $i68, $i69;
        com.android.internal.os.ProcessCpuTracker$Stats r8;
        com.android.server.am.ProcessRecord r9;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r10, r11, r12;
        java.util.concurrent.atomic.AtomicBoolean $r13;
        java.lang.Object[] r14;
        com.android.internal.os.ProcessCpuTracker $r15, $r19, $r21, $r28, $r29, $r30, $r31, $r33, $r34, $r35;
        java.util.concurrent.atomic.AtomicLong $r16, $r26;
        com.android.server.am.BatteryStatsService $r17, $r18;
        java.lang.Object $r22;
        java.lang.String $r24, $r25, $r27, $r32;
        java.lang.Integer $r36, $r37, $r38, $r39, $r41, $r42;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = r0.<com.android.server.am.ActivityManagerService: java.lang.Thread mProcessCpuThread>;

        entermonitor r1;

     label01:
        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicBoolean mProcessCpuMutexFree>;

        virtualinvoke $r13.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r16 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        $l18 = virtualinvoke $r16.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l17 = l0 - 5000L;

        b1 = $l18 cmp $l17;

     label02:
        z0 = 0;

        if b1 >= 0 goto label08;

     label03:
        $r26 = r0.<com.android.server.am.ActivityManagerService: java.util.concurrent.atomic.AtomicLong mLastCpuTime>;

        virtualinvoke $r26.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l0);

     label04:
        z0 = 1;

     label05:
        $r28 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        virtualinvoke $r28.<com.android.internal.os.ProcessCpuTracker: void update()>();

        $r27 = "true";

        $r32 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("events.cpu");

        $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z3 == 0 goto label08;

        $r31 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i12 = virtualinvoke $r31.<com.android.internal.os.ProcessCpuTracker: int getLastUserTime()>();

        $r30 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i11 = virtualinvoke $r30.<com.android.internal.os.ProcessCpuTracker: int getLastSystemTime()>();

        $r29 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i14 = virtualinvoke $r29.<com.android.internal.os.ProcessCpuTracker: int getLastIoWaitTime()>();

        $r35 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i13 = virtualinvoke $r35.<com.android.internal.os.ProcessCpuTracker: int getLastIrqTime()>();

        $r34 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i16 = virtualinvoke $r34.<com.android.internal.os.ProcessCpuTracker: int getLastSoftIrqTime()>();

        $r33 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $i50 = virtualinvoke $r33.<com.android.internal.os.ProcessCpuTracker: int getLastIdleTime()>();

        $i48 = i12 + i11;

        $i49 = i14 + $i48;

        $i58 = i13 + $i49;

        $i57 = i16 + $i58;

        i15 = $i50 + $i57;

     label06:
        if i15 != 0 goto label07;

        i15 = 1;

     label07:
        r14 = newarray (java.lang.Object)[6];

        $i56 = i12 + i11;

        $i55 = i14 + $i56;

        $i54 = i13 + $i55;

        $i53 = i16 + $i54;

        $i52 = 100 * $i53;

        $i51 = $i52 / i15;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i51);

        r14[0] = $r37;

        $i62 = i12 * 100;

        $i61 = $i62 / i15;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i61);

        r14[1] = $r36;

        $i60 = i11 * 100;

        $i59 = $i60 / i15;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i59);

        r14[2] = $r41;

        $i67 = i14 * 100;

        $i66 = $i67 / i15;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i66);

        r14[3] = $r42;

        $i69 = i13 * 100;

        $i68 = $i69 / i15;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i68);

        r14[4] = $r38;

        $i64 = i16 * 100;

        $i63 = $i64 / i15;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i63);

        r14[5] = $r39;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2721, r14);

     label08:
        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r3 = virtualinvoke $r15.<com.android.internal.os.ProcessCpuTracker: long[] getLastCpuSpeedTimes()>();

        $r17 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r4 = virtualinvoke $r17.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        entermonitor r4;

     label09:
        r6 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        entermonitor r6;

     label10:
        if z0 == 0 goto label41;

     label11:
        $z1 = r0.<com.android.server.am.ActivityManagerService: boolean mOnBattery>;

        if $z1 == 0 goto label41;

        i2 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl: int startAddingCpuLocked()>();

     label12:
        i3 = 0;

        i4 = 0;

     label13:
        $r19 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        i5 = virtualinvoke $r19.<com.android.internal.os.ProcessCpuTracker: int countStats()>();

     label14:
        i6 = 0;

     label15:
        if i6 >= i5 goto label40;

     label16:
        $r21 = r0.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        r8 = virtualinvoke $r21.<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker$Stats getStats(int)>(i6);

        $z2 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: boolean working>;

        if $z2 != 0 goto label18;

     label17:
        goto label46;

     label18:
        $r23 = r0.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $i23 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        $r22 = virtualinvoke $r23.<android.util.SparseArray: java.lang.Object get(int)>($i23);

        r9 = (com.android.server.am.ProcessRecord) $r22;

        $i22 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i26 = i2 * $i22;

        i7 = $i26 / 100;

        $i27 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        $i28 = i2 * $i27;

        i8 = $i28 / 100;

     label19:
        i3 = i3 + i7;

        i4 = i4 + i8;

        if r9 == null goto label31;

     label20:
        $r25 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $i32 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        r10 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String,int)>($r25, $i32);

        $i42 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i37 = $i42 - i7;

        $i41 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        $i38 = $i41 - i8;

        virtualinvoke r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>($i37, $i38);

        virtualinvoke r10.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r3);

        $l46 = r9.<com.android.server.am.ProcessRecord: long curCpuTime>;

        $i39 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i40 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        $i45 = $i39 + $i40;

        $i44 = 10 * $i45;

        $l47 = (long) $i44;

        $l43 = $l46 + $l47;

        r9.<com.android.server.am.ProcessRecord: long curCpuTime> = $l43;

     label21:
        goto label46;

     label22:
        $r44 := @caughtexception;

        r7 = $r44;

     label23:
        exitmonitor r6;

     label24:
        throw r7;

     label25:
        $r40 := @caughtexception;

        r5 = $r40;

     label26:
        exitmonitor r4;

     label27:
        throw r5;

     label28:
        $r43 := @caughtexception;

        r2 = $r43;

     label29:
        exitmonitor r1;

     label30:
        throw r2;

     label31:
        $i29 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int uid>;

        if $i29 < 10000 goto label36;

        r11 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats>;

     label32:
        if r11 != null goto label34;

     label33:
        $i31 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int uid>;

        r11 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>($i31, "(Unknown)");

        r8.<com.android.internal.os.ProcessCpuTracker$Stats: com.android.internal.os.BatteryStatsImpl$Uid$Proc batteryStats> = r11;

     label34:
        $i36 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        i10 = $i36 - i7;

        $i30 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        i9 = $i30 - i8;

        virtualinvoke r11.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>(i10, i9);

        virtualinvoke r11.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r3);

     label35:
        goto label46;

     label36:
        $r24 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: java.lang.String name>;

        $i24 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int pid>;

        r12 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String,int)>($r24, $i24);

     label37:
        if r12 == null goto label46;

     label38:
        $i25 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_utime>;

        $i35 = $i25 - i7;

        $i33 = r8.<com.android.internal.os.ProcessCpuTracker$Stats: int rel_stime>;

        $i34 = $i33 - i8;

        virtualinvoke r12.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>($i35, $i34);

        virtualinvoke r12.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>(r3);

     label39:
        goto label46;

     label40:
        virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl: void finishAddingCpuLocked(int,int,int,long[])>(i2, i3, i4, r3);

     label41:
        exitmonitor r6;

     label42:
        $l20 = r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime>;

        $l19 = l0 - 1800000L;

        $b21 = $l20 cmp $l19;

        if $b21 >= 0 goto label43;

        r0.<com.android.server.am.ActivityManagerService: long mLastWriteTime> = l0;

        $r18 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $r20 = virtualinvoke $r18.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>();

     label43:
        exitmonitor r4;

     label44:
        exitmonitor r1;

     label45:
        return;

     label46:
        i6 = i6 + 1;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label05 to label06 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.lang.Throwable from label24 to label25 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label31 to label32 with label22;
        catch java.lang.Throwable from label33 to label34 with label22;
        catch java.lang.Throwable from label34 to label35 with label22;
        catch java.lang.Throwable from label36 to label37 with label22;
        catch java.lang.Throwable from label38 to label39 with label22;
        catch java.lang.Throwable from label40 to label41 with label22;
        catch java.lang.Throwable from label41 to label42 with label22;
        catch java.lang.Throwable from label42 to label43 with label25;
        catch java.lang.Throwable from label43 to label44 with label25;
        catch java.lang.Throwable from label44 to label45 with label28;
    }

    final void updateLruProcessLocked(com.android.server.am.ProcessRecord, boolean, com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r2, r6, $r14, $r15, $r18, $r21, $r26, $r29, $r33, $r36, $r43, $r48;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z7;
        long l0;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43;
        com.android.server.am.ContentProviderRecord r3;
        com.android.server.am.ConnectionRecord r4;
        java.util.ArrayList r5, $r8, $r9, $r10, $r12, $r13, $r37, $r38, $r39, $r40, $r41, $r45, $r49, $r51, $r53, $r54, $r57, $r59, $r61, $r63;
        java.lang.Object r7, $r17, $r19, $r44, $r47, $r55, $r60, $r62;
        android.util.ArraySet $r11, $r20;
        com.android.server.am.ContentProviderConnection $r16;
        com.android.server.am.ServiceRecord $r22, $r25, $r28, $r32, $r35;
        com.android.server.am.AppBindRecord $r23, $r24, $r27, $r30, $r31, $r34;
        android.content.pm.ApplicationInfo $r42, $r46, $r50;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.android.server.am.ProcessRecord;

        $r8 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i13 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i13 > 0 goto label01;

        $z7 = r1.<com.android.server.am.ProcessRecord: boolean hasClientActivities>;

        if $z7 == 0 goto label04;

     label01:
        z1 = 1;

     label02:
        if z0 != 0 goto label05;

        if z1 == 0 goto label05;

     label03:
        return;

     label04:
        z1 = 0;

        goto label02;

     label05:
        $i12 = r0.<com.android.server.am.ActivityManagerService: int mLruSeq>;

        $i14 = 1 + $i12;

        r0.<com.android.server.am.ActivityManagerService: int mLruSeq> = $i14;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ProcessRecord: long lastActivityTime> = l0;

        if z1 == 0 goto label13;

        $r59 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i11 = virtualinvoke $r59.<java.util.ArrayList: int size()>();

        if i11 <= 0 goto label06;

        $r63 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i40 = i11 - 1;

        $r62 = virtualinvoke $r63.<java.util.ArrayList: java.lang.Object get(int)>($i40);

        if $r62 == r1 goto label03;

     label06:
        $r9 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i1 = virtualinvoke $r9.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r1);

        $z2 = r1.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z2 == 0 goto label07;

        if i1 >= 0 goto label03;

     label07:
        if i1 < 0 goto label10;

        $i39 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        if i1 >= $i39 goto label08;

        $i35 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i43 = -1 + $i35;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart> = $i43;

     label08:
        $i38 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        if i1 >= $i38 goto label09;

        $i37 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i36 = -1 + $i37;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart> = $i36;

     label09:
        $r57 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r57.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label10:
        if z1 == 0 goto label19;

        $r40 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i7 = virtualinvoke $r40.<java.util.ArrayList: int size()>();

        $r37 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i26 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        if $i26 != 0 goto label14;

        $i27 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i28 = i7 - 1;

        if $i27 >= $i28 goto label14;

        $r45 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i29 = i7 - 1;

        virtualinvoke $r45.<java.util.ArrayList: void add(int,java.lang.Object)>($i29, r1);

        $r42 = r1.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        i8 = $r42.<android.content.pm.ApplicationInfo: int uid>;

        i10 = i7 - 2;

     label11:
        i9 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        if i10 <= i9 goto label15;

        $r41 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r44 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        $r43 = (com.android.server.am.ProcessRecord) $r44;

        $r50 = $r43.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i32 = $r50.<android.content.pm.ApplicationInfo: int uid>;

        if $i32 != i8 goto label15;

        $r49 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i31 = i10 - 1;

        $r47 = virtualinvoke $r49.<java.util.ArrayList: java.lang.Object get(int)>($i31);

        $r48 = (com.android.server.am.ProcessRecord) $r47;

        $r46 = $r48.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i30 = $r46.<android.content.pm.ApplicationInfo: int uid>;

        if $i30 == i8 goto label12;

        $r54 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r55 = virtualinvoke $r54.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r6 = (com.android.server.am.ProcessRecord) $r55;

        r5 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r53 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i34 = i10 - 1;

        r7 = virtualinvoke $r53.<java.util.ArrayList: java.lang.Object get(int)>($i34);

        virtualinvoke r5.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i10, r7);

        $r51 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i33 = i10 - 1;

        virtualinvoke $r51.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i33, r6);

        i10 = i10 + -1;

     label12:
        i10 = i10 + -1;

        goto label11;

     label13:
        $i15 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        if $i15 <= 0 goto label06;

        $r61 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i42 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i41 = -1 + $i42;

        $r60 = virtualinvoke $r61.<java.util.ArrayList: java.lang.Object get(int)>($i41);

        if $r60 != r1 goto label06;

        return;

     label14:
        $r38 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r38.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label15:
        i3 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

     label16:
        $r11 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $i19 = virtualinvoke $r11.<android.util.ArraySet: int size()>();

        i4 = -1 + $i19;

     label17:
        if i4 < 0 goto label22;

        $r20 = r1.<com.android.server.am.ProcessRecord: android.util.ArraySet connections>;

        $r19 = virtualinvoke $r20.<android.util.ArraySet: java.lang.Object valueAt(int)>(i4);

        r4 = (com.android.server.am.ConnectionRecord) $r19;

        $r24 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        if $r24 == null goto label18;

        $z4 = r4.<com.android.server.am.ConnectionRecord: boolean serviceDead>;

        if $z4 != 0 goto label18;

        $r23 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r22 = $r23.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        if $r22 == null goto label18;

        $r27 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r28 = $r27.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r29 = $r28.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        if $r29 == null goto label18;

        $r30 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r25 = $r30.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r26 = $r25.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $i25 = $r26.<com.android.server.am.ProcessRecord: int lruSeq>;

        $i24 = r0.<com.android.server.am.ActivityManagerService: int mLruSeq>;

        if $i25 == $i24 goto label18;

        $r34 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r35 = $r34.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r36 = $r35.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        $z5 = $r36.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z5 != 0 goto label18;

        $r31 = r4.<com.android.server.am.ConnectionRecord: com.android.server.am.AppBindRecord binding>;

        $r32 = $r31.<com.android.server.am.AppBindRecord: com.android.server.am.ServiceRecord service>;

        $r33 = $r32.<com.android.server.am.ServiceRecord: com.android.server.am.ProcessRecord app>;

        i3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord,long,int,java.lang.String,java.lang.Object,com.android.server.am.ProcessRecord)>($r33, l0, i3, "service connection", r4, r1);

     label18:
        i4 = i4 + -1;

        goto label17;

     label19:
        i2 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        if r2 == null goto label21;

        $r39 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i6 = virtualinvoke $r39.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r2);

        if i6 > i1 goto label20;

        i6 = i1;

     label20:
        if i6 < 0 goto label21;

        if i2 <= i6 goto label21;

        i2 = i6;

     label21:
        $r10 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        virtualinvoke $r10.<java.util.ArrayList: void add(int,java.lang.Object)>(i2, r1);

        i3 = i2 - 1;

        $i18 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart>;

        $i16 = 1 + $i18;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessActivityStart> = $i16;

        $i17 = r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart>;

        $i20 = 1 + $i17;

        r0.<com.android.server.am.ActivityManagerService: int mLruProcessServiceStart> = $i20;

        goto label16;

     label22:
        $r13 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $i21 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i5 = -1 + $i21;

     label23:
        if i5 < 0 goto label03;

        $r12 = r1.<com.android.server.am.ProcessRecord: java.util.ArrayList conProviders>;

        $r17 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r16 = (com.android.server.am.ContentProviderConnection) $r17;

        r3 = $r16.<com.android.server.am.ContentProviderConnection: com.android.server.am.ContentProviderRecord provider>;

        $r15 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        if $r15 == null goto label24;

        $r14 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $i22 = $r14.<com.android.server.am.ProcessRecord: int lruSeq>;

        $i23 = r0.<com.android.server.am.ActivityManagerService: int mLruSeq>;

        if $i22 == $i23 goto label24;

        $r18 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        $z3 = $r18.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z3 != 0 goto label24;

        $r21 = r3.<com.android.server.am.ContentProviderRecord: com.android.server.am.ProcessRecord proc>;

        i3 = specialinvoke r0.<com.android.server.am.ActivityManagerService: int updateLruProcessInternalLocked(com.android.server.am.ProcessRecord,long,int,java.lang.String,java.lang.Object,com.android.server.am.ProcessRecord)>($r21, l0, i3, "provider reference", r3, r1);

     label24:
        i5 = i5 + -1;

        goto label23;
    }

    final void updateOomAdjLocked()
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ProcessRecord r2, r4, r6, r11, $r26, $r27;
        long l0, l1, $l46, $l51, $l53, $l54, $l55, $l56, $l72, $l73, $l74, $l75, $l77;
        int i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i30, i31, i32, i33, i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i48, $i49, $i50, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i76, $i79, $i80, $i81, $i82, $i83;
        boolean z0, z1, z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19;
        com.android.server.am.ProcessStatsService r3, $r14, $r15, $r16;
        byte b28, b29, $b47, $b52, $b78;
        java.util.ArrayList $r12, $r13, $r21, $r24, $r36, $r37;
        android.os.Handler $r17;
        com.android.server.am.ActivityManagerService$20 $r18;
        android.app.IApplicationThread $r19, $r20, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r39;
        com.android.server.am.ActivityStackSupervisor $r22;
        java.lang.Object $r23, $r25, $r38;
        java.lang.StringBuilder $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r54, $r57, $r58;
        android.util.ArraySet $r44;
        java.lang.String $r48, $r55, $r56;
        android.os.RemoteException $r49, $r50, $r51, $r52, $r53;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord resumedAppLocked()>();

        if r1 == null goto label14;

        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = l0 - 1800000L;

        $r12 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        i2 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        $i35 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i39 = 1 + $i35;

        r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = $i39;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNewNumAServiceProcs> = 0;

        $i38 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        if $i38 > 0 goto label15;

        i4 = 0;

        i3 = 0;

     label02:
        $i44 = r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs>;

        $i40 = i2 - $i44;

        $i45 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        i5 = $i40 - $i45;

        if i5 <= i4 goto label03;

        i5 = i4;

     label03:
        i6 = i5 / 3;

        if i6 >= 1 goto label04;

        i6 = 1;

     label04:
        $i41 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        if $i41 <= 0 goto label17;

        i7 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

     label05:
        i8 = i7 / 3;

        if i8 >= 1 goto label06;

        i8 = 1;

     label06:
        i9 = 0;

        i10 = 0;

        i12 = 0;

        i11 = 0;

        i14 = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs> = 0;

        r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs> = 0;

        i13 = 9;

        i16 = 10;

        i15 = 9;

        i18 = 11;

        i17 = i2 - 1;

     label07:
        if i17 < 0 goto label22;

        $r37 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r38 = virtualinvoke $r37.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r11 = (com.android.server.am.ProcessRecord) $r38;

        $z19 = r11.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z19 != 0 goto label13;

        $r39 = r11.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r39 == null goto label13;

        r11.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 0;

        z2 = r11.<com.android.server.am.ProcessRecord: boolean keeping>;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: int computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)>(r11, 16, r2, 1, l0);

        $i64 = r11.<com.android.server.am.ProcessRecord: int curAdj>;

        if $i64 < 16 goto label09;

        $i83 = r11.<com.android.server.am.ProcessRecord: int curProcState>;

        tableswitch($i83)
        {
            case 11: goto label18;
            case 12: goto label18;
            default: goto label08;
        };

     label08:
        r11.<com.android.server.am.ProcessRecord: int curRawAdj> = i15;

        $i80 = virtualinvoke r11.<com.android.server.am.ProcessRecord: int modifyRawOomAdj(int)>(i15);

        r11.<com.android.server.am.ProcessRecord: int curAdj> = $i80;

        if i15 == i18 goto label09;

        i10 = i10 + 1;

        if i10 < i6 goto label09;

        i15 = i18;

        i18 = i18 + 2;

        i32 = i18;

        i10 = 0;

        if i32 <= 15 goto label09;

        i18 = 15;

     label09:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean applyOomAdjLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord,boolean,boolean,long)>(r11, z2, r2, 1, 0, l0);

        $i66 = r11.<com.android.server.am.ProcessRecord: int curProcState>;

        tableswitch($i66)
        {
            case 11: goto label19;
            case 12: goto label19;
            case 13: goto label20;
            default: goto label10;
        };

     label10:
        $i65 = r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs>;

        $i67 = 1 + $i65;

        r0.<com.android.server.am.ActivityManagerService: int mNumNonCachedProcs> = $i67;

     label11:
        $z17 = r11.<com.android.server.am.ProcessRecord: boolean isolated>;

        if $z17 == 0 goto label12;

        $r44 = r11.<com.android.server.am.ProcessRecord: android.util.ArraySet services>;

        $i76 = virtualinvoke $r44.<android.util.ArraySet: int size()>();

        if $i76 > 0 goto label12;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r11, "isolated not needed");

     label12:
        $i68 = r11.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i68 < 9 goto label13;

        $z18 = r11.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z18 != 0 goto label13;

        i14 = i14 + 1;

     label13:
        i17 = i17 + -1;

        goto label07;

     label14:
        r2 = null;

        goto label01;

     label15:
        $i37 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        if $i37 != 1 goto label16;

        i3 = 1;

        i4 = 0;

        goto label02;

     label16:
        $i36 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        i3 = staticinvoke <com.android.server.am.ProcessList: int computeEmptyProcessLimit(int)>($i36);

        $i43 = r0.<com.android.server.am.ActivityManagerService: int mProcessLimit>;

        i4 = $i43 - i3;

        goto label02;

     label17:
        i7 = 1;

        goto label05;

     label18:
        r11.<com.android.server.am.ProcessRecord: int curRawAdj> = i13;

        $i79 = virtualinvoke r11.<com.android.server.am.ProcessRecord: int modifyRawOomAdj(int)>(i13);

        r11.<com.android.server.am.ProcessRecord: int curAdj> = $i79;

        if i13 == i16 goto label09;

        i9 = i9 + 1;

        if i9 < i8 goto label09;

        i13 = i16;

        i16 = i16 + 2;

        i33 = i16;

        i9 = 0;

        if i33 <= 15 goto label09;

        i16 = 15;

        i9 = 0;

        goto label09;

     label19:
        $i82 = r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs>;

        $i81 = 1 + $i82;

        r0.<com.android.server.am.ActivityManagerService: int mNumCachedHiddenProcs> = $i81;

        i12 = i12 + 1;

        if i12 <= i4 goto label11;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cached #");

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r11, $r56);

        goto label11;

     label20:
        i34 = <com.android.server.am.ProcessList: int TRIM_EMPTY_APPS>;

        if i11 <= i34 goto label21;

        $l77 = r11.<com.android.server.am.ProcessRecord: long lastActivityTime>;

        $b78 = $l77 cmp l1;

        if $b78 >= 0 goto label21;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("empty for ");

        $l73 = 1800000L + l1;

        $l72 = r11.<com.android.server.am.ProcessRecord: long lastActivityTime>;

        $l74 = $l73 - $l72;

        $l75 = $l74 / 1000L;

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l75);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $r55 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r11, $r55);

        goto label11;

     label21:
        i11 = i11 + 1;

        if i11 <= i3 goto label11;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("empty #");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)>(r11, $r48);

        goto label11;

     label22:
        $i42 = r0.<com.android.server.am.ActivityManagerService: int mNewNumServiceProcs>;

        r0.<com.android.server.am.ActivityManagerService: int mNumServiceProcs> = $i42;

        i20 = i12 + i11;

        i19 = <com.android.server.am.ProcessList: int TRIM_CACHED_APPS>;

        if i12 > i19 goto label41;

        i31 = <com.android.server.am.ProcessList: int TRIM_EMPTY_APPS>;

        if i11 > i31 goto label41;

        if i20 > 3 goto label39;

        i22 = 3;

     label23:
        i21 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

        if i22 <= i21 goto label25;

        $z13 = r0.<com.android.server.am.ActivityManagerService: boolean mAllowLowerMemLevel>;

        if $z13 == 0 goto label24;

        $r36 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i69 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        $i70 = r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses>;

        if $i69 < $i70 goto label25;

     label24:
        i22 = r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel>;

     label25:
        r0.<com.android.server.am.ActivityManagerService: int mLastMemoryLevel> = i22;

        $r13 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $i48 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        r0.<com.android.server.am.ActivityManagerService: int mLastNumProcesses> = $i48;

        r3 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $z4 = r0.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z4 != 0 goto label42;

        z0 = 1;

     label26:
        z1 = virtualinvoke r3.<com.android.server.am.ProcessStatsService: boolean setMemFactorLocked(int,boolean,long)>(i22, z0, l0);

        $r14 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        i23 = virtualinvoke $r14.<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>();

        if i22 == 0 goto label57;

        $l51 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b52 = $l51 cmp 0L;

        if $b52 != 0 goto label27;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = l0;

     label27:
        i27 = 0;

        tableswitch(i22)
        {
            case 2: goto label44;
            case 3: goto label43;
            default: goto label28;
        };

     label28:
        b28 = 5;

     label29:
        i25 = i14 / 3;

        i26 = 2;

        $r26 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if $r26 == null goto label30;

        i26 = 3;

     label30:
        $r27 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mPreviousProcess>;

        if $r27 == null goto label31;

        i26 = i26 + 1;

     label31:
        if i25 >= i26 goto label32;

        i25 = i26;

     label32:
        b29 = 80;

        i30 = i2 - 1;

     label33:
        if i30 < 0 goto label66;

        $r24 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        r6 = (com.android.server.am.ProcessRecord) $r25;

        if z1 != 0 goto label34;

        $z14 = r6.<com.android.server.am.ProcessRecord: boolean procStateChanged>;

        if $z14 == 0 goto label35;

     label34:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void setProcessTrackerState(com.android.server.am.ProcessRecord,int,long)>(r6, i23, l0);

        r6.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 0;

     label35:
        $i58 = r6.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i58 < 9 goto label47;

        $z15 = r6.<com.android.server.am.ProcessRecord: boolean killedByAm>;

        if $z15 != 0 goto label47;

        $i63 = r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i63 >= b29 goto label37;

        $r33 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r33 == null goto label37;

     label36:
        $r32 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r32.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(b29);

     label37:
        r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = b29;

        i27 = i27 + 1;

        if i27 < i25 goto label38;

        i27 = 0;

        lookupswitch(b29)
        {
            case 60: goto label46;
            case 80: goto label45;
            default: goto label38;
        };

     label38:
        i30 = i30 + -1;

        goto label33;

     label39:
        if i20 > 5 goto label40;

        i22 = 2;

        goto label23;

     label40:
        i22 = 1;

        goto label23;

     label41:
        i22 = 0;

        goto label23;

     label42:
        z0 = 0;

        goto label26;

     label43:
        b28 = 15;

        goto label29;

     label44:
        b28 = 10;

        goto label29;

     label45:
        b29 = 60;

        i27 = 0;

        goto label38;

     label46:
        b29 = 40;

        i27 = 0;

        goto label38;

     label47:
        $i59 = r6.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i59 != 6 goto label50;

        $i60 = r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i60 >= 40 goto label49;

        $r35 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r35 == null goto label49;

     label48:
        $r34 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r34.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(40);

     label49:
        r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = 40;

        goto label38;

     label50:
        $i57 = r6.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i57 >= 4 goto label51;

        $z12 = r6.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        if $z12 == 0 goto label54;

     label51:
        $z11 = r6.<com.android.server.am.ProcessRecord: boolean pendingUiClean>;

        if $z11 == 0 goto label54;

        $i61 = r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i61 >= 20 goto label53;

        $r29 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r29 == null goto label53;

     label52:
        $r28 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r28.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(20);

     label53:
        r6.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 0;

     label54:
        $i62 = r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i62 >= b28 goto label56;

        $r31 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r31 == null goto label56;

     label55:
        $r30 = r6.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r30.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(b28);

     label56:
        r6.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = b28;

        goto label38;

     label57:
        $l46 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $b47 = $l46 cmp 0L;

        if $b47 == 0 goto label58;

        $l53 = r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle>;

        $l55 = r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime>;

        $l56 = l0 - $l55;

        $l54 = $l53 + $l56;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamTimeSinceLastIdle> = $l54;

        r0.<com.android.server.am.ActivityManagerService: long mLowRamStartTime> = 0L;

     label58:
        i24 = i2 - 1;

     label59:
        if i24 < 0 goto label66;

        $r21 = r0.<com.android.server.am.ActivityManagerService: java.util.ArrayList mLruProcesses>;

        $r23 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        r4 = (com.android.server.am.ProcessRecord) $r23;

        if z1 != 0 goto label60;

        $z10 = r4.<com.android.server.am.ProcessRecord: boolean procStateChanged>;

        if $z10 == 0 goto label61;

     label60:
        specialinvoke r0.<com.android.server.am.ActivityManagerService: void setProcessTrackerState(com.android.server.am.ProcessRecord,int,long)>(r4, i23, l0);

        r4.<com.android.server.am.ProcessRecord: boolean procStateChanged> = 0;

     label61:
        $i50 = r4.<com.android.server.am.ProcessRecord: int curProcState>;

        if $i50 >= 4 goto label62;

        $z9 = r4.<com.android.server.am.ProcessRecord: boolean systemNoUi>;

        if $z9 == 0 goto label65;

     label62:
        $z8 = r4.<com.android.server.am.ProcessRecord: boolean pendingUiClean>;

        if $z8 == 0 goto label65;

        $i49 = r4.<com.android.server.am.ProcessRecord: int trimMemoryLevel>;

        if $i49 >= 20 goto label64;

        $r20 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r20 == null goto label64;

     label63:
        $r19 = r4.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        interfaceinvoke $r19.<android.app.IApplicationThread: void scheduleTrimMemory(int)>(20);

     label64:
        r4.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 0;

     label65:
        r4.<com.android.server.am.ProcessRecord: int trimMemoryLevel> = 0;

        i24 = i24 + -1;

        goto label59;

     label66:
        $z3 = r0.<com.android.server.am.ActivityManagerService: boolean mAlwaysFinishActivities>;

        if $z3 == 0 goto label67;

        $r22 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r22.<com.android.server.am.ActivityStackSupervisor: void scheduleDestroyAllActivities(com.android.server.am.ProcessRecord,java.lang.String)>(null, "always-finish");

     label67:
        if z1 == 0 goto label68;

        $r15 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $z6 = virtualinvoke $r15.<com.android.server.am.ProcessStatsService: boolean isMemFactorLowered()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void requestPssAllProcsLocked(long,boolean,boolean)>(l0, 0, $z6);

     label68:
        $r16 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessStatsService mProcessStats>;

        $z7 = virtualinvoke $r16.<com.android.server.am.ProcessStatsService: boolean shouldWriteNowLocked(long)>(l0);

        if $z7 == 0 goto label69;

        $r17 = r0.<com.android.server.am.ActivityManagerService: android.os.Handler mHandler>;

        $r18 = new com.android.server.am.ActivityManagerService$20;

        specialinvoke $r18.<com.android.server.am.ActivityManagerService$20: void <init>(com.android.server.am.ActivityManagerService)>(r0);

        virtualinvoke $r17.<android.os.Handler: boolean post(java.lang.Runnable)>($r18);

     label69:
        return;

     label70:
        $r49 := @caughtexception;

        goto label64;

     label71:
        $r52 := @caughtexception;

        goto label56;

     label72:
        $r51 := @caughtexception;

        goto label53;

     label73:
        $r50 := @caughtexception;

        goto label49;

     label74:
        $r53 := @caughtexception;

        goto label37;

        catch android.os.RemoteException from label36 to label37 with label74;
        catch android.os.RemoteException from label48 to label49 with label73;
        catch android.os.RemoteException from label52 to label53 with label72;
        catch android.os.RemoteException from label55 to label56 with label71;
        catch android.os.RemoteException from label63 to label64 with label70;
    }

    final boolean updateOomAdjLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean)>(r1, 0);

        return $z0;
    }

    final boolean updateOomAdjLocked(com.android.server.am.ProcessRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ProcessRecord r1, r3;
        boolean z0, z1, z2, $z3;
        com.android.server.am.ActivityRecord r2;
        int i0, $i1, $i2, $i3, $i5;
        long $l4;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        z0 := @parameter1: boolean;

        r2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord resumedAppLocked()>();

        if r2 == null goto label5;

        r3 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

     label1:
        z1 = r1.<com.android.server.am.ProcessRecord: boolean cached>;

        $i1 = r0.<com.android.server.am.ActivityManagerService: int mAdjSeq>;

        $i2 = 1 + $i1;

        r0.<com.android.server.am.ActivityManagerService: int mAdjSeq> = $i2;

        $i3 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        if $i3 < 9 goto label6;

        i0 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

     label2:
        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        z2 = specialinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,boolean,long)>(r1, i0, r3, 0, z0, $l4);

        $z3 = r1.<com.android.server.am.ProcessRecord: boolean cached>;

        if z1 != $z3 goto label3;

        $i5 = r1.<com.android.server.am.ProcessRecord: int curRawAdj>;

        if $i5 != 16 goto label4;

     label3:
        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label4:
        return z2;

     label5:
        r3 = null;

        goto label1;

     label6:
        i0 = 16;

        goto label2;
    }

    public void updatePersistentConfiguration(android.content.res.Configuration)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.res.Configuration r1;
        java.lang.Throwable r2, $r4;
        long l0;
        java.lang.NullPointerException $r3;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.res.Configuration;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_CONFIGURATION", "updateConfiguration()");

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SETTINGS", "updateConfiguration()");

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Configuration must not be null");

        throw $r3;

     label1:
        entermonitor r0;

     label2:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r1, null, 1, 0);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r0;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void updateUsageStats(com.android.server.am.ActivityRecord, boolean)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r2;
        java.lang.Throwable r3, r4, $r12, $r13;
        com.android.server.am.BatteryStatsService $r5;
        android.content.ComponentName $r6, $r9;
        com.android.server.am.UsageStatsService $r7, $r10;
        com.android.server.am.ProcessRecord $r8, $r11;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        $r5 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r2 = virtualinvoke $r5.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        if z0 == 0 goto label06;

        $r10 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        $r9 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        virtualinvoke $r10.<com.android.server.am.UsageStatsService: void noteResumeComponent(android.content.ComponentName)>($r9);

        entermonitor r2;

     label01:
        $r11 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i1 = $r11.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: void noteActivityResumedLocked(int)>($i1);

        exitmonitor r2;

     label02:
        return;

     label03:
        $r12 := @caughtexception;

        r4 = $r12;

     label04:
        exitmonitor r2;

     label05:
        throw r4;

     label06:
        $r7 = r0.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        $r6 = r1.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        virtualinvoke $r7.<com.android.server.am.UsageStatsService: void notePauseComponent(android.content.ComponentName)>($r6);

        entermonitor r2;

     label07:
        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i0 = $r8.<com.android.server.am.ProcessRecord: int uid>;

        virtualinvoke r2.<com.android.internal.os.BatteryStatsImpl: void noteActivityPausedLocked(int)>($i0);

        exitmonitor r2;

     label08:
        return;

     label09:
        $r13 := @caughtexception;

        r3 = $r13;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void userInitialized(com.android.server.am.UserStartedState, int)
    {
        com.android.server.am.ActivityManagerService r0;
        com.android.server.am.UserStartedState r1;
        int i0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: com.android.server.am.UserStartedState;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.ActivityManagerService: void completeSwitchAndInitalize(com.android.server.am.UserStartedState,int,boolean,boolean)>(r1, i0, 1, 0);

        return;
    }

    final android.content.Intent verifyBroadcastLocked(android.content.Intent)
    {
        com.android.server.am.ActivityManagerService r0;
        android.content.Intent r1, r2, $r11;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3, $r12;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.content.Intent;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.content.Intent: boolean hasFileDescriptors()>();

        if $z1 != 1 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File descriptors passed in Intent");

        throw $r12;

     label1:
        i0 = virtualinvoke r1.<android.content.Intent: int getFlags()>();

        $z0 = r0.<com.android.server.am.ActivityManagerService: boolean mProcessesReady>;

        if $z0 != 0 goto label2;

        $i2 = 67108864 & i0;

        if $i2 == 0 goto label3;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        r2 = $r11;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        r1 = r2;

     label2:
        $i1 = 33554432 & i0;

        if $i1 == 0 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here");

        throw $r3;

     label3:
        $i3 = i0 & 1073741824;

        if $i3 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to launch receivers of broadcast intent ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" before boot completion");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot broadcast before boot completed");

        throw $r9;

     label4:
        return r1;
    }

    public void wakingUp()
    {
        com.android.server.am.ActivityManagerService r0;
        java.lang.Throwable r1, $r3;
        int $i0;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.server.am.ActivityManagerService;

        $i0 = virtualinvoke r0.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DEVICE_POWER");

        if $i0 == 0 goto label1;

        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.DEVICE_POWER");

        throw $r2;

     label1:
        entermonitor r0;

     label2:
        r0.<com.android.server.am.ActivityManagerService: boolean mWentToSleep> = 0;

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void updateEventDispatchingLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityManagerService: void comeOutOfSleepIfNeededLocked()>();

        exitmonitor r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean willActivityBeVisible(android.os.IBinder)
    {
        com.android.server.am.ActivityManagerService r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r4;
        com.android.server.am.ActivityStack r3;
        boolean z0;

        r0 := @this: com.android.server.am.ActivityManagerService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        r3 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>(r1);

     label2:
        if r3 == null goto label5;

     label3:
        z0 = virtualinvoke r3.<com.android.server.am.ActivityStack: boolean willActivityBeVisibleLocked(android.os.IBinder)>(r1);

        exitmonitor r0;

     label4:
        return z0;

     label5:
        exitmonitor r0;

     label6:
        return 0;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
