public final class com.android.server.am.BatteryStatsService extends com.android.internal.app.IBatteryStats$Stub
{
    static com.android.internal.app.IBatteryStats sService;
    private android.bluetooth.BluetoothHeadset mBluetoothHeadset;
    private boolean mBluetoothPendingStats;
    private android.bluetooth.BluetoothProfile$ServiceListener mBluetoothProfileServiceListener;
    android.content.Context mContext;
    final com.android.internal.os.BatteryStatsImpl mStats;

    void <init>(java.lang.String)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        com.android.server.am.BatteryStatsService$1 r4;
        com.android.internal.os.BatteryStatsImpl r5;
        android.bluetooth.BluetoothProfile$ServiceListener r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.internal.app.IBatteryStats$Stub: void <init>()>();

        r4 = new com.android.server.am.BatteryStatsService$1;

        specialinvoke r4.<com.android.server.am.BatteryStatsService$1: void <init>(com.android.server.am.BatteryStatsService)>(r0);

        r6 = (android.bluetooth.BluetoothProfile$ServiceListener) r4;

        r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothProfile$ServiceListener mBluetoothProfileServiceListener> = r6;

        r5 = new com.android.internal.os.BatteryStatsImpl;

        specialinvoke r5.<com.android.internal.os.BatteryStatsImpl: void <init>(java.lang.String)>(r1);

        r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats> = r5;

        return;
    }

    static android.bluetooth.BluetoothHeadset access$000(com.android.server.am.BatteryStatsService)
    {
        com.android.server.am.BatteryStatsService r0;
        android.bluetooth.BluetoothHeadset $r1;

        r0 := @parameter0: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset mBluetoothHeadset>;

        return $r1;
    }

    static android.bluetooth.BluetoothHeadset access$002(com.android.server.am.BatteryStatsService, android.bluetooth.BluetoothHeadset)
    {
        com.android.server.am.BatteryStatsService r0;
        android.bluetooth.BluetoothHeadset r1;

        r0 := @parameter0: com.android.server.am.BatteryStatsService;

        r1 := @parameter1: android.bluetooth.BluetoothHeadset;

        r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset mBluetoothHeadset> = r1;

        return r1;
    }

    static boolean access$100(com.android.server.am.BatteryStatsService)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.am.BatteryStatsService;

        $z0 = r0.<com.android.server.am.BatteryStatsService: boolean mBluetoothPendingStats>;

        return $z0;
    }

    static boolean access$102(com.android.server.am.BatteryStatsService, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.am.BatteryStatsService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.am.BatteryStatsService: boolean mBluetoothPendingStats> = z0;

        return z0;
    }

    private void dumpHelp(java.io.PrintWriter)
    {
        com.android.server.am.BatteryStatsService r0;
        java.io.PrintWriter r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats (batterystats) dump options:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  [--checkin] [-c] [--unplugged] [--reset] [--write] [-h] [<package.name>]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --checkin: format output for a checkin report.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --unplugged: only output data since last unplugged.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --reset: reset the stats, clearing all current data.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  --write: force write current collected stats to disk.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  -h: print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  <package.name>: optional name of package to filter output by.");

        return;
    }

    public static com.android.internal.app.IBatteryStats getService()
    {
        com.android.internal.app.IBatteryStats $r0, $r2, $r3, $r4;
        android.os.IBinder $r1;

        $r0 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        if $r0 == null goto label1;

        $r4 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        return $r4;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batterystats");

        $r2 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>($r1);

        <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService> = $r2;

        $r3 = <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats sService>;

        return $r3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.BatteryStatsService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8, $i9;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        com.android.internal.os.BatteryStatsImpl r4, r7, r11, r12, $r16, $r20, $r31, $r34;
        java.lang.Throwable r5, r8, r13, r15, $r47, $r48, $r49, $r51;
        java.util.List r6;
        java.lang.String r10, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r32, $r46, $r50;
        android.content.Context $r14, $r18, $r28;
        android.content.pm.PackageManager $r17, $r27;
        java.lang.StringBuilder $r29, $r30, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r43, $r44, $r45;
        char $c7;
        android.content.pm.PackageManager$NameNotFoundException $r41;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r14 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $i4 = virtualinvoke $r14.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i4 == 0 goto label02;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump BatteryStats from from pid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r35 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r45 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r46);

     label01:
        return;

     label02:
        i0 = -1;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        if r3 == null goto label28;

        i1 = lengthof r3;

        i2 = 0;

     label03:
        if i2 >= i1 goto label28;

        r10 = r3[i2];

        $r19 = "--checkin";

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z4 == 0 goto label05;

        z1 = 1;

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        $r22 = "-c";

        $z6 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z6 == 0 goto label06;

        z1 = 1;

        z0 = 1;

        goto label04;

     label06:
        $r21 = "--unplugged";

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z5 == 0 goto label07;

        z2 = 1;

        goto label04;

     label07:
        $r24 = "--reset";

        $z8 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z8 == 0 goto label15;

        r12 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r12;

     label08:
        $r34 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r34.<com.android.internal.os.BatteryStatsImpl: void resetAllStatsLocked()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats reset.");

     label09:
        z3 = 1;

     label10:
        exitmonitor r12;

     label11:
        goto label04;

     label12:
        $r47 := @caughtexception;

        r15 = $r47;

     label13:
        exitmonitor r12;

     label14:
        throw r15;

     label15:
        $r23 = "--write";

        $z7 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z7 == 0 goto label23;

        r11 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r11;

     label16:
        $r31 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r31.<com.android.internal.os.BatteryStatsImpl: void writeSyncLocked()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Battery stats written.");

     label17:
        z3 = 1;

     label18:
        exitmonitor r11;

     label19:
        goto label04;

     label20:
        $r51 := @caughtexception;

        r13 = $r51;

     label21:
        exitmonitor r11;

     label22:
        throw r13;

     label23:
        $r26 = "-h";

        $z10 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z10 == 0 goto label24;

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label24:
        $r25 = "-a";

        $z9 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z9 != 0 goto label04;

        $i6 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i6 <= 0 goto label25;

        $c7 = virtualinvoke r10.<java.lang.String: char charAt(int)>(0);

        if $c7 != 45 goto label25;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label25:
        $r28 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r27 = virtualinvoke $r28.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i5 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i3 = virtualinvoke $r27.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r10, $i5);

     label26:
        i0 = i3;

        goto label04;

     label27:
        $r41 := @caughtexception;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        specialinvoke r0.<com.android.server.am.BatteryStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label28:
        if z3 != 0 goto label01;

        if z1 == 0 goto label34;

        $r18 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r17 = virtualinvoke $r18.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r6 = virtualinvoke $r17.<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>(0);

        r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r7;

     label29:
        $r20 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r20.<com.android.internal.os.BatteryStatsImpl: void dumpCheckinLocked(java.io.PrintWriter,java.util.List,boolean,boolean)>(r2, r6, z2, z0);

        exitmonitor r7;

     label30:
        return;

     label31:
        $r49 := @caughtexception;

        r8 = $r49;

     label32:
        exitmonitor r7;

     label33:
        throw r8;

     label34:
        r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r4;

     label35:
        $r16 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r16.<com.android.internal.os.BatteryStatsImpl: void dumpLocked(java.io.PrintWriter,boolean,int)>(r2, z2, i0);

        exitmonitor r4;

     label36:
        return;

     label37:
        $r48 := @caughtexception;

        r5 = $r48;

     label38:
        exitmonitor r4;

     label39:
        throw r5;

        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch android.content.pm.PackageManager$NameNotFoundException from label25 to label26 with label27;
        catch java.lang.Throwable from label29 to label30 with label31;
        catch java.lang.Throwable from label32 to label33 with label31;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label38 to label39 with label37;
    }

    public void enforceCallingPermission()
    {
        com.android.server.am.BatteryStatsService r0;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", $i2, $i3, null);

        return;
    }

    public com.android.internal.os.BatteryStatsImpl getActiveStatistics()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        return $r1;
    }

    public long getAwakeTimeBattery()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        long $l0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>();

        return $l0;
    }

    public long getAwakeTimePlugged()
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context $r1;
        com.android.internal.os.BatteryStatsImpl $r2;
        long $l0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        $r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $l0 = virtualinvoke $r2.<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()>();

        return $l0;
    }

    public byte[] getStatistics()
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.Parcel r1;
        byte[] r2;
        android.content.Context $r3;
        com.android.internal.os.BatteryStatsImpl $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r3 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.BATTERY_STATS", null);

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        r2 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r2;
    }

    public boolean isOnBattery()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.BatteryStatsService;

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $z0 = virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>();

        return $z0;
    }

    public void noteBluetoothOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        r0.<com.android.server.am.BatteryStatsService: boolean mBluetoothPendingStats> = 0;

        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOffLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteBluetoothOn()
    {
        com.android.server.am.BatteryStatsService r0;
        android.bluetooth.BluetoothAdapter r1;
        com.android.internal.os.BatteryStatsImpl r2, $r5, $r7;
        java.lang.Throwable r3, $r10;
        android.bluetooth.BluetoothHeadset $r4, $r6;
        android.bluetooth.BluetoothProfile$ServiceListener $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        if r1 == null goto label1;

        $r9 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r8 = r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothProfile$ServiceListener mBluetoothProfileServiceListener>;

        virtualinvoke r1.<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)>($r9, $r8, 1);

     label1:
        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label2:
        $r4 = r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset mBluetoothHeadset>;

        if $r4 == null goto label5;

        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOnLocked()>();

        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r6 = r0.<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset mBluetoothHeadset>;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void setBtHeadset(android.bluetooth.BluetoothHeadset)>($r6);

     label3:
        exitmonitor r2;

     label4:
        return;

     label5:
        r0.<com.android.server.am.BatteryStatsService: boolean mBluetoothPendingStats> = 1;

     label6:
        goto label3;

     label7:
        $r10 := @caughtexception;

        r3 = $r10;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void noteFullWifiLockAcquired(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFullWifiLockReleased(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteFullWifiLockReleasedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteInputEvent()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: void noteInputEventAtomic()>();

        return;
    }

    public void noteNetworkInterfaceType(java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        java.lang.String r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteNetworkInterfaceTypeLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteNetworkStatsEnabled()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteNetworkStatsEnabledLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneDataConnectionState(int, boolean)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        boolean z0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void notePhoneDataConnectionStateLocked(int,boolean)>(i0, z0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void notePhoneOffLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneOn()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void notePhoneOnLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneSignalStrength(android.telephony.SignalStrength)
    {
        com.android.server.am.BatteryStatsService r0;
        android.telephony.SignalStrength r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.telephony.SignalStrength;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void notePhoneSignalStrengthLocked(android.telephony.SignalStrength)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void notePhoneState(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r4;
        java.lang.Throwable r2, $r5;
        android.telephony.TelephonyManager $r3;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r3 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        i1 = virtualinvoke $r3.<android.telephony.TelephonyManager: int getSimState()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void notePhoneStateLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteScreenBrightness(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteScreenBrightnessLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteScreenOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteScreenOffLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteScreenOn()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteScreenOnLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartAudio(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteAudioOnLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartGps(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteStartGpsLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartSensor(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteStartSensorLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartVideo(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteVideoOnLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartWakelock(int, int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,int)>(i0, i1, r1, i2);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStartWakelockFromSource(android.os.WorkSource, int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        int i0, i1;
        java.lang.String r2;
        com.android.internal.os.BatteryStatsImpl r3, $r5;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r3;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteStartWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,int)>(r1, i0, r2, i1);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopAudio(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteAudioOffLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopGps(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteStopGpsLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopSensor(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteStopSensorLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopVideo(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteVideoOffLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopWakelock(int, int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2;
        java.lang.String r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,int)>(i0, i1, r1, i2);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteStopWakelockFromSource(android.os.WorkSource, int, java.lang.String, int)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        int i0, i1;
        java.lang.String r2;
        com.android.internal.os.BatteryStatsImpl r3, $r5;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r3;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteStopWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,int)>(r1, i0, r2, i1);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteUserActivity(int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteUserActivityLocked(int,int)>(i0, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteVibratorOff(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteVibratorOffLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteVibratorOn(int, long)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        long l1;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteVibratorOnLocked(int,long)>(i0, l1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiBatchedScanStartedFromSource(android.os.WorkSource, int)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        int i0;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedFromSourceLocked(android.os.WorkSource,int)>(r1, i0);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiMulticastDisabled(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiMulticastDisabledFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiMulticastEnabled(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiMulticastEnabledFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiOff()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiOffLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiOn()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiOnLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiRunning(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiRunningChanged(android.os.WorkSource, android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1, r2;
        com.android.internal.os.BatteryStatsImpl r3, $r5;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        r2 := @parameter1: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r3;

     label1:
        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningChangedLocked(android.os.WorkSource,android.os.WorkSource)>(r1, r2);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiScanStarted(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiScanStartedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiScanStopped(int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiScanStoppedFromSource(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedFromSourceLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void noteWifiStopped(android.os.WorkSource)
    {
        com.android.server.am.BatteryStatsService r0;
        android.os.WorkSource r1;
        com.android.internal.os.BatteryStatsImpl r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.os.WorkSource;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r4.<com.android.internal.os.BatteryStatsImpl: void noteWifiStoppedLocked(android.os.WorkSource)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void publish(android.content.Context)
    {
        com.android.server.am.BatteryStatsService r0;
        android.content.Context r1, $r4, $r6;
        android.os.IBinder $r2;
        com.android.internal.os.PowerProfile $r3;
        com.android.internal.os.BatteryStatsImpl $r5, $r7;
        int $i0, $i1;
        android.content.res.Resources $r8;
        long $l2, $l3;

        r0 := @this: com.android.server.am.BatteryStatsService;

        r1 := @parameter0: android.content.Context;

        r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r0.<com.android.server.am.BatteryStatsService: android.os.IBinder asBinder()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("batterystats", $r2);

        $r5 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r3 = new com.android.internal.os.PowerProfile;

        $r4 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        specialinvoke $r3.<com.android.internal.os.PowerProfile: void <init>(android.content.Context)>($r4);

        $i0 = virtualinvoke $r3.<com.android.internal.os.PowerProfile: int getNumSpeedSteps()>();

        virtualinvoke $r5.<com.android.internal.os.BatteryStatsImpl: void setNumSpeedSteps(int)>($i0);

        $r7 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        $r6 = r0.<com.android.server.am.BatteryStatsService: android.content.Context mContext>;

        $r8 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r8.<android.content.res.Resources: int getInteger(int)>(17694732);

        $l2 = (long) $i1;

        $l3 = 1000L * $l2;

        virtualinvoke $r7.<com.android.internal.os.BatteryStatsImpl: void setRadioScanningTimeout(long)>($l3);

        return;
    }

    public void setBatteryState(int, int, int, int, int, int)
    {
        com.android.server.am.BatteryStatsService r0;
        int i0, i1, i2, i3, i4, i5;
        com.android.internal.os.BatteryStatsImpl $r1;

        r0 := @this: com.android.server.am.BatteryStatsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        virtualinvoke r0.<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>();

        $r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r1.<com.android.internal.os.BatteryStatsImpl: void setBatteryState(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        return;
    }

    public void shutdown()
    {
        com.android.server.am.BatteryStatsService r0;
        com.android.internal.os.BatteryStatsImpl r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.server.am.BatteryStatsService;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BatteryStats", "Writing battery stats before shutdown...");

        r1 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl mStats>;

        virtualinvoke $r3.<com.android.internal.os.BatteryStatsImpl: void shutdownLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
