public class com.android.server.InputMethodManagerService extends com.android.internal.view.IInputMethodManager$Stub implements android.content.ServiceConnection, android.os.Handler$Callback
{
    static final boolean DEBUG;
    static final int MSG_ATTACH_TOKEN;
    static final int MSG_BIND_INPUT;
    static final int MSG_BIND_METHOD;
    static final int MSG_CREATE_SESSION;
    static final int MSG_HARD_KEYBOARD_SWITCH_CHANGED;
    static final int MSG_HIDE_SOFT_INPUT;
    static final int MSG_RESTART_INPUT;
    static final int MSG_SET_ACTIVE;
    static final int MSG_SHOW_IM_CONFIG;
    static final int MSG_SHOW_IM_PICKER;
    static final int MSG_SHOW_IM_SUBTYPE_ENABLER;
    static final int MSG_SHOW_IM_SUBTYPE_PICKER;
    static final int MSG_SHOW_SOFT_INPUT;
    static final int MSG_START_INPUT;
    static final int MSG_UNBIND_INPUT;
    static final int MSG_UNBIND_METHOD;
    private static final int NOT_A_SUBTYPE_ID;
    static final int SECURE_SUGGESTION_SPANS_MAX_SIZE;
    static final java.lang.String TAG;
    private static final java.lang.String TAG_TRY_SUPPRESSING_IME_SWITCHER;
    static final long TIME_TO_RECONNECT;
    int mBackDisposition;
    boolean mBoundToMethod;
    final com.android.internal.os.HandlerCaller mCaller;
    final java.util.HashMap mClients;
    final android.content.Context mContext;
    android.view.inputmethod.EditorInfo mCurAttribute;
    com.android.server.InputMethodManagerService$ClientState mCurClient;
    private boolean mCurClientInKeyguard;
    android.os.IBinder mCurFocusedWindow;
    java.lang.String mCurId;
    com.android.internal.view.IInputContext mCurInputContext;
    android.content.Intent mCurIntent;
    com.android.internal.view.IInputMethod mCurMethod;
    java.lang.String mCurMethodId;
    int mCurSeq;
    android.os.IBinder mCurToken;
    private android.view.inputmethod.InputMethodSubtype mCurrentSubtype;
    private android.app.AlertDialog$Builder mDialogBuilder;
    com.android.server.InputMethodManagerService$SessionState mEnabledSession;
    private com.android.server.InputMethodManagerService$InputMethodFileManager mFileManager;
    final android.os.Handler mHandler;
    private final com.android.server.InputMethodManagerService$HardKeyboardListener mHardKeyboardListener;
    final boolean mHasFeature;
    boolean mHaveConnection;
    private final android.content.pm.IPackageManager mIPackageManager;
    final android.view.IWindowManager mIWindowManager;
    private com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager mImListManager;
    private final boolean mImeSelectedOnBoot;
    private android.app.PendingIntent mImeSwitchPendingIntent;
    private android.app.Notification mImeSwitcherNotification;
    int mImeWindowVis;
    private android.view.inputmethod.InputMethodInfo[] mIms;
    boolean mInputShown;
    private android.app.KeyguardManager mKeyguardManager;
    long mLastBindTime;
    private java.util.Locale mLastSystemLocale;
    final java.util.ArrayList mMethodList;
    final java.util.HashMap mMethodMap;
    private final com.android.server.InputMethodManagerService$MyPackageMonitor mMyPackageMonitor;
    final com.android.internal.view.InputBindResult mNoBinding;
    private android.app.NotificationManager mNotificationManager;
    private boolean mNotificationShown;
    final android.content.res.Resources mRes;
    boolean mScreenOn;
    private final android.util.LruCache mSecureSuggestionSpans;
    final com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings;
    final com.android.server.InputMethodManagerService$SettingsObserver mSettingsObserver;
    private final java.util.HashMap mShortcutInputMethodsAndSubtypes;
    boolean mShowExplicitlyRequested;
    boolean mShowForced;
    private boolean mShowOngoingImeSwitcherForPhones;
    boolean mShowRequested;
    private com.android.server.StatusBarManagerService mStatusBar;
    private int[] mSubtypeIds;
    private android.app.AlertDialog mSwitchingDialog;
    private android.view.View mSwitchingDialogTitleView;
    boolean mSystemReady;
    boolean mVisibleBound;
    final android.content.ServiceConnection mVisibleConnection;
    private final com.android.server.wm.WindowManagerService mWindowManagerService;

    public void <init>(android.content.Context, com.android.server.wm.WindowManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        android.content.Context r1, $r39, $r42, $r51, $r67;
        com.android.server.wm.WindowManagerService r2;
        android.content.Intent r3, r81;
        android.content.IntentFilter r4, r8, r82, r89;
        android.os.RemoteException r5, $r63;
        int i0;
        boolean z0, z1, z2, $z3, $z4, $z5;
        java.util.ArrayList r6, $r54, r69;
        java.util.HashMap r7, $r53, $r58, r70, r73, r74;
        android.content.pm.IPackageManager $r16;
        android.content.res.Resources $r19, $r48;
        android.view.IWindowManager $r20;
        android.os.IBinder $r21;
        android.app.Notification $r26, $r28, $r29, $r30, $r31, $r33, $r34, $r35, r80;
        android.content.pm.PackageManager $r27;
        java.lang.String[] $r32;
        android.app.PendingIntent $r36;
        android.app.IActivityManager $r40, $r46;
        android.os.UserHandle $r44;
        android.content.pm.UserInfo $r45;
        com.android.server.InputMethodManagerService$MyPackageMonitor $r50, r75;
        android.content.ContentResolver $r55;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r56, $r60, r85;
        java.lang.String $r61;
        android.os.Handler $r64, r76;
        com.android.internal.view.InputBindResult r68;
        android.util.LruCache r71;
        com.android.server.InputMethodManagerService$1 r72;
        com.android.server.InputMethodManagerService$2 r77;
        com.android.internal.os.HandlerCaller r78;
        com.android.server.InputMethodManagerService$HardKeyboardListener r79;
        com.android.server.InputMethodManagerService$ImmsBroadcastReceiver r83;
        com.android.server.InputMethodManagerService$3 r84;
        com.android.server.InputMethodManagerService$InputMethodFileManager r86;
        com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager r87;
        com.android.server.InputMethodManagerService$SettingsObserver r88;
        com.android.server.InputMethodManagerService$4 r90;
        android.content.ServiceConnection r91;
        android.os.Handler$Callback r92;
        com.android.internal.os.HandlerCaller$Callback r93;
        android.app.IUserSwitchObserver r94;
        java.lang.Throwable r95;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.wm.WindowManagerService;

        specialinvoke r0.<com.android.internal.view.IInputMethodManager$Stub: void <init>()>();

        r68 = new com.android.internal.view.InputBindResult;

        specialinvoke r68.<com.android.internal.view.InputBindResult: void <init>(com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int)>(null, null, null, -1);

        r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult mNoBinding> = r68;

        r69 = new java.util.ArrayList;

        specialinvoke r69.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList> = r69;

        r70 = new java.util.HashMap;

        specialinvoke r70.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap> = r70;

        r71 = new android.util.LruCache;

        specialinvoke r71.<android.util.LruCache: void <init>(int)>(20);

        r0.<com.android.server.InputMethodManagerService: android.util.LruCache mSecureSuggestionSpans> = r71;

        r72 = new com.android.server.InputMethodManagerService$1;

        specialinvoke r72.<com.android.server.InputMethodManagerService$1: void <init>(com.android.server.InputMethodManagerService)>(r0);

        r91 = (android.content.ServiceConnection) r72;

        r0.<com.android.server.InputMethodManagerService: android.content.ServiceConnection mVisibleConnection> = r91;

        r0.<com.android.server.InputMethodManagerService: boolean mVisibleBound> = 0;

        r73 = new java.util.HashMap;

        specialinvoke r73.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.InputMethodManagerService: java.util.HashMap mClients> = r73;

        r74 = new java.util.HashMap;

        specialinvoke r74.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.InputMethodManagerService: java.util.HashMap mShortcutInputMethodsAndSubtypes> = r74;

        r0.<com.android.server.InputMethodManagerService: boolean mScreenOn> = 1;

        r0.<com.android.server.InputMethodManagerService: int mBackDisposition> = 0;

        r75 = new com.android.server.InputMethodManagerService$MyPackageMonitor;

        specialinvoke r75.<com.android.server.InputMethodManagerService$MyPackageMonitor: void <init>(com.android.server.InputMethodManagerService)>(r0);

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$MyPackageMonitor mMyPackageMonitor> = r75;

        $r16 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r0.<com.android.server.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager> = $r16;

        r0.<com.android.server.InputMethodManagerService: android.content.Context mContext> = r1;

        $r19 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes> = $r19;

        r76 = new android.os.Handler;

        r92 = (android.os.Handler$Callback) r0;

        specialinvoke r76.<android.os.Handler: void <init>(android.os.Handler$Callback)>(r92);

        r0.<com.android.server.InputMethodManagerService: android.os.Handler mHandler> = r76;

        $r21 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r20 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r21);

        r0.<com.android.server.InputMethodManagerService: android.view.IWindowManager mIWindowManager> = $r20;

        r78 = new com.android.internal.os.HandlerCaller;

        r77 = new com.android.server.InputMethodManagerService$2;

        specialinvoke r77.<com.android.server.InputMethodManagerService$2: void <init>(com.android.server.InputMethodManagerService)>(r0);

        r93 = (com.android.internal.os.HandlerCaller$Callback) r77;

        specialinvoke r78.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r1, null, r93, 1);

        r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller> = r78;

        r0.<com.android.server.InputMethodManagerService: com.android.server.wm.WindowManagerService mWindowManagerService> = r2;

        r79 = new com.android.server.InputMethodManagerService$HardKeyboardListener;

        specialinvoke r79.<com.android.server.InputMethodManagerService$HardKeyboardListener: void <init>(com.android.server.InputMethodManagerService,com.android.server.InputMethodManagerService$1)>(r0, null);

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$HardKeyboardListener mHardKeyboardListener> = r79;

        $r27 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z3 = virtualinvoke $r27.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.input_methods");

        r0.<com.android.server.InputMethodManagerService: boolean mHasFeature> = $z3;

        r80 = new android.app.Notification;

        specialinvoke r80.<android.app.Notification: void <init>()>();

        r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification> = r80;

        $r26 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r26.<android.app.Notification: int icon> = 17302380;

        $r30 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r30.<android.app.Notification: long when> = 0L;

        $r31 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r31.<android.app.Notification: int flags> = 2;

        $r28 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r28.<android.app.Notification: java.lang.CharSequence tickerText> = null;

        $r29 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r29.<android.app.Notification: int defaults> = 0;

        $r34 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r34.<android.app.Notification: android.net.Uri sound> = null;

        $r35 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r35.<android.app.Notification: long[] vibrate> = null;

        $r33 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r32 = newarray (java.lang.String)[1];

        $r32[0] = "android.system.imeswitcher";

        $r33.<android.app.Notification: java.lang.String[] kind> = $r32;

        r81 = new android.content.Intent;

        specialinvoke r81.<android.content.Intent: void <init>(java.lang.String)>("android.settings.SHOW_INPUT_METHOD_PICKER");

        r3 = r81;

        $r39 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r36 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r39, 0, r3, 0);

        r0.<com.android.server.InputMethodManagerService: android.app.PendingIntent mImeSwitchPendingIntent> = $r36;

        r0.<com.android.server.InputMethodManagerService: boolean mShowOngoingImeSwitcherForPhones> = 0;

        r82 = new android.content.IntentFilter;

        specialinvoke r82.<android.content.IntentFilter: void <init>()>();

        r4 = r82;

        virtualinvoke r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.CLOSE_SYSTEM_DIALOGS");

        $r42 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r83 = new com.android.server.InputMethodManagerService$ImmsBroadcastReceiver;

        specialinvoke r83.<com.android.server.InputMethodManagerService$ImmsBroadcastReceiver: void <init>(com.android.server.InputMethodManagerService)>(r0);

        virtualinvoke $r42.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r83, r4);

        r0.<com.android.server.InputMethodManagerService: boolean mNotificationShown> = 0;

     label1:
        $r40 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r84 = new com.android.server.InputMethodManagerService$3;

        specialinvoke r84.<com.android.server.InputMethodManagerService$3: void <init>(com.android.server.InputMethodManagerService)>(r0);

        r94 = (android.app.IUserSwitchObserver) r84;

        interfaceinvoke $r40.<android.app.IActivityManager: void registerUserSwitchObserver(android.app.IUserSwitchObserver)>(r94);

        $r46 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r45 = interfaceinvoke $r46.<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>();

        i0 = $r45.<android.content.pm.UserInfo: int id>;

     label2:
        $r50 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$MyPackageMonitor mMyPackageMonitor>;

        $r51 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r44 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r50.<com.android.server.InputMethodManagerService$MyPackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r51, null, $r44, 1);

        r85 = new com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r48 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r55 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r53 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r54 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        specialinvoke r85.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,java.util.HashMap,java.util.ArrayList,int)>($r48, $r55, $r53, $r54, i0);

        r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings> = r85;

        r86 = new com.android.server.InputMethodManagerService$InputMethodFileManager;

        $r58 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        specialinvoke r86.<com.android.server.InputMethodManagerService$InputMethodFileManager: void <init>(java.util.HashMap,int)>($r58, i0);

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodFileManager mFileManager> = r86;

        r87 = new com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager;

        specialinvoke r87.<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: void <init>(android.content.Context,com.android.server.InputMethodManagerService)>(r1, r0);

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager mImListManager> = r87;

        $r60 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r61 = virtualinvoke $r60.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r61);

        if $z4 != 0 goto label7;

        z0 = 1;

     label3:
        r0.<com.android.server.InputMethodManagerService: boolean mImeSelectedOnBoot> = z0;

        r6 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        r7 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        z1 = r0.<com.android.server.InputMethodManagerService: boolean mImeSelectedOnBoot>;

        z2 = 0;

        if z1 != 0 goto label4;

        z2 = 1;

     label4:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void buildInputMethodListLocked(java.util.ArrayList,java.util.HashMap,boolean)>(r6, r7, z2);

        $r56 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r56.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void enableAllIMEsIfThereIsNoEnabledIME()>();

        $z5 = r0.<com.android.server.InputMethodManagerService: boolean mImeSelectedOnBoot>;

        if $z5 != 0 goto label5;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "No IME selected. Choose the most applicable IME.");

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetDefaultImeLocked(android.content.Context)>(r1);

     label5:
        r88 = new com.android.server.InputMethodManagerService$SettingsObserver;

        $r64 = r0.<com.android.server.InputMethodManagerService: android.os.Handler mHandler>;

        specialinvoke r88.<com.android.server.InputMethodManagerService$SettingsObserver: void <init>(com.android.server.InputMethodManagerService,android.os.Handler)>(r0, $r64);

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SettingsObserver mSettingsObserver> = r88;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void updateFromSettingsLocked(boolean)>(1);

        r89 = new android.content.IntentFilter;

        specialinvoke r89.<android.content.IntentFilter: void <init>()>();

        r8 = r89;

        virtualinvoke r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        $r67 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r90 = new com.android.server.InputMethodManagerService$4;

        specialinvoke r90.<com.android.server.InputMethodManagerService$4: void <init>(com.android.server.InputMethodManagerService)>(r0);

        virtualinvoke $r67.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r90, r8);

        return;

     label6:
        $r63 := @caughtexception;

        r5 = $r63;

        r95 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Couldn\'t get current user ID; guessing it\'s 0", r95);

        i0 = 0;

        goto label2;

     label7:
        z0 = 0;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label6;
    }

    static void access$000(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void refreshImeWindowVisibilityLocked()>();

        return;
    }

    static void access$100(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void setImeWindowVisibilityStatusHiddenLocked()>();

        return;
    }

    static void access$1000(com.android.server.InputMethodManagerService, int)
    {
        com.android.server.InputMethodManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void switchUserLocked(int)>(i0);

        return;
    }

    static void access$1100(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetStateIfCurrentLocaleChangedLocked()>();

        return;
    }

    static com.android.server.wm.WindowManagerService access$1200(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.wm.WindowManagerService $r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: com.android.server.wm.WindowManagerService mWindowManagerService>;

        return $r1;
    }

    static android.view.inputmethod.InputMethodInfo[] access$1300(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo[] $r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms>;

        return $r1;
    }

    static int[] access$1400(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        int[] $r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: int[] mSubtypeIds>;

        return $r1;
    }

    static void access$1500(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void showConfigureInputMethods()>();

        return;
    }

    static java.util.HashMap access$1700(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $r1 = specialinvoke r0.<com.android.server.InputMethodManagerService: java.util.HashMap getExplicitlyOrImplicitlyEnabledInputMethodsAndSubtypeListLocked()>();

        return $r1;
    }

    static void access$200(com.android.server.InputMethodManagerService, java.lang.String)
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>(r1);

        return;
    }

    static boolean access$300(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>();

        return $z0;
    }

    static com.android.server.InputMethodManagerService$InputMethodFileManager access$400(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.InputMethodManagerService$InputMethodFileManager $r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodFileManager mFileManager>;

        return $r1;
    }

    static android.content.pm.IPackageManager access$600(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        android.content.pm.IPackageManager $r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        return $r1;
    }

    static android.app.AlertDialog access$700(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        android.app.AlertDialog $r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        return $r1;
    }

    static android.view.View access$800(com.android.server.InputMethodManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: android.view.View mSwitchingDialogTitleView>;

        return $r1;
    }

    private void addShortcutInputMethodAndSubtypes(android.view.inputmethod.InputMethodInfo, android.view.inputmethod.InputMethodSubtype)
    {
        com.android.server.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo r1;
        android.view.inputmethod.InputMethodSubtype r2;
        java.util.ArrayList r3, $r5, $r10;
        java.util.HashMap $r4, $r6, $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype;

        $r4 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mShortcutInputMethodsAndSubtypes>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mShortcutInputMethodsAndSubtypes>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (java.util.ArrayList) $r9;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r3 = $r5;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r6 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mShortcutInputMethodsAndSubtypes>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    private boolean bindCurrentInputMethodService(android.content.Intent, android.content.ServiceConnection, int)
    {
        com.android.server.InputMethodManagerService r0;
        android.content.Intent r1;
        android.content.ServiceConnection r2;
        int i0, $i2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        android.os.UserHandle $r9;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r10;
        android.content.Context $r11;
        boolean $z0;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.ServiceConnection;

        i0 := @parameter2: int;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- bind failed: service = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", conn = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", $r8);

        return 0;

     label2:
        $r11 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r9 = new android.os.UserHandle;

        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r10.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        specialinvoke $r9.<android.os.UserHandle: void <init>(int)>($i2);

        $z0 = virtualinvoke $r11.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r1, r2, i0, $r9);

        return $z0;
    }

    private boolean calledFromValidUser()
    {
        com.android.server.InputMethodManagerService r0;
        int i0, i1, $i2, $i3;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r1;
        android.content.Context $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.android.server.InputMethodManagerService;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        if i0 == 1000 goto label1;

        $r1 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        if i1 != $i2 goto label2;

     label1:
        return 1;

     label2:
        $r2 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $i3 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL");

        if $i3 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- IPC called from background users. Ignore. \n");

        $r5 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.lang.String getStackTrace()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r7);

        return 0;
    }

    private boolean chooseNewDefaultIMELocked()
    {
        com.android.server.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo r1;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r2;
        java.util.List $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r2 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        r1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodInfo getMostApplicableDefaultIME(java.util.List)>($r3);

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>($r4);

        return 1;

     label1:
        return 0;
    }

    private android.util.Pair findLastResortApplicableShortcutInputMethodAndSubtypeLocked(java.lang.String)
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1, r7, $r18, $r23, $r28, $r30;
        java.util.List r2, r8;
        android.view.inputmethod.InputMethodInfo r3, r6;
        android.view.inputmethod.InputMethodSubtype r4, r9, r10, $r21, $r24, $r26;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Iterator r5;
        java.util.ArrayList r11, r12;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r13, $r17;
        java.lang.Object $r14;
        android.util.Pair $r15;
        android.content.Context $r16;
        android.content.pm.ServiceInfo $r19;
        int $i0, $i1;
        android.content.pm.ApplicationInfo $r20;
        android.content.res.Resources $r22, $r25, $r27, $r29;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        $r13 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r2 = virtualinvoke $r13.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        r3 = null;

        r4 = null;

        z0 = 0;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.view.inputmethod.InputMethodInfo) $r14;

        r7 = virtualinvoke r6.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        if z0 == 0 goto label02;

        $r28 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $z4 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z4 == 0 goto label01;

     label02:
        $r17 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r16 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r8 = virtualinvoke $r17.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r16, r6, 1);

        r9 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        r10 = null;

        if r9 == null goto label03;

        $r29 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r26 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        $r30 = virtualinvoke $r26.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        r10 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r29, r8, r1, $r30, 0);

     label03:
        if r10 != null goto label04;

        $r27 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        r10 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r27, r8, r1, null, 1);

     label04:
        r11 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getOverridingImplicitlyEnabledSubtypes(android.view.inputmethod.InputMethodInfo,java.lang.String)>(r6, r1);

        $z2 = virtualinvoke r11.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label09;

        r12 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)>(r6);

     label05:
        if r10 != null goto label06;

        $r21 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if $r21 == null goto label06;

        $r25 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r24 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        $r23 = virtualinvoke $r24.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        r10 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r25, r12, r1, $r23, 0);

     label06:
        if r10 != null goto label07;

        $r22 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        r10 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r22, r12, r1, null, 1);

     label07:
        if r10 == null goto label01;

        $r18 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z3 == 0 goto label10;

        r3 = r6;

        r4 = r10;

     label08:
        if r3 == null goto label11;

        $r15 = new android.util.Pair;

        specialinvoke $r15.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return $r15;

     label09:
        r12 = r11;

        goto label05;

     label10:
        if z0 != 0 goto label01;

        r3 = r6;

        r4 = r10;

        $r19 = virtualinvoke r6.<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>();

        $r20 = $r19.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r20.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label01;

        z0 = 1;

        goto label01;

     label11:
        return null;
    }

    private void finishSessionLocked(com.android.server.InputMethodManagerService$SessionState)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.InputMethodManagerService$SessionState r1;
        android.os.RemoteException r2, $r7;
        com.android.internal.view.IInputMethodSession $r3, $r6;
        android.view.InputChannel $r4, $r5;
        java.lang.Throwable r8;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.server.InputMethodManagerService$SessionState;

        if r1 == null goto label4;

        $r3 = r1.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        if $r3 == null goto label3;

     label1:
        $r6 = r1.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        interfaceinvoke $r6.<com.android.internal.view.IInputMethodSession: void finishSession()>();

     label2:
        r1.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session> = null;

     label3:
        $r4 = r1.<com.android.server.InputMethodManagerService$SessionState: android.view.InputChannel channel>;

        if $r4 == null goto label4;

        $r5 = r1.<com.android.server.InputMethodManagerService$SessionState: android.view.InputChannel channel>;

        virtualinvoke $r5.<android.view.InputChannel: void dispose()>();

        r1.<com.android.server.InputMethodManagerService$SessionState: android.view.InputChannel channel> = null;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        r8 = (java.lang.Throwable) r2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Session failed to close due to remote exception", r8);

        specialinvoke r0.<com.android.server.InputMethodManagerService: void setImeWindowVisibilityStatusHiddenLocked()>();

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label5;
    }

    private int getAppShowFlags()
    {
        com.android.server.InputMethodManagerService r0;
        boolean z0, $z1;
        byte b0;

        r0 := @this: com.android.server.InputMethodManagerService;

        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mShowForced>;

        if $z1 == 0 goto label2;

        b0 = 2;

     label1:
        return b0;

     label2:
        z0 = r0.<com.android.server.InputMethodManagerService: boolean mShowExplicitlyRequested>;

        b0 = 0;

        if z0 != 0 goto label1;

        return 1;
    }

    private android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()
    {
        com.android.server.InputMethodManagerService r0;
        boolean z0, $z1;
        android.view.inputmethod.InputMethodInfo r1;
        int i0, $i1, $i2, $i3, $i4;
        java.util.List r2;
        java.lang.String $r3, $r5, $r8;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r4, $r9, $r15;
        java.util.HashMap $r6;
        java.lang.Object $r7, $r12, $r20;
        java.util.ArrayList $r10;
        android.view.inputmethod.InputMethodSubtype $r11, $r14, $r16, $r19, $r21, $r22, $r23, $r24;
        android.content.Context $r13;
        android.content.res.Resources $r17, $r18;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r3 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r3 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        z0 = virtualinvoke $r4.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: boolean isSubtypeSelected()>();

        $r6 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r1 = (android.view.inputmethod.InputMethodInfo) $r7;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if $i1 == 0 goto label1;

        if z0 == 0 goto label3;

        $r22 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if $r22 == null goto label3;

        $r24 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        $i4 = virtualinvoke $r24.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $z1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isValidSubtypeId(android.view.inputmethod.InputMethodInfo,int)>(r1, $i4);

        if $z1 != 0 goto label4;

     label3:
        $r9 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r8 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        i0 = virtualinvoke $r9.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeId(java.lang.String)>($r8);

        if i0 != -1 goto label6;

        $r15 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r13 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r2 = virtualinvoke $r15.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r13, r1, 1);

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i3 != 1 goto label5;

        $r20 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r23 = (android.view.inputmethod.InputMethodSubtype) $r20;

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r23;

     label4:
        $r14 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        return $r14;

     label5:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i2 <= 1 goto label4;

        $r17 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r16 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r17, r2, "keyboard", null, 1);

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r16;

        $r19 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if $r19 != null goto label4;

        $r18 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r21 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r18, r2, null, null, 1);

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r21;

        goto label4;

     label6:
        $r10 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)>(r1);

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r11 = (android.view.inputmethod.InputMethodSubtype) $r12;

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r11;

        goto label4;
    }

    private java.util.HashMap getExplicitlyOrImplicitlyEnabledInputMethodsAndSubtypeListLocked()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap r1, $r4;
        java.util.Iterator r2;
        android.view.inputmethod.InputMethodInfo r3;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r5, $r9;
        java.util.List $r6, $r10;
        boolean $z0;
        java.lang.Object $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r6 = virtualinvoke $r5.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.inputmethod.InputMethodInfo) $r7;

        $r9 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r8 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r8, r3, 1);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

        goto label1;

     label2:
        return r1;
    }

    private int getImeShowFlags()
    {
        com.android.server.InputMethodManagerService r0;
        boolean z0, $z1;
        byte b0;

        r0 := @this: com.android.server.InputMethodManagerService;

        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mShowForced>;

        if $z1 == 0 goto label2;

        b0 = 3;

     label1:
        return b0;

     label2:
        z0 = r0.<com.android.server.InputMethodManagerService: boolean mShowExplicitlyRequested>;

        b0 = 0;

        if z0 == 0 goto label1;

        return 1;
    }

    private boolean isKeyguardLocked()
    {
        com.android.server.InputMethodManagerService r0;
        android.app.KeyguardManager $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        $z0 = virtualinvoke $r2.<android.app.KeyguardManager: boolean isKeyguardLocked()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isScreenLocked()
    {
        com.android.server.InputMethodManagerService r0;
        android.app.KeyguardManager $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        $z0 = virtualinvoke $r2.<android.app.KeyguardManager: boolean isKeyguardLocked()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager>;

        $z1 = virtualinvoke $r3.<android.app.KeyguardManager: boolean isKeyguardSecure()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean needsToShowImeSwitchOngoingNotification()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r16;
        java.util.List r3, r7;
        int i0, i1, i2, i3, i4, i5;
        android.view.inputmethod.InputMethodSubtype r4, r5, r8;
        android.view.inputmethod.InputMethodInfo r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r9, $r14;
        java.lang.String $r10, $r11;
        java.lang.Object $r12, $r15;
        android.content.Context $r13;

        r0 := @this: com.android.server.InputMethodManagerService;

        $z0 = r0.<com.android.server.InputMethodManagerService: boolean mShowOngoingImeSwitcherForPhones>;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z1 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean isScreenLocked()>();

        if $z1 == 0 goto label02;

        return 0;

     label02:
        r1 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label03:
        $r9 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r3 = virtualinvoke $r9.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

     label04:
        if i0 <= 2 goto label10;

     label05:
        exitmonitor r1;

     label06:
        return 1;

     label07:
        $r16 := @caughtexception;

        r2 = $r16;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        if i0 >= 1 goto label29;

     label11:
        exitmonitor r1;

     label12:
        return 0;

     label13:
        if i2 >= i0 goto label34;

     label14:
        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        r6 = (android.view.inputmethod.InputMethodInfo) $r12;

        $r14 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r13 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r7 = virtualinvoke $r14.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r13, r6, 1);

        i4 = interfaceinvoke r7.<java.util.List: int size()>();

     label15:
        if i4 != 0 goto label31;

        i3 = i3 + 1;

        goto label30;

     label16:
        if i5 >= i4 goto label30;

     label17:
        $r15 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i5);

        r8 = (android.view.inputmethod.InputMethodSubtype) $r15;

        $z6 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z6 != 0 goto label33;

     label18:
        i3 = i3 + 1;

        r5 = r8;

        goto label32;

     label19:
        exitmonitor r1;

     label20:
        return 1;

     label21:
        if i3 != 1 goto label27;

        if i1 != 1 goto label27;

        if r5 == null goto label25;

        if r4 == null goto label25;

     label22:
        $r11 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r10 = virtualinvoke r4.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label23;

        $z4 = virtualinvoke r4.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z4 != 0 goto label23;

        $z5 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>();

        if $z5 == 0 goto label25;

     label23:
        $z2 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("TrySuppressingImeSwitcher");

        if $z2 == 0 goto label25;

        exitmonitor r1;

     label24:
        return 0;

     label25:
        exitmonitor r1;

     label26:
        return 1;

     label27:
        exitmonitor r1;

     label28:
        return 0;

     label29:
        i1 = 0;

        r4 = null;

        i2 = 0;

        i3 = 0;

        r5 = null;

        goto label13;

     label30:
        i2 = i2 + 1;

        goto label13;

     label31:
        i5 = 0;

        goto label16;

     label32:
        i5 = i5 + 1;

        goto label16;

     label33:
        i1 = i1 + 1;

        r4 = r8;

        goto label32;

     label34:
        if i3 > 1 goto label19;

        if i1 <= 1 goto label21;

        goto label19;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
        catch java.lang.Throwable from label17 to label18 with label07;
        catch java.lang.Throwable from label19 to label20 with label07;
        catch java.lang.Throwable from label22 to label23 with label07;
        catch java.lang.Throwable from label23 to label24 with label07;
        catch java.lang.Throwable from label25 to label26 with label07;
        catch java.lang.Throwable from label27 to label28 with label07;
    }

    private void refreshImeWindowVisibilityLocked()
    {
        com.android.server.InputMethodManagerService r0;
        byte b0, b1, b2, b3, b4, b5, $b7;
        android.content.res.Configuration r1;
        android.content.res.Resources $r2;
        int $i6, $i8;
        boolean $z0, $z1;

        r0 := @this: com.android.server.InputMethodManagerService;

        b0 = 1;

        $r2 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i6 = r1.<android.content.res.Configuration: int keyboard>;

        if $i6 == 1 goto label08;

        b1 = 1;

     label01:
        if b1 == 0 goto label09;

        $i8 = r1.<android.content.res.Configuration: int hardKeyboardHidden>;

        if $i8 == 2 goto label09;

        b2 = 1;

     label02:
        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean isKeyguardLocked()>();

        if $z0 != 0 goto label10;

        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mInputShown>;

        if $z1 != 0 goto label03;

        if b2 == 0 goto label10;

     label03:
        b3 = 1;

     label04:
        if b3 == 0 goto label11;

        if b2 != 0 goto label11;

        b4 = 1;

     label05:
        if b3 == 0 goto label12;

     label06:
        b5 = 0;

        if b4 == 0 goto label07;

        b5 = 2;

     label07:
        $b7 = b0 | b5;

        r0.<com.android.server.InputMethodManagerService: int mImeWindowVis> = $b7;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void updateImeWindowStatusLocked()>();

        return;

     label08:
        b1 = 0;

        goto label01;

     label09:
        b2 = 0;

        goto label02;

     label10:
        b3 = 0;

        goto label04;

     label11:
        b4 = 0;

        goto label05;

     label12:
        b0 = 0;

        goto label06;
    }

    private void resetAllInternalStateLocked(boolean, boolean)
    {
        com.android.server.InputMethodManagerService r0;
        boolean z0, z1, $z2, $z3, $z5;
        java.util.Locale r1, $r14;
        java.lang.RuntimeException r2, $r15;
        android.content.res.Resources $r3;
        android.content.res.Configuration $r4;
        com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager $r5;
        android.content.Context $r6, $r9, $r13;
        java.util.HashMap $r7;
        java.util.ArrayList $r8;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.InputMethodManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<com.android.server.InputMethodManagerService: boolean mSystemReady>;

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r1 = $r4.<android.content.res.Configuration: java.util.Locale locale>;

        if z0 == 0 goto label3;

        if r1 == null goto label1;

        $r14 = r0.<com.android.server.InputMethodManagerService: java.util.Locale mLastSystemLocale>;

        $z5 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>($r14);

        if $z5 != 0 goto label1;

     label3:
        if z0 != 0 goto label4;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>(0, null);

        r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId> = null;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void unbindCurrentMethodLocked(boolean,boolean)>(1, 0);

     label4:
        $r5 = new com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager;

        $r6 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        specialinvoke $r5.<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: void <init>(android.content.Context,com.android.server.InputMethodManagerService)>($r6, r0);

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager mImListManager> = $r5;

        $r8 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        $r7 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void buildInputMethodListLocked(java.util.ArrayList,java.util.HashMap,boolean)>($r8, $r7, z1);

        if z0 != 0 goto label9;

        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r12 = virtualinvoke $r11.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r12);

        if $z3 == 0 goto label5;

        $r13 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetDefaultImeLocked(android.content.Context)>($r13);

     label5:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void updateFromSettingsLocked(boolean)>(1);

        r0.<com.android.server.InputMethodManagerService: java.util.Locale mLastSystemLocale> = r1;

        if z0 != 0 goto label1;

     label6:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputInnerLocked()>();

     label7:
        return;

     label8:
        $r15 := @caughtexception;

        r2 = $r15;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Unexpected exception", r2);

        return;

     label9:
        $r9 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetDefaultImeLocked(android.content.Context)>($r9);

        goto label5;

        catch java.lang.RuntimeException from label6 to label7 with label8;
    }

    private void resetDefaultImeLocked(android.content.Context)
    {
        com.android.server.InputMethodManagerService r0;
        android.content.Context r1;
        android.view.inputmethod.InputMethodInfo r2, r4, $r22;
        java.util.Iterator r3;
        java.lang.String $r5, $r13, $r14, $r19, $r20, $r23;
        java.util.ArrayList $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r8;
        java.util.List $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r17, $r18;
        java.lang.Object $r15, $r21;
        java.util.HashMap $r24;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.content.Context;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r5 == null goto label2;

        $r24 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r23 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r21 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r23);

        $r22 = (android.view.inputmethod.InputMethodInfo) $r21;

        $z3 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemIme(android.view.inputmethod.InputMethodInfo)>($r22);

        if $z3 != 0 goto label2;

     label1:
        return;

     label2:
        r2 = null;

        $r6 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.view.inputmethod.InputMethodInfo) $r15;

        if r2 != null goto label3;

        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mSystemReady>;

        $z2 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isValidSystemDefaultIme(boolean,android.view.inputmethod.InputMethodInfo,android.content.Context)>($z1, r4, r1);

        if $z2 == 0 goto label3;

        r2 = r4;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selected default: ");

        $r19 = virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodManagerService", $r20);

        goto label3;

     label4:
        if r2 != null goto label5;

        $r7 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label5;

        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r9 = virtualinvoke $r8.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        r2 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodInfo getMostApplicableDefaultIME(java.util.List)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No default found, using ");

        $r13 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodManagerService", $r14);

     label5:
        if r2 == null goto label1;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>(r2, -1, 0);

        return;
    }

    private void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1, r3, $r12;
        android.view.inputmethod.InputMethodInfo r2;
        int i0, i1, $i2;
        java.lang.NumberFormatException r4, $r10;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        boolean $z0;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r7;
        java.lang.Integer $r8;
        java.lang.StringBuilder $r9, $r11, $r13;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.view.inputmethod.InputMethodInfo) $r6;

        i0 = -1;

        if r2 == null goto label3;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r3 = virtualinvoke $r7.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)>(r1);

        if r3 == null goto label3;

     label1:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r3);

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        i1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r2, $i2);

     label2:
        i0 = i1;

     label3:
        specialinvoke r0.<com.android.server.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>(r2, i0, 0);

        return;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HashCode for subtype looks broken: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", $r12, r4);

        goto label3;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    private void resetStateIfCurrentLocaleChangedLocked()
    {
        com.android.server.InputMethodManagerService r0;

        r0 := @this: com.android.server.InputMethodManagerService;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetAllInternalStateLocked(boolean,boolean)>(1, 1);

        return;
    }

    private void setImeWindowVisibilityStatusHiddenLocked()
    {
        com.android.server.InputMethodManagerService r0;

        r0 := @this: com.android.server.InputMethodManagerService;

        r0.<com.android.server.InputMethodManagerService: int mImeWindowVis> = 0;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void updateImeWindowStatusLocked()>();

        return;
    }

    private void setInputMethodWithSubtypeId(android.os.IBinder, java.lang.String, int)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1, $r6;
        java.lang.String r2, $r12;
        int i0, $i2, $i4;
        java.util.HashMap r3;
        long l1;
        java.lang.Throwable r4, r5, $r15, $r16;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        android.content.Context $r13;
        java.lang.SecurityException $r14;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r3;

        if r1 != null goto label05;

     label01:
        $r13 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $i4 = virtualinvoke $r13.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS");

        if $i4 == 0 goto label07;

        $r14 = new java.lang.SecurityException;

        specialinvoke $r14.<java.lang.SecurityException: void <init>(java.lang.String)>("Using null token requires permission android.permission.WRITE_SECURE_SETTINGS");

        throw $r14;

     label02:
        $r15 := @caughtexception;

        r5 = $r15;

     label03:
        exitmonitor r3;

     label04:
        throw r5;

     label05:
        $r6 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r6 == r1 goto label07;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring setInputMethod of uid ");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r12);

        exitmonitor r3;

     label06:
        return;

     label07:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>(r2, i0);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r3;

     label10:
        return;

     label11:
        $r16 := @caughtexception;

        r4 = $r16;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label13:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label12 to label13 with label02;
    }

    private void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo, int, boolean)
    {
        com.android.server.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo r1;
        int i0, $i1, $i2;
        boolean z0, $z1;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r2, $r7, $r8, $r9, $r11;
        java.lang.String r3, $r6;
        android.view.inputmethod.InputMethodSubtype r4, $r5, $r10;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.view.inputmethod.InputMethodInfo;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r6 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r5 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        virtualinvoke $r7.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void saveCurrentInputMethodAndSubtypeToHistory(java.lang.String,android.view.inputmethod.InputMethodSubtype)>($r6, $r5);

        if r1 == null goto label1;

        if i0 >= 0 goto label5;

     label1:
        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r8.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedSubtype(int)>(-1);

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = null;

     label2:
        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mSystemReady>;

        if $z1 == 0 goto label4;

        if z0 != 0 goto label4;

        r2 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        if r1 == null goto label7;

        r3 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

     label3:
        virtualinvoke r2.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedInputMethod(java.lang.String)>(r3);

     label4:
        return;

     label5:
        $i1 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if i0 >= $i1 goto label6;

        r4 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i0);

        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke r4.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        virtualinvoke $r11.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedSubtype(int)>($i2);

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = r4;

        goto label2;

     label6:
        $r9 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r9.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putSelectedSubtype(int)>(-1);

        $r10 = specialinvoke r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>();

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype> = $r10;

        goto label2;

     label7:
        r3 = "";

        goto label3;
    }

    private void showConfigureInputMethods()
    {
        com.android.server.InputMethodManagerService r0;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.settings.INPUT_METHOD_SETTINGS");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>(337641472);

        $r5 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r4 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r5.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>(r1, null, $r4);

        return;
    }

    private void showInputMethodAndSubtypeEnabler(java.lang.String)
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1;
        android.content.Intent r2, $r3;
        boolean $z0;
        android.os.UserHandle $r5;
        android.content.Context $r6;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.settings.INPUT_METHOD_SUBTYPE_SETTINGS");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(337641472);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("input_method_id", r1);

     label1:
        $r6 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r6.<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>(r2, null, $r5);

        return;
    }

    private void showInputMethodMenu()
    {
        com.android.server.InputMethodManagerService r0;

        r0 := @this: com.android.server.InputMethodManagerService;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void showInputMethodMenuInternal(boolean)>(0);

        return;
    }

    private void showInputMethodMenuInternal(boolean)
    {
        com.android.server.InputMethodManagerService r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.content.Context r1, $r32;
        java.lang.String r2, $r68, $r71;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i9, $i10;
        java.util.HashMap r3, r5, $r69;
        java.lang.Throwable r4, $r72;
        java.util.List r6;
        android.view.inputmethod.InputMethodSubtype r7;
        com.android.server.InputMethodManagerService$ImeSubtypeListItem r8;
        android.app.AlertDialog$Builder r9, r18, r21, $r28, $r33, $r36, $r50, r73;
        android.content.res.TypedArray r10;
        android.view.View r11, r13, $r39, $r44, $r45;
        com.android.server.InputMethodManagerService$5 r12, r74;
        android.widget.Switch r14;
        byte b5;
        com.android.server.InputMethodManagerService$ImeSubtypeListAdapter r15, r76;
        com.android.server.InputMethodManagerService$6 r16, r75;
        com.android.server.InputMethodManagerService$7 r17, r77;
        android.view.WindowManager$LayoutParams r19, $r55;
        com.android.server.InputMethodManagerService$8 r20, r78;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r22, $r23;
        com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager $r24;
        int[] $r25, $r26, $r59, $r70;
        android.view.inputmethod.InputMethodInfo[] $r27, $r61, $r64;
        java.lang.Object $r31, $r62, $r66;
        android.graphics.drawable.Drawable $r34;
        android.view.LayoutInflater $r37;
        com.android.server.wm.WindowManagerService $r38, $r46;
        android.view.Window $r47, $r49, $r57;
        android.app.AlertDialog $r48, $r51, $r52, $r53, $r54, $r58;
        android.view.inputmethod.InputMethodInfo $r60, $r65, $r67;
        android.content.DialogInterface$OnCancelListener r79;
        android.widget.CompoundButton$OnCheckedChangeListener r80;
        android.widget.ListAdapter r81;
        android.content.DialogInterface$OnClickListener r82, r83;

        r0 := @this: com.android.server.InputMethodManagerService;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        z1 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean isScreenLocked()>();

        $r23 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r2 = virtualinvoke $r23.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $r22 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        i0 = virtualinvoke $r22.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeId(java.lang.String)>(r2);

        r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r3;

     label01:
        r5 = specialinvoke r0.<com.android.server.InputMethodManagerService: java.util.HashMap getExplicitlyOrImplicitlyEnabledInputMethodsAndSubtypeListLocked()>();

     label02:
        if r5 == null goto label04;

     label03:
        $i6 = virtualinvoke r5.<java.util.HashMap: int size()>();

        if $i6 != 0 goto label06;

     label04:
        exitmonitor r3;

     label05:
        return;

     label06:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void hideInputMethodMenuLocked()>();

        $r24 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager mImListManager>;

        $z2 = r0.<com.android.server.InputMethodManagerService: boolean mInputShown>;

        r6 = virtualinvoke $r24.<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList(boolean,boolean,boolean)>(z0, $z2, z1);

     label07:
        if i0 != -1 goto label11;

     label08:
        r7 = specialinvoke r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>();

     label09:
        if r7 == null goto label11;

     label10:
        $r69 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r68 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r66 = virtualinvoke $r69.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r68);

        $r67 = (android.view.inputmethod.InputMethodInfo) $r66;

        $i10 = virtualinvoke r7.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        i0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>($r67, $i10);

     label11:
        i1 = interfaceinvoke r6.<java.util.List: int size()>();

        $r27 = newarray (android.view.inputmethod.InputMethodInfo)[i1];

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms> = $r27;

        $r25 = newarray (int)[i1];

        r0.<com.android.server.InputMethodManagerService: int[] mSubtypeIds> = $r25;

     label12:
        i2 = 0;

        i3 = 0;

     label13:
        if i3 >= i1 goto label16;

     label14:
        $r62 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i3);

        r8 = (com.android.server.InputMethodManagerService$ImeSubtypeListItem) $r62;

        $r64 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms>;

        $r65 = r8.<com.android.server.InputMethodManagerService$ImeSubtypeListItem: android.view.inputmethod.InputMethodInfo mImi>;

        $r64[i3] = $r65;

        $r59 = r0.<com.android.server.InputMethodManagerService: int[] mSubtypeIds>;

        $i9 = r8.<com.android.server.InputMethodManagerService$ImeSubtypeListItem: int mSubtypeId>;

        $r59[i3] = $i9;

        $r61 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms>;

        $r60 = $r61[i3];

        $r71 = virtualinvoke $r60.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $z5 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label29;

        $r70 = r0.<com.android.server.InputMethodManagerService: int[] mSubtypeIds>;

        i4 = $r70[i3];

     label15:
        if i4 == -1 goto label28;

        if i0 != -1 goto label27;

        if i4 == 0 goto label28;

        goto label27;

     label16:
        $r26 = <com.android.internal.R$styleable: int[] DialogPreference>;

        r10 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r26, 16842845, 0);

        r73 = new android.app.AlertDialog$Builder;

        specialinvoke r73.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r1);

        r9 = r73;

        r74 = new com.android.server.InputMethodManagerService$5;

        specialinvoke r74.<com.android.server.InputMethodManagerService$5: void <init>(com.android.server.InputMethodManagerService)>(r0);

        r12 = r74;

        r79 = (android.content.DialogInterface$OnCancelListener) r12;

        $r28 = virtualinvoke r9.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r79);

        $r34 = virtualinvoke r10.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        $r33 = virtualinvoke $r28.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)>($r34);

        r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder> = $r33;

        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

        $r32 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r31 = virtualinvoke $r32.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r37 = (android.view.LayoutInflater) $r31;

        r11 = virtualinvoke $r37.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367118, null);

        $r36 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        virtualinvoke $r36.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCustomTitle(android.view.View)>(r11);

        r0.<com.android.server.InputMethodManagerService: android.view.View mSwitchingDialogTitleView> = r11;

        $r39 = r0.<com.android.server.InputMethodManagerService: android.view.View mSwitchingDialogTitleView>;

        r13 = virtualinvoke $r39.<android.view.View: android.view.View findViewById(int)>(16908982);

        $r38 = r0.<com.android.server.InputMethodManagerService: com.android.server.wm.WindowManagerService mWindowManagerService>;

        $z3 = virtualinvoke $r38.<com.android.server.wm.WindowManagerService: boolean isHardKeyboardAvailable()>();

        if $z3 == 0 goto label26;

     label17:
        b5 = 0;

     label18:
        virtualinvoke r13.<android.view.View: void setVisibility(int)>(b5);

        $r44 = r0.<com.android.server.InputMethodManagerService: android.view.View mSwitchingDialogTitleView>;

        $r45 = virtualinvoke $r44.<android.view.View: android.view.View findViewById(int)>(16908983);

        r14 = (android.widget.Switch) $r45;

        $r46 = r0.<com.android.server.InputMethodManagerService: com.android.server.wm.WindowManagerService mWindowManagerService>;

        $z4 = virtualinvoke $r46.<com.android.server.wm.WindowManagerService: boolean isHardKeyboardEnabled()>();

        virtualinvoke r14.<android.widget.Switch: void setChecked(boolean)>($z4);

        r75 = new com.android.server.InputMethodManagerService$6;

        specialinvoke r75.<com.android.server.InputMethodManagerService$6: void <init>(com.android.server.InputMethodManagerService)>(r0);

        r16 = r75;

        r80 = (android.widget.CompoundButton$OnCheckedChangeListener) r16;

        virtualinvoke r14.<android.widget.Switch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>(r80);

        r76 = new com.android.server.InputMethodManagerService$ImeSubtypeListAdapter;

        specialinvoke r76.<com.android.server.InputMethodManagerService$ImeSubtypeListAdapter: void <init>(android.content.Context,int,java.util.List,int)>(r1, 17367200, r6, i2);

        r15 = r76;

        r18 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        r77 = new com.android.server.InputMethodManagerService$7;

        specialinvoke r77.<com.android.server.InputMethodManagerService$7: void <init>(com.android.server.InputMethodManagerService,com.android.server.InputMethodManagerService$ImeSubtypeListAdapter)>(r0, r15);

        r17 = r77;

        r81 = (android.widget.ListAdapter) r15;

        r82 = (android.content.DialogInterface$OnClickListener) r17;

        virtualinvoke r18.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)>(r81, i2, r82);

     label19:
        if z0 == 0 goto label21;

        if z1 != 0 goto label21;

     label20:
        r21 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        r78 = new com.android.server.InputMethodManagerService$8;

        specialinvoke r78.<com.android.server.InputMethodManagerService$8: void <init>(com.android.server.InputMethodManagerService)>(r0);

        r20 = r78;

        r83 = (android.content.DialogInterface$OnClickListener) r20;

        virtualinvoke r21.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17040510, r83);

     label21:
        $r50 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder>;

        $r51 = virtualinvoke $r50.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog> = $r51;

        $r52 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        virtualinvoke $r52.<android.app.AlertDialog: void setCanceledOnTouchOutside(boolean)>(1);

        $r53 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        $r47 = virtualinvoke $r53.<android.app.AlertDialog: android.view.Window getWindow()>();

        virtualinvoke $r47.<android.view.Window: void setType(int)>(2012);

        $r48 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        $r49 = virtualinvoke $r48.<android.app.AlertDialog: android.view.Window getWindow()>();

        r19 = virtualinvoke $r49.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i8 = r19.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i7 = 16 | $i8;

        r19.<android.view.WindowManager$LayoutParams: int privateFlags> = $i7;

        $r58 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        $r57 = virtualinvoke $r58.<android.app.AlertDialog: android.view.Window getWindow()>();

        $r55 = virtualinvoke $r57.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        virtualinvoke $r55.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>("Select input method");

        $r54 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        virtualinvoke $r54.<android.app.AlertDialog: void show()>();

        exitmonitor r3;

     label22:
        return;

     label23:
        $r72 := @caughtexception;

        r4 = $r72;

     label24:
        exitmonitor r3;

     label25:
        throw r4;

     label26:
        b5 = 8;

        goto label18;

     label27:
        if i4 != i0 goto label29;

     label28:
        i2 = i3;

     label29:
        i3 = i3 + 1;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    private void showInputMethodSubtypeMenu()
    {
        com.android.server.InputMethodManagerService r0;

        r0 := @this: com.android.server.InputMethodManagerService;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void showInputMethodMenuInternal(boolean)>(1);

        return;
    }

    private void switchUserLocked(int)
    {
        com.android.server.InputMethodManagerService r0;
        int i0;
        boolean z0;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r1, $r4, $r8;
        com.android.server.InputMethodManagerService$InputMethodFileManager $r2;
        java.util.HashMap $r3;
        java.lang.String $r5;
        android.content.Context $r6;
        android.content.pm.PackageManager $r7;
        java.util.List $r9;

        r0 := @this: com.android.server.InputMethodManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r1.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void setCurrentUserId(int)>(i0);

        $r2 = new com.android.server.InputMethodManagerService$InputMethodFileManager;

        $r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        specialinvoke $r2.<com.android.server.InputMethodManagerService$InputMethodFileManager: void <init>(java.util.HashMap,int)>($r3, i0);

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodFileManager mFileManager> = $r2;

        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r5 = virtualinvoke $r4.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetAllInternalStateLocked(boolean,boolean)>(0, z0);

        if z0 == 0 goto label1;

        $r6 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r9 = virtualinvoke $r8.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        staticinvoke <com.android.internal.inputmethod.InputMethodUtils: void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.PackageManager,java.util.List)>($r7, $r9);

     label1:
        return;
    }

    private void updateImeWindowStatusLocked()
    {
        com.android.server.InputMethodManagerService r0;
        int $i0, $i1;
        android.os.IBinder $r1;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        $i1 = r0.<com.android.server.InputMethodManagerService: int mImeWindowVis>;

        $i0 = r0.<com.android.server.InputMethodManagerService: int mBackDisposition>;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void setImeWindowStatus(android.os.IBinder,int,int)>($r1, $i1, $i0);

        return;
    }

    public void addClient(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, int, int)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1;
        com.android.internal.view.IInputContext r2;
        int i0, i1;
        java.util.HashMap r3, $r5;
        java.lang.Throwable r4, $r9;
        boolean $z0;
        android.os.IBinder $r6;
        com.android.server.InputMethodManagerService$ClientState $r7;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: com.android.internal.view.IInputContext;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r3;

     label2:
        $r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mClients>;

        $r6 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r7 = new com.android.server.InputMethodManagerService$ClientState;

        specialinvoke $r7.<com.android.server.InputMethodManagerService$ClientState: void <init>(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>(r1, r2, i0, i1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        exitmonitor r3;

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

     label5:
        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    com.android.internal.view.InputBindResult attachNewInputLocked(boolean)
    {
        com.android.server.InputMethodManagerService r0;
        boolean z0, $z1, $z2;
        com.android.server.InputMethodManagerService$SessionState r1;
        com.android.internal.view.IInputMethodSession r2;
        android.view.InputChannel r3, r4, $r12;
        com.android.server.InputMethodManagerService$ClientState $r5, $r20;
        android.view.inputmethod.EditorInfo $r6, $r14;
        com.android.internal.view.IInputContext $r7, $r16;
        com.android.internal.os.HandlerCaller $r8, $r15, $r21;
        com.android.internal.view.IInputMethod $r9, $r18, $r22, $r24;
        android.os.Message $r10, $r17, $r23;
        com.android.internal.view.InputBindResult $r11;
        int $i0, $i1;
        java.lang.String $r13;
        android.view.inputmethod.InputBinding $r19;

        r0 := @this: com.android.server.InputMethodManagerService;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mBoundToMethod>;

        if $z1 != 0 goto label1;

        $r24 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r21 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r22 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r20 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r19 = $r20.<com.android.server.InputMethodManagerService$ClientState: android.view.inputmethod.InputBinding binding>;

        $r23 = virtualinvoke $r21.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(1010, $r22, $r19);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r24, $r23);

        r0.<com.android.server.InputMethodManagerService: boolean mBoundToMethod> = 1;

     label1:
        $r5 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        r1 = $r5.<com.android.server.InputMethodManagerService$ClientState: com.android.server.InputMethodManagerService$SessionState curSession>;

        if z0 == 0 goto label5;

        $r18 = r1.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r15 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r16 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputContext mCurInputContext>;

        $r14 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute>;

        $r17 = virtualinvoke $r15.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOO(int,java.lang.Object,java.lang.Object,java.lang.Object)>(2000, r1, $r16, $r14);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r18, $r17);

     label2:
        $z2 = r0.<com.android.server.InputMethodManagerService: boolean mShowRequested>;

        if $z2 == 0 goto label3;

        $i1 = specialinvoke r0.<com.android.server.InputMethodManagerService: int getAppShowFlags()>();

        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean showCurrentInputLocked(int,android.os.ResultReceiver)>($i1, null);

     label3:
        r2 = r1.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        r3 = r1.<com.android.server.InputMethodManagerService$SessionState: android.view.InputChannel channel>;

        r4 = null;

        if r3 == null goto label4;

        $r12 = r1.<com.android.server.InputMethodManagerService$SessionState: android.view.InputChannel channel>;

        r4 = virtualinvoke $r12.<android.view.InputChannel: android.view.InputChannel dup()>();

     label4:
        $r11 = new com.android.internal.view.InputBindResult;

        $r13 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId>;

        $i0 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        specialinvoke $r11.<com.android.internal.view.InputBindResult: void <init>(com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int)>(r2, r4, $r13, $i0);

        return $r11;

     label5:
        $r9 = r1.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputContext mCurInputContext>;

        $r6 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute>;

        $r10 = virtualinvoke $r8.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOO(int,java.lang.Object,java.lang.Object,java.lang.Object)>(2010, r1, $r7, $r6);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r9, $r10);

        goto label2;
    }

    void buildInputMethodListLocked(java.util.ArrayList, java.util.HashMap, boolean)
    {
        com.android.server.InputMethodManagerService r0;
        java.util.ArrayList r1, r7;
        java.util.HashMap r2, r5;
        boolean z0, $z1, $z2, $z3, $z5, $z7;
        android.content.pm.PackageManager r3;
        java.util.List r4;
        int i0, i1, $i2, $i3, $i5;
        java.lang.String r6, $r17, $r22, $r25, $r26, $r30, $r31, $r33, $r43, $r48, $r50;
        android.content.pm.ResolveInfo r8;
        android.content.pm.ServiceInfo r9;
        android.view.inputmethod.InputMethodInfo r10, $r24, r54;
        android.content.ComponentName r11, r52;
        java.io.IOException r12, $r49;
        android.content.Context $r13, $r21, $r34;
        org.xmlpull.v1.XmlPullParserException r14, $r38;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r15, $r18, $r20;
        com.android.server.InputMethodManagerService$InputMethodFileManager $r19;
        java.lang.Object $r23, $r28;
        java.lang.StringBuilder $r35, $r36, $r40, $r41, $r42, $r45, $r46, $r47, r53, r55, r56;
        android.content.Intent r51;
        java.lang.Throwable r57;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: java.util.HashMap;

        z0 := @parameter2: boolean;

        virtualinvoke r1.<java.util.ArrayList: void clear()>();

        virtualinvoke r2.<java.util.HashMap: void clear()>();

        $r13 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r3 = virtualinvoke $r13.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r15 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r17 = virtualinvoke $r15.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getDisabledSystemInputMethods()>();

        if $r17 != null goto label01;

     label01:
        r51 = new android.content.Intent;

        specialinvoke r51.<android.content.Intent: void <init>(java.lang.String)>("android.view.InputMethod");

        $r18 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i2 = virtualinvoke $r18.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        r4 = virtualinvoke r3.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>(r51, 32896, $i2);

        $r19 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodFileManager mFileManager>;

        r5 = virtualinvoke $r19.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap getAllAdditionalInputMethodSubtypes()>();

        i0 = 0;

     label02:
        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        if i0 >= $i3 goto label08;

        $r28 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (android.content.pm.ResolveInfo) $r28;

        r9 = r8.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r52 = new android.content.ComponentName;

        $r25 = r9.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r26 = r9.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke r52.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r25, $r26);

        r11 = r52;

        $r30 = "android.permission.BIND_INPUT_METHOD";

        $r31 = r9.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z7 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z7 != 0 goto label04;

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping input method ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": it does not require the permission ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_INPUT_METHOD");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r43);

     label03:
        i0 = i0 + 1;

        goto label02;

     label04:
        r54 = new android.view.inputmethod.InputMethodInfo;

        $r34 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        specialinvoke r54.<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo,java.util.Map)>($r34, r8, r5);

        r10 = r54;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);

        $r33 = virtualinvoke r10.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, r10);

     label05:
        goto label03;

     label06:
        $r38 := @caughtexception;

        r14 = $r38;

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load input method ");

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        r57 = (java.lang.Throwable) r14;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", $r48, r57);

        goto label03;

     label07:
        $r49 := @caughtexception;

        r12 = $r49;

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load input method ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r50 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", $r50, r12);

        goto label03;

     label08:
        if z0 == 0 goto label10;

        $r21 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $z5 = r0.<com.android.server.InputMethodManagerService: boolean mSystemReady>;

        r7 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getDefaultEnabledImes(android.content.Context,boolean,java.util.ArrayList)>($r21, $z5, r1);

        i1 = 0;

     label09:
        $i5 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i1 >= $i5 goto label10;

        $r23 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r24 = (android.view.inputmethod.InputMethodInfo) $r23;

        $r22 = virtualinvoke $r24.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>($r22, 1);

        i1 = i1 + 1;

        goto label09;

     label10:
        $r20 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r6 = virtualinvoke $r20.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 != 0 goto label11;

        $z3 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r6);

        if $z3 != 0 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Default IME is uninstalled. Choose new default IME.");

        $z2 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>();

        if $z2 == 0 goto label11;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void updateFromSettingsLocked(boolean)>(1);

     label11:
        return;

     label12:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>(r6, 1);

        return;

        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label06;
        catch java.io.IOException from label04 to label05 with label07;
    }

    void clearClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.InputMethodManagerService$ClientState r1;
        com.android.server.InputMethodManagerService$SessionState $r2;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.server.InputMethodManagerService$ClientState;

        $r2 = r1.<com.android.server.InputMethodManagerService$ClientState: com.android.server.InputMethodManagerService$SessionState curSession>;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void finishSessionLocked(com.android.server.InputMethodManagerService$SessionState)>($r2);

        r1.<com.android.server.InputMethodManagerService$ClientState: com.android.server.InputMethodManagerService$SessionState curSession> = null;

        r1.<com.android.server.InputMethodManagerService$ClientState: boolean sessionRequested> = 0;

        return;
    }

    void clearCurMethodLocked()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.Iterator r1;
        com.android.internal.view.IInputMethod $r2;
        com.android.server.StatusBarManagerService $r3, $r4;
        java.util.HashMap $r5;
        java.util.Collection $r6;
        boolean $z0;
        com.android.server.InputMethodManagerService$SessionState $r7;
        java.lang.Object $r8;
        com.android.server.InputMethodManagerService$ClientState $r9;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r2 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r2 == null goto label3;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mClients>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.android.server.InputMethodManagerService$ClientState) $r8;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void clearClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)>($r9);

        goto label1;

     label2:
        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SessionState mEnabledSession>;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void finishSessionLocked(com.android.server.InputMethodManagerService$SessionState)>($r7);

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SessionState mEnabledSession> = null;

        r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod> = null;

     label3:
        $r3 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        if $r3 == null goto label4;

        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        virtualinvoke $r4.<com.android.server.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>("ime", 0);

     label4:
        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.InputMethodManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.util.PrintWriterPrinter r4, $r15;
        java.util.HashMap r5, $r18;
        java.lang.Throwable r6, $r127;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.view.inputmethod.InputMethodInfo r7;
        java.util.Iterator r8;
        com.android.server.InputMethodManagerService$ClientState r9, r13;
        com.android.internal.view.IInputMethod r10, $r60;
        android.os.RemoteException r11, r12, $r113, $r128;
        android.content.Context $r14;
        java.util.ArrayList $r16, $r103;
        java.util.Collection $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.StringBuilder $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r33, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r45, $r46, $r48, $r51, $r53, $r55, $r56, $r58, $r59, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r70, $r71, $r72, $r73, $r74, $r76, $r77, $r78, $r79, $r80, $r81, $r83, $r88, $r90, $r91, $r92, $r93, $r95, $r96, $r97, $r99, $r101, $r105, $r107, $r108, $r110, $r111, $r112, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r123, $r125, $r129, $r130, $r131;
        java.lang.String $r22, $r24, $r31, $r32, $r39, $r44, $r47, $r50, $r54, $r65, $r69, $r75, $r87, $r94, $r98, $r104, $r109, $r114, $r122, $r124, $r126;
        android.os.IBinder $r34, $r49, $r85, $r86;
        android.content.Intent $r52;
        com.android.server.InputMethodManagerService$SessionState $r57, $r106;
        java.lang.Object $r82, $r102;
        com.android.internal.view.IInputMethodClient $r84, $r89;
        com.android.internal.view.IInputContext $r100;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r14 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $i2 = virtualinvoke $r14.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i2 == 0 goto label01;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r123 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump InputMethodManager from from pid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r111 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r114 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r114);

        return;

     label01:
        $r15 = new android.util.PrintWriterPrinter;

        specialinvoke $r15.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r2);

        r4 = $r15;

        r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r5;

     label02:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("Current Input Method Manager state:");

        $r16 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        i0 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("  Input Methods:");

     label03:
        i1 = 0;

     label04:
        if i1 >= i0 goto label07;

     label05:
        $r103 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        $r102 = virtualinvoke $r103.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r7 = (android.view.inputmethod.InputMethodInfo) $r102;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  InputMethod #");

        $r120 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r122 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r122);

        virtualinvoke r7.<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>(r4, "    ");

     label06:
        i1 = i1 + 1;

        goto label04;

     label07:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("  Clients:");

        $r18 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mClients>;

        $r17 = virtualinvoke $r18.<java.util.HashMap: java.util.Collection values()>();

        r8 = interfaceinvoke $r17.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r82 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.android.server.InputMethodManagerService$ClientState) $r82;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Client ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r93 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r94);

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    client=");

        $r89 = r13.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89);

        $r87 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r87);

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    inputContext=");

        $r100 = r13.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputContext inputContext>;

        $r99 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r100);

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r98);

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    sessionRequested=");

        $z9 = r13.<com.android.server.InputMethodManagerService$ClientState: boolean sessionRequested>;

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r109 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r109);

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    curSession=");

        $r106 = r13.<com.android.server.InputMethodManagerService$ClientState: com.android.server.InputMethodManagerService$SessionState curSession>;

        $r105 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r106);

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r104);

     label09:
        goto label08;

     label10:
        $r127 := @caughtexception;

        r6 = $r127;

     label11:
        exitmonitor r5;

     label12:
        throw r6;

     label13:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurMethodId=");

        $r22 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r24);

        r9 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurClient=");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurSeq=");

        $i3 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r31);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurFocusedWindow=");

        $r34 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurId=");

        $r39 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId>;

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHaveConnect=");

        $z2 = r0.<com.android.server.InputMethodManagerService: boolean mHaveConnection>;

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBoundToMethod=");

        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mBoundToMethod>;

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r44);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurToken=");

        $r49 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r47);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurIntent=");

        $r52 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r51 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r50);

        r10 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurMethod=");

        $r60 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r54 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r54);

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mEnabledSession=");

        $r57 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SessionState mEnabledSession>;

        $r64 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r65);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mShowRequested=");

        $z3 = r0.<com.android.server.InputMethodManagerService: boolean mShowRequested>;

        $r62 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mShowExplicitlyRequested=");

        $z4 = r0.<com.android.server.InputMethodManagerService: boolean mShowExplicitlyRequested>;

        $r72 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mShowForced=");

        $z6 = r0.<com.android.server.InputMethodManagerService: boolean mShowForced>;

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r68 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInputShown=");

        $z5 = r0.<com.android.server.InputMethodManagerService: boolean mInputShown>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r69);

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSystemReady=");

        $z8 = r0.<com.android.server.InputMethodManagerService: boolean mSystemReady>;

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r74 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mScreenOn=");

        $z7 = r0.<com.android.server.InputMethodManagerService: boolean mScreenOn>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r75);

        exitmonitor r5;

     label14:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>(" ");

        if r9 == null goto label21;

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label15:
        $r84 = r9.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r85 = interfaceinvoke $r84.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        interfaceinvoke $r85.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r1, r3);

     label16:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>(" ");

        if r10 == null goto label22;

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label17:
        $r86 = interfaceinvoke r10.<com.android.internal.view.IInputMethod: android.os.IBinder asBinder()>();

        interfaceinvoke $r86.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r1, r3);

     label18:
        return;

     label19:
        $r113 := @caughtexception;

        r11 = $r113;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method service dead: ");

        $r125 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r126);

        return;

     label20:
        $r128 := @caughtexception;

        r12 = $r128;

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method client dead: ");

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r124 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r124);

        goto label16;

     label21:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("No input method client.");

        goto label16;

     label22:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("No input method service.");

        return;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch android.os.RemoteException from label15 to label16 with label20;
        catch android.os.RemoteException from label17 to label18 with label19;
    }

    void executeOrSendMessage(android.os.IInterface, android.os.Message)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IInterface r1;
        android.os.Message r2;
        android.os.IBinder $r3;
        boolean $z0;
        com.android.internal.os.HandlerCaller $r4;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IInterface;

        r2 := @parameter1: android.os.Message;

        $r3 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        $z0 = $r3 instanceof android.os.Binder;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r2);

        return;

     label1:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean handleMessage(android.os.Message)>(r2);

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return;
    }

    public void finishInput(com.android.internal.view.IInputMethodClient)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        return;
    }

    public android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r4;
        android.view.inputmethod.InputMethodSubtype r3;
        boolean $z0;

        r0 := @this: com.android.server.InputMethodManagerService;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label2:
        r3 = specialinvoke r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>();

        exitmonitor r1;

     label3:
        return r3;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.util.List getEnabledInputMethodList()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r6;
        java.util.List r3, $r5;
        boolean $z0;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r4;

        r0 := @this: com.android.server.InputMethodManagerService;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label1:
        r1 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label2:
        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r3 = virtualinvoke $r4.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        exitmonitor r1;

     label3:
        return r3;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public java.util.List getEnabledInputMethodSubtypeList(java.lang.String, boolean)
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1, $r11, $r12;
        boolean z0, $z1;
        java.util.HashMap r2, $r7, $r14;
        android.view.inputmethod.InputMethodInfo r3;
        java.lang.Throwable r4, $r15;
        java.util.List r5, r6, $r16;
        java.lang.Object $r8, $r13;
        android.content.Context $r9;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r10;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z1 != 0 goto label01;

        $r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r16;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

        if r1 != null goto label09;

     label02:
        $r12 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r12 == null goto label09;

        $r14 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r11 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r13 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        r3 = (android.view.inputmethod.InputMethodInfo) $r13;

     label03:
        if r3 != null goto label11;

     label04:
        r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        exitmonitor r2;

     label05:
        return r5;

     label06:
        $r15 := @caughtexception;

        r4 = $r15;

     label07:
        exitmonitor r2;

     label08:
        throw r4;

     label09:
        $r7 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.view.inputmethod.InputMethodInfo) $r8;

     label10:
        goto label03;

     label11:
        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r9 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r6 = virtualinvoke $r10.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>($r9, r3, z0);

        exitmonitor r2;

     label12:
        return r6;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
    }

    public java.util.List getInputMethodList()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap r1;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        java.util.List $r6;

        r0 := @this: com.android.server.InputMethodManagerService;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label1:
        r1 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label2:
        $r4 = new java.util.ArrayList;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        r2 = $r4;

        exitmonitor r1;

     label3:
        return r2;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

     label5:
        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap r1, $r12;
        java.lang.Throwable r2, $r19;
        android.util.Pair r3;
        android.view.inputmethod.InputMethodInfo r4;
        int i0, i1, $i2;
        android.view.inputmethod.InputMethodSubtype r6;
        boolean $z0, $z1, $z2;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r7;
        java.lang.Object $r8, $r10, $r13, $r14, $r15;
        java.lang.CharSequence $r9, $r11;
        java.lang.Integer $r16;
        java.lang.String $r17;
        java.lang.NumberFormatException $r18;

        r0 := @this: com.android.server.InputMethodManagerService;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        r1 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label02:
        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r3 = virtualinvoke $r7.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>();

     label03:
        if r3 == null goto label05;

     label04:
        $r8 = r3.<android.util.Pair: java.lang.Object first>;

        $r9 = (java.lang.CharSequence) $r8;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z1 != 0 goto label05;

        $r10 = r3.<android.util.Pair: java.lang.Object second>;

        $r11 = (java.lang.CharSequence) $r10;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z2 == 0 goto label07;

     label05:
        exitmonitor r1;

     label06:
        return null;

     label07:
        $r12 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r13 = r3.<android.util.Pair: java.lang.Object first>;

        $r15 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        r4 = (android.view.inputmethod.InputMethodInfo) $r15;

     label08:
        if r4 != null goto label11;

     label09:
        exitmonitor r1;

     label10:
        return null;

     label11:
        $r14 = r3.<android.util.Pair: java.lang.Object second>;

        $r17 = (java.lang.String) $r14;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r17);

        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        i0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r4, $i2);

     label12:
        if i0 < 0 goto label15;

     label13:
        i1 = virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

     label14:
        if i0 < i1 goto label17;

     label15:
        exitmonitor r1;

     label16:
        return null;

     label17:
        r6 = virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i0);

     label18:
        exitmonitor r1;

     label19:
        return r6;

     label20:
        $r19 := @caughtexception;

        r2 = $r19;

     label21:
        exitmonitor r1;

     label22:
        throw r2;

     label23:
        $r18 := @caughtexception;

     label24:
        exitmonitor r1;

     label25:
        return null;

        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.NumberFormatException from label11 to label12 with label23;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.NumberFormatException from label13 to label14 with label23;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.NumberFormatException from label17 to label18 with label23;
        catch java.lang.Throwable from label17 to label18 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.lang.Throwable from label24 to label25 with label20;
    }

    public java.util.List getShortcutInputMethodsAndSubtypes()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap r1, $r9, $r10, $r13;
        java.util.ArrayList r2, $r8, $r14;
        java.lang.Throwable r3, $r19;
        java.util.Iterator r4, r6;
        android.view.inputmethod.InputMethodInfo r5;
        android.util.Pair r7;
        int $i0;
        java.util.Set $r11;
        boolean $z0, $z2;
        java.lang.Object $r12, $r15, $r17, $r18, $r20;
        android.view.inputmethod.InputMethodSubtype $r16;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label01:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r9 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mShortcutInputMethodsAndSubtypes>;

        $i0 = virtualinvoke $r9.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label06;

        r7 = specialinvoke r0.<com.android.server.InputMethodManagerService: android.util.Pair findLastResortApplicableShortcutInputMethodAndSubtypeLocked(java.lang.String)>("voice");

     label02:
        if r7 == null goto label04;

     label03:
        $r18 = r7.<android.util.Pair: java.lang.Object first>;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $r20 = r7.<android.util.Pair: java.lang.Object second>;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label04:
        exitmonitor r1;

     label05:
        return r2;

     label06:
        $r10 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mShortcutInputMethodsAndSubtypes>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Set keySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.view.inputmethod.InputMethodInfo) $r12;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        $r13 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mShortcutInputMethodsAndSubtypes>;

        $r15 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        $r14 = (java.util.ArrayList) $r15;

        r6 = virtualinvoke $r14.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r17 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (android.view.inputmethod.InputMethodSubtype) $r17;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label09:
        goto label08;

     label10:
        $r19 := @caughtexception;

        r3 = $r19;

     label11:
        exitmonitor r1;

     label12:
        throw r3;

     label13:
        exitmonitor r1;

     label14:
        return r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    public boolean handleMessage(android.os.Message)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.Message r1;
        com.android.server.InputMethodManagerService$HardKeyboardListener r2;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int i0, i1, $i2, $i3, $i4, $i5, $i8, $i9;
        com.android.internal.view.IInputMethodClient r4, r6, $r39;
        com.android.internal.os.SomeArgs r5, r11, r16, r17, r24, r25, r27, r30, r31;
        com.android.internal.view.InputBindResult r7;
        java.lang.Throwable r8, r21, $r98, $r101;
        android.view.InputChannel r10, r19, $r36, $r92, $r96, $r97;
        com.android.server.InputMethodManagerService$SessionState r13, r18;
        com.android.internal.view.IInputMethod r20, $r46, $r57, $r60, $r70, $r71, $r76, $r78;
        java.lang.Object $r33, $r35, $r37, $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r50, $r51, $r52, $r53, $r54, $r58, $r59, $r61, $r62, $r63, $r64, $r65, $r66, $r69, $r73, $r74, $r75, $r77, $r79, $r80, $r82, $r88, $r94, $r103, $r111;
        com.android.server.InputMethodManagerService$ClientState $r34, $r102, $r113;
        com.android.internal.view.IInputContext $r47, $r56;
        android.view.inputmethod.EditorInfo $r48, $r49;
        com.android.internal.view.IInputSessionCallback $r55;
        android.os.IBinder $r67;
        android.os.ResultReceiver $r68, $r72;
        android.view.inputmethod.InputBinding $r81;
        java.lang.StringBuilder $r83, $r85, $r95, $r104, $r105, $r110, $r112, $r115;
        android.os.RemoteException $r84, $r86, $r87, $r90, $r91, $r99, $r100, $r106, $r107, $r108, $r109;
        java.lang.String $r89, $r93, $r114;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.Message;

        $i2 = r1.<android.os.Message: int what>;

        lookupswitch($i2)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 1000: goto label06;
            case 1010: goto label09;
            case 1020: goto label12;
            case 1030: goto label15;
            case 1040: goto label18;
            case 1050: goto label21;
            case 2000: goto label28;
            case 2010: goto label31;
            case 3000: goto label34;
            case 3010: goto label37;
            case 3020: goto label47;
            case 4000: goto label52;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        specialinvoke r0.<com.android.server.InputMethodManagerService: void showInputMethodMenu()>();

        return 1;

     label03:
        specialinvoke r0.<com.android.server.InputMethodManagerService: void showInputMethodSubtypeMenu()>();

        return 1;

     label04:
        $r77 = r1.<android.os.Message: java.lang.Object obj>;

        r30 = (com.android.internal.os.SomeArgs) $r77;

        $r88 = r30.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r89 = (java.lang.String) $r88;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void showInputMethodAndSubtypeEnabler(java.lang.String)>($r89);

        virtualinvoke r30.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label05:
        specialinvoke r0.<com.android.server.InputMethodManagerService: void showConfigureInputMethods()>();

        return 1;

     label06:
        $r75 = r1.<android.os.Message: java.lang.Object obj>;

        $r78 = (com.android.internal.view.IInputMethod) $r75;

        interfaceinvoke $r78.<com.android.internal.view.IInputMethod: void unbindInput()>();

     label07:
        return 1;

     label08:
        $r100 := @caughtexception;

        return 1;

     label09:
        $r80 = r1.<android.os.Message: java.lang.Object obj>;

        r31 = (com.android.internal.os.SomeArgs) $r80;

     label10:
        $r79 = r31.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r76 = (com.android.internal.view.IInputMethod) $r79;

        $r82 = r31.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r81 = (android.view.inputmethod.InputBinding) $r82;

        interfaceinvoke $r76.<com.android.internal.view.IInputMethod: void bindInput(android.view.inputmethod.InputBinding)>($r81);

     label11:
        virtualinvoke r31.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label12:
        $r74 = r1.<android.os.Message: java.lang.Object obj>;

        r25 = (com.android.internal.os.SomeArgs) $r74;

     label13:
        $r73 = r25.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r70 = (com.android.internal.view.IInputMethod) $r73;

        $i5 = r1.<android.os.Message: int arg1>;

        $r69 = r25.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r68 = (android.os.ResultReceiver) $r69;

        interfaceinvoke $r70.<com.android.internal.view.IInputMethod: void showSoftInput(int,android.os.ResultReceiver)>($i5, $r68);

     label14:
        virtualinvoke r25.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label15:
        $r61 = r1.<android.os.Message: java.lang.Object obj>;

        r27 = (com.android.internal.os.SomeArgs) $r61;

     label16:
        $r62 = r27.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r71 = (com.android.internal.view.IInputMethod) $r62;

        $r63 = r27.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r72 = (android.os.ResultReceiver) $r63;

        interfaceinvoke $r71.<com.android.internal.view.IInputMethod: void hideSoftInput(int,android.os.ResultReceiver)>(0, $r72);

     label17:
        virtualinvoke r27.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label18:
        $r64 = r1.<android.os.Message: java.lang.Object obj>;

        r24 = (com.android.internal.os.SomeArgs) $r64;

     label19:
        $r65 = r24.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        $r60 = (com.android.internal.view.IInputMethod) $r65;

        $r66 = r24.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r67 = (android.os.IBinder) $r66;

        interfaceinvoke $r60.<com.android.internal.view.IInputMethod: void attachToken(android.os.IBinder)>($r67);

     label20:
        virtualinvoke r24.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label21:
        $r58 = r1.<android.os.Message: java.lang.Object obj>;

        r17 = (com.android.internal.os.SomeArgs) $r58;

        $r59 = r17.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r20 = (com.android.internal.view.IInputMethod) $r59;

        $r53 = r17.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r19 = (android.view.InputChannel) $r53;

     label22:
        $r54 = r17.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r55 = (com.android.internal.view.IInputSessionCallback) $r54;

        interfaceinvoke r20.<com.android.internal.view.IInputMethod: void createSession(android.view.InputChannel,com.android.internal.view.IInputSessionCallback)>(r19, $r55);

     label23:
        if r19 == null goto label25;

        $z4 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r20);

        if $z4 == 0 goto label25;

     label24:
        virtualinvoke r19.<android.view.InputChannel: void dispose()>();

     label25:
        virtualinvoke r17.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label26:
        $r101 := @caughtexception;

        r21 = $r101;

        if r19 == null goto label27;

        $z7 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r20);

        if $z7 == 0 goto label27;

        virtualinvoke r19.<android.view.InputChannel: void dispose()>();

     label27:
        throw r21;

     label28:
        $r45 = r1.<android.os.Message: java.lang.Object obj>;

        r16 = (com.android.internal.os.SomeArgs) $r45;

     label29:
        $r52 = r16.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r18 = (com.android.server.InputMethodManagerService$SessionState) $r52;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void setEnabledSessionInMainThread(com.android.server.InputMethodManagerService$SessionState)>(r18);

        $r57 = r18.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r51 = r16.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r56 = (com.android.internal.view.IInputContext) $r51;

        $r50 = r16.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r49 = (android.view.inputmethod.EditorInfo) $r50;

        interfaceinvoke $r57.<com.android.internal.view.IInputMethod: void startInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>($r56, $r49);

     label30:
        virtualinvoke r16.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label31:
        $r44 = r1.<android.os.Message: java.lang.Object obj>;

        r11 = (com.android.internal.os.SomeArgs) $r44;

     label32:
        $r43 = r11.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r13 = (com.android.server.InputMethodManagerService$SessionState) $r43;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void setEnabledSessionInMainThread(com.android.server.InputMethodManagerService$SessionState)>(r13);

        $r46 = r13.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r42 = r11.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r47 = (com.android.internal.view.IInputContext) $r42;

        $r41 = r11.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        $r48 = (android.view.inputmethod.EditorInfo) $r41;

        interfaceinvoke $r46.<com.android.internal.view.IInputMethod: void restartInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>($r47, $r48);

     label33:
        virtualinvoke r11.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label34:
        $r40 = r1.<android.os.Message: java.lang.Object obj>;

        $r39 = (com.android.internal.view.IInputMethodClient) $r40;

        $i4 = r1.<android.os.Message: int arg1>;

        interfaceinvoke $r39.<com.android.internal.view.IInputMethodClient: void onUnbindMethod(int)>($i4);

     label35:
        return 1;

     label36:
        $r87 := @caughtexception;

        return 1;

     label37:
        $r37 = r1.<android.os.Message: java.lang.Object obj>;

        r5 = (com.android.internal.os.SomeArgs) $r37;

        $r38 = r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r6 = (com.android.internal.view.IInputMethodClient) $r38;

        $r35 = r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r7 = (com.android.internal.view.InputBindResult) $r35;

     label38:
        interfaceinvoke r6.<com.android.internal.view.IInputMethodClient: void onBindMethod(com.android.internal.view.InputBindResult)>(r7);

     label39:
        $r36 = r7.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        if $r36 == null goto label41;

        $z3 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r6);

        if $z3 == 0 goto label41;

        r10 = r7.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

     label40:
        virtualinvoke r10.<android.view.InputChannel: void dispose()>();

     label41:
        virtualinvoke r5.<com.android.internal.os.SomeArgs: void recycle()>();

        return 1;

     label42:
        $r84 := @caughtexception;

     label43:
        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client died receiving input method ");

        $r94 = r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        $r95 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r94);

        $r93 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r93);

     label44:
        $r92 = r7.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        if $r92 == null goto label41;

        $z5 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r6);

        if $z5 == 0 goto label41;

        r10 = r7.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        goto label40;

     label45:
        $r98 := @caughtexception;

        r8 = $r98;

        $r97 = r7.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        if $r97 == null goto label46;

        $z6 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r6);

        if $z6 == 0 goto label46;

        $r96 = r7.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        virtualinvoke $r96.<android.view.InputChannel: void dispose()>();

     label46:
        throw r8;

     label47:
        $r33 = r1.<android.os.Message: java.lang.Object obj>;

        $r34 = (com.android.server.InputMethodManagerService$ClientState) $r33;

        r4 = $r34.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        i1 = r1.<android.os.Message: int arg1>;

     label48:
        z2 = 0;

        if i1 == 0 goto label49;

        z2 = 1;

     label49:
        interfaceinvoke r4.<com.android.internal.view.IInputMethodClient: void setActive(boolean)>(z2);

     label50:
        return 1;

     label51:
        $r106 := @caughtexception;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got RemoteException sending setActive(false) notification to pid ");

        $r103 = r1.<android.os.Message: java.lang.Object obj>;

        $r102 = (com.android.server.InputMethodManagerService$ClientState) $r103;

        $i8 = $r102.<com.android.server.InputMethodManagerService$ClientState: int pid>;

        $r110 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid ");

        $r111 = r1.<android.os.Message: java.lang.Object obj>;

        $r113 = (com.android.server.InputMethodManagerService$ClientState) $r111;

        $i9 = $r113.<com.android.server.InputMethodManagerService$ClientState: int uid>;

        $r115 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r114 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r114);

        return 1;

     label52:
        r2 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$HardKeyboardListener mHardKeyboardListener>;

        $i3 = r1.<android.os.Message: int arg1>;

        if $i3 != 1 goto label55;

        z0 = 1;

     label53:
        i0 = r1.<android.os.Message: int arg2>;

        z1 = 0;

        if i0 != 1 goto label54;

        z1 = 1;

     label54:
        virtualinvoke r2.<com.android.server.InputMethodManagerService$HardKeyboardListener: void handleHardKeyboardStatusChange(boolean,boolean)>(z0, z1);

        return 1;

     label55:
        z0 = 0;

        goto label53;

     label56:
        $r107 := @caughtexception;

        if r19 == null goto label25;

        $z8 = staticinvoke <android.os.Binder: boolean isProxy(android.os.IInterface)>(r20);

        if $z8 == 0 goto label25;

        goto label24;

     label57:
        $r109 := @caughtexception;

        goto label33;

     label58:
        $r90 := @caughtexception;

        goto label30;

     label59:
        $r91 := @caughtexception;

        goto label20;

     label60:
        $r86 := @caughtexception;

        goto label17;

     label61:
        $r108 := @caughtexception;

        goto label14;

     label62:
        $r99 := @caughtexception;

        goto label11;

        catch android.os.RemoteException from label06 to label07 with label08;
        catch android.os.RemoteException from label10 to label11 with label62;
        catch android.os.RemoteException from label13 to label14 with label61;
        catch android.os.RemoteException from label16 to label17 with label60;
        catch android.os.RemoteException from label19 to label20 with label59;
        catch android.os.RemoteException from label22 to label23 with label56;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch android.os.RemoteException from label29 to label30 with label58;
        catch android.os.RemoteException from label32 to label33 with label57;
        catch android.os.RemoteException from label34 to label35 with label36;
        catch android.os.RemoteException from label38 to label39 with label42;
        catch java.lang.Throwable from label38 to label39 with label45;
        catch java.lang.Throwable from label43 to label44 with label45;
        catch android.os.RemoteException from label47 to label48 with label51;
        catch android.os.RemoteException from label49 to label50 with label51;
    }

    boolean hideCurrentInputLocked(int, android.os.ResultReceiver)
    {
        com.android.server.InputMethodManagerService r0;
        int i0, $i1, $i2;
        android.os.ResultReceiver r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.ServiceConnection $r2;
        android.content.Context $r3;
        com.android.internal.view.IInputMethod $r4, $r5, $r7;
        com.android.internal.os.HandlerCaller $r6;
        android.os.Message $r8;

        r0 := @this: com.android.server.InputMethodManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        $z5 = r0.<com.android.server.InputMethodManagerService: boolean mShowExplicitlyRequested>;

        if $z5 != 0 goto label1;

        $z6 = r0.<com.android.server.InputMethodManagerService: boolean mShowForced>;

        if $z6 == 0 goto label2;

     label1:
        return 0;

     label2:
        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mShowForced>;

        if $z1 == 0 goto label3;

        $i2 = i0 & 2;

        if $i2 == 0 goto label3;

        return 0;

     label3:
        $z2 = r0.<com.android.server.InputMethodManagerService: boolean mInputShown>;

        if $z2 == 0 goto label6;

        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r4 == null goto label6;

        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r6 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r5 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r8 = virtualinvoke $r6.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(1030, $r5, r1);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r7, $r8);

        z0 = 1;

     label4:
        $z3 = r0.<com.android.server.InputMethodManagerService: boolean mHaveConnection>;

        if $z3 == 0 goto label5;

        $z4 = r0.<com.android.server.InputMethodManagerService: boolean mVisibleBound>;

        if $z4 == 0 goto label5;

        $r3 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r2 = r0.<com.android.server.InputMethodManagerService: android.content.ServiceConnection mVisibleConnection>;

        virtualinvoke $r3.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r2);

        r0.<com.android.server.InputMethodManagerService: boolean mVisibleBound> = 0;

     label5:
        r0.<com.android.server.InputMethodManagerService: boolean mInputShown> = 0;

        r0.<com.android.server.InputMethodManagerService: boolean mShowRequested> = 0;

        r0.<com.android.server.InputMethodManagerService: boolean mShowExplicitlyRequested> = 0;

        r0.<com.android.server.InputMethodManagerService: boolean mShowForced> = 0;

        return z0;

     label6:
        z0 = 0;

        goto label4;
    }

    void hideInputMethodMenu()
    {
        com.android.server.InputMethodManagerService r0;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label1:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void hideInputMethodMenuLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void hideInputMethodMenuLocked()
    {
        com.android.server.InputMethodManagerService r0;
        android.app.AlertDialog $r1, $r2;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog>;

        virtualinvoke $r2.<android.app.AlertDialog: void dismiss()>();

        r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog mSwitchingDialog> = null;

     label1:
        r0.<com.android.server.InputMethodManagerService: android.app.AlertDialog$Builder mDialogBuilder> = null;

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] mIms> = null;

        return;
    }

    public void hideMySoftInput(android.os.IBinder, int)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1, $r5;
        int i0;
        java.util.HashMap r2;
        java.lang.Throwable r3, r4, $r6, $r7;
        long l1;
        boolean $z0;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

        if r1 == null goto label03;

     label02:
        $r5 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r5 == r1 goto label08;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r7 := @caughtexception;

        r3 = $r7;

     label06:
        exitmonitor r2;

     label07:
        throw r3;

     label08:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label09:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>(i0, null);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r2;

     label11:
        return;

     label12:
        $r6 := @caughtexception;

        r4 = $r6;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label14:
        throw r4;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.Throwable from label13 to label14 with label05;
    }

    public boolean hideSoftInput(com.android.internal.view.IInputMethodClient, int, android.os.ResultReceiver)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1, $r11;
        int i0;
        android.os.ResultReceiver r2;
        boolean z0, $z1, $z2;
        long l1;
        java.lang.Throwable r3, r5, $r13, $r14;
        java.util.HashMap r4;
        android.os.IBinder r6, r7;
        android.view.IWindowManager $r9;
        com.android.server.InputMethodManagerService$ClientState $r10, $r12;
        android.os.RemoteException $r15;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        z0 = 0;

        $z1 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z1 != 0 goto label01;

        return 0;

     label01:
        staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r4 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r4;

     label03:
        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r10 == null goto label07;

     label04:
        if r1 == null goto label07;

     label05:
        $r12 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r11 = $r12.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        r6 = interfaceinvoke $r11.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        r7 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label06:
        if r6 == r7 goto label17;

     label07:
        $r9 = r0.<com.android.server.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        $z2 = interfaceinvoke $r9.<android.view.IWindowManager: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>(r1);

        if $z2 != 0 goto label17;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void setImeWindowVisibilityStatusHiddenLocked()>();

     label08:
        exitmonitor r4;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label10:
        $r15 := @caughtexception;

     label11:
        specialinvoke r0.<com.android.server.InputMethodManagerService: void setImeWindowVisibilityStatusHiddenLocked()>();

        exitmonitor r4;

     label12:
        z0 = 0;

        goto label09;

     label13:
        $r13 := @caughtexception;

        r5 = $r13;

     label14:
        exitmonitor r4;

     label15:
        throw r5;

     label16:
        $r14 := @caughtexception;

        r3 = $r14;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label17:
        z0 = virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>(i0, r2);

        exitmonitor r4;

     label18:
        goto label09;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label13;
    }

    public boolean notifySuggestionPicked(android.text.style.SuggestionSpan, java.lang.String, int)
    {
        com.android.server.InputMethodManagerService r0;
        android.text.style.SuggestionSpan r1;
        java.lang.String r2, r7, $r14, $r17;
        int i0, $i2, $i3;
        java.util.HashMap r3;
        java.lang.Throwable r4, r9, $r22, $r23;
        android.view.inputmethod.InputMethodInfo r5;
        java.lang.String[] r6;
        android.content.Intent r8, $r12;
        long l1;
        boolean $z0;
        java.lang.Object $r10;
        android.util.LruCache $r11;
        android.os.UserHandle $r19;
        android.content.Context $r20;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.text.style.SuggestionSpan;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r3;

     label02:
        $r11 = r0.<com.android.server.InputMethodManagerService: android.util.LruCache mSecureSuggestionSpans>;

        $r10 = virtualinvoke $r11.<android.util.LruCache: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.view.inputmethod.InputMethodInfo) $r10;

     label03:
        if r5 == null goto label18;

     label04:
        r6 = virtualinvoke r1.<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>();

     label05:
        if i0 < 0 goto label07;

     label06:
        $i2 = lengthof r6;

        if i0 < $i2 goto label12;

     label07:
        exitmonitor r3;

     label08:
        return 0;

     label09:
        $r23 := @caughtexception;

        r4 = $r23;

     label10:
        exitmonitor r3;

     label11:
        throw r4;

     label12:
        r7 = virtualinvoke r1.<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()>();

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>()>();

        r8 = $r12;

        $r14 = virtualinvoke r5.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r14, r7);

        virtualinvoke r8.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.text.style.SUGGESTION_PICKED");

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("before", r2);

        $r17 = r6[i0];

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("after", $r17);

        $i3 = virtualinvoke r1.<android.text.style.SuggestionSpan: int hashCode()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("hashcode", $i3);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label13:
        $r20 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r19 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r20.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r8, $r19);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r3;

     label15:
        return 1;

     label16:
        $r22 := @caughtexception;

        r9 = $r22;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r9;

     label18:
        exitmonitor r3;

     label19:
        return 0;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label17 to label18 with label09;
        catch java.lang.Throwable from label18 to label19 with label09;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.InputMethodManagerService r0;
        android.content.ComponentName r1, $r7;
        android.os.IBinder r2, $r9, $r10;
        java.util.HashMap r3;
        java.lang.Throwable r4, $r18;
        android.content.Intent $r5, $r6;
        boolean $z0;
        com.android.internal.view.IInputMethod $r8, $r11, $r14;
        com.android.internal.os.HandlerCaller $r12;
        android.os.Message $r13;
        com.android.server.InputMethodManagerService$ClientState $r15, $r16, $r17;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r3;

     label1:
        $r5 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        if $r5 == null goto label4;

        $r6 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke r1.<android.content.ComponentName: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        $r8 = staticinvoke <com.android.internal.view.IInputMethod$Stub: com.android.internal.view.IInputMethod asInterface(android.os.IBinder)>(r2);

        r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod> = $r8;

        $r9 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r9 != null goto label3;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Service connected without a token!");

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void unbindCurrentMethodLocked(boolean,boolean)>(0, 0);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r14 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r12 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r10 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        $r13 = virtualinvoke $r12.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(1040, $r11, $r10);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r14, $r13);

        $r16 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r16 == null goto label4;

        $r15 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void clearClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)>($r15);

        $r17 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void requestClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)>($r17);

     label4:
        exitmonitor r3;

     label5:
        return;

     label6:
        $r18 := @caughtexception;

        r4 = $r18;

     label7:
        exitmonitor r3;

     label8:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.InputMethodManagerService r0;
        android.content.ComponentName r1, $r7;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r14;
        com.android.internal.view.IInputMethod $r4;
        android.content.Intent $r5, $r6;
        boolean $z0, $z1;
        long $l0;
        com.android.server.InputMethodManagerService$ClientState $r8, $r9, $r10;
        int $i1;
        com.android.internal.view.IInputMethodClient $r11, $r12;
        com.android.internal.os.HandlerCaller $r13;
        android.os.Message $r15;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.content.ComponentName;

        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r4 == null goto label2;

        $r5 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        if $r5 == null goto label2;

        $r6 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke r1.<android.content.ComponentName: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void clearCurMethodLocked()>();

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.InputMethodManagerService: long mLastBindTime> = $l0;

        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mInputShown>;

        r0.<com.android.server.InputMethodManagerService: boolean mShowRequested> = $z1;

        r0.<com.android.server.InputMethodManagerService: boolean mInputShown> = 0;

        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r8 == null goto label2;

        $r9 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r12 = $r9.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r13 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $i1 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r11 = $r10.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r15 = virtualinvoke $r13.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(3000, $i1, $r11);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r12, $r15);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r14 := @caughtexception;

        r3 = $r14;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void onSessionCreated(com.android.internal.view.IInputMethod, com.android.internal.view.IInputMethodSession, android.view.InputChannel)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethod r1, $r7, $r8;
        com.android.internal.view.IInputMethodSession r2, $r16;
        android.view.InputChannel r3;
        java.util.HashMap r4;
        java.lang.Throwable r5, $r22;
        com.android.internal.view.InputBindResult r6;
        android.os.IBinder $r9, $r10;
        com.android.server.InputMethodManagerService$ClientState $r11, $r12, $r14, $r15, $r17, $r19;
        com.android.server.InputMethodManagerService$SessionState $r13;
        com.android.internal.view.IInputMethodClient $r18, $r20;
        com.android.internal.os.HandlerCaller $r21;
        android.os.Message $r23;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethod;

        r2 := @parameter1: com.android.internal.view.IInputMethodSession;

        r3 := @parameter2: android.view.InputChannel;

        r4 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r4;

     label01:
        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r7 == null goto label06;

     label02:
        if r1 == null goto label06;

     label03:
        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r9 = interfaceinvoke $r8.<com.android.internal.view.IInputMethod: android.os.IBinder asBinder()>();

        $r10 = interfaceinvoke r1.<com.android.internal.view.IInputMethod: android.os.IBinder asBinder()>();

        if $r9 != $r10 goto label06;

        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r11 == null goto label06;

        $r12 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void clearClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)>($r12);

        $r14 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r13 = new com.android.server.InputMethodManagerService$SessionState;

        $r15 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        specialinvoke $r13.<com.android.server.InputMethodManagerService$SessionState: void <init>(com.android.server.InputMethodManagerService,com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputMethod,com.android.internal.view.IInputMethodSession,android.view.InputChannel)>(r0, $r15, r1, r2, r3);

        $r14.<com.android.server.InputMethodManagerService$ClientState: com.android.server.InputMethodManagerService$SessionState curSession> = $r13;

        r6 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult attachNewInputLocked(boolean)>(1);

        $r16 = r6.<com.android.internal.view.InputBindResult: com.android.internal.view.IInputMethodSession method>;

        if $r16 == null goto label04;

        $r17 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r20 = $r17.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r21 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r19 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r18 = $r19.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r23 = virtualinvoke $r21.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(3010, $r18, r6);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r20, $r23);

     label04:
        exitmonitor r4;

     label05:
        return;

     label06:
        exitmonitor r4;

     label07:
        virtualinvoke r3.<android.view.InputChannel: void dispose()>();

        return;

     label08:
        $r22 := @caughtexception;

        r5 = $r22;

     label09:
        exitmonitor r4;

     label10:
        throw r5;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.InputMethodManagerService r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.RuntimeException r3, $r4;
        boolean z0, $z1;

        r0 := @this: com.android.server.InputMethodManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        z0 = specialinvoke r0.<com.android.internal.view.IInputMethodManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $z1 = r3 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Input Method Manager Crash", r3);

     label4:
        throw r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])
    {
        com.android.server.InputMethodManagerService r0;
        android.text.style.SuggestionSpan[] r1;
        java.util.HashMap r2, $r7;
        java.lang.Throwable r3, $r12;
        android.view.inputmethod.InputMethodInfo r4;
        int i0, $i1;
        android.text.style.SuggestionSpan r5;
        boolean $z0, $z1;
        java.lang.String $r6, $r9;
        java.lang.Object $r8;
        android.util.LruCache $r11;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.text.style.SuggestionSpan[];

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label02:
        $r7 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r6 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r4 = (android.view.inputmethod.InputMethodInfo) $r8;

     label03:
        i0 = 0;

     label04:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label06;

        r5 = r1[i0];

        $r9 = virtualinvoke r5.<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z1 != 0 goto label11;

        $r11 = r0.<com.android.server.InputMethodManagerService: android.util.LruCache mSecureSuggestionSpans>;

        virtualinvoke $r11.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r4);

     label05:
        goto label11;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r12 := @caughtexception;

        r3 = $r12;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        i0 = i0 + 1;

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void removeClient(com.android.internal.view.IInputMethodClient)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r8;
        com.android.server.InputMethodManagerService$ClientState r4;
        boolean $z0;
        android.os.IBinder $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label2:
        $r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mClients>;

        $r6 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r6);

        r4 = (com.android.server.InputMethodManagerService$ClientState) $r7;

     label3:
        if r4 == null goto label5;

     label4:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void clearClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)>(r4);

     label5:
        exitmonitor r2;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void requestClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.InputMethodManagerService$ClientState r1;
        android.view.InputChannel[] r2;
        boolean $z0;
        java.lang.String $r3;
        com.android.server.InputMethodManagerService$MethodCallback $r4;
        android.view.InputChannel $r5, $r10;
        com.android.internal.view.IInputMethod $r6, $r7, $r9;
        com.android.internal.os.HandlerCaller $r8;
        android.os.Message $r11;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.server.InputMethodManagerService$ClientState;

        $z0 = r1.<com.android.server.InputMethodManagerService$ClientState: boolean sessionRequested>;

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r1.<com.android.server.InputMethodManagerService$ClientState: java.lang.String toString()>();

        r2 = staticinvoke <android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>($r3);

        r1.<com.android.server.InputMethodManagerService$ClientState: boolean sessionRequested> = 1;

        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r9 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r10 = r2[1];

        $r4 = new com.android.server.InputMethodManagerService$MethodCallback;

        $r6 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r5 = r2[0];

        specialinvoke $r4.<com.android.server.InputMethodManagerService$MethodCallback: void <init>(com.android.server.InputMethodManagerService,com.android.internal.view.IInputMethod,android.view.InputChannel)>(r0, $r6, $r5);

        $r11 = virtualinvoke $r8.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOO(int,java.lang.Object,java.lang.Object,java.lang.Object)>(1050, $r9, $r10, $r4);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r7, $r11);

     label1:
        return;
    }

    public void setAdditionalInputMethodSubtypes(java.lang.String, android.view.inputmethod.InputMethodSubtype[])
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1, $r12, $r13;
        android.view.inputmethod.InputMethodSubtype[] r2;
        java.util.HashMap r3, $r10, $r15;
        java.lang.Throwable r4, r8, $r17, $r18;
        android.view.inputmethod.InputMethodInfo r5;
        java.lang.String[] r7;
        int i0, i1, $i3, $i4;
        long l2;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9;
        android.content.pm.IPackageManager $r11;
        com.android.server.InputMethodManagerService$InputMethodFileManager $r14;
        java.util.ArrayList $r16;
        android.os.RemoteException $r19;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype[];

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label02;

     label01:
        return;

     label02:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label01;

        if r2 == null goto label01;

        $i3 = lengthof r2;

        if $i3 == 0 goto label01;

        r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r3;

     label03:
        $r10 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r9 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (android.view.inputmethod.InputMethodInfo) $r9;

     label04:
        if r5 != null goto label10;

     label05:
        exitmonitor r3;

     label06:
        return;

     label07:
        $r17 := @caughtexception;

        r4 = $r17;

     label08:
        exitmonitor r3;

     label09:
        throw r4;

     label10:
        $r11 = r0.<com.android.server.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r7 = interfaceinvoke $r11.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>($i4);

     label11:
        if r7 == null goto label24;

     label12:
        i0 = lengthof r7;

     label13:
        i1 = 0;

     label14:
        if i1 >= i0 goto label24;

     label15:
        $r13 = r7[i1];

        $r12 = virtualinvoke r5.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label26;

        $r14 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodFileManager mFileManager>;

        virtualinvoke $r14.<com.android.server.InputMethodManagerService$InputMethodFileManager: void addInputMethodSubtypes(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype[])>(r5, r2);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label16:
        $r16 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        $r15 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void buildInputMethodListLocked(java.util.ArrayList,java.util.HashMap,boolean)>($r16, $r15, 0);

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r3;

     label18:
        return;

     label19:
        $r19 := @caughtexception;

     label20:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to get package infos");

        exitmonitor r3;

     label21:
        return;

     label22:
        $r18 := @caughtexception;

        r8 = $r18;

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r8;

     label24:
        exitmonitor r3;

     label25:
        return;

     label26:
        i1 = i1 + 1;

        goto label14;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch android.os.RemoteException from label10 to label11 with label19;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
        catch java.lang.Throwable from label16 to label17 with label22;
        catch java.lang.Throwable from label17 to label18 with label07;
        catch java.lang.Throwable from label20 to label21 with label07;
        catch java.lang.Throwable from label23 to label24 with label07;
        catch java.lang.Throwable from label24 to label25 with label07;
    }

    public boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)
    {
        com.android.server.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodSubtype r1;
        java.util.HashMap r2, $r6;
        java.lang.Throwable r3, $r10;
        int i0, $i1;
        boolean $z0;
        java.lang.String $r4, $r5, $r9;
        java.lang.Object $r7;
        android.view.inputmethod.InputMethodInfo $r8;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

        if r1 == null goto label09;

     label02:
        $r4 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r4 == null goto label09;

        $r6 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r8 = (android.view.inputmethod.InputMethodInfo) $r7;

        $i1 = virtualinvoke r1.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        i0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>($r8, $i1);

     label03:
        if i0 == -1 goto label09;

     label04:
        $r9 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>($r9, i0);

        exitmonitor r2;

     label05:
        return 1;

     label06:
        $r10 := @caughtexception;

        r3 = $r10;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        exitmonitor r2;

     label10:
        return 0;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    void setEnabledSessionInMainThread(com.android.server.InputMethodManagerService$SessionState)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.InputMethodManagerService$SessionState r1, $r4, $r5, $r8, $r9;
        com.android.internal.view.IInputMethodSession $r6, $r10;
        com.android.internal.view.IInputMethod $r7, $r11;
        android.os.RemoteException $r12, $r13;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.server.InputMethodManagerService$SessionState;

        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SessionState mEnabledSession>;

        if $r4 == r1 goto label4;

        $r5 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SessionState mEnabledSession>;

        if $r5 == null goto label2;

     label1:
        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SessionState mEnabledSession>;

        $r11 = $r8.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r9 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SessionState mEnabledSession>;

        $r10 = $r9.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        interfaceinvoke $r11.<com.android.internal.view.IInputMethod: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>($r10, 0);

     label2:
        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$SessionState mEnabledSession> = r1;

     label3:
        $r7 = r1.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethod method>;

        $r6 = r1.<com.android.server.InputMethodManagerService$SessionState: com.android.internal.view.IInputMethodSession session>;

        interfaceinvoke $r7.<com.android.internal.view.IInputMethod: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>($r6, 1);

     label4:
        return;

     label5:
        $r13 := @caughtexception;

        return;

     label6:
        $r12 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void setImeWindowStatus(android.os.IBinder, int, int)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1, $r14;
        int i0, i1, i3, $i5, $i6;
        long l2;
        java.lang.Throwable r2, r4, $r34, $r35;
        java.util.HashMap r3, $r18;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.view.inputmethod.InputMethodInfo r5;
        java.lang.CharSequence r6, r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r12, $r16;
        com.android.server.StatusBarManagerService $r15, $r33;
        java.lang.Object $r17;
        android.app.NotificationManager $r19, $r22, $r26, $r31;
        android.os.UserHandle $r20, $r27;
        android.content.res.Resources $r21;
        android.app.PendingIntent $r23;
        android.view.inputmethod.InputMethodSubtype $r24;
        android.content.Context $r25, $r28;
        android.app.Notification $r29, $r32;
        com.android.server.wm.WindowManagerService $r30;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label02;

     label01:
        $r14 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r14 == r1 goto label04;

     label02:
        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring setImeWindowStatus of uid ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r12);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label04:
        r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r3;

     label05:
        if i0 == 0 goto label08;

     label06:
        $z5 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean isKeyguardLocked()>();

        if $z5 == 0 goto label08;

        $z4 = r0.<com.android.server.InputMethodManagerService: boolean mCurClientInKeyguard>;

        if $z4 != 0 goto label08;

     label07:
        i0 = 0;

     label08:
        r0.<com.android.server.InputMethodManagerService: int mImeWindowVis> = i0;

        r0.<com.android.server.InputMethodManagerService: int mBackDisposition> = i1;

        $r15 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        if $r15 == null goto label09;

        $r33 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        virtualinvoke $r33.<com.android.server.StatusBarManagerService: void setImeWindowStatus(android.os.IBinder,int,int)>(r1, i0, i1);

     label09:
        $i5 = i0 & 1;

        if $i5 == 0 goto label21;

     label10:
        $r30 = r0.<com.android.server.InputMethodManagerService: com.android.server.wm.WindowManagerService mWindowManagerService>;

        $z3 = virtualinvoke $r30.<com.android.server.wm.WindowManagerService: boolean isHardKeyboardAvailable()>();

        if $z3 != 0 goto label24;

     label11:
        $i6 = i0 & 2;

        if $i6 == 0 goto label21;

        goto label24;

     label12:
        $r18 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r16 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r17 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r16);

        r5 = (android.view.inputmethod.InputMethodInfo) $r17;

     label13:
        if r5 == null goto label22;

        if z0 == 0 goto label22;

     label14:
        $z2 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean needsToShowImeSwitchOngoingNotification()>();

        if $z2 == 0 goto label22;

        $r21 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        r6 = virtualinvoke $r21.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040509);

        $r25 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r24 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        r7 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.lang.CharSequence getImeAndSubtypeDisplayName(android.content.Context,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>($r25, r5, $r24);

        $r29 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r28 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r23 = r0.<com.android.server.InputMethodManagerService: android.app.PendingIntent mImeSwitchPendingIntent>;

        virtualinvoke $r29.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>($r28, r6, r7, $r23);

        $r26 = r0.<com.android.server.InputMethodManagerService: android.app.NotificationManager mNotificationManager>;

        if $r26 == null goto label15;

        $r31 = r0.<com.android.server.InputMethodManagerService: android.app.NotificationManager mNotificationManager>;

        $r32 = r0.<com.android.server.InputMethodManagerService: android.app.Notification mImeSwitcherNotification>;

        $r27 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r31.<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>(null, 17040509, $r32, $r27);

        r0.<com.android.server.InputMethodManagerService: boolean mNotificationShown> = 1;

     label15:
        exitmonitor r3;

     label16:
        goto label03;

     label17:
        $r34 := @caughtexception;

        r4 = $r34;

     label18:
        exitmonitor r3;

     label19:
        throw r4;

     label20:
        $r35 := @caughtexception;

        r2 = $r35;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label21:
        z0 = 0;

        goto label12;

     label22:
        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mNotificationShown>;

        if $z1 == 0 goto label15;

        $r19 = r0.<com.android.server.InputMethodManagerService: android.app.NotificationManager mNotificationManager>;

        if $r19 == null goto label15;

        $r22 = r0.<com.android.server.InputMethodManagerService: android.app.NotificationManager mNotificationManager>;

        $r20 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r22.<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>(null, 17040509, $r20);

        r0.<com.android.server.InputMethodManagerService: boolean mNotificationShown> = 0;

     label23:
        goto label15;

     label24:
        z0 = 1;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label19 to label20 with label20;
        catch java.lang.Throwable from label22 to label23 with label17;
    }

    public void setInputMethod(android.os.IBinder, java.lang.String)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.InputMethodManagerService: void setInputMethodWithSubtypeId(android.os.IBinder,java.lang.String,int)>(r1, r2, -1);

        return;
    }

    public void setInputMethodAndSubtype(android.os.IBinder, java.lang.String, android.view.inputmethod.InputMethodSubtype)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1;
        java.lang.String r2;
        android.view.inputmethod.InputMethodSubtype r3;
        java.util.HashMap r4, $r6;
        java.lang.Throwable r5, $r9;
        boolean $z0;
        java.lang.Object $r7;
        android.view.inputmethod.InputMethodInfo $r8;
        int $i0, $i1;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.view.inputmethod.InputMethodSubtype;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r4 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r4;

        if r3 == null goto label8;

     label2:
        $r6 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r8 = (android.view.inputmethod.InputMethodInfo) $r7;

        $i0 = virtualinvoke r3.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $i1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>($r8, $i0);

        specialinvoke r0.<com.android.server.InputMethodManagerService: void setInputMethodWithSubtypeId(android.os.IBinder,java.lang.String,int)>(r1, r2, $i1);

     label3:
        exitmonitor r4;

     label4:
        return;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

     label6:
        exitmonitor r4;

     label7:
        throw r5;

     label8:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>(r1, r2);

     label9:
        goto label3;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public boolean setInputMethodEnabled(java.lang.String, boolean)
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1;
        boolean z0, z1, $z2;
        java.util.HashMap r2;
        java.lang.Throwable r3, r4, $r6, $r8;
        long l0;
        android.content.Context $r5;
        int $i1;
        java.lang.SecurityException $r7;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z2 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z2 != 0 goto label01;

        return 0;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label02:
        $r5 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $i1 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.WRITE_SECURE_SETTINGS");

        if $i1 == 0 goto label06;

        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires permission android.permission.WRITE_SECURE_SETTINGS");

        throw $r7;

     label03:
        $r8 := @caughtexception;

        r3 = $r8;

     label04:
        exitmonitor r2;

     label05:
        throw r3;

     label06:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label07:
        z1 = virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>(r1, z0);

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r2;

     label09:
        return z1;

     label10:
        $r6 := @caughtexception;

        r4 = $r6;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label12:
        throw r4;

        catch java.lang.Throwable from label02 to label03 with label03;
        catch java.lang.Throwable from label04 to label05 with label03;
        catch java.lang.Throwable from label06 to label07 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label03;
        catch java.lang.Throwable from label11 to label12 with label03;
    }

    boolean setInputMethodEnabledLocked(java.lang.String, boolean)
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1, $r12, $r17, $r20, $r23;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List r2;
        java.lang.StringBuilder r3, $r9, $r18, $r21, $r22;
        java.util.Iterator r4;
        java.util.HashMap $r5;
        java.lang.Object $r6, $r13, $r15;
        android.view.inputmethod.InputMethodInfo $r7;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r8, $r10, $r11, $r14;
        android.util.Pair $r16;
        java.lang.IllegalArgumentException $r19;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (android.view.inputmethod.InputMethodInfo) $r6;

        if $r7 != null goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown id: ");

        $r20 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label1:
        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r2 = virtualinvoke $r8.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        if z0 == 0 goto label4;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label3;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (android.util.Pair) $r13;

        $r15 = $r16.<android.util.Pair: java.lang.Object first>;

        $r17 = (java.lang.String) $r15;

        $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label2;

        return 1;

     label3:
        $r14 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        virtualinvoke $r14.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>(r1, 0);

        return 0;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r3 = $r9;

        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $z1 = virtualinvoke $r10.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder,java.util.List,java.lang.String)>(r3, r2, r1);

        if $z1 == 0 goto label6;

        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r12 = virtualinvoke $r11.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label5;

        $z3 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>();

        if $z3 != 0 goto label5;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodManagerService", "Can\'t find new IME, unsetting the current input method.");

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetSelectedInputMethodAndSubtypeLocked(java.lang.String)>("");

     label5:
        return 1;

     label6:
        return 0;
    }

    void setInputMethodLocked(java.lang.String, int)
    {
        com.android.server.InputMethodManagerService r0;
        java.lang.String r1, $r9, $r19, $r26;
        int i0, i2;
        android.view.inputmethod.InputMethodInfo r2;
        long l1;
        java.lang.Throwable r3, $r29;
        android.content.Intent r4, $r11;
        android.view.inputmethod.InputMethodSubtype r5, r6;
        java.util.HashMap $r8;
        java.lang.Object $r10;
        boolean $z0, $z1;
        android.content.Context $r14;
        android.os.UserHandle $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r20, $r21, $r25, $r27, $r28;
        java.lang.IllegalArgumentException $r22;
        com.android.internal.view.IInputMethod $r23, $r24;
        android.os.RemoteException $r30;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r8 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.view.inputmethod.InputMethodInfo) $r10;

        if r2 != null goto label01;

        $r22 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown id: ");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label01:
        $r9 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label11;

        i2 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if i2 > 0 goto label03;

     label02:
        return;

     label03:
        r5 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if i0 < 0 goto label06;

        if i0 >= i2 goto label06;

        r6 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i0);

     label04:
        if r6 == null goto label05;

        if r5 != null goto label07;

     label05:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal subtype state: old subtype = ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new subtype = ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r19);

        return;

     label06:
        r6 = specialinvoke r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtypeLocked()>();

        goto label04;

     label07:
        if r6 == r5 goto label02;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>(r2, i0, 1);

        $r23 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r23 == null goto label02;

     label08:
        specialinvoke r0.<com.android.server.InputMethodManagerService: void refreshImeWindowVisibilityLocked()>();

        $r24 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        interfaceinvoke $r24.<com.android.internal.view.IInputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>(r6);

     label09:
        return;

     label10:
        $r30 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to call changeInputMethodSubtype");

        return;

     label11:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label12:
        specialinvoke r0.<com.android.server.InputMethodManagerService: void setSelectedInputMethodAndSubtypeLocked(android.view.inputmethod.InputMethodInfo,int,boolean)>(r2, i0, 0);

        r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId> = r1;

        $z1 = staticinvoke <android.app.ActivityManagerNative: boolean isSystemReady()>();

        if $z1 == 0 goto label13;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.INPUT_METHOD_CHANGED");

        r4 = $r11;

        virtualinvoke r4.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("input_method_id", r1);

        $r14 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r15 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        virtualinvoke $r14.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r4, $r15);

     label13:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void unbindCurrentClientLocked()>();

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label15:
        $r29 := @caughtexception;

        r3 = $r29;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
    }

    public boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1;
        java.util.HashMap r2, $r5;
        java.lang.Throwable r3, $r11;
        boolean $z0;
        java.lang.String $r4;
        com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager $r6;
        java.lang.Object $r7;
        android.view.inputmethod.InputMethodSubtype $r8;
        android.view.inputmethod.InputMethodInfo $r9;
        com.android.server.InputMethodManagerService$ImeSubtypeListItem $r10;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label2:
        $r6 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager mImListManager>;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r4 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r9 = (android.view.inputmethod.InputMethodInfo) $r7;

        $r8 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        $r10 = virtualinvoke $r6.<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: com.android.server.InputMethodManagerService$ImeSubtypeListItem getNextInputMethod(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>(0, $r9, $r8);

        if $r10 != null goto label4;

        exitmonitor r2;

     label3:
        return 0;

     label4:
        exitmonitor r2;

     label5:
        return 1;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean showCurrentInputLocked(int, android.os.ResultReceiver)
    {
        com.android.server.InputMethodManagerService r0;
        int i0, $i1, $i2, $i12;
        android.os.ResultReceiver r1;
        java.lang.Object[] r2;
        boolean $z0, $z1, $z3, $z4;
        com.android.internal.view.IInputMethod $r3, $r10, $r12;
        long $l3, $l4, $l5, $l7, $l8, $l9;
        byte $b6;
        java.lang.String $r4;
        java.lang.Long $r5;
        java.lang.Integer $r6;
        android.content.Context $r7;
        android.content.Intent $r8, $r14;
        com.android.internal.os.HandlerCaller $r9;
        android.os.Message $r11;
        android.content.ServiceConnection $r13, r15, r16;

        r0 := @this: com.android.server.InputMethodManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

        r0.<com.android.server.InputMethodManagerService: boolean mShowRequested> = 1;

        $i1 = i0 & 1;

        if $i1 != 0 goto label1;

        r0.<com.android.server.InputMethodManagerService: boolean mShowExplicitlyRequested> = 1;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r0.<com.android.server.InputMethodManagerService: boolean mShowExplicitlyRequested> = 1;

        r0.<com.android.server.InputMethodManagerService: boolean mShowForced> = 1;

     label2:
        $z0 = r0.<com.android.server.InputMethodManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        $r3 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r3 == null goto label6;

        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r9 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $i12 = specialinvoke r0.<com.android.server.InputMethodManagerService: int getImeShowFlags()>();

        $r12 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r11 = virtualinvoke $r9.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOO(int,int,java.lang.Object,java.lang.Object)>(1020, $i12, $r12, r1);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r10, $r11);

        r0.<com.android.server.InputMethodManagerService: boolean mInputShown> = 1;

        $z3 = r0.<com.android.server.InputMethodManagerService: boolean mHaveConnection>;

        if $z3 == 0 goto label5;

        $z4 = r0.<com.android.server.InputMethodManagerService: boolean mVisibleBound>;

        if $z4 != 0 goto label5;

        $r14 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r13 = r0.<com.android.server.InputMethodManagerService: android.content.ServiceConnection mVisibleConnection>;

        specialinvoke r0.<com.android.server.InputMethodManagerService: boolean bindCurrentInputMethodService(android.content.Intent,android.content.ServiceConnection,int)>($r14, $r13, 1);

        r0.<com.android.server.InputMethodManagerService: boolean mVisibleBound> = 1;

     label5:
        return 1;

     label6:
        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mHaveConnection>;

        if $z1 == 0 goto label3;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = r0.<com.android.server.InputMethodManagerService: long mLastBindTime>;

        $l5 = 10000L + $l4;

        $b6 = $l3 cmp $l5;

        if $b6 < 0 goto label3;

        r2 = newarray (java.lang.Object)[3];

        $r4 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        r2[0] = $r4;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l9 = r0.<com.android.server.InputMethodManagerService: long mLastBindTime>;

        $l8 = $l7 - $l9;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        r2[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r2[2] = $r6;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(32000, r2);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Force disconnect/connect to the IME in showCurrentInputLocked()");

        $r7 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r15 = (android.content.ServiceConnection) r0;

        virtualinvoke $r7.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r15);

        $r8 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        r16 = (android.content.ServiceConnection) r0;

        specialinvoke r0.<com.android.server.InputMethodManagerService: boolean bindCurrentInputMethodService(android.content.Intent,android.content.ServiceConnection,int)>($r8, r16, 1073741825);

        return 0;
    }

    public void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient, java.lang.String)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1, $r13;
        java.lang.String r2, $r9;
        java.util.HashMap r3;
        java.lang.Throwable r4, $r17;
        boolean $z0;
        com.android.server.InputMethodManagerService$ClientState $r5, $r14;
        java.lang.StringBuilder $r6, $r7, $r8;
        com.android.internal.os.HandlerCaller $r10;
        com.android.internal.view.IInputMethod $r11;
        android.os.Message $r12;
        android.os.IBinder $r15, $r16;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r3 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r3;

     label02:
        $r5 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r5 == null goto label05;

     label03:
        if r1 == null goto label05;

     label04:
        $r14 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r13 = $r14.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r16 = interfaceinvoke $r13.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r15 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        if $r16 == $r15 goto label06;

     label05:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring showInputMethodAndSubtypeEnablerFromClient of: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r9);

     label06:
        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r12 = virtualinvoke $r10.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(3, r2);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r11, $r12);

        exitmonitor r3;

     label07:
        return;

     label08:
        $r17 := @caughtexception;

        r4 = $r17;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1, $r14;
        java.util.HashMap r2;
        java.lang.Throwable r3, $r15;
        boolean $z0;
        com.android.server.InputMethodManagerService$ClientState $r4, $r12;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        int $i0;
        java.lang.String $r10;
        android.os.Handler $r11;
        android.os.IBinder $r13, $r16;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label02:
        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r4 == null goto label05;

     label03:
        if r1 == null goto label05;

     label04:
        $r12 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r14 = $r12.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r13 = interfaceinvoke $r14.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r16 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        if $r13 == $r16 goto label06;

     label05:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring showInputMethodPickerFromClient of uid ");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r10);

     label06:
        $r11 = r0.<com.android.server.InputMethodManagerService: android.os.Handler mHandler>;

        virtualinvoke $r11.<android.os.Handler: boolean sendEmptyMessage(int)>(2);

        exitmonitor r2;

     label07:
        return;

     label08:
        $r15 := @caughtexception;

        r3 = $r15;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void showMySoftInput(android.os.IBinder, int)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1, $r11;
        int i0, $i2;
        java.util.HashMap r2;
        java.lang.Throwable r3, r4, $r12, $r13;
        long l1;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

        if r1 == null goto label03;

     label02:
        $r11 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r11 == r1 goto label08;

     label03:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring showMySoftInput of uid ");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token: ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r10);

        exitmonitor r2;

     label04:
        return;

     label05:
        $r13 := @caughtexception;

        r3 = $r13;

     label06:
        exitmonitor r2;

     label07:
        throw r3;

     label08:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label09:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean showCurrentInputLocked(int,android.os.ResultReceiver)>(i0, null);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r2;

     label11:
        return;

     label12:
        $r12 := @caughtexception;

        r4 = $r12;

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label14:
        throw r4;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label08 to label09 with label05;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label05;
        catch java.lang.Throwable from label13 to label14 with label05;
    }

    public boolean showSoftInput(com.android.internal.view.IInputMethodClient, int, android.os.ResultReceiver)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1, $r18;
        int i0, i1;
        android.os.ResultReceiver r2;
        boolean z0, $z1, $z2;
        long l2;
        java.lang.Throwable r3, r5, $r19, $r20;
        java.util.HashMap r4;
        android.os.IBinder r6, r7;
        android.view.IWindowManager $r9;
        com.android.server.InputMethodManagerService$ClientState $r10, $r17;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16;
        java.lang.String $r15;
        android.os.RemoteException $r21;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        z0 = 0;

        $z1 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z1 != 0 goto label01;

        return 0;

     label01:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r4 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r4;

     label03:
        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r10 == null goto label07;

     label04:
        if r1 == null goto label07;

     label05:
        $r17 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r18 = $r17.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        r6 = interfaceinvoke $r18.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        r7 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

     label06:
        if r6 == r7 goto label17;

     label07:
        $r9 = r0.<com.android.server.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        $z2 = interfaceinvoke $r9.<android.view.IWindowManager: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>(r1);

        if $z2 != 0 goto label17;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring showSoftInput of uid ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r15);

     label08:
        exitmonitor r4;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return z0;

     label10:
        $r21 := @caughtexception;

     label11:
        exitmonitor r4;

     label12:
        z0 = 0;

        goto label09;

     label13:
        $r20 := @caughtexception;

        r5 = $r20;

     label14:
        exitmonitor r4;

     label15:
        throw r5;

     label16:
        $r19 := @caughtexception;

        r3 = $r19;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r3;

     label17:
        z0 = virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean showCurrentInputLocked(int,android.os.ResultReceiver)>(i0, r2);

        exitmonitor r4;

     label18:
        goto label09;

        catch java.lang.Throwable from label02 to label03 with label16;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch android.os.RemoteException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label13;
    }

    public com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo, int)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1;
        com.android.internal.view.IInputContext r2;
        android.view.inputmethod.EditorInfo r3;
        int i0;
        java.util.HashMap r4;
        java.lang.Throwable r5, r6, $r8, $r9;
        long l1;
        com.android.internal.view.InputBindResult r7;
        boolean $z0;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: com.android.internal.view.IInputContext;

        r3 := @parameter2: android.view.inputmethod.EditorInfo;

        i0 := @parameter3: int;

        $z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        r4 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r4;

     label02:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        r7 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputLocked(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>(r1, r2, r3, i0);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        exitmonitor r4;

     label05:
        return r7;

     label06:
        $r8 := @caughtexception;

        r5 = $r8;

     label07:
        exitmonitor r4;

     label08:
        throw r5;

     label09:
        $r9 := @caughtexception;

        r6 = $r9;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label11:
        throw r6;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
    }

    com.android.internal.view.InputBindResult startInputInnerLocked()
    {
        com.android.server.InputMethodManagerService r0;
        android.view.inputmethod.InputMethodInfo r1;
        java.lang.String $r3, $r4, $r23, $r24, $r28, $r37, $r39, $r41, $r44;
        boolean $z0, $z1;
        java.util.HashMap $r5;
        java.lang.Object $r6;
        android.content.Intent $r8, $r12, $r13, $r17, $r22, r48, r49;
        android.content.ComponentName $r9;
        android.content.Context $r15;
        android.app.PendingIntent $r16;
        java.lang.StringBuilder $r20, $r21, $r25, $r30, $r34, $r40, r46, r51, r53;
        long $l0;
        android.os.IBinder $r29, $r32, r55;
        int $i3, $i4;
        android.view.IWindowManager $r33;
        android.os.RemoteException $r42;
        com.android.internal.view.InputBindResult $r43, r45, r52;
        java.lang.IllegalArgumentException r47;
        android.os.Binder r50;
        android.content.ServiceConnection r54;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r3 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r3 != null goto label1;

        $r43 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult mNoBinding>;

        return $r43;

     label1:
        $z0 = r0.<com.android.server.InputMethodManagerService: boolean mSystemReady>;

        if $z0 != 0 goto label2;

        r45 = new com.android.internal.view.InputBindResult;

        $r44 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $i4 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        specialinvoke r45.<com.android.internal.view.InputBindResult: void <init>(com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int)>(null, null, $r44, $i4);

        return r45;

     label2:
        $r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r4 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r1 = (android.view.inputmethod.InputMethodInfo) $r6;

        if r1 != null goto label3;

        r47 = new java.lang.IllegalArgumentException;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown id: ");

        $r41 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r39);

        throw r47;

     label3:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void unbindCurrentMethodLocked(boolean,boolean)>(0, 1);

        r48 = new android.content.Intent;

        specialinvoke r48.<android.content.Intent: void <init>(java.lang.String)>("android.view.InputMethod");

        r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent> = r48;

        $r8 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r9 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>();

        virtualinvoke $r8.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r9);

        $r12 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        virtualinvoke $r12.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.client_label", 17040559);

        $r13 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r15 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r49 = new android.content.Intent;

        specialinvoke r49.<android.content.Intent: void <init>(java.lang.String)>("android.settings.INPUT_METHOD_SETTINGS");

        $r16 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r15, 0, r49, 0);

        virtualinvoke $r13.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.client_intent", $r16);

        $r17 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        r54 = (android.content.ServiceConnection) r0;

        $z1 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean bindCurrentInputMethodService(android.content.Intent,android.content.ServiceConnection,int)>($r17, r54, 1610612737);

        if $z1 == 0 goto label6;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.InputMethodManagerService: long mLastBindTime> = $l0;

        r0.<com.android.server.InputMethodManagerService: boolean mHaveConnection> = 1;

        $r23 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId> = $r23;

        r50 = new android.os.Binder;

        specialinvoke r50.<android.os.Binder: void <init>()>();

        r55 = (android.os.IBinder) r50;

        r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken> = r55;

     label4:
        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding window token: ");

        $r29 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("InputMethodManagerService", $r28);

        $r33 = r0.<com.android.server.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        $r32 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        interfaceinvoke $r33.<android.view.IWindowManager: void addWindowToken(android.os.IBinder,int)>($r32, 2011);

     label5:
        r52 = new com.android.internal.view.InputBindResult;

        $r37 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId>;

        $i3 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        specialinvoke r52.<com.android.internal.view.InputBindResult: void <init>(com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int)>(null, null, $r37, $i3);

        return r52;

     label6:
        r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent> = null;

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure connecting to input method service: ");

        $r22 = r0.<com.android.server.InputMethodManagerService: android.content.Intent mCurIntent>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r24);

        return null;

     label7:
        $r42 := @caughtexception;

        goto label5;

        catch android.os.RemoteException from label4 to label5 with label7;
    }

    com.android.internal.view.InputBindResult startInputLocked(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo, int)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1, $r10, $r16;
        com.android.internal.view.IInputContext r2;
        android.view.inputmethod.EditorInfo r3;
        int i0, $i1, $i2;
        com.android.server.InputMethodManagerService$ClientState r4;
        java.lang.String $r6, $r21, $r26;
        java.util.HashMap $r7;
        android.os.IBinder $r8, $r28;
        java.lang.Object $r9;
        android.view.IWindowManager $r11;
        boolean $z0;
        com.android.internal.view.InputBindResult $r12, $r27;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r24, $r25, $r29;
        java.lang.IllegalArgumentException $r23;
        android.os.RemoteException $r30;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: com.android.internal.view.IInputContext;

        r3 := @parameter2: android.view.inputmethod.EditorInfo;

        i0 := @parameter3: int;

        $r6 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r6 != null goto label1;

        $r27 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult mNoBinding>;

        return $r27;

     label1:
        $r7 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mClients>;

        $r8 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r4 = (com.android.server.InputMethodManagerService$ClientState) $r9;

        if r4 != null goto label2;

        $r23 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown client ");

        $r28 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r23;

     label2:
        $r11 = r0.<com.android.server.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        $r10 = r4.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $z0 = interfaceinvoke $r11.<android.view.IWindowManager: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>($r10);

        if $z0 != 0 goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting input on non-focused client ");

        $r16 = r4.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid=");

        $i1 = r4.<com.android.server.InputMethodManagerService$ClientState: int uid>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        $i2 = r4.<com.android.server.InputMethodManagerService$ClientState: int pid>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r21);

     label3:
        return null;

     label4:
        $r30 := @caughtexception;

     label5:
        $r12 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>(r4, r2, r3, i0);

        return $r12;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState, com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo, int)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.InputMethodManagerService$ClientState r1, $r8;
        com.android.internal.view.IInputContext r2;
        android.view.inputmethod.EditorInfo r3;
        int i0, i1, $i2, $i3, $i4, $i13, $i14, $i15, i16, i17, i18;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] r4;
        com.android.internal.view.IInputMethodClient r5;
        com.android.internal.os.HandlerCaller r6;
        java.lang.String $r7, $r10, $r11, $r12, $r15, $r18, $r22;
        com.android.internal.view.InputBindResult $r9, $r19, $r20, $r21, $r24;
        com.android.server.InputMethodManagerService$SessionState $r13;
        com.android.internal.view.IInputMethod $r14;
        long $l5, $l6, $l8, $l9, $l10, $l11;
        byte $b7;
        java.lang.Integer $r16;
        java.lang.Long $r17;
        android.os.Message $r23;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.server.InputMethodManagerService$ClientState;

        r2 := @parameter1: com.android.internal.view.IInputContext;

        r3 := @parameter2: android.view.inputmethod.EditorInfo;

        i0 := @parameter3: int;

        z0 = 1;

        $r7 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        if $r7 != null goto label01;

        $r24 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult mNoBinding>;

        return $r24;

     label01:
        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r8 == r1 goto label03;

        $z4 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean isKeyguardLocked()>();

        r0.<com.android.server.InputMethodManagerService: boolean mCurClientInKeyguard> = $z4;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void unbindCurrentClientLocked()>();

        $z5 = r0.<com.android.server.InputMethodManagerService: boolean mScreenOn>;

        if $z5 == 0 goto label03;

        r5 = r1.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        r6 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $z3 = r0.<com.android.server.InputMethodManagerService: boolean mScreenOn>;

        if $z3 == 0 goto label06;

        i16 = (int) 1;

        i1 = i16;

     label02:
        $r23 = virtualinvoke r6.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(3020, i1, r1);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>(r5, $r23);

     label03:
        $i2 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        $i3 = 1 + $i2;

        r0.<com.android.server.InputMethodManagerService: int mCurSeq> = $i3;

        $i4 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        if $i4 > 0 goto label04;

        i17 = (int) 1;

        r0.<com.android.server.InputMethodManagerService: int mCurSeq> = i17;

     label04:
        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient> = r1;

        r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputContext mCurInputContext> = r2;

        r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.EditorInfo mCurAttribute> = r3;

        $r10 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId>;

        if $r10 == null goto label11;

        $r11 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId>;

        $r12 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label11;

        $r13 = r1.<com.android.server.InputMethodManagerService$ClientState: com.android.server.InputMethodManagerService$SessionState curSession>;

        if $r13 == null goto label08;

        $i14 = i0 & 256;

        if $i14 == 0 goto label07;

     label05:
        $r21 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult attachNewInputLocked(boolean)>(z0);

        return $r21;

     label06:
        i1 = 0;

        goto label02;

     label07:
        z0 = 0;

        goto label05;

     label08:
        $z2 = r0.<com.android.server.InputMethodManagerService: boolean mHaveConnection>;

        if $z2 == 0 goto label11;

        $r14 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r14 == null goto label09;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void requestClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)>(r1);

        $r19 = new com.android.internal.view.InputBindResult;

        $r22 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId>;

        $i15 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        specialinvoke $r19.<com.android.internal.view.InputBindResult: void <init>(com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int)>(null, null, $r22, $i15);

        return $r19;

     label09:
        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = r0.<com.android.server.InputMethodManagerService: long mLastBindTime>;

        $l8 = 10000L + $l5;

        $b7 = $l6 cmp $l8;

        if $b7 >= 0 goto label10;

        $r20 = new com.android.internal.view.InputBindResult;

        $r18 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId>;

        $i13 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        specialinvoke $r20.<com.android.internal.view.InputBindResult: void <init>(com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int)>(null, null, $r18, $i13);

        return $r20;

     label10:
        r4 = newarray (java.lang.Object)[3];

        $r15 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        r4[0] = $r15;

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l11 = r0.<com.android.server.InputMethodManagerService: long mLastBindTime>;

        $l10 = $l9 - $l11;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        i18 = (int) 1;

        r4[i18] = $r17;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r4[2] = $r16;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(32000, r4);

     label11:
        $r9 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputInnerLocked()>();

        return $r9;
    }

    public boolean switchToLastInputMethod(android.os.IBinder)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1;
        java.util.HashMap r2, $r33;
        java.lang.Throwable r3, $r31;
        android.util.Pair r4;
        android.view.inputmethod.InputMethodInfo r5, r9;
        int i0, i1, i2, i3, i4, $i5, $i6;
        java.lang.String r6, r8, $r19, $r24, $r25, $r28;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List r7;
        android.view.inputmethod.InputMethodSubtype r10, $r12, $r14, $r15, $r26, $r30;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r11, $r13;
        java.lang.Object $r16, $r23, $r29, $r32, $r34;
        android.content.res.Resources $r17, $r21;
        java.util.ArrayList $r18;
        java.util.Locale $r20;
        android.content.res.Configuration $r22;
        java.lang.Integer $r27;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        $z1 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z1 != 0 goto label01;

        return 0;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label02:
        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r4 = virtualinvoke $r11.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>();

     label03:
        if r4 == null goto label22;

     label04:
        $r33 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r34 = r4.<android.util.Pair: java.lang.Object first>;

        $r32 = virtualinvoke $r33.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r34);

        r5 = (android.view.inputmethod.InputMethodInfo) $r32;

     label05:
        i0 = -1;

        r6 = null;

        if r4 == null goto label09;

        r6 = null;

        if r5 == null goto label09;

     label06:
        $r25 = virtualinvoke r5.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r24 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        z0 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        $r23 = r4.<android.util.Pair: java.lang.Object second>;

        $r28 = (java.lang.String) $r23;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r28);

        i1 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();

        $r26 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if $r26 != null goto label23;

     label07:
        i2 = -1;

        goto label29;

     label08:
        $r29 = r4.<android.util.Pair: java.lang.Object first>;

        r6 = (java.lang.String) $r29;

        i0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r5, i1);

     label09:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z2 == 0 goto label17;

        $r12 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        $z4 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean canAddToLastInputMethod(android.view.inputmethod.InputMethodSubtype)>($r12);

        if $z4 != 0 goto label17;

        $r13 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r7 = virtualinvoke $r13.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

     label10:
        if r7 == null goto label17;

     label11:
        i3 = interfaceinvoke r7.<java.util.List: int size()>();

        $r15 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        if $r15 != null goto label25;

        $r21 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r22 = virtualinvoke $r21.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r20 = $r22.<android.content.res.Configuration: java.util.Locale locale>;

        r8 = virtualinvoke $r20.<java.util.Locale: java.lang.String toString()>();

     label12:
        goto label30;

     label13:
        if i4 >= i3 goto label17;

     label14:
        $r16 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i4);

        r9 = (android.view.inputmethod.InputMethodInfo) $r16;

        $i5 = virtualinvoke r9.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if $i5 <= 0 goto label31;

        $z5 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isSystemIme(android.view.inputmethod.InputMethodInfo)>(r9);

        if $z5 == 0 goto label31;

        $r17 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r18 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)>(r9);

        r10 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>($r17, $r18, "keyboard", r8, 1);

     label15:
        if r10 == null goto label31;

     label16:
        r6 = virtualinvoke r9.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $i6 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        i0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r9, $i6);

        $r19 = virtualinvoke r10.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z6 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z6 == 0 goto label31;

     label17:
        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z3 != 0 goto label27;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void setInputMethodWithSubtypeId(android.os.IBinder,java.lang.String,int)>(r1, r6, i0);

        exitmonitor r2;

     label18:
        return 1;

     label19:
        $r31 := @caughtexception;

        r3 = $r31;

     label20:
        exitmonitor r2;

     label21:
        throw r3;

     label22:
        r5 = null;

        goto label05;

     label23:
        $r30 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        i2 = virtualinvoke $r30.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

     label24:
        goto label29;

     label25:
        $r14 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        r8 = virtualinvoke $r14.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

     label26:
        goto label30;

     label27:
        exitmonitor r2;

     label28:
        return 0;

     label29:
        if z0 == 0 goto label08;

        r6 = null;

        if i1 == i2 goto label09;

        goto label08;

     label30:
        i4 = 0;

        goto label13;

     label31:
        i4 = i4 + 1;

        goto label13;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label08 to label09 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.Throwable from label23 to label24 with label19;
        catch java.lang.Throwable from label25 to label26 with label19;
        catch java.lang.Throwable from label27 to label28 with label19;
    }

    public boolean switchToNextInputMethod(android.os.IBinder, boolean)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1;
        boolean z0, $z1;
        java.util.HashMap r2, $r6;
        java.lang.Throwable r3, $r13;
        com.android.server.InputMethodManagerService$ImeSubtypeListItem r4;
        java.lang.String $r5, $r12;
        com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager $r7;
        java.lang.Object $r8;
        android.view.inputmethod.InputMethodSubtype $r9;
        android.view.inputmethod.InputMethodInfo $r10, $r11;
        int $i0;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        if $z1 != 0 goto label01;

        return 0;

     label01:
        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label02:
        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager mImListManager>;

        $r6 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $r5 = r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId>;

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r10 = (android.view.inputmethod.InputMethodInfo) $r8;

        $r9 = r0.<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype mCurrentSubtype>;

        r4 = virtualinvoke $r7.<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: com.android.server.InputMethodManagerService$ImeSubtypeListItem getNextInputMethod(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>(z0, $r10, $r9);

     label03:
        if r4 != null goto label06;

     label04:
        exitmonitor r2;

     label05:
        return 0;

     label06:
        $r11 = r4.<com.android.server.InputMethodManagerService$ImeSubtypeListItem: android.view.inputmethod.InputMethodInfo mImi>;

        $r12 = virtualinvoke $r11.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $i0 = r4.<com.android.server.InputMethodManagerService$ImeSubtypeListItem: int mSubtypeId>;

        specialinvoke r0.<com.android.server.InputMethodManagerService: void setInputMethodWithSubtypeId(android.os.IBinder,java.lang.String,int)>(r1, $r12, $i0);

        exitmonitor r2;

     label07:
        return 1;

     label08:
        $r13 := @caughtexception;

        r3 = $r13;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void systemRunning(com.android.server.StatusBarManagerService)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.StatusBarManagerService r1;
        java.util.HashMap r2, r5;
        java.lang.Throwable r3, $r25;
        java.util.ArrayList r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.RuntimeException r6, $r23;
        android.content.Context $r7, $r10, $r18;
        java.lang.Object $r8, $r11;
        android.app.KeyguardManager $r9;
        android.content.res.Resources $r12, $r15;
        android.app.NotificationManager $r13;
        android.content.res.Configuration $r14;
        java.util.Locale $r17;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r19;
        android.content.pm.PackageManager $r20;
        com.android.server.InputMethodManagerService$HardKeyboardListener $r21;
        java.util.List $r22;
        com.android.server.wm.WindowManagerService $r24;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.server.StatusBarManagerService;

        r2 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r2;

     label01:
        $z1 = r0.<com.android.server.InputMethodManagerService: boolean mSystemReady>;

        if $z1 != 0 goto label07;

        r0.<com.android.server.InputMethodManagerService: boolean mSystemReady> = 1;

        $r7 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("keyguard");

        $r9 = (android.app.KeyguardManager) $r8;

        r0.<com.android.server.InputMethodManagerService: android.app.KeyguardManager mKeyguardManager> = $r9;

        $r10 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        $r13 = (android.app.NotificationManager) $r11;

        r0.<com.android.server.InputMethodManagerService: android.app.NotificationManager mNotificationManager> = $r13;

        r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar> = r1;

        virtualinvoke r1.<com.android.server.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>("ime", 0);

        specialinvoke r0.<com.android.server.InputMethodManagerService: void updateImeWindowStatusLocked()>();

        $r12 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $z3 = virtualinvoke $r12.<android.content.res.Resources: boolean getBoolean(int)>(17891336);

        r0.<com.android.server.InputMethodManagerService: boolean mShowOngoingImeSwitcherForPhones> = $z3;

        $z2 = r0.<com.android.server.InputMethodManagerService: boolean mShowOngoingImeSwitcherForPhones>;

        if $z2 == 0 goto label02;

        $r24 = r0.<com.android.server.InputMethodManagerService: com.android.server.wm.WindowManagerService mWindowManagerService>;

        $r21 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$HardKeyboardListener mHardKeyboardListener>;

        virtualinvoke $r24.<com.android.server.wm.WindowManagerService: void setOnHardKeyboardStatusChangeListener(com.android.server.wm.WindowManagerService$OnHardKeyboardStatusChangeListener)>($r21);

     label02:
        r4 = r0.<com.android.server.InputMethodManagerService: java.util.ArrayList mMethodList>;

        r5 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        $z5 = r0.<com.android.server.InputMethodManagerService: boolean mImeSelectedOnBoot>;

        if $z5 != 0 goto label15;

     label03:
        z0 = 1;

     label04:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: void buildInputMethodListLocked(java.util.ArrayList,java.util.HashMap,boolean)>(r4, r5, z0);

        $z4 = r0.<com.android.server.InputMethodManagerService: boolean mImeSelectedOnBoot>;

        if $z4 != 0 goto label05;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Reset the default IME as \"Resource\" is ready here.");

        specialinvoke r0.<com.android.server.InputMethodManagerService: void resetStateIfCurrentLocaleChangedLocked()>();

        $r18 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r20 = virtualinvoke $r18.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r19 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $r22 = virtualinvoke $r19.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        staticinvoke <com.android.internal.inputmethod.InputMethodUtils: void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.PackageManager,java.util.List)>($r20, $r22);

     label05:
        $r15 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r14 = virtualinvoke $r15.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r17 = $r14.<android.content.res.Configuration: java.util.Locale locale>;

        r0.<com.android.server.InputMethodManagerService: java.util.Locale mLastSystemLocale> = $r17;

     label06:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputInnerLocked()>();

     label07:
        exitmonitor r2;

     label08:
        return;

     label09:
        $r23 := @caughtexception;

        r6 = $r23;

     label10:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Unexpected exception", r6);

     label11:
        goto label07;

     label12:
        $r25 := @caughtexception;

        r3 = $r25;

     label13:
        exitmonitor r2;

     label14:
        throw r3;

     label15:
        z0 = 0;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.RuntimeException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void unbindCurrentClientLocked()
    {
        com.android.server.InputMethodManagerService r0;
        com.android.server.InputMethodManagerService$ClientState $r1, $r2, $r3, $r7, $r8, $r13;
        boolean $z0;
        com.android.internal.os.HandlerCaller $r4, $r10, $r17;
        com.android.internal.view.IInputMethodClient $r5, $r9, $r11;
        android.os.Message $r6, $r12, $r18;
        int $i0;
        com.android.internal.view.IInputMethod $r14, $r15, $r16;

        r0 := @this: com.android.server.InputMethodManagerService;

        $r1 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r1 == null goto label2;

        $z0 = r0.<com.android.server.InputMethodManagerService: boolean mBoundToMethod>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.InputMethodManagerService: boolean mBoundToMethod> = 0;

        $r15 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        if $r15 == null goto label1;

        $r16 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r17 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r14 = r0.<com.android.server.InputMethodManagerService: com.android.internal.view.IInputMethod mCurMethod>;

        $r18 = virtualinvoke $r17.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(1000, $r14);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r16, $r18);

     label1:
        $r2 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r5 = $r2.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $r3 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r6 = virtualinvoke $r4.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(3020, 0, $r3);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r5, $r6);

        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r11 = $r7.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $i0 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r9 = $r8.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r12 = virtualinvoke $r10.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(3000, $i0, $r9);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r11, $r12);

        $r13 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r13.<com.android.server.InputMethodManagerService$ClientState: boolean sessionRequested> = 0;

        r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient> = null;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void hideInputMethodMenuLocked()>();

     label2:
        return;
    }

    void unbindCurrentMethodLocked(boolean, boolean)
    {
        com.android.server.InputMethodManagerService r0;
        boolean z0, z1, $z2, $z3;
        android.os.IBinder $r2, $r10;
        com.android.server.InputMethodManagerService$ClientState $r3, $r4, $r5;
        com.android.internal.view.IInputMethodClient $r6, $r8;
        int $i0, $i1, $i2;
        com.android.internal.os.HandlerCaller $r7;
        android.os.Message $r9;
        com.android.server.wm.WindowManagerService $r11;
        android.view.IWindowManager $r12;
        android.content.ServiceConnection $r13, r17;
        android.content.Context $r14, $r16;
        android.os.RemoteException $r15;

        r0 := @this: com.android.server.InputMethodManagerService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<com.android.server.InputMethodManagerService: boolean mVisibleBound>;

        if $z2 == 0 goto label01;

        $r16 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r13 = r0.<com.android.server.InputMethodManagerService: android.content.ServiceConnection mVisibleConnection>;

        virtualinvoke $r16.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r13);

        r0.<com.android.server.InputMethodManagerService: boolean mVisibleBound> = 0;

     label01:
        $z3 = r0.<com.android.server.InputMethodManagerService: boolean mHaveConnection>;

        if $z3 == 0 goto label02;

        $r14 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r17 = (android.content.ServiceConnection) r0;

        virtualinvoke $r14.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r17);

        r0.<com.android.server.InputMethodManagerService: boolean mHaveConnection> = 0;

     label02:
        $r2 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r2 == null goto label08;

     label03:
        $i1 = r0.<com.android.server.InputMethodManagerService: int mImeWindowVis>;

        $i2 = 1 & $i1;

        if $i2 == 0 goto label06;

     label04:
        if z1 == 0 goto label06;

     label05:
        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.server.wm.WindowManagerService mWindowManagerService>;

        virtualinvoke $r11.<com.android.server.wm.WindowManagerService: void saveLastInputMethodWindowForTransition()>();

     label06:
        $r12 = r0.<com.android.server.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        $r10 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        interfaceinvoke $r12.<android.view.IWindowManager: void removeWindowToken(android.os.IBinder)>($r10);

     label07:
        r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken> = null;

     label08:
        r0.<com.android.server.InputMethodManagerService: java.lang.String mCurId> = null;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void clearCurMethodLocked()>();

        if z0 == 0 goto label09;

        $r3 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        if $r3 == null goto label09;

        $r4 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r8 = $r4.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.os.HandlerCaller mCaller>;

        $i0 = r0.<com.android.server.InputMethodManagerService: int mCurSeq>;

        $r5 = r0.<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$ClientState mCurClient>;

        $r6 = $r5.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r9 = virtualinvoke $r7.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(3000, $i0, $r6);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>($r8, $r9);

     label09:
        return;

     label10:
        $r15 := @caughtexception;

        goto label07;

        catch android.os.RemoteException from label03 to label04 with label10;
        catch android.os.RemoteException from label05 to label06 with label10;
        catch android.os.RemoteException from label06 to label07 with label10;
    }

    void updateFromSettingsLocked(boolean)
    {
        com.android.server.InputMethodManagerService r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r1, $r13, $r17, $r19, $r26;
        java.lang.IllegalArgumentException r2, $r23;
        java.util.List r3;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.view.inputmethod.InputMethodInfo r4;
        android.content.pm.ApplicationInfo r6;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r7, $r8, $r10, $r11, $r15, $r18;
        java.util.HashMap $r9;
        java.lang.Object $r12;
        android.content.pm.IPackageManager $r14, $r16;
        android.os.RemoteException $r20;
        android.content.Context $r21;
        java.lang.StringBuilder $r22, $r24, $r25;

        r0 := @this: com.android.server.InputMethodManagerService;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label06;

        $r11 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r3 = virtualinvoke $r11.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>();

        i0 = 0;

     label01:
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if i0 >= $i2 goto label06;

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (android.view.inputmethod.InputMethodInfo) $r12;

     label02:
        $r14 = r0.<com.android.server.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r13 = virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $r15 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i3 = virtualinvoke $r15.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        r6 = interfaceinvoke $r14.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>($r13, 32768, $i3);

     label03:
        if r6 == null goto label05;

     label04:
        $i4 = r6.<android.content.pm.ApplicationInfo: int enabledSetting>;

        if $i4 != 4 goto label05;

        $r16 = r0.<com.android.server.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r17 = virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>();

        $r18 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i5 = virtualinvoke $r18.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r21 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r19 = virtualinvoke $r21.<android.content.Context: java.lang.String getBasePackageName()>();

        interfaceinvoke $r16.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>($r17, 0, 1, $i5, $r19);

     label05:
        i0 = i0 + 1;

        goto label01;

     label06:
        $r7 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r1 = virtualinvoke $r7.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label07;

        $z3 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean chooseNewDefaultIMELocked()>();

        if $z3 == 0 goto label07;

        $r10 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r1 = virtualinvoke $r10.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSelectedInputMethod()>();

     label07:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 != 0 goto label11;

     label08:
        $r8 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i1 = virtualinvoke $r8.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeId(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>(r1, $i1);

     label09:
        $r9 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mShortcutInputMethodsAndSubtypes>;

        virtualinvoke $r9.<java.util.HashMap: void clear()>();

        return;

     label10:
        $r23 := @caughtexception;

        r2 = $r23;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown input method from prefs: ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", $r26, r2);

        r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId> = null;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void unbindCurrentMethodLocked(boolean,boolean)>(1, 0);

        goto label09;

     label11:
        r0.<com.android.server.InputMethodManagerService: java.lang.String mCurMethodId> = null;

        virtualinvoke r0.<com.android.server.InputMethodManagerService: void unbindCurrentMethodLocked(boolean,boolean)>(1, 0);

        return;

     label12:
        $r20 := @caughtexception;

        goto label05;

        catch android.os.RemoteException from label02 to label03 with label12;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch java.lang.IllegalArgumentException from label08 to label09 with label10;
    }

    public void updateStatusIcon(android.os.IBinder, java.lang.String, int)
    {
        com.android.server.InputMethodManagerService r0;
        android.os.IBinder r1, $r17;
        java.lang.String r2, r8, $r16;
        int i0, i1, $i4;
        long l2;
        java.lang.Throwable r3, r9, $r25, $r26;
        java.util.HashMap r4;
        java.lang.CharSequence r6, r10;
        com.android.server.StatusBarManagerService r7, $r23, $r24, $r27, $r28;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15;
        android.content.Context $r18;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r19;
        android.content.pm.PackageManager $r20;
        android.content.pm.ApplicationInfo $r21;
        android.content.pm.IPackageManager $r22;
        android.os.RemoteException $r29;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if r1 == null goto label02;

     label01:
        $r17 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurToken>;

        if $r17 == r1 goto label04;

     label02:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring setInputMethod of uid ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r16);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label04:
        r4 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r4;

     label05:
        if i0 != 0 goto label13;

     label06:
        $r27 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        if $r27 == null goto label07;

        $r28 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        virtualinvoke $r28.<com.android.server.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>("ime", 0);

     label07:
        exitmonitor r4;

     label08:
        goto label03;

     label09:
        $r26 := @caughtexception;

        r9 = $r26;

     label10:
        exitmonitor r4;

     label11:
        throw r9;

     label12:
        $r25 := @caughtexception;

        r3 = $r25;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r3;

     label13:
        if r2 == null goto label07;

     label14:
        $r18 = r0.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        $r20 = virtualinvoke $r18.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r22 = r0.<com.android.server.InputMethodManagerService: android.content.pm.IPackageManager mIPackageManager>;

        $r19 = r0.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        $i4 = virtualinvoke $r19.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getCurrentUserId()>();

        $r21 = interfaceinvoke $r22.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r2, 0, $i4);

        r10 = virtualinvoke $r20.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r21);

     label15:
        r6 = r10;

     label16:
        $r24 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        if $r24 == null goto label07;

        r7 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

     label17:
        if r6 == null goto label21;

     label18:
        r8 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

     label19:
        virtualinvoke r7.<com.android.server.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>("ime", r2, i0, 0, r8);

        $r23 = r0.<com.android.server.InputMethodManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        virtualinvoke $r23.<com.android.server.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>("ime", 1);

     label20:
        goto label07;

     label21:
        r8 = null;

        goto label19;

     label22:
        $r29 := @caughtexception;

        r6 = null;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch android.os.RemoteException from label14 to label15 with label22;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label18 to label19 with label09;
        catch java.lang.Throwable from label19 to label20 with label09;
    }

    public com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient, android.os.IBinder, int, int, int, android.view.inputmethod.EditorInfo, com.android.internal.view.IInputContext)
    {
        com.android.server.InputMethodManagerService r0;
        com.android.internal.view.IInputMethodClient r1, $r13, $r34;
        android.os.IBinder r2, $r15, $r16, $r38;
        int i0, i1, i2, i4, i5, i6, i7, $i8, $i9, $i13, $i14;
        android.view.inputmethod.EditorInfo r3;
        com.android.internal.view.IInputContext r4;
        boolean z0, z1, z2, z3, z4, $z5, $z12;
        long l3;
        java.lang.Throwable r5, r7, $r42, $r44;
        java.util.HashMap r6, $r14;
        com.android.server.InputMethodManagerService$ClientState r8;
        com.android.internal.view.InputBindResult r10, r11;
        java.lang.Object $r12;
        android.view.IWindowManager $r17;
        android.content.res.Configuration $r18;
        android.content.res.Resources $r19;
        java.lang.StringBuilder $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r39, $r41, $r45;
        java.lang.String $r23, $r40, $r46;
        java.lang.IllegalArgumentException $r37;
        android.os.RemoteException $r43;

        r0 := @this: com.android.server.InputMethodManagerService;

        r1 := @parameter0: com.android.internal.view.IInputMethodClient;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.view.inputmethod.EditorInfo;

        r4 := @parameter6: com.android.internal.view.IInputContext;

        z0 = specialinvoke r0.<com.android.server.InputMethodManagerService: boolean calledFromValidUser()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r6 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r6;

     label02:
        $r14 = r0.<com.android.server.InputMethodManagerService: java.util.HashMap mClients>;

        $r15 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r12 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r15);

        r8 = (com.android.server.InputMethodManagerService$ClientState) $r12;

     label03:
        if r8 != null goto label09;

     label04:
        $r37 = new java.lang.IllegalArgumentException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown client ");

        $r38 = interfaceinvoke r1.<com.android.internal.view.IInputMethodClient: android.os.IBinder asBinder()>();

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r46);

        throw $r37;

     label05:
        $r44 := @caughtexception;

        r7 = $r44;

     label06:
        exitmonitor r6;

     label07:
        throw r7;

     label08:
        $r42 := @caughtexception;

        r5 = $r42;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r5;

     label09:
        $r17 = r0.<com.android.server.InputMethodManagerService: android.view.IWindowManager mIWindowManager>;

        $r13 = r8.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $z5 = interfaceinvoke $r17.<android.view.IWindowManager: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>($r13);

        if $z5 != 0 goto label14;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Focus gain on non-focused client ");

        $r34 = r8.<com.android.server.InputMethodManagerService$ClientState: com.android.internal.view.IInputMethodClient client>;

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid=");

        $i14 = r8.<com.android.server.InputMethodManagerService$ClientState: int uid>;

        $r31 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        $i13 = r8.<com.android.server.InputMethodManagerService$ClientState: int pid>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r41 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r40);

     label10:
        r11 = null;

     label11:
        exitmonitor r6;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return r11;

     label13:
        $r43 := @caughtexception;

     label14:
        if z0 != 0 goto label17;

     label15:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "A background user is requesting window. Hiding IME.");

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "If you want to interect with IME, you need android.permission.INTERACT_ACROSS_USERS_FULL");

        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>(0, null);

        exitmonitor r6;

     label16:
        r11 = null;

        goto label12;

     label17:
        $r16 = r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurFocusedWindow>;

        if $r16 != r2 goto label23;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Window already focused, ignoring focus gain of: ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute=");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", token = ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r23);

     label18:
        if r3 == null goto label21;

     label19:
        r11 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>(r8, r4, r3, i0);

        exitmonitor r6;

     label20:
        goto label12;

     label21:
        exitmonitor r6;

     label22:
        r11 = null;

        goto label12;

     label23:
        r0.<com.android.server.InputMethodManagerService: android.os.IBinder mCurFocusedWindow> = r2;

     label24:
        $i8 = i1 & 240;

        if $i8 == 16 goto label58;

     label25:
        $r19 = r0.<com.android.server.InputMethodManagerService: android.content.res.Resources mRes>;

        $r18 = virtualinvoke $r19.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $z12 = virtualinvoke $r18.<android.content.res.Configuration: boolean isLayoutSizeAtLeast(int)>(3);

        if $z12 == 0 goto label31;

     label26:
        goto label58;

     label27:
        if z3 != 0 goto label29;

        if r3 == null goto label29;

     label28:
        r10 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>(r8, r4, r3, i0);

     label29:
        exitmonitor r6;

     label30:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return r10;

     label31:
        z2 = 0;

        goto label59;

     label32:
        z1 = 0;

        goto label60;

     label33:
        if z1 == 0 goto label34;

        if z2 != 0 goto label38;

     label34:
        z4 = staticinvoke <android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)>(i2);

     label35:
        z3 = 0;

        r10 = null;

        if z4 == 0 goto label27;

     label36:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>(2, null);

     label37:
        z3 = 0;

        r10 = null;

        goto label27;

     label38:
        z3 = 0;

        r10 = null;

        if z1 == 0 goto label27;

        z3 = 0;

        r10 = null;

        if z2 == 0 goto label27;

        i7 = i1 & 256;

        z3 = 0;

        r10 = null;

        if i7 == 0 goto label27;

        z3 = 0;

        r10 = null;

        if r3 == null goto label41;

     label39:
        r10 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>(r8, r4, r3, i0);

     label40:
        z3 = 1;

     label41:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean showCurrentInputLocked(int,android.os.ResultReceiver)>(1, null);

     label42:
        goto label27;

     label43:
        i6 = i1 & 256;

        z3 = 0;

        r10 = null;

        if i6 == 0 goto label27;

     label44:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>(0, null);

     label45:
        z3 = 0;

        r10 = null;

        goto label27;

     label46:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>(0, null);

     label47:
        z3 = 0;

        r10 = null;

        goto label27;

     label48:
        i5 = i1 & 256;

        z3 = 0;

        r10 = null;

        if i5 == 0 goto label27;

        z3 = 0;

        r10 = null;

        if r3 == null goto label51;

     label49:
        r10 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>(r8, r4, r3, i0);

     label50:
        z3 = 1;

     label51:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean showCurrentInputLocked(int,android.os.ResultReceiver)>(1, null);

     label52:
        goto label27;

     label53:
        z3 = 0;

        r10 = null;

        if r3 == null goto label56;

     label54:
        r10 = virtualinvoke r0.<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>(r8, r4, r3, i0);

     label55:
        z3 = 1;

     label56:
        virtualinvoke r0.<com.android.server.InputMethodManagerService: boolean showCurrentInputLocked(int,android.os.ResultReceiver)>(1, null);

     label57:
        goto label27;

     label58:
        z2 = 1;

     label59:
        $i9 = i0 & 2;

        if $i9 == 0 goto label32;

        z1 = 1;

     label60:
        i4 = i1 & 15;

        z3 = 0;

        r10 = null;

        tableswitch(i4)
        {
            case 0: goto label33;
            case 1: goto label27;
            case 2: goto label43;
            case 3: goto label46;
            case 4: goto label48;
            case 5: goto label53;
            default: goto label27;
        };

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch android.os.RemoteException from label09 to label10 with label13;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label11 to label12 with label05;
        catch java.lang.Throwable from label15 to label16 with label05;
        catch java.lang.Throwable from label17 to label18 with label05;
        catch java.lang.Throwable from label19 to label20 with label05;
        catch java.lang.Throwable from label21 to label22 with label05;
        catch java.lang.Throwable from label23 to label24 with label05;
        catch java.lang.Throwable from label25 to label26 with label05;
        catch java.lang.Throwable from label28 to label29 with label05;
        catch java.lang.Throwable from label29 to label30 with label05;
        catch java.lang.Throwable from label34 to label35 with label05;
        catch java.lang.Throwable from label36 to label37 with label05;
        catch java.lang.Throwable from label39 to label40 with label05;
        catch java.lang.Throwable from label41 to label42 with label05;
        catch java.lang.Throwable from label44 to label45 with label05;
        catch java.lang.Throwable from label46 to label47 with label05;
        catch java.lang.Throwable from label49 to label50 with label05;
        catch java.lang.Throwable from label51 to label52 with label05;
        catch java.lang.Throwable from label54 to label55 with label05;
        catch java.lang.Throwable from label56 to label57 with label05;
    }

    public static void <clinit>()
    {
        <com.android.server.InputMethodManagerService: long TIME_TO_RECONNECT> = 10000L;

        <com.android.server.InputMethodManagerService: java.lang.String TAG_TRY_SUPPRESSING_IME_SWITCHER> = "TrySuppressingImeSwitcher";

        <com.android.server.InputMethodManagerService: java.lang.String TAG> = "InputMethodManagerService";

        <com.android.server.InputMethodManagerService: int SECURE_SUGGESTION_SPANS_MAX_SIZE> = 20;

        <com.android.server.InputMethodManagerService: int NOT_A_SUBTYPE_ID> = -1;

        <com.android.server.InputMethodManagerService: int MSG_UNBIND_METHOD> = 3000;

        <com.android.server.InputMethodManagerService: int MSG_UNBIND_INPUT> = 1000;

        <com.android.server.InputMethodManagerService: int MSG_START_INPUT> = 2000;

        <com.android.server.InputMethodManagerService: int MSG_SHOW_SOFT_INPUT> = 1020;

        <com.android.server.InputMethodManagerService: int MSG_SHOW_IM_SUBTYPE_PICKER> = 2;

        <com.android.server.InputMethodManagerService: int MSG_SHOW_IM_SUBTYPE_ENABLER> = 3;

        <com.android.server.InputMethodManagerService: int MSG_SHOW_IM_PICKER> = 1;

        <com.android.server.InputMethodManagerService: int MSG_SHOW_IM_CONFIG> = 4;

        <com.android.server.InputMethodManagerService: int MSG_SET_ACTIVE> = 3020;

        <com.android.server.InputMethodManagerService: int MSG_RESTART_INPUT> = 2010;

        <com.android.server.InputMethodManagerService: int MSG_HIDE_SOFT_INPUT> = 1030;

        <com.android.server.InputMethodManagerService: int MSG_HARD_KEYBOARD_SWITCH_CHANGED> = 4000;

        <com.android.server.InputMethodManagerService: int MSG_CREATE_SESSION> = 1050;

        <com.android.server.InputMethodManagerService: int MSG_BIND_METHOD> = 3010;

        <com.android.server.InputMethodManagerService: int MSG_BIND_INPUT> = 1010;

        <com.android.server.InputMethodManagerService: int MSG_ATTACH_TOKEN> = 1040;

        <com.android.server.InputMethodManagerService: boolean DEBUG> = 0;

        return;
    }
}
